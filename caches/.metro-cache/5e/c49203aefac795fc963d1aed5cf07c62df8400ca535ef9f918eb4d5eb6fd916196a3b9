{"dependencies":[{"name":"./flingGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"h24ijk3pJCmeakiNLvaxhU4oD+0=","exportNames":["*"]}},{"name":"./forceTouchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":56,"index":103}}],"key":"1QIx9s/Hb/tSlS4sC64N+Adyv7M=","exportNames":["*"]}},{"name":"./gestureComposition","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":141},"end":{"line":8,"column":30,"index":242}}],"key":"J0ugy1LMUGf5KgbYvNV+9auzxk4=","exportNames":["*"]}},{"name":"./longPressGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":243},"end":{"line":9,"column":54,"index":297}}],"key":"1o89s2ZbLCAJzQNlPSeE8o2+cH8=","exportNames":["*"]}},{"name":"./panGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":298},"end":{"line":10,"column":42,"index":340}}],"key":"aBzYQKsfDy415OM5yEWHEC+JvOM=","exportNames":["*"]}},{"name":"./pinchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":341},"end":{"line":11,"column":46,"index":387}}],"key":"Dpg/8aAltyIIC/a4wQAoQVMdkg4=","exportNames":["*"]}},{"name":"./rotationGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":388},"end":{"line":12,"column":52,"index":440}}],"key":"/7dx2ayCyD336a+OWcSLUeam5aE=","exportNames":["*"]}},{"name":"./tapGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":441},"end":{"line":13,"column":42,"index":483}}],"key":"0AhBYBLv6GsrGEF0r8aS4Nb6QGo=","exportNames":["*"]}},{"name":"./nativeGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":484},"end":{"line":14,"column":48,"index":532}}],"key":"cjDWt0y1Cq1VxsEGc4geilXmt0Q=","exportNames":["*"]}},{"name":"./manualGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":533},"end":{"line":15,"column":48,"index":581}}],"key":"HUWWiRL9QzXRRI3alfUEUrUAkqk=","exportNames":["*"]}},{"name":"./hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":582},"end":{"line":16,"column":46,"index":628}}],"key":"+OU9Hr4DiheWQiFQL42cwzfCmfI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureObjects = void 0;\n  var _flingGesture = require(_dependencyMap[0], \"./flingGesture\");\n  var _forceTouchGesture = require(_dependencyMap[1], \"./forceTouchGesture\");\n  var _gestureComposition = require(_dependencyMap[2], \"./gestureComposition\");\n  var _longPressGesture = require(_dependencyMap[3], \"./longPressGesture\");\n  var _panGesture = require(_dependencyMap[4], \"./panGesture\");\n  var _pinchGesture = require(_dependencyMap[5], \"./pinchGesture\");\n  var _rotationGesture = require(_dependencyMap[6], \"./rotationGesture\");\n  var _tapGesture = require(_dependencyMap[7], \"./tapGesture\");\n  var _nativeGesture = require(_dependencyMap[8], \"./nativeGesture\");\n  var _manualGesture = require(_dependencyMap[9], \"./manualGesture\");\n  var _hoverGesture = require(_dependencyMap[10], \"./hoverGesture\");\n  /**\n   * `Gesture` is the object that allows you to create and compose gestures.\n   *\n   * ### Remarks\n   * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n   */\n  var GestureObjects = exports.GestureObjects = {\n    /**\n     * A discrete gesture that recognizes one or many taps.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n     */\n    Tap: () => {\n      return new _tapGesture.TapGesture();\n    },\n    /**\n     * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n     */\n    Pan: () => {\n      return new _panGesture.PanGesture();\n    },\n    /**\n     * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n     */\n    Pinch: () => {\n      return new _pinchGesture.PinchGesture();\n    },\n    /**\n     * A continuous gesture that can recognize rotation and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n     */\n    Rotation: () => {\n      return new _rotationGesture.RotationGesture();\n    },\n    /**\n     * A discrete gesture that activates when the movement is sufficiently fast.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n     */\n    Fling: () => {\n      return new _flingGesture.FlingGesture();\n    },\n    /**\n     * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n     */\n    LongPress: () => {\n      return new _longPressGesture.LongPressGesture();\n    },\n    /**\n     * #### iOS only\n     * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n     */\n    ForceTouch: () => {\n      return new _forceTouchGesture.ForceTouchGesture();\n    },\n    /**\n     * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n     * When used, the other component should be the direct child of a `GestureDetector`.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n     */\n    Native: () => {\n      return new _nativeGesture.NativeGesture();\n    },\n    /**\n     * A plain gesture that has no specific activation criteria nor event data set.\n     * Its state has to be controlled manually using a state manager.\n     * It will not fail when all the pointers are lifted from the screen.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n     */\n    Manual: () => {\n      return new _manualGesture.ManualGesture();\n    },\n    /**\n     * A continuous gesture that can recognize hovering above the view it's attached to.\n     * The hover effect may be activated by moving a mouse or a stylus over the view.\n     *\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n     */\n    Hover: () => {\n      return new _hoverGesture.HoverGesture();\n    },\n    /**\n     * Builds a composed gesture consisting of gestures provided as parameters.\n     * The first one that becomes active cancels the rest of gestures.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n     */\n    Race: function () {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      return new _gestureComposition.ComposedGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture that allows all base gestures to run simultaneously.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n     */\n    Simultaneous() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      return new _gestureComposition.SimultaneousGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture where only one of the provided gestures can become active.\n     * Priority is decided through the order of gestures: the first one has higher priority\n     * than the second one, second one has higher priority than the third one, and so on.\n     * For example, to make a gesture that recognizes both single and double tap you need\n     * to call Exclusive(doubleTap, singleTap).\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n     */\n    Exclusive() {\n      for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        gestures[_key3] = arguments[_key3];\n      }\n      return new _gestureComposition.ExclusiveGesture(...gestures);\n    }\n  };\n});","lineCount":138,"map":[[6,2,1,0],[6,6,1,0,"_flingGesture"],[6,19,1,0],[6,22,1,0,"require"],[6,29,1,0],[6,30,1,0,"_dependencyMap"],[6,44,1,0],[7,2,2,0],[7,6,2,0,"_forceTouchGesture"],[7,24,2,0],[7,27,2,0,"require"],[7,34,2,0],[7,35,2,0,"_dependencyMap"],[7,49,2,0],[8,2,4,0],[8,6,4,0,"_gestureComposition"],[8,25,4,0],[8,28,4,0,"require"],[8,35,4,0],[8,36,4,0,"_dependencyMap"],[8,50,4,0],[9,2,9,0],[9,6,9,0,"_longPressGesture"],[9,23,9,0],[9,26,9,0,"require"],[9,33,9,0],[9,34,9,0,"_dependencyMap"],[9,48,9,0],[10,2,10,0],[10,6,10,0,"_panGesture"],[10,17,10,0],[10,20,10,0,"require"],[10,27,10,0],[10,28,10,0,"_dependencyMap"],[10,42,10,0],[11,2,11,0],[11,6,11,0,"_pinchGesture"],[11,19,11,0],[11,22,11,0,"require"],[11,29,11,0],[11,30,11,0,"_dependencyMap"],[11,44,11,0],[12,2,12,0],[12,6,12,0,"_rotationGesture"],[12,22,12,0],[12,25,12,0,"require"],[12,32,12,0],[12,33,12,0,"_dependencyMap"],[12,47,12,0],[13,2,13,0],[13,6,13,0,"_tapGesture"],[13,17,13,0],[13,20,13,0,"require"],[13,27,13,0],[13,28,13,0,"_dependencyMap"],[13,42,13,0],[14,2,14,0],[14,6,14,0,"_nativeGesture"],[14,20,14,0],[14,23,14,0,"require"],[14,30,14,0],[14,31,14,0,"_dependencyMap"],[14,45,14,0],[15,2,15,0],[15,6,15,0,"_manualGesture"],[15,20,15,0],[15,23,15,0,"require"],[15,30,15,0],[15,31,15,0,"_dependencyMap"],[15,45,15,0],[16,2,16,0],[16,6,16,0,"_hoverGesture"],[16,19,16,0],[16,22,16,0,"require"],[16,29,16,0],[16,30,16,0,"_dependencyMap"],[16,44,16,0],[17,2,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,0,24,0],[24,0,25,0],[25,2,26,7],[25,6,26,13,"GestureObjects"],[25,20,26,27],[25,23,26,27,"exports"],[25,30,26,27],[25,31,26,27,"GestureObjects"],[25,45,26,27],[25,48,26,30],[26,4,27,2],[27,0,28,0],[28,0,29,0],[29,0,30,0],[30,4,31,2,"Tap"],[30,7,31,5],[30,9,31,7,"Tap"],[30,10,31,7],[30,15,31,13],[31,6,32,4],[31,13,32,11],[31,17,32,15,"TapGesture"],[31,39,32,25],[31,40,32,26],[31,41,32,27],[32,4,33,2],[32,5,33,3],[33,4,35,2],[34,0,36,0],[35,0,37,0],[36,0,38,0],[37,4,39,2,"Pan"],[37,7,39,5],[37,9,39,7,"Pan"],[37,10,39,7],[37,15,39,13],[38,6,40,4],[38,13,40,11],[38,17,40,15,"PanGesture"],[38,39,40,25],[38,40,40,26],[38,41,40,27],[39,4,41,2],[39,5,41,3],[40,4,43,2],[41,0,44,0],[42,0,45,0],[43,0,46,0],[44,4,47,2,"Pinch"],[44,9,47,7],[44,11,47,9,"Pinch"],[44,12,47,9],[44,17,47,15],[45,6,48,4],[45,13,48,11],[45,17,48,15,"PinchGesture"],[45,43,48,27],[45,44,48,28],[45,45,48,29],[46,4,49,2],[46,5,49,3],[47,4,51,2],[48,0,52,0],[49,0,53,0],[50,0,54,0],[51,4,55,2,"Rotation"],[51,12,55,10],[51,14,55,12,"Rotation"],[51,15,55,12],[51,20,55,18],[52,6,56,4],[52,13,56,11],[52,17,56,15,"RotationGesture"],[52,49,56,30],[52,50,56,31],[52,51,56,32],[53,4,57,2],[53,5,57,3],[54,4,59,2],[55,0,60,0],[56,0,61,0],[57,0,62,0],[58,4,63,2,"Fling"],[58,9,63,7],[58,11,63,9,"Fling"],[58,12,63,9],[58,17,63,15],[59,6,64,4],[59,13,64,11],[59,17,64,15,"FlingGesture"],[59,43,64,27],[59,44,64,28],[59,45,64,29],[60,4,65,2],[60,5,65,3],[61,4,67,2],[62,0,68,0],[63,0,69,0],[64,0,70,0],[65,4,71,2,"LongPress"],[65,13,71,11],[65,15,71,13,"LongPress"],[65,16,71,13],[65,21,71,19],[66,6,72,4],[66,13,72,11],[66,17,72,15,"LongPressGesture"],[66,51,72,31],[66,52,72,32],[66,53,72,33],[67,4,73,2],[67,5,73,3],[68,4,75,2],[69,0,76,0],[70,0,77,0],[71,0,78,0],[72,0,79,0],[73,4,80,2,"ForceTouch"],[73,14,80,12],[73,16,80,14,"ForceTouch"],[73,17,80,14],[73,22,80,20],[74,6,81,4],[74,13,81,11],[74,17,81,15,"ForceTouchGesture"],[74,53,81,32],[74,54,81,33],[74,55,81,34],[75,4,82,2],[75,5,82,3],[76,4,84,2],[77,0,85,0],[78,0,86,0],[79,0,87,0],[80,0,88,0],[81,4,89,2,"Native"],[81,10,89,8],[81,12,89,10,"Native"],[81,13,89,10],[81,18,89,16],[82,6,90,4],[82,13,90,11],[82,17,90,15,"NativeGesture"],[82,45,90,28],[82,46,90,29],[82,47,90,30],[83,4,91,2],[83,5,91,3],[84,4,93,2],[85,0,94,0],[86,0,95,0],[87,0,96,0],[88,0,97,0],[89,0,98,0],[90,4,99,2,"Manual"],[90,10,99,8],[90,12,99,10,"Manual"],[90,13,99,10],[90,18,99,16],[91,6,100,4],[91,13,100,11],[91,17,100,15,"ManualGesture"],[91,45,100,28],[91,46,100,29],[91,47,100,30],[92,4,101,2],[92,5,101,3],[93,4,103,2],[94,0,104,0],[95,0,105,0],[96,0,106,0],[97,0,107,0],[98,0,108,0],[99,4,109,2,"Hover"],[99,9,109,7],[99,11,109,9,"Hover"],[99,12,109,9],[99,17,109,15],[100,6,110,4],[100,13,110,11],[100,17,110,15,"HoverGesture"],[100,43,110,27],[100,44,110,28],[100,45,110,29],[101,4,111,2],[101,5,111,3],[102,4,113,2],[103,0,114,0],[104,0,115,0],[105,0,116,0],[106,0,117,0],[107,4,118,2,"Race"],[107,8,118,6],[107,10,118,8],[107,19,118,8,"Race"],[107,20,118,8],[107,22,118,36],[108,6,118,36],[108,15,118,36,"_len"],[108,19,118,36],[108,22,118,36,"arguments"],[108,31,118,36],[108,32,118,36,"length"],[108,38,118,36],[108,40,118,12,"gestures"],[108,48,118,20],[108,55,118,20,"Array"],[108,60,118,20],[108,61,118,20,"_len"],[108,65,118,20],[108,68,118,20,"_key"],[108,72,118,20],[108,78,118,20,"_key"],[108,82,118,20],[108,85,118,20,"_len"],[108,89,118,20],[108,91,118,20,"_key"],[108,95,118,20],[109,8,118,12,"gestures"],[109,16,118,20],[109,17,118,20,"_key"],[109,21,118,20],[109,25,118,20,"arguments"],[109,34,118,20],[109,35,118,20,"_key"],[109,39,118,20],[110,6,118,20],[111,6,119,4],[111,13,119,11],[111,17,119,15,"ComposedGesture"],[111,52,119,30],[111,53,119,31],[111,56,119,34,"gestures"],[111,64,119,42],[111,65,119,43],[112,4,120,2],[112,5,120,3],[113,4,122,2],[114,0,123,0],[115,0,124,0],[116,0,125,0],[117,4,126,2,"Simultaneous"],[117,16,126,14,"Simultaneous"],[117,17,126,14],[117,19,126,39],[118,6,126,39],[118,15,126,39,"_len2"],[118,20,126,39],[118,23,126,39,"arguments"],[118,32,126,39],[118,33,126,39,"length"],[118,39,126,39],[118,41,126,18,"gestures"],[118,49,126,26],[118,56,126,26,"Array"],[118,61,126,26],[118,62,126,26,"_len2"],[118,67,126,26],[118,70,126,26,"_key2"],[118,75,126,26],[118,81,126,26,"_key2"],[118,86,126,26],[118,89,126,26,"_len2"],[118,94,126,26],[118,96,126,26,"_key2"],[118,101,126,26],[119,8,126,18,"gestures"],[119,16,126,26],[119,17,126,26,"_key2"],[119,22,126,26],[119,26,126,26,"arguments"],[119,35,126,26],[119,36,126,26,"_key2"],[119,41,126,26],[120,6,126,26],[121,6,127,4],[121,13,127,11],[121,17,127,15,"SimultaneousGesture"],[121,56,127,34],[121,57,127,35],[121,60,127,38,"gestures"],[121,68,127,46],[121,69,127,47],[122,4,128,2],[122,5,128,3],[123,4,130,2],[124,0,131,0],[125,0,132,0],[126,0,133,0],[127,0,134,0],[128,0,135,0],[129,0,136,0],[130,0,137,0],[131,4,138,2,"Exclusive"],[131,13,138,11,"Exclusive"],[131,14,138,11],[131,16,138,36],[132,6,138,36],[132,15,138,36,"_len3"],[132,20,138,36],[132,23,138,36,"arguments"],[132,32,138,36],[132,33,138,36,"length"],[132,39,138,36],[132,41,138,15,"gestures"],[132,49,138,23],[132,56,138,23,"Array"],[132,61,138,23],[132,62,138,23,"_len3"],[132,67,138,23],[132,70,138,23,"_key3"],[132,75,138,23],[132,81,138,23,"_key3"],[132,86,138,23],[132,89,138,23,"_len3"],[132,94,138,23],[132,96,138,23,"_key3"],[132,101,138,23],[133,8,138,15,"gestures"],[133,16,138,23],[133,17,138,23,"_key3"],[133,22,138,23],[133,26,138,23,"arguments"],[133,35,138,23],[133,36,138,23,"_key3"],[133,41,138,23],[134,6,138,23],[135,6,139,4],[135,13,139,11],[135,17,139,15,"ExclusiveGesture"],[135,53,139,31],[135,54,139,32],[135,57,139,35,"gestures"],[135,65,139,43],[135,66,139,44],[136,4,140,2],[137,2,141,0],[137,3,141,1],[138,0,141,2],[138,3]],"functionMap":{"names":["<global>","GestureObjects.Tap","GestureObjects.Pan","GestureObjects.Pinch","GestureObjects.Rotation","GestureObjects.Fling","GestureObjects.LongPress","GestureObjects.ForceTouch","GestureObjects.Native","GestureObjects.Manual","GestureObjects.Hover","GestureObjects.Race","GestureObjects.Simultaneous","GestureObjects.Exclusive"],"mappings":"AAA;OC8B;GDE;OEM;GFE;SGM;GHE;YIM;GJE;SKM;GLE;aMM;GNE;cOO;GPE;UQO;GRE;USQ;GTE;SUQ;GVE;QWO;GXE;EYM;GZE;EaU;GbE"}},"type":"js/module"}]}