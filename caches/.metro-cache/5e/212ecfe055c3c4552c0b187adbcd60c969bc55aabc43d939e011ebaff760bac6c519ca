{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@supabase/functions-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":23,"index":100},"end":{"line":3,"column":56,"index":133}}],"key":"glpf6oTP7di01DC4h74kjG9zUk8=","exportNames":["*"]}},{"name":"@supabase/postgrest-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":23,"index":158},"end":{"line":4,"column":56,"index":191}}],"key":"cL6u/nzyiUXVZ5YxlIegXtn34JQ=","exportNames":["*"]}},{"name":"@supabase/realtime-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":22,"index":215},"end":{"line":5,"column":54,"index":247}}],"key":"ufvOE+4NpNY3D4MWUjApZQJLO+w=","exportNames":["*"]}},{"name":"@supabase/storage-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":21,"index":270},"end":{"line":6,"column":52,"index":301}}],"key":"QxvtUmCIxi2sN/azuKOSJ477D7U=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":323},"end":{"line":7,"column":46,"index":349}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":16,"index":367},"end":{"line":8,"column":38,"index":389}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":18,"index":409},"end":{"line":9,"column":42,"index":433}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"]}},{"name":"./lib/SupabaseAuthClient","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":29,"index":464},"end":{"line":10,"column":64,"index":499}}],"key":"1AnNupT1kuXoI5Q2fZ4eDSG6OJQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var functions_js_1 = require(_dependencyMap[3], \"@supabase/functions-js\");\n  var postgrest_js_1 = require(_dependencyMap[4], \"@supabase/postgrest-js\");\n  var realtime_js_1 = require(_dependencyMap[5], \"@supabase/realtime-js\");\n  var storage_js_1 = require(_dependencyMap[6], \"@supabase/storage-js\");\n  var constants_1 = require(_dependencyMap[7], \"./lib/constants\");\n  var fetch_1 = require(_dependencyMap[8], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[9], \"./lib/helpers\");\n  var SupabaseAuthClient_1 = require(_dependencyMap[10], \"./lib/SupabaseAuthClient\");\n  /**\n   * Supabase Client.\n   *\n   * An isomorphic Javascript client for interacting with Postgres.\n   */\n  var SupabaseClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    function SupabaseClient(supabaseUrl, supabaseKey, options) {\n      _classCallCheck(this, SupabaseClient);\n      var _a, _b, _c;\n      this.supabaseUrl = supabaseUrl;\n      this.supabaseKey = supabaseKey;\n      var baseUrl = (0, helpers_1.validateSupabaseUrl)(supabaseUrl);\n      if (!supabaseKey) throw new Error('supabaseKey is required.');\n      this.realtimeUrl = new URL('realtime/v1', baseUrl);\n      this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n      this.authUrl = new URL('auth/v1', baseUrl);\n      this.storageUrl = new URL('storage/v1', baseUrl);\n      this.functionsUrl = new URL('functions/v1', baseUrl);\n      // default storage key uses the supabase project ref as a namespace\n      var defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n      var DEFAULTS = {\n        db: constants_1.DEFAULT_DB_OPTIONS,\n        realtime: constants_1.DEFAULT_REALTIME_OPTIONS,\n        auth: Object.assign(Object.assign({}, constants_1.DEFAULT_AUTH_OPTIONS), {\n          storageKey: defaultStorageKey\n        }),\n        global: constants_1.DEFAULT_GLOBAL_OPTIONS\n      };\n      var settings = (0, helpers_1.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n      if (!settings.accessToken) {\n        this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n      } else {\n        this.accessToken = settings.accessToken;\n        this.auth = new Proxy({}, {\n          get: (_, prop) => {\n            throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n          }\n        });\n      }\n      this.fetch = (0, fetch_1.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n      this.realtime = this._initRealtimeClient(Object.assign({\n        headers: this.headers,\n        accessToken: this._getAccessToken.bind(this)\n      }, settings.realtime));\n      this.rest = new postgrest_js_1.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n        headers: this.headers,\n        schema: settings.db.schema,\n        fetch: this.fetch\n      });\n      this.storage = new storage_js_1.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n      if (!settings.accessToken) {\n        this._listenForAuthEvents();\n      }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    return _createClass(SupabaseClient, [{\n      key: \"functions\",\n      get: function () {\n        return new functions_js_1.FunctionsClient(this.functionsUrl.href, {\n          headers: this.headers,\n          customFetch: this.fetch\n        });\n      }\n      /**\n       * Perform a query on a table or a view.\n       *\n       * @param relation - The table or view name to query\n       */\n    }, {\n      key: \"from\",\n      value: function from(relation) {\n        return this.rest.from(relation);\n      }\n      // NOTE: signatures must be kept in sync with PostgrestClient.schema\n      /**\n       * Select a schema to query or perform an function (rpc) call.\n       *\n       * The schema needs to be on the list of exposed schemas inside Supabase.\n       *\n       * @param schema - The schema to query\n       */\n    }, {\n      key: \"schema\",\n      value: function schema(_schema) {\n        return this.rest.schema(_schema);\n      }\n      // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n      /**\n       * Perform a function call.\n       *\n       * @param fn - The function name to call\n       * @param args - The arguments to pass to the function call\n       * @param options - Named parameters\n       * @param options.head - When set to `true`, `data` will not be returned.\n       * Useful if you only need the count.\n       * @param options.get - When set to `true`, the function will be called with\n       * read-only access mode.\n       * @param options.count - Count algorithm to use to count rows returned by the\n       * function. Only applicable for [set-returning\n       * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n       *\n       * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n       * hood.\n       *\n       * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n       * statistics under the hood.\n       *\n       * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n       * numbers.\n       */\n    }, {\n      key: \"rpc\",\n      value: function rpc(fn) {\n        var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n          head: false,\n          get: false,\n          count: undefined\n        };\n        return this.rest.rpc(fn, args, options);\n      }\n      /**\n       * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n       *\n       * @param {string} name - The name of the Realtime channel.\n       * @param {Object} opts - The options to pass to the Realtime channel.\n       *\n       */\n    }, {\n      key: \"channel\",\n      value: function channel(name) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          config: {}\n        };\n        return this.realtime.channel(name, opts);\n      }\n      /**\n       * Returns all Realtime channels.\n       */\n    }, {\n      key: \"getChannels\",\n      value: function getChannels() {\n        return this.realtime.getChannels();\n      }\n      /**\n       * Unsubscribes and removes Realtime channel from Realtime client.\n       *\n       * @param {RealtimeChannel} channel - The name of the Realtime channel.\n       *\n       */\n    }, {\n      key: \"removeChannel\",\n      value: function removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n      }\n      /**\n       * Unsubscribes and removes all Realtime channels from Realtime client.\n       */\n    }, {\n      key: \"removeAllChannels\",\n      value: function removeAllChannels() {\n        return this.realtime.removeAllChannels();\n      }\n    }, {\n      key: \"_getAccessToken\",\n      value: function () {\n        var _getAccessToken2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          if (this.accessToken) {\n            return yield this.accessToken();\n          }\n          var _yield$this$auth$getS = yield this.auth.getSession(),\n            data = _yield$this$auth$getS.data;\n          return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        });\n        function _getAccessToken() {\n          return _getAccessToken2.apply(this, arguments);\n        }\n        return _getAccessToken;\n      }()\n    }, {\n      key: \"_initSupabaseAuthClient\",\n      value: function _initSupabaseAuthClient(_ref, headers, fetch) {\n        var autoRefreshToken = _ref.autoRefreshToken,\n          persistSession = _ref.persistSession,\n          detectSessionInUrl = _ref.detectSessionInUrl,\n          storage = _ref.storage,\n          userStorage = _ref.userStorage,\n          storageKey = _ref.storageKey,\n          flowType = _ref.flowType,\n          lock = _ref.lock,\n          debug = _ref.debug;\n        var authHeaders = {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          apikey: `${this.supabaseKey}`\n        };\n        return new SupabaseAuthClient_1.SupabaseAuthClient({\n          url: this.authUrl.href,\n          headers: Object.assign(Object.assign({}, authHeaders), headers),\n          storageKey: storageKey,\n          autoRefreshToken,\n          persistSession,\n          detectSessionInUrl,\n          storage,\n          userStorage,\n          flowType,\n          lock,\n          debug,\n          fetch,\n          // auth checks if there is a custom authorizaiton header using this flag\n          // so it knows whether to return an error when getUser is called with no session\n          hasCustomAuthorizationHeader: Object.keys(this.headers).some(key => key.toLowerCase() === 'authorization')\n        });\n      }\n    }, {\n      key: \"_initRealtimeClient\",\n      value: function _initRealtimeClient(options) {\n        return new realtime_js_1.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), {\n          params: Object.assign({\n            apikey: this.supabaseKey\n          }, options === null || options === void 0 ? void 0 : options.params)\n        }));\n      }\n    }, {\n      key: \"_listenForAuthEvents\",\n      value: function _listenForAuthEvents() {\n        var data = this.auth.onAuthStateChange((event, session) => {\n          this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n      }\n    }, {\n      key: \"_handleTokenChanged\",\n      value: function _handleTokenChanged(event, source, token) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n          this.changedAccessToken = token;\n          this.realtime.setAuth(token);\n        } else if (event === 'SIGNED_OUT') {\n          this.realtime.setAuth();\n          if (source == 'STORAGE') this.auth.signOut();\n          this.changedAccessToken = undefined;\n        }\n      }\n    }]);\n  }();\n  exports.default = SupabaseClient;\n});","lineCount":281,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[7,2,2,0,"Object"],[7,8,2,6],[7,9,2,7,"defineProperty"],[7,23,2,21],[7,24,2,22,"exports"],[7,31,2,29],[7,33,2,31],[7,45,2,43],[7,47,2,45],[8,4,2,47,"value"],[8,9,2,52],[8,11,2,54],[9,2,2,59],[9,3,2,60],[9,4,2,61],[10,2,3,0],[10,6,3,6,"functions_js_1"],[10,20,3,20],[10,23,3,23,"require"],[10,30,3,30],[10,31,3,30,"_dependencyMap"],[10,45,3,30],[10,74,3,55],[10,75,3,56],[11,2,4,0],[11,6,4,6,"postgrest_js_1"],[11,20,4,20],[11,23,4,23,"require"],[11,30,4,30],[11,31,4,30,"_dependencyMap"],[11,45,4,30],[11,74,4,55],[11,75,4,56],[12,2,5,0],[12,6,5,6,"realtime_js_1"],[12,19,5,19],[12,22,5,22,"require"],[12,29,5,29],[12,30,5,29,"_dependencyMap"],[12,44,5,29],[12,72,5,53],[12,73,5,54],[13,2,6,0],[13,6,6,6,"storage_js_1"],[13,18,6,18],[13,21,6,21,"require"],[13,28,6,28],[13,29,6,28,"_dependencyMap"],[13,43,6,28],[13,70,6,51],[13,71,6,52],[14,2,7,0],[14,6,7,6,"constants_1"],[14,17,7,17],[14,20,7,20,"require"],[14,27,7,27],[14,28,7,27,"_dependencyMap"],[14,42,7,27],[14,64,7,45],[14,65,7,46],[15,2,8,0],[15,6,8,6,"fetch_1"],[15,13,8,13],[15,16,8,16,"require"],[15,23,8,23],[15,24,8,23,"_dependencyMap"],[15,38,8,23],[15,56,8,37],[15,57,8,38],[16,2,9,0],[16,6,9,6,"helpers_1"],[16,15,9,15],[16,18,9,18,"require"],[16,25,9,25],[16,26,9,25,"_dependencyMap"],[16,40,9,25],[16,60,9,41],[16,61,9,42],[17,2,10,0],[17,6,10,6,"SupabaseAuthClient_1"],[17,26,10,26],[17,29,10,29,"require"],[17,36,10,36],[17,37,10,36,"_dependencyMap"],[17,51,10,36],[17,83,10,63],[17,84,10,64],[18,2,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,2,11,0],[23,6,16,6,"SupabaseClient"],[23,20,16,20],[24,4,17,4],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,4,30,4],[37,13,30,4,"SupabaseClient"],[37,28,30,16,"supabaseUrl"],[37,39,30,27],[37,41,30,29,"supabaseKey"],[37,52,30,40],[37,54,30,42,"options"],[37,61,30,49],[37,63,30,51],[38,6,30,51,"_classCallCheck"],[38,21,30,51],[38,28,30,51,"SupabaseClient"],[38,42,30,51],[39,6,31,8],[39,10,31,12,"_a"],[39,12,31,14],[39,14,31,16,"_b"],[39,16,31,18],[39,18,31,20,"_c"],[39,20,31,22],[40,6,32,8],[40,10,32,12],[40,11,32,13,"supabaseUrl"],[40,22,32,24],[40,25,32,27,"supabaseUrl"],[40,36,32,38],[41,6,33,8],[41,10,33,12],[41,11,33,13,"supabaseKey"],[41,22,33,24],[41,25,33,27,"supabaseKey"],[41,36,33,38],[42,6,34,8],[42,10,34,14,"baseUrl"],[42,17,34,21],[42,20,34,24],[42,21,34,25],[42,22,34,26],[42,24,34,28,"helpers_1"],[42,33,34,37],[42,34,34,38,"validateSupabaseUrl"],[42,53,34,57],[42,55,34,59,"supabaseUrl"],[42,66,34,70],[42,67,34,71],[43,6,35,8],[43,10,35,12],[43,11,35,13,"supabaseKey"],[43,22,35,24],[43,24,36,12],[43,30,36,18],[43,34,36,22,"Error"],[43,39,36,27],[43,40,36,28],[43,66,36,54],[43,67,36,55],[44,6,37,8],[44,10,37,12],[44,11,37,13,"realtimeUrl"],[44,22,37,24],[44,25,37,27],[44,29,37,31,"URL"],[44,32,37,34],[44,33,37,35],[44,46,37,48],[44,48,37,50,"baseUrl"],[44,55,37,57],[44,56,37,58],[45,6,38,8],[45,10,38,12],[45,11,38,13,"realtimeUrl"],[45,22,38,24],[45,23,38,25,"protocol"],[45,31,38,33],[45,34,38,36],[45,38,38,40],[45,39,38,41,"realtimeUrl"],[45,50,38,52],[45,51,38,53,"protocol"],[45,59,38,61],[45,60,38,62,"replace"],[45,67,38,69],[45,68,38,70],[45,74,38,76],[45,76,38,78],[45,80,38,82],[45,81,38,83],[46,6,39,8],[46,10,39,12],[46,11,39,13,"authUrl"],[46,18,39,20],[46,21,39,23],[46,25,39,27,"URL"],[46,28,39,30],[46,29,39,31],[46,38,39,40],[46,40,39,42,"baseUrl"],[46,47,39,49],[46,48,39,50],[47,6,40,8],[47,10,40,12],[47,11,40,13,"storageUrl"],[47,21,40,23],[47,24,40,26],[47,28,40,30,"URL"],[47,31,40,33],[47,32,40,34],[47,44,40,46],[47,46,40,48,"baseUrl"],[47,53,40,55],[47,54,40,56],[48,6,41,8],[48,10,41,12],[48,11,41,13,"functionsUrl"],[48,23,41,25],[48,26,41,28],[48,30,41,32,"URL"],[48,33,41,35],[48,34,41,36],[48,48,41,50],[48,50,41,52,"baseUrl"],[48,57,41,59],[48,58,41,60],[49,6,42,8],[50,6,43,8],[50,10,43,14,"defaultStorageKey"],[50,27,43,31],[50,30,43,34],[50,36,43,40,"baseUrl"],[50,43,43,47],[50,44,43,48,"hostname"],[50,52,43,56],[50,53,43,57,"split"],[50,58,43,62],[50,59,43,63],[50,62,43,66],[50,63,43,67],[50,64,43,68],[50,65,43,69],[50,66,43,70],[50,79,43,83],[51,6,44,8],[51,10,44,14,"DEFAULTS"],[51,18,44,22],[51,21,44,25],[52,8,45,12,"db"],[52,10,45,14],[52,12,45,16,"constants_1"],[52,23,45,27],[52,24,45,28,"DEFAULT_DB_OPTIONS"],[52,42,45,46],[53,8,46,12,"realtime"],[53,16,46,20],[53,18,46,22,"constants_1"],[53,29,46,33],[53,30,46,34,"DEFAULT_REALTIME_OPTIONS"],[53,54,46,58],[54,8,47,12,"auth"],[54,12,47,16],[54,14,47,18,"Object"],[54,20,47,24],[54,21,47,25,"assign"],[54,27,47,31],[54,28,47,32,"Object"],[54,34,47,38],[54,35,47,39,"assign"],[54,41,47,45],[54,42,47,46],[54,43,47,47],[54,44,47,48],[54,46,47,50,"constants_1"],[54,57,47,61],[54,58,47,62,"DEFAULT_AUTH_OPTIONS"],[54,78,47,82],[54,79,47,83],[54,81,47,85],[55,10,47,87,"storageKey"],[55,20,47,97],[55,22,47,99,"defaultStorageKey"],[56,8,47,117],[56,9,47,118],[56,10,47,119],[57,8,48,12,"global"],[57,14,48,18],[57,16,48,20,"constants_1"],[57,27,48,31],[57,28,48,32,"DEFAULT_GLOBAL_OPTIONS"],[58,6,49,8],[58,7,49,9],[59,6,50,8],[59,10,50,14,"settings"],[59,18,50,22],[59,21,50,25],[59,22,50,26],[59,23,50,27],[59,25,50,29,"helpers_1"],[59,34,50,38],[59,35,50,39,"applySettingDefaults"],[59,55,50,59],[59,57,50,61,"options"],[59,64,50,68],[59,69,50,73],[59,73,50,77],[59,77,50,81,"options"],[59,84,50,88],[59,89,50,93],[59,94,50,98],[59,95,50,99],[59,98,50,102,"options"],[59,105,50,109],[59,108,50,112],[59,109,50,113],[59,110,50,114],[59,112,50,116,"DEFAULTS"],[59,120,50,124],[59,121,50,125],[60,6,51,8],[60,10,51,12],[60,11,51,13,"storageKey"],[60,21,51,23],[60,24,51,26],[60,25,51,27,"_a"],[60,27,51,29],[60,30,51,32,"settings"],[60,38,51,40],[60,39,51,41,"auth"],[60,43,51,45],[60,44,51,46,"storageKey"],[60,54,51,56],[60,60,51,62],[60,64,51,66],[60,68,51,70,"_a"],[60,70,51,72],[60,75,51,77],[60,80,51,82],[60,81,51,83],[60,84,51,86,"_a"],[60,86,51,88],[60,89,51,91],[60,91,51,93],[61,6,52,8],[61,10,52,12],[61,11,52,13,"headers"],[61,18,52,20],[61,21,52,23],[61,22,52,24,"_b"],[61,24,52,26],[61,27,52,29,"settings"],[61,35,52,37],[61,36,52,38,"global"],[61,42,52,44],[61,43,52,45,"headers"],[61,50,52,52],[61,56,52,58],[61,60,52,62],[61,64,52,66,"_b"],[61,66,52,68],[61,71,52,73],[61,76,52,78],[61,77,52,79],[61,80,52,82,"_b"],[61,82,52,84],[61,85,52,87],[61,86,52,88],[61,87,52,89],[62,6,53,8],[62,10,53,12],[62,11,53,13,"settings"],[62,19,53,21],[62,20,53,22,"accessToken"],[62,31,53,33],[62,33,53,35],[63,8,54,12],[63,12,54,16],[63,13,54,17,"auth"],[63,17,54,21],[63,20,54,24],[63,24,54,28],[63,25,54,29,"_initSupabaseAuthClient"],[63,48,54,52],[63,49,54,53],[63,50,54,54,"_c"],[63,52,54,56],[63,55,54,59,"settings"],[63,63,54,67],[63,64,54,68,"auth"],[63,68,54,72],[63,74,54,78],[63,78,54,82],[63,82,54,86,"_c"],[63,84,54,88],[63,89,54,93],[63,94,54,98],[63,95,54,99],[63,98,54,102,"_c"],[63,100,54,104],[63,103,54,107],[63,104,54,108],[63,105,54,109],[63,107,54,111],[63,111,54,115],[63,112,54,116,"headers"],[63,119,54,123],[63,121,54,125,"settings"],[63,129,54,133],[63,130,54,134,"global"],[63,136,54,140],[63,137,54,141,"fetch"],[63,142,54,146],[63,143,54,147],[64,6,55,8],[64,7,55,9],[64,13,56,13],[65,8,57,12],[65,12,57,16],[65,13,57,17,"accessToken"],[65,24,57,28],[65,27,57,31,"settings"],[65,35,57,39],[65,36,57,40,"accessToken"],[65,47,57,51],[66,8,58,12],[66,12,58,16],[66,13,58,17,"auth"],[66,17,58,21],[66,20,58,24],[66,24,58,28,"Proxy"],[66,29,58,33],[66,30,58,34],[66,31,58,35],[66,32,58,36],[66,34,58,38],[67,10,59,16,"get"],[67,13,59,19],[67,15,59,21,"get"],[67,16,59,22,"_"],[67,17,59,23],[67,19,59,25,"prop"],[67,23,59,29],[67,28,59,34],[68,12,60,20],[68,18,60,26],[68,22,60,30,"Error"],[68,27,60,35],[68,28,60,36],[68,137,60,145,"String"],[68,143,60,151],[68,144,60,152,"prop"],[68,148,60,156],[68,149,60,157],[68,167,60,175],[68,168,60,176],[69,10,61,16],[70,8,62,12],[70,9,62,13],[70,10,62,14],[71,6,63,8],[72,6,64,8],[72,10,64,12],[72,11,64,13,"fetch"],[72,16,64,18],[72,19,64,21],[72,20,64,22],[72,21,64,23],[72,23,64,25,"fetch_1"],[72,30,64,32],[72,31,64,33,"fetchWithAuth"],[72,44,64,46],[72,46,64,48,"supabaseKey"],[72,57,64,59],[72,59,64,61],[72,63,64,65],[72,64,64,66,"_getAccessToken"],[72,79,64,81],[72,80,64,82,"bind"],[72,84,64,86],[72,85,64,87],[72,89,64,91],[72,90,64,92],[72,92,64,94,"settings"],[72,100,64,102],[72,101,64,103,"global"],[72,107,64,109],[72,108,64,110,"fetch"],[72,113,64,115],[72,114,64,116],[73,6,65,8],[73,10,65,12],[73,11,65,13,"realtime"],[73,19,65,21],[73,22,65,24],[73,26,65,28],[73,27,65,29,"_initRealtimeClient"],[73,46,65,48],[73,47,65,49,"Object"],[73,53,65,55],[73,54,65,56,"assign"],[73,60,65,62],[73,61,65,63],[74,8,65,65,"headers"],[74,15,65,72],[74,17,65,74],[74,21,65,78],[74,22,65,79,"headers"],[74,29,65,86],[75,8,65,88,"accessToken"],[75,19,65,99],[75,21,65,101],[75,25,65,105],[75,26,65,106,"_getAccessToken"],[75,41,65,121],[75,42,65,122,"bind"],[75,46,65,126],[75,47,65,127],[75,51,65,131],[76,6,65,133],[76,7,65,134],[76,9,65,136,"settings"],[76,17,65,144],[76,18,65,145,"realtime"],[76,26,65,153],[76,27,65,154],[76,28,65,155],[77,6,66,8],[77,10,66,12],[77,11,66,13,"rest"],[77,15,66,17],[77,18,66,20],[77,22,66,24,"postgrest_js_1"],[77,36,66,38],[77,37,66,39,"PostgrestClient"],[77,52,66,54],[77,53,66,55],[77,57,66,59,"URL"],[77,60,66,62],[77,61,66,63],[77,70,66,72],[77,72,66,74,"baseUrl"],[77,79,66,81],[77,80,66,82],[77,81,66,83,"href"],[77,85,66,87],[77,87,66,89],[78,8,67,12,"headers"],[78,15,67,19],[78,17,67,21],[78,21,67,25],[78,22,67,26,"headers"],[78,29,67,33],[79,8,68,12,"schema"],[79,14,68,18],[79,16,68,20,"settings"],[79,24,68,28],[79,25,68,29,"db"],[79,27,68,31],[79,28,68,32,"schema"],[79,34,68,38],[80,8,69,12,"fetch"],[80,13,69,17],[80,15,69,19],[80,19,69,23],[80,20,69,24,"fetch"],[81,6,70,8],[81,7,70,9],[81,8,70,10],[82,6,71,8],[82,10,71,12],[82,11,71,13,"storage"],[82,18,71,20],[82,21,71,23],[82,25,71,27,"storage_js_1"],[82,37,71,39],[82,38,71,40,"StorageClient"],[82,51,71,53],[82,52,71,54],[82,56,71,58],[82,57,71,59,"storageUrl"],[82,67,71,69],[82,68,71,70,"href"],[82,72,71,74],[82,74,71,76],[82,78,71,80],[82,79,71,81,"headers"],[82,86,71,88],[82,88,71,90],[82,92,71,94],[82,93,71,95,"fetch"],[82,98,71,100],[82,100,71,102,"options"],[82,107,71,109],[82,112,71,114],[82,116,71,118],[82,120,71,122,"options"],[82,127,71,129],[82,132,71,134],[82,137,71,139],[82,138,71,140],[82,141,71,143],[82,146,71,148],[82,147,71,149],[82,150,71,152,"options"],[82,157,71,159],[82,158,71,160,"storage"],[82,165,71,167],[82,166,71,168],[83,6,72,8],[83,10,72,12],[83,11,72,13,"settings"],[83,19,72,21],[83,20,72,22,"accessToken"],[83,31,72,33],[83,33,72,35],[84,8,73,12],[84,12,73,16],[84,13,73,17,"_listenForAuthEvents"],[84,33,73,37],[84,34,73,38],[84,35,73,39],[85,6,74,8],[86,4,75,4],[87,4,76,4],[88,0,77,0],[89,0,78,0],[90,4,76,4],[90,11,76,4,"_createClass"],[90,23,76,4],[90,24,76,4,"SupabaseClient"],[90,38,76,4],[91,6,76,4,"key"],[91,9,76,4],[92,6,76,4,"get"],[92,9,76,4],[92,11,79,4],[92,20,79,4,"get"],[92,21,79,4],[92,23,79,20],[93,8,80,8],[93,15,80,15],[93,19,80,19,"functions_js_1"],[93,33,80,33],[93,34,80,34,"FunctionsClient"],[93,49,80,49],[93,50,80,50],[93,54,80,54],[93,55,80,55,"functionsUrl"],[93,67,80,67],[93,68,80,68,"href"],[93,72,80,72],[93,74,80,74],[94,10,81,12,"headers"],[94,17,81,19],[94,19,81,21],[94,23,81,25],[94,24,81,26,"headers"],[94,31,81,33],[95,10,82,12,"customFetch"],[95,21,82,23],[95,23,82,25],[95,27,82,29],[95,28,82,30,"fetch"],[96,8,83,8],[96,9,83,9],[96,10,83,10],[97,6,84,4],[98,6,85,4],[99,0,86,0],[100,0,87,0],[101,0,88,0],[102,0,89,0],[103,4,85,4],[104,6,85,4,"key"],[104,9,85,4],[105,6,85,4,"value"],[105,11,85,4],[105,13,90,4],[105,22,90,4,"from"],[105,26,90,8,"from"],[105,27,90,9,"relation"],[105,35,90,17],[105,37,90,19],[106,8,91,8],[106,15,91,15],[106,19,91,19],[106,20,91,20,"rest"],[106,24,91,24],[106,25,91,25,"from"],[106,29,91,29],[106,30,91,30,"relation"],[106,38,91,38],[106,39,91,39],[107,6,92,4],[108,6,93,4],[109,6,94,4],[110,0,95,0],[111,0,96,0],[112,0,97,0],[113,0,98,0],[114,0,99,0],[115,0,100,0],[116,4,94,4],[117,6,94,4,"key"],[117,9,94,4],[118,6,94,4,"value"],[118,11,94,4],[118,13,101,4],[118,22,101,4,"schema"],[118,28,101,10,"schema"],[118,29,101,11,"schema"],[118,36,101,17],[118,38,101,19],[119,8,102,8],[119,15,102,15],[119,19,102,19],[119,20,102,20,"rest"],[119,24,102,24],[119,25,102,25,"schema"],[119,31,102,31],[119,32,102,32,"schema"],[119,39,102,38],[119,40,102,39],[120,6,103,4],[121,6,104,4],[122,6,105,4],[123,0,106,0],[124,0,107,0],[125,0,108,0],[126,0,109,0],[127,0,110,0],[128,0,111,0],[129,0,112,0],[130,0,113,0],[131,0,114,0],[132,0,115,0],[133,0,116,0],[134,0,117,0],[135,0,118,0],[136,0,119,0],[137,0,120,0],[138,0,121,0],[139,0,122,0],[140,0,123,0],[141,0,124,0],[142,0,125,0],[143,0,126,0],[144,0,127,0],[145,4,105,4],[146,6,105,4,"key"],[146,9,105,4],[147,6,105,4,"value"],[147,11,105,4],[147,13,128,4],[147,22,128,4,"rpc"],[147,25,128,7,"rpc"],[147,26,128,8,"fn"],[147,28,128,10],[147,30,132,7],[148,8,132,7],[148,12,128,12,"args"],[148,16,128,16],[148,19,128,16,"arguments"],[148,28,128,16],[148,29,128,16,"length"],[148,35,128,16],[148,43,128,16,"arguments"],[148,52,128,16],[148,60,128,16,"undefined"],[148,69,128,16],[148,72,128,16,"arguments"],[148,81,128,16],[148,87,128,19],[148,88,128,20],[148,89,128,21],[149,8,128,21],[149,12,128,23,"options"],[149,19,128,30],[149,22,128,30,"arguments"],[149,31,128,30],[149,32,128,30,"length"],[149,38,128,30],[149,46,128,30,"arguments"],[149,55,128,30],[149,63,128,30,"undefined"],[149,72,128,30],[149,75,128,30,"arguments"],[149,84,128,30],[149,90,128,33],[150,10,129,8,"head"],[150,14,129,12],[150,16,129,14],[150,21,129,19],[151,10,130,8,"get"],[151,13,130,11],[151,15,130,13],[151,20,130,18],[152,10,131,8,"count"],[152,15,131,13],[152,17,131,15,"undefined"],[153,8,132,4],[153,9,132,5],[154,8,133,8],[154,15,133,15],[154,19,133,19],[154,20,133,20,"rest"],[154,24,133,24],[154,25,133,25,"rpc"],[154,28,133,28],[154,29,133,29,"fn"],[154,31,133,31],[154,33,133,33,"args"],[154,37,133,37],[154,39,133,39,"options"],[154,46,133,46],[154,47,133,47],[155,6,134,4],[156,6,135,4],[157,0,136,0],[158,0,137,0],[159,0,138,0],[160,0,139,0],[161,0,140,0],[162,0,141,0],[163,4,135,4],[164,6,135,4,"key"],[164,9,135,4],[165,6,135,4,"value"],[165,11,135,4],[165,13,142,4],[165,22,142,4,"channel"],[165,29,142,11,"channel"],[165,30,142,12,"name"],[165,34,142,16],[165,36,142,41],[166,8,142,41],[166,12,142,18,"opts"],[166,16,142,22],[166,19,142,22,"arguments"],[166,28,142,22],[166,29,142,22,"length"],[166,35,142,22],[166,43,142,22,"arguments"],[166,52,142,22],[166,60,142,22,"undefined"],[166,69,142,22],[166,72,142,22,"arguments"],[166,81,142,22],[166,87,142,25],[167,10,142,27,"config"],[167,16,142,33],[167,18,142,35],[167,19,142,36],[168,8,142,38],[168,9,142,39],[169,8,143,8],[169,15,143,15],[169,19,143,19],[169,20,143,20,"realtime"],[169,28,143,28],[169,29,143,29,"channel"],[169,36,143,36],[169,37,143,37,"name"],[169,41,143,41],[169,43,143,43,"opts"],[169,47,143,47],[169,48,143,48],[170,6,144,4],[171,6,145,4],[172,0,146,0],[173,0,147,0],[174,4,145,4],[175,6,145,4,"key"],[175,9,145,4],[176,6,145,4,"value"],[176,11,145,4],[176,13,148,4],[176,22,148,4,"getChannels"],[176,33,148,15,"getChannels"],[176,34,148,15],[176,36,148,18],[177,8,149,8],[177,15,149,15],[177,19,149,19],[177,20,149,20,"realtime"],[177,28,149,28],[177,29,149,29,"getChannels"],[177,40,149,40],[177,41,149,41],[177,42,149,42],[178,6,150,4],[179,6,151,4],[180,0,152,0],[181,0,153,0],[182,0,154,0],[183,0,155,0],[184,0,156,0],[185,4,151,4],[186,6,151,4,"key"],[186,9,151,4],[187,6,151,4,"value"],[187,11,151,4],[187,13,157,4],[187,22,157,4,"removeChannel"],[187,35,157,17,"removeChannel"],[187,36,157,18,"channel"],[187,43,157,25],[187,45,157,27],[188,8,158,8],[188,15,158,15],[188,19,158,19],[188,20,158,20,"realtime"],[188,28,158,28],[188,29,158,29,"removeChannel"],[188,42,158,42],[188,43,158,43,"channel"],[188,50,158,50],[188,51,158,51],[189,6,159,4],[190,6,160,4],[191,0,161,0],[192,0,162,0],[193,4,160,4],[194,6,160,4,"key"],[194,9,160,4],[195,6,160,4,"value"],[195,11,160,4],[195,13,163,4],[195,22,163,4,"removeAllChannels"],[195,39,163,21,"removeAllChannels"],[195,40,163,21],[195,42,163,24],[196,8,164,8],[196,15,164,15],[196,19,164,19],[196,20,164,20,"realtime"],[196,28,164,28],[196,29,164,29,"removeAllChannels"],[196,46,164,46],[196,47,164,47],[196,48,164,48],[197,6,165,4],[198,4,165,5],[199,6,165,5,"key"],[199,9,165,5],[200,6,165,5,"value"],[200,11,165,5],[201,8,165,5],[201,12,165,5,"_getAccessToken2"],[201,28,165,5],[201,31,165,5,"_asyncToGenerator"],[201,48,165,5],[201,49,166,4],[201,62,166,28],[202,10,167,8],[202,14,167,12,"_a"],[202,16,167,14],[202,18,167,16,"_b"],[202,20,167,18],[203,10,168,8],[203,14,168,12],[203,18,168,16],[203,19,168,17,"accessToken"],[203,30,168,28],[203,32,168,30],[204,12,169,12],[204,25,169,25],[204,29,169,29],[204,30,169,30,"accessToken"],[204,41,169,41],[204,42,169,42],[204,43,169,43],[205,10,170,8],[206,10,171,8],[206,14,171,8,"_yield$this$auth$getS"],[206,35,171,8],[206,44,171,31],[206,48,171,35],[206,49,171,36,"auth"],[206,53,171,40],[206,54,171,41,"getSession"],[206,64,171,51],[206,65,171,52],[206,66,171,53],[207,12,171,16,"data"],[207,16,171,20],[207,19,171,20,"_yield$this$auth$getS"],[207,40,171,20],[207,41,171,16,"data"],[207,45,171,20],[208,10,172,8],[208,17,172,15],[208,18,172,16,"_b"],[208,20,172,18],[208,23,172,21],[208,24,172,22,"_a"],[208,26,172,24],[208,29,172,27,"data"],[208,33,172,31],[208,34,172,32,"session"],[208,41,172,39],[208,47,172,45],[208,51,172,49],[208,55,172,53,"_a"],[208,57,172,55],[208,62,172,60],[208,67,172,65],[208,68,172,66],[208,71,172,69],[208,76,172,74],[208,77,172,75],[208,80,172,78,"_a"],[208,82,172,80],[208,83,172,81,"access_token"],[208,95,172,93],[208,101,172,99],[208,105,172,103],[208,109,172,107,"_b"],[208,111,172,109],[208,116,172,114],[208,121,172,119],[208,122,172,120],[208,125,172,123,"_b"],[208,127,172,125],[208,130,172,128],[208,134,172,132],[208,135,172,133,"supabaseKey"],[208,146,172,144],[209,8,173,4],[209,9,173,5],[210,8,173,5],[210,17,166,10,"_getAccessToken"],[210,32,166,25,"_getAccessToken"],[210,33,166,25],[211,10,166,25],[211,17,166,25,"_getAccessToken2"],[211,33,166,25],[211,34,166,25,"apply"],[211,39,166,25],[211,46,166,25,"arguments"],[211,55,166,25],[212,8,166,25],[213,8,166,25],[213,15,166,10,"_getAccessToken"],[213,30,166,25],[214,6,166,25],[215,4,166,25],[216,6,166,25,"key"],[216,9,166,25],[217,6,166,25,"value"],[217,11,166,25],[217,13,174,4],[217,22,174,4,"_initSupabaseAuthClient"],[217,45,174,27,"_initSupabaseAuthClient"],[217,46,174,27,"_ref"],[217,50,174,27],[217,52,174,144,"headers"],[217,59,174,151],[217,61,174,153,"fetch"],[217,66,174,158],[217,68,174,160],[218,8,174,160],[218,12,174,30,"autoRefreshToken"],[218,28,174,46],[218,31,174,46,"_ref"],[218,35,174,46],[218,36,174,30,"autoRefreshToken"],[218,52,174,46],[219,10,174,48,"persistSession"],[219,24,174,62],[219,27,174,62,"_ref"],[219,31,174,62],[219,32,174,48,"persistSession"],[219,46,174,62],[220,10,174,64,"detectSessionInUrl"],[220,28,174,82],[220,31,174,82,"_ref"],[220,35,174,82],[220,36,174,64,"detectSessionInUrl"],[220,54,174,82],[221,10,174,84,"storage"],[221,17,174,91],[221,20,174,91,"_ref"],[221,24,174,91],[221,25,174,84,"storage"],[221,32,174,91],[222,10,174,93,"userStorage"],[222,21,174,104],[222,24,174,104,"_ref"],[222,28,174,104],[222,29,174,93,"userStorage"],[222,40,174,104],[223,10,174,106,"storageKey"],[223,20,174,116],[223,23,174,116,"_ref"],[223,27,174,116],[223,28,174,106,"storageKey"],[223,38,174,116],[224,10,174,118,"flowType"],[224,18,174,126],[224,21,174,126,"_ref"],[224,25,174,126],[224,26,174,118,"flowType"],[224,34,174,126],[225,10,174,128,"lock"],[225,14,174,132],[225,17,174,132,"_ref"],[225,21,174,132],[225,22,174,128,"lock"],[225,26,174,132],[226,10,174,134,"debug"],[226,15,174,139],[226,18,174,139,"_ref"],[226,22,174,139],[226,23,174,134,"debug"],[226,28,174,139],[227,8,175,8],[227,12,175,14,"authHeaders"],[227,23,175,25],[227,26,175,28],[228,10,176,12,"Authorization"],[228,23,176,25],[228,25,176,27],[228,35,176,37],[228,39,176,41],[228,40,176,42,"supabaseKey"],[228,51,176,53],[228,53,176,55],[229,10,177,12,"apikey"],[229,16,177,18],[229,18,177,20],[229,21,177,23],[229,25,177,27],[229,26,177,28,"supabaseKey"],[229,37,177,39],[230,8,178,8],[230,9,178,9],[231,8,179,8],[231,15,179,15],[231,19,179,19,"SupabaseAuthClient_1"],[231,39,179,39],[231,40,179,40,"SupabaseAuthClient"],[231,58,179,58],[231,59,179,59],[232,10,180,12,"url"],[232,13,180,15],[232,15,180,17],[232,19,180,21],[232,20,180,22,"authUrl"],[232,27,180,29],[232,28,180,30,"href"],[232,32,180,34],[233,10,181,12,"headers"],[233,17,181,19],[233,19,181,21,"Object"],[233,25,181,27],[233,26,181,28,"assign"],[233,32,181,34],[233,33,181,35,"Object"],[233,39,181,41],[233,40,181,42,"assign"],[233,46,181,48],[233,47,181,49],[233,48,181,50],[233,49,181,51],[233,51,181,53,"authHeaders"],[233,62,181,64],[233,63,181,65],[233,65,181,67,"headers"],[233,72,181,74],[233,73,181,75],[234,10,182,12,"storageKey"],[234,20,182,22],[234,22,182,24,"storageKey"],[234,32,182,34],[235,10,183,12,"autoRefreshToken"],[235,26,183,28],[236,10,184,12,"persistSession"],[236,24,184,26],[237,10,185,12,"detectSessionInUrl"],[237,28,185,30],[238,10,186,12,"storage"],[238,17,186,19],[239,10,187,12,"userStorage"],[239,21,187,23],[240,10,188,12,"flowType"],[240,18,188,20],[241,10,189,12,"lock"],[241,14,189,16],[242,10,190,12,"debug"],[242,15,190,17],[243,10,191,12,"fetch"],[243,15,191,17],[244,10,192,12],[245,10,193,12],[246,10,194,12,"hasCustomAuthorizationHeader"],[246,38,194,40],[246,40,194,42,"Object"],[246,46,194,48],[246,47,194,49,"keys"],[246,51,194,53],[246,52,194,54],[246,56,194,58],[246,57,194,59,"headers"],[246,64,194,66],[246,65,194,67],[246,66,194,68,"some"],[246,70,194,72],[246,71,194,74,"key"],[246,74,194,77],[246,78,194,82,"key"],[246,81,194,85],[246,82,194,86,"toLowerCase"],[246,93,194,97],[246,94,194,98],[246,95,194,99],[246,100,194,104],[246,115,194,119],[247,8,195,8],[247,9,195,9],[247,10,195,10],[248,6,196,4],[249,4,196,5],[250,6,196,5,"key"],[250,9,196,5],[251,6,196,5,"value"],[251,11,196,5],[251,13,197,4],[251,22,197,4,"_initRealtimeClient"],[251,41,197,23,"_initRealtimeClient"],[251,42,197,24,"options"],[251,49,197,31],[251,51,197,33],[252,8,198,8],[252,15,198,15],[252,19,198,19,"realtime_js_1"],[252,32,198,32],[252,33,198,33,"RealtimeClient"],[252,47,198,47],[252,48,198,48],[252,52,198,52],[252,53,198,53,"realtimeUrl"],[252,64,198,64],[252,65,198,65,"href"],[252,69,198,69],[252,71,198,71,"Object"],[252,77,198,77],[252,78,198,78,"assign"],[252,84,198,84],[252,85,198,85,"Object"],[252,91,198,91],[252,92,198,92,"assign"],[252,98,198,98],[252,99,198,99],[252,100,198,100],[252,101,198,101],[252,103,198,103,"options"],[252,110,198,110],[252,111,198,111],[252,113,198,113],[253,10,198,115,"params"],[253,16,198,121],[253,18,198,123,"Object"],[253,24,198,129],[253,25,198,130,"assign"],[253,31,198,136],[253,32,198,137],[254,12,198,139,"apikey"],[254,18,198,145],[254,20,198,147],[254,24,198,151],[254,25,198,152,"supabaseKey"],[255,10,198,164],[255,11,198,165],[255,13,198,167,"options"],[255,20,198,174],[255,25,198,179],[255,29,198,183],[255,33,198,187,"options"],[255,40,198,194],[255,45,198,199],[255,50,198,204],[255,51,198,205],[255,54,198,208],[255,59,198,213],[255,60,198,214],[255,63,198,217,"options"],[255,70,198,224],[255,71,198,225,"params"],[255,77,198,231],[256,8,198,233],[256,9,198,234],[256,10,198,235],[256,11,198,236],[257,6,199,4],[258,4,199,5],[259,6,199,5,"key"],[259,9,199,5],[260,6,199,5,"value"],[260,11,199,5],[260,13,200,4],[260,22,200,4,"_listenForAuthEvents"],[260,42,200,24,"_listenForAuthEvents"],[260,43,200,24],[260,45,200,27],[261,8,201,8],[261,12,201,14,"data"],[261,16,201,18],[261,19,201,21],[261,23,201,25],[261,24,201,26,"auth"],[261,28,201,30],[261,29,201,31,"onAuthStateChange"],[261,46,201,48],[261,47,201,49],[261,48,201,50,"event"],[261,53,201,55],[261,55,201,57,"session"],[261,62,201,64],[261,67,201,69],[262,10,202,12],[262,14,202,16],[262,15,202,17,"_handleTokenChanged"],[262,34,202,36],[262,35,202,37,"event"],[262,40,202,42],[262,42,202,44],[262,50,202,52],[262,52,202,54,"session"],[262,59,202,61],[262,64,202,66],[262,68,202,70],[262,72,202,74,"session"],[262,79,202,81],[262,84,202,86],[262,89,202,91],[262,90,202,92],[262,93,202,95],[262,98,202,100],[262,99,202,101],[262,102,202,104,"session"],[262,109,202,111],[262,110,202,112,"access_token"],[262,122,202,124],[262,123,202,125],[263,8,203,8],[263,9,203,9],[263,10,203,10],[264,8,204,8],[264,15,204,15,"data"],[264,19,204,19],[265,6,205,4],[266,4,205,5],[267,6,205,5,"key"],[267,9,205,5],[268,6,205,5,"value"],[268,11,205,5],[268,13,206,4],[268,22,206,4,"_handleTokenChanged"],[268,41,206,23,"_handleTokenChanged"],[268,42,206,24,"event"],[268,47,206,29],[268,49,206,31,"source"],[268,55,206,37],[268,57,206,39,"token"],[268,62,206,44],[268,64,206,46],[269,8,207,8],[269,12,207,12],[269,13,207,13,"event"],[269,18,207,18],[269,23,207,23],[269,40,207,40],[269,44,207,44,"event"],[269,49,207,49],[269,54,207,54],[269,65,207,65],[269,70,208,12],[269,74,208,16],[269,75,208,17,"changedAccessToken"],[269,93,208,35],[269,98,208,40,"token"],[269,103,208,45],[269,105,208,47],[270,10,209,12],[270,14,209,16],[270,15,209,17,"changedAccessToken"],[270,33,209,35],[270,36,209,38,"token"],[270,41,209,43],[271,10,210,12],[271,14,210,16],[271,15,210,17,"realtime"],[271,23,210,25],[271,24,210,26,"setAuth"],[271,31,210,33],[271,32,210,34,"token"],[271,37,210,39],[271,38,210,40],[272,8,211,8],[272,9,211,9],[272,15,212,13],[272,19,212,17,"event"],[272,24,212,22],[272,29,212,27],[272,41,212,39],[272,43,212,41],[273,10,213,12],[273,14,213,16],[273,15,213,17,"realtime"],[273,23,213,25],[273,24,213,26,"setAuth"],[273,31,213,33],[273,32,213,34],[273,33,213,35],[274,10,214,12],[274,14,214,16,"source"],[274,20,214,22],[274,24,214,26],[274,33,214,35],[274,35,215,16],[274,39,215,20],[274,40,215,21,"auth"],[274,44,215,25],[274,45,215,26,"signOut"],[274,52,215,33],[274,53,215,34],[274,54,215,35],[275,10,216,12],[275,14,216,16],[275,15,216,17,"changedAccessToken"],[275,33,216,35],[275,36,216,38,"undefined"],[275,45,216,47],[276,8,217,8],[277,6,218,4],[278,4,218,5],[279,2,218,5],[280,2,220,0,"exports"],[280,9,220,7],[280,10,220,8,"default"],[280,17,220,15],[280,20,220,18,"SupabaseClient"],[280,34,220,32],[281,0,220,33],[281,3]],"functionMap":{"names":["<global>","SupabaseClient","constructor","Proxy$argument_1.get","get__functions","from","schema","rpc","channel","getChannels","removeChannel","removeAllChannels","_getAccessToken","_initSupabaseAuthClient","Object.keys.some$argument_0","_initRealtimeClient","_listenForAuthEvents","auth.onAuthStateChange$argument_0","_handleTokenChanged"],"mappings":"AAA;ACe;ICc;qBC6B;iBDE;KDc;IGI;KHK;IIM;KJE;IKS;KLE;IMyB;KNM;IOQ;KPE;IQI;KRE;ISO;KTE;IUI;KVE;IWC;KXO;IYC;yECoB,8CD;KZE;IcC;KdE;IeC;iDCC;SDE;KfE;IiBC;KjBY;CDC"}},"type":"js/module"}]}