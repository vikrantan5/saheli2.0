{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":44,"index":92}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../utils/convertPercentageColor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":73,"index":166}}],"key":"Sfw+GLz/7P1PrF5yBo+seGOBpEM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = extractBrush;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  var _convertPercentageColor = require(_dependencyMap[1], \"../utils/convertPercentageColor\");\n  var urlIdPattern = /^url\\(#(.+)\\)$/;\n  var currentColorBrush = {\n    type: 2\n  };\n  var contextFillBrush = {\n    type: 3\n  };\n  var contextStrokeBrush = {\n    type: 4\n  };\n  function extractBrush(color) {\n    if (!color || color === 'none') {\n      return null;\n    }\n    if (color === 'currentColor') {\n      return currentColorBrush;\n    }\n    if (color === 'context-fill') {\n      return contextFillBrush;\n    }\n    if (color === 'context-stroke') {\n      return contextStrokeBrush;\n    }\n    var brush = typeof color === 'string' && color.match(urlIdPattern);\n    if (brush) {\n      return {\n        type: 1,\n        brushRef: brush[1]\n      };\n    }\n\n    // Convert percentage RGB/RGBA color to standard RGB/RGBA color\n    var colorToProcess = (0, _convertPercentageColor.convertPercentageColor)(color);\n    var processedColor = (0, _reactNative.processColor)(colorToProcess);\n    if (typeof processedColor === 'number') {\n      return {\n        type: 0,\n        payload: processedColor\n      };\n    }\n    if (typeof processedColor === 'object' && processedColor !== null) {\n      // if we got an object, it should be `PlatformColor` or `DynamicColorIOS`,\n      // so we pass it as an object with `0` value as first item, which is interpreted\n      // on the native side as color to be managed by `RCTConvert`.\n      return {\n        type: 0,\n        payload: processedColor\n      };\n    }\n    console.warn(`\"${String(color)}\" is not a valid color or brush`);\n    return null;\n  }\n});","lineCount":60,"map":[[6,2,2,0],[6,6,2,0,"_reactNative"],[6,18,2,0],[6,21,2,0,"require"],[6,28,2,0],[6,29,2,0,"_dependencyMap"],[6,43,2,0],[7,2,3,0],[7,6,3,0,"_convertPercentageColor"],[7,29,3,0],[7,32,3,0,"require"],[7,39,3,0],[7,40,3,0,"_dependencyMap"],[7,54,3,0],[8,2,5,0],[8,6,5,6,"urlIdPattern"],[8,18,5,18],[8,21,5,21],[8,37,5,37],[9,2,7,0],[9,6,7,6,"currentColorBrush"],[9,23,7,23],[9,26,7,26],[10,4,7,28,"type"],[10,8,7,32],[10,10,7,34],[11,2,7,36],[11,3,7,37],[12,2,8,0],[12,6,8,6,"contextFillBrush"],[12,22,8,22],[12,25,8,25],[13,4,8,27,"type"],[13,8,8,31],[13,10,8,33],[14,2,8,35],[14,3,8,36],[15,2,9,0],[15,6,9,6,"contextStrokeBrush"],[15,24,9,24],[15,27,9,27],[16,4,9,29,"type"],[16,8,9,33],[16,10,9,35],[17,2,9,37],[17,3,9,38],[18,2,11,15],[18,11,11,24,"extractBrush"],[18,23,11,36,"extractBrush"],[18,24,11,37,"color"],[18,29,11,55],[18,31,11,57],[19,4,12,2],[19,8,12,6],[19,9,12,7,"color"],[19,14,12,12],[19,18,12,16,"color"],[19,23,12,21],[19,28,12,26],[19,34,12,32],[19,36,12,34],[20,6,13,4],[20,13,13,11],[20,17,13,15],[21,4,14,2],[22,4,16,2],[22,8,16,6,"color"],[22,13,16,11],[22,18,16,16],[22,32,16,30],[22,34,16,32],[23,6,17,4],[23,13,17,11,"currentColorBrush"],[23,30,17,28],[24,4,18,2],[25,4,20,2],[25,8,20,6,"color"],[25,13,20,11],[25,18,20,16],[25,32,20,30],[25,34,20,32],[26,6,21,4],[26,13,21,11,"contextFillBrush"],[26,29,21,27],[27,4,22,2],[28,4,24,2],[28,8,24,6,"color"],[28,13,24,11],[28,18,24,16],[28,34,24,32],[28,36,24,34],[29,6,25,4],[29,13,25,11,"contextStrokeBrush"],[29,31,25,29],[30,4,26,2],[31,4,28,2],[31,8,28,8,"brush"],[31,13,28,13],[31,16,28,16],[31,23,28,23,"color"],[31,28,28,28],[31,33,28,33],[31,41,28,41],[31,45,28,45,"color"],[31,50,28,50],[31,51,28,51,"match"],[31,56,28,56],[31,57,28,57,"urlIdPattern"],[31,69,28,69],[31,70,28,70],[32,4,29,2],[32,8,29,6,"brush"],[32,13,29,11],[32,15,29,13],[33,6,30,4],[33,13,30,11],[34,8,30,13,"type"],[34,12,30,17],[34,14,30,19],[34,15,30,20],[35,8,30,22,"brushRef"],[35,16,30,30],[35,18,30,32,"brush"],[35,23,30,37],[35,24,30,38],[35,25,30,39],[36,6,30,41],[36,7,30,42],[37,4,31,2],[39,4,33,2],[40,4,34,2],[40,8,34,8,"colorToProcess"],[40,22,34,22],[40,25,34,25],[40,29,34,25,"convertPercentageColor"],[40,75,34,47],[40,77,34,48,"color"],[40,82,34,53],[40,83,34,54],[41,4,35,2],[41,8,35,8,"processedColor"],[41,22,35,22],[41,25,35,25],[41,29,35,25,"processColor"],[41,54,35,37],[41,56,35,38,"colorToProcess"],[41,70,35,52],[41,71,35,53],[42,4,36,2],[42,8,36,6],[42,15,36,13,"processedColor"],[42,29,36,27],[42,34,36,32],[42,42,36,40],[42,44,36,42],[43,6,37,4],[43,13,37,11],[44,8,37,13,"type"],[44,12,37,17],[44,14,37,19],[44,15,37,20],[45,8,37,22,"payload"],[45,15,37,29],[45,17,37,31,"processedColor"],[46,6,37,46],[46,7,37,47],[47,4,38,2],[48,4,40,2],[48,8,40,6],[48,15,40,13,"processedColor"],[48,29,40,27],[48,34,40,32],[48,42,40,40],[48,46,40,44,"processedColor"],[48,60,40,58],[48,65,40,63],[48,69,40,67],[48,71,40,69],[49,6,41,4],[50,6,42,4],[51,6,43,4],[52,6,44,4],[52,13,44,11],[53,8,44,13,"type"],[53,12,44,17],[53,14,44,19],[53,15,44,20],[54,8,44,22,"payload"],[54,15,44,29],[54,17,44,31,"processedColor"],[55,6,44,46],[55,7,44,47],[56,4,45,2],[57,4,47,2,"console"],[57,11,47,9],[57,12,47,10,"warn"],[57,16,47,14],[57,17,47,15],[57,21,47,19,"String"],[57,27,47,25],[57,28,47,26,"color"],[57,33,47,31],[57,34,47,32],[57,67,47,65],[57,68,47,66],[58,4,48,2],[58,11,48,9],[58,15,48,13],[59,2,49,0],[60,0,49,1],[60,3]],"functionMap":{"names":["<global>","extractBrush"],"mappings":"AAA;eCU;CDsC"}},"type":"js/module"}]}