{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":237},"end":{"line":4,"column":32,"index":253}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.validateVectorDimension = exports.normalizeToFloat32 = exports.isPlainObject = exports.resolveResponse = exports.resolveFetch = void 0;\n  var tslib_1 = require(_dependencyMap[0], \"tslib\");\n  /**\n   * Resolves the fetch implementation to use\n   * Uses custom fetch if provided, otherwise falls back to:\n   * - Native fetch in browser/modern environments\n   * - @supabase/node-fetch polyfill in Node.js environments without fetch\n   *\n   * @param customFetch - Optional custom fetch implementation\n   * @returns Resolved fetch function\n   */\n  var resolveFetch = customFetch => {\n    var _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return Promise.resolve(`${'@supabase/node-fetch'}`).then(s => tslib_1.__importStar(function (line) {\n          throw new Error('Dynamic require defined at line ' + line + '; not supported by Metro');\n        }(20))).then(_ref => {\n          var fetch = _ref.default;\n          return fetch(...args);\n        });\n      };\n    } else {\n      _fetch = fetch;\n    }\n    return function () {\n      return _fetch(...arguments);\n    };\n  };\n  exports.resolveFetch = resolveFetch;\n  /**\n   * Resolves the Response constructor to use\n   * Uses native Response in browser/modern environments\n   * Falls back to @supabase/node-fetch polyfill in Node.js environments\n   *\n   * @returns Response constructor\n   */\n  var resolveResponse = () => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n      // @ts-ignore\n      return (yield Promise.resolve(`${'@supabase/node-fetch'}`).then(s => tslib_1.__importStar(function (line) {\n        throw new Error('Dynamic require defined at line ' + line + '; not supported by Metro');\n      }(38)))).Response;\n    }\n    return Response;\n  });\n  exports.resolveResponse = resolveResponse;\n  /**\n   * Determine if input is a plain object\n   * An object is plain if it's created by either {}, new Object(), or Object.create(null)\n   *\n   * @param value - Value to check\n   * @returns True if value is a plain object\n   * @source https://github.com/sindresorhus/is-plain-obj\n   */\n  var isPlainObject = value => {\n    if (typeof value !== 'object' || value === null) {\n      return false;\n    }\n    var prototype = Object.getPrototypeOf(value);\n    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n  };\n  exports.isPlainObject = isPlainObject;\n  /**\n   * Normalizes a number array to float32 format\n   * Ensures all vector values are valid 32-bit floats\n   *\n   * @param values - Array of numbers to normalize\n   * @returns Normalized float32 array\n   */\n  var normalizeToFloat32 = values => {\n    // Use Float32Array to ensure proper precision\n    return Array.from(new Float32Array(values));\n  };\n  exports.normalizeToFloat32 = normalizeToFloat32;\n  /**\n   * Validates vector dimensions match expected dimension\n   * Throws error if dimensions don't match\n   *\n   * @param vector - Vector data to validate\n   * @param expectedDimension - Expected vector dimension\n   * @throws Error if dimensions don't match\n   */\n  var validateVectorDimension = (vector, expectedDimension) => {\n    if (expectedDimension !== undefined && vector.float32.length !== expectedDimension) {\n      throw new Error(`Vector dimension mismatch: expected ${expectedDimension}, got ${vector.float32.length}`);\n    }\n  };\n  exports.validateVectorDimension = validateVectorDimension;\n});","lineCount":101,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"validateVectorDimension"],[7,33,3,31],[7,36,3,34,"exports"],[7,43,3,41],[7,44,3,42,"normalizeToFloat32"],[7,62,3,60],[7,65,3,63,"exports"],[7,72,3,70],[7,73,3,71,"isPlainObject"],[7,86,3,84],[7,89,3,87,"exports"],[7,96,3,94],[7,97,3,95,"resolveResponse"],[7,112,3,110],[7,115,3,113,"exports"],[7,122,3,120],[7,123,3,121,"resolveFetch"],[7,135,3,133],[7,138,3,136],[7,143,3,141],[7,144,3,142],[8,2,4,0],[8,6,4,6,"tslib_1"],[8,13,4,13],[8,16,4,16,"require"],[8,23,4,23],[8,24,4,23,"_dependencyMap"],[8,38,4,23],[8,50,4,31],[8,51,4,32],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,2,14,0],[18,6,14,6,"resolveFetch"],[18,18,14,18],[18,21,14,22,"customFetch"],[18,32,14,33],[18,36,14,38],[19,4,15,4],[19,8,15,8,"_fetch"],[19,14,15,14],[20,4,16,4],[20,8,16,8,"customFetch"],[20,19,16,19],[20,21,16,21],[21,6,17,8,"_fetch"],[21,12,17,14],[21,15,17,17,"customFetch"],[21,26,17,28],[22,4,18,4],[22,5,18,5],[22,11,19,9],[22,15,19,13],[22,22,19,20,"fetch"],[22,27,19,25],[22,32,19,30],[22,43,19,41],[22,45,19,43],[23,6,20,8,"_fetch"],[23,12,20,14],[23,15,20,17],[23,24,20,17,"_fetch"],[23,25,20,17],[24,8,20,17],[24,17,20,17,"_len"],[24,21,20,17],[24,24,20,17,"arguments"],[24,33,20,17],[24,34,20,17,"length"],[24,40,20,17],[24,42,20,21,"args"],[24,46,20,25],[24,53,20,25,"Array"],[24,58,20,25],[24,59,20,25,"_len"],[24,63,20,25],[24,66,20,25,"_key"],[24,70,20,25],[24,76,20,25,"_key"],[24,80,20,25],[24,83,20,25,"_len"],[24,87,20,25],[24,89,20,25,"_key"],[24,93,20,25],[25,10,20,21,"args"],[25,14,20,25],[25,15,20,25,"_key"],[25,19,20,25],[25,23,20,25,"arguments"],[25,32,20,25],[25,33,20,25,"_key"],[25,37,20,25],[26,8,20,25],[27,8,20,25],[27,15,20,30,"Promise"],[27,22,20,37],[27,23,20,38,"resolve"],[27,30,20,45],[27,31,20,46],[27,34,20,49],[27,56,20,71],[27,58,20,73],[27,59,20,74],[27,60,20,75,"then"],[27,64,20,79],[27,65,20,80,"s"],[27,66,20,81],[27,70,20,85,"tslib_1"],[27,77,20,92],[27,78,20,93,"__importStar"],[27,90,20,105],[27,101,20,105,"line"],[27,105,20,105],[28,10,20,105],[28,20,20,105,"Error"],[28,25,20,105],[28,63,20,105,"line"],[28,67,20,105],[29,8,20,105],[29,13,20,116],[29,14,20,117],[29,15,20,118],[29,16,20,119,"then"],[29,20,20,123],[29,21,20,124,"_ref"],[29,25,20,124],[30,10,20,124],[30,14,20,136,"fetch"],[30,19,20,141],[30,22,20,141,"_ref"],[30,26,20,141],[30,27,20,127,"default"],[30,34,20,134],[31,10,20,134],[31,17,20,148,"fetch"],[31,22,20,153],[31,23,20,154],[31,26,20,157,"args"],[31,30,20,161],[31,31,20,162],[32,8,20,162],[32,10,20,163],[33,6,20,163],[34,4,21,4],[34,5,21,5],[34,11,22,9],[35,6,23,8,"_fetch"],[35,12,23,14],[35,15,23,17,"fetch"],[35,20,23,22],[36,4,24,4],[37,4,25,4],[37,11,25,11],[38,6,25,11],[38,13,25,24,"_fetch"],[38,19,25,30],[38,20,25,31],[38,23,25,31,"arguments"],[38,32,25,38],[38,33,25,39],[39,4,25,39],[40,2,26,0],[40,3,26,1],[41,2,27,0,"exports"],[41,9,27,7],[41,10,27,8,"resolveFetch"],[41,22,27,20],[41,25,27,23,"resolveFetch"],[41,37,27,35],[42,2,28,0],[43,0,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,0,33,0],[48,0,34,0],[49,2,35,0],[49,6,35,6,"resolveResponse"],[49,21,35,21],[49,24,35,24,"resolveResponse"],[49,25,35,24],[49,30,35,30,"tslib_1"],[49,37,35,37],[49,38,35,38,"__awaiter"],[49,47,35,47],[49,48,35,48],[49,53,35,53],[49,54,35,54],[49,56,35,56],[49,61,35,61],[49,62,35,62],[49,64,35,64],[49,69,35,69],[49,70,35,70],[49,72,35,72],[49,85,35,85],[50,4,36,4],[50,8,36,8],[50,15,36,15,"Response"],[50,23,36,23],[50,28,36,28],[50,39,36,39],[50,41,36,41],[51,6,37,8],[52,6,38,8],[52,13,38,15],[52,14,38,16],[52,20,38,22,"Promise"],[52,27,38,29],[52,28,38,30,"resolve"],[52,35,38,37],[52,36,38,38],[52,39,38,41],[52,61,38,63],[52,63,38,65],[52,64,38,66],[52,65,38,67,"then"],[52,69,38,71],[52,70,38,72,"s"],[52,71,38,73],[52,75,38,77,"tslib_1"],[52,82,38,84],[52,83,38,85,"__importStar"],[52,95,38,97],[52,106,38,97,"line"],[52,110,38,97],[53,8,38,97],[53,18,38,97,"Error"],[53,23,38,97],[53,61,38,97,"line"],[53,65,38,97],[54,6,38,97],[54,11,38,108],[54,12,38,109],[54,13,38,110],[54,15,38,112,"Response"],[54,23,38,120],[55,4,39,4],[56,4,40,4],[56,11,40,11,"Response"],[56,19,40,19],[57,2,41,0],[57,3,41,1],[57,4,41,2],[58,2,42,0,"exports"],[58,9,42,7],[58,10,42,8,"resolveResponse"],[58,25,42,23],[58,28,42,26,"resolveResponse"],[58,43,42,41],[59,2,43,0],[60,0,44,0],[61,0,45,0],[62,0,46,0],[63,0,47,0],[64,0,48,0],[65,0,49,0],[66,0,50,0],[67,2,51,0],[67,6,51,6,"isPlainObject"],[67,19,51,19],[67,22,51,23,"value"],[67,27,51,28],[67,31,51,33],[68,4,52,4],[68,8,52,8],[68,15,52,15,"value"],[68,20,52,20],[68,25,52,25],[68,33,52,33],[68,37,52,37,"value"],[68,42,52,42],[68,47,52,47],[68,51,52,51],[68,53,52,53],[69,6,53,8],[69,13,53,15],[69,18,53,20],[70,4,54,4],[71,4,55,4],[71,8,55,10,"prototype"],[71,17,55,19],[71,20,55,22,"Object"],[71,26,55,28],[71,27,55,29,"getPrototypeOf"],[71,41,55,43],[71,42,55,44,"value"],[71,47,55,49],[71,48,55,50],[72,4,56,4],[72,11,56,12],[72,12,56,13,"prototype"],[72,21,56,22],[72,26,56,27],[72,30,56,31],[72,34,57,8,"prototype"],[72,43,57,17],[72,48,57,22,"Object"],[72,54,57,28],[72,55,57,29,"prototype"],[72,64,57,38],[72,68,58,8,"Object"],[72,74,58,14],[72,75,58,15,"getPrototypeOf"],[72,89,58,29],[72,90,58,30,"prototype"],[72,99,58,39],[72,100,58,40],[72,105,58,45],[72,109,58,49],[72,114,59,8],[72,116,59,10,"Symbol"],[72,122,59,16],[72,123,59,17,"toStringTag"],[72,134,59,28],[72,138,59,32,"value"],[72,143,59,37],[72,144,59,38],[72,148,60,8],[72,150,60,10,"Symbol"],[72,156,60,16],[72,157,60,17,"iterator"],[72,165,60,25],[72,169,60,29,"value"],[72,174,60,34],[72,175,60,35],[73,2,61,0],[73,3,61,1],[74,2,62,0,"exports"],[74,9,62,7],[74,10,62,8,"isPlainObject"],[74,23,62,21],[74,26,62,24,"isPlainObject"],[74,39,62,37],[75,2,63,0],[76,0,64,0],[77,0,65,0],[78,0,66,0],[79,0,67,0],[80,0,68,0],[81,0,69,0],[82,2,70,0],[82,6,70,6,"normalizeToFloat32"],[82,24,70,24],[82,27,70,28,"values"],[82,33,70,34],[82,37,70,39],[83,4,71,4],[84,4,72,4],[84,11,72,11,"Array"],[84,16,72,16],[84,17,72,17,"from"],[84,21,72,21],[84,22,72,22],[84,26,72,26,"Float32Array"],[84,38,72,38],[84,39,72,39,"values"],[84,45,72,45],[84,46,72,46],[84,47,72,47],[85,2,73,0],[85,3,73,1],[86,2,74,0,"exports"],[86,9,74,7],[86,10,74,8,"normalizeToFloat32"],[86,28,74,26],[86,31,74,29,"normalizeToFloat32"],[86,49,74,47],[87,2,75,0],[88,0,76,0],[89,0,77,0],[90,0,78,0],[91,0,79,0],[92,0,80,0],[93,0,81,0],[94,0,82,0],[95,2,83,0],[95,6,83,6,"validateVectorDimension"],[95,29,83,29],[95,32,83,32,"validateVectorDimension"],[95,33,83,33,"vector"],[95,39,83,39],[95,41,83,41,"expectedDimension"],[95,58,83,58],[95,63,83,63],[96,4,84,4],[96,8,84,8,"expectedDimension"],[96,25,84,25],[96,30,84,30,"undefined"],[96,39,84,39],[96,43,84,43,"vector"],[96,49,84,49],[96,50,84,50,"float32"],[96,57,84,57],[96,58,84,58,"length"],[96,64,84,64],[96,69,84,69,"expectedDimension"],[96,86,84,86],[96,88,84,88],[97,6,85,8],[97,12,85,14],[97,16,85,18,"Error"],[97,21,85,23],[97,22,85,24],[97,61,85,63,"expectedDimension"],[97,78,85,80],[97,87,85,89,"vector"],[97,93,85,95],[97,94,85,96,"float32"],[97,101,85,103],[97,102,85,104,"length"],[97,108,85,110],[97,110,85,112],[97,111,85,113],[98,4,86,4],[99,2,87,0],[99,3,87,1],[100,2,88,0,"exports"],[100,9,88,7],[100,10,88,8,"validateVectorDimension"],[100,33,88,31],[100,36,88,34,"validateVectorDimension"],[100,59,88,57],[101,0,88,58],[101,3]],"functionMap":{"names":["<global>","resolveFetch","_fetch","Promise.resolve.then$argument_0","Promise.resolve.then.then$argument_0","<anonymous>","resolveResponse","tslib_1.__awaiter$argument_3","isPlainObject","normalizeToFloat32","validateVectorDimension"],"mappings":"AAA;qBCa;iBCM,+DC,qCD,OE,sCF,CD;WIK,4BJ;CDC;wBMS,gDC;wEJG,qCI;CDG,CN;sBQU;CRU;2BSS;CTG;gCUU;CVI"}},"type":"js/module"}]}