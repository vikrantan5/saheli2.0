{"dependencies":[{"name":"./subscribable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":23},"end":{"line":2,"column":49,"index":72}}],"key":"f0fxTGZggQRtb//cHMvH9AHIWOw=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":73},"end":{"line":3,"column":38,"index":111}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.focusManager = exports.FocusManager = void 0;\n  var _subscribable = require(_dependencyMap[0], \"./subscribable.js\");\n  var _utils = require(_dependencyMap[1], \"./utils.js\");\n  // src/focusManager.ts\n\n  var FocusManager = class extends _subscribable.Subscribable {\n    #focused;\n    #cleanup;\n    #setup;\n    constructor() {\n      super();\n      this.#setup = onFocus => {\n        if (!_utils.isServer && window.addEventListener) {\n          const listener = () => onFocus();\n          window.addEventListener(\"visibilitychange\", listener, false);\n          return () => {\n            window.removeEventListener(\"visibilitychange\", listener);\n          };\n        }\n        return;\n      };\n    }\n    onSubscribe() {\n      if (!this.#cleanup) {\n        this.setEventListener(this.#setup);\n      }\n    }\n    onUnsubscribe() {\n      if (!this.hasListeners()) {\n        this.#cleanup?.();\n        this.#cleanup = void 0;\n      }\n    }\n    setEventListener(setup) {\n      this.#setup = setup;\n      this.#cleanup?.();\n      this.#cleanup = setup(focused => {\n        if (typeof focused === \"boolean\") {\n          this.setFocused(focused);\n        } else {\n          this.onFocus();\n        }\n      });\n    }\n    setFocused(focused) {\n      const changed = this.#focused !== focused;\n      if (changed) {\n        this.#focused = focused;\n        this.onFocus();\n      }\n    }\n    onFocus() {\n      const isFocused = this.isFocused();\n      this.listeners.forEach(listener => {\n        listener(isFocused);\n      });\n    }\n    isFocused() {\n      if (typeof this.#focused === \"boolean\") {\n        return this.#focused;\n      }\n      return globalThis.document?.visibilityState !== \"hidden\";\n    }\n  };\n  exports.FocusManager = FocusManager;\n  var focusManager = exports.focusManager = new FocusManager();\n});","lineCount":71,"map":[[6,2,2,0],[6,6,2,0,"_subscribable"],[6,19,2,0],[6,22,2,0,"require"],[6,29,2,0],[6,30,2,0,"_dependencyMap"],[6,44,2,0],[7,2,3,0],[7,6,3,0,"_utils"],[7,12,3,0],[7,15,3,0,"require"],[7,22,3,0],[7,23,3,0,"_dependencyMap"],[7,37,3,0],[8,2,1,0],[10,2,4,0],[10,6,4,4,"FocusManager"],[10,18,4,16],[10,21,4,19],[10,35,4,33,"Subscribable"],[10,61,4,45],[10,62,4,46],[11,4,5,2],[11,5,5,3,"focused"],[11,12,5,10],[12,4,6,2],[12,5,6,3,"cleanup"],[12,12,6,10],[13,4,7,2],[13,5,7,3,"setup"],[13,10,7,8],[14,4,8,2,"constructor"],[14,15,8,13,"constructor"],[14,16,8,13],[14,18,8,16],[15,6,9,4],[15,11,9,9],[15,12,9,10],[15,13,9,11],[16,6,10,4],[16,10,10,8],[16,11,10,9],[16,12,10,10,"setup"],[16,17,10,15],[16,20,10,19,"onFocus"],[16,27,10,26],[16,31,10,31],[17,8,11,6],[17,12,11,10],[17,13,11,11,"isServer"],[17,28,11,19],[17,32,11,23,"window"],[17,38,11,29],[17,39,11,30,"addEventListener"],[17,55,11,46],[17,57,11,48],[18,10,12,8],[18,16,12,14,"listener"],[18,24,12,22],[18,27,12,25,"listener"],[18,28,12,25],[18,33,12,31,"onFocus"],[18,40,12,38],[18,41,12,39],[18,42,12,40],[19,10,13,8,"window"],[19,16,13,14],[19,17,13,15,"addEventListener"],[19,33,13,31],[19,34,13,32],[19,52,13,50],[19,54,13,52,"listener"],[19,62,13,60],[19,64,13,62],[19,69,13,67],[19,70,13,68],[20,10,14,8],[20,17,14,15],[20,23,14,21],[21,12,15,10,"window"],[21,18,15,16],[21,19,15,17,"removeEventListener"],[21,38,15,36],[21,39,15,37],[21,57,15,55],[21,59,15,57,"listener"],[21,67,15,65],[21,68,15,66],[22,10,16,8],[22,11,16,9],[23,8,17,6],[24,8,18,6],[25,6,19,4],[25,7,19,5],[26,4,20,2],[27,4,21,2,"onSubscribe"],[27,15,21,13,"onSubscribe"],[27,16,21,13],[27,18,21,16],[28,6,22,4],[28,10,22,8],[28,11,22,9],[28,15,22,13],[28,16,22,14],[28,17,22,15,"cleanup"],[28,24,22,22],[28,26,22,24],[29,8,23,6],[29,12,23,10],[29,13,23,11,"setEventListener"],[29,29,23,27],[29,30,23,28],[29,34,23,32],[29,35,23,33],[29,36,23,34,"setup"],[29,41,23,39],[29,42,23,40],[30,6,24,4],[31,4,25,2],[32,4,26,2,"onUnsubscribe"],[32,17,26,15,"onUnsubscribe"],[32,18,26,15],[32,20,26,18],[33,6,27,4],[33,10,27,8],[33,11,27,9],[33,15,27,13],[33,16,27,14,"hasListeners"],[33,28,27,26],[33,29,27,27],[33,30,27,28],[33,32,27,30],[34,8,28,6],[34,12,28,10],[34,13,28,11],[34,14,28,12,"cleanup"],[34,21,28,19],[34,24,28,22],[34,25,28,23],[35,8,29,6],[35,12,29,10],[35,13,29,11],[35,14,29,12,"cleanup"],[35,21,29,19],[35,24,29,22],[35,29,29,27],[35,30,29,28],[36,6,30,4],[37,4,31,2],[38,4,32,2,"setEventListener"],[38,20,32,18,"setEventListener"],[38,21,32,19,"setup"],[38,26,32,24],[38,28,32,26],[39,6,33,4],[39,10,33,8],[39,11,33,9],[39,12,33,10,"setup"],[39,17,33,15],[39,20,33,18,"setup"],[39,25,33,23],[40,6,34,4],[40,10,34,8],[40,11,34,9],[40,12,34,10,"cleanup"],[40,19,34,17],[40,22,34,20],[40,23,34,21],[41,6,35,4],[41,10,35,8],[41,11,35,9],[41,12,35,10,"cleanup"],[41,19,35,17],[41,22,35,20,"setup"],[41,27,35,25],[41,28,35,27,"focused"],[41,35,35,34],[41,39,35,39],[42,8,36,6],[42,12,36,10],[42,19,36,17,"focused"],[42,26,36,24],[42,31,36,29],[42,40,36,38],[42,42,36,40],[43,10,37,8],[43,14,37,12],[43,15,37,13,"setFocused"],[43,25,37,23],[43,26,37,24,"focused"],[43,33,37,31],[43,34,37,32],[44,8,38,6],[44,9,38,7],[44,15,38,13],[45,10,39,8],[45,14,39,12],[45,15,39,13,"onFocus"],[45,22,39,20],[45,23,39,21],[45,24,39,22],[46,8,40,6],[47,6,41,4],[47,7,41,5],[47,8,41,6],[48,4,42,2],[49,4,43,2,"setFocused"],[49,14,43,12,"setFocused"],[49,15,43,13,"focused"],[49,22,43,20],[49,24,43,22],[50,6,44,4],[50,12,44,10,"changed"],[50,19,44,17],[50,22,44,20],[50,26,44,24],[50,27,44,25],[50,28,44,26,"focused"],[50,35,44,33],[50,40,44,38,"focused"],[50,47,44,45],[51,6,45,4],[51,10,45,8,"changed"],[51,17,45,15],[51,19,45,17],[52,8,46,6],[52,12,46,10],[52,13,46,11],[52,14,46,12,"focused"],[52,21,46,19],[52,24,46,22,"focused"],[52,31,46,29],[53,8,47,6],[53,12,47,10],[53,13,47,11,"onFocus"],[53,20,47,18],[53,21,47,19],[53,22,47,20],[54,6,48,4],[55,4,49,2],[56,4,50,2,"onFocus"],[56,11,50,9,"onFocus"],[56,12,50,9],[56,14,50,12],[57,6,51,4],[57,12,51,10,"isFocused"],[57,21,51,19],[57,24,51,22],[57,28,51,26],[57,29,51,27,"isFocused"],[57,38,51,36],[57,39,51,37],[57,40,51,38],[58,6,52,4],[58,10,52,8],[58,11,52,9,"listeners"],[58,20,52,18],[58,21,52,19,"forEach"],[58,28,52,26],[58,29,52,28,"listener"],[58,37,52,36],[58,41,52,41],[59,8,53,6,"listener"],[59,16,53,14],[59,17,53,15,"isFocused"],[59,26,53,24],[59,27,53,25],[60,6,54,4],[60,7,54,5],[60,8,54,6],[61,4,55,2],[62,4,56,2,"isFocused"],[62,13,56,11,"isFocused"],[62,14,56,11],[62,16,56,14],[63,6,57,4],[63,10,57,8],[63,17,57,15],[63,21,57,19],[63,22,57,20],[63,23,57,21,"focused"],[63,30,57,28],[63,35,57,33],[63,44,57,42],[63,46,57,44],[64,8,58,6],[64,15,58,13],[64,19,58,17],[64,20,58,18],[64,21,58,19,"focused"],[64,28,58,26],[65,6,59,4],[66,6,60,4],[66,13,60,11,"globalThis"],[66,23,60,21],[66,24,60,22,"document"],[66,32,60,30],[66,34,60,32,"visibilityState"],[66,49,60,47],[66,54,60,52],[66,62,60,60],[67,4,61,2],[68,2,62,0],[68,3,62,1],[69,2,62,2,"exports"],[69,9,62,2],[69,10,62,2,"FocusManager"],[69,22,62,2],[69,25,62,2,"FocusManager"],[69,37,62,2],[70,2,63,0],[70,6,63,4,"focusManager"],[70,18,63,16],[70,21,63,16,"exports"],[70,28,63,16],[70,29,63,16,"focusManager"],[70,41,63,16],[70,44,63,19],[70,48,63,23,"FocusManager"],[70,60,63,35],[70,61,63,36],[70,62,63,37],[71,0,63,38],[71,3]],"functionMap":{"names":["<global>","FocusManager","FocusManager#constructor","<anonymous>","listener","FocusManager#onSubscribe","FocusManager#onUnsubscribe","FocusManager#setEventListener","setup$argument_0","FocusManager#setFocused","FocusManager#onFocus","listeners.forEach$argument_0","FocusManager#isFocused"],"mappings":"AAA;mBCG;ECI;kBCE;yBCE,eD;KDO;GDC;EIC;GJI;EKC;GLK;EMC;0BCG;KDM;GNC;EQC;GRM;ESC;2BCE;KDE;GTC;EWC;GXK;CDC"}},"type":"js/module"}]}