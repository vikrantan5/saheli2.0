{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoUpdates","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":40,"index":88}}],"key":"xvfiwKXsFVvB05bziLrxffeS3bo=","exportNames":["*"]}},{"name":"./Updates.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":66,"index":155}}],"key":"DhdHs5n8PWgUuT3xXDIgOGCWs8A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.checkAutomatically = exports.channel = void 0;\n  exports.checkForUpdateAsync = checkForUpdateAsync;\n  exports.clearLogEntriesAsync = clearLogEntriesAsync;\n  exports.emergencyLaunchReason = exports.createdAt = void 0;\n  exports.fetchUpdateAsync = fetchUpdateAsync;\n  exports.getExtraParamsAsync = getExtraParamsAsync;\n  exports.manifest = exports.localAssets = exports.launchDuration = exports.isUsingEmbeddedAssets = exports.isEnabled = exports.isEmergencyLaunch = exports.isEmbeddedLaunch = void 0;\n  exports.readLogEntriesAsync = readLogEntriesAsync;\n  exports.reloadAsync = reloadAsync;\n  exports.runtimeVersion = void 0;\n  exports.setExtraParamAsync = setExtraParamAsync;\n  exports.setUpdateURLAndRequestHeadersOverride = setUpdateURLAndRequestHeadersOverride;\n  exports.updateId = void 0;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _ExpoUpdates = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoUpdates\"));\n  var _Updates = require(_dependencyMap[5], \"./Updates.types\");\n  var _excluded = [\"manifestString\"],\n    _excluded2 = [\"manifestString\"];\n  /**\n   * Whether `expo-updates` is enabled. This may be false in a variety of cases including:\n   * - enabled set to false in configuration\n   * - missing or invalid URL in configuration\n   * - missing runtime version or SDK version in configuration\n   * - error accessing storage on device during initialization\n   *\n   * When false, the embedded update is loaded.\n   */\n  var isEnabled = exports.isEnabled = !!_ExpoUpdates.default.isEnabled;\n  /**\n   * The UUID that uniquely identifies the currently running update. The\n   * UUID is represented in its canonical string form and will always use lowercase letters.\n   * This value is `null` when running in a local development environment or any other environment where `expo-updates` is disabled.\n   * @example\n   * `\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"`\n   */\n  var updateId = exports.updateId = _ExpoUpdates.default.updateId && typeof _ExpoUpdates.default.updateId === 'string' ? _ExpoUpdates.default.updateId.toLowerCase() : null;\n  /**\n   * The channel name of the current build, if configured for use with EAS Update. `null` otherwise.\n   *\n   * Expo Go and development builds are not set to a specific channel and can run any updates compatible with their native runtime. Therefore, this value will always be `null` when running an update on Expo Go or a development build.\n   */\n  var channel = exports.channel = _ExpoUpdates.default.channel ?? null;\n  /**\n   * The runtime version of the current build.\n   */\n  var runtimeVersion = exports.runtimeVersion = _ExpoUpdates.default.runtimeVersion ?? null;\n  var _checkAutomaticallyMapNativeToJS = {\n    ALWAYS: _Updates.UpdatesCheckAutomaticallyValue.ON_LOAD,\n    ERROR_RECOVERY_ONLY: _Updates.UpdatesCheckAutomaticallyValue.ON_ERROR_RECOVERY,\n    NEVER: _Updates.UpdatesCheckAutomaticallyValue.NEVER,\n    WIFI_ONLY: _Updates.UpdatesCheckAutomaticallyValue.WIFI_ONLY\n  };\n  /**\n   * Determines if and when `expo-updates` checks for and downloads updates automatically on startup.\n   */\n  var checkAutomatically = exports.checkAutomatically = _checkAutomaticallyMapNativeToJS[_ExpoUpdates.default.checkAutomatically] ?? null;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var localAssets = exports.localAssets = _ExpoUpdates.default.localAssets ?? {};\n  /**\n   * `expo-updates` does its very best to always launch monotonically newer versions of your app so\n   * you don't need to worry about backwards compatibility when you put out an update. In very rare\n   * cases, it's possible that `expo-updates` may need to fall back to the update that's embedded in\n   * the app binary, even after newer updates have been downloaded and run (an \"emergency launch\").\n   * This boolean will be `true` if the app is launching under this fallback mechanism and `false`\n   * otherwise. If you are concerned about backwards compatibility of future updates to your app, you\n   * can use this constant to provide special behavior for this rare case.\n   */\n  var isEmergencyLaunch = exports.isEmergencyLaunch = _ExpoUpdates.default.isEmergencyLaunch;\n  /**\n   * If `isEmergencyLaunch` is set to true, this will contain a string error message describing\n   * what failed during initialization.\n   */\n  var emergencyLaunchReason = exports.emergencyLaunchReason = _ExpoUpdates.default.emergencyLaunchReason;\n  /**\n   * Number of milliseconds it took to launch.\n   */\n  var launchDuration = exports.launchDuration = _ExpoUpdates.default.launchDuration;\n  /**\n   * This will be true if the currently running update is the one embedded in the build,\n   * and not one downloaded from the updates server.\n   */\n  var isEmbeddedLaunch = exports.isEmbeddedLaunch = _ExpoUpdates.default.isEmbeddedLaunch || false;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var isUsingEmbeddedAssets = exports.isUsingEmbeddedAssets = _ExpoUpdates.default.isUsingEmbeddedAssets || false;\n  /**\n   * If `expo-updates` is enabled, this is the\n   * [manifest](/versions/latest/sdk/constants/#manifest) (or\n   * [classic manifest](/versions/latest/sdk/constants/#appmanifest))\n   * object for the update that's currently running.\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this object is\n   * empty.\n   */\n  var manifest = exports.manifest = (_ExpoUpdates.default.manifestString ? JSON.parse(_ExpoUpdates.default.manifestString) : _ExpoUpdates.default.manifest) ?? {};\n  /**\n   * If `expo-updates` is enabled, this is a `Date` object representing the creation time of the update that's currently running (whether it was embedded or downloaded at runtime).\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this value is\n   * null.\n   */\n  var createdAt = exports.createdAt = _ExpoUpdates.default.commitTime ? new Date(_ExpoUpdates.default.commitTime) : null;\n  /**\n   * During non-expo development we block accessing the updates API methods on the JS side, but when developing in\n   * Expo Go or a development client build, the controllers should have control over which API methods should\n   * be allowed.\n   */\n  var shouldDeferToNativeForAPIMethodAvailabilityInDevelopment = !!_ExpoUpdates.default.shouldDeferToNativeForAPIMethodAvailabilityInDevelopment;\n  /**\n   * Developer tool is set when a project is served by `expo start`.\n   */\n  var isUsingDeveloperTool = 'extra' in manifest ? !!manifest.extra?.expoGo?.developer?.tool : false;\n  var manualUpdatesInstructions = 'To test usage of the expo-updates JS API in your app, make a release build with `npx expo run:ios --configuration Release` or ' + '`npx expo run:android --variant Release`.';\n  /**\n   * Instructs the app to reload using the most recently downloaded version. This is useful for\n   * triggering a newly downloaded update to launch without the user needing to manually restart the\n   * app.\n   * Unlike `Expo.reloadAppAsync()` provided by the `expo` package,\n   * this function not only reloads the app but also changes the loaded JavaScript bundle to that of the most recently downloaded update.\n   *\n   * It is not recommended to place any meaningful logic after a call to `await\n   * Updates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\n   * be reloaded, and immediately before posting an asynchronous task to the main thread to actually\n   * reload the app. It is unsafe to make any assumptions about whether any more JS code will be\n   * executed after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\n   * the state of the native module and main threads.\n   *\n   * This method cannot be used in Expo Go or development mode, and the returned promise will be rejected if you\n   * try to do so. It also rejects when `expo-updates` is not enabled.\n   *\n   * @return A promise that fulfills right before the reload instruction is sent to the JS runtime, or\n   * rejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\n   * mode, it most likely means you have installed the module incorrectly. Double check you've\n   * followed the installation instructions. In particular, on iOS ensure that you set the `bridge`\n   * property on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\n   * Android ensure you either call `UpdatesController.initialize` with the instance of\n   * `ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\n   * proper instance of `ReactNativeHost`.\n   */\n  function reloadAsync() {\n    return _reloadAsync.apply(this, arguments);\n  }\n  /**\n   * Checks the server to see if a newly deployed update to your project is available. Does not\n   * actually download the update. This method cannot be used in development mode, and the returned\n   * promise will be rejected if you try to do so.\n   *\n   * Checking for an update uses a device's bandwidth and battery life like any network call.\n   * Additionally, updates served by Expo may be rate limited. A good rule of thumb to check for\n   * updates judiciously is to check when the user launches or foregrounds the app. Avoid polling for\n   * updates in a frequent loop.\n   *\n   * @return A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _reloadAsync() {\n    _reloadAsync = (0, _asyncToGenerator2.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot use the Updates module in development mode in a production app. ${manualUpdatesInstructions}`);\n      }\n      yield _ExpoUpdates.default.reload();\n    });\n    return _reloadAsync.apply(this, arguments);\n  }\n  function checkForUpdateAsync() {\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the current extra params.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _checkForUpdateAsync() {\n    _checkForUpdateAsync = (0, _asyncToGenerator2.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot check for updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield _ExpoUpdates.default.checkForUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties2.default)(result, _excluded);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  function getExtraParamsAsync() {\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  /**\n   * Sets an extra param if value is non-null, otherwise unsets the param.\n   * Extra params are sent as an [Expo Structured Field Value Dictionary](/technical-specs/expo-sfv-0/)\n   * in the `Expo-Extra-Params` header of update requests. A compliant update server may use these params when selecting an update to serve.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _getExtraParamsAsync() {\n    _getExtraParamsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoUpdates.default.getExtraParamsAsync();\n    });\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  function setExtraParamAsync(_x, _x2) {\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the most recent `expo-updates` log entries.\n   *\n   * @param maxAge Sets the max age of retrieved log entries in milliseconds. Default to `3600000` ms (1 hour).\n   *\n   * @return A promise that fulfills with an array of [`UpdatesLogEntry`](#updateslogentry) objects;\n   *\n   * The promise rejects if there is an unexpected error in retrieving the logs.\n   */\n  function _setExtraParamAsync() {\n    _setExtraParamAsync = (0, _asyncToGenerator2.default)(function* (key, value) {\n      return yield _ExpoUpdates.default.setExtraParamAsync(key, value ?? null);\n    });\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  function readLogEntriesAsync() {\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Clears existing `expo-updates` log entries.\n   *\n   * > For now, this operation does nothing on the client.  Once log persistence has been\n   * > implemented, this operation will actually remove existing logs.\n   *\n   * @return A promise that fulfills if the clear operation was successful.\n   *\n   * The promise rejects if there is an unexpected error in clearing the logs.\n   *\n   */\n  function _readLogEntriesAsync() {\n    _readLogEntriesAsync = (0, _asyncToGenerator2.default)(function* () {\n      var maxAge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3600000;\n      return yield _ExpoUpdates.default.readLogEntriesAsync(maxAge);\n    });\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  function clearLogEntriesAsync() {\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Downloads the most recently deployed update to your project from server to the device's local\n   * storage. This method cannot be used in development mode, and the returned promise will be\n   * rejected if you try to do so.\n   *\n   > **Note:** [`reloadAsync()`](#updatesreloadasync) can be called after promise resolution to\n   * reload the app using the most recently downloaded version. Otherwise, the update will be applied\n   * on the next app cold start.\n   *\n   * @return A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _clearLogEntriesAsync() {\n    _clearLogEntriesAsync = (0, _asyncToGenerator2.default)(function* () {\n      yield _ExpoUpdates.default.clearLogEntriesAsync();\n    });\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  function fetchUpdateAsync() {\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Overrides updates URL and reuqest headers in runtime from build time.\n   * This method allows you to load specific updates from a URL that you provide.\n   * Use this method at your own risk, as it may cause unexpected behavior.\n   * [Learn more about use cases and limitations](https://docs.expo.dev/eas-update/override/).\n   * @experimental\n   */\n  function _fetchUpdateAsync() {\n    _fetchUpdateAsync = (0, _asyncToGenerator2.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot fetch updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield _ExpoUpdates.default.fetchUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties2.default)(result, _excluded2);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  function setUpdateURLAndRequestHeadersOverride(configOverride) {\n    _ExpoUpdates.default.setUpdateURLAndRequestHeadersOverride(configOverride);\n  }\n});","lineCount":314,"map":[[21,2,1,0],[21,6,1,0,"_expoModulesCore"],[21,22,1,0],[21,25,1,0,"require"],[21,32,1,0],[21,33,1,0,"_dependencyMap"],[21,47,1,0],[22,2,2,0],[22,6,2,0,"_ExpoUpdates"],[22,18,2,0],[22,21,2,0,"_interopRequireDefault"],[22,43,2,0],[22,44,2,0,"require"],[22,51,2,0],[22,52,2,0,"_dependencyMap"],[22,66,2,0],[23,2,3,0],[23,6,3,0,"_Updates"],[23,14,3,0],[23,17,3,0,"require"],[23,24,3,0],[23,25,3,0,"_dependencyMap"],[23,39,3,0],[24,2,3,66],[24,6,3,66,"_excluded"],[24,15,3,66],[25,4,3,66,"_excluded2"],[25,14,3,66],[26,2,4,0],[27,0,5,0],[28,0,6,0],[29,0,7,0],[30,0,8,0],[31,0,9,0],[32,0,10,0],[33,0,11,0],[34,0,12,0],[35,2,13,7],[35,6,13,13,"isEnabled"],[35,15,13,22],[35,18,13,22,"exports"],[35,25,13,22],[35,26,13,22,"isEnabled"],[35,35,13,22],[35,38,13,25],[35,39,13,26],[35,40,13,27,"ExpoUpdates"],[35,60,13,38],[35,61,13,39,"isEnabled"],[35,70,13,48],[36,2,14,0],[37,0,15,0],[38,0,16,0],[39,0,17,0],[40,0,18,0],[41,0,19,0],[42,0,20,0],[43,2,21,7],[43,6,21,13,"updateId"],[43,14,21,21],[43,17,21,21,"exports"],[43,24,21,21],[43,25,21,21,"updateId"],[43,33,21,21],[43,36,21,24,"ExpoUpdates"],[43,56,21,35],[43,57,21,36,"updateId"],[43,65,21,44],[43,69,21,48],[43,76,21,55,"ExpoUpdates"],[43,96,21,66],[43,97,21,67,"updateId"],[43,105,21,75],[43,110,21,80],[43,118,21,88],[43,121,22,6,"ExpoUpdates"],[43,141,22,17],[43,142,22,18,"updateId"],[43,150,22,26],[43,151,22,27,"toLowerCase"],[43,162,22,38],[43,163,22,39],[43,164,22,40],[43,167,23,6],[43,171,23,10],[44,2,24,0],[45,0,25,0],[46,0,26,0],[47,0,27,0],[48,0,28,0],[49,2,29,7],[49,6,29,13,"channel"],[49,13,29,20],[49,16,29,20,"exports"],[49,23,29,20],[49,24,29,20,"channel"],[49,31,29,20],[49,34,29,23,"ExpoUpdates"],[49,54,29,34],[49,55,29,35,"channel"],[49,62,29,42],[49,66,29,46],[49,70,29,50],[50,2,30,0],[51,0,31,0],[52,0,32,0],[53,2,33,7],[53,6,33,13,"runtimeVersion"],[53,20,33,27],[53,23,33,27,"exports"],[53,30,33,27],[53,31,33,27,"runtimeVersion"],[53,45,33,27],[53,48,33,30,"ExpoUpdates"],[53,68,33,41],[53,69,33,42,"runtimeVersion"],[53,83,33,56],[53,87,33,60],[53,91,33,64],[54,2,34,0],[54,6,34,6,"_checkAutomaticallyMapNativeToJS"],[54,38,34,38],[54,41,34,41],[55,4,35,4,"ALWAYS"],[55,10,35,10],[55,12,35,12,"UpdatesCheckAutomaticallyValue"],[55,51,35,42],[55,52,35,43,"ON_LOAD"],[55,59,35,50],[56,4,36,4,"ERROR_RECOVERY_ONLY"],[56,23,36,23],[56,25,36,25,"UpdatesCheckAutomaticallyValue"],[56,64,36,55],[56,65,36,56,"ON_ERROR_RECOVERY"],[56,82,36,73],[57,4,37,4,"NEVER"],[57,9,37,9],[57,11,37,11,"UpdatesCheckAutomaticallyValue"],[57,50,37,41],[57,51,37,42,"NEVER"],[57,56,37,47],[58,4,38,4,"WIFI_ONLY"],[58,13,38,13],[58,15,38,15,"UpdatesCheckAutomaticallyValue"],[58,54,38,45],[58,55,38,46,"WIFI_ONLY"],[59,2,39,0],[59,3,39,1],[60,2,40,0],[61,0,41,0],[62,0,42,0],[63,2,43,7],[63,6,43,13,"checkAutomatically"],[63,24,43,31],[63,27,43,31,"exports"],[63,34,43,31],[63,35,43,31,"checkAutomatically"],[63,53,43,31],[63,56,43,34,"_checkAutomaticallyMapNativeToJS"],[63,88,43,66],[63,89,43,67,"ExpoUpdates"],[63,109,43,78],[63,110,43,79,"checkAutomatically"],[63,128,43,97],[63,129,43,98],[63,133,43,102],[63,137,43,106],[64,2,44,0],[65,2,45,0],[66,0,46,0],[67,0,47,0],[68,2,48,7],[68,6,48,13,"localAssets"],[68,17,48,24],[68,20,48,24,"exports"],[68,27,48,24],[68,28,48,24,"localAssets"],[68,39,48,24],[68,42,48,27,"ExpoUpdates"],[68,62,48,38],[68,63,48,39,"localAssets"],[68,74,48,50],[68,78,48,54],[68,79,48,55],[68,80,48,56],[69,2,49,0],[70,0,50,0],[71,0,51,0],[72,0,52,0],[73,0,53,0],[74,0,54,0],[75,0,55,0],[76,0,56,0],[77,0,57,0],[78,2,58,7],[78,6,58,13,"isEmergencyLaunch"],[78,23,58,30],[78,26,58,30,"exports"],[78,33,58,30],[78,34,58,30,"isEmergencyLaunch"],[78,51,58,30],[78,54,58,33,"ExpoUpdates"],[78,74,58,44],[78,75,58,45,"isEmergencyLaunch"],[78,92,58,62],[79,2,59,0],[80,0,60,0],[81,0,61,0],[82,0,62,0],[83,2,63,7],[83,6,63,13,"emergencyLaunchReason"],[83,27,63,34],[83,30,63,34,"exports"],[83,37,63,34],[83,38,63,34,"emergencyLaunchReason"],[83,59,63,34],[83,62,63,37,"ExpoUpdates"],[83,82,63,48],[83,83,63,49,"emergencyLaunchReason"],[83,104,63,70],[84,2,64,0],[85,0,65,0],[86,0,66,0],[87,2,67,7],[87,6,67,13,"launchDuration"],[87,20,67,27],[87,23,67,27,"exports"],[87,30,67,27],[87,31,67,27,"launchDuration"],[87,45,67,27],[87,48,67,30,"ExpoUpdates"],[87,68,67,41],[87,69,67,42,"launchDuration"],[87,83,67,56],[88,2,68,0],[89,0,69,0],[90,0,70,0],[91,0,71,0],[92,2,72,7],[92,6,72,13,"isEmbeddedLaunch"],[92,22,72,29],[92,25,72,29,"exports"],[92,32,72,29],[92,33,72,29,"isEmbeddedLaunch"],[92,49,72,29],[92,52,72,32,"ExpoUpdates"],[92,72,72,43],[92,73,72,44,"isEmbeddedLaunch"],[92,89,72,60],[92,93,72,64],[92,98,72,69],[93,2,73,0],[94,2,74,0],[95,0,75,0],[96,0,76,0],[97,2,77,7],[97,6,77,13,"isUsingEmbeddedAssets"],[97,27,77,34],[97,30,77,34,"exports"],[97,37,77,34],[97,38,77,34,"isUsingEmbeddedAssets"],[97,59,77,34],[97,62,77,37,"ExpoUpdates"],[97,82,77,48],[97,83,77,49,"isUsingEmbeddedAssets"],[97,104,77,70],[97,108,77,74],[97,113,77,79],[98,2,78,0],[99,0,79,0],[100,0,80,0],[101,0,81,0],[102,0,82,0],[103,0,83,0],[104,0,84,0],[105,0,85,0],[106,0,86,0],[107,2,87,7],[107,6,87,13,"manifest"],[107,14,87,21],[107,17,87,21,"exports"],[107,24,87,21],[107,25,87,21,"manifest"],[107,33,87,21],[107,36,87,24],[107,37,87,25,"ExpoUpdates"],[107,57,87,36],[107,58,87,37,"manifestString"],[107,72,87,51],[107,75,87,54,"JSON"],[107,79,87,58],[107,80,87,59,"parse"],[107,85,87,64],[107,86,87,65,"ExpoUpdates"],[107,106,87,76],[107,107,87,77,"manifestString"],[107,121,87,91],[107,122,87,92],[107,125,87,95,"ExpoUpdates"],[107,145,87,106],[107,146,87,107,"manifest"],[107,154,87,115],[107,159,88,4],[107,160,88,5],[107,161,88,6],[108,2,89,0],[109,0,90,0],[110,0,91,0],[111,0,92,0],[112,0,93,0],[113,0,94,0],[114,2,95,7],[114,6,95,13,"createdAt"],[114,15,95,22],[114,18,95,22,"exports"],[114,25,95,22],[114,26,95,22,"createdAt"],[114,35,95,22],[114,38,95,25,"ExpoUpdates"],[114,58,95,36],[114,59,95,37,"commitTime"],[114,69,95,47],[114,72,96,6],[114,76,96,10,"Date"],[114,80,96,14],[114,81,96,15,"ExpoUpdates"],[114,101,96,26],[114,102,96,27,"commitTime"],[114,112,96,37],[114,113,96,38],[114,116,97,6],[114,120,97,10],[115,2,98,0],[116,0,99,0],[117,0,100,0],[118,0,101,0],[119,0,102,0],[120,2,103,0],[120,6,103,6,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[120,62,103,62],[120,65,103,65],[120,66,103,66],[120,67,103,67,"ExpoUpdates"],[120,87,103,78],[120,88,103,79,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[120,144,103,135],[121,2,104,0],[122,0,105,0],[123,0,106,0],[124,2,107,0],[124,6,107,6,"isUsingDeveloperTool"],[124,26,107,26],[124,29,107,29],[124,36,107,36],[124,40,107,40,"manifest"],[124,48,107,48],[124,51,107,51],[124,52,107,52],[124,53,107,53,"manifest"],[124,61,107,61],[124,62,107,62,"extra"],[124,67,107,67],[124,69,107,69,"expoGo"],[124,75,107,75],[124,77,107,77,"developer"],[124,86,107,86],[124,88,107,88,"tool"],[124,92,107,92],[124,95,107,95],[124,100,107,100],[125,2,108,0],[125,6,108,6,"manualUpdatesInstructions"],[125,31,108,31],[125,34,108,34],[125,162,108,162],[125,165,109,4],[125,208,109,47],[126,2,110,0],[127,0,111,0],[128,0,112,0],[129,0,113,0],[130,0,114,0],[131,0,115,0],[132,0,116,0],[133,0,117,0],[134,0,118,0],[135,0,119,0],[136,0,120,0],[137,0,121,0],[138,0,122,0],[139,0,123,0],[140,0,124,0],[141,0,125,0],[142,0,126,0],[143,0,127,0],[144,0,128,0],[145,0,129,0],[146,0,130,0],[147,0,131,0],[148,0,132,0],[149,0,133,0],[150,0,134,0],[151,0,135,0],[152,2,110,0],[152,11,136,22,"reloadAsync"],[152,22,136,33,"reloadAsync"],[152,23,136,33],[153,4,136,33],[153,11,136,33,"_reloadAsync"],[153,23,136,33],[153,24,136,33,"apply"],[153,29,136,33],[153,36,136,33,"arguments"],[153,45,136,33],[154,2,136,33],[155,2,143,0],[156,0,144,0],[157,0,145,0],[158,0,146,0],[159,0,147,0],[160,0,148,0],[161,0,149,0],[162,0,150,0],[163,0,151,0],[164,0,152,0],[165,0,153,0],[166,0,154,0],[167,0,155,0],[168,0,156,0],[169,0,157,0],[170,2,143,0],[170,11,143,0,"_reloadAsync"],[170,24,143,0],[171,4,143,0,"_reloadAsync"],[171,16,143,0],[171,23,143,0,"_asyncToGenerator2"],[171,41,143,0],[171,42,143,0,"default"],[171,49,143,0],[171,51,136,7],[171,64,136,36],[172,6,137,4],[172,10,137,8],[172,11,137,9,"__DEV__"],[172,18,137,16],[172,22,137,20,"isUsingDeveloperTool"],[172,42,137,40],[172,47,138,8],[172,48,138,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[172,104,138,65],[172,106,138,67],[173,8,139,8],[173,14,139,14],[173,18,139,18,"CodedError"],[173,45,139,28],[173,46,139,29],[173,68,139,51],[173,70,139,53],[173,148,139,131,"manualUpdatesInstructions"],[173,173,139,156],[173,175,139,158],[173,176,139,159],[174,6,140,4],[175,6,141,4],[175,12,141,10,"ExpoUpdates"],[175,32,141,21],[175,33,141,22,"reload"],[175,39,141,28],[175,40,141,29],[175,41,141,30],[176,4,142,0],[176,5,142,1],[177,4,142,1],[177,11,142,1,"_reloadAsync"],[177,23,142,1],[177,24,142,1,"apply"],[177,29,142,1],[177,36,142,1,"arguments"],[177,45,142,1],[178,2,142,1],[179,2,142,1],[179,11,158,22,"checkForUpdateAsync"],[179,30,158,41,"checkForUpdateAsync"],[179,31,158,41],[180,4,158,41],[180,11,158,41,"_checkForUpdateAsync"],[180,31,158,41],[180,32,158,41,"apply"],[180,37,158,41],[180,44,158,41,"arguments"],[180,53,158,41],[181,2,158,41],[182,2,173,0],[183,0,174,0],[184,0,175,0],[185,0,176,0],[186,0,177,0],[187,2,173,0],[187,11,173,0,"_checkForUpdateAsync"],[187,32,173,0],[188,4,173,0,"_checkForUpdateAsync"],[188,24,173,0],[188,31,173,0,"_asyncToGenerator2"],[188,49,173,0],[188,50,173,0,"default"],[188,57,173,0],[188,59,158,7],[188,72,158,44],[189,6,159,4],[189,10,159,8],[189,11,159,9,"__DEV__"],[189,18,159,16],[189,22,159,20,"isUsingDeveloperTool"],[189,42,159,40],[189,47,160,8],[189,48,160,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[189,104,160,65],[189,106,160,67],[190,8,161,8],[190,14,161,14],[190,18,161,18,"CodedError"],[190,45,161,28],[190,46,161,29],[190,68,161,51],[190,70,161,53],[190,123,161,106,"manualUpdatesInstructions"],[190,148,161,131],[190,150,161,133],[190,151,161,134],[191,6,162,4],[192,6,163,4],[192,10,163,10,"result"],[192,16,163,16],[192,25,163,25,"ExpoUpdates"],[192,45,163,36],[192,46,163,37,"checkForUpdateAsync"],[192,65,163,56],[192,66,163,57],[192,67,163,58],[193,6,164,4],[193,10,164,8],[193,26,164,24],[193,30,164,28,"result"],[193,36,164,34],[193,38,164,36],[194,8,165,8],[194,12,165,16,"manifestString"],[194,26,165,30],[194,29,165,44,"result"],[194,35,165,50],[194,36,165,16,"manifestString"],[194,50,165,30],[195,10,165,35,"rest"],[195,14,165,39],[195,21,165,39,"_objectWithoutProperties2"],[195,46,165,39],[195,47,165,39,"default"],[195,54,165,39],[195,56,165,44,"result"],[195,62,165,50],[195,64,165,50,"_excluded"],[195,73,165,50],[196,8,166,8],[196,15,166,15],[197,10,167,12],[197,13,167,15,"rest"],[197,17,167,19],[198,10,168,12,"manifest"],[198,18,168,20],[198,20,168,22,"JSON"],[198,24,168,26],[198,25,168,27,"parse"],[198,30,168,32],[198,31,168,33,"manifestString"],[198,45,168,47],[199,8,169,8],[199,9,169,9],[200,6,170,4],[201,6,171,4],[201,13,171,11,"result"],[201,19,171,17],[202,4,172,0],[202,5,172,1],[203,4,172,1],[203,11,172,1,"_checkForUpdateAsync"],[203,31,172,1],[203,32,172,1,"apply"],[203,37,172,1],[203,44,172,1,"arguments"],[203,53,172,1],[204,2,172,1],[205,2,172,1],[205,11,178,22,"getExtraParamsAsync"],[205,30,178,41,"getExtraParamsAsync"],[205,31,178,41],[206,4,178,41],[206,11,178,41,"_getExtraParamsAsync"],[206,31,178,41],[206,32,178,41,"apply"],[206,37,178,41],[206,44,178,41,"arguments"],[206,53,178,41],[207,2,178,41],[208,2,181,0],[209,0,182,0],[210,0,183,0],[211,0,184,0],[212,0,185,0],[213,0,186,0],[214,0,187,0],[215,2,181,0],[215,11,181,0,"_getExtraParamsAsync"],[215,32,181,0],[216,4,181,0,"_getExtraParamsAsync"],[216,24,181,0],[216,31,181,0,"_asyncToGenerator2"],[216,49,181,0],[216,50,181,0,"default"],[216,57,181,0],[216,59,178,7],[216,72,178,44],[217,6,179,4],[217,19,179,17,"ExpoUpdates"],[217,39,179,28],[217,40,179,29,"getExtraParamsAsync"],[217,59,179,48],[217,60,179,49],[217,61,179,50],[218,4,180,0],[218,5,180,1],[219,4,180,1],[219,11,180,1,"_getExtraParamsAsync"],[219,31,180,1],[219,32,180,1,"apply"],[219,37,180,1],[219,44,180,1,"arguments"],[219,53,180,1],[220,2,180,1],[221,2,180,1],[221,11,188,22,"setExtraParamAsync"],[221,29,188,40,"setExtraParamAsync"],[221,30,188,40,"_x"],[221,32,188,40],[221,34,188,40,"_x2"],[221,37,188,40],[222,4,188,40],[222,11,188,40,"_setExtraParamAsync"],[222,30,188,40],[222,31,188,40,"apply"],[222,36,188,40],[222,43,188,40,"arguments"],[222,52,188,40],[223,2,188,40],[224,2,191,0],[225,0,192,0],[226,0,193,0],[227,0,194,0],[228,0,195,0],[229,0,196,0],[230,0,197,0],[231,0,198,0],[232,0,199,0],[233,2,191,0],[233,11,191,0,"_setExtraParamAsync"],[233,31,191,0],[234,4,191,0,"_setExtraParamAsync"],[234,23,191,0],[234,30,191,0,"_asyncToGenerator2"],[234,48,191,0],[234,49,191,0,"default"],[234,56,191,0],[234,58,188,7],[234,69,188,41,"key"],[234,72,188,44],[234,74,188,46,"value"],[234,79,188,51],[234,81,188,53],[235,6,189,4],[235,19,189,17,"ExpoUpdates"],[235,39,189,28],[235,40,189,29,"setExtraParamAsync"],[235,58,189,47],[235,59,189,48,"key"],[235,62,189,51],[235,64,189,53,"value"],[235,69,189,58],[235,73,189,62],[235,77,189,66],[235,78,189,67],[236,4,190,0],[236,5,190,1],[237,4,190,1],[237,11,190,1,"_setExtraParamAsync"],[237,30,190,1],[237,31,190,1,"apply"],[237,36,190,1],[237,43,190,1,"arguments"],[237,52,190,1],[238,2,190,1],[239,2,190,1],[239,11,200,22,"readLogEntriesAsync"],[239,30,200,41,"readLogEntriesAsync"],[239,31,200,41],[240,4,200,41],[240,11,200,41,"_readLogEntriesAsync"],[240,31,200,41],[240,32,200,41,"apply"],[240,37,200,41],[240,44,200,41,"arguments"],[240,53,200,41],[241,2,200,41],[242,2,203,0],[243,0,204,0],[244,0,205,0],[245,0,206,0],[246,0,207,0],[247,0,208,0],[248,0,209,0],[249,0,210,0],[250,0,211,0],[251,0,212,0],[252,0,213,0],[253,2,203,0],[253,11,203,0,"_readLogEntriesAsync"],[253,32,203,0],[254,4,203,0,"_readLogEntriesAsync"],[254,24,203,0],[254,31,203,0,"_asyncToGenerator2"],[254,49,203,0],[254,50,203,0,"default"],[254,57,203,0],[254,59,200,7],[254,72,200,60],[255,6,200,60],[255,10,200,42,"maxAge"],[255,16,200,48],[255,19,200,48,"arguments"],[255,28,200,48],[255,29,200,48,"length"],[255,35,200,48],[255,43,200,48,"arguments"],[255,52,200,48],[255,60,200,48,"undefined"],[255,69,200,48],[255,72,200,48,"arguments"],[255,81,200,48],[255,87,200,51],[255,94,200,58],[256,6,201,4],[256,19,201,17,"ExpoUpdates"],[256,39,201,28],[256,40,201,29,"readLogEntriesAsync"],[256,59,201,48],[256,60,201,49,"maxAge"],[256,66,201,55],[256,67,201,56],[257,4,202,0],[257,5,202,1],[258,4,202,1],[258,11,202,1,"_readLogEntriesAsync"],[258,31,202,1],[258,32,202,1,"apply"],[258,37,202,1],[258,44,202,1,"arguments"],[258,53,202,1],[259,2,202,1],[260,2,202,1],[260,11,214,22,"clearLogEntriesAsync"],[260,31,214,42,"clearLogEntriesAsync"],[260,32,214,42],[261,4,214,42],[261,11,214,42,"_clearLogEntriesAsync"],[261,32,214,42],[261,33,214,42,"apply"],[261,38,214,42],[261,45,214,42,"arguments"],[261,54,214,42],[262,2,214,42],[263,2,217,0],[264,0,218,0],[265,0,219,0],[266,0,220,0],[267,0,221,0],[268,0,222,0],[269,0,223,0],[270,0,224,0],[271,0,225,0],[272,0,226,0],[273,0,227,0],[274,0,228,0],[275,0,229,0],[276,0,230,0],[277,2,217,0],[277,11,217,0,"_clearLogEntriesAsync"],[277,33,217,0],[278,4,217,0,"_clearLogEntriesAsync"],[278,25,217,0],[278,32,217,0,"_asyncToGenerator2"],[278,50,217,0],[278,51,217,0,"default"],[278,58,217,0],[278,60,214,7],[278,73,214,45],[279,6,215,4],[279,12,215,10,"ExpoUpdates"],[279,32,215,21],[279,33,215,22,"clearLogEntriesAsync"],[279,53,215,42],[279,54,215,43],[279,55,215,44],[280,4,216,0],[280,5,216,1],[281,4,216,1],[281,11,216,1,"_clearLogEntriesAsync"],[281,32,216,1],[281,33,216,1,"apply"],[281,38,216,1],[281,45,216,1,"arguments"],[281,54,216,1],[282,2,216,1],[283,2,216,1],[283,11,231,22,"fetchUpdateAsync"],[283,27,231,38,"fetchUpdateAsync"],[283,28,231,38],[284,4,231,38],[284,11,231,38,"_fetchUpdateAsync"],[284,28,231,38],[284,29,231,38,"apply"],[284,34,231,38],[284,41,231,38,"arguments"],[284,50,231,38],[285,2,231,38],[286,2,246,0],[287,0,247,0],[288,0,248,0],[289,0,249,0],[290,0,250,0],[291,0,251,0],[292,0,252,0],[293,2,246,0],[293,11,246,0,"_fetchUpdateAsync"],[293,29,246,0],[294,4,246,0,"_fetchUpdateAsync"],[294,21,246,0],[294,28,246,0,"_asyncToGenerator2"],[294,46,246,0],[294,47,246,0,"default"],[294,54,246,0],[294,56,231,7],[294,69,231,41],[295,6,232,4],[295,10,232,8],[295,11,232,9,"__DEV__"],[295,18,232,16],[295,22,232,20,"isUsingDeveloperTool"],[295,42,232,40],[295,47,233,8],[295,48,233,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[295,104,233,65],[295,106,233,67],[296,8,234,8],[296,14,234,14],[296,18,234,18,"CodedError"],[296,45,234,28],[296,46,234,29],[296,68,234,51],[296,70,234,53],[296,119,234,102,"manualUpdatesInstructions"],[296,144,234,127],[296,146,234,129],[296,147,234,130],[297,6,235,4],[298,6,236,4],[298,10,236,10,"result"],[298,16,236,16],[298,25,236,25,"ExpoUpdates"],[298,45,236,36],[298,46,236,37,"fetchUpdateAsync"],[298,62,236,53],[298,63,236,54],[298,64,236,55],[299,6,237,4],[299,10,237,8],[299,26,237,24],[299,30,237,28,"result"],[299,36,237,34],[299,38,237,36],[300,8,238,8],[300,12,238,16,"manifestString"],[300,26,238,30],[300,29,238,44,"result"],[300,35,238,50],[300,36,238,16,"manifestString"],[300,50,238,30],[301,10,238,35,"rest"],[301,14,238,39],[301,21,238,39,"_objectWithoutProperties2"],[301,46,238,39],[301,47,238,39,"default"],[301,54,238,39],[301,56,238,44,"result"],[301,62,238,50],[301,64,238,50,"_excluded2"],[301,74,238,50],[302,8,239,8],[302,15,239,15],[303,10,240,12],[303,13,240,15,"rest"],[303,17,240,19],[304,10,241,12,"manifest"],[304,18,241,20],[304,20,241,22,"JSON"],[304,24,241,26],[304,25,241,27,"parse"],[304,30,241,32],[304,31,241,33,"manifestString"],[304,45,241,47],[305,8,242,8],[305,9,242,9],[306,6,243,4],[307,6,244,4],[307,13,244,11,"result"],[307,19,244,17],[308,4,245,0],[308,5,245,1],[309,4,245,1],[309,11,245,1,"_fetchUpdateAsync"],[309,28,245,1],[309,29,245,1,"apply"],[309,34,245,1],[309,41,245,1,"arguments"],[309,50,245,1],[310,2,245,1],[311,2,253,7],[311,11,253,16,"setUpdateURLAndRequestHeadersOverride"],[311,48,253,53,"setUpdateURLAndRequestHeadersOverride"],[311,49,253,54,"configOverride"],[311,63,253,68],[311,65,253,70],[312,4,254,4,"ExpoUpdates"],[312,24,254,15],[312,25,254,16,"setUpdateURLAndRequestHeadersOverride"],[312,62,254,53],[312,63,254,54,"configOverride"],[312,77,254,68],[312,78,254,69],[313,2,255,0],[314,0,255,1],[314,3]],"functionMap":{"names":["<global>","reloadAsync","checkForUpdateAsync","getExtraParamsAsync","setExtraParamAsync","readLogEntriesAsync","clearLogEntriesAsync","fetchUpdateAsync","setUpdateURLAndRequestHeadersOverride"],"mappings":"AAA;OCuI;CDM;OEgB;CFc;OGM;CHE;OIQ;CJE;OKU;CLE;OMY;CNE;OOe;CPc;OQQ;CRE"}},"type":"js/module"}]}