{"dependencies":[{"name":"../config/supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":46,"index":82}}],"key":"tISGjAChzu0MylB2qV4f9enHnO8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.registerUser = exports.onAuthChange = exports.logoutUser = exports.loginUser = exports.getUserData = exports.getCurrentUser = void 0;\n  var _supabase = require(_dependencyMap[0], \"../config/supabase\");\n  // Supabase Authentication Service\n\n  // Register new user with Supabase Auth and store data in PostgreSQL\n  const registerUser = async userData => {\n    try {\n      const {\n        email,\n        password,\n        name,\n        address,\n        occupation,\n        emergencyContacts\n      } = userData;\n\n      // Step 1: Create user in Supabase Auth\n      const {\n        data: authData,\n        error: authError\n      } = await _supabase.supabase.auth.signUp({\n        email: email,\n        password: password\n      });\n      if (authError) {\n        console.error('Supabase Auth error:', authError);\n        return {\n          success: false,\n          error: authError.message\n        };\n      }\n      if (!authData.user) {\n        return {\n          success: false,\n          error: 'User creation failed'\n        };\n      }\n      const userId = authData.user.id;\n\n      // Step 2: Store user profile data in 'users' table\n      const {\n        error: userError\n      } = await _supabase.supabase.from('users').insert([{\n        id: userId,\n        email: email,\n        name: name,\n        address: address,\n        occupation: occupation,\n        created_at: new Date().toISOString()\n      }]);\n      if (userError) {\n        console.error('User profile insert error:', userError);\n        // If profile creation fails, we should ideally delete the auth user\n        // but for now, we'll just return the error\n        return {\n          success: false,\n          error: userError.message\n        };\n      }\n\n      // Step 3: Store emergency contacts in 'emergency_contacts' table\n      const contactsToInsert = emergencyContacts.map(contact => ({\n        user_id: userId,\n        name: contact.name,\n        phone: contact.phone\n      }));\n      const {\n        error: contactsError\n      } = await _supabase.supabase.from('emergency_contacts').insert(contactsToInsert);\n      if (contactsError) {\n        console.error('Emergency contacts insert error:', contactsError);\n        return {\n          success: false,\n          error: contactsError.message\n        };\n      }\n      return {\n        success: true,\n        user: authData.user\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // Sign in existing user\n  exports.registerUser = registerUser;\n  const loginUser = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await _supabase.supabase.auth.signInWithPassword({\n        email: email,\n        password: password\n      });\n      if (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // Sign out user\n  exports.loginUser = loginUser;\n  const logoutUser = async () => {\n    try {\n      const {\n        error\n      } = await _supabase.supabase.auth.signOut();\n      if (error) {\n        console.error('Logout error:', error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Logout error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // Get user data from PostgreSQL (profile + emergency contacts)\n  exports.logoutUser = logoutUser;\n  const getUserData = async userId => {\n    try {\n      // Get user profile\n      const {\n        data: userData,\n        error: userError\n      } = await _supabase.supabase.from('users').select('*').eq('id', userId).single();\n      if (userError) {\n        console.error('Get user data error:', userError);\n        return {\n          success: false,\n          error: userError.message\n        };\n      }\n      if (!userData) {\n        return {\n          success: false,\n          error: 'User data not found'\n        };\n      }\n\n      // Get emergency contacts\n      const {\n        data: contacts,\n        error: contactsError\n      } = await _supabase.supabase.from('emergency_contacts').select('*').eq('user_id', userId);\n      if (contactsError) {\n        console.error('Get emergency contacts error:', contactsError);\n        return {\n          success: false,\n          error: contactsError.message\n        };\n      }\n\n      // Combine user data with emergency contacts\n      const completeUserData = {\n        ...userData,\n        emergencyContacts: contacts || []\n      };\n      return {\n        success: true,\n        data: completeUserData\n      };\n    } catch (error) {\n      console.error('Get user data error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // Get current authenticated user\n  exports.getUserData = getUserData;\n  const getCurrentUser = async () => {\n    try {\n      const {\n        data: {\n          user\n        },\n        error\n      } = await _supabase.supabase.auth.getUser();\n      if (error) {\n        console.error('Get current user error:', error);\n        return null;\n      }\n      return user;\n    } catch (error) {\n      console.error('Get current user error:', error);\n      return null;\n    }\n  };\n\n  // Listen to auth state changes\n  exports.getCurrentUser = getCurrentUser;\n  const onAuthChange = callback => {\n    const {\n      data: {\n        subscription\n      }\n    } = _supabase.supabase.auth.onAuthStateChange((_event, session) => {\n      callback(session?.user || null);\n    });\n\n    // Return unsubscribe function\n    return () => {\n      subscription.unsubscribe();\n    };\n  };\n\n  // ============================================\n  // FIREBASE CODE (KEPT AS BACKUP - COMMENTED)\n  // ============================================\n\n  /*\r\n  import { \r\n    createUserWithEmailAndPassword, \r\n    signInWithEmailAndPassword,\r\n    signOut as firebaseSignOut,\r\n    onAuthStateChanged\r\n  } from 'firebase/auth';\r\n  import { doc, setDoc, getDoc } from 'firebase/firestore';\r\n  import { auth, db } from '../config/firebase';\r\n  \r\n  // Register new user with Firebase Auth and store data in Firestore\r\n  export const registerUser = async (userData) => {\r\n    try {\r\n      const { email, password, name, address, occupation, emergencyContacts } = userData;\r\n      \r\n      // Create user in Firebase Auth\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      \r\n      // Store additional user data in Firestore\r\n      await setDoc(doc(db, 'users', user.uid), {\r\n        uid: user.uid,\r\n        email: email,\r\n        name: name,\r\n        address: address,\r\n        occupation: occupation,\r\n        emergencyContacts: emergencyContacts, // Array of 3 contacts\r\n        createdAt: new Date().toISOString()\r\n      });\r\n      \r\n      return { success: true, user };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n  \r\n  // Sign in existing user\r\n  export const loginUser = async (email, password) => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      return { success: true, user: userCredential.user };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n  \r\n  // Sign out user\r\n  export const logoutUser = async () => {\r\n    try {\r\n      await firebaseSignOut(auth);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n  \r\n  // Get user data from Firestore\r\n  export const getUserData = async (uid) => {\r\n    try {\r\n      const userDoc = await getDoc(doc(db, 'users', uid));\r\n      if (userDoc.exists()) {\r\n        return { success: true, data: userDoc.data() };\r\n      } else {\r\n        return { success: false, error: 'User data not found' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Get user data error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n  \r\n  // Listen to auth state changes\r\n  export const onAuthChange = (callback) => {\r\n    return onAuthStateChanged(auth, callback);\r\n  };\r\n  */\n  exports.onAuthChange = onAuthChange;\n});","lineCount":327,"map":[[6,2,2,0],[6,6,2,0,"_supabase"],[6,15,2,0],[6,18,2,0,"require"],[6,25,2,0],[6,26,2,0,"_dependencyMap"],[6,40,2,0],[7,2,1,0],[9,2,4,0],[10,2,5,7],[10,8,5,13,"registerUser"],[10,20,5,25],[10,23,5,28],[10,29,5,35,"userData"],[10,37,5,43],[10,41,5,48],[11,4,6,2],[11,8,6,6],[12,6,7,4],[12,12,7,10],[13,8,7,12,"email"],[13,13,7,17],[14,8,7,19,"password"],[14,16,7,27],[15,8,7,29,"name"],[15,12,7,33],[16,8,7,35,"address"],[16,15,7,42],[17,8,7,44,"occupation"],[17,18,7,54],[18,8,7,56,"emergencyContacts"],[19,6,7,74],[19,7,7,75],[19,10,7,78,"userData"],[19,18,7,86],[21,6,9,4],[22,6,10,4],[22,12,10,10],[23,8,10,12,"data"],[23,12,10,16],[23,14,10,18,"authData"],[23,22,10,26],[24,8,10,28,"error"],[24,13,10,33],[24,15,10,35,"authError"],[25,6,10,45],[25,7,10,46],[25,10,10,49],[25,16,10,55,"supabase"],[25,34,10,63],[25,35,10,64,"auth"],[25,39,10,68],[25,40,10,69,"signUp"],[25,46,10,75],[25,47,10,76],[26,8,11,6,"email"],[26,13,11,11],[26,15,11,13,"email"],[26,20,11,18],[27,8,12,6,"password"],[27,16,12,14],[27,18,12,16,"password"],[28,6,13,4],[28,7,13,5],[28,8,13,6],[29,6,15,4],[29,10,15,8,"authError"],[29,19,15,17],[29,21,15,19],[30,8,16,6,"console"],[30,15,16,13],[30,16,16,14,"error"],[30,21,16,19],[30,22,16,20],[30,44,16,42],[30,46,16,44,"authError"],[30,55,16,53],[30,56,16,54],[31,8,17,6],[31,15,17,13],[32,10,17,15,"success"],[32,17,17,22],[32,19,17,24],[32,24,17,29],[33,10,17,31,"error"],[33,15,17,36],[33,17,17,38,"authError"],[33,26,17,47],[33,27,17,48,"message"],[34,8,17,56],[34,9,17,57],[35,6,18,4],[36,6,20,4],[36,10,20,8],[36,11,20,9,"authData"],[36,19,20,17],[36,20,20,18,"user"],[36,24,20,22],[36,26,20,24],[37,8,21,6],[37,15,21,13],[38,10,21,15,"success"],[38,17,21,22],[38,19,21,24],[38,24,21,29],[39,10,21,31,"error"],[39,15,21,36],[39,17,21,38],[40,8,21,61],[40,9,21,62],[41,6,22,4],[42,6,24,4],[42,12,24,10,"userId"],[42,18,24,16],[42,21,24,19,"authData"],[42,29,24,27],[42,30,24,28,"user"],[42,34,24,32],[42,35,24,33,"id"],[42,37,24,35],[44,6,26,4],[45,6,27,4],[45,12,27,10],[46,8,27,12,"error"],[46,13,27,17],[46,15,27,19,"userError"],[47,6,27,29],[47,7,27,30],[47,10,27,33],[47,16,27,39,"supabase"],[47,34,27,47],[47,35,28,7,"from"],[47,39,28,11],[47,40,28,12],[47,47,28,19],[47,48,28,20],[47,49,29,7,"insert"],[47,55,29,13],[47,56,29,14],[47,57,30,8],[48,8,31,10,"id"],[48,10,31,12],[48,12,31,14,"userId"],[48,18,31,20],[49,8,32,10,"email"],[49,13,32,15],[49,15,32,17,"email"],[49,20,32,22],[50,8,33,10,"name"],[50,12,33,14],[50,14,33,16,"name"],[50,18,33,20],[51,8,34,10,"address"],[51,15,34,17],[51,17,34,19,"address"],[51,24,34,26],[52,8,35,10,"occupation"],[52,18,35,20],[52,20,35,22,"occupation"],[52,30,35,32],[53,8,36,10,"created_at"],[53,18,36,20],[53,20,36,22],[53,24,36,26,"Date"],[53,28,36,30],[53,29,36,31],[53,30,36,32],[53,31,36,33,"toISOString"],[53,42,36,44],[53,43,36,45],[54,6,37,8],[54,7,37,9],[54,8,38,7],[54,9,38,8],[55,6,40,4],[55,10,40,8,"userError"],[55,19,40,17],[55,21,40,19],[56,8,41,6,"console"],[56,15,41,13],[56,16,41,14,"error"],[56,21,41,19],[56,22,41,20],[56,50,41,48],[56,52,41,50,"userError"],[56,61,41,59],[56,62,41,60],[57,8,42,6],[58,8,43,6],[59,8,44,6],[59,15,44,13],[60,10,44,15,"success"],[60,17,44,22],[60,19,44,24],[60,24,44,29],[61,10,44,31,"error"],[61,15,44,36],[61,17,44,38,"userError"],[61,26,44,47],[61,27,44,48,"message"],[62,8,44,56],[62,9,44,57],[63,6,45,4],[65,6,47,4],[66,6,48,4],[66,12,48,10,"contactsToInsert"],[66,28,48,26],[66,31,48,29,"emergencyContacts"],[66,48,48,46],[66,49,48,47,"map"],[66,52,48,50],[66,53,48,52,"contact"],[66,60,48,59],[66,65,48,65],[67,8,49,6,"user_id"],[67,15,49,13],[67,17,49,15,"userId"],[67,23,49,21],[68,8,50,6,"name"],[68,12,50,10],[68,14,50,12,"contact"],[68,21,50,19],[68,22,50,20,"name"],[68,26,50,24],[69,8,51,6,"phone"],[69,13,51,11],[69,15,51,13,"contact"],[69,22,51,20],[69,23,51,21,"phone"],[70,6,52,4],[70,7,52,5],[70,8,52,6],[70,9,52,7],[71,6,54,4],[71,12,54,10],[72,8,54,12,"error"],[72,13,54,17],[72,15,54,19,"contactsError"],[73,6,54,33],[73,7,54,34],[73,10,54,37],[73,16,54,43,"supabase"],[73,34,54,51],[73,35,55,7,"from"],[73,39,55,11],[73,40,55,12],[73,60,55,32],[73,61,55,33],[73,62,56,7,"insert"],[73,68,56,13],[73,69,56,14,"contactsToInsert"],[73,85,56,30],[73,86,56,31],[74,6,58,4],[74,10,58,8,"contactsError"],[74,23,58,21],[74,25,58,23],[75,8,59,6,"console"],[75,15,59,13],[75,16,59,14,"error"],[75,21,59,19],[75,22,59,20],[75,56,59,54],[75,58,59,56,"contactsError"],[75,71,59,69],[75,72,59,70],[76,8,60,6],[76,15,60,13],[77,10,60,15,"success"],[77,17,60,22],[77,19,60,24],[77,24,60,29],[78,10,60,31,"error"],[78,15,60,36],[78,17,60,38,"contactsError"],[78,30,60,51],[78,31,60,52,"message"],[79,8,60,60],[79,9,60,61],[80,6,61,4],[81,6,63,4],[81,13,63,11],[82,8,63,13,"success"],[82,15,63,20],[82,17,63,22],[82,21,63,26],[83,8,63,28,"user"],[83,12,63,32],[83,14,63,34,"authData"],[83,22,63,42],[83,23,63,43,"user"],[84,6,63,48],[84,7,63,49],[85,4,64,2],[85,5,64,3],[85,6,64,4],[85,13,64,11,"error"],[85,18,64,16],[85,20,64,18],[86,6,65,4,"console"],[86,13,65,11],[86,14,65,12,"error"],[86,19,65,17],[86,20,65,18],[86,41,65,39],[86,43,65,41,"error"],[86,48,65,46],[86,49,65,47],[87,6,66,4],[87,13,66,11],[88,8,66,13,"success"],[88,15,66,20],[88,17,66,22],[88,22,66,27],[89,8,66,29,"error"],[89,13,66,34],[89,15,66,36,"error"],[89,20,66,41],[89,21,66,42,"message"],[90,6,66,50],[90,7,66,51],[91,4,67,2],[92,2,68,0],[92,3,68,1],[94,2,70,0],[95,2,70,0,"exports"],[95,9,70,0],[95,10,70,0,"registerUser"],[95,22,70,0],[95,25,70,0,"registerUser"],[95,37,70,0],[96,2,71,7],[96,8,71,13,"loginUser"],[96,17,71,22],[96,20,71,25],[96,26,71,25,"loginUser"],[96,27,71,32,"email"],[96,32,71,37],[96,34,71,39,"password"],[96,42,71,47],[96,47,71,52],[97,4,72,2],[97,8,72,6],[98,6,73,4],[98,12,73,10],[99,8,73,12,"data"],[99,12,73,16],[100,8,73,18,"error"],[101,6,73,24],[101,7,73,25],[101,10,73,28],[101,16,73,34,"supabase"],[101,34,73,42],[101,35,73,43,"auth"],[101,39,73,47],[101,40,73,48,"signInWithPassword"],[101,58,73,66],[101,59,73,67],[102,8,74,6,"email"],[102,13,74,11],[102,15,74,13,"email"],[102,20,74,18],[103,8,75,6,"password"],[103,16,75,14],[103,18,75,16,"password"],[104,6,76,4],[104,7,76,5],[104,8,76,6],[105,6,78,4],[105,10,78,8,"error"],[105,15,78,13],[105,17,78,15],[106,8,79,6,"console"],[106,15,79,13],[106,16,79,14,"error"],[106,21,79,19],[106,22,79,20],[106,36,79,34],[106,38,79,36,"error"],[106,43,79,41],[106,44,79,42],[107,8,80,6],[107,15,80,13],[108,10,80,15,"success"],[108,17,80,22],[108,19,80,24],[108,24,80,29],[109,10,80,31,"error"],[109,15,80,36],[109,17,80,38,"error"],[109,22,80,43],[109,23,80,44,"message"],[110,8,80,52],[110,9,80,53],[111,6,81,4],[112,6,83,4],[112,13,83,11],[113,8,83,13,"success"],[113,15,83,20],[113,17,83,22],[113,21,83,26],[114,8,83,28,"user"],[114,12,83,32],[114,14,83,34,"data"],[114,18,83,38],[114,19,83,39,"user"],[115,6,83,44],[115,7,83,45],[116,4,84,2],[116,5,84,3],[116,6,84,4],[116,13,84,11,"error"],[116,18,84,16],[116,20,84,18],[117,6,85,4,"console"],[117,13,85,11],[117,14,85,12,"error"],[117,19,85,17],[117,20,85,18],[117,34,85,32],[117,36,85,34,"error"],[117,41,85,39],[117,42,85,40],[118,6,86,4],[118,13,86,11],[119,8,86,13,"success"],[119,15,86,20],[119,17,86,22],[119,22,86,27],[120,8,86,29,"error"],[120,13,86,34],[120,15,86,36,"error"],[120,20,86,41],[120,21,86,42,"message"],[121,6,86,50],[121,7,86,51],[122,4,87,2],[123,2,88,0],[123,3,88,1],[125,2,90,0],[126,2,90,0,"exports"],[126,9,90,0],[126,10,90,0,"loginUser"],[126,19,90,0],[126,22,90,0,"loginUser"],[126,31,90,0],[127,2,91,7],[127,8,91,13,"logoutUser"],[127,18,91,23],[127,21,91,26],[127,27,91,26,"logoutUser"],[127,28,91,26],[127,33,91,38],[128,4,92,2],[128,8,92,6],[129,6,93,4],[129,12,93,10],[130,8,93,12,"error"],[131,6,93,18],[131,7,93,19],[131,10,93,22],[131,16,93,28,"supabase"],[131,34,93,36],[131,35,93,37,"auth"],[131,39,93,41],[131,40,93,42,"signOut"],[131,47,93,49],[131,48,93,50],[131,49,93,51],[132,6,95,4],[132,10,95,8,"error"],[132,15,95,13],[132,17,95,15],[133,8,96,6,"console"],[133,15,96,13],[133,16,96,14,"error"],[133,21,96,19],[133,22,96,20],[133,37,96,35],[133,39,96,37,"error"],[133,44,96,42],[133,45,96,43],[134,8,97,6],[134,15,97,13],[135,10,97,15,"success"],[135,17,97,22],[135,19,97,24],[135,24,97,29],[136,10,97,31,"error"],[136,15,97,36],[136,17,97,38,"error"],[136,22,97,43],[136,23,97,44,"message"],[137,8,97,52],[137,9,97,53],[138,6,98,4],[139,6,100,4],[139,13,100,11],[140,8,100,13,"success"],[140,15,100,20],[140,17,100,22],[141,6,100,27],[141,7,100,28],[142,4,101,2],[142,5,101,3],[142,6,101,4],[142,13,101,11,"error"],[142,18,101,16],[142,20,101,18],[143,6,102,4,"console"],[143,13,102,11],[143,14,102,12,"error"],[143,19,102,17],[143,20,102,18],[143,35,102,33],[143,37,102,35,"error"],[143,42,102,40],[143,43,102,41],[144,6,103,4],[144,13,103,11],[145,8,103,13,"success"],[145,15,103,20],[145,17,103,22],[145,22,103,27],[146,8,103,29,"error"],[146,13,103,34],[146,15,103,36,"error"],[146,20,103,41],[146,21,103,42,"message"],[147,6,103,50],[147,7,103,51],[148,4,104,2],[149,2,105,0],[149,3,105,1],[151,2,107,0],[152,2,107,0,"exports"],[152,9,107,0],[152,10,107,0,"logoutUser"],[152,20,107,0],[152,23,107,0,"logoutUser"],[152,33,107,0],[153,2,108,7],[153,8,108,13,"getUserData"],[153,19,108,24],[153,22,108,27],[153,28,108,34,"userId"],[153,34,108,40],[153,38,108,45],[154,4,109,2],[154,8,109,6],[155,6,110,4],[156,6,111,4],[156,12,111,10],[157,8,111,12,"data"],[157,12,111,16],[157,14,111,18,"userData"],[157,22,111,26],[158,8,111,28,"error"],[158,13,111,33],[158,15,111,35,"userError"],[159,6,111,45],[159,7,111,46],[159,10,111,49],[159,16,111,55,"supabase"],[159,34,111,63],[159,35,112,7,"from"],[159,39,112,11],[159,40,112,12],[159,47,112,19],[159,48,112,20],[159,49,113,7,"select"],[159,55,113,13],[159,56,113,14],[159,59,113,17],[159,60,113,18],[159,61,114,7,"eq"],[159,63,114,9],[159,64,114,10],[159,68,114,14],[159,70,114,16,"userId"],[159,76,114,22],[159,77,114,23],[159,78,115,7,"single"],[159,84,115,13],[159,85,115,14],[159,86,115,15],[160,6,117,4],[160,10,117,8,"userError"],[160,19,117,17],[160,21,117,19],[161,8,118,6,"console"],[161,15,118,13],[161,16,118,14,"error"],[161,21,118,19],[161,22,118,20],[161,44,118,42],[161,46,118,44,"userError"],[161,55,118,53],[161,56,118,54],[162,8,119,6],[162,15,119,13],[163,10,119,15,"success"],[163,17,119,22],[163,19,119,24],[163,24,119,29],[164,10,119,31,"error"],[164,15,119,36],[164,17,119,38,"userError"],[164,26,119,47],[164,27,119,48,"message"],[165,8,119,56],[165,9,119,57],[166,6,120,4],[167,6,122,4],[167,10,122,8],[167,11,122,9,"userData"],[167,19,122,17],[167,21,122,19],[168,8,123,6],[168,15,123,13],[169,10,123,15,"success"],[169,17,123,22],[169,19,123,24],[169,24,123,29],[170,10,123,31,"error"],[170,15,123,36],[170,17,123,38],[171,8,123,60],[171,9,123,61],[172,6,124,4],[174,6,126,4],[175,6,127,4],[175,12,127,10],[176,8,127,12,"data"],[176,12,127,16],[176,14,127,18,"contacts"],[176,22,127,26],[177,8,127,28,"error"],[177,13,127,33],[177,15,127,35,"contactsError"],[178,6,127,49],[178,7,127,50],[178,10,127,53],[178,16,127,59,"supabase"],[178,34,127,67],[178,35,128,7,"from"],[178,39,128,11],[178,40,128,12],[178,60,128,32],[178,61,128,33],[178,62,129,7,"select"],[178,68,129,13],[178,69,129,14],[178,72,129,17],[178,73,129,18],[178,74,130,7,"eq"],[178,76,130,9],[178,77,130,10],[178,86,130,19],[178,88,130,21,"userId"],[178,94,130,27],[178,95,130,28],[179,6,132,4],[179,10,132,8,"contactsError"],[179,23,132,21],[179,25,132,23],[180,8,133,6,"console"],[180,15,133,13],[180,16,133,14,"error"],[180,21,133,19],[180,22,133,20],[180,53,133,51],[180,55,133,53,"contactsError"],[180,68,133,66],[180,69,133,67],[181,8,134,6],[181,15,134,13],[182,10,134,15,"success"],[182,17,134,22],[182,19,134,24],[182,24,134,29],[183,10,134,31,"error"],[183,15,134,36],[183,17,134,38,"contactsError"],[183,30,134,51],[183,31,134,52,"message"],[184,8,134,60],[184,9,134,61],[185,6,135,4],[187,6,137,4],[188,6,138,4],[188,12,138,10,"completeUserData"],[188,28,138,26],[188,31,138,29],[189,8,139,6],[189,11,139,9,"userData"],[189,19,139,17],[190,8,140,6,"emergencyContacts"],[190,25,140,23],[190,27,140,25,"contacts"],[190,35,140,33],[190,39,140,37],[191,6,141,4],[191,7,141,5],[192,6,143,4],[192,13,143,11],[193,8,143,13,"success"],[193,15,143,20],[193,17,143,22],[193,21,143,26],[194,8,143,28,"data"],[194,12,143,32],[194,14,143,34,"completeUserData"],[195,6,143,51],[195,7,143,52],[196,4,144,2],[196,5,144,3],[196,6,144,4],[196,13,144,11,"error"],[196,18,144,16],[196,20,144,18],[197,6,145,4,"console"],[197,13,145,11],[197,14,145,12,"error"],[197,19,145,17],[197,20,145,18],[197,42,145,40],[197,44,145,42,"error"],[197,49,145,47],[197,50,145,48],[198,6,146,4],[198,13,146,11],[199,8,146,13,"success"],[199,15,146,20],[199,17,146,22],[199,22,146,27],[200,8,146,29,"error"],[200,13,146,34],[200,15,146,36,"error"],[200,20,146,41],[200,21,146,42,"message"],[201,6,146,50],[201,7,146,51],[202,4,147,2],[203,2,148,0],[203,3,148,1],[205,2,150,0],[206,2,150,0,"exports"],[206,9,150,0],[206,10,150,0,"getUserData"],[206,21,150,0],[206,24,150,0,"getUserData"],[206,35,150,0],[207,2,151,7],[207,8,151,13,"getCurrentUser"],[207,22,151,27],[207,25,151,30],[207,31,151,30,"getCurrentUser"],[207,32,151,30],[207,37,151,42],[208,4,152,2],[208,8,152,6],[209,6,153,4],[209,12,153,10],[210,8,153,12,"data"],[210,12,153,16],[210,14,153,18],[211,10,153,20,"user"],[212,8,153,25],[212,9,153,26],[213,8,153,28,"error"],[214,6,153,34],[214,7,153,35],[214,10,153,38],[214,16,153,44,"supabase"],[214,34,153,52],[214,35,153,53,"auth"],[214,39,153,57],[214,40,153,58,"getUser"],[214,47,153,65],[214,48,153,66],[214,49,153,67],[215,6,155,4],[215,10,155,8,"error"],[215,15,155,13],[215,17,155,15],[216,8,156,6,"console"],[216,15,156,13],[216,16,156,14,"error"],[216,21,156,19],[216,22,156,20],[216,47,156,45],[216,49,156,47,"error"],[216,54,156,52],[216,55,156,53],[217,8,157,6],[217,15,157,13],[217,19,157,17],[218,6,158,4],[219,6,160,4],[219,13,160,11,"user"],[219,17,160,15],[220,4,161,2],[220,5,161,3],[220,6,161,4],[220,13,161,11,"error"],[220,18,161,16],[220,20,161,18],[221,6,162,4,"console"],[221,13,162,11],[221,14,162,12,"error"],[221,19,162,17],[221,20,162,18],[221,45,162,43],[221,47,162,45,"error"],[221,52,162,50],[221,53,162,51],[222,6,163,4],[222,13,163,11],[222,17,163,15],[223,4,164,2],[224,2,165,0],[224,3,165,1],[226,2,167,0],[227,2,167,0,"exports"],[227,9,167,0],[227,10,167,0,"getCurrentUser"],[227,24,167,0],[227,27,167,0,"getCurrentUser"],[227,41,167,0],[228,2,168,7],[228,8,168,13,"onAuthChange"],[228,20,168,25],[228,23,168,29,"callback"],[228,31,168,37],[228,35,168,42],[229,4,169,2],[229,10,169,8],[230,6,169,10,"data"],[230,10,169,14],[230,12,169,16],[231,8,169,18,"subscription"],[232,6,169,31],[233,4,169,33],[233,5,169,34],[233,8,169,37,"supabase"],[233,26,169,45],[233,27,169,46,"auth"],[233,31,169,50],[233,32,169,51,"onAuthStateChange"],[233,49,169,68],[233,50,169,69],[233,51,169,70,"_event"],[233,57,169,76],[233,59,169,78,"session"],[233,66,169,85],[233,71,169,90],[234,6,170,4,"callback"],[234,14,170,12],[234,15,170,13,"session"],[234,22,170,20],[234,24,170,22,"user"],[234,28,170,26],[234,32,170,30],[234,36,170,34],[234,37,170,35],[235,4,171,2],[235,5,171,3],[235,6,171,4],[237,4,173,2],[238,4,174,2],[238,11,174,9],[238,17,174,15],[239,6,175,4,"subscription"],[239,18,175,16],[239,19,175,17,"unsubscribe"],[239,30,175,28],[239,31,175,29],[239,32,175,30],[240,4,176,2],[240,5,176,3],[241,2,177,0],[241,3,177,1],[243,2,180,0],[244,2,181,0],[245,2,182,0],[247,2,184,0],[248,0,185,0],[249,0,186,0],[250,0,187,0],[251,0,188,0],[252,0,189,0],[253,0,190,0],[254,0,191,0],[255,0,192,0],[256,0,193,0],[257,0,194,0],[258,0,195,0],[259,0,196,0],[260,0,197,0],[261,0,198,0],[262,0,199,0],[263,0,200,0],[264,0,201,0],[265,0,202,0],[266,0,203,0],[267,0,204,0],[268,0,205,0],[269,0,206,0],[270,0,207,0],[271,0,208,0],[272,0,209,0],[273,0,210,0],[274,0,211,0],[275,0,212,0],[276,0,213,0],[277,0,214,0],[278,0,215,0],[279,0,216,0],[280,0,217,0],[281,0,218,0],[282,0,219,0],[283,0,220,0],[284,0,221,0],[285,0,222,0],[286,0,223,0],[287,0,224,0],[288,0,225,0],[289,0,226,0],[290,0,227,0],[291,0,228,0],[292,0,229,0],[293,0,230,0],[294,0,231,0],[295,0,232,0],[296,0,233,0],[297,0,234,0],[298,0,235,0],[299,0,236,0],[300,0,237,0],[301,0,238,0],[302,0,239,0],[303,0,240,0],[304,0,241,0],[305,0,242,0],[306,0,243,0],[307,0,244,0],[308,0,245,0],[309,0,246,0],[310,0,247,0],[311,0,248,0],[312,0,249,0],[313,0,250,0],[314,0,251,0],[315,0,252,0],[316,0,253,0],[317,0,254,0],[318,0,255,0],[319,0,256,0],[320,0,257,0],[321,0,258,0],[322,0,259,0],[323,0,260,0],[324,0,261,0],[325,0,262,0],[326,2,184,0,"exports"],[326,9,184,0],[326,10,184,0,"onAuthChange"],[326,22,184,0],[326,25,184,0,"onAuthChange"],[326,37,184,0],[327,0,184,0],[327,3]],"functionMap":{"names":["<global>","registerUser","emergencyContacts.map$argument_0","loginUser","logoutUser","getUserData","getCurrentUser","onAuthChange","supabase.auth.onAuthStateChange$argument_0","<anonymous>"],"mappings":"AAA;4BCI;mDC2C;MDI;CDgB;yBGG;CHiB;0BIG;CJc;2BKG;CLwC;8BMG;CNc;4BOG;qECC;GDE;SEG;GFE;CPC"}},"type":"js/module"}]}