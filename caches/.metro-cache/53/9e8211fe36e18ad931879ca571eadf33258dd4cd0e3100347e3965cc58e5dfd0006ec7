{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":55,"index":97}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"]}},{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":98},"end":{"line":4,"column":66,"index":164}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"]}},{"name":"../../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":166},"end":{"line":6,"column":69,"index":235}}],"key":"m7drCniziiNjEu9Grhe6bV/AFd0=","exportNames":["*"]}},{"name":"../../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":236},"end":{"line":7,"column":79,"index":315}}],"key":"Zs82FqJFIcjv50A58P90bQbMZ6s=","exportNames":["*"]}},{"name":"../../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":316},"end":{"line":8,"column":77,"index":393}}],"key":"xLOe4E3z7HzpJ/yq6aTNrEbuZio=","exportNames":["*"]}},{"name":"../../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":394},"end":{"line":12,"column":33,"index":500}}],"key":"bk07O1d6H26279U6oqqnjaS7c4c=","exportNames":["*"]}},{"name":"../../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":501},"end":{"line":13,"column":65,"index":566}}],"key":"ZqoHIcC0SF6bf3AIHltJPu1k9xI=","exportNames":["*"]}},{"name":"../hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":567},"end":{"line":14,"column":59,"index":626}}],"key":"2DA6Vfuec14INlrI/GwdOE0FAK4=","exportNames":["*"]}},{"name":"../../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":627},"end":{"line":15,"column":79,"index":706}}],"key":"FiQaORn3aiHBJrGlJ2FeE26dr38=","exportNames":["*"]}},{"name":"../../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":707},"end":{"line":19,"column":36,"index":818}}],"key":"iYkm+MgDTErKT5jbMC97JfuzH7k=","exportNames":["*"]}},{"name":"../../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":819},"end":{"line":20,"column":84,"index":903}}],"key":"eaIoOU9/v4mL1aA6FJZKxHzRNGE=","exportNames":["*"]}},{"name":"../../../getReactNativeVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":904},"end":{"line":21,"column":71,"index":975}}],"key":"LRN+jz/5KqOYFnR82ORUXrazSTg=","exportNames":["*"]}},{"name":"../../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":976},"end":{"line":22,"column":49,"index":1025}}],"key":"dd5GIUVDNjn2BlVM36KIcGPscVA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1026},"end":{"line":23,"column":54,"index":1080}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1081},"end":{"line":24,"column":50,"index":1131}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"]}},{"name":"../eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1132},"end":{"line":25,"column":57,"index":1189}}],"key":"5nSvdaEKN+h/ZTz2T/BGCtOX48A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ALLOWED_PROPS = void 0;\n  exports.checkGestureCallbacksForWorklets = checkGestureCallbacksForWorklets;\n  exports.extractGestureRelations = extractGestureRelations;\n  exports.useForceRender = useForceRender;\n  exports.useWebEventHandlers = useWebEventHandlers;\n  exports.validateDetectorChildren = validateDetectorChildren;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _utils = require(_dependencyMap[3], \"../../../utils\");\n  var _gesture = require(_dependencyMap[4], \"../gesture\");\n  var _FlingGestureHandler = require(_dependencyMap[5], \"../../FlingGestureHandler\");\n  var _ForceTouchGestureHandler = require(_dependencyMap[6], \"../../ForceTouchGestureHandler\");\n  var _LongPressGestureHandler = require(_dependencyMap[7], \"../../LongPressGestureHandler\");\n  var _PanGestureHandler = require(_dependencyMap[8], \"../../PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[9], \"../../TapGestureHandler\");\n  var _hoverGesture = require(_dependencyMap[10], \"../hoverGesture\");\n  var _NativeViewGestureHandler = require(_dependencyMap[11], \"../../NativeViewGestureHandler\");\n  var _gestureHandlerCommon = require(_dependencyMap[12], \"../../gestureHandlerCommon\");\n  var _EnableNewWebImplementation = require(_dependencyMap[13], \"../../../EnableNewWebImplementation\");\n  var _getReactNativeVersion = require(_dependencyMap[14], \"../../../getReactNativeVersion\");\n  var _RNRenderer = require(_dependencyMap[15], \"../../../RNRenderer\");\n  var _react = require(_dependencyMap[16], \"react\");\n  var _reanimatedWrapper = require(_dependencyMap[17], \"../reanimatedWrapper\");\n  var _eventReceiver = require(_dependencyMap[18], \"../eventReceiver\");\n  var ALLOWED_PROPS = exports.ALLOWED_PROPS = [..._gestureHandlerCommon.baseGestureHandlerWithDetectorProps, ..._TapGestureHandler.tapGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerCustomNativeProps, ..._LongPressGestureHandler.longPressGestureHandlerProps, ..._ForceTouchGestureHandler.forceTouchGestureHandlerProps, ..._FlingGestureHandler.flingGestureHandlerProps, ..._hoverGesture.hoverGestureHandlerProps, ..._NativeViewGestureHandler.nativeViewGestureHandlerProps];\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _gesture.BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return ref.current?.handlerTag ?? -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    return interactionGroup?.map(convertToHandlerTag)?.filter(tag => tag > 0) ?? [];\n  }\n  function extractGestureRelations(gesture) {\n    var requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n    var simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n    var blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n    return {\n      waitFor: requireToFail,\n      simultaneousHandlers: simultaneousWith,\n      blocksHandlers: blocksHandlers\n    };\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (!__DEV__) {\n      return;\n    }\n    // If a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    var areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    var areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n    // If some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _utils.tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n    if (_reanimatedWrapper.Reanimated === undefined) {\n      // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n      return;\n    }\n    var areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets;\n    // If none of the callbacks are worklets and the gesture is not explicitly marked with\n    // `.runOnJS(true)` show a warning\n    if (areAllNotWorklets && !(0, _utils.isTestEnv)()) {\n      console.warn((0, _utils.tagMessage)(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function validateDetectorChildren(ref) {\n    // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && _reactNative.Platform.OS !== 'web') {\n      var REACT_NATIVE_VERSION = (0, _getReactNativeVersion.getReactNativeVersion)();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var wrapType = REACT_NATIVE_VERSION.minor > 63 || REACT_NATIVE_VERSION.major > 0 ?\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType :\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternalFiber.elementType;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var instance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        instance = instance.return;\n      }\n    }\n  }\n  function useForceRender() {\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      renderState = _useState2[0],\n      setRenderState = _useState2[1];\n    var forceRender = (0, _react.useCallback)(() => {\n      setRenderState(!renderState);\n    }, [renderState, setRenderState]);\n    return forceRender;\n  }\n  function useWebEventHandlers() {\n    return (0, _react.useRef)({\n      onGestureHandlerEvent: e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n  }\n});","lineCount":150,"map":[[13,2,1,0],[13,6,1,0,"_reactNative"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,3,0],[14,6,3,0,"_utils"],[14,12,3,0],[14,15,3,0,"require"],[14,22,3,0],[14,23,3,0,"_dependencyMap"],[14,37,3,0],[15,2,4,0],[15,6,4,0,"_gesture"],[15,14,4,0],[15,17,4,0,"require"],[15,24,4,0],[15,25,4,0,"_dependencyMap"],[15,39,4,0],[16,2,6,0],[16,6,6,0,"_FlingGestureHandler"],[16,26,6,0],[16,29,6,0,"require"],[16,36,6,0],[16,37,6,0,"_dependencyMap"],[16,51,6,0],[17,2,7,0],[17,6,7,0,"_ForceTouchGestureHandler"],[17,31,7,0],[17,34,7,0,"require"],[17,41,7,0],[17,42,7,0,"_dependencyMap"],[17,56,7,0],[18,2,8,0],[18,6,8,0,"_LongPressGestureHandler"],[18,30,8,0],[18,33,8,0,"require"],[18,40,8,0],[18,41,8,0,"_dependencyMap"],[18,55,8,0],[19,2,9,0],[19,6,9,0,"_PanGestureHandler"],[19,24,9,0],[19,27,9,0,"require"],[19,34,9,0],[19,35,9,0,"_dependencyMap"],[19,49,9,0],[20,2,13,0],[20,6,13,0,"_TapGestureHandler"],[20,24,13,0],[20,27,13,0,"require"],[20,34,13,0],[20,35,13,0,"_dependencyMap"],[20,49,13,0],[21,2,14,0],[21,6,14,0,"_hoverGesture"],[21,19,14,0],[21,22,14,0,"require"],[21,29,14,0],[21,30,14,0,"_dependencyMap"],[21,44,14,0],[22,2,15,0],[22,6,15,0,"_NativeViewGestureHandler"],[22,31,15,0],[22,34,15,0,"require"],[22,41,15,0],[22,42,15,0,"_dependencyMap"],[22,56,15,0],[23,2,16,0],[23,6,16,0,"_gestureHandlerCommon"],[23,27,16,0],[23,30,16,0,"require"],[23,37,16,0],[23,38,16,0,"_dependencyMap"],[23,52,16,0],[24,2,20,0],[24,6,20,0,"_EnableNewWebImplementation"],[24,33,20,0],[24,36,20,0,"require"],[24,43,20,0],[24,44,20,0,"_dependencyMap"],[24,58,20,0],[25,2,21,0],[25,6,21,0,"_getReactNativeVersion"],[25,28,21,0],[25,31,21,0,"require"],[25,38,21,0],[25,39,21,0,"_dependencyMap"],[25,53,21,0],[26,2,22,0],[26,6,22,0,"_RNRenderer"],[26,17,22,0],[26,20,22,0,"require"],[26,27,22,0],[26,28,22,0,"_dependencyMap"],[26,42,22,0],[27,2,23,0],[27,6,23,0,"_react"],[27,12,23,0],[27,15,23,0,"require"],[27,22,23,0],[27,23,23,0,"_dependencyMap"],[27,37,23,0],[28,2,24,0],[28,6,24,0,"_reanimatedWrapper"],[28,24,24,0],[28,27,24,0,"require"],[28,34,24,0],[28,35,24,0,"_dependencyMap"],[28,49,24,0],[29,2,25,0],[29,6,25,0,"_eventReceiver"],[29,20,25,0],[29,23,25,0,"require"],[29,30,25,0],[29,31,25,0,"_dependencyMap"],[29,45,25,0],[30,2,28,7],[30,6,28,13,"ALLOWED_PROPS"],[30,19,28,26],[30,22,28,26,"exports"],[30,29,28,26],[30,30,28,26,"ALLOWED_PROPS"],[30,43,28,26],[30,46,28,29],[30,47,29,2],[30,50,29,5,"baseGestureHandlerWithDetectorProps"],[30,107,29,40],[30,109,30,2],[30,112,30,5,"tapGestureHandlerProps"],[30,153,30,27],[30,155,31,2],[30,158,31,5,"panGestureHandlerProps"],[30,199,31,27],[30,201,32,2],[30,204,32,5,"panGestureHandlerCustomNativeProps"],[30,257,32,39],[30,259,33,2],[30,262,33,5,"longPressGestureHandlerProps"],[30,315,33,33],[30,317,34,2],[30,320,34,5,"forceTouchGestureHandlerProps"],[30,375,34,34],[30,377,35,2],[30,380,35,5,"flingGestureHandlerProps"],[30,425,35,29],[30,427,36,2],[30,430,36,5,"hoverGestureHandlerProps"],[30,468,36,29],[30,470,37,2],[30,473,37,5,"nativeViewGestureHandlerProps"],[30,528,37,34],[30,529,38,1],[31,2,40,0],[31,11,40,9,"convertToHandlerTag"],[31,30,40,28,"convertToHandlerTag"],[31,31,40,29,"ref"],[31,34,40,44],[31,36,40,54],[32,4,41,2],[32,8,41,6],[32,15,41,13,"ref"],[32,18,41,16],[32,23,41,21],[32,31,41,29],[32,33,41,31],[33,6,42,4],[33,13,42,11,"ref"],[33,16,42,14],[34,4,43,2],[34,5,43,3],[34,11,43,9],[34,15,43,13,"ref"],[34,18,43,16],[34,30,43,28,"BaseGesture"],[34,50,43,39],[34,52,43,41],[35,6,44,4],[35,13,44,11,"ref"],[35,16,44,14],[35,17,44,15,"handlerTag"],[35,27,44,25],[36,4,45,2],[36,5,45,3],[36,11,45,9],[37,6,46,4],[38,6,47,4],[39,6,48,4],[39,13,48,11,"ref"],[39,16,48,14],[39,17,48,15,"current"],[39,24,48,22],[39,26,48,24,"handlerTag"],[39,36,48,34],[39,40,48,38],[39,41,48,39],[39,42,48,40],[40,4,49,2],[41,2,50,0],[42,2,52,0],[42,11,52,9,"extractValidHandlerTags"],[42,34,52,32,"extractValidHandlerTags"],[42,35,52,33,"interactionGroup"],[42,51,52,75],[42,53,52,77],[43,4,53,2],[43,11,54,4,"interactionGroup"],[43,27,54,20],[43,29,54,22,"map"],[43,32,54,25],[43,33,54,26,"convertToHandlerTag"],[43,52,54,45],[43,53,54,46],[43,55,54,48,"filter"],[43,61,54,54],[43,62,54,56,"tag"],[43,65,54,59],[43,69,54,64,"tag"],[43,72,54,67],[43,75,54,70],[43,76,54,71],[43,77,54,72],[43,81,54,76],[43,83,54,78],[44,2,56,0],[45,2,58,7],[45,11,58,16,"extractGestureRelations"],[45,34,58,39,"extractGestureRelations"],[45,35,58,40,"gesture"],[45,42,58,60],[45,44,58,62],[46,4,59,2],[46,8,59,8,"requireToFail"],[46,21,59,21],[46,24,59,24,"extractValidHandlerTags"],[46,47,59,47],[46,48,59,48,"gesture"],[46,55,59,55],[46,56,59,56,"config"],[46,62,59,62],[46,63,59,63,"requireToFail"],[46,76,59,76],[46,77,59,77],[47,4,60,2],[47,8,60,8,"simultaneousWith"],[47,24,60,24],[47,27,60,27,"extractValidHandlerTags"],[47,50,60,50],[47,51,61,4,"gesture"],[47,58,61,11],[47,59,61,12,"config"],[47,65,61,18],[47,66,61,19,"simultaneousWith"],[47,82,62,2],[47,83,62,3],[48,4,63,2],[48,8,63,8,"blocksHandlers"],[48,22,63,22],[48,25,63,25,"extractValidHandlerTags"],[48,48,63,48],[48,49,63,49,"gesture"],[48,56,63,56],[48,57,63,57,"config"],[48,63,63,63],[48,64,63,64,"blocksHandlers"],[48,78,63,78],[48,79,63,79],[49,4,65,2],[49,11,65,9],[50,6,66,4,"waitFor"],[50,13,66,11],[50,15,66,13,"requireToFail"],[50,28,66,26],[51,6,67,4,"simultaneousHandlers"],[51,26,67,24],[51,28,67,26,"simultaneousWith"],[51,44,67,42],[52,6,68,4,"blocksHandlers"],[52,20,68,18],[52,22,68,20,"blocksHandlers"],[53,4,69,2],[53,5,69,3],[54,2,70,0],[55,2,72,7],[55,11,72,16,"checkGestureCallbacksForWorklets"],[55,43,72,48,"checkGestureCallbacksForWorklets"],[55,44,72,49,"gesture"],[55,51,72,69],[55,53,72,71],[56,4,73,2],[56,8,73,6],[56,9,73,7,"__DEV__"],[56,16,73,14],[56,18,73,16],[57,6,74,4],[58,4,75,2],[59,4,76,2],[60,4,77,2],[61,4,78,2],[61,8,78,6,"gesture"],[61,15,78,13],[61,16,78,14,"config"],[61,22,78,20],[61,23,78,21,"runOnJS"],[61,30,78,28],[61,32,78,30],[62,6,79,4],[63,4,80,2],[64,4,82,2],[64,8,82,8,"areSomeNotWorklets"],[64,26,82,26],[64,29,82,29,"gesture"],[64,36,82,36],[64,37,82,37,"handlers"],[64,45,82,45],[64,46,82,46,"isWorklet"],[64,55,82,55],[64,56,82,56,"includes"],[64,64,82,64],[64,65,82,65],[64,70,82,70],[64,71,82,71],[65,4,83,2],[65,8,83,8,"areSomeWorklets"],[65,23,83,23],[65,26,83,26,"gesture"],[65,33,83,33],[65,34,83,34,"handlers"],[65,42,83,42],[65,43,83,43,"isWorklet"],[65,52,83,52],[65,53,83,53,"includes"],[65,61,83,61],[65,62,83,62],[65,66,83,66],[65,67,83,67],[67,4,85,2],[68,4,86,2],[69,4,87,2],[69,8,87,6,"areSomeNotWorklets"],[69,26,87,24],[69,30,87,28,"areSomeWorklets"],[69,45,87,43],[69,47,87,45],[70,6,88,4,"console"],[70,13,88,11],[70,14,88,12,"error"],[70,19,88,17],[70,20,89,6],[70,24,89,6,"tagMessage"],[70,41,89,16],[70,43,90,8],[70,310,91,6],[70,311,92,4],[70,312,92,5],[71,4,93,2],[72,4,95,2],[72,8,95,6,"Reanimated"],[72,37,95,16],[72,42,95,21,"undefined"],[72,51,95,30],[72,53,95,32],[73,6,96,4],[74,6,97,4],[75,4,98,2],[76,4,100,2],[76,8,100,8,"areAllNotWorklets"],[76,25,100,25],[76,28,100,28],[76,29,100,29,"areSomeWorklets"],[76,44,100,44],[76,48,100,48,"areSomeNotWorklets"],[76,66,100,66],[77,4,101,2],[78,4,102,2],[79,4,103,2],[79,8,103,6,"areAllNotWorklets"],[79,25,103,23],[79,29,103,27],[79,30,103,28],[79,34,103,28,"isTestEnv"],[79,50,103,37],[79,52,103,38],[79,53,103,39],[79,55,103,41],[80,6,104,4,"console"],[80,13,104,11],[80,14,104,12,"warn"],[80,18,104,16],[80,19,105,6],[80,23,105,6,"tagMessage"],[80,40,105,16],[80,42,106,8],[80,276,107,6],[80,277,108,4],[80,278,108,5],[81,4,109,2],[82,2,110,0],[84,2,112,0],[85,2,113,7],[85,11,113,16,"validateDetectorChildren"],[85,35,113,40,"validateDetectorChildren"],[85,36,113,41,"ref"],[85,39,113,49],[85,41,113,51],[86,4,114,2],[87,4,115,2],[88,4,116,2],[89,4,117,2],[90,4,118,2],[91,4,119,2],[92,4,120,2],[93,4,121,2],[94,4,122,2],[95,4,123,2],[96,4,124,2],[97,4,125,2],[98,4,126,2],[99,4,127,2],[100,4,128,2],[101,4,129,2],[102,4,130,2],[103,4,131,2],[104,4,132,2],[105,4,133,2],[106,4,134,2],[107,4,135,2],[107,8,135,6,"__DEV__"],[107,15,135,13],[107,19,135,17,"Platform"],[107,40,135,25],[107,41,135,26,"OS"],[107,43,135,28],[107,48,135,33],[107,53,135,38],[107,55,135,40],[108,6,136,4],[108,10,136,10,"REACT_NATIVE_VERSION"],[108,30,136,30],[108,33,136,33],[108,37,136,33,"getReactNativeVersion"],[108,81,136,54],[108,83,136,55],[108,84,136,56],[109,6,137,4],[110,6,138,4],[110,10,138,10,"wrapType"],[110,18,138,18],[110,21,139,6,"REACT_NATIVE_VERSION"],[110,41,139,26],[110,42,139,27,"minor"],[110,47,139,32],[110,50,139,35],[110,52,139,37],[110,56,139,41,"REACT_NATIVE_VERSION"],[110,76,139,61],[110,77,139,62,"major"],[110,82,139,67],[110,85,139,70],[110,86,139,71],[111,6,140,10],[112,6,141,10,"ref"],[112,9,141,13],[112,10,141,14,"_reactInternals"],[112,25,141,29],[112,26,141,30,"elementType"],[112,37,141,41],[113,6,142,10],[114,6,143,10,"ref"],[114,9,143,13],[114,10,143,14,"_reactInternalFiber"],[114,29,143,33],[114,30,143,34,"elementType"],[114,41,143,45],[115,6,144,4],[116,6,145,4],[116,10,145,8,"instance"],[116,18,145,16],[116,21,146,6,"RNRenderer"],[116,43,146,16],[116,44,146,17,"findHostInstance_DEPRECATED"],[116,71,146,44],[116,72,147,8,"ref"],[116,75,148,6],[116,76,148,7],[116,77,148,8,"_internalFiberInstanceHandleDEV"],[116,108,148,39],[118,6,150,4],[119,6,151,4],[119,13,151,11,"instance"],[119,21,151,19],[119,25,151,23,"instance"],[119,33,151,31],[119,34,151,32,"elementType"],[119,45,151,43],[119,50,151,48,"wrapType"],[119,58,151,56],[119,60,151,58],[120,8,152,6],[121,8,153,6],[121,12,153,10,"instance"],[121,20,153,18],[121,21,153,19,"sibling"],[121,28,153,26],[121,30,153,28],[122,10,154,8],[122,16,154,14],[122,20,154,18,"Error"],[122,25,154,23],[122,26,155,10],[122,269,156,8],[122,270,156,9],[123,8,157,6],[125,8,159,6],[126,8,160,6,"instance"],[126,16,160,14],[126,19,160,17,"instance"],[126,27,160,25],[126,28,160,26,"return"],[126,34,160,32],[127,6,161,4],[128,4,162,2],[129,2,163,0],[130,2,165,7],[130,11,165,16,"useForceRender"],[130,25,165,30,"useForceRender"],[130,26,165,30],[130,28,165,33],[131,4,166,2],[131,8,166,2,"_useState"],[131,17,166,2],[131,20,166,40],[131,24,166,40,"useState"],[131,39,166,48],[131,41,166,49],[131,46,166,54],[131,47,166,55],[132,6,166,55,"_useState2"],[132,16,166,55],[132,23,166,55,"_slicedToArray2"],[132,38,166,55],[132,39,166,55,"default"],[132,46,166,55],[132,48,166,55,"_useState"],[132,57,166,55],[133,6,166,9,"renderState"],[133,17,166,20],[133,20,166,20,"_useState2"],[133,30,166,20],[134,6,166,22,"setRenderState"],[134,20,166,36],[134,23,166,36,"_useState2"],[134,33,166,36],[135,4,167,2],[135,8,167,8,"forceRender"],[135,19,167,19],[135,22,167,22],[135,26,167,22,"useCallback"],[135,44,167,33],[135,46,167,34],[135,52,167,40],[136,6,168,4,"setRenderState"],[136,20,168,18],[136,21,168,19],[136,22,168,20,"renderState"],[136,33,168,31],[136,34,168,32],[137,4,169,2],[137,5,169,3],[137,7,169,5],[137,8,169,6,"renderState"],[137,19,169,17],[137,21,169,19,"setRenderState"],[137,35,169,33],[137,36,169,34],[137,37,169,35],[138,4,171,2],[138,11,171,9,"forceRender"],[138,22,171,20],[139,2,172,0],[140,2,174,7],[140,11,174,16,"useWebEventHandlers"],[140,30,174,35,"useWebEventHandlers"],[140,31,174,35],[140,33,174,38],[141,4,175,2],[141,11,175,9],[141,15,175,9,"useRef"],[141,28,175,15],[141,30,175,33],[142,6,176,4,"onGestureHandlerEvent"],[142,27,176,25],[142,29,176,28,"e"],[142,30,176,63],[142,34,176,68],[143,8,177,6],[143,12,177,6,"onGestureHandlerEvent"],[143,48,177,27],[143,50,177,28,"e"],[143,51,177,29],[143,52,177,30,"nativeEvent"],[143,63,177,41],[143,64,177,42],[144,6,178,4],[144,7,178,5],[145,6,179,4,"onGestureHandlerStateChange"],[145,33,179,31],[145,35,179,33],[145,39,179,33,"isNewWebImplementationEnabled"],[145,96,179,62],[145,98,179,63],[145,99,179,64],[145,102,180,9,"e"],[145,103,180,44],[145,107,180,49],[146,8,181,10],[146,12,181,10,"onGestureHandlerEvent"],[146,48,181,31],[146,50,181,32,"e"],[146,51,181,33],[146,52,181,34,"nativeEvent"],[146,63,181,45],[146,64,181,46],[147,6,182,8],[147,7,182,9],[147,10,183,8,"undefined"],[148,4,184,2],[148,5,184,3],[148,6,184,4],[149,2,185,0],[150,0,185,1],[150,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","extractGestureRelations","checkGestureCallbacksForWorklets","validateDetectorChildren","useForceRender","forceRender","useWebEventHandlers","useRef$argument_0.onGestureHandlerEvent","<anonymous>"],"mappings":"AAA;ACuC;CDU;AEE;uDCE,gBD;CFE;OIE;CJY;OKE;CLsC;OMG;CNkD;OOE;kCCE;GDE;CPG;OSE;2BCE;KDE;QEE;SFE;CTG"}},"type":"js/module"}]}