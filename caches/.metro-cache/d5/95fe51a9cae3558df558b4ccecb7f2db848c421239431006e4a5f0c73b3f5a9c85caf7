{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":87,"index":135}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":177},"end":{"line":4,"column":53,"index":230}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"]}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":231},"end":{"line":5,"column":43,"index":274}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"]}},{"name":"../../../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":275},"end":{"line":6,"column":83,"index":358}}],"key":"v6b9cfauRqYeWu9wWOEUTyMIHSA=","exportNames":["*"]}},{"name":"./useAnimatedGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":359},"end":{"line":7,"column":58,"index":417}}],"key":"2qsvw/0Wn5ZQ0k+d9VbJV8PW2us=","exportNames":["*"]}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":418},"end":{"line":8,"column":50,"index":468}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"]}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":469},"end":{"line":9,"column":52,"index":521}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"]}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":522},"end":{"line":10,"column":46,"index":568}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":569},"end":{"line":11,"column":46,"index":615}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"./Wrap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":616},"end":{"line":12,"column":44,"index":660}}],"key":"3O9fTt6BDgaEKEy9t1chSR0HFNQ=","exportNames":["*"]}},{"name":"./useDetectorUpdater","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":661},"end":{"line":13,"column":58,"index":719}}],"key":"707zRwYZ3uzpHSm+Rwc2R1MvfJw=","exportNames":["*"]}},{"name":"./useViewRefHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":720},"end":{"line":14,"column":56,"index":776}}],"key":"tm4O9dzaDCUn7KS1TB05c8nzNaA=","exportNames":["*"]}},{"name":"./useMountReactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":777},"end":{"line":15,"column":56,"index":833}}],"key":"PrdD1p6YXRuOP5neQrVF/37n7P4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureDetector = void 0;\n  var _react = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[3], \"../../../findNodeHandle\"));\n  var _utils = require(_dependencyMap[4], \"../../../utils\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[5], \"../../../GestureHandlerRootViewContext\"));\n  var _useAnimatedGesture = require(_dependencyMap[6], \"./useAnimatedGesture\");\n  var _attachHandlers = require(_dependencyMap[7], \"./attachHandlers\");\n  var _needsToReattach = require(_dependencyMap[8], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[9], \"./dropHandlers\");\n  var _utils2 = require(_dependencyMap[10], \"./utils\");\n  var _Wrap = require(_dependencyMap[11], \"./Wrap\");\n  var _useDetectorUpdater = require(_dependencyMap[12], \"./useDetectorUpdater\");\n  var _useViewRefHandler = require(_dependencyMap[13], \"./useViewRefHandler\");\n  var _useMountReactions = require(_dependencyMap[14], \"./useMountReactions\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  /* eslint-disable react/no-unused-prop-types */\n\n  function propagateDetectorConfig(props, gesture) {\n    const keysToPropagate = ['userSelect', 'enableContextMenu', 'touchAction'];\n    for (const key of keysToPropagate) {\n      const value = props[key];\n      if (value === undefined) {\n        continue;\n      }\n      for (const g of gesture.toGestureArray()) {\n        const config = g.config;\n        config[key] = value;\n      }\n    }\n  }\n\n  /**\n   * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n   *\n   * ### Props\n   * - `gesture`\n   * - `userSelect` (**Web only**)\n   * - `enableContextMenu` (**Web only**)\n   * - `touchAction` (**Web only**)\n   *\n   * ### Remarks\n   * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n   * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n   */\n  const GestureDetector = props => {\n    const rootViewContext = (0, _react.useContext)(_GestureHandlerRootViewContext.default);\n    if (__DEV__ && !rootViewContext && !(0, _utils.isTestEnv)() && _Platform.default.OS !== 'web') {\n      throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n    } // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n\n    const gestureConfig = props.gesture;\n    propagateDetectorConfig(props, gestureConfig);\n    const gesturesToAttach = (0, _react.useMemo)(() => gestureConfig.toGestureArray(), [gestureConfig]);\n    const shouldUseReanimated = gesturesToAttach.some(g => g.shouldUseReanimated);\n    const webEventHandlersRef = (0, _utils2.useWebEventHandlers)(); // Store state in ref to prevent unnecessary renders\n\n    const state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceRebuildReanimatedEvent: false\n    }).current;\n    const preparedGesture = _react.default.useRef({\n      attachedGestures: [],\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      shouldUseReanimated: shouldUseReanimated,\n      isMounted: false\n    }).current;\n    const updateAttachedGestures = (0, _useDetectorUpdater.useDetectorUpdater)(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef);\n    const refHandler = (0, _useViewRefHandler.useViewRefHandler)(state, updateAttachedGestures); // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n    // config update will be enough as all necessary items are stored in shared values anyway\n\n    const needsToRebuildReanimatedEvent = state.firstRender || state.forceRebuildReanimatedEvent || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach);\n    state.forceRebuildReanimatedEvent = false;\n    (0, _useAnimatedGesture.useAnimatedGesture)(preparedGesture, needsToRebuildReanimatedEvent);\n    (0, _react.useLayoutEffect)(() => {\n      const viewTag = (0, _findNodeHandle.default)(state.viewRef);\n      preparedGesture.isMounted = true;\n      (0, _attachHandlers.attachHandlers)({\n        preparedGesture,\n        gestureConfig,\n        gesturesToAttach,\n        webEventHandlersRef,\n        viewTag\n      });\n      return () => {\n        preparedGesture.isMounted = false;\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(() => {\n      if (state.firstRender) {\n        state.firstRender = false;\n      } else {\n        updateAttachedGestures();\n      }\n    }, [props]);\n    (0, _useMountReactions.useMountReactions)(updateAttachedGestures, preparedGesture);\n    if (shouldUseReanimated) {\n      return /*#__PURE__*/_react.default.createElement(_Wrap.AnimatedWrap, {\n        ref: refHandler,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler\n      }, props.children);\n    } else {\n      return /*#__PURE__*/_react.default.createElement(_Wrap.Wrap, {\n        ref: refHandler\n      }, props.children);\n    }\n  };\n  exports.GestureDetector = GestureDetector;\n});","lineCount":120,"map":[[7,2,2,0],[7,6,2,0,"_react"],[7,12,2,0],[7,15,2,0,"_interopRequireWildcard"],[7,38,2,0],[7,39,2,0,"require"],[7,46,2,0],[7,47,2,0,"_dependencyMap"],[7,61,2,0],[8,2,2,87],[8,6,2,87,"_Platform"],[8,15,2,87],[8,18,2,87,"_interopRequireDefault"],[8,40,2,87],[8,41,2,87,"require"],[8,48,2,87],[8,49,2,87,"_dependencyMap"],[8,63,2,87],[9,2,4,0],[9,6,4,0,"_findNodeHandle"],[9,21,4,0],[9,24,4,0,"_interopRequireDefault"],[9,46,4,0],[9,47,4,0,"require"],[9,54,4,0],[9,55,4,0,"_dependencyMap"],[9,69,4,0],[10,2,5,0],[10,6,5,0,"_utils"],[10,12,5,0],[10,15,5,0,"require"],[10,22,5,0],[10,23,5,0,"_dependencyMap"],[10,37,5,0],[11,2,6,0],[11,6,6,0,"_GestureHandlerRootViewContext"],[11,36,6,0],[11,39,6,0,"_interopRequireDefault"],[11,61,6,0],[11,62,6,0,"require"],[11,69,6,0],[11,70,6,0,"_dependencyMap"],[11,84,6,0],[12,2,7,0],[12,6,7,0,"_useAnimatedGesture"],[12,25,7,0],[12,28,7,0,"require"],[12,35,7,0],[12,36,7,0,"_dependencyMap"],[12,50,7,0],[13,2,8,0],[13,6,8,0,"_attachHandlers"],[13,21,8,0],[13,24,8,0,"require"],[13,31,8,0],[13,32,8,0,"_dependencyMap"],[13,46,8,0],[14,2,9,0],[14,6,9,0,"_needsToReattach"],[14,22,9,0],[14,25,9,0,"require"],[14,32,9,0],[14,33,9,0,"_dependencyMap"],[14,47,9,0],[15,2,10,0],[15,6,10,0,"_dropHandlers"],[15,19,10,0],[15,22,10,0,"require"],[15,29,10,0],[15,30,10,0,"_dependencyMap"],[15,44,10,0],[16,2,11,0],[16,6,11,0,"_utils2"],[16,13,11,0],[16,16,11,0,"require"],[16,23,11,0],[16,24,11,0,"_dependencyMap"],[16,38,11,0],[17,2,12,0],[17,6,12,0,"_Wrap"],[17,11,12,0],[17,14,12,0,"require"],[17,21,12,0],[17,22,12,0,"_dependencyMap"],[17,36,12,0],[18,2,13,0],[18,6,13,0,"_useDetectorUpdater"],[18,25,13,0],[18,28,13,0,"require"],[18,35,13,0],[18,36,13,0,"_dependencyMap"],[18,50,13,0],[19,2,14,0],[19,6,14,0,"_useViewRefHandler"],[19,24,14,0],[19,27,14,0,"require"],[19,34,14,0],[19,35,14,0,"_dependencyMap"],[19,49,14,0],[20,2,15,0],[20,6,15,0,"_useMountReactions"],[20,24,15,0],[20,27,15,0,"require"],[20,34,15,0],[20,35,15,0,"_dependencyMap"],[20,49,15,0],[21,2,15,56],[21,11,15,56,"_interopRequireWildcard"],[21,35,15,56,"e"],[21,36,15,56],[21,38,15,56,"t"],[21,39,15,56],[21,68,15,56,"WeakMap"],[21,75,15,56],[21,81,15,56,"r"],[21,82,15,56],[21,89,15,56,"WeakMap"],[21,96,15,56],[21,100,15,56,"n"],[21,101,15,56],[21,108,15,56,"WeakMap"],[21,115,15,56],[21,127,15,56,"_interopRequireWildcard"],[21,150,15,56],[21,162,15,56,"_interopRequireWildcard"],[21,163,15,56,"e"],[21,164,15,56],[21,166,15,56,"t"],[21,167,15,56],[21,176,15,56,"t"],[21,177,15,56],[21,181,15,56,"e"],[21,182,15,56],[21,186,15,56,"e"],[21,187,15,56],[21,188,15,56,"__esModule"],[21,198,15,56],[21,207,15,56,"e"],[21,208,15,56],[21,214,15,56,"o"],[21,215,15,56],[21,217,15,56,"i"],[21,218,15,56],[21,220,15,56,"f"],[21,221,15,56],[21,226,15,56,"__proto__"],[21,235,15,56],[21,243,15,56,"default"],[21,250,15,56],[21,252,15,56,"e"],[21,253,15,56],[21,270,15,56,"e"],[21,271,15,56],[21,294,15,56,"e"],[21,295,15,56],[21,320,15,56,"e"],[21,321,15,56],[21,330,15,56,"f"],[21,331,15,56],[21,337,15,56,"o"],[21,338,15,56],[21,341,15,56,"t"],[21,342,15,56],[21,345,15,56,"n"],[21,346,15,56],[21,349,15,56,"r"],[21,350,15,56],[21,358,15,56,"o"],[21,359,15,56],[21,360,15,56,"has"],[21,363,15,56],[21,364,15,56,"e"],[21,365,15,56],[21,375,15,56,"o"],[21,376,15,56],[21,377,15,56,"get"],[21,380,15,56],[21,381,15,56,"e"],[21,382,15,56],[21,385,15,56,"o"],[21,386,15,56],[21,387,15,56,"set"],[21,390,15,56],[21,391,15,56,"e"],[21,392,15,56],[21,394,15,56,"f"],[21,395,15,56],[21,411,15,56,"t"],[21,412,15,56],[21,416,15,56,"e"],[21,417,15,56],[21,433,15,56,"t"],[21,434,15,56],[21,441,15,56,"hasOwnProperty"],[21,455,15,56],[21,456,15,56,"call"],[21,460,15,56],[21,461,15,56,"e"],[21,462,15,56],[21,464,15,56,"t"],[21,465,15,56],[21,472,15,56,"i"],[21,473,15,56],[21,477,15,56,"o"],[21,478,15,56],[21,481,15,56,"Object"],[21,487,15,56],[21,488,15,56,"defineProperty"],[21,502,15,56],[21,507,15,56,"Object"],[21,513,15,56],[21,514,15,56,"getOwnPropertyDescriptor"],[21,538,15,56],[21,539,15,56,"e"],[21,540,15,56],[21,542,15,56,"t"],[21,543,15,56],[21,550,15,56,"i"],[21,551,15,56],[21,552,15,56,"get"],[21,555,15,56],[21,559,15,56,"i"],[21,560,15,56],[21,561,15,56,"set"],[21,564,15,56],[21,568,15,56,"o"],[21,569,15,56],[21,570,15,56,"f"],[21,571,15,56],[21,573,15,56,"t"],[21,574,15,56],[21,576,15,56,"i"],[21,577,15,56],[21,581,15,56,"f"],[21,582,15,56],[21,583,15,56,"t"],[21,584,15,56],[21,588,15,56,"e"],[21,589,15,56],[21,590,15,56,"t"],[21,591,15,56],[21,602,15,56,"f"],[21,603,15,56],[21,608,15,56,"e"],[21,609,15,56],[21,611,15,56,"t"],[21,612,15,56],[22,2,1,0],[24,2,17,0],[24,11,17,9,"propagateDetectorConfig"],[24,34,17,32,"propagateDetectorConfig"],[24,35,17,33,"props"],[24,40,17,38],[24,42,17,40,"gesture"],[24,49,17,47],[24,51,17,49],[25,4,18,2],[25,10,18,8,"keysToPropagate"],[25,25,18,23],[25,28,18,26],[25,29,18,27],[25,41,18,39],[25,43,18,41],[25,62,18,60],[25,64,18,62],[25,77,18,75],[25,78,18,76],[26,4,20,2],[26,9,20,7],[26,15,20,13,"key"],[26,18,20,16],[26,22,20,20,"keysToPropagate"],[26,37,20,35],[26,39,20,37],[27,6,21,4],[27,12,21,10,"value"],[27,17,21,15],[27,20,21,18,"props"],[27,25,21,23],[27,26,21,24,"key"],[27,29,21,27],[27,30,21,28],[28,6,23,4],[28,10,23,8,"value"],[28,15,23,13],[28,20,23,18,"undefined"],[28,29,23,27],[28,31,23,29],[29,8,24,6],[30,6,25,4],[31,6,27,4],[31,11,27,9],[31,17,27,15,"g"],[31,18,27,16],[31,22,27,20,"gesture"],[31,29,27,27],[31,30,27,28,"toGestureArray"],[31,44,27,42],[31,45,27,43],[31,46,27,44],[31,48,27,46],[32,8,28,6],[32,14,28,12,"config"],[32,20,28,18],[32,23,28,21,"g"],[32,24,28,22],[32,25,28,23,"config"],[32,31,28,29],[33,8,29,6,"config"],[33,14,29,12],[33,15,29,13,"key"],[33,18,29,16],[33,19,29,17],[33,22,29,20,"value"],[33,27,29,25],[34,6,30,4],[35,4,31,2],[36,2,32,0],[38,2,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,2,49,7],[53,8,49,13,"GestureDetector"],[53,23,49,28],[53,26,49,31,"props"],[53,31,49,36],[53,35,49,40],[54,4,50,2],[54,10,50,8,"rootViewContext"],[54,25,50,23],[54,28,50,26],[54,32,50,26,"useContext"],[54,49,50,36],[54,51,50,37,"GestureHandlerRootViewContext"],[54,89,50,66],[54,90,50,67],[55,4,52,2],[55,8,52,6,"__DEV__"],[55,15,52,13],[55,19,52,17],[55,20,52,18,"rootViewContext"],[55,35,52,33],[55,39,52,37],[55,40,52,38],[55,44,52,38,"isTestEnv"],[55,60,52,47],[55,62,52,48],[55,63,52,49],[55,67,52,53,"Platform"],[55,84,52,61],[55,85,52,62,"OS"],[55,87,52,64],[55,92,52,69],[55,97,52,74],[55,99,52,76],[56,6,53,4],[56,12,53,10],[56,16,53,14,"Error"],[56,21,53,19],[56,22,53,20],[56,238,53,236],[56,239,53,237],[57,4,54,2],[57,5,54,3],[57,6,54,4],[59,4,57,2],[59,10,57,8,"gestureConfig"],[59,23,57,21],[59,26,57,24,"props"],[59,31,57,29],[59,32,57,30,"gesture"],[59,39,57,37],[60,4,58,2,"propagateDetectorConfig"],[60,27,58,25],[60,28,58,26,"props"],[60,33,58,31],[60,35,58,33,"gestureConfig"],[60,48,58,46],[60,49,58,47],[61,4,59,2],[61,10,59,8,"gesturesToAttach"],[61,26,59,24],[61,29,59,27],[61,33,59,27,"useMemo"],[61,47,59,34],[61,49,59,35],[61,55,59,41,"gestureConfig"],[61,68,59,54],[61,69,59,55,"toGestureArray"],[61,83,59,69],[61,84,59,70],[61,85,59,71],[61,87,59,73],[61,88,59,74,"gestureConfig"],[61,101,59,87],[61,102,59,88],[61,103,59,89],[62,4,60,2],[62,10,60,8,"shouldUseReanimated"],[62,29,60,27],[62,32,60,30,"gesturesToAttach"],[62,48,60,46],[62,49,60,47,"some"],[62,53,60,51],[62,54,60,52,"g"],[62,55,60,53],[62,59,60,57,"g"],[62,60,60,58],[62,61,60,59,"shouldUseReanimated"],[62,80,60,78],[62,81,60,79],[63,4,61,2],[63,10,61,8,"webEventHandlersRef"],[63,29,61,27],[63,32,61,30],[63,36,61,30,"useWebEventHandlers"],[63,63,61,49],[63,65,61,50],[63,66,61,51],[63,67,61,52],[63,68,61,53],[65,4,63,2],[65,10,63,8,"state"],[65,15,63,13],[65,18,63,16],[65,22,63,16,"useRef"],[65,35,63,22],[65,37,63,23],[66,6,64,4,"firstRender"],[66,17,64,15],[66,19,64,17],[66,23,64,21],[67,6,65,4,"viewRef"],[67,13,65,11],[67,15,65,13],[67,19,65,17],[68,6,66,4,"previousViewTag"],[68,21,66,19],[68,23,66,21],[68,24,66,22],[68,25,66,23],[69,6,67,4,"forceRebuildReanimatedEvent"],[69,33,67,31],[69,35,67,33],[70,4,68,2],[70,5,68,3],[70,6,68,4],[70,7,68,5,"current"],[70,14,68,12],[71,4,69,2],[71,10,69,8,"preparedGesture"],[71,25,69,23],[71,28,69,26,"React"],[71,42,69,31],[71,43,69,32,"useRef"],[71,49,69,38],[71,50,69,39],[72,6,70,4,"attachedGestures"],[72,22,70,20],[72,24,70,22],[72,26,70,24],[73,6,71,4,"animatedEventHandler"],[73,26,71,24],[73,28,71,26],[73,32,71,30],[74,6,72,4,"animatedHandlers"],[74,22,72,20],[74,24,72,22],[74,28,72,26],[75,6,73,4,"shouldUseReanimated"],[75,25,73,23],[75,27,73,25,"shouldUseReanimated"],[75,46,73,44],[76,6,74,4,"isMounted"],[76,15,74,13],[76,17,74,15],[77,4,75,2],[77,5,75,3],[77,6,75,4],[77,7,75,5,"current"],[77,14,75,12],[78,4,76,2],[78,10,76,8,"updateAttachedGestures"],[78,32,76,30],[78,35,76,33],[78,39,76,33,"useDetectorUpdater"],[78,77,76,51],[78,79,76,52,"state"],[78,84,76,57],[78,86,76,59,"preparedGesture"],[78,101,76,74],[78,103,76,76,"gesturesToAttach"],[78,119,76,92],[78,121,76,94,"gestureConfig"],[78,134,76,107],[78,136,76,109,"webEventHandlersRef"],[78,155,76,128],[78,156,76,129],[79,4,77,2],[79,10,77,8,"refHandler"],[79,20,77,18],[79,23,77,21],[79,27,77,21,"useViewRefHandler"],[79,63,77,38],[79,65,77,39,"state"],[79,70,77,44],[79,72,77,46,"updateAttachedGestures"],[79,94,77,68],[79,95,77,69],[79,96,77,70],[79,97,77,71],[80,4,78,2],[82,4,80,2],[82,10,80,8,"needsToRebuildReanimatedEvent"],[82,39,80,37],[82,42,80,40,"state"],[82,47,80,45],[82,48,80,46,"firstRender"],[82,59,80,57],[82,63,80,61,"state"],[82,68,80,66],[82,69,80,67,"forceRebuildReanimatedEvent"],[82,96,80,94],[82,100,80,98],[82,104,80,98,"needsToReattach"],[82,136,80,113],[82,138,80,114,"preparedGesture"],[82,153,80,129],[82,155,80,131,"gesturesToAttach"],[82,171,80,147],[82,172,80,148],[83,4,81,2,"state"],[83,9,81,7],[83,10,81,8,"forceRebuildReanimatedEvent"],[83,37,81,35],[83,40,81,38],[83,45,81,43],[84,4,82,2],[84,8,82,2,"useAnimatedGesture"],[84,46,82,20],[84,48,82,21,"preparedGesture"],[84,63,82,36],[84,65,82,38,"needsToRebuildReanimatedEvent"],[84,94,82,67],[84,95,82,68],[85,4,83,2],[85,8,83,2,"useLayoutEffect"],[85,30,83,17],[85,32,83,18],[85,38,83,24],[86,6,84,4],[86,12,84,10,"viewTag"],[86,19,84,17],[86,22,84,20],[86,26,84,20,"findNodeHandle"],[86,49,84,34],[86,51,84,35,"state"],[86,56,84,40],[86,57,84,41,"viewRef"],[86,64,84,48],[86,65,84,49],[87,6,85,4,"preparedGesture"],[87,21,85,19],[87,22,85,20,"isMounted"],[87,31,85,29],[87,34,85,32],[87,38,85,36],[88,6,86,4],[88,10,86,4,"attachHandlers"],[88,40,86,18],[88,42,86,19],[89,8,87,6,"preparedGesture"],[89,23,87,21],[90,8,88,6,"gestureConfig"],[90,21,88,19],[91,8,89,6,"gesturesToAttach"],[91,24,89,22],[92,8,90,6,"webEventHandlersRef"],[92,27,90,25],[93,8,91,6,"viewTag"],[94,6,92,4],[94,7,92,5],[94,8,92,6],[95,6,93,4],[95,13,93,11],[95,19,93,17],[96,8,94,6,"preparedGesture"],[96,23,94,21],[96,24,94,22,"isMounted"],[96,33,94,31],[96,36,94,34],[96,41,94,39],[97,8,95,6],[97,12,95,6,"dropHandlers"],[97,38,95,18],[97,40,95,19,"preparedGesture"],[97,55,95,34],[97,56,95,35],[98,6,96,4],[98,7,96,5],[99,4,97,2],[99,5,97,3],[99,7,97,5],[99,9,97,7],[99,10,97,8],[100,4,98,2],[100,8,98,2,"useEffect"],[100,24,98,11],[100,26,98,12],[100,32,98,18],[101,6,99,4],[101,10,99,8,"state"],[101,15,99,13],[101,16,99,14,"firstRender"],[101,27,99,25],[101,29,99,27],[102,8,100,6,"state"],[102,13,100,11],[102,14,100,12,"firstRender"],[102,25,100,23],[102,28,100,26],[102,33,100,31],[103,6,101,4],[103,7,101,5],[103,13,101,11],[104,8,102,6,"updateAttachedGestures"],[104,30,102,28],[104,31,102,29],[104,32,102,30],[105,6,103,4],[106,4,104,2],[106,5,104,3],[106,7,104,5],[106,8,104,6,"props"],[106,13,104,11],[106,14,104,12],[106,15,104,13],[107,4,105,2],[107,8,105,2,"useMountReactions"],[107,44,105,19],[107,46,105,20,"updateAttachedGestures"],[107,68,105,42],[107,70,105,44,"preparedGesture"],[107,85,105,59],[107,86,105,60],[108,4,107,2],[108,8,107,6,"shouldUseReanimated"],[108,27,107,25],[108,29,107,27],[109,6,108,4],[109,13,108,11],[109,26,108,24,"React"],[109,40,108,29],[109,41,108,30,"createElement"],[109,54,108,43],[109,55,108,44,"AnimatedWrap"],[109,73,108,56],[109,75,108,58],[110,8,109,6,"ref"],[110,11,109,9],[110,13,109,11,"refHandler"],[110,23,109,21],[111,8,110,6,"onGestureHandlerEvent"],[111,29,110,27],[111,31,110,29,"preparedGesture"],[111,46,110,44],[111,47,110,45,"animatedEventHandler"],[112,6,111,4],[112,7,111,5],[112,9,111,7,"props"],[112,14,111,12],[112,15,111,13,"children"],[112,23,111,21],[112,24,111,22],[113,4,112,2],[113,5,112,3],[113,11,112,9],[114,6,113,4],[114,13,113,11],[114,26,113,24,"React"],[114,40,113,29],[114,41,113,30,"createElement"],[114,54,113,43],[114,55,113,44,"Wrap"],[114,65,113,48],[114,67,113,50],[115,8,114,6,"ref"],[115,11,114,9],[115,13,114,11,"refHandler"],[116,6,115,4],[116,7,115,5],[116,9,115,7,"props"],[116,14,115,12],[116,15,115,13,"children"],[116,23,115,21],[116,24,115,22],[117,4,116,2],[118,2,117,0],[118,3,117,1],[119,2,117,2,"exports"],[119,9,117,2],[119,10,117,2,"GestureDetector"],[119,25,117,2],[119,28,117,2,"GestureDetector"],[119,43,117,2],[120,0,117,2],[120,3]],"functionMap":{"names":["<global>","propagateDetectorConfig","GestureDetector","useMemo$argument_0","gesturesToAttach.some$argument_0","useLayoutEffect$argument_0","<anonymous>","useEffect$argument_0"],"mappings":"AAA;ACgB;CDe;+BEiB;mCCU,oCD;oDEC,0BF;kBGuB;WCU;KDG;GHC;YKC;GLM;CFa"}},"type":"js/module"}]}