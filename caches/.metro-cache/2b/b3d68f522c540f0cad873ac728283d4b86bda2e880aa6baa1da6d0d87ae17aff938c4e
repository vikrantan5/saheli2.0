{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"b5GA/1RTN5qhAr7TBpblrtwqASE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@firebase/component","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":95},"end":{"line":5,"column":46,"index":125}}],"key":"eDsH+fiRQ6A04XOvKTChGPEhs0I=","exportNames":["*"]}},{"name":"@firebase/logger","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":142},"end":{"line":6,"column":42,"index":169}}],"key":"pLe/ZFQGfNWvdh/0rG0JuGxrOpM=","exportNames":["*"]}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":182},"end":{"line":7,"column":36,"index":207}}],"key":"R3im+0n/eSh8gKTMLLPoTxcvyH0=","exportNames":["*"]}},{"name":"idb","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":10,"index":219},"end":{"line":8,"column":24,"index":233}}],"key":"gQIohp0usk4EqVqiJGPZGDPUvfk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _assertThisInitialized = require(_dependencyMap[1], \"@babel/runtime/helpers/assertThisInitialized\");\n  var _possibleConstructorReturn = require(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = require(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = require(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n  var _classCallCheck = require(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[6], \"@babel/runtime/helpers/createClass\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var component = require(_dependencyMap[7], \"@firebase/component\");\n  var logger$1 = require(_dependencyMap[8], \"@firebase/logger\");\n  var util = require(_dependencyMap[9], \"@firebase/util\");\n  var idb = require(_dependencyMap[10], \"idb\");\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var PlatformLoggerServiceImpl = /*#__PURE__*/function () {\n    function PlatformLoggerServiceImpl(container) {\n      _classCallCheck(this, PlatformLoggerServiceImpl);\n      this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    return _createClass(PlatformLoggerServiceImpl, [{\n      key: \"getPlatformInfoString\",\n      value: function getPlatformInfoString() {\n        var providers = this.container.getProviders();\n        // Loop through providers and get library/version pairs from any that are\n        // version components.\n        return providers.map(provider => {\n          if (isVersionServiceProvider(provider)) {\n            var service = provider.getImmediate();\n            return `${service.library}/${service.version}`;\n          } else {\n            return null;\n          }\n        }).filter(logString => logString).join(' ');\n      }\n    }]);\n  }();\n  /**\n   *\n   * @param provider check if this provider provides a VersionService\n   *\n   * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n   * provides VersionService. The provider is not necessarily a 'app-version'\n   * provider.\n   */\n  function isVersionServiceProvider(provider) {\n    var component = provider.getComponent();\n    return component?.type === \"VERSION\" /* ComponentType.VERSION */;\n  }\n  var name$q = \"@firebase/app\";\n  var version$1 = \"0.14.4\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var logger = new logger$1.Logger('@firebase/app');\n  var name$p = \"@firebase/app-compat\";\n  var name$o = \"@firebase/analytics-compat\";\n  var name$n = \"@firebase/analytics\";\n  var name$m = \"@firebase/app-check-compat\";\n  var name$l = \"@firebase/app-check\";\n  var name$k = \"@firebase/auth\";\n  var name$j = \"@firebase/auth-compat\";\n  var name$i = \"@firebase/database\";\n  var name$h = \"@firebase/data-connect\";\n  var name$g = \"@firebase/database-compat\";\n  var name$f = \"@firebase/functions\";\n  var name$e = \"@firebase/functions-compat\";\n  var name$d = \"@firebase/installations\";\n  var name$c = \"@firebase/installations-compat\";\n  var name$b = \"@firebase/messaging\";\n  var name$a = \"@firebase/messaging-compat\";\n  var name$9 = \"@firebase/performance\";\n  var name$8 = \"@firebase/performance-compat\";\n  var name$7 = \"@firebase/remote-config\";\n  var name$6 = \"@firebase/remote-config-compat\";\n  var name$5 = \"@firebase/storage\";\n  var name$4 = \"@firebase/storage-compat\";\n  var name$3 = \"@firebase/firestore\";\n  var name$2 = \"@firebase/ai\";\n  var name$1 = \"@firebase/firestore-compat\";\n  var name = \"firebase\";\n  var version = \"12.4.0\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The default app name\n   *\n   * @internal\n   */\n  var DEFAULT_ENTRY_NAME = '[DEFAULT]';\n  var PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js',\n    // Platform identifier for JS SDK.\n    [name]: 'fire-js-all'\n  };\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * @internal\n   */\n  var _apps = new Map();\n  /**\n   * @internal\n   */\n  var _serverApps = new Map();\n  /**\n   * Registered components.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var _components = new Map();\n  /**\n   * @param component - the component being added to this app's container\n   *\n   * @internal\n   */\n  function _addComponent(app, component) {\n    try {\n      app.container.addComponent(component);\n    } catch (e) {\n      logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n  }\n  /**\n   *\n   * @internal\n   */\n  function _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n  }\n  /**\n   *\n   * @param component - the component to register\n   * @returns whether or not the component is registered successfully\n   *\n   * @internal\n   */\n  function _registerComponent(component) {\n    var componentName = component.name;\n    if (_components.has(componentName)) {\n      logger.debug(`There were multiple attempts to register component ${componentName}.`);\n      return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (var app of _apps.values()) {\n      _addComponent(app, component);\n    }\n    for (var serverApp of _serverApps.values()) {\n      _addComponent(serverApp, component);\n    }\n    return true;\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   *\n   * @returns the provider for the service with the matching name\n   *\n   * @internal\n   */\n  function _getProvider(app, name) {\n    var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n      optional: true\n    });\n    if (heartbeatController) {\n      void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n   *\n   * @internal\n   */\n  function _removeServiceInstance(app, name) {\n    var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provide object is of type FirebaseApp.\n   *\n   * @internal\n   */\n  function _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerAppSettings(obj) {\n    if (_isFirebaseApp(obj)) {\n      return false;\n    }\n    return 'authIdToken' in obj || 'appCheckToken' in obj || 'releaseOnDeref' in obj || 'automaticDataCollectionEnabled' in obj;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerApp(obj) {\n    if (obj === null || obj === undefined) {\n      return false;\n    }\n    return obj.settings !== undefined;\n  }\n  /**\n   * Test only\n   *\n   * @internal\n   */\n  function _clearComponents() {\n    _components.clear();\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first',\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n  };\n  var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var FirebaseAppImpl = /*#__PURE__*/function () {\n    function FirebaseAppImpl(options, config, container) {\n      _classCallCheck(this, FirebaseAppImpl);\n      this._isDeleted = false;\n      this._options = {\n        ...options\n      };\n      this._config = {\n        ...config\n      };\n      this._name = config.name;\n      this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n      this._container = container;\n      this.container.addComponent(new component.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    return _createClass(FirebaseAppImpl, [{\n      key: \"automaticDataCollectionEnabled\",\n      get: function () {\n        this.checkDestroyed();\n        return this._automaticDataCollectionEnabled;\n      },\n      set: function (val) {\n        this.checkDestroyed();\n        this._automaticDataCollectionEnabled = val;\n      }\n    }, {\n      key: \"name\",\n      get: function () {\n        this.checkDestroyed();\n        return this._name;\n      }\n    }, {\n      key: \"options\",\n      get: function () {\n        this.checkDestroyed();\n        return this._options;\n      }\n    }, {\n      key: \"config\",\n      get: function () {\n        this.checkDestroyed();\n        return this._config;\n      }\n    }, {\n      key: \"container\",\n      get: function () {\n        return this._container;\n      }\n    }, {\n      key: \"isDeleted\",\n      get: function () {\n        return this._isDeleted;\n      },\n      set: function (val) {\n        this._isDeleted = val;\n      }\n      /**\n       * This function will throw an Error if the App has already been deleted -\n       * use before performing API actions on the App.\n       */\n    }, {\n      key: \"checkDestroyed\",\n      value: function checkDestroyed() {\n        if (this.isDeleted) {\n          throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n            appName: this._name\n          });\n        }\n      }\n    }]);\n  }();\n  /**\n   * @license\n   * Copyright 2023 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // Parse the token and check to see if the `exp` claim is in the future.\n  // Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n  // the past.\n  function validateTokenTTL(base64Token, tokenName) {\n    var secondPart = util.base64Decode(base64Token.split('.')[1]);\n    if (secondPart === null) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`);\n      return;\n    }\n    var expClaim = JSON.parse(secondPart).exp;\n    if (expClaim === undefined) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`);\n      return;\n    }\n    var exp = JSON.parse(secondPart).exp * 1000;\n    var now = new Date().getTime();\n    var diff = exp - now;\n    if (diff <= 0) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: the token has expired.`);\n    }\n  }\n  var FirebaseServerAppImpl = /*#__PURE__*/function (_FirebaseAppImpl) {\n    function FirebaseServerAppImpl(options, serverConfig, name, container) {\n      var _this;\n      _classCallCheck(this, FirebaseServerAppImpl);\n      // Build configuration parameters for the FirebaseAppImpl base class.\n      var automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : true;\n      // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n      var config = {\n        name,\n        automaticDataCollectionEnabled\n      };\n      if (options.apiKey !== undefined) {\n        // Construct the parent FirebaseAppImp object.\n        _this = _callSuper(this, FirebaseServerAppImpl, [options, config, container]);\n      } else {\n        var appImpl = options;\n        _this = _callSuper(this, FirebaseServerAppImpl, [appImpl.options, config, container]);\n      }\n      // Now construct the data for the FirebaseServerAppImpl.\n      _this._serverConfig = {\n        automaticDataCollectionEnabled,\n        ...serverConfig\n      };\n      // Ensure that the current time is within the `authIdtoken` window of validity.\n      if (_this._serverConfig.authIdToken) {\n        validateTokenTTL(_this._serverConfig.authIdToken, 'authIdToken');\n      }\n      // Ensure that the current time is within the `appCheckToken` window of validity.\n      if (_this._serverConfig.appCheckToken) {\n        validateTokenTTL(_this._serverConfig.appCheckToken, 'appCheckToken');\n      }\n      _this._finalizationRegistry = null;\n      if (typeof FinalizationRegistry !== 'undefined') {\n        _this._finalizationRegistry = new FinalizationRegistry(() => {\n          _this.automaticCleanup();\n        });\n      }\n      _this._refCount = 0;\n      _this.incRefCount(_this._serverConfig.releaseOnDeref);\n      // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n      // will never trigger.\n      _this._serverConfig.releaseOnDeref = undefined;\n      serverConfig.releaseOnDeref = undefined;\n      registerVersion(name$q, version$1, 'serverapp');\n      return _assertThisInitialized(_this);\n    }\n    _inherits(FirebaseServerAppImpl, _FirebaseAppImpl);\n    return _createClass(FirebaseServerAppImpl, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return undefined;\n      }\n    }, {\n      key: \"refCount\",\n      get: function () {\n        return this._refCount;\n      }\n      // Increment the reference count of this server app. If an object is provided, register it\n      // with the finalization registry.\n    }, {\n      key: \"incRefCount\",\n      value: function incRefCount(obj) {\n        if (this.isDeleted) {\n          return;\n        }\n        this._refCount++;\n        if (obj !== undefined && this._finalizationRegistry !== null) {\n          this._finalizationRegistry.register(obj, this);\n        }\n      }\n      // Decrement the reference count.\n    }, {\n      key: \"decRefCount\",\n      value: function decRefCount() {\n        if (this.isDeleted) {\n          return 0;\n        }\n        return --this._refCount;\n      }\n      // Invoked by the FinalizationRegistry callback to note that this app should go through its\n      // reference counts and delete itself if no reference count remain. The coordinating logic that\n      // handles this is in deleteApp(...).\n    }, {\n      key: \"automaticCleanup\",\n      value: function automaticCleanup() {\n        void deleteApp(this);\n      }\n    }, {\n      key: \"settings\",\n      get: function () {\n        this.checkDestroyed();\n        return this._serverConfig;\n      }\n      /**\n       * This function will throw an Error if the App has already been deleted -\n       * use before performing API actions on the App.\n       */\n    }, {\n      key: \"checkDestroyed\",\n      value: function checkDestroyed() {\n        if (this.isDeleted) {\n          throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n        }\n      }\n    }]);\n  }(FirebaseAppImpl);\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The current SDK version.\n   *\n   * @public\n   */\n  var SDK_VERSION = version;\n  function initializeApp(_options) {\n    var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = _options;\n    if (typeof rawConfig !== 'object') {\n      var _name = rawConfig;\n      rawConfig = {\n        name: _name\n      };\n    }\n    var config = {\n      name: DEFAULT_ENTRY_NAME,\n      automaticDataCollectionEnabled: true,\n      ...rawConfig\n    };\n    var name = config.name;\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n        appName: String(name)\n      });\n    }\n    options || (options = util.getDefaultAppConfig());\n    if (!options) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    var existingApp = _apps.get(name);\n    if (existingApp) {\n      // return the existing app if options and config deep equal the ones in the existing app.\n      if (util.deepEqual(options, existingApp.options) && util.deepEqual(config, existingApp.config)) {\n        return existingApp;\n      } else {\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n          appName: name\n        });\n      }\n    }\n    var container = new component.ComponentContainer(name);\n    for (var _component of _components.values()) {\n      container.addComponent(_component);\n    }\n    var newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n  }\n  function initializeServerApp(_options) {\n    var _serverAppConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (util.isBrowser() && !util.isWebWorker()) {\n      // FirebaseServerApp isn't designed to be run in browsers.\n      throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    var firebaseOptions;\n    var serverAppSettings = _serverAppConfig || {};\n    if (_options) {\n      if (_isFirebaseApp(_options)) {\n        firebaseOptions = _options.options;\n      } else if (_isFirebaseServerAppSettings(_options)) {\n        serverAppSettings = _options;\n      } else {\n        firebaseOptions = _options;\n      }\n    }\n    if (serverAppSettings.automaticDataCollectionEnabled === undefined) {\n      serverAppSettings.automaticDataCollectionEnabled = true;\n    }\n    firebaseOptions || (firebaseOptions = util.getDefaultAppConfig());\n    if (!firebaseOptions) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    // Build an app name based on a hash of the configuration options.\n    var nameObj = {\n      ...serverAppSettings,\n      ...firebaseOptions\n    };\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n      delete nameObj.releaseOnDeref;\n    }\n    var hashCode = s => {\n      return [...s].reduce((hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (serverAppSettings.releaseOnDeref !== undefined) {\n      if (typeof FinalizationRegistry === 'undefined') {\n        throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n      }\n    }\n    var nameString = '' + hashCode(JSON.stringify(nameObj));\n    var existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n      existingApp.incRefCount(serverAppSettings.releaseOnDeref);\n      return existingApp;\n    }\n    var container = new component.ComponentContainer(nameString);\n    for (var _component2 of _components.values()) {\n      container.addComponent(_component2);\n    }\n    var newApp = new FirebaseServerAppImpl(firebaseOptions, serverAppSettings, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n  }\n  /**\n   * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n   *\n   * When called with no arguments, the default app is returned. When an app name\n   * is provided, the app corresponding to that name is returned.\n   *\n   * An exception is thrown if the app being retrieved has not yet been\n   * initialized.\n   *\n   * @example\n   * ```javascript\n   * // Return the default app\n   * const app = getApp();\n   * ```\n   *\n   * @example\n   * ```javascript\n   * // Return a named app\n   * const otherApp = getApp(\"otherApp\");\n   * ```\n   *\n   * @param name - Optional name of the app to return. If no name is\n   *   provided, the default is `\"[DEFAULT]\"`.\n   *\n   * @returns The app corresponding to the provided app name.\n   *   If no app name is provided, the default app is returned.\n   *\n   * @public\n   */\n  function getApp() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n    var app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && util.getDefaultAppConfig()) {\n      return initializeApp();\n    }\n    if (!app) {\n      throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n        appName: name\n      });\n    }\n    return app;\n  }\n  /**\n   * A (read-only) array of all initialized apps.\n   * @public\n   */\n  function getApps() {\n    return Array.from(_apps.values());\n  }\n  /**\n   * Renders this app unusable and frees the resources of all associated\n   * services.\n   *\n   * @example\n   * ```javascript\n   * deleteApp(app)\n   *   .then(function() {\n   *     console.log(\"App deleted successfully\");\n   *   })\n   *   .catch(function(error) {\n   *     console.log(\"Error deleting app:\", error);\n   *   });\n   * ```\n   *\n   * @public\n   */\n  function deleteApp(_x) {\n    return _deleteApp.apply(this, arguments);\n  }\n  /**\n   * Registers a library's name and version for platform logging purposes.\n   * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n   * @param version - Current version of that library.\n   * @param variant - Bundle variant, e.g., node, rn, etc.\n   *\n   * @public\n   */\n  function _deleteApp() {\n    _deleteApp = _asyncToGenerator(function* (app) {\n      var cleanupProviders = false;\n      var name = app.name;\n      if (_apps.has(name)) {\n        cleanupProviders = true;\n        _apps.delete(name);\n      } else if (_serverApps.has(name)) {\n        var firebaseServerApp = app;\n        if (firebaseServerApp.decRefCount() <= 0) {\n          _serverApps.delete(name);\n          cleanupProviders = true;\n        }\n      }\n      if (cleanupProviders) {\n        yield Promise.all(app.container.getProviders().map(provider => provider.delete()));\n        app.isDeleted = true;\n      }\n    });\n    return _deleteApp.apply(this, arguments);\n  }\n  function registerVersion(libraryKeyOrName, version, variant) {\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    var library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    var libraryMismatch = library.match(/\\s|\\//);\n    var versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      var warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n      if (libraryMismatch) {\n        warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    _registerComponent(new component.Component(`${library}-version`, () => ({\n      library,\n      version\n    }), \"VERSION\" /* ComponentType.VERSION */));\n  }\n  /**\n   * Sets log handler for all Firebase SDKs.\n   * @param logCallback - An optional custom log handler that executes user code whenever\n   * the Firebase SDK makes a logging call.\n   *\n   * @public\n   */\n  function onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    logger$1.setUserLogHandler(logCallback, options);\n  }\n  /**\n   * Sets log level for all Firebase SDKs.\n   *\n   * All of the log types above the current log level are captured (i.e. if\n   * you set the log level to `info`, errors are logged, but `debug` and\n   * `verbose` logs are not).\n   *\n   * @public\n   */\n  function setLogLevel(logLevel) {\n    logger$1.setLogLevel(logLevel);\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var DB_NAME = 'firebase-heartbeat-database';\n  var DB_VERSION = 1;\n  var STORE_NAME = 'firebase-heartbeat-store';\n  var dbPromise = null;\n  function getDbPromise() {\n    if (!dbPromise) {\n      dbPromise = idb.openDB(DB_NAME, DB_VERSION, {\n        upgrade: (db, oldVersion) => {\n          // We don't use 'break' in this switch statement, the fall-through\n          // behavior is what we want, because if there are multiple versions between\n          // the old version and the current version, we want ALL the migrations\n          // that correspond to those versions to run, not only the last one.\n          // eslint-disable-next-line default-case\n          switch (oldVersion) {\n            case 0:\n              try {\n                db.createObjectStore(STORE_NAME);\n              } catch (e) {\n                // Safari/iOS browsers throw occasional exceptions on\n                // db.createObjectStore() that may be a bug. Avoid blocking\n                // the rest of the app functionality.\n                console.warn(e);\n              }\n          }\n        }\n      }).catch(e => {\n        throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n          originalErrorMessage: e.message\n        });\n      });\n    }\n    return dbPromise;\n  }\n  function readHeartbeatsFromIndexedDB(_x2) {\n    return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n  }\n  function _readHeartbeatsFromIndexedDB() {\n    _readHeartbeatsFromIndexedDB = _asyncToGenerator(function* (app) {\n      try {\n        var db = yield getDbPromise();\n        var tx = db.transaction(STORE_NAME);\n        var result = yield tx.objectStore(STORE_NAME).get(computeKey(app));\n        // We already have the value but tx.done can throw,\n        // so we need to await it here to catch errors\n        yield tx.done;\n        return result;\n      } catch (e) {\n        if (e instanceof util.FirebaseError) {\n          logger.warn(e.message);\n        } else {\n          var idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n            originalErrorMessage: e?.message\n          });\n          logger.warn(idbGetError.message);\n        }\n      }\n    });\n    return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n  }\n  function writeHeartbeatsToIndexedDB(_x3, _x4) {\n    return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n  }\n  function _writeHeartbeatsToIndexedDB() {\n    _writeHeartbeatsToIndexedDB = _asyncToGenerator(function* (app, heartbeatObject) {\n      try {\n        var db = yield getDbPromise();\n        var tx = db.transaction(STORE_NAME, 'readwrite');\n        var objectStore = tx.objectStore(STORE_NAME);\n        yield objectStore.put(heartbeatObject, computeKey(app));\n        yield tx.done;\n      } catch (e) {\n        if (e instanceof util.FirebaseError) {\n          logger.warn(e.message);\n        } else {\n          var idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n            originalErrorMessage: e?.message\n          });\n          logger.warn(idbGetError.message);\n        }\n      }\n    });\n    return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n  }\n  function computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var MAX_HEADER_BYTES = 1024;\n  var MAX_NUM_STORED_HEARTBEATS = 30;\n  var HeartbeatServiceImpl = /*#__PURE__*/function () {\n    function HeartbeatServiceImpl(container) {\n      _classCallCheck(this, HeartbeatServiceImpl);\n      this.container = container;\n      /**\n       * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n       * the header string.\n       * Stores one record per date. This will be consolidated into the standard\n       * format of one record per user agent string before being sent as a header.\n       * Populated from indexedDB when the controller is instantiated and should\n       * be kept in sync with indexedDB.\n       * Leave public for easier testing.\n       */\n      this._heartbeatsCache = null;\n      var app = this.container.getProvider('app').getImmediate();\n      this._storage = new HeartbeatStorageImpl(app);\n      this._heartbeatsCachePromise = this._storage.read().then(result => {\n        this._heartbeatsCache = result;\n        return result;\n      });\n    }\n    /**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */\n    return _createClass(HeartbeatServiceImpl, [{\n      key: \"triggerHeartbeat\",\n      value: (function () {\n        var _triggerHeartbeat = _asyncToGenerator(function* () {\n          try {\n            var platformLogger = this.container.getProvider('platform-logger').getImmediate();\n            // This is the \"Firebase user agent\" string from the platform logger\n            // service, not the browser user agent.\n            var agent = platformLogger.getPlatformInfoString();\n            var date = getUTCDateString();\n            if (this._heartbeatsCache?.heartbeats == null) {\n              this._heartbeatsCache = yield this._heartbeatsCachePromise;\n              // If we failed to construct a heartbeats cache, then return immediately.\n              if (this._heartbeatsCache?.heartbeats == null) {\n                return;\n              }\n            }\n            // Do not store a heartbeat if one is already stored for this day\n            // or if a header has already been sent today.\n            if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n              return;\n            } else {\n              // There is no entry for this date. Create one.\n              this._heartbeatsCache.heartbeats.push({\n                date,\n                agent\n              });\n              // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n              // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n              if (this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS) {\n                var earliestHeartbeatIdx = getEarliestHeartbeatIdx(this._heartbeatsCache.heartbeats);\n                this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n              }\n            }\n            return this._storage.overwrite(this._heartbeatsCache);\n          } catch (e) {\n            logger.warn(e);\n          }\n        });\n        function triggerHeartbeat() {\n          return _triggerHeartbeat.apply(this, arguments);\n        }\n        return triggerHeartbeat;\n      }()\n      /**\n       * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n       * It also clears all heartbeats from memory as well as in IndexedDB.\n       *\n       * NOTE: Consuming product SDKs should not send the header if this method\n       * returns an empty string.\n       */\n      )\n    }, {\n      key: \"getHeartbeatsHeader\",\n      value: (function () {\n        var _getHeartbeatsHeader = _asyncToGenerator(function* () {\n          try {\n            if (this._heartbeatsCache === null) {\n              yield this._heartbeatsCachePromise;\n            }\n            // If it's still null or the array is empty, there is no data to send.\n            if (this._heartbeatsCache?.heartbeats == null || this._heartbeatsCache.heartbeats.length === 0) {\n              return '';\n            }\n            var date = getUTCDateString();\n            // Extract as many heartbeats from the cache as will fit under the size limit.\n            var _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats),\n              heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend,\n              unsentEntries = _extractHeartbeatsFor.unsentEntries;\n            var headerString = util.base64urlEncodeWithoutPadding(JSON.stringify({\n              version: 2,\n              heartbeats: heartbeatsToSend\n            }));\n            // Store last sent date to prevent another being logged/sent for the same day.\n            this._heartbeatsCache.lastSentHeartbeatDate = date;\n            if (unsentEntries.length > 0) {\n              // Store any unsent entries if they exist.\n              this._heartbeatsCache.heartbeats = unsentEntries;\n              // This seems more likely than emptying the array (below) to lead to some odd state\n              // since the cache isn't empty and this will be called again on the next request,\n              // and is probably safest if we await it.\n              yield this._storage.overwrite(this._heartbeatsCache);\n            } else {\n              this._heartbeatsCache.heartbeats = [];\n              // Do not wait for this, to reduce latency.\n              void this._storage.overwrite(this._heartbeatsCache);\n            }\n            return headerString;\n          } catch (e) {\n            logger.warn(e);\n            return '';\n          }\n        });\n        function getHeartbeatsHeader() {\n          return _getHeartbeatsHeader.apply(this, arguments);\n        }\n        return getHeartbeatsHeader;\n      }())\n    }]);\n  }();\n  function getUTCDateString() {\n    var today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n  }\n  function extractHeartbeatsForHeader(heartbeatsCache) {\n    var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    var heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    var unsentEntries = heartbeatsCache.slice();\n    var _loop = function (singleDateHeartbeat) {\n        // Look for an existing entry with the same user agent.\n        var heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n        if (!heartbeatEntry) {\n          // If no entry for this user agent exists, create one.\n          heartbeatsToSend.push({\n            agent: singleDateHeartbeat.agent,\n            dates: [singleDateHeartbeat.date]\n          });\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            // If the header would exceed max size, remove the added heartbeat\n            // entry and stop adding to the header.\n            heartbeatsToSend.pop();\n            return 0; // break\n          }\n        } else {\n          heartbeatEntry.dates.push(singleDateHeartbeat.date);\n          // If the header would exceed max size, remove the added date\n          // and stop adding to the header.\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            heartbeatEntry.dates.pop();\n            return 0; // break\n          }\n        }\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n        // quota and the loop breaks early.)\n        unsentEntries = unsentEntries.slice(1);\n      },\n      _ret;\n    for (var singleDateHeartbeat of heartbeatsCache) {\n      _ret = _loop(singleDateHeartbeat);\n      if (_ret === 0) break;\n    }\n    return {\n      heartbeatsToSend,\n      unsentEntries\n    };\n  }\n  var HeartbeatStorageImpl = /*#__PURE__*/function () {\n    function HeartbeatStorageImpl(app) {\n      _classCallCheck(this, HeartbeatStorageImpl);\n      this.app = app;\n      this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    return _createClass(HeartbeatStorageImpl, [{\n      key: \"runIndexedDBEnvironmentCheck\",\n      value: function () {\n        var _runIndexedDBEnvironmentCheck = _asyncToGenerator(function* () {\n          if (!util.isIndexedDBAvailable()) {\n            return false;\n          } else {\n            return util.validateIndexedDBOpenable().then(() => true).catch(() => false);\n          }\n        });\n        function runIndexedDBEnvironmentCheck() {\n          return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n        }\n        return runIndexedDBEnvironmentCheck;\n      }()\n      /**\n       * Read all heartbeats.\n       */\n    }, {\n      key: \"read\",\n      value: (function () {\n        var _read = _asyncToGenerator(function* () {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return {\n              heartbeats: []\n            };\n          } else {\n            var idbHeartbeatObject = yield readHeartbeatsFromIndexedDB(this.app);\n            if (idbHeartbeatObject?.heartbeats) {\n              return idbHeartbeatObject;\n            } else {\n              return {\n                heartbeats: []\n              };\n            }\n          }\n        });\n        function read() {\n          return _read.apply(this, arguments);\n        }\n        return read;\n      }() // overwrite the storage with the provided heartbeats\n      )\n    }, {\n      key: \"overwrite\",\n      value: function () {\n        var _overwrite = _asyncToGenerator(function* (heartbeatsObject) {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return;\n          } else {\n            var existingHeartbeatsObject = yield this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n              lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n              heartbeats: heartbeatsObject.heartbeats\n            });\n          }\n        });\n        function overwrite(_x5) {\n          return _overwrite.apply(this, arguments);\n        }\n        return overwrite;\n      }() // add heartbeats\n    }, {\n      key: \"add\",\n      value: function () {\n        var _add = _asyncToGenerator(function* (heartbeatsObject) {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return;\n          } else {\n            var existingHeartbeatsObject = yield this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n              lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n              heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n            });\n          }\n        });\n        function add(_x6) {\n          return _add.apply(this, arguments);\n        }\n        return add;\n      }()\n    }]);\n  }();\n  /**\n   * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n   * in a platform logging header JSON object, stringified, and converted\n   * to base 64.\n   */\n  function countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return util.base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsCache\n    })).length;\n  }\n  /**\n   * Returns the index of the heartbeat with the earliest date.\n   * If the heartbeats array is empty, -1 is returned.\n   */\n  function getEarliestHeartbeatIdx(heartbeats) {\n    if (heartbeats.length === 0) {\n      return -1;\n    }\n    var earliestHeartbeatIdx = 0;\n    var earliestHeartbeatDate = heartbeats[0].date;\n    for (var i = 1; i < heartbeats.length; i++) {\n      if (heartbeats[i].date < earliestHeartbeatDate) {\n        earliestHeartbeatDate = heartbeats[i].date;\n        earliestHeartbeatIdx = i;\n      }\n    }\n    return earliestHeartbeatIdx;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  function registerCoreComponents(variant) {\n    _registerComponent(new component.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new component.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm, cjs, etc during the compilation\n    registerVersion(name$q, version$1, 'cjs2020');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n  }\n\n  /**\n   * Firebase App\n   *\n   * @remarks This package coordinates the communication between the different Firebase components\n   * @packageDocumentation\n   */\n  registerCoreComponents('node');\n  Object.defineProperty(exports, 'FirebaseError', {\n    enumerable: true,\n    get: function () {\n      return util.FirebaseError;\n    }\n  });\n  exports.SDK_VERSION = SDK_VERSION;\n  exports._DEFAULT_ENTRY_NAME = DEFAULT_ENTRY_NAME;\n  exports._addComponent = _addComponent;\n  exports._addOrOverwriteComponent = _addOrOverwriteComponent;\n  exports._apps = _apps;\n  exports._clearComponents = _clearComponents;\n  exports._components = _components;\n  exports._getProvider = _getProvider;\n  exports._isFirebaseApp = _isFirebaseApp;\n  exports._isFirebaseServerApp = _isFirebaseServerApp;\n  exports._isFirebaseServerAppSettings = _isFirebaseServerAppSettings;\n  exports._registerComponent = _registerComponent;\n  exports._removeServiceInstance = _removeServiceInstance;\n  exports._serverApps = _serverApps;\n  exports.deleteApp = deleteApp;\n  exports.getApp = getApp;\n  exports.getApps = getApps;\n  exports.initializeApp = initializeApp;\n  exports.initializeServerApp = initializeServerApp;\n  exports.onLog = onLog;\n  exports.registerVersion = registerVersion;\n  exports.setLogLevel = setLogLevel;\n});","lineCount":1349,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,1,13],[5,6,1,13,"_assertThisInitialized"],[5,28,1,13],[5,31,1,13,"require"],[5,38,1,13],[5,39,1,13,"_dependencyMap"],[5,53,1,13],[6,2,1,13],[6,6,1,13,"_possibleConstructorReturn"],[6,32,1,13],[6,35,1,13,"require"],[6,42,1,13],[6,43,1,13,"_dependencyMap"],[6,57,1,13],[7,2,1,13],[7,6,1,13,"_getPrototypeOf"],[7,21,1,13],[7,24,1,13,"require"],[7,31,1,13],[7,32,1,13,"_dependencyMap"],[7,46,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"require"],[8,25,1,13],[8,26,1,13,"_dependencyMap"],[8,40,1,13],[9,2,1,13],[9,6,1,13,"_classCallCheck"],[9,21,1,13],[9,24,1,13,"require"],[9,31,1,13],[9,32,1,13,"_dependencyMap"],[9,46,1,13],[10,2,1,13],[10,6,1,13,"_createClass"],[10,18,1,13],[10,21,1,13,"require"],[10,28,1,13],[10,29,1,13,"_dependencyMap"],[10,43,1,13],[11,2,1,13],[11,11,1,13,"_callSuper"],[11,22,1,13,"t"],[11,23,1,13],[11,25,1,13,"o"],[11,26,1,13],[11,28,1,13,"e"],[11,29,1,13],[11,40,1,13,"o"],[11,41,1,13],[11,44,1,13,"_getPrototypeOf"],[11,59,1,13],[11,60,1,13,"o"],[11,61,1,13],[11,64,1,13,"_possibleConstructorReturn"],[11,90,1,13],[11,91,1,13,"t"],[11,92,1,13],[11,94,1,13,"_isNativeReflectConstruct"],[11,119,1,13],[11,124,1,13,"Reflect"],[11,131,1,13],[11,132,1,13,"construct"],[11,141,1,13],[11,142,1,13,"o"],[11,143,1,13],[11,145,1,13,"e"],[11,146,1,13],[11,154,1,13,"_getPrototypeOf"],[11,169,1,13],[11,170,1,13,"t"],[11,171,1,13],[11,173,1,13,"constructor"],[11,184,1,13],[11,188,1,13,"o"],[11,189,1,13],[11,190,1,13,"apply"],[11,195,1,13],[11,196,1,13,"t"],[11,197,1,13],[11,199,1,13,"e"],[11,200,1,13],[12,2,1,13],[12,11,1,13,"_isNativeReflectConstruct"],[12,37,1,13],[12,51,1,13,"t"],[12,52,1,13],[12,56,1,13,"Boolean"],[12,63,1,13],[12,64,1,13,"prototype"],[12,73,1,13],[12,74,1,13,"valueOf"],[12,81,1,13],[12,82,1,13,"call"],[12,86,1,13],[12,87,1,13,"Reflect"],[12,94,1,13],[12,95,1,13,"construct"],[12,104,1,13],[12,105,1,13,"Boolean"],[12,112,1,13],[12,145,1,13,"t"],[12,146,1,13],[12,159,1,13,"_isNativeReflectConstruct"],[12,184,1,13],[12,196,1,13,"_isNativeReflectConstruct"],[12,197,1,13],[12,210,1,13,"t"],[12,211,1,13],[13,2,3,0,"Object"],[13,8,3,6],[13,9,3,7,"defineProperty"],[13,23,3,21],[13,24,3,22,"exports"],[13,31,3,29],[13,33,3,31],[13,45,3,43],[13,47,3,45],[14,4,3,47,"value"],[14,9,3,52],[14,11,3,54],[15,2,3,59],[15,3,3,60],[15,4,3,61],[16,2,5,0],[16,6,5,4,"component"],[16,15,5,13],[16,18,5,16,"require"],[16,25,5,23],[16,26,5,23,"_dependencyMap"],[16,40,5,23],[16,66,5,45],[16,67,5,46],[17,2,6,0],[17,6,6,4,"logger$1"],[17,14,6,12],[17,17,6,15,"require"],[17,24,6,22],[17,25,6,22,"_dependencyMap"],[17,39,6,22],[17,62,6,41],[17,63,6,42],[18,2,7,0],[18,6,7,4,"util"],[18,10,7,8],[18,13,7,11,"require"],[18,20,7,18],[18,21,7,18,"_dependencyMap"],[18,35,7,18],[18,56,7,35],[18,57,7,36],[19,2,8,0],[19,6,8,4,"idb"],[19,9,8,7],[19,12,8,10,"require"],[19,19,8,17],[19,20,8,17,"_dependencyMap"],[19,34,8,17],[19,45,8,23],[19,46,8,24],[21,2,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,0,15,0],[27,0,16,0],[28,0,17,0],[29,0,18,0],[30,0,19,0],[31,0,20,0],[32,0,21,0],[33,0,22,0],[34,0,23,0],[35,0,24,0],[36,0,25,0],[37,2,10,0],[37,6,26,6,"PlatformLoggerServiceImpl"],[37,31,26,31],[38,4,27,4],[38,13,27,4,"PlatformLoggerServiceImpl"],[38,39,27,16,"container"],[38,48,27,25],[38,50,27,27],[39,6,27,27,"_classCallCheck"],[39,21,27,27],[39,28,27,27,"PlatformLoggerServiceImpl"],[39,53,27,27],[40,6,28,8],[40,10,28,12],[40,11,28,13,"container"],[40,20,28,22],[40,23,28,25,"container"],[40,32,28,34],[41,4,29,4],[42,4,30,4],[43,4,31,4],[44,4,31,4],[44,11,31,4,"_createClass"],[44,23,31,4],[44,24,31,4,"PlatformLoggerServiceImpl"],[44,49,31,4],[45,6,31,4,"key"],[45,9,31,4],[46,6,31,4,"value"],[46,11,31,4],[46,13,32,4],[46,22,32,4,"getPlatformInfoString"],[46,43,32,25,"getPlatformInfoString"],[46,44,32,25],[46,46,32,28],[47,8,33,8],[47,12,33,14,"providers"],[47,21,33,23],[47,24,33,26],[47,28,33,30],[47,29,33,31,"container"],[47,38,33,40],[47,39,33,41,"getProviders"],[47,51,33,53],[47,52,33,54],[47,53,33,55],[48,8,34,8],[49,8,35,8],[50,8,36,8],[50,15,36,15,"providers"],[50,24,36,24],[50,25,37,13,"map"],[50,28,37,16],[50,29,37,17,"provider"],[50,37,37,25],[50,41,37,29],[51,10,38,12],[51,14,38,16,"isVersionServiceProvider"],[51,38,38,40],[51,39,38,41,"provider"],[51,47,38,49],[51,48,38,50],[51,50,38,52],[52,12,39,16],[52,16,39,22,"service"],[52,23,39,29],[52,26,39,32,"provider"],[52,34,39,40],[52,35,39,41,"getImmediate"],[52,47,39,53],[52,48,39,54],[52,49,39,55],[53,12,40,16],[53,19,40,23],[53,22,40,26,"service"],[53,29,40,33],[53,30,40,34,"library"],[53,37,40,41],[53,41,40,45,"service"],[53,48,40,52],[53,49,40,53,"version"],[53,56,40,60],[53,58,40,62],[54,10,41,12],[54,11,41,13],[54,17,42,17],[55,12,43,16],[55,19,43,23],[55,23,43,27],[56,10,44,12],[57,8,45,8],[57,9,45,9],[57,10,45,10],[57,11,46,13,"filter"],[57,17,46,19],[57,18,46,20,"logString"],[57,27,46,29],[57,31,46,33,"logString"],[57,40,46,42],[57,41,46,43],[57,42,47,13,"join"],[57,46,47,17],[57,47,47,18],[57,50,47,21],[57,51,47,22],[58,6,48,4],[59,4,48,5],[60,2,48,5],[61,2,50,0],[62,0,51,0],[63,0,52,0],[64,0,53,0],[65,0,54,0],[66,0,55,0],[67,0,56,0],[68,0,57,0],[69,2,58,0],[69,11,58,9,"isVersionServiceProvider"],[69,35,58,33,"isVersionServiceProvider"],[69,36,58,34,"provider"],[69,44,58,42],[69,46,58,44],[70,4,59,4],[70,8,59,10,"component"],[70,17,59,19],[70,20,59,22,"provider"],[70,28,59,30],[70,29,59,31,"getComponent"],[70,41,59,43],[70,42,59,44],[70,43,59,45],[71,4,60,4],[71,11,60,11,"component"],[71,20,60,20],[71,22,60,22,"type"],[71,26,60,26],[71,31,60,31],[71,40,60,40],[71,41,60,41],[72,2,61,0],[73,2,63,0],[73,6,63,6,"name$q"],[73,12,63,12],[73,15,63,15],[73,30,63,30],[74,2,64,0],[74,6,64,6,"version$1"],[74,15,64,15],[74,18,64,18],[74,26,64,26],[76,2,66,0],[77,0,67,0],[78,0,68,0],[79,0,69,0],[80,0,70,0],[81,0,71,0],[82,0,72,0],[83,0,73,0],[84,0,74,0],[85,0,75,0],[86,0,76,0],[87,0,77,0],[88,0,78,0],[89,0,79,0],[90,0,80,0],[91,0,81,0],[92,2,82,0],[92,6,82,6,"logger"],[92,12,82,12],[92,15,82,15],[92,19,82,19,"logger$1"],[92,27,82,27],[92,28,82,28,"Logger"],[92,34,82,34],[92,35,82,35],[92,50,82,50],[92,51,82,51],[93,2,84,0],[93,6,84,6,"name$p"],[93,12,84,12],[93,15,84,15],[93,37,84,37],[94,2,86,0],[94,6,86,6,"name$o"],[94,12,86,12],[94,15,86,15],[94,43,86,43],[95,2,88,0],[95,6,88,6,"name$n"],[95,12,88,12],[95,15,88,15],[95,36,88,36],[96,2,90,0],[96,6,90,6,"name$m"],[96,12,90,12],[96,15,90,15],[96,43,90,43],[97,2,92,0],[97,6,92,6,"name$l"],[97,12,92,12],[97,15,92,15],[97,36,92,36],[98,2,94,0],[98,6,94,6,"name$k"],[98,12,94,12],[98,15,94,15],[98,31,94,31],[99,2,96,0],[99,6,96,6,"name$j"],[99,12,96,12],[99,15,96,15],[99,38,96,38],[100,2,98,0],[100,6,98,6,"name$i"],[100,12,98,12],[100,15,98,15],[100,35,98,35],[101,2,100,0],[101,6,100,6,"name$h"],[101,12,100,12],[101,15,100,15],[101,39,100,39],[102,2,102,0],[102,6,102,6,"name$g"],[102,12,102,12],[102,15,102,15],[102,42,102,42],[103,2,104,0],[103,6,104,6,"name$f"],[103,12,104,12],[103,15,104,15],[103,36,104,36],[104,2,106,0],[104,6,106,6,"name$e"],[104,12,106,12],[104,15,106,15],[104,43,106,43],[105,2,108,0],[105,6,108,6,"name$d"],[105,12,108,12],[105,15,108,15],[105,40,108,40],[106,2,110,0],[106,6,110,6,"name$c"],[106,12,110,12],[106,15,110,15],[106,47,110,47],[107,2,112,0],[107,6,112,6,"name$b"],[107,12,112,12],[107,15,112,15],[107,36,112,36],[108,2,114,0],[108,6,114,6,"name$a"],[108,12,114,12],[108,15,114,15],[108,43,114,43],[109,2,116,0],[109,6,116,6,"name$9"],[109,12,116,12],[109,15,116,15],[109,38,116,38],[110,2,118,0],[110,6,118,6,"name$8"],[110,12,118,12],[110,15,118,15],[110,45,118,45],[111,2,120,0],[111,6,120,6,"name$7"],[111,12,120,12],[111,15,120,15],[111,40,120,40],[112,2,122,0],[112,6,122,6,"name$6"],[112,12,122,12],[112,15,122,15],[112,47,122,47],[113,2,124,0],[113,6,124,6,"name$5"],[113,12,124,12],[113,15,124,15],[113,34,124,34],[114,2,126,0],[114,6,126,6,"name$4"],[114,12,126,12],[114,15,126,15],[114,41,126,41],[115,2,128,0],[115,6,128,6,"name$3"],[115,12,128,12],[115,15,128,15],[115,36,128,36],[116,2,130,0],[116,6,130,6,"name$2"],[116,12,130,12],[116,15,130,15],[116,29,130,29],[117,2,132,0],[117,6,132,6,"name$1"],[117,12,132,12],[117,15,132,15],[117,43,132,43],[118,2,134,0],[118,6,134,6,"name"],[118,10,134,10],[118,13,134,13],[118,23,134,23],[119,2,135,0],[119,6,135,6,"version"],[119,13,135,13],[119,16,135,16],[119,24,135,24],[121,2,137,0],[122,0,138,0],[123,0,139,0],[124,0,140,0],[125,0,141,0],[126,0,142,0],[127,0,143,0],[128,0,144,0],[129,0,145,0],[130,0,146,0],[131,0,147,0],[132,0,148,0],[133,0,149,0],[134,0,150,0],[135,0,151,0],[136,0,152,0],[137,2,153,0],[138,0,154,0],[139,0,155,0],[140,0,156,0],[141,0,157,0],[142,2,158,0],[142,6,158,6,"DEFAULT_ENTRY_NAME"],[142,24,158,24],[142,27,158,27],[142,38,158,38],[143,2,159,0],[143,6,159,6,"PLATFORM_LOG_STRING"],[143,25,159,25],[143,28,159,28],[144,4,160,4],[144,5,160,5,"name$q"],[144,11,160,11],[144,14,160,14],[144,25,160,25],[145,4,161,4],[145,5,161,5,"name$p"],[145,11,161,11],[145,14,161,14],[145,32,161,32],[146,4,162,4],[146,5,162,5,"name$n"],[146,11,162,11],[146,14,162,14],[146,30,162,30],[147,4,163,4],[147,5,163,5,"name$o"],[147,11,163,11],[147,14,163,14],[147,37,163,37],[148,4,164,4],[148,5,164,5,"name$l"],[148,11,164,11],[148,14,164,14],[148,30,164,30],[149,4,165,4],[149,5,165,5,"name$m"],[149,11,165,11],[149,14,165,14],[149,37,165,37],[150,4,166,4],[150,5,166,5,"name$k"],[150,11,166,11],[150,14,166,14],[150,25,166,25],[151,4,167,4],[151,5,167,5,"name$j"],[151,11,167,11],[151,14,167,14],[151,32,167,32],[152,4,168,4],[152,5,168,5,"name$i"],[152,11,168,11],[152,14,168,14],[152,25,168,25],[153,4,169,4],[153,5,169,5,"name$h"],[153,11,169,11],[153,14,169,14],[153,33,169,33],[154,4,170,4],[154,5,170,5,"name$g"],[154,11,170,11],[154,14,170,14],[154,32,170,32],[155,4,171,4],[155,5,171,5,"name$f"],[155,11,171,11],[155,14,171,14],[155,23,171,23],[156,4,172,4],[156,5,172,5,"name$e"],[156,11,172,11],[156,14,172,14],[156,30,172,30],[157,4,173,4],[157,5,173,5,"name$d"],[157,11,173,11],[157,14,173,14],[157,24,173,24],[158,4,174,4],[158,5,174,5,"name$c"],[158,11,174,11],[158,14,174,14],[158,31,174,31],[159,4,175,4],[159,5,175,5,"name$b"],[159,11,175,11],[159,14,175,14],[159,24,175,24],[160,4,176,4],[160,5,176,5,"name$a"],[160,11,176,11],[160,14,176,14],[160,31,176,31],[161,4,177,4],[161,5,177,5,"name$9"],[161,11,177,11],[161,14,177,14],[161,25,177,25],[162,4,178,4],[162,5,178,5,"name$8"],[162,11,178,11],[162,14,178,14],[162,32,178,32],[163,4,179,4],[163,5,179,5,"name$7"],[163,11,179,11],[163,14,179,14],[163,23,179,23],[164,4,180,4],[164,5,180,5,"name$6"],[164,11,180,11],[164,14,180,14],[164,30,180,30],[165,4,181,4],[165,5,181,5,"name$5"],[165,11,181,11],[165,14,181,14],[165,24,181,24],[166,4,182,4],[166,5,182,5,"name$4"],[166,11,182,11],[166,14,182,14],[166,31,182,31],[167,4,183,4],[167,5,183,5,"name$3"],[167,11,183,11],[167,14,183,14],[167,24,183,24],[168,4,184,4],[168,5,184,5,"name$1"],[168,11,184,11],[168,14,184,14],[168,31,184,31],[169,4,185,4],[169,5,185,5,"name$2"],[169,11,185,11],[169,14,185,14],[169,27,185,27],[170,4,186,4],[170,13,186,13],[170,15,186,15],[170,24,186,24],[171,4,186,26],[172,4,187,4],[172,5,187,5,"name"],[172,9,187,9],[172,12,187,12],[173,2,188,0],[173,3,188,1],[175,2,190,0],[176,0,191,0],[177,0,192,0],[178,0,193,0],[179,0,194,0],[180,0,195,0],[181,0,196,0],[182,0,197,0],[183,0,198,0],[184,0,199,0],[185,0,200,0],[186,0,201,0],[187,0,202,0],[188,0,203,0],[189,0,204,0],[190,0,205,0],[191,2,206,0],[192,0,207,0],[193,0,208,0],[194,2,209,0],[194,6,209,6,"_apps"],[194,11,209,11],[194,14,209,14],[194,18,209,18,"Map"],[194,21,209,21],[194,22,209,22],[194,23,209,23],[195,2,210,0],[196,0,211,0],[197,0,212,0],[198,2,213,0],[198,6,213,6,"_serverApps"],[198,17,213,17],[198,20,213,20],[198,24,213,24,"Map"],[198,27,213,27],[198,28,213,28],[198,29,213,29],[199,2,214,0],[200,0,215,0],[201,0,216,0],[202,0,217,0],[203,0,218,0],[204,2,219,0],[205,2,220,0],[205,6,220,6,"_components"],[205,17,220,17],[205,20,220,20],[205,24,220,24,"Map"],[205,27,220,27],[205,28,220,28],[205,29,220,29],[206,2,221,0],[207,0,222,0],[208,0,223,0],[209,0,224,0],[210,0,225,0],[211,2,226,0],[211,11,226,9,"_addComponent"],[211,24,226,22,"_addComponent"],[211,25,226,23,"app"],[211,28,226,26],[211,30,226,28,"component"],[211,39,226,37],[211,41,226,39],[212,4,227,4],[212,8,227,8],[213,6,228,8,"app"],[213,9,228,11],[213,10,228,12,"container"],[213,19,228,21],[213,20,228,22,"addComponent"],[213,32,228,34],[213,33,228,35,"component"],[213,42,228,44],[213,43,228,45],[214,4,229,4],[214,5,229,5],[214,6,230,4],[214,13,230,11,"e"],[214,14,230,12],[214,16,230,14],[215,6,231,8,"logger"],[215,12,231,14],[215,13,231,15,"debug"],[215,18,231,20],[215,19,231,21],[215,32,231,34,"component"],[215,41,231,43],[215,42,231,44,"name"],[215,46,231,48],[215,86,231,88,"app"],[215,89,231,91],[215,90,231,92,"name"],[215,94,231,96],[215,96,231,98],[215,98,231,100,"e"],[215,99,231,101],[215,100,231,102],[216,4,232,4],[217,2,233,0],[218,2,234,0],[219,0,235,0],[220,0,236,0],[221,0,237,0],[222,2,238,0],[222,11,238,9,"_addOrOverwriteComponent"],[222,35,238,33,"_addOrOverwriteComponent"],[222,36,238,34,"app"],[222,39,238,37],[222,41,238,39,"component"],[222,50,238,48],[222,52,238,50],[223,4,239,4,"app"],[223,7,239,7],[223,8,239,8,"container"],[223,17,239,17],[223,18,239,18,"addOrOverwriteComponent"],[223,41,239,41],[223,42,239,42,"component"],[223,51,239,51],[223,52,239,52],[224,2,240,0],[225,2,241,0],[226,0,242,0],[227,0,243,0],[228,0,244,0],[229,0,245,0],[230,0,246,0],[231,0,247,0],[232,2,248,0],[232,11,248,9,"_registerComponent"],[232,29,248,27,"_registerComponent"],[232,30,248,28,"component"],[232,39,248,37],[232,41,248,39],[233,4,249,4],[233,8,249,10,"componentName"],[233,21,249,23],[233,24,249,26,"component"],[233,33,249,35],[233,34,249,36,"name"],[233,38,249,40],[234,4,250,4],[234,8,250,8,"_components"],[234,19,250,19],[234,20,250,20,"has"],[234,23,250,23],[234,24,250,24,"componentName"],[234,37,250,37],[234,38,250,38],[234,40,250,40],[235,6,251,8,"logger"],[235,12,251,14],[235,13,251,15,"debug"],[235,18,251,20],[235,19,251,21],[235,73,251,75,"componentName"],[235,86,251,88],[235,89,251,91],[235,90,251,92],[236,6,252,8],[236,13,252,15],[236,18,252,20],[237,4,253,4],[238,4,254,4,"_components"],[238,15,254,15],[238,16,254,16,"set"],[238,19,254,19],[238,20,254,20,"componentName"],[238,33,254,33],[238,35,254,35,"component"],[238,44,254,44],[238,45,254,45],[239,4,255,4],[240,4,256,4],[240,9,256,9],[240,13,256,15,"app"],[240,16,256,18],[240,20,256,22,"_apps"],[240,25,256,27],[240,26,256,28,"values"],[240,32,256,34],[240,33,256,35],[240,34,256,36],[240,36,256,38],[241,6,257,8,"_addComponent"],[241,19,257,21],[241,20,257,22,"app"],[241,23,257,25],[241,25,257,27,"component"],[241,34,257,36],[241,35,257,37],[242,4,258,4],[243,4,259,4],[243,9,259,9],[243,13,259,15,"serverApp"],[243,22,259,24],[243,26,259,28,"_serverApps"],[243,37,259,39],[243,38,259,40,"values"],[243,44,259,46],[243,45,259,47],[243,46,259,48],[243,48,259,50],[244,6,260,8,"_addComponent"],[244,19,260,21],[244,20,260,22,"serverApp"],[244,29,260,31],[244,31,260,33,"component"],[244,40,260,42],[244,41,260,43],[245,4,261,4],[246,4,262,4],[246,11,262,11],[246,15,262,15],[247,2,263,0],[248,2,264,0],[249,0,265,0],[250,0,266,0],[251,0,267,0],[252,0,268,0],[253,0,269,0],[254,0,270,0],[255,0,271,0],[256,0,272,0],[257,2,273,0],[257,11,273,9,"_getProvider"],[257,23,273,21,"_getProvider"],[257,24,273,22,"app"],[257,27,273,25],[257,29,273,27,"name"],[257,33,273,31],[257,35,273,33],[258,4,274,4],[258,8,274,10,"heartbeatController"],[258,27,274,29],[258,30,274,32,"app"],[258,33,274,35],[258,34,274,36,"container"],[258,43,274,45],[258,44,275,9,"getProvider"],[258,55,275,20],[258,56,275,21],[258,67,275,32],[258,68,275,33],[258,69,276,9,"getImmediate"],[258,81,276,21],[258,82,276,22],[259,6,276,24,"optional"],[259,14,276,32],[259,16,276,34],[260,4,276,39],[260,5,276,40],[260,6,276,41],[261,4,277,4],[261,8,277,8,"heartbeatController"],[261,27,277,27],[261,29,277,29],[262,6,278,8],[262,11,278,13,"heartbeatController"],[262,30,278,32],[262,31,278,33,"triggerHeartbeat"],[262,47,278,49],[262,48,278,50],[262,49,278,51],[263,4,279,4],[264,4,280,4],[264,11,280,11,"app"],[264,14,280,14],[264,15,280,15,"container"],[264,24,280,24],[264,25,280,25,"getProvider"],[264,36,280,36],[264,37,280,37,"name"],[264,41,280,41],[264,42,280,42],[265,2,281,0],[266,2,282,0],[267,0,283,0],[268,0,284,0],[269,0,285,0],[270,0,286,0],[271,0,287,0],[272,0,288,0],[273,0,289,0],[274,2,290,0],[274,11,290,9,"_removeServiceInstance"],[274,33,290,31,"_removeServiceInstance"],[274,34,290,32,"app"],[274,37,290,35],[274,39,290,37,"name"],[274,43,290,41],[274,45,290,84],[275,4,290,84],[275,8,290,43,"instanceIdentifier"],[275,26,290,61],[275,29,290,61,"arguments"],[275,38,290,61],[275,39,290,61,"length"],[275,45,290,61],[275,53,290,61,"arguments"],[275,62,290,61],[275,70,290,61,"undefined"],[275,79,290,61],[275,82,290,61,"arguments"],[275,91,290,61],[275,97,290,64,"DEFAULT_ENTRY_NAME"],[275,115,290,82],[276,4,291,4,"_getProvider"],[276,16,291,16],[276,17,291,17,"app"],[276,20,291,20],[276,22,291,22,"name"],[276,26,291,26],[276,27,291,27],[276,28,291,28,"clearInstance"],[276,41,291,41],[276,42,291,42,"instanceIdentifier"],[276,60,291,60],[276,61,291,61],[277,2,292,0],[278,2,293,0],[279,0,294,0],[280,0,295,0],[281,0,296,0],[282,0,297,0],[283,0,298,0],[284,0,299,0],[285,0,300,0],[286,2,301,0],[286,11,301,9,"_isFirebaseApp"],[286,25,301,23,"_isFirebaseApp"],[286,26,301,24,"obj"],[286,29,301,27],[286,31,301,29],[287,4,302,4],[287,11,302,11,"obj"],[287,14,302,14],[287,15,302,15,"options"],[287,22,302,22],[287,27,302,27,"undefined"],[287,36,302,36],[288,2,303,0],[289,2,304,0],[290,0,305,0],[291,0,306,0],[292,0,307,0],[293,0,308,0],[294,0,309,0],[295,0,310,0],[296,0,311,0],[297,2,312,0],[297,11,312,9,"_isFirebaseServerAppSettings"],[297,39,312,37,"_isFirebaseServerAppSettings"],[297,40,312,38,"obj"],[297,43,312,41],[297,45,312,43],[298,4,313,4],[298,8,313,8,"_isFirebaseApp"],[298,22,313,22],[298,23,313,23,"obj"],[298,26,313,26],[298,27,313,27],[298,29,313,29],[299,6,314,8],[299,13,314,15],[299,18,314,20],[300,4,315,4],[301,4,316,4],[301,11,316,12],[301,24,316,25],[301,28,316,29,"obj"],[301,31,316,32],[301,35,317,8],[301,50,317,23],[301,54,317,27,"obj"],[301,57,317,30],[301,61,318,8],[301,77,318,24],[301,81,318,28,"obj"],[301,84,318,31],[301,88,319,8],[301,120,319,40],[301,124,319,44,"obj"],[301,127,319,47],[302,2,320,0],[303,2,321,0],[304,0,322,0],[305,0,323,0],[306,0,324,0],[307,0,325,0],[308,0,326,0],[309,0,327,0],[310,0,328,0],[311,2,329,0],[311,11,329,9,"_isFirebaseServerApp"],[311,31,329,29,"_isFirebaseServerApp"],[311,32,329,30,"obj"],[311,35,329,33],[311,37,329,35],[312,4,330,4],[312,8,330,8,"obj"],[312,11,330,11],[312,16,330,16],[312,20,330,20],[312,24,330,24,"obj"],[312,27,330,27],[312,32,330,32,"undefined"],[312,41,330,41],[312,43,330,43],[313,6,331,8],[313,13,331,15],[313,18,331,20],[314,4,332,4],[315,4,333,4],[315,11,333,11,"obj"],[315,14,333,14],[315,15,333,15,"settings"],[315,23,333,23],[315,28,333,28,"undefined"],[315,37,333,37],[316,2,334,0],[317,2,335,0],[318,0,336,0],[319,0,337,0],[320,0,338,0],[321,0,339,0],[322,2,340,0],[322,11,340,9,"_clearComponents"],[322,27,340,25,"_clearComponents"],[322,28,340,25],[322,30,340,28],[323,4,341,4,"_components"],[323,15,341,15],[323,16,341,16,"clear"],[323,21,341,21],[323,22,341,22],[323,23,341,23],[324,2,342,0],[326,2,344,0],[327,0,345,0],[328,0,346,0],[329,0,347,0],[330,0,348,0],[331,0,349,0],[332,0,350,0],[333,0,351,0],[334,0,352,0],[335,0,353,0],[336,0,354,0],[337,0,355,0],[338,0,356,0],[339,0,357,0],[340,0,358,0],[341,0,359,0],[342,2,360,0],[342,6,360,6,"ERRORS"],[342,12,360,12],[342,15,360,15],[343,4,361,4],[343,5,361,5],[343,13,361,13],[343,14,361,14],[343,38,361,38],[343,88,361,88],[343,91,362,8],[343,119,362,36],[344,4,363,4],[344,5,363,5],[344,19,363,19],[344,20,363,20],[344,50,363,50],[344,82,363,82],[345,4,364,4],[345,5,364,5],[345,20,364,20],[345,21,364,21],[345,52,364,52],[345,133,364,133],[346,4,365,4],[346,5,365,5],[346,18,365,18],[346,19,365,19],[346,48,365,48],[346,97,365,97],[347,4,366,4],[347,5,366,5],[347,25,366,25],[347,26,366,26],[347,62,366,62],[347,100,366,100],[348,4,367,4],[348,5,367,5],[348,17,367,17],[348,18,367,18],[348,46,367,46],[348,119,367,119],[349,4,368,4],[349,5,368,5],[349,27,368,27],[349,28,368,28],[349,66,368,66],[349,120,368,120],[349,123,369,8],[349,147,369,32],[350,4,370,4],[350,5,370,5],[350,27,370,27],[350,28,370,28],[350,66,370,66],[350,121,370,121],[351,4,371,4],[351,5,371,5],[351,15,371,15],[351,16,371,16],[351,42,371,42],[351,121,371,121],[352,4,372,4],[352,5,372,5],[352,14,372,14],[352,15,372,15],[352,40,372,40],[352,124,372,124],[353,4,373,4],[353,5,373,5],[353,14,373,14],[353,15,373,15],[353,42,373,42],[353,124,373,124],[354,4,374,4],[354,5,374,5],[354,17,374,17],[354,18,374,18],[354,46,374,46],[354,131,374,131],[355,4,375,4],[355,5,375,5],[355,42,375,42],[355,43,375,43],[355,96,375,96],[355,201,375,201],[356,4,376,4],[356,5,376,5],[356,37,376,37],[356,38,376,38],[356,86,376,86],[357,2,377,0],[357,3,377,1],[358,2,378,0],[358,6,378,6,"ERROR_FACTORY"],[358,19,378,19],[358,22,378,22],[358,26,378,26,"util"],[358,30,378,30],[358,31,378,31,"ErrorFactory"],[358,43,378,43],[358,44,378,44],[358,49,378,49],[358,51,378,51],[358,61,378,61],[358,63,378,63,"ERRORS"],[358,69,378,69],[358,70,378,70],[360,2,380,0],[361,0,381,0],[362,0,382,0],[363,0,383,0],[364,0,384,0],[365,0,385,0],[366,0,386,0],[367,0,387,0],[368,0,388,0],[369,0,389,0],[370,0,390,0],[371,0,391,0],[372,0,392,0],[373,0,393,0],[374,0,394,0],[375,0,395,0],[376,2,380,0],[376,6,396,6,"FirebaseAppImpl"],[376,21,396,21],[377,4,397,4],[377,13,397,4,"FirebaseAppImpl"],[377,29,397,16,"options"],[377,36,397,23],[377,38,397,25,"config"],[377,44,397,31],[377,46,397,33,"container"],[377,55,397,42],[377,57,397,44],[378,6,397,44,"_classCallCheck"],[378,21,397,44],[378,28,397,44,"FirebaseAppImpl"],[378,43,397,44],[379,6,398,8],[379,10,398,12],[379,11,398,13,"_isDeleted"],[379,21,398,23],[379,24,398,26],[379,29,398,31],[380,6,399,8],[380,10,399,12],[380,11,399,13,"_options"],[380,19,399,21],[380,22,399,24],[381,8,399,26],[381,11,399,29,"options"],[382,6,399,37],[382,7,399,38],[383,6,400,8],[383,10,400,12],[383,11,400,13,"_config"],[383,18,400,20],[383,21,400,23],[384,8,400,25],[384,11,400,28,"config"],[385,6,400,35],[385,7,400,36],[386,6,401,8],[386,10,401,12],[386,11,401,13,"_name"],[386,16,401,18],[386,19,401,21,"config"],[386,25,401,27],[386,26,401,28,"name"],[386,30,401,32],[387,6,402,8],[387,10,402,12],[387,11,402,13,"_automaticDataCollectionEnabled"],[387,42,402,44],[387,45,403,12,"config"],[387,51,403,18],[387,52,403,19,"automaticDataCollectionEnabled"],[387,82,403,49],[388,6,404,8],[388,10,404,12],[388,11,404,13,"_container"],[388,21,404,23],[388,24,404,26,"container"],[388,33,404,35],[389,6,405,8],[389,10,405,12],[389,11,405,13,"container"],[389,20,405,22],[389,21,405,23,"addComponent"],[389,33,405,35],[389,34,405,36],[389,38,405,40,"component"],[389,47,405,49],[389,48,405,50,"Component"],[389,57,405,59],[389,58,405,60],[389,63,405,65],[389,65,405,67],[389,71,405,73],[389,75,405,77],[389,77,405,79],[389,85,405,87],[389,86,405,88],[389,112,405,114],[389,113,405,115],[389,114,405,116],[390,4,406,4],[391,4,406,5],[391,11,406,5,"_createClass"],[391,23,406,5],[391,24,406,5,"FirebaseAppImpl"],[391,39,406,5],[392,6,406,5,"key"],[392,9,406,5],[393,6,406,5,"get"],[393,9,406,5],[393,11,407,4],[393,20,407,4,"get"],[393,21,407,4],[393,23,407,41],[394,8,408,8],[394,12,408,12],[394,13,408,13,"checkDestroyed"],[394,27,408,27],[394,28,408,28],[394,29,408,29],[395,8,409,8],[395,15,409,15],[395,19,409,19],[395,20,409,20,"_automaticDataCollectionEnabled"],[395,51,409,51],[396,6,410,4],[396,7,410,5],[397,6,410,5,"set"],[397,9,410,5],[397,11,411,4],[397,20,411,4,"set"],[397,21,411,39,"val"],[397,24,411,42],[397,26,411,44],[398,8,412,8],[398,12,412,12],[398,13,412,13,"checkDestroyed"],[398,27,412,27],[398,28,412,28],[398,29,412,29],[399,8,413,8],[399,12,413,12],[399,13,413,13,"_automaticDataCollectionEnabled"],[399,44,413,44],[399,47,413,47,"val"],[399,50,413,50],[400,6,414,4],[401,4,414,5],[402,6,414,5,"key"],[402,9,414,5],[403,6,414,5,"get"],[403,9,414,5],[403,11,415,4],[403,20,415,4,"get"],[403,21,415,4],[403,23,415,15],[404,8,416,8],[404,12,416,12],[404,13,416,13,"checkDestroyed"],[404,27,416,27],[404,28,416,28],[404,29,416,29],[405,8,417,8],[405,15,417,15],[405,19,417,19],[405,20,417,20,"_name"],[405,25,417,25],[406,6,418,4],[407,4,418,5],[408,6,418,5,"key"],[408,9,418,5],[409,6,418,5,"get"],[409,9,418,5],[409,11,419,4],[409,20,419,4,"get"],[409,21,419,4],[409,23,419,18],[410,8,420,8],[410,12,420,12],[410,13,420,13,"checkDestroyed"],[410,27,420,27],[410,28,420,28],[410,29,420,29],[411,8,421,8],[411,15,421,15],[411,19,421,19],[411,20,421,20,"_options"],[411,28,421,28],[412,6,422,4],[413,4,422,5],[414,6,422,5,"key"],[414,9,422,5],[415,6,422,5,"get"],[415,9,422,5],[415,11,423,4],[415,20,423,4,"get"],[415,21,423,4],[415,23,423,17],[416,8,424,8],[416,12,424,12],[416,13,424,13,"checkDestroyed"],[416,27,424,27],[416,28,424,28],[416,29,424,29],[417,8,425,8],[417,15,425,15],[417,19,425,19],[417,20,425,20,"_config"],[417,27,425,27],[418,6,426,4],[419,4,426,5],[420,6,426,5,"key"],[420,9,426,5],[421,6,426,5,"get"],[421,9,426,5],[421,11,427,4],[421,20,427,4,"get"],[421,21,427,4],[421,23,427,20],[422,8,428,8],[422,15,428,15],[422,19,428,19],[422,20,428,20,"_container"],[422,30,428,30],[423,6,429,4],[424,4,429,5],[425,6,429,5,"key"],[425,9,429,5],[426,6,429,5,"get"],[426,9,429,5],[426,11,430,4],[426,20,430,4,"get"],[426,21,430,4],[426,23,430,20],[427,8,431,8],[427,15,431,15],[427,19,431,19],[427,20,431,20,"_isDeleted"],[427,30,431,30],[428,6,432,4],[428,7,432,5],[429,6,432,5,"set"],[429,9,432,5],[429,11,433,4],[429,20,433,4,"set"],[429,21,433,18,"val"],[429,24,433,21],[429,26,433,23],[430,8,434,8],[430,12,434,12],[430,13,434,13,"_isDeleted"],[430,23,434,23],[430,26,434,26,"val"],[430,29,434,29],[431,6,435,4],[432,6,436,4],[433,0,437,0],[434,0,438,0],[435,0,439,0],[436,4,436,4],[437,6,436,4,"key"],[437,9,436,4],[438,6,436,4,"value"],[438,11,436,4],[438,13,440,4],[438,22,440,4,"checkDestroyed"],[438,36,440,18,"checkDestroyed"],[438,37,440,18],[438,39,440,21],[439,8,441,8],[439,12,441,12],[439,16,441,16],[439,17,441,17,"isDeleted"],[439,26,441,26],[439,28,441,28],[440,10,442,12],[440,16,442,18,"ERROR_FACTORY"],[440,29,442,31],[440,30,442,32,"create"],[440,36,442,38],[440,37,442,39],[440,50,442,52],[440,51,442,53],[440,79,442,81],[441,12,442,83,"appName"],[441,19,442,90],[441,21,442,92],[441,25,442,96],[441,26,442,97,"_name"],[442,10,442,103],[442,11,442,104],[442,12,442,105],[443,8,443,8],[444,6,444,4],[445,4,444,5],[446,2,444,5],[447,2,447,0],[448,0,448,0],[449,0,449,0],[450,0,450,0],[451,0,451,0],[452,0,452,0],[453,0,453,0],[454,0,454,0],[455,0,455,0],[456,0,456,0],[457,0,457,0],[458,0,458,0],[459,0,459,0],[460,0,460,0],[461,0,461,0],[462,0,462,0],[463,2,463,0],[464,2,464,0],[465,2,465,0],[466,2,466,0],[466,11,466,9,"validateTokenTTL"],[466,27,466,25,"validateTokenTTL"],[466,28,466,26,"base64Token"],[466,39,466,37],[466,41,466,39,"tokenName"],[466,50,466,48],[466,52,466,50],[467,4,467,4],[467,8,467,10,"secondPart"],[467,18,467,20],[467,21,467,23,"util"],[467,25,467,27],[467,26,467,28,"base64Decode"],[467,38,467,40],[467,39,467,41,"base64Token"],[467,50,467,52],[467,51,467,53,"split"],[467,56,467,58],[467,57,467,59],[467,60,467,62],[467,61,467,63],[467,62,467,64],[467,63,467,65],[467,64,467,66],[467,65,467,67],[468,4,468,4],[468,8,468,8,"secondPart"],[468,18,468,18],[468,23,468,23],[468,27,468,27],[468,29,468,29],[469,6,469,8,"console"],[469,13,469,15],[469,14,469,16,"error"],[469,19,469,21],[469,20,469,22],[469,41,469,43,"tokenName"],[469,50,469,52],[469,97,469,99],[469,98,469,100],[470,6,470,8],[471,4,471,4],[472,4,472,4],[472,8,472,10,"expClaim"],[472,16,472,18],[472,19,472,21,"JSON"],[472,23,472,25],[472,24,472,26,"parse"],[472,29,472,31],[472,30,472,32,"secondPart"],[472,40,472,42],[472,41,472,43],[472,42,472,44,"exp"],[472,45,472,47],[473,4,473,4],[473,8,473,8,"expClaim"],[473,16,473,16],[473,21,473,21,"undefined"],[473,30,473,30],[473,32,473,32],[474,6,474,8,"console"],[474,13,474,15],[474,14,474,16,"error"],[474,19,474,21],[474,20,474,22],[474,41,474,43,"tokenName"],[474,50,474,52],[474,101,474,103],[474,102,474,104],[475,6,475,8],[476,4,476,4],[477,4,477,4],[477,8,477,10,"exp"],[477,11,477,13],[477,14,477,16,"JSON"],[477,18,477,20],[477,19,477,21,"parse"],[477,24,477,26],[477,25,477,27,"secondPart"],[477,35,477,37],[477,36,477,38],[477,37,477,39,"exp"],[477,40,477,42],[477,43,477,45],[477,47,477,49],[478,4,478,4],[478,8,478,10,"now"],[478,11,478,13],[478,14,478,16],[478,18,478,20,"Date"],[478,22,478,24],[478,23,478,25],[478,24,478,26],[478,25,478,27,"getTime"],[478,32,478,34],[478,33,478,35],[478,34,478,36],[479,4,479,4],[479,8,479,10,"diff"],[479,12,479,14],[479,15,479,17,"exp"],[479,18,479,20],[479,21,479,23,"now"],[479,24,479,26],[480,4,480,4],[480,8,480,8,"diff"],[480,12,480,12],[480,16,480,16],[480,17,480,17],[480,19,480,19],[481,6,481,8,"console"],[481,13,481,15],[481,14,481,16,"error"],[481,19,481,21],[481,20,481,22],[481,41,481,43,"tokenName"],[481,50,481,52],[481,87,481,89],[481,88,481,90],[482,4,482,4],[483,2,483,0],[484,2,483,1],[484,6,484,6,"FirebaseServerAppImpl"],[484,27,484,27],[484,53,484,27,"_FirebaseAppImpl"],[484,69,484,27],[485,4,485,4],[485,13,485,4,"FirebaseServerAppImpl"],[485,35,485,16,"options"],[485,42,485,23],[485,44,485,25,"serverConfig"],[485,56,485,37],[485,58,485,39,"name"],[485,62,485,43],[485,64,485,45,"container"],[485,73,485,54],[485,75,485,56],[486,6,485,56],[486,10,485,56,"_this"],[486,15,485,56],[487,6,485,56,"_classCallCheck"],[487,21,485,56],[487,28,485,56,"FirebaseServerAppImpl"],[487,49,485,56],[488,6,486,8],[489,6,487,8],[489,10,487,14,"automaticDataCollectionEnabled"],[489,40,487,44],[489,43,487,47,"serverConfig"],[489,55,487,59],[489,56,487,60,"automaticDataCollectionEnabled"],[489,86,487,90],[489,91,487,95,"undefined"],[489,100,487,104],[489,103,488,14,"serverConfig"],[489,115,488,26],[489,116,488,27,"automaticDataCollectionEnabled"],[489,146,488,57],[489,149,489,14],[489,153,489,18],[490,6,490,8],[491,6,491,8],[491,10,491,14,"config"],[491,16,491,20],[491,19,491,23],[492,8,492,12,"name"],[492,12,492,16],[493,8,493,12,"automaticDataCollectionEnabled"],[494,6,494,8],[494,7,494,9],[495,6,495,8],[495,10,495,12,"options"],[495,17,495,19],[495,18,495,20,"apiKey"],[495,24,495,26],[495,29,495,31,"undefined"],[495,38,495,40],[495,40,495,42],[496,8,496,12],[497,8,497,12,"_this"],[497,13,497,12],[497,16,497,12,"_callSuper"],[497,26,497,12],[497,33,497,12,"FirebaseServerAppImpl"],[497,54,497,12],[497,57,497,18,"options"],[497,64,497,25],[497,66,497,27,"config"],[497,72,497,33],[497,74,497,35,"container"],[497,83,497,44],[498,6,498,8],[498,7,498,9],[498,13,499,13],[499,8,500,12],[499,12,500,18,"appImpl"],[499,19,500,25],[499,22,500,28,"options"],[499,29,500,35],[500,8,501,12,"_this"],[500,13,501,12],[500,16,501,12,"_callSuper"],[500,26,501,12],[500,33,501,12,"FirebaseServerAppImpl"],[500,54,501,12],[500,57,501,18,"appImpl"],[500,64,501,25],[500,65,501,26,"options"],[500,72,501,33],[500,74,501,35,"config"],[500,80,501,41],[500,82,501,43,"container"],[500,91,501,52],[501,6,502,8],[502,6,503,8],[503,6,504,8,"_this"],[503,11,504,8],[503,12,504,13,"_serverConfig"],[503,25,504,26],[503,28,504,29],[504,8,505,12,"automaticDataCollectionEnabled"],[504,38,505,42],[505,8,506,12],[505,11,506,15,"serverConfig"],[506,6,507,8],[506,7,507,9],[507,6,508,8],[508,6,509,8],[508,10,509,12,"_this"],[508,15,509,12],[508,16,509,17,"_serverConfig"],[508,29,509,30],[508,30,509,31,"authIdToken"],[508,41,509,42],[508,43,509,44],[509,8,510,12,"validateTokenTTL"],[509,24,510,28],[509,25,510,29,"_this"],[509,30,510,29],[509,31,510,34,"_serverConfig"],[509,44,510,47],[509,45,510,48,"authIdToken"],[509,56,510,59],[509,58,510,61],[509,71,510,74],[509,72,510,75],[510,6,511,8],[511,6,512,8],[512,6,513,8],[512,10,513,12,"_this"],[512,15,513,12],[512,16,513,17,"_serverConfig"],[512,29,513,30],[512,30,513,31,"appCheckToken"],[512,43,513,44],[512,45,513,46],[513,8,514,12,"validateTokenTTL"],[513,24,514,28],[513,25,514,29,"_this"],[513,30,514,29],[513,31,514,34,"_serverConfig"],[513,44,514,47],[513,45,514,48,"appCheckToken"],[513,58,514,61],[513,60,514,63],[513,75,514,78],[513,76,514,79],[514,6,515,8],[515,6,516,8,"_this"],[515,11,516,8],[515,12,516,13,"_finalizationRegistry"],[515,33,516,34],[515,36,516,37],[515,40,516,41],[516,6,517,8],[516,10,517,12],[516,17,517,19,"FinalizationRegistry"],[516,37,517,39],[516,42,517,44],[516,53,517,55],[516,55,517,57],[517,8,518,12,"_this"],[517,13,518,12],[517,14,518,17,"_finalizationRegistry"],[517,35,518,38],[517,38,518,41],[517,42,518,45,"FinalizationRegistry"],[517,62,518,65],[517,63,518,66],[517,69,518,72],[518,10,519,16,"_this"],[518,15,519,16],[518,16,519,21,"automaticCleanup"],[518,32,519,37],[518,33,519,38],[518,34,519,39],[519,8,520,12],[519,9,520,13],[519,10,520,14],[520,6,521,8],[521,6,522,8,"_this"],[521,11,522,8],[521,12,522,13,"_refCount"],[521,21,522,22],[521,24,522,25],[521,25,522,26],[522,6,523,8,"_this"],[522,11,523,8],[522,12,523,13,"incRefCount"],[522,23,523,24],[522,24,523,25,"_this"],[522,29,523,25],[522,30,523,30,"_serverConfig"],[522,43,523,43],[522,44,523,44,"releaseOnDeref"],[522,58,523,58],[522,59,523,59],[523,6,524,8],[524,6,525,8],[525,6,526,8,"_this"],[525,11,526,8],[525,12,526,13,"_serverConfig"],[525,25,526,26],[525,26,526,27,"releaseOnDeref"],[525,40,526,41],[525,43,526,44,"undefined"],[525,52,526,53],[526,6,527,8,"serverConfig"],[526,18,527,20],[526,19,527,21,"releaseOnDeref"],[526,33,527,35],[526,36,527,38,"undefined"],[526,45,527,47],[527,6,528,8,"registerVersion"],[527,21,528,23],[527,22,528,24,"name$q"],[527,28,528,30],[527,30,528,32,"version$1"],[527,39,528,41],[527,41,528,43],[527,52,528,54],[527,53,528,55],[528,6,528,56],[528,13,528,56,"_assertThisInitialized"],[528,35,528,56],[528,36,528,56,"_this"],[528,41,528,56],[529,4,529,4],[530,4,529,5,"_inherits"],[530,13,529,5],[530,14,529,5,"FirebaseServerAppImpl"],[530,35,529,5],[530,37,529,5,"_FirebaseAppImpl"],[530,53,529,5],[531,4,529,5],[531,11,529,5,"_createClass"],[531,23,529,5],[531,24,529,5,"FirebaseServerAppImpl"],[531,45,529,5],[532,6,529,5,"key"],[532,9,529,5],[533,6,529,5,"value"],[533,11,529,5],[533,13,530,4],[533,22,530,4,"toJSON"],[533,28,530,10,"toJSON"],[533,29,530,10],[533,31,530,13],[534,8,531,8],[534,15,531,15,"undefined"],[534,24,531,24],[535,6,532,4],[536,4,532,5],[537,6,532,5,"key"],[537,9,532,5],[538,6,532,5,"get"],[538,9,532,5],[538,11,533,4],[538,20,533,4,"get"],[538,21,533,4],[538,23,533,19],[539,8,534,8],[539,15,534,15],[539,19,534,19],[539,20,534,20,"_refCount"],[539,29,534,29],[540,6,535,4],[541,6,536,4],[542,6,537,4],[543,4,537,4],[544,6,537,4,"key"],[544,9,537,4],[545,6,537,4,"value"],[545,11,537,4],[545,13,538,4],[545,22,538,4,"incRefCount"],[545,33,538,15,"incRefCount"],[545,34,538,16,"obj"],[545,37,538,19],[545,39,538,21],[546,8,539,8],[546,12,539,12],[546,16,539,16],[546,17,539,17,"isDeleted"],[546,26,539,26],[546,28,539,28],[547,10,540,12],[548,8,541,8],[549,8,542,8],[549,12,542,12],[549,13,542,13,"_refCount"],[549,22,542,22],[549,24,542,24],[550,8,543,8],[550,12,543,12,"obj"],[550,15,543,15],[550,20,543,20,"undefined"],[550,29,543,29],[550,33,543,33],[550,37,543,37],[550,38,543,38,"_finalizationRegistry"],[550,59,543,59],[550,64,543,64],[550,68,543,68],[550,70,543,70],[551,10,544,12],[551,14,544,16],[551,15,544,17,"_finalizationRegistry"],[551,36,544,38],[551,37,544,39,"register"],[551,45,544,47],[551,46,544,48,"obj"],[551,49,544,51],[551,51,544,53],[551,55,544,57],[551,56,544,58],[552,8,545,8],[553,6,546,4],[554,6,547,4],[555,4,547,4],[556,6,547,4,"key"],[556,9,547,4],[557,6,547,4,"value"],[557,11,547,4],[557,13,548,4],[557,22,548,4,"decRefCount"],[557,33,548,15,"decRefCount"],[557,34,548,15],[557,36,548,18],[558,8,549,8],[558,12,549,12],[558,16,549,16],[558,17,549,17,"isDeleted"],[558,26,549,26],[558,28,549,28],[559,10,550,12],[559,17,550,19],[559,18,550,20],[560,8,551,8],[561,8,552,8],[561,15,552,15],[561,17,552,17],[561,21,552,21],[561,22,552,22,"_refCount"],[561,31,552,31],[562,6,553,4],[563,6,554,4],[564,6,555,4],[565,6,556,4],[566,4,556,4],[567,6,556,4,"key"],[567,9,556,4],[568,6,556,4,"value"],[568,11,556,4],[568,13,557,4],[568,22,557,4,"automaticCleanup"],[568,38,557,20,"automaticCleanup"],[568,39,557,20],[568,41,557,23],[569,8,558,8],[569,13,558,13,"deleteApp"],[569,22,558,22],[569,23,558,23],[569,27,558,27],[569,28,558,28],[570,6,559,4],[571,4,559,5],[572,6,559,5,"key"],[572,9,559,5],[573,6,559,5,"get"],[573,9,559,5],[573,11,560,4],[573,20,560,4,"get"],[573,21,560,4],[573,23,560,19],[574,8,561,8],[574,12,561,12],[574,13,561,13,"checkDestroyed"],[574,27,561,27],[574,28,561,28],[574,29,561,29],[575,8,562,8],[575,15,562,15],[575,19,562,19],[575,20,562,20,"_serverConfig"],[575,33,562,33],[576,6,563,4],[577,6,564,4],[578,0,565,0],[579,0,566,0],[580,0,567,0],[581,4,564,4],[582,6,564,4,"key"],[582,9,564,4],[583,6,564,4,"value"],[583,11,564,4],[583,13,568,4],[583,22,568,4,"checkDestroyed"],[583,36,568,18,"checkDestroyed"],[583,37,568,18],[583,39,568,21],[584,8,569,8],[584,12,569,12],[584,16,569,16],[584,17,569,17,"isDeleted"],[584,26,569,26],[584,28,569,28],[585,10,570,12],[585,16,570,18,"ERROR_FACTORY"],[585,29,570,31],[585,30,570,32,"create"],[585,36,570,38],[585,37,570,39],[585,57,570,59],[585,58,570,60],[585,91,570,93],[585,92,570,94],[586,8,571,8],[587,6,572,4],[588,4,572,5],[589,2,572,5],[589,4,484,36,"FirebaseAppImpl"],[589,19,484,51],[590,2,575,0],[591,0,576,0],[592,0,577,0],[593,0,578,0],[594,0,579,0],[595,0,580,0],[596,0,581,0],[597,0,582,0],[598,0,583,0],[599,0,584,0],[600,0,585,0],[601,0,586,0],[602,0,587,0],[603,0,588,0],[604,0,589,0],[605,0,590,0],[606,2,591,0],[607,0,592,0],[608,0,593,0],[609,0,594,0],[610,0,595,0],[611,2,596,0],[611,6,596,6,"SDK_VERSION"],[611,17,596,17],[611,20,596,20,"version"],[611,27,596,27],[612,2,597,0],[612,11,597,9,"initializeApp"],[612,24,597,22,"initializeApp"],[612,25,597,23,"_options"],[612,33,597,31],[612,35,597,49],[613,4,597,49],[613,8,597,33,"rawConfig"],[613,17,597,42],[613,20,597,42,"arguments"],[613,29,597,42],[613,30,597,42,"length"],[613,36,597,42],[613,44,597,42,"arguments"],[613,53,597,42],[613,61,597,42,"undefined"],[613,70,597,42],[613,73,597,42,"arguments"],[613,82,597,42],[613,88,597,45],[613,89,597,46],[613,90,597,47],[614,4,598,4],[614,8,598,8,"options"],[614,15,598,15],[614,18,598,18,"_options"],[614,26,598,26],[615,4,599,4],[615,8,599,8],[615,15,599,15,"rawConfig"],[615,24,599,24],[615,29,599,29],[615,37,599,37],[615,39,599,39],[616,6,600,8],[616,10,600,14,"name"],[616,15,600,18],[616,18,600,21,"rawConfig"],[616,27,600,30],[617,6,601,8,"rawConfig"],[617,15,601,17],[617,18,601,20],[618,8,601,22,"name"],[618,12,601,26],[618,14,601,22,"name"],[619,6,601,27],[619,7,601,28],[620,4,602,4],[621,4,603,4],[621,8,603,10,"config"],[621,14,603,16],[621,17,603,19],[622,6,604,8,"name"],[622,10,604,12],[622,12,604,14,"DEFAULT_ENTRY_NAME"],[622,30,604,32],[623,6,605,8,"automaticDataCollectionEnabled"],[623,36,605,38],[623,38,605,40],[623,42,605,44],[624,6,606,8],[624,9,606,11,"rawConfig"],[625,4,607,4],[625,5,607,5],[626,4,608,4],[626,8,608,10,"name"],[626,12,608,14],[626,15,608,17,"config"],[626,21,608,23],[626,22,608,24,"name"],[626,26,608,28],[627,4,609,4],[627,8,609,8],[627,15,609,15,"name"],[627,19,609,19],[627,24,609,24],[627,32,609,32],[627,36,609,36],[627,37,609,37,"name"],[627,41,609,41],[627,43,609,43],[628,6,610,8],[628,12,610,14,"ERROR_FACTORY"],[628,25,610,27],[628,26,610,28,"create"],[628,32,610,34],[628,33,610,35],[628,47,610,49],[628,48,610,50],[628,77,610,79],[629,8,611,12,"appName"],[629,15,611,19],[629,17,611,21,"String"],[629,23,611,27],[629,24,611,28,"name"],[629,28,611,32],[630,6,612,8],[630,7,612,9],[630,8,612,10],[631,4,613,4],[632,4,614,4,"options"],[632,11,614,11],[632,16,614,16,"options"],[632,23,614,23],[632,26,614,26,"util"],[632,30,614,30],[632,31,614,31,"getDefaultAppConfig"],[632,50,614,50],[632,51,614,51],[632,52,614,52],[632,53,614,53],[633,4,615,4],[633,8,615,8],[633,9,615,9,"options"],[633,16,615,16],[633,18,615,18],[634,6,616,8],[634,12,616,14,"ERROR_FACTORY"],[634,25,616,27],[634,26,616,28,"create"],[634,32,616,34],[634,33,616,35],[634,45,616,47],[634,46,616,48],[634,71,616,73],[634,72,616,74],[635,4,617,4],[636,4,618,4],[636,8,618,10,"existingApp"],[636,19,618,21],[636,22,618,24,"_apps"],[636,27,618,29],[636,28,618,30,"get"],[636,31,618,33],[636,32,618,34,"name"],[636,36,618,38],[636,37,618,39],[637,4,619,4],[637,8,619,8,"existingApp"],[637,19,619,19],[637,21,619,21],[638,6,620,8],[639,6,621,8],[639,10,621,12,"util"],[639,14,621,16],[639,15,621,17,"deepEqual"],[639,24,621,26],[639,25,621,27,"options"],[639,32,621,34],[639,34,621,36,"existingApp"],[639,45,621,47],[639,46,621,48,"options"],[639,53,621,55],[639,54,621,56],[639,58,622,12,"util"],[639,62,622,16],[639,63,622,17,"deepEqual"],[639,72,622,26],[639,73,622,27,"config"],[639,79,622,33],[639,81,622,35,"existingApp"],[639,92,622,46],[639,93,622,47,"config"],[639,99,622,53],[639,100,622,54],[639,102,622,56],[640,8,623,12],[640,15,623,19,"existingApp"],[640,26,623,30],[641,6,624,8],[641,7,624,9],[641,13,625,13],[642,8,626,12],[642,14,626,18,"ERROR_FACTORY"],[642,27,626,31],[642,28,626,32,"create"],[642,34,626,38],[642,35,626,39],[642,50,626,54],[642,51,626,55],[642,81,626,85],[643,10,626,87,"appName"],[643,17,626,94],[643,19,626,96,"name"],[644,8,626,101],[644,9,626,102],[644,10,626,103],[645,6,627,8],[646,4,628,4],[647,4,629,4],[647,8,629,10,"container"],[647,17,629,19],[647,20,629,22],[647,24,629,26,"component"],[647,33,629,35],[647,34,629,36,"ComponentContainer"],[647,52,629,54],[647,53,629,55,"name"],[647,57,629,59],[647,58,629,60],[648,4,630,4],[648,9,630,9],[648,13,630,15,"component"],[648,23,630,24],[648,27,630,28,"_components"],[648,38,630,39],[648,39,630,40,"values"],[648,45,630,46],[648,46,630,47],[648,47,630,48],[648,49,630,50],[649,6,631,8,"container"],[649,15,631,17],[649,16,631,18,"addComponent"],[649,28,631,30],[649,29,631,31,"component"],[649,39,631,40],[649,40,631,41],[650,4,632,4],[651,4,633,4],[651,8,633,10,"newApp"],[651,14,633,16],[651,17,633,19],[651,21,633,23,"FirebaseAppImpl"],[651,36,633,38],[651,37,633,39,"options"],[651,44,633,46],[651,46,633,48,"config"],[651,52,633,54],[651,54,633,56,"container"],[651,63,633,65],[651,64,633,66],[652,4,634,4,"_apps"],[652,9,634,9],[652,10,634,10,"set"],[652,13,634,13],[652,14,634,14,"name"],[652,18,634,18],[652,20,634,20,"newApp"],[652,26,634,26],[652,27,634,27],[653,4,635,4],[653,11,635,11,"newApp"],[653,17,635,17],[654,2,636,0],[655,2,637,0],[655,11,637,9,"initializeServerApp"],[655,30,637,28,"initializeServerApp"],[655,31,637,29,"_options"],[655,39,637,37],[655,41,637,62],[656,4,637,62],[656,8,637,39,"_serverAppConfig"],[656,24,637,55],[656,27,637,55,"arguments"],[656,36,637,55],[656,37,637,55,"length"],[656,43,637,55],[656,51,637,55,"arguments"],[656,60,637,55],[656,68,637,55,"undefined"],[656,77,637,55],[656,80,637,55,"arguments"],[656,89,637,55],[656,95,637,58],[656,96,637,59],[656,97,637,60],[657,4,638,4],[657,8,638,8,"util"],[657,12,638,12],[657,13,638,13,"isBrowser"],[657,22,638,22],[657,23,638,23],[657,24,638,24],[657,28,638,28],[657,29,638,29,"util"],[657,33,638,33],[657,34,638,34,"isWebWorker"],[657,45,638,45],[657,46,638,46],[657,47,638,47],[657,49,638,49],[658,6,639,8],[659,6,640,8],[659,12,640,14,"ERROR_FACTORY"],[659,25,640,27],[659,26,640,28,"create"],[659,32,640,34],[659,33,640,35],[659,65,640,67],[659,66,640,68],[659,111,640,113],[659,112,640,114],[660,4,641,4],[661,4,642,4],[661,8,642,8,"firebaseOptions"],[661,23,642,23],[662,4,643,4],[662,8,643,8,"serverAppSettings"],[662,25,643,25],[662,28,643,28,"_serverAppConfig"],[662,44,643,44],[662,48,643,48],[662,49,643,49],[662,50,643,50],[663,4,644,4],[663,8,644,8,"_options"],[663,16,644,16],[663,18,644,18],[664,6,645,8],[664,10,645,12,"_isFirebaseApp"],[664,24,645,26],[664,25,645,27,"_options"],[664,33,645,35],[664,34,645,36],[664,36,645,38],[665,8,646,12,"firebaseOptions"],[665,23,646,27],[665,26,646,30,"_options"],[665,34,646,38],[665,35,646,39,"options"],[665,42,646,46],[666,6,647,8],[666,7,647,9],[666,13,648,13],[666,17,648,17,"_isFirebaseServerAppSettings"],[666,45,648,45],[666,46,648,46,"_options"],[666,54,648,54],[666,55,648,55],[666,57,648,57],[667,8,649,12,"serverAppSettings"],[667,25,649,29],[667,28,649,32,"_options"],[667,36,649,40],[668,6,650,8],[668,7,650,9],[668,13,651,13],[669,8,652,12,"firebaseOptions"],[669,23,652,27],[669,26,652,30,"_options"],[669,34,652,38],[670,6,653,8],[671,4,654,4],[672,4,655,4],[672,8,655,8,"serverAppSettings"],[672,25,655,25],[672,26,655,26,"automaticDataCollectionEnabled"],[672,56,655,56],[672,61,655,61,"undefined"],[672,70,655,70],[672,72,655,72],[673,6,656,8,"serverAppSettings"],[673,23,656,25],[673,24,656,26,"automaticDataCollectionEnabled"],[673,54,656,56],[673,57,656,59],[673,61,656,63],[674,4,657,4],[675,4,658,4,"firebaseOptions"],[675,19,658,19],[675,24,658,24,"firebaseOptions"],[675,39,658,39],[675,42,658,42,"util"],[675,46,658,46],[675,47,658,47,"getDefaultAppConfig"],[675,66,658,66],[675,67,658,67],[675,68,658,68],[675,69,658,69],[676,4,659,4],[676,8,659,8],[676,9,659,9,"firebaseOptions"],[676,24,659,24],[676,26,659,26],[677,6,660,8],[677,12,660,14,"ERROR_FACTORY"],[677,25,660,27],[677,26,660,28,"create"],[677,32,660,34],[677,33,660,35],[677,45,660,47],[677,46,660,48],[677,71,660,73],[677,72,660,74],[678,4,661,4],[679,4,662,4],[680,4,663,4],[680,8,663,10,"nameObj"],[680,15,663,17],[680,18,663,20],[681,6,664,8],[681,9,664,11,"serverAppSettings"],[681,26,664,28],[682,6,665,8],[682,9,665,11,"firebaseOptions"],[683,4,666,4],[683,5,666,5],[684,4,667,4],[685,4,668,4],[686,4,669,4],[686,8,669,8,"nameObj"],[686,15,669,15],[686,16,669,16,"releaseOnDeref"],[686,30,669,30],[686,35,669,35,"undefined"],[686,44,669,44],[686,46,669,46],[687,6,670,8],[687,13,670,15,"nameObj"],[687,20,670,22],[687,21,670,23,"releaseOnDeref"],[687,35,670,37],[688,4,671,4],[689,4,672,4],[689,8,672,10,"hashCode"],[689,16,672,18],[689,19,672,22,"s"],[689,20,672,23],[689,24,672,28],[690,6,673,8],[690,13,673,15],[690,14,673,16],[690,17,673,19,"s"],[690,18,673,20],[690,19,673,21],[690,20,673,22,"reduce"],[690,26,673,28],[690,27,673,29],[690,28,673,30,"hash"],[690,32,673,34],[690,34,673,36,"c"],[690,35,673,37],[690,40,673,43,"Math"],[690,44,673,47],[690,45,673,48,"imul"],[690,49,673,52],[690,50,673,53],[690,52,673,55],[690,54,673,57,"hash"],[690,58,673,61],[690,59,673,62],[690,62,673,65,"c"],[690,63,673,66],[690,64,673,67,"charCodeAt"],[690,74,673,77],[690,75,673,78],[690,76,673,79],[690,77,673,80],[690,80,673,84],[690,81,673,85],[690,83,673,87],[690,84,673,88],[690,85,673,89],[691,4,674,4],[691,5,674,5],[692,4,675,4],[692,8,675,8,"serverAppSettings"],[692,25,675,25],[692,26,675,26,"releaseOnDeref"],[692,40,675,40],[692,45,675,45,"undefined"],[692,54,675,54],[692,56,675,56],[693,6,676,8],[693,10,676,12],[693,17,676,19,"FinalizationRegistry"],[693,37,676,39],[693,42,676,44],[693,53,676,55],[693,55,676,57],[694,8,677,12],[694,14,677,18,"ERROR_FACTORY"],[694,27,677,31],[694,28,677,32,"create"],[694,34,677,38],[694,35,677,39],[694,72,677,76],[694,73,677,77],[694,125,677,129],[694,126,677,130],[694,127,677,131],[694,128,677,132],[695,6,678,8],[696,4,679,4],[697,4,680,4],[697,8,680,10,"nameString"],[697,18,680,20],[697,21,680,23],[697,23,680,25],[697,26,680,28,"hashCode"],[697,34,680,36],[697,35,680,37,"JSON"],[697,39,680,41],[697,40,680,42,"stringify"],[697,49,680,51],[697,50,680,52,"nameObj"],[697,57,680,59],[697,58,680,60],[697,59,680,61],[698,4,681,4],[698,8,681,10,"existingApp"],[698,19,681,21],[698,22,681,24,"_serverApps"],[698,33,681,35],[698,34,681,36,"get"],[698,37,681,39],[698,38,681,40,"nameString"],[698,48,681,50],[698,49,681,51],[699,4,682,4],[699,8,682,8,"existingApp"],[699,19,682,19],[699,21,682,21],[700,6,683,8,"existingApp"],[700,17,683,19],[700,18,683,20,"incRefCount"],[700,29,683,31],[700,30,683,32,"serverAppSettings"],[700,47,683,49],[700,48,683,50,"releaseOnDeref"],[700,62,683,64],[700,63,683,65],[701,6,684,8],[701,13,684,15,"existingApp"],[701,24,684,26],[702,4,685,4],[703,4,686,4],[703,8,686,10,"container"],[703,17,686,19],[703,20,686,22],[703,24,686,26,"component"],[703,33,686,35],[703,34,686,36,"ComponentContainer"],[703,52,686,54],[703,53,686,55,"nameString"],[703,63,686,65],[703,64,686,66],[704,4,687,4],[704,9,687,9],[704,13,687,15,"component"],[704,24,687,24],[704,28,687,28,"_components"],[704,39,687,39],[704,40,687,40,"values"],[704,46,687,46],[704,47,687,47],[704,48,687,48],[704,50,687,50],[705,6,688,8,"container"],[705,15,688,17],[705,16,688,18,"addComponent"],[705,28,688,30],[705,29,688,31,"component"],[705,40,688,40],[705,41,688,41],[706,4,689,4],[707,4,690,4],[707,8,690,10,"newApp"],[707,14,690,16],[707,17,690,19],[707,21,690,23,"FirebaseServerAppImpl"],[707,42,690,44],[707,43,690,45,"firebaseOptions"],[707,58,690,60],[707,60,690,62,"serverAppSettings"],[707,77,690,79],[707,79,690,81,"nameString"],[707,89,690,91],[707,91,690,93,"container"],[707,100,690,102],[707,101,690,103],[708,4,691,4,"_serverApps"],[708,15,691,15],[708,16,691,16,"set"],[708,19,691,19],[708,20,691,20,"nameString"],[708,30,691,30],[708,32,691,32,"newApp"],[708,38,691,38],[708,39,691,39],[709,4,692,4],[709,11,692,11,"newApp"],[709,17,692,17],[710,2,693,0],[711,2,694,0],[712,0,695,0],[713,0,696,0],[714,0,697,0],[715,0,698,0],[716,0,699,0],[717,0,700,0],[718,0,701,0],[719,0,702,0],[720,0,703,0],[721,0,704,0],[722,0,705,0],[723,0,706,0],[724,0,707,0],[725,0,708,0],[726,0,709,0],[727,0,710,0],[728,0,711,0],[729,0,712,0],[730,0,713,0],[731,0,714,0],[732,0,715,0],[733,0,716,0],[734,0,717,0],[735,0,718,0],[736,0,719,0],[737,0,720,0],[738,0,721,0],[739,0,722,0],[740,2,723,0],[740,11,723,9,"getApp"],[740,17,723,15,"getApp"],[740,18,723,15],[740,20,723,43],[741,4,723,43],[741,8,723,16,"name"],[741,12,723,20],[741,15,723,20,"arguments"],[741,24,723,20],[741,25,723,20,"length"],[741,31,723,20],[741,39,723,20,"arguments"],[741,48,723,20],[741,56,723,20,"undefined"],[741,65,723,20],[741,68,723,20,"arguments"],[741,77,723,20],[741,83,723,23,"DEFAULT_ENTRY_NAME"],[741,101,723,41],[742,4,724,4],[742,8,724,10,"app"],[742,11,724,13],[742,14,724,16,"_apps"],[742,19,724,21],[742,20,724,22,"get"],[742,23,724,25],[742,24,724,26,"name"],[742,28,724,30],[742,29,724,31],[743,4,725,4],[743,8,725,8],[743,9,725,9,"app"],[743,12,725,12],[743,16,725,16,"name"],[743,20,725,20],[743,25,725,25,"DEFAULT_ENTRY_NAME"],[743,43,725,43],[743,47,725,47,"util"],[743,51,725,51],[743,52,725,52,"getDefaultAppConfig"],[743,71,725,71],[743,72,725,72],[743,73,725,73],[743,75,725,75],[744,6,726,8],[744,13,726,15,"initializeApp"],[744,26,726,28],[744,27,726,29],[744,28,726,30],[745,4,727,4],[746,4,728,4],[746,8,728,8],[746,9,728,9,"app"],[746,12,728,12],[746,14,728,14],[747,6,729,8],[747,12,729,14,"ERROR_FACTORY"],[747,25,729,27],[747,26,729,28,"create"],[747,32,729,34],[747,33,729,35],[747,41,729,43],[747,42,729,44],[747,65,729,67],[748,8,729,69,"appName"],[748,15,729,76],[748,17,729,78,"name"],[749,6,729,83],[749,7,729,84],[749,8,729,85],[750,4,730,4],[751,4,731,4],[751,11,731,11,"app"],[751,14,731,14],[752,2,732,0],[753,2,733,0],[754,0,734,0],[755,0,735,0],[756,0,736,0],[757,2,737,0],[757,11,737,9,"getApps"],[757,18,737,16,"getApps"],[757,19,737,16],[757,21,737,19],[758,4,738,4],[758,11,738,11,"Array"],[758,16,738,16],[758,17,738,17,"from"],[758,21,738,21],[758,22,738,22,"_apps"],[758,27,738,27],[758,28,738,28,"values"],[758,34,738,34],[758,35,738,35],[758,36,738,36],[758,37,738,37],[759,2,739,0],[760,2,740,0],[761,0,741,0],[762,0,742,0],[763,0,743,0],[764,0,744,0],[765,0,745,0],[766,0,746,0],[767,0,747,0],[768,0,748,0],[769,0,749,0],[770,0,750,0],[771,0,751,0],[772,0,752,0],[773,0,753,0],[774,0,754,0],[775,0,755,0],[776,0,756,0],[777,2,740,0],[777,11,757,15,"deleteApp"],[777,20,757,24,"deleteApp"],[777,21,757,24,"_x"],[777,23,757,24],[778,4,757,24],[778,11,757,24,"_deleteApp"],[778,21,757,24],[778,22,757,24,"apply"],[778,27,757,24],[778,34,757,24,"arguments"],[778,43,757,24],[779,2,757,24],[780,2,778,0],[781,0,779,0],[782,0,780,0],[783,0,781,0],[784,0,782,0],[785,0,783,0],[786,0,784,0],[787,0,785,0],[788,2,778,0],[788,11,778,0,"_deleteApp"],[788,22,778,0],[789,4,778,0,"_deleteApp"],[789,14,778,0],[789,17,778,0,"_asyncToGenerator"],[789,34,778,0],[789,35,757,0],[789,46,757,25,"app"],[789,49,757,28],[789,51,757,30],[790,6,758,4],[790,10,758,8,"cleanupProviders"],[790,26,758,24],[790,29,758,27],[790,34,758,32],[791,6,759,4],[791,10,759,10,"name"],[791,14,759,14],[791,17,759,17,"app"],[791,20,759,20],[791,21,759,21,"name"],[791,25,759,25],[792,6,760,4],[792,10,760,8,"_apps"],[792,15,760,13],[792,16,760,14,"has"],[792,19,760,17],[792,20,760,18,"name"],[792,24,760,22],[792,25,760,23],[792,27,760,25],[793,8,761,8,"cleanupProviders"],[793,24,761,24],[793,27,761,27],[793,31,761,31],[794,8,762,8,"_apps"],[794,13,762,13],[794,14,762,14,"delete"],[794,20,762,20],[794,21,762,21,"name"],[794,25,762,25],[794,26,762,26],[795,6,763,4],[795,7,763,5],[795,13,764,9],[795,17,764,13,"_serverApps"],[795,28,764,24],[795,29,764,25,"has"],[795,32,764,28],[795,33,764,29,"name"],[795,37,764,33],[795,38,764,34],[795,40,764,36],[796,8,765,8],[796,12,765,14,"firebaseServerApp"],[796,29,765,31],[796,32,765,34,"app"],[796,35,765,37],[797,8,766,8],[797,12,766,12,"firebaseServerApp"],[797,29,766,29],[797,30,766,30,"decRefCount"],[797,41,766,41],[797,42,766,42],[797,43,766,43],[797,47,766,47],[797,48,766,48],[797,50,766,50],[798,10,767,12,"_serverApps"],[798,21,767,23],[798,22,767,24,"delete"],[798,28,767,30],[798,29,767,31,"name"],[798,33,767,35],[798,34,767,36],[799,10,768,12,"cleanupProviders"],[799,26,768,28],[799,29,768,31],[799,33,768,35],[800,8,769,8],[801,6,770,4],[802,6,771,4],[802,10,771,8,"cleanupProviders"],[802,26,771,24],[802,28,771,26],[803,8,772,8],[803,14,772,14,"Promise"],[803,21,772,21],[803,22,772,22,"all"],[803,25,772,25],[803,26,772,26,"app"],[803,29,772,29],[803,30,772,30,"container"],[803,39,772,39],[803,40,773,13,"getProviders"],[803,52,773,25],[803,53,773,26],[803,54,773,27],[803,55,774,13,"map"],[803,58,774,16],[803,59,774,17,"provider"],[803,67,774,25],[803,71,774,29,"provider"],[803,79,774,37],[803,80,774,38,"delete"],[803,86,774,44],[803,87,774,45],[803,88,774,46],[803,89,774,47],[803,90,774,48],[804,8,775,8,"app"],[804,11,775,11],[804,12,775,12,"isDeleted"],[804,21,775,21],[804,24,775,24],[804,28,775,28],[805,6,776,4],[806,4,777,0],[806,5,777,1],[807,4,777,1],[807,11,777,1,"_deleteApp"],[807,21,777,1],[807,22,777,1,"apply"],[807,27,777,1],[807,34,777,1,"arguments"],[807,43,777,1],[808,2,777,1],[809,2,786,0],[809,11,786,9,"registerVersion"],[809,26,786,24,"registerVersion"],[809,27,786,25,"libraryKeyOrName"],[809,43,786,41],[809,45,786,43,"version"],[809,52,786,50],[809,54,786,52,"variant"],[809,61,786,59],[809,63,786,61],[810,4,787,4],[811,4,788,4],[812,4,789,4],[812,8,789,8,"library"],[812,15,789,15],[812,18,789,18,"PLATFORM_LOG_STRING"],[812,37,789,37],[812,38,789,38,"libraryKeyOrName"],[812,54,789,54],[812,55,789,55],[812,59,789,59,"libraryKeyOrName"],[812,75,789,75],[813,4,790,4],[813,8,790,8,"variant"],[813,15,790,15],[813,17,790,17],[814,6,791,8,"library"],[814,13,791,15],[814,17,791,19],[814,21,791,23,"variant"],[814,28,791,30],[814,30,791,32],[815,4,792,4],[816,4,793,4],[816,8,793,10,"libraryMismatch"],[816,23,793,25],[816,26,793,28,"library"],[816,33,793,35],[816,34,793,36,"match"],[816,39,793,41],[816,40,793,42],[816,47,793,49],[816,48,793,50],[817,4,794,4],[817,8,794,10,"versionMismatch"],[817,23,794,25],[817,26,794,28,"version"],[817,33,794,35],[817,34,794,36,"match"],[817,39,794,41],[817,40,794,42],[817,47,794,49],[817,48,794,50],[818,4,795,4],[818,8,795,8,"libraryMismatch"],[818,23,795,23],[818,27,795,27,"versionMismatch"],[818,42,795,42],[818,44,795,44],[819,6,796,8],[819,10,796,14,"warning"],[819,17,796,21],[819,20,796,24],[819,21,797,12],[819,52,797,43,"library"],[819,59,797,50],[819,78,797,69,"version"],[819,85,797,76],[819,89,797,80],[819,90,798,9],[820,6,799,8],[820,10,799,12,"libraryMismatch"],[820,25,799,27],[820,27,799,29],[821,8,800,12,"warning"],[821,15,800,19],[821,16,800,20,"push"],[821,20,800,24],[821,21,800,25],[821,38,800,42,"library"],[821,45,800,49],[821,96,800,100],[821,97,800,101],[822,6,801,8],[823,6,802,8],[823,10,802,12,"libraryMismatch"],[823,25,802,27],[823,29,802,31,"versionMismatch"],[823,44,802,46],[823,46,802,48],[824,8,803,12,"warning"],[824,15,803,19],[824,16,803,20,"push"],[824,20,803,24],[824,21,803,25],[824,26,803,30],[824,27,803,31],[825,6,804,8],[826,6,805,8],[826,10,805,12,"versionMismatch"],[826,25,805,27],[826,27,805,29],[827,8,806,12,"warning"],[827,15,806,19],[827,16,806,20,"push"],[827,20,806,24],[827,21,806,25],[827,38,806,42,"version"],[827,45,806,49],[827,96,806,100],[827,97,806,101],[828,6,807,8],[829,6,808,8,"logger"],[829,12,808,14],[829,13,808,15,"warn"],[829,17,808,19],[829,18,808,20,"warning"],[829,25,808,27],[829,26,808,28,"join"],[829,30,808,32],[829,31,808,33],[829,34,808,36],[829,35,808,37],[829,36,808,38],[830,6,809,8],[831,4,810,4],[832,4,811,4,"_registerComponent"],[832,22,811,22],[832,23,811,23],[832,27,811,27,"component"],[832,36,811,36],[832,37,811,37,"Component"],[832,46,811,46],[832,47,811,47],[832,50,811,50,"library"],[832,57,811,57],[832,67,811,67],[832,69,811,69],[832,76,811,76],[833,6,811,78,"library"],[833,13,811,85],[834,6,811,87,"version"],[835,4,811,95],[835,5,811,96],[835,6,811,97],[835,8,811,99],[835,17,811,108],[835,18,811,109],[835,45,811,136],[835,46,811,137],[835,47,811,138],[836,2,812,0],[837,2,813,0],[838,0,814,0],[839,0,815,0],[840,0,816,0],[841,0,817,0],[842,0,818,0],[843,0,819,0],[844,2,820,0],[844,11,820,9,"onLog"],[844,16,820,14,"onLog"],[844,17,820,15,"logCallback"],[844,28,820,26],[844,30,820,28,"options"],[844,37,820,35],[844,39,820,37],[845,4,821,4],[845,8,821,8,"logCallback"],[845,19,821,19],[845,24,821,24],[845,28,821,28],[845,32,821,32],[845,39,821,39,"logCallback"],[845,50,821,50],[845,55,821,55],[845,65,821,65],[845,67,821,67],[846,6,822,8],[846,12,822,14,"ERROR_FACTORY"],[846,25,822,27],[846,26,822,28,"create"],[846,32,822,34],[846,33,822,35],[846,55,822,57],[846,56,822,58],[846,91,822,93],[846,92,822,94],[847,4,823,4],[848,4,824,4,"logger$1"],[848,12,824,12],[848,13,824,13,"setUserLogHandler"],[848,30,824,30],[848,31,824,31,"logCallback"],[848,42,824,42],[848,44,824,44,"options"],[848,51,824,51],[848,52,824,52],[849,2,825,0],[850,2,826,0],[851,0,827,0],[852,0,828,0],[853,0,829,0],[854,0,830,0],[855,0,831,0],[856,0,832,0],[857,0,833,0],[858,0,834,0],[859,2,835,0],[859,11,835,9,"setLogLevel"],[859,22,835,20,"setLogLevel"],[859,23,835,21,"logLevel"],[859,31,835,29],[859,33,835,31],[860,4,836,4,"logger$1"],[860,12,836,12],[860,13,836,13,"setLogLevel"],[860,24,836,24],[860,25,836,25,"logLevel"],[860,33,836,33],[860,34,836,34],[861,2,837,0],[863,2,839,0],[864,0,840,0],[865,0,841,0],[866,0,842,0],[867,0,843,0],[868,0,844,0],[869,0,845,0],[870,0,846,0],[871,0,847,0],[872,0,848,0],[873,0,849,0],[874,0,850,0],[875,0,851,0],[876,0,852,0],[877,0,853,0],[878,0,854,0],[879,2,855,0],[879,6,855,6,"DB_NAME"],[879,13,855,13],[879,16,855,16],[879,45,855,45],[880,2,856,0],[880,6,856,6,"DB_VERSION"],[880,16,856,16],[880,19,856,19],[880,20,856,20],[881,2,857,0],[881,6,857,6,"STORE_NAME"],[881,16,857,16],[881,19,857,19],[881,45,857,45],[882,2,858,0],[882,6,858,4,"dbPromise"],[882,15,858,13],[882,18,858,16],[882,22,858,20],[883,2,859,0],[883,11,859,9,"getDbPromise"],[883,23,859,21,"getDbPromise"],[883,24,859,21],[883,26,859,24],[884,4,860,4],[884,8,860,8],[884,9,860,9,"dbPromise"],[884,18,860,18],[884,20,860,20],[885,6,861,8,"dbPromise"],[885,15,861,17],[885,18,861,20,"idb"],[885,21,861,23],[885,22,861,24,"openDB"],[885,28,861,30],[885,29,861,31,"DB_NAME"],[885,36,861,38],[885,38,861,40,"DB_VERSION"],[885,48,861,50],[885,50,861,52],[886,8,862,12,"upgrade"],[886,15,862,19],[886,17,862,21,"upgrade"],[886,18,862,22,"db"],[886,20,862,24],[886,22,862,26,"oldVersion"],[886,32,862,36],[886,37,862,41],[887,10,863,16],[888,10,864,16],[889,10,865,16],[890,10,866,16],[891,10,867,16],[892,10,868,16],[892,18,868,24,"oldVersion"],[892,28,868,34],[893,12,869,20],[893,17,869,25],[893,18,869,26],[894,14,870,24],[894,18,870,28],[895,16,871,28,"db"],[895,18,871,30],[895,19,871,31,"createObjectStore"],[895,36,871,48],[895,37,871,49,"STORE_NAME"],[895,47,871,59],[895,48,871,60],[896,14,872,24],[896,15,872,25],[896,16,873,24],[896,23,873,31,"e"],[896,24,873,32],[896,26,873,34],[897,16,874,28],[898,16,875,28],[899,16,876,28],[900,16,877,28,"console"],[900,23,877,35],[900,24,877,36,"warn"],[900,28,877,40],[900,29,877,41,"e"],[900,30,877,42],[900,31,877,43],[901,14,878,24],[902,10,879,16],[903,8,880,12],[904,6,881,8],[904,7,881,9],[904,8,881,10],[904,9,881,11,"catch"],[904,14,881,16],[904,15,881,17,"e"],[904,16,881,18],[904,20,881,22],[905,8,882,12],[905,14,882,18,"ERROR_FACTORY"],[905,27,882,31],[905,28,882,32,"create"],[905,34,882,38],[905,35,882,39],[905,45,882,49],[905,46,882,50],[905,71,882,75],[906,10,883,16,"originalErrorMessage"],[906,30,883,36],[906,32,883,38,"e"],[906,33,883,39],[906,34,883,40,"message"],[907,8,884,12],[907,9,884,13],[907,10,884,14],[908,6,885,8],[908,7,885,9],[908,8,885,10],[909,4,886,4],[910,4,887,4],[910,11,887,11,"dbPromise"],[910,20,887,20],[911,2,888,0],[912,2,888,1],[912,11,889,15,"readHeartbeatsFromIndexedDB"],[912,38,889,42,"readHeartbeatsFromIndexedDB"],[912,39,889,42,"_x2"],[912,42,889,42],[913,4,889,42],[913,11,889,42,"_readHeartbeatsFromIndexedDB"],[913,39,889,42],[913,40,889,42,"apply"],[913,45,889,42],[913,52,889,42,"arguments"],[913,61,889,42],[914,2,889,42],[915,2,889,42],[915,11,889,42,"_readHeartbeatsFromIndexedDB"],[915,40,889,42],[916,4,889,42,"_readHeartbeatsFromIndexedDB"],[916,32,889,42],[916,35,889,42,"_asyncToGenerator"],[916,52,889,42],[916,53,889,0],[916,64,889,43,"app"],[916,67,889,46],[916,69,889,48],[917,6,890,4],[917,10,890,8],[918,8,891,8],[918,12,891,14,"db"],[918,14,891,16],[918,23,891,25,"getDbPromise"],[918,35,891,37],[918,36,891,38],[918,37,891,39],[919,8,892,8],[919,12,892,14,"tx"],[919,14,892,16],[919,17,892,19,"db"],[919,19,892,21],[919,20,892,22,"transaction"],[919,31,892,33],[919,32,892,34,"STORE_NAME"],[919,42,892,44],[919,43,892,45],[920,8,893,8],[920,12,893,14,"result"],[920,18,893,20],[920,27,893,29,"tx"],[920,29,893,31],[920,30,893,32,"objectStore"],[920,41,893,43],[920,42,893,44,"STORE_NAME"],[920,52,893,54],[920,53,893,55],[920,54,893,56,"get"],[920,57,893,59],[920,58,893,60,"computeKey"],[920,68,893,70],[920,69,893,71,"app"],[920,72,893,74],[920,73,893,75],[920,74,893,76],[921,8,894,8],[922,8,895,8],[923,8,896,8],[923,14,896,14,"tx"],[923,16,896,16],[923,17,896,17,"done"],[923,21,896,21],[924,8,897,8],[924,15,897,15,"result"],[924,21,897,21],[925,6,898,4],[925,7,898,5],[925,8,899,4],[925,15,899,11,"e"],[925,16,899,12],[925,18,899,14],[926,8,900,8],[926,12,900,12,"e"],[926,13,900,13],[926,25,900,25,"util"],[926,29,900,29],[926,30,900,30,"FirebaseError"],[926,43,900,43],[926,45,900,45],[927,10,901,12,"logger"],[927,16,901,18],[927,17,901,19,"warn"],[927,21,901,23],[927,22,901,24,"e"],[927,23,901,25],[927,24,901,26,"message"],[927,31,901,33],[927,32,901,34],[928,8,902,8],[928,9,902,9],[928,15,903,13],[929,10,904,12],[929,14,904,18,"idbGetError"],[929,25,904,29],[929,28,904,32,"ERROR_FACTORY"],[929,41,904,45],[929,42,904,46,"create"],[929,48,904,52],[929,49,904,53],[929,58,904,62],[929,59,904,63],[929,83,904,87],[930,12,905,16,"originalErrorMessage"],[930,32,905,36],[930,34,905,38,"e"],[930,35,905,39],[930,37,905,41,"message"],[931,10,906,12],[931,11,906,13],[931,12,906,14],[932,10,907,12,"logger"],[932,16,907,18],[932,17,907,19,"warn"],[932,21,907,23],[932,22,907,24,"idbGetError"],[932,33,907,35],[932,34,907,36,"message"],[932,41,907,43],[932,42,907,44],[933,8,908,8],[934,6,909,4],[935,4,910,0],[935,5,910,1],[936,4,910,1],[936,11,910,1,"_readHeartbeatsFromIndexedDB"],[936,39,910,1],[936,40,910,1,"apply"],[936,45,910,1],[936,52,910,1,"arguments"],[936,61,910,1],[937,2,910,1],[938,2,910,1],[938,11,911,15,"writeHeartbeatsToIndexedDB"],[938,37,911,41,"writeHeartbeatsToIndexedDB"],[938,38,911,41,"_x3"],[938,41,911,41],[938,43,911,41,"_x4"],[938,46,911,41],[939,4,911,41],[939,11,911,41,"_writeHeartbeatsToIndexedDB"],[939,38,911,41],[939,39,911,41,"apply"],[939,44,911,41],[939,51,911,41,"arguments"],[939,60,911,41],[940,2,911,41],[941,2,911,41],[941,11,911,41,"_writeHeartbeatsToIndexedDB"],[941,39,911,41],[942,4,911,41,"_writeHeartbeatsToIndexedDB"],[942,31,911,41],[942,34,911,41,"_asyncToGenerator"],[942,51,911,41],[942,52,911,0],[942,63,911,42,"app"],[942,66,911,45],[942,68,911,47,"heartbeatObject"],[942,83,911,62],[942,85,911,64],[943,6,912,4],[943,10,912,8],[944,8,913,8],[944,12,913,14,"db"],[944,14,913,16],[944,23,913,25,"getDbPromise"],[944,35,913,37],[944,36,913,38],[944,37,913,39],[945,8,914,8],[945,12,914,14,"tx"],[945,14,914,16],[945,17,914,19,"db"],[945,19,914,21],[945,20,914,22,"transaction"],[945,31,914,33],[945,32,914,34,"STORE_NAME"],[945,42,914,44],[945,44,914,46],[945,55,914,57],[945,56,914,58],[946,8,915,8],[946,12,915,14,"objectStore"],[946,23,915,25],[946,26,915,28,"tx"],[946,28,915,30],[946,29,915,31,"objectStore"],[946,40,915,42],[946,41,915,43,"STORE_NAME"],[946,51,915,53],[946,52,915,54],[947,8,916,8],[947,14,916,14,"objectStore"],[947,25,916,25],[947,26,916,26,"put"],[947,29,916,29],[947,30,916,30,"heartbeatObject"],[947,45,916,45],[947,47,916,47,"computeKey"],[947,57,916,57],[947,58,916,58,"app"],[947,61,916,61],[947,62,916,62],[947,63,916,63],[948,8,917,8],[948,14,917,14,"tx"],[948,16,917,16],[948,17,917,17,"done"],[948,21,917,21],[949,6,918,4],[949,7,918,5],[949,8,919,4],[949,15,919,11,"e"],[949,16,919,12],[949,18,919,14],[950,8,920,8],[950,12,920,12,"e"],[950,13,920,13],[950,25,920,25,"util"],[950,29,920,29],[950,30,920,30,"FirebaseError"],[950,43,920,43],[950,45,920,45],[951,10,921,12,"logger"],[951,16,921,18],[951,17,921,19,"warn"],[951,21,921,23],[951,22,921,24,"e"],[951,23,921,25],[951,24,921,26,"message"],[951,31,921,33],[951,32,921,34],[952,8,922,8],[952,9,922,9],[952,15,923,13],[953,10,924,12],[953,14,924,18,"idbGetError"],[953,25,924,29],[953,28,924,32,"ERROR_FACTORY"],[953,41,924,45],[953,42,924,46,"create"],[953,48,924,52],[953,49,924,53],[953,58,924,62],[953,59,924,63],[953,85,924,89],[954,12,925,16,"originalErrorMessage"],[954,32,925,36],[954,34,925,38,"e"],[954,35,925,39],[954,37,925,41,"message"],[955,10,926,12],[955,11,926,13],[955,12,926,14],[956,10,927,12,"logger"],[956,16,927,18],[956,17,927,19,"warn"],[956,21,927,23],[956,22,927,24,"idbGetError"],[956,33,927,35],[956,34,927,36,"message"],[956,41,927,43],[956,42,927,44],[957,8,928,8],[958,6,929,4],[959,4,930,0],[959,5,930,1],[960,4,930,1],[960,11,930,1,"_writeHeartbeatsToIndexedDB"],[960,38,930,1],[960,39,930,1,"apply"],[960,44,930,1],[960,51,930,1,"arguments"],[960,60,930,1],[961,2,930,1],[962,2,931,0],[962,11,931,9,"computeKey"],[962,21,931,19,"computeKey"],[962,22,931,20,"app"],[962,25,931,23],[962,27,931,25],[963,4,932,4],[963,11,932,11],[963,14,932,14,"app"],[963,17,932,17],[963,18,932,18,"name"],[963,22,932,22],[963,26,932,26,"app"],[963,29,932,29],[963,30,932,30,"options"],[963,37,932,37],[963,38,932,38,"appId"],[963,43,932,43],[963,45,932,45],[964,2,933,0],[966,2,935,0],[967,0,936,0],[968,0,937,0],[969,0,938,0],[970,0,939,0],[971,0,940,0],[972,0,941,0],[973,0,942,0],[974,0,943,0],[975,0,944,0],[976,0,945,0],[977,0,946,0],[978,0,947,0],[979,0,948,0],[980,0,949,0],[981,0,950,0],[982,2,951,0],[982,6,951,6,"MAX_HEADER_BYTES"],[982,22,951,22],[982,25,951,25],[982,29,951,29],[983,2,952,0],[983,6,952,6,"MAX_NUM_STORED_HEARTBEATS"],[983,31,952,31],[983,34,952,34],[983,36,952,36],[984,2,952,37],[984,6,953,6,"HeartbeatServiceImpl"],[984,26,953,26],[985,4,954,4],[985,13,954,4,"HeartbeatServiceImpl"],[985,34,954,16,"container"],[985,43,954,25],[985,45,954,27],[986,6,954,27,"_classCallCheck"],[986,21,954,27],[986,28,954,27,"HeartbeatServiceImpl"],[986,48,954,27],[987,6,955,8],[987,10,955,12],[987,11,955,13,"container"],[987,20,955,22],[987,23,955,25,"container"],[987,32,955,34],[988,6,956,8],[989,0,957,0],[990,0,958,0],[991,0,959,0],[992,0,960,0],[993,0,961,0],[994,0,962,0],[995,0,963,0],[996,0,964,0],[997,6,965,8],[997,10,965,12],[997,11,965,13,"_heartbeatsCache"],[997,27,965,29],[997,30,965,32],[997,34,965,36],[998,6,966,8],[998,10,966,14,"app"],[998,13,966,17],[998,16,966,20],[998,20,966,24],[998,21,966,25,"container"],[998,30,966,34],[998,31,966,35,"getProvider"],[998,42,966,46],[998,43,966,47],[998,48,966,52],[998,49,966,53],[998,50,966,54,"getImmediate"],[998,62,966,66],[998,63,966,67],[998,64,966,68],[999,6,967,8],[999,10,967,12],[999,11,967,13,"_storage"],[999,19,967,21],[999,22,967,24],[999,26,967,28,"HeartbeatStorageImpl"],[999,46,967,48],[999,47,967,49,"app"],[999,50,967,52],[999,51,967,53],[1000,6,968,8],[1000,10,968,12],[1000,11,968,13,"_heartbeatsCachePromise"],[1000,34,968,36],[1000,37,968,39],[1000,41,968,43],[1000,42,968,44,"_storage"],[1000,50,968,52],[1000,51,968,53,"read"],[1000,55,968,57],[1000,56,968,58],[1000,57,968,59],[1000,58,968,60,"then"],[1000,62,968,64],[1000,63,968,65,"result"],[1000,69,968,71],[1000,73,968,75],[1001,8,969,12],[1001,12,969,16],[1001,13,969,17,"_heartbeatsCache"],[1001,29,969,33],[1001,32,969,36,"result"],[1001,38,969,42],[1002,8,970,12],[1002,15,970,19,"result"],[1002,21,970,25],[1003,6,971,8],[1003,7,971,9],[1003,8,971,10],[1004,4,972,4],[1005,4,973,4],[1006,0,974,0],[1007,0,975,0],[1008,0,976,0],[1009,0,977,0],[1010,0,978,0],[1011,0,979,0],[1012,4,973,4],[1012,11,973,4,"_createClass"],[1012,23,973,4],[1012,24,973,4,"HeartbeatServiceImpl"],[1012,44,973,4],[1013,6,973,4,"key"],[1013,9,973,4],[1014,6,973,4,"value"],[1014,11,973,4],[1015,8,973,4],[1015,12,973,4,"_triggerHeartbeat"],[1015,29,973,4],[1015,32,973,4,"_asyncToGenerator"],[1015,49,973,4],[1015,50,980,4],[1015,63,980,29],[1016,10,981,8],[1016,14,981,12],[1017,12,982,12],[1017,16,982,18,"platformLogger"],[1017,30,982,32],[1017,33,982,35],[1017,37,982,39],[1017,38,982,40,"container"],[1017,47,982,49],[1017,48,983,17,"getProvider"],[1017,59,983,28],[1017,60,983,29],[1017,77,983,46],[1017,78,983,47],[1017,79,984,17,"getImmediate"],[1017,91,984,29],[1017,92,984,30],[1017,93,984,31],[1018,12,985,12],[1019,12,986,12],[1020,12,987,12],[1020,16,987,18,"agent"],[1020,21,987,23],[1020,24,987,26,"platformLogger"],[1020,38,987,40],[1020,39,987,41,"getPlatformInfoString"],[1020,60,987,62],[1020,61,987,63],[1020,62,987,64],[1021,12,988,12],[1021,16,988,18,"date"],[1021,20,988,22],[1021,23,988,25,"getUTCDateString"],[1021,39,988,41],[1021,40,988,42],[1021,41,988,43],[1022,12,989,12],[1022,16,989,16],[1022,20,989,20],[1022,21,989,21,"_heartbeatsCache"],[1022,37,989,37],[1022,39,989,39,"heartbeats"],[1022,49,989,49],[1022,53,989,53],[1022,57,989,57],[1022,59,989,59],[1023,14,990,16],[1023,18,990,20],[1023,19,990,21,"_heartbeatsCache"],[1023,35,990,37],[1023,44,990,46],[1023,48,990,50],[1023,49,990,51,"_heartbeatsCachePromise"],[1023,72,990,74],[1024,14,991,16],[1025,14,992,16],[1025,18,992,20],[1025,22,992,24],[1025,23,992,25,"_heartbeatsCache"],[1025,39,992,41],[1025,41,992,43,"heartbeats"],[1025,51,992,53],[1025,55,992,57],[1025,59,992,61],[1025,61,992,63],[1026,16,993,20],[1027,14,994,16],[1028,12,995,12],[1029,12,996,12],[1030,12,997,12],[1031,12,998,12],[1031,16,998,16],[1031,20,998,20],[1031,21,998,21,"_heartbeatsCache"],[1031,37,998,37],[1031,38,998,38,"lastSentHeartbeatDate"],[1031,59,998,59],[1031,64,998,64,"date"],[1031,68,998,68],[1031,72,999,16],[1031,76,999,20],[1031,77,999,21,"_heartbeatsCache"],[1031,93,999,37],[1031,94,999,38,"heartbeats"],[1031,104,999,48],[1031,105,999,49,"some"],[1031,109,999,53],[1031,110,999,54,"singleDateHeartbeat"],[1031,129,999,73],[1031,133,999,77,"singleDateHeartbeat"],[1031,152,999,96],[1031,153,999,97,"date"],[1031,157,999,101],[1031,162,999,106,"date"],[1031,166,999,110],[1031,167,999,111],[1031,169,999,113],[1032,14,1000,16],[1033,12,1001,12],[1033,13,1001,13],[1033,19,1002,17],[1034,14,1003,16],[1035,14,1004,16],[1035,18,1004,20],[1035,19,1004,21,"_heartbeatsCache"],[1035,35,1004,37],[1035,36,1004,38,"heartbeats"],[1035,46,1004,48],[1035,47,1004,49,"push"],[1035,51,1004,53],[1035,52,1004,54],[1036,16,1004,56,"date"],[1036,20,1004,60],[1037,16,1004,62,"agent"],[1038,14,1004,68],[1038,15,1004,69],[1038,16,1004,70],[1039,14,1005,16],[1040,14,1006,16],[1041,14,1007,16],[1041,18,1007,20],[1041,22,1007,24],[1041,23,1007,25,"_heartbeatsCache"],[1041,39,1007,41],[1041,40,1007,42,"heartbeats"],[1041,50,1007,52],[1041,51,1007,53,"length"],[1041,57,1007,59],[1041,60,1007,62,"MAX_NUM_STORED_HEARTBEATS"],[1041,85,1007,87],[1041,87,1007,89],[1042,16,1008,20],[1042,20,1008,26,"earliestHeartbeatIdx"],[1042,40,1008,46],[1042,43,1008,49,"getEarliestHeartbeatIdx"],[1042,66,1008,72],[1042,67,1008,73],[1042,71,1008,77],[1042,72,1008,78,"_heartbeatsCache"],[1042,88,1008,94],[1042,89,1008,95,"heartbeats"],[1042,99,1008,105],[1042,100,1008,106],[1043,16,1009,20],[1043,20,1009,24],[1043,21,1009,25,"_heartbeatsCache"],[1043,37,1009,41],[1043,38,1009,42,"heartbeats"],[1043,48,1009,52],[1043,49,1009,53,"splice"],[1043,55,1009,59],[1043,56,1009,60,"earliestHeartbeatIdx"],[1043,76,1009,80],[1043,78,1009,82],[1043,79,1009,83],[1043,80,1009,84],[1044,14,1010,16],[1045,12,1011,12],[1046,12,1012,12],[1046,19,1012,19],[1046,23,1012,23],[1046,24,1012,24,"_storage"],[1046,32,1012,32],[1046,33,1012,33,"overwrite"],[1046,42,1012,42],[1046,43,1012,43],[1046,47,1012,47],[1046,48,1012,48,"_heartbeatsCache"],[1046,64,1012,64],[1046,65,1012,65],[1047,10,1013,8],[1047,11,1013,9],[1047,12,1014,8],[1047,19,1014,15,"e"],[1047,20,1014,16],[1047,22,1014,18],[1048,12,1015,12,"logger"],[1048,18,1015,18],[1048,19,1015,19,"warn"],[1048,23,1015,23],[1048,24,1015,24,"e"],[1048,25,1015,25],[1048,26,1015,26],[1049,10,1016,8],[1050,8,1017,4],[1050,9,1017,5],[1051,8,1017,5],[1051,17,980,10,"triggerHeartbeat"],[1051,33,980,26,"triggerHeartbeat"],[1051,34,980,26],[1052,10,980,26],[1052,17,980,26,"_triggerHeartbeat"],[1052,34,980,26],[1052,35,980,26,"apply"],[1052,40,980,26],[1052,47,980,26,"arguments"],[1052,56,980,26],[1053,8,980,26],[1054,8,980,26],[1054,15,980,10,"triggerHeartbeat"],[1054,31,980,26],[1055,6,980,26],[1056,6,1018,4],[1057,0,1019,0],[1058,0,1020,0],[1059,0,1021,0],[1060,0,1022,0],[1061,0,1023,0],[1062,0,1024,0],[1063,6,1018,4],[1064,4,1018,4],[1065,6,1018,4,"key"],[1065,9,1018,4],[1066,6,1018,4,"value"],[1066,11,1018,4],[1067,8,1018,4],[1067,12,1018,4,"_getHeartbeatsHeader"],[1067,32,1018,4],[1067,35,1018,4,"_asyncToGenerator"],[1067,52,1018,4],[1067,53,1025,4],[1067,66,1025,32],[1068,10,1026,8],[1068,14,1026,12],[1069,12,1027,12],[1069,16,1027,16],[1069,20,1027,20],[1069,21,1027,21,"_heartbeatsCache"],[1069,37,1027,37],[1069,42,1027,42],[1069,46,1027,46],[1069,48,1027,48],[1070,14,1028,16],[1070,20,1028,22],[1070,24,1028,26],[1070,25,1028,27,"_heartbeatsCachePromise"],[1070,48,1028,50],[1071,12,1029,12],[1072,12,1030,12],[1073,12,1031,12],[1073,16,1031,16],[1073,20,1031,20],[1073,21,1031,21,"_heartbeatsCache"],[1073,37,1031,37],[1073,39,1031,39,"heartbeats"],[1073,49,1031,49],[1073,53,1031,53],[1073,57,1031,57],[1073,61,1032,16],[1073,65,1032,20],[1073,66,1032,21,"_heartbeatsCache"],[1073,82,1032,37],[1073,83,1032,38,"heartbeats"],[1073,93,1032,48],[1073,94,1032,49,"length"],[1073,100,1032,55],[1073,105,1032,60],[1073,106,1032,61],[1073,108,1032,63],[1074,14,1033,16],[1074,21,1033,23],[1074,23,1033,25],[1075,12,1034,12],[1076,12,1035,12],[1076,16,1035,18,"date"],[1076,20,1035,22],[1076,23,1035,25,"getUTCDateString"],[1076,39,1035,41],[1076,40,1035,42],[1076,41,1035,43],[1077,12,1036,12],[1078,12,1037,12],[1078,16,1037,12,"_extractHeartbeatsFor"],[1078,37,1037,12],[1078,40,1037,56,"extractHeartbeatsForHeader"],[1078,66,1037,82],[1078,67,1037,83],[1078,71,1037,87],[1078,72,1037,88,"_heartbeatsCache"],[1078,88,1037,104],[1078,89,1037,105,"heartbeats"],[1078,99,1037,115],[1078,100,1037,116],[1079,14,1037,20,"heartbeatsToSend"],[1079,30,1037,36],[1079,33,1037,36,"_extractHeartbeatsFor"],[1079,54,1037,36],[1079,55,1037,20,"heartbeatsToSend"],[1079,71,1037,36],[1080,14,1037,38,"unsentEntries"],[1080,27,1037,51],[1080,30,1037,51,"_extractHeartbeatsFor"],[1080,51,1037,51],[1080,52,1037,38,"unsentEntries"],[1080,65,1037,51],[1081,12,1038,12],[1081,16,1038,18,"headerString"],[1081,28,1038,30],[1081,31,1038,33,"util"],[1081,35,1038,37],[1081,36,1038,38,"base64urlEncodeWithoutPadding"],[1081,65,1038,67],[1081,66,1038,68,"JSON"],[1081,70,1038,72],[1081,71,1038,73,"stringify"],[1081,80,1038,82],[1081,81,1038,83],[1082,14,1038,85,"version"],[1082,21,1038,92],[1082,23,1038,94],[1082,24,1038,95],[1083,14,1038,97,"heartbeats"],[1083,24,1038,107],[1083,26,1038,109,"heartbeatsToSend"],[1084,12,1038,126],[1084,13,1038,127],[1084,14,1038,128],[1084,15,1038,129],[1085,12,1039,12],[1086,12,1040,12],[1086,16,1040,16],[1086,17,1040,17,"_heartbeatsCache"],[1086,33,1040,33],[1086,34,1040,34,"lastSentHeartbeatDate"],[1086,55,1040,55],[1086,58,1040,58,"date"],[1086,62,1040,62],[1087,12,1041,12],[1087,16,1041,16,"unsentEntries"],[1087,29,1041,29],[1087,30,1041,30,"length"],[1087,36,1041,36],[1087,39,1041,39],[1087,40,1041,40],[1087,42,1041,42],[1088,14,1042,16],[1089,14,1043,16],[1089,18,1043,20],[1089,19,1043,21,"_heartbeatsCache"],[1089,35,1043,37],[1089,36,1043,38,"heartbeats"],[1089,46,1043,48],[1089,49,1043,51,"unsentEntries"],[1089,62,1043,64],[1090,14,1044,16],[1091,14,1045,16],[1092,14,1046,16],[1093,14,1047,16],[1093,20,1047,22],[1093,24,1047,26],[1093,25,1047,27,"_storage"],[1093,33,1047,35],[1093,34,1047,36,"overwrite"],[1093,43,1047,45],[1093,44,1047,46],[1093,48,1047,50],[1093,49,1047,51,"_heartbeatsCache"],[1093,65,1047,67],[1093,66,1047,68],[1094,12,1048,12],[1094,13,1048,13],[1094,19,1049,17],[1095,14,1050,16],[1095,18,1050,20],[1095,19,1050,21,"_heartbeatsCache"],[1095,35,1050,37],[1095,36,1050,38,"heartbeats"],[1095,46,1050,48],[1095,49,1050,51],[1095,51,1050,53],[1096,14,1051,16],[1097,14,1052,16],[1097,19,1052,21],[1097,23,1052,25],[1097,24,1052,26,"_storage"],[1097,32,1052,34],[1097,33,1052,35,"overwrite"],[1097,42,1052,44],[1097,43,1052,45],[1097,47,1052,49],[1097,48,1052,50,"_heartbeatsCache"],[1097,64,1052,66],[1097,65,1052,67],[1098,12,1053,12],[1099,12,1054,12],[1099,19,1054,19,"headerString"],[1099,31,1054,31],[1100,10,1055,8],[1100,11,1055,9],[1100,12,1056,8],[1100,19,1056,15,"e"],[1100,20,1056,16],[1100,22,1056,18],[1101,12,1057,12,"logger"],[1101,18,1057,18],[1101,19,1057,19,"warn"],[1101,23,1057,23],[1101,24,1057,24,"e"],[1101,25,1057,25],[1101,26,1057,26],[1102,12,1058,12],[1102,19,1058,19],[1102,21,1058,21],[1103,10,1059,8],[1104,8,1060,4],[1104,9,1060,5],[1105,8,1060,5],[1105,17,1025,10,"getHeartbeatsHeader"],[1105,36,1025,29,"getHeartbeatsHeader"],[1105,37,1025,29],[1106,10,1025,29],[1106,17,1025,29,"_getHeartbeatsHeader"],[1106,37,1025,29],[1106,38,1025,29,"apply"],[1106,43,1025,29],[1106,50,1025,29,"arguments"],[1106,59,1025,29],[1107,8,1025,29],[1108,8,1025,29],[1108,15,1025,10,"getHeartbeatsHeader"],[1108,34,1025,29],[1109,6,1025,29],[1110,4,1025,29],[1111,2,1025,29],[1112,2,1062,0],[1112,11,1062,9,"getUTCDateString"],[1112,27,1062,25,"getUTCDateString"],[1112,28,1062,25],[1112,30,1062,28],[1113,4,1063,4],[1113,8,1063,10,"today"],[1113,13,1063,15],[1113,16,1063,18],[1113,20,1063,22,"Date"],[1113,24,1063,26],[1113,25,1063,27],[1113,26,1063,28],[1114,4,1064,4],[1115,4,1065,4],[1115,11,1065,11,"today"],[1115,16,1065,16],[1115,17,1065,17,"toISOString"],[1115,28,1065,28],[1115,29,1065,29],[1115,30,1065,30],[1115,31,1065,31,"substring"],[1115,40,1065,40],[1115,41,1065,41],[1115,42,1065,42],[1115,44,1065,44],[1115,46,1065,46],[1115,47,1065,47],[1116,2,1066,0],[1117,2,1067,0],[1117,11,1067,9,"extractHeartbeatsForHeader"],[1117,37,1067,35,"extractHeartbeatsForHeader"],[1117,38,1067,36,"heartbeatsCache"],[1117,53,1067,51],[1117,55,1067,81],[1118,4,1067,81],[1118,8,1067,53,"maxSize"],[1118,15,1067,60],[1118,18,1067,60,"arguments"],[1118,27,1067,60],[1118,28,1067,60,"length"],[1118,34,1067,60],[1118,42,1067,60,"arguments"],[1118,51,1067,60],[1118,59,1067,60,"undefined"],[1118,68,1067,60],[1118,71,1067,60,"arguments"],[1118,80,1067,60],[1118,86,1067,63,"MAX_HEADER_BYTES"],[1118,102,1067,79],[1119,4,1068,4],[1120,4,1069,4],[1121,4,1070,4],[1121,8,1070,10,"heartbeatsToSend"],[1121,24,1070,26],[1121,27,1070,29],[1121,29,1070,31],[1122,4,1071,4],[1123,4,1072,4],[1123,8,1072,8,"unsentEntries"],[1123,21,1072,21],[1123,24,1072,24,"heartbeatsCache"],[1123,39,1072,39],[1123,40,1072,40,"slice"],[1123,45,1072,45],[1123,46,1072,46],[1123,47,1072,47],[1124,4,1072,48],[1124,8,1072,48,"_loop"],[1124,13,1072,48],[1124,25,1072,48,"_loop"],[1124,26,1072,48,"singleDateHeartbeat"],[1124,45,1072,48],[1124,47,1073,55],[1125,8,1074,8],[1126,8,1075,8],[1126,12,1075,14,"heartbeatEntry"],[1126,26,1075,28],[1126,29,1075,31,"heartbeatsToSend"],[1126,45,1075,47],[1126,46,1075,48,"find"],[1126,50,1075,52],[1126,51,1075,53,"hb"],[1126,53,1075,55],[1126,57,1075,59,"hb"],[1126,59,1075,61],[1126,60,1075,62,"agent"],[1126,65,1075,67],[1126,70,1075,72,"singleDateHeartbeat"],[1126,89,1075,91],[1126,90,1075,92,"agent"],[1126,95,1075,97],[1126,96,1075,98],[1127,8,1076,8],[1127,12,1076,12],[1127,13,1076,13,"heartbeatEntry"],[1127,27,1076,27],[1127,29,1076,29],[1128,10,1077,12],[1129,10,1078,12,"heartbeatsToSend"],[1129,26,1078,28],[1129,27,1078,29,"push"],[1129,31,1078,33],[1129,32,1078,34],[1130,12,1079,16,"agent"],[1130,17,1079,21],[1130,19,1079,23,"singleDateHeartbeat"],[1130,38,1079,42],[1130,39,1079,43,"agent"],[1130,44,1079,48],[1131,12,1080,16,"dates"],[1131,17,1080,21],[1131,19,1080,23],[1131,20,1080,24,"singleDateHeartbeat"],[1131,39,1080,43],[1131,40,1080,44,"date"],[1131,44,1080,48],[1132,10,1081,12],[1132,11,1081,13],[1132,12,1081,14],[1133,10,1082,12],[1133,14,1082,16,"countBytes"],[1133,24,1082,26],[1133,25,1082,27,"heartbeatsToSend"],[1133,41,1082,43],[1133,42,1082,44],[1133,45,1082,47,"maxSize"],[1133,52,1082,54],[1133,54,1082,56],[1134,12,1083,16],[1135,12,1084,16],[1136,12,1085,16,"heartbeatsToSend"],[1136,28,1085,32],[1136,29,1085,33,"pop"],[1136,32,1085,36],[1136,33,1085,37],[1136,34,1085,38],[1137,12,1085,39],[1138,10,1087,12],[1139,8,1088,8],[1139,9,1088,9],[1139,15,1089,13],[1140,10,1090,12,"heartbeatEntry"],[1140,24,1090,26],[1140,25,1090,27,"dates"],[1140,30,1090,32],[1140,31,1090,33,"push"],[1140,35,1090,37],[1140,36,1090,38,"singleDateHeartbeat"],[1140,55,1090,57],[1140,56,1090,58,"date"],[1140,60,1090,62],[1140,61,1090,63],[1141,10,1091,12],[1142,10,1092,12],[1143,10,1093,12],[1143,14,1093,16,"countBytes"],[1143,24,1093,26],[1143,25,1093,27,"heartbeatsToSend"],[1143,41,1093,43],[1143,42,1093,44],[1143,45,1093,47,"maxSize"],[1143,52,1093,54],[1143,54,1093,56],[1144,12,1094,16,"heartbeatEntry"],[1144,26,1094,30],[1144,27,1094,31,"dates"],[1144,32,1094,36],[1144,33,1094,37,"pop"],[1144,36,1094,40],[1144,37,1094,41],[1144,38,1094,42],[1145,12,1094,43],[1146,10,1096,12],[1147,8,1097,8],[1148,8,1098,8],[1149,8,1099,8],[1150,8,1100,8,"unsentEntries"],[1150,21,1100,21],[1150,24,1100,24,"unsentEntries"],[1150,37,1100,37],[1150,38,1100,38,"slice"],[1150,43,1100,43],[1150,44,1100,44],[1150,45,1100,45],[1150,46,1100,46],[1151,6,1101,4],[1151,7,1101,5],[1152,6,1101,5,"_ret"],[1152,10,1101,5],[1153,4,1073,4],[1153,9,1073,9],[1153,13,1073,15,"singleDateHeartbeat"],[1153,32,1073,34],[1153,36,1073,38,"heartbeatsCache"],[1153,51,1073,53],[1154,6,1073,53,"_ret"],[1154,10,1073,53],[1154,13,1073,53,"_loop"],[1154,18,1073,53],[1154,19,1073,53,"singleDateHeartbeat"],[1154,38,1073,53],[1155,6,1073,53],[1155,10,1073,53,"_ret"],[1155,14,1073,53],[1155,22,1086,16],[1156,4,1086,22],[1157,4,1102,4],[1157,11,1102,11],[1158,6,1103,8,"heartbeatsToSend"],[1158,22,1103,24],[1159,6,1104,8,"unsentEntries"],[1160,4,1105,4],[1160,5,1105,5],[1161,2,1106,0],[1162,2,1106,1],[1162,6,1107,6,"HeartbeatStorageImpl"],[1162,26,1107,26],[1163,4,1108,4],[1163,13,1108,4,"HeartbeatStorageImpl"],[1163,34,1108,16,"app"],[1163,37,1108,19],[1163,39,1108,21],[1164,6,1108,21,"_classCallCheck"],[1164,21,1108,21],[1164,28,1108,21,"HeartbeatStorageImpl"],[1164,48,1108,21],[1165,6,1109,8],[1165,10,1109,12],[1165,11,1109,13,"app"],[1165,14,1109,16],[1165,17,1109,19,"app"],[1165,20,1109,22],[1166,6,1110,8],[1166,10,1110,12],[1166,11,1110,13,"_canUseIndexedDBPromise"],[1166,34,1110,36],[1166,37,1110,39],[1166,41,1110,43],[1166,42,1110,44,"runIndexedDBEnvironmentCheck"],[1166,70,1110,72],[1166,71,1110,73],[1166,72,1110,74],[1167,4,1111,4],[1168,4,1111,5],[1168,11,1111,5,"_createClass"],[1168,23,1111,5],[1168,24,1111,5,"HeartbeatStorageImpl"],[1168,44,1111,5],[1169,6,1111,5,"key"],[1169,9,1111,5],[1170,6,1111,5,"value"],[1170,11,1111,5],[1171,8,1111,5],[1171,12,1111,5,"_runIndexedDBEnvironmentCheck"],[1171,41,1111,5],[1171,44,1111,5,"_asyncToGenerator"],[1171,61,1111,5],[1171,62,1112,4],[1171,75,1112,41],[1172,10,1113,8],[1172,14,1113,12],[1172,15,1113,13,"util"],[1172,19,1113,17],[1172,20,1113,18,"isIndexedDBAvailable"],[1172,40,1113,38],[1172,41,1113,39],[1172,42,1113,40],[1172,44,1113,42],[1173,12,1114,12],[1173,19,1114,19],[1173,24,1114,24],[1174,10,1115,8],[1174,11,1115,9],[1174,17,1116,13],[1175,12,1117,12],[1175,19,1117,19,"util"],[1175,23,1117,23],[1175,24,1117,24,"validateIndexedDBOpenable"],[1175,49,1117,49],[1175,50,1117,50],[1175,51,1117,51],[1175,52,1118,17,"then"],[1175,56,1118,21],[1175,57,1118,22],[1175,63,1118,28],[1175,67,1118,32],[1175,68,1118,33],[1175,69,1119,17,"catch"],[1175,74,1119,22],[1175,75,1119,23],[1175,81,1119,29],[1175,86,1119,34],[1175,87,1119,35],[1176,10,1120,8],[1177,8,1121,4],[1177,9,1121,5],[1178,8,1121,5],[1178,17,1112,10,"runIndexedDBEnvironmentCheck"],[1178,45,1112,38,"runIndexedDBEnvironmentCheck"],[1178,46,1112,38],[1179,10,1112,38],[1179,17,1112,38,"_runIndexedDBEnvironmentCheck"],[1179,46,1112,38],[1179,47,1112,38,"apply"],[1179,52,1112,38],[1179,59,1112,38,"arguments"],[1179,68,1112,38],[1180,8,1112,38],[1181,8,1112,38],[1181,15,1112,10,"runIndexedDBEnvironmentCheck"],[1181,43,1112,38],[1182,6,1112,38],[1183,6,1122,4],[1184,0,1123,0],[1185,0,1124,0],[1186,4,1122,4],[1187,6,1122,4,"key"],[1187,9,1122,4],[1188,6,1122,4,"value"],[1188,11,1122,4],[1189,8,1122,4],[1189,12,1122,4,"_read"],[1189,17,1122,4],[1189,20,1122,4,"_asyncToGenerator"],[1189,37,1122,4],[1189,38,1125,4],[1189,51,1125,17],[1190,10,1126,8],[1190,14,1126,14,"canUseIndexedDB"],[1190,29,1126,29],[1190,38,1126,38],[1190,42,1126,42],[1190,43,1126,43,"_canUseIndexedDBPromise"],[1190,66,1126,66],[1191,10,1127,8],[1191,14,1127,12],[1191,15,1127,13,"canUseIndexedDB"],[1191,30,1127,28],[1191,32,1127,30],[1192,12,1128,12],[1192,19,1128,19],[1193,14,1128,21,"heartbeats"],[1193,24,1128,31],[1193,26,1128,33],[1194,12,1128,36],[1194,13,1128,37],[1195,10,1129,8],[1195,11,1129,9],[1195,17,1130,13],[1196,12,1131,12],[1196,16,1131,18,"idbHeartbeatObject"],[1196,34,1131,36],[1196,43,1131,45,"readHeartbeatsFromIndexedDB"],[1196,70,1131,72],[1196,71,1131,73],[1196,75,1131,77],[1196,76,1131,78,"app"],[1196,79,1131,81],[1196,80,1131,82],[1197,12,1132,12],[1197,16,1132,16,"idbHeartbeatObject"],[1197,34,1132,34],[1197,36,1132,36,"heartbeats"],[1197,46,1132,46],[1197,48,1132,48],[1198,14,1133,16],[1198,21,1133,23,"idbHeartbeatObject"],[1198,39,1133,41],[1199,12,1134,12],[1199,13,1134,13],[1199,19,1135,17],[1200,14,1136,16],[1200,21,1136,23],[1201,16,1136,25,"heartbeats"],[1201,26,1136,35],[1201,28,1136,37],[1202,14,1136,40],[1202,15,1136,41],[1203,12,1137,12],[1204,10,1138,8],[1205,8,1139,4],[1205,9,1139,5],[1206,8,1139,5],[1206,17,1125,10,"read"],[1206,21,1125,14,"read"],[1206,22,1125,14],[1207,10,1125,14],[1207,17,1125,14,"_read"],[1207,22,1125,14],[1207,23,1125,14,"apply"],[1207,28,1125,14],[1207,35,1125,14,"arguments"],[1207,44,1125,14],[1208,8,1125,14],[1209,8,1125,14],[1209,15,1125,10,"read"],[1209,19,1125,14],[1210,6,1125,14],[1210,10,1140,4],[1211,6,1140,4],[1212,4,1140,4],[1213,6,1140,4,"key"],[1213,9,1140,4],[1214,6,1140,4,"value"],[1214,11,1140,4],[1215,8,1140,4],[1215,12,1140,4,"_overwrite"],[1215,22,1140,4],[1215,25,1140,4,"_asyncToGenerator"],[1215,42,1140,4],[1215,43,1141,4],[1215,54,1141,20,"heartbeatsObject"],[1215,70,1141,36],[1215,72,1141,38],[1216,10,1142,8],[1216,14,1142,14,"canUseIndexedDB"],[1216,29,1142,29],[1216,38,1142,38],[1216,42,1142,42],[1216,43,1142,43,"_canUseIndexedDBPromise"],[1216,66,1142,66],[1217,10,1143,8],[1217,14,1143,12],[1217,15,1143,13,"canUseIndexedDB"],[1217,30,1143,28],[1217,32,1143,30],[1218,12,1144,12],[1219,10,1145,8],[1219,11,1145,9],[1219,17,1146,13],[1220,12,1147,12],[1220,16,1147,18,"existingHeartbeatsObject"],[1220,40,1147,42],[1220,49,1147,51],[1220,53,1147,55],[1220,54,1147,56,"read"],[1220,58,1147,60],[1220,59,1147,61],[1220,60,1147,62],[1221,12,1148,12],[1221,19,1148,19,"writeHeartbeatsToIndexedDB"],[1221,45,1148,45],[1221,46,1148,46],[1221,50,1148,50],[1221,51,1148,51,"app"],[1221,54,1148,54],[1221,56,1148,56],[1222,14,1149,16,"lastSentHeartbeatDate"],[1222,35,1149,37],[1222,37,1149,39,"heartbeatsObject"],[1222,53,1149,55],[1222,54,1149,56,"lastSentHeartbeatDate"],[1222,75,1149,77],[1222,79,1150,20,"existingHeartbeatsObject"],[1222,103,1150,44],[1222,104,1150,45,"lastSentHeartbeatDate"],[1222,125,1150,66],[1223,14,1151,16,"heartbeats"],[1223,24,1151,26],[1223,26,1151,28,"heartbeatsObject"],[1223,42,1151,44],[1223,43,1151,45,"heartbeats"],[1224,12,1152,12],[1224,13,1152,13],[1224,14,1152,14],[1225,10,1153,8],[1226,8,1154,4],[1226,9,1154,5],[1227,8,1154,5],[1227,17,1141,10,"overwrite"],[1227,26,1141,19,"overwrite"],[1227,27,1141,19,"_x5"],[1227,30,1141,19],[1228,10,1141,19],[1228,17,1141,19,"_overwrite"],[1228,27,1141,19],[1228,28,1141,19,"apply"],[1228,33,1141,19],[1228,40,1141,19,"arguments"],[1228,49,1141,19],[1229,8,1141,19],[1230,8,1141,19],[1230,15,1141,10,"overwrite"],[1230,24,1141,19],[1231,6,1141,19],[1231,10,1155,4],[1232,4,1155,4],[1233,6,1155,4,"key"],[1233,9,1155,4],[1234,6,1155,4,"value"],[1234,11,1155,4],[1235,8,1155,4],[1235,12,1155,4,"_add"],[1235,16,1155,4],[1235,19,1155,4,"_asyncToGenerator"],[1235,36,1155,4],[1235,37,1156,4],[1235,48,1156,14,"heartbeatsObject"],[1235,64,1156,30],[1235,66,1156,32],[1236,10,1157,8],[1236,14,1157,14,"canUseIndexedDB"],[1236,29,1157,29],[1236,38,1157,38],[1236,42,1157,42],[1236,43,1157,43,"_canUseIndexedDBPromise"],[1236,66,1157,66],[1237,10,1158,8],[1237,14,1158,12],[1237,15,1158,13,"canUseIndexedDB"],[1237,30,1158,28],[1237,32,1158,30],[1238,12,1159,12],[1239,10,1160,8],[1239,11,1160,9],[1239,17,1161,13],[1240,12,1162,12],[1240,16,1162,18,"existingHeartbeatsObject"],[1240,40,1162,42],[1240,49,1162,51],[1240,53,1162,55],[1240,54,1162,56,"read"],[1240,58,1162,60],[1240,59,1162,61],[1240,60,1162,62],[1241,12,1163,12],[1241,19,1163,19,"writeHeartbeatsToIndexedDB"],[1241,45,1163,45],[1241,46,1163,46],[1241,50,1163,50],[1241,51,1163,51,"app"],[1241,54,1163,54],[1241,56,1163,56],[1242,14,1164,16,"lastSentHeartbeatDate"],[1242,35,1164,37],[1242,37,1164,39,"heartbeatsObject"],[1242,53,1164,55],[1242,54,1164,56,"lastSentHeartbeatDate"],[1242,75,1164,77],[1242,79,1165,20,"existingHeartbeatsObject"],[1242,103,1165,44],[1242,104,1165,45,"lastSentHeartbeatDate"],[1242,125,1165,66],[1243,14,1166,16,"heartbeats"],[1243,24,1166,26],[1243,26,1166,28],[1243,27,1167,20],[1243,30,1167,23,"existingHeartbeatsObject"],[1243,54,1167,47],[1243,55,1167,48,"heartbeats"],[1243,65,1167,58],[1243,67,1168,20],[1243,70,1168,23,"heartbeatsObject"],[1243,86,1168,39],[1243,87,1168,40,"heartbeats"],[1243,97,1168,50],[1244,12,1170,12],[1244,13,1170,13],[1244,14,1170,14],[1245,10,1171,8],[1246,8,1172,4],[1246,9,1172,5],[1247,8,1172,5],[1247,17,1156,10,"add"],[1247,20,1156,13,"add"],[1247,21,1156,13,"_x6"],[1247,24,1156,13],[1248,10,1156,13],[1248,17,1156,13,"_add"],[1248,21,1156,13],[1248,22,1156,13,"apply"],[1248,27,1156,13],[1248,34,1156,13,"arguments"],[1248,43,1156,13],[1249,8,1156,13],[1250,8,1156,13],[1250,15,1156,10,"add"],[1250,18,1156,13],[1251,6,1156,13],[1252,4,1156,13],[1253,2,1156,13],[1254,2,1174,0],[1255,0,1175,0],[1256,0,1176,0],[1257,0,1177,0],[1258,0,1178,0],[1259,2,1179,0],[1259,11,1179,9,"countBytes"],[1259,21,1179,19,"countBytes"],[1259,22,1179,20,"heartbeatsCache"],[1259,37,1179,35],[1259,39,1179,37],[1260,4,1180,4],[1261,4,1181,4],[1261,11,1181,11,"util"],[1261,15,1181,15],[1261,16,1181,16,"base64urlEncodeWithoutPadding"],[1261,45,1181,45],[1262,4,1182,4],[1263,4,1183,4,"JSON"],[1263,8,1183,8],[1263,9,1183,9,"stringify"],[1263,18,1183,18],[1263,19,1183,19],[1264,6,1183,21,"version"],[1264,13,1183,28],[1264,15,1183,30],[1264,16,1183,31],[1265,6,1183,33,"heartbeats"],[1265,16,1183,43],[1265,18,1183,45,"heartbeatsCache"],[1266,4,1183,61],[1266,5,1183,62],[1266,6,1183,63],[1266,7,1183,64],[1266,8,1183,65,"length"],[1266,14,1183,71],[1267,2,1184,0],[1268,2,1185,0],[1269,0,1186,0],[1270,0,1187,0],[1271,0,1188,0],[1272,2,1189,0],[1272,11,1189,9,"getEarliestHeartbeatIdx"],[1272,34,1189,32,"getEarliestHeartbeatIdx"],[1272,35,1189,33,"heartbeats"],[1272,45,1189,43],[1272,47,1189,45],[1273,4,1190,4],[1273,8,1190,8,"heartbeats"],[1273,18,1190,18],[1273,19,1190,19,"length"],[1273,25,1190,25],[1273,30,1190,30],[1273,31,1190,31],[1273,33,1190,33],[1274,6,1191,8],[1274,13,1191,15],[1274,14,1191,16],[1274,15,1191,17],[1275,4,1192,4],[1276,4,1193,4],[1276,8,1193,8,"earliestHeartbeatIdx"],[1276,28,1193,28],[1276,31,1193,31],[1276,32,1193,32],[1277,4,1194,4],[1277,8,1194,8,"earliestHeartbeatDate"],[1277,29,1194,29],[1277,32,1194,32,"heartbeats"],[1277,42,1194,42],[1277,43,1194,43],[1277,44,1194,44],[1277,45,1194,45],[1277,46,1194,46,"date"],[1277,50,1194,50],[1278,4,1195,4],[1278,9,1195,9],[1278,13,1195,13,"i"],[1278,14,1195,14],[1278,17,1195,17],[1278,18,1195,18],[1278,20,1195,20,"i"],[1278,21,1195,21],[1278,24,1195,24,"heartbeats"],[1278,34,1195,34],[1278,35,1195,35,"length"],[1278,41,1195,41],[1278,43,1195,43,"i"],[1278,44,1195,44],[1278,46,1195,46],[1278,48,1195,48],[1279,6,1196,8],[1279,10,1196,12,"heartbeats"],[1279,20,1196,22],[1279,21,1196,23,"i"],[1279,22,1196,24],[1279,23,1196,25],[1279,24,1196,26,"date"],[1279,28,1196,30],[1279,31,1196,33,"earliestHeartbeatDate"],[1279,52,1196,54],[1279,54,1196,56],[1280,8,1197,12,"earliestHeartbeatDate"],[1280,29,1197,33],[1280,32,1197,36,"heartbeats"],[1280,42,1197,46],[1280,43,1197,47,"i"],[1280,44,1197,48],[1280,45,1197,49],[1280,46,1197,50,"date"],[1280,50,1197,54],[1281,8,1198,12,"earliestHeartbeatIdx"],[1281,28,1198,32],[1281,31,1198,35,"i"],[1281,32,1198,36],[1282,6,1199,8],[1283,4,1200,4],[1284,4,1201,4],[1284,11,1201,11,"earliestHeartbeatIdx"],[1284,31,1201,31],[1285,2,1202,0],[1287,2,1204,0],[1288,0,1205,0],[1289,0,1206,0],[1290,0,1207,0],[1291,0,1208,0],[1292,0,1209,0],[1293,0,1210,0],[1294,0,1211,0],[1295,0,1212,0],[1296,0,1213,0],[1297,0,1214,0],[1298,0,1215,0],[1299,0,1216,0],[1300,0,1217,0],[1301,0,1218,0],[1302,0,1219,0],[1303,2,1220,0],[1303,11,1220,9,"registerCoreComponents"],[1303,33,1220,31,"registerCoreComponents"],[1303,34,1220,32,"variant"],[1303,41,1220,39],[1303,43,1220,41],[1304,4,1221,4,"_registerComponent"],[1304,22,1221,22],[1304,23,1221,23],[1304,27,1221,27,"component"],[1304,36,1221,36],[1304,37,1221,37,"Component"],[1304,46,1221,46],[1304,47,1221,47],[1304,64,1221,64],[1304,66,1221,66,"container"],[1304,75,1221,75],[1304,79,1221,79],[1304,83,1221,83,"PlatformLoggerServiceImpl"],[1304,108,1221,108],[1304,109,1221,109,"container"],[1304,118,1221,118],[1304,119,1221,119],[1304,121,1221,121],[1304,130,1221,130],[1304,131,1221,131],[1304,158,1221,158],[1304,159,1221,159],[1304,160,1221,160],[1305,4,1222,4,"_registerComponent"],[1305,22,1222,22],[1305,23,1222,23],[1305,27,1222,27,"component"],[1305,36,1222,36],[1305,37,1222,37,"Component"],[1305,46,1222,46],[1305,47,1222,47],[1305,58,1222,58],[1305,60,1222,60,"container"],[1305,69,1222,69],[1305,73,1222,73],[1305,77,1222,77,"HeartbeatServiceImpl"],[1305,97,1222,97],[1305,98,1222,98,"container"],[1305,107,1222,107],[1305,108,1222,108],[1305,110,1222,110],[1305,119,1222,119],[1305,120,1222,120],[1305,147,1222,147],[1305,148,1222,148],[1305,149,1222,149],[1306,4,1223,4],[1307,4,1224,4,"registerVersion"],[1307,19,1224,19],[1307,20,1224,20,"name$q"],[1307,26,1224,26],[1307,28,1224,28,"version$1"],[1307,37,1224,37],[1307,39,1224,39,"variant"],[1307,46,1224,46],[1307,47,1224,47],[1308,4,1225,4],[1309,4,1226,4,"registerVersion"],[1309,19,1226,19],[1309,20,1226,20,"name$q"],[1309,26,1226,26],[1309,28,1226,28,"version$1"],[1309,37,1226,37],[1309,39,1226,39],[1309,48,1226,48],[1309,49,1226,49],[1310,4,1227,4],[1311,4,1228,4,"registerVersion"],[1311,19,1228,19],[1311,20,1228,20],[1311,29,1228,29],[1311,31,1228,31],[1311,33,1228,33],[1311,34,1228,34],[1312,2,1229,0],[1314,2,1231,0],[1315,0,1232,0],[1316,0,1233,0],[1317,0,1234,0],[1318,0,1235,0],[1319,0,1236,0],[1320,2,1237,0,"registerCoreComponents"],[1320,24,1237,22],[1320,25,1237,23],[1320,31,1237,29],[1320,32,1237,30],[1321,2,1239,0,"Object"],[1321,8,1239,6],[1321,9,1239,7,"defineProperty"],[1321,23,1239,21],[1321,24,1239,22,"exports"],[1321,31,1239,29],[1321,33,1239,31],[1321,48,1239,46],[1321,50,1239,48],[1322,4,1240,2,"enumerable"],[1322,14,1240,12],[1322,16,1240,14],[1322,20,1240,18],[1323,4,1241,2,"get"],[1323,7,1241,5],[1323,9,1241,7],[1323,18,1241,7,"get"],[1323,19,1241,7],[1323,21,1241,19],[1324,6,1241,21],[1324,13,1241,28,"util"],[1324,17,1241,32],[1324,18,1241,33,"FirebaseError"],[1324,31,1241,46],[1325,4,1241,48],[1326,2,1242,0],[1326,3,1242,1],[1326,4,1242,2],[1327,2,1243,0,"exports"],[1327,9,1243,7],[1327,10,1243,8,"SDK_VERSION"],[1327,21,1243,19],[1327,24,1243,22,"SDK_VERSION"],[1327,35,1243,33],[1328,2,1244,0,"exports"],[1328,9,1244,7],[1328,10,1244,8,"_DEFAULT_ENTRY_NAME"],[1328,29,1244,27],[1328,32,1244,30,"DEFAULT_ENTRY_NAME"],[1328,50,1244,48],[1329,2,1245,0,"exports"],[1329,9,1245,7],[1329,10,1245,8,"_addComponent"],[1329,23,1245,21],[1329,26,1245,24,"_addComponent"],[1329,39,1245,37],[1330,2,1246,0,"exports"],[1330,9,1246,7],[1330,10,1246,8,"_addOrOverwriteComponent"],[1330,34,1246,32],[1330,37,1246,35,"_addOrOverwriteComponent"],[1330,61,1246,59],[1331,2,1247,0,"exports"],[1331,9,1247,7],[1331,10,1247,8,"_apps"],[1331,15,1247,13],[1331,18,1247,16,"_apps"],[1331,23,1247,21],[1332,2,1248,0,"exports"],[1332,9,1248,7],[1332,10,1248,8,"_clearComponents"],[1332,26,1248,24],[1332,29,1248,27,"_clearComponents"],[1332,45,1248,43],[1333,2,1249,0,"exports"],[1333,9,1249,7],[1333,10,1249,8,"_components"],[1333,21,1249,19],[1333,24,1249,22,"_components"],[1333,35,1249,33],[1334,2,1250,0,"exports"],[1334,9,1250,7],[1334,10,1250,8,"_getProvider"],[1334,22,1250,20],[1334,25,1250,23,"_getProvider"],[1334,37,1250,35],[1335,2,1251,0,"exports"],[1335,9,1251,7],[1335,10,1251,8,"_isFirebaseApp"],[1335,24,1251,22],[1335,27,1251,25,"_isFirebaseApp"],[1335,41,1251,39],[1336,2,1252,0,"exports"],[1336,9,1252,7],[1336,10,1252,8,"_isFirebaseServerApp"],[1336,30,1252,28],[1336,33,1252,31,"_isFirebaseServerApp"],[1336,53,1252,51],[1337,2,1253,0,"exports"],[1337,9,1253,7],[1337,10,1253,8,"_isFirebaseServerAppSettings"],[1337,38,1253,36],[1337,41,1253,39,"_isFirebaseServerAppSettings"],[1337,69,1253,67],[1338,2,1254,0,"exports"],[1338,9,1254,7],[1338,10,1254,8,"_registerComponent"],[1338,28,1254,26],[1338,31,1254,29,"_registerComponent"],[1338,49,1254,47],[1339,2,1255,0,"exports"],[1339,9,1255,7],[1339,10,1255,8,"_removeServiceInstance"],[1339,32,1255,30],[1339,35,1255,33,"_removeServiceInstance"],[1339,57,1255,55],[1340,2,1256,0,"exports"],[1340,9,1256,7],[1340,10,1256,8,"_serverApps"],[1340,21,1256,19],[1340,24,1256,22,"_serverApps"],[1340,35,1256,33],[1341,2,1257,0,"exports"],[1341,9,1257,7],[1341,10,1257,8,"deleteApp"],[1341,19,1257,17],[1341,22,1257,20,"deleteApp"],[1341,31,1257,29],[1342,2,1258,0,"exports"],[1342,9,1258,7],[1342,10,1258,8,"getApp"],[1342,16,1258,14],[1342,19,1258,17,"getApp"],[1342,25,1258,23],[1343,2,1259,0,"exports"],[1343,9,1259,7],[1343,10,1259,8,"getApps"],[1343,17,1259,15],[1343,20,1259,18,"getApps"],[1343,27,1259,25],[1344,2,1260,0,"exports"],[1344,9,1260,7],[1344,10,1260,8,"initializeApp"],[1344,23,1260,21],[1344,26,1260,24,"initializeApp"],[1344,39,1260,37],[1345,2,1261,0,"exports"],[1345,9,1261,7],[1345,10,1261,8,"initializeServerApp"],[1345,29,1261,27],[1345,32,1261,30,"initializeServerApp"],[1345,51,1261,49],[1346,2,1262,0,"exports"],[1346,9,1262,7],[1346,10,1262,8,"onLog"],[1346,15,1262,13],[1346,18,1262,16,"onLog"],[1346,23,1262,21],[1347,2,1263,0,"exports"],[1347,9,1263,7],[1347,10,1263,8,"registerVersion"],[1347,25,1263,23],[1347,28,1263,26,"registerVersion"],[1347,43,1263,41],[1348,2,1264,0,"exports"],[1348,9,1264,7],[1348,10,1264,8,"setLogLevel"],[1348,21,1264,19],[1348,24,1264,22,"setLogLevel"],[1348,35,1264,33],[1349,0,1264,34],[1349,3]],"functionMap":{"names":["<global>","PlatformLoggerServiceImpl","PlatformLoggerServiceImpl#constructor","PlatformLoggerServiceImpl#getPlatformInfoString","providers.map$argument_0","providers.map.filter$argument_0","isVersionServiceProvider","_addComponent","_addOrOverwriteComponent","_registerComponent","_getProvider","_removeServiceInstance","_isFirebaseApp","_isFirebaseServerAppSettings","_isFirebaseServerApp","_clearComponents","FirebaseAppImpl","FirebaseAppImpl#constructor","component.Component$argument_1","FirebaseAppImpl#get__automaticDataCollectionEnabled","FirebaseAppImpl#set__automaticDataCollectionEnabled","FirebaseAppImpl#get__name","FirebaseAppImpl#get__options","FirebaseAppImpl#get__config","FirebaseAppImpl#get__container","FirebaseAppImpl#get__isDeleted","FirebaseAppImpl#set__isDeleted","FirebaseAppImpl#checkDestroyed","validateTokenTTL","FirebaseServerAppImpl","FirebaseServerAppImpl#constructor","FinalizationRegistry$argument_0","FirebaseServerAppImpl#toJSON","FirebaseServerAppImpl#get__refCount","FirebaseServerAppImpl#incRefCount","FirebaseServerAppImpl#decRefCount","FirebaseServerAppImpl#automaticCleanup","FirebaseServerAppImpl#get__settings","FirebaseServerAppImpl#checkDestroyed","initializeApp","initializeServerApp","hashCode","reduce$argument_0","getApp","getApps","deleteApp","app.container.getProviders.map$argument_0","registerVersion","onLog","setLogLevel","getDbPromise","idb.openDB$argument_2.upgrade","idb.openDB._catch$argument_0","readHeartbeatsFromIndexedDB","writeHeartbeatsToIndexedDB","computeKey","HeartbeatServiceImpl","HeartbeatServiceImpl#constructor","_storage.read.then$argument_0","HeartbeatServiceImpl#triggerHeartbeat","_heartbeatsCache.heartbeats.some$argument_0","HeartbeatServiceImpl#getHeartbeatsHeader","getUTCDateString","extractHeartbeatsForHeader","heartbeatsToSend.find$argument_0","HeartbeatStorageImpl","HeartbeatStorageImpl#constructor","HeartbeatStorageImpl#runIndexedDBEnvironmentCheck","util.validateIndexedDBOpenable.then$argument_0","util.validateIndexedDBOpenable.then._catch$argument_0","HeartbeatStorageImpl#read","HeartbeatStorageImpl#overwrite","HeartbeatStorageImpl#add","countBytes","getEarliestHeartbeatIdx","registerCoreComponents","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACyB;ICC;KDE;IEG;iBCK;SDQ;oBEC,sBF;KFE;CDC;AMS;CNG;AOqK;CPO;AQK;CRE;ASQ;CTe;AUU;CVQ;AWS;CXE;AYS;CZE;AaS;CbQ;AcS;CdK;AeM;CfE;AgBsD;ICC;mECQ,UD;KDC;IGC;KHG;IIC;KJG;IKC;KLG;IMC;KNG;IOC;KPG;IQC;KRE;ISC;KTE;IUC;KVE;IWK;KXI;ChBC;A4BqB;C5BiB;A6BC;ICC;kECiC;aDE;KDS;IGC;KHE;IIC;KJE;IKG;KLQ;IME;KNK;IOI;KPE;IQC;KRG;ISK;KTI;C7BC;AuCwB;CvCuC;AwCC;qBCmC;6BCC,wDD;KDC;CxCmB;A2C8B;C3CS;A4CK;C5CE;A6CkB;iBCiB,6BD;C7CG;A+CS;qE7ByB,4B6B;C/CC;AgDQ;ChDK;AiDU;CjDE;AkDsB;qBCG;aDkB;iBEC;SFI;ClDG;AqDC;CrDqB;AsDC;CtDmB;AuDC;CvDE;AwDoB;ICC;iECc;SDG;KDC;IGQ;sDCmB,wDD;KHkB;IKQ;KLmC;CxDC;A8DC;C9DI;A+DC;qDCQ,4CD;C/D+B;AiEC;ICC;KDG;IEC;sBCM,UD;uBEC,WF;KFE;IKI;KLc;IME;KNa;IOE;KPgB;CjEC;AyEM;CzEK;A0EK;C1Ea;A2EkB;kEzDC,qDyD;4DzDC,gDyD;C3EO;O4EY,0C5E"}},"type":"js/module"}]}