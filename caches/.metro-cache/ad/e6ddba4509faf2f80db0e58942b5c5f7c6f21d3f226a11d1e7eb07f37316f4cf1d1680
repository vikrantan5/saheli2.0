{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-location","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":42,"index":77}}],"key":"GNP7AGCKsBRUhlnTZ4lIPpbkT9E=","exportNames":["*"]}},{"name":"../config/supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":79},"end":{"line":3,"column":46,"index":125}}],"key":"tISGjAChzu0MylB2qV4f9enHnO8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":127},"end":{"line":4,"column":37,"index":164}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.stopLocationTracking = exports.startLocationTracking = exports.requestLocationPermissions = exports.isLocationTrackingActive = exports.getUserLocation = exports.getTrustedContactsLocations = exports.getCurrentLocation = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var Location = _interopRequireWildcard(require(_dependencyMap[2], \"expo-location\"));\n  var _supabase = require(_dependencyMap[3], \"../config/supabase\");\n  var _reactNative = require(_dependencyMap[4], \"react-native\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  // Live Location Tracking Service\n\n  var locationSubscription = null;\n  var isTracking = false;\n\n  // Request location permissions\n  var requestLocationPermissions = exports.requestLocationPermissions = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          foregroundStatus = _yield$Location$reque.status;\n        if (foregroundStatus !== 'granted') {\n          _reactNative.Alert.alert('Permission Denied', 'Location permission is required for safety features to work properly.', [{\n            text: 'OK'\n          }]);\n          return false;\n        }\n\n        // Request background location for continuous tracking\n        var _yield$Location$reque2 = yield Location.requestBackgroundPermissionsAsync(),\n          backgroundStatus = _yield$Location$reque2.status;\n        if (backgroundStatus !== 'granted') {\n          console.warn('Background location permission denied');\n          // Still return true as foreground is sufficient for basic functionality\n        }\n        return true;\n      } catch (error) {\n        console.error('Location permission error:', error);\n        return false;\n      }\n    });\n    return function requestLocationPermissions() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // Get current location once\n  var getCurrentLocation = exports.getCurrentLocation = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var hasPermission = yield requestLocationPermissions();\n        if (!hasPermission) return null;\n        var location = yield Location.getCurrentPositionAsync({\n          accuracy: Location.Accuracy.High\n        });\n        return {\n          latitude: location.coords.latitude,\n          longitude: location.coords.longitude,\n          accuracy: location.coords.accuracy,\n          timestamp: location.timestamp\n        };\n      } catch (error) {\n        console.error('Get current location error:', error);\n        return null;\n      }\n    });\n    return function getCurrentLocation() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Start continuous location tracking\n  var startLocationTracking = exports.startLocationTracking = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (userId) {\n      try {\n        if (isTracking) {\n          console.log('Location tracking already active');\n          return true;\n        }\n        var hasPermission = yield requestLocationPermissions();\n        if (!hasPermission) return false;\n\n        // Start watching location with high accuracy\n        locationSubscription = yield Location.watchPositionAsync({\n          accuracy: Location.Accuracy.High,\n          timeInterval: 30000,\n          // Update every 30 seconds\n          distanceInterval: 50 // Or when moved 50 meters\n        }, /*#__PURE__*/function () {\n          var _ref4 = (0, _asyncToGenerator2.default)(function* (location) {\n            try {\n              // Update location in Supabase\n              var _yield$supabase$from$ = yield _supabase.supabase.from('user_locations').upsert({\n                  user_id: userId,\n                  latitude: location.coords.latitude,\n                  longitude: location.coords.longitude,\n                  accuracy: location.coords.accuracy,\n                  updated_at: new Date().toISOString()\n                }, {\n                  onConflict: 'user_id'\n                }),\n                error = _yield$supabase$from$.error;\n              if (error) {\n                console.error('Error updating location:', error);\n              } else {\n                console.log('Location updated successfully');\n              }\n            } catch (error) {\n              console.error('Location update error:', error);\n            }\n          });\n          return function (_x2) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n        isTracking = true;\n        console.log('Location tracking started');\n        return true;\n      } catch (error) {\n        console.error('Start location tracking error:', error);\n        return false;\n      }\n    });\n    return function startLocationTracking(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  // Stop location tracking\n  var stopLocationTracking = () => {\n    if (locationSubscription) {\n      locationSubscription.remove();\n      locationSubscription = null;\n      isTracking = false;\n      console.log('Location tracking stopped');\n    }\n  };\n\n  // Get user's shared location from Supabase\n  exports.stopLocationTracking = stopLocationTracking;\n  var getUserLocation = exports.getUserLocation = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (userId) {\n      try {\n        var _yield$supabase$from$2 = yield _supabase.supabase.from('user_locations').select('*').eq('user_id', userId).single(),\n          data = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) {\n          console.error('Error fetching user location:', error);\n          return null;\n        }\n        return data;\n      } catch (error) {\n        console.error('Get user location error:', error);\n        return null;\n      }\n    });\n    return function getUserLocation(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  // Get all trusted contacts' locations\n  var getTrustedContactsLocations = exports.getTrustedContactsLocations = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (userId) {\n      try {\n        // First get emergency contacts\n        var _yield$supabase$from$3 = yield _supabase.supabase.from('emergency_contacts').select('user_id').eq('user_id', userId),\n          contacts = _yield$supabase$from$3.data,\n          contactsError = _yield$supabase$from$3.error;\n        if (contactsError) {\n          console.error('Error fetching contacts:', contactsError);\n          return [];\n        }\n\n        // Then get their locations\n        var contactIds = contacts.map(c => c.user_id);\n        var _yield$supabase$from$4 = yield _supabase.supabase.from('user_locations').select('*').in('user_id', contactIds),\n          locations = _yield$supabase$from$4.data,\n          locationsError = _yield$supabase$from$4.error;\n        if (locationsError) {\n          console.error('Error fetching locations:', locationsError);\n          return [];\n        }\n        return locations || [];\n      } catch (error) {\n        console.error('Get trusted contacts locations error:', error);\n        return [];\n      }\n    });\n    return function getTrustedContactsLocations(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var isLocationTrackingActive = () => isTracking;\n  exports.isLocationTrackingActive = isLocationTrackingActive;\n});","lineCount":197,"map":[[8,2,2,0],[8,6,2,0,"Location"],[8,14,2,0],[8,17,2,0,"_interopRequireWildcard"],[8,40,2,0],[8,41,2,0,"require"],[8,48,2,0],[8,49,2,0,"_dependencyMap"],[8,63,2,0],[9,2,3,0],[9,6,3,0,"_supabase"],[9,15,3,0],[9,18,3,0,"require"],[9,25,3,0],[9,26,3,0,"_dependencyMap"],[9,40,3,0],[10,2,4,0],[10,6,4,0,"_reactNative"],[10,18,4,0],[10,21,4,0,"require"],[10,28,4,0],[10,29,4,0,"_dependencyMap"],[10,43,4,0],[11,2,4,37],[11,11,4,37,"_interopRequireWildcard"],[11,35,4,37,"e"],[11,36,4,37],[11,38,4,37,"t"],[11,39,4,37],[11,68,4,37,"WeakMap"],[11,75,4,37],[11,81,4,37,"r"],[11,82,4,37],[11,89,4,37,"WeakMap"],[11,96,4,37],[11,100,4,37,"n"],[11,101,4,37],[11,108,4,37,"WeakMap"],[11,115,4,37],[11,127,4,37,"_interopRequireWildcard"],[11,150,4,37],[11,162,4,37,"_interopRequireWildcard"],[11,163,4,37,"e"],[11,164,4,37],[11,166,4,37,"t"],[11,167,4,37],[11,176,4,37,"t"],[11,177,4,37],[11,181,4,37,"e"],[11,182,4,37],[11,186,4,37,"e"],[11,187,4,37],[11,188,4,37,"__esModule"],[11,198,4,37],[11,207,4,37,"e"],[11,208,4,37],[11,214,4,37,"o"],[11,215,4,37],[11,217,4,37,"i"],[11,218,4,37],[11,220,4,37,"f"],[11,221,4,37],[11,226,4,37,"__proto__"],[11,235,4,37],[11,243,4,37,"default"],[11,250,4,37],[11,252,4,37,"e"],[11,253,4,37],[11,270,4,37,"e"],[11,271,4,37],[11,294,4,37,"e"],[11,295,4,37],[11,320,4,37,"e"],[11,321,4,37],[11,330,4,37,"f"],[11,331,4,37],[11,337,4,37,"o"],[11,338,4,37],[11,341,4,37,"t"],[11,342,4,37],[11,345,4,37,"n"],[11,346,4,37],[11,349,4,37,"r"],[11,350,4,37],[11,358,4,37,"o"],[11,359,4,37],[11,360,4,37,"has"],[11,363,4,37],[11,364,4,37,"e"],[11,365,4,37],[11,375,4,37,"o"],[11,376,4,37],[11,377,4,37,"get"],[11,380,4,37],[11,381,4,37,"e"],[11,382,4,37],[11,385,4,37,"o"],[11,386,4,37],[11,387,4,37,"set"],[11,390,4,37],[11,391,4,37,"e"],[11,392,4,37],[11,394,4,37,"f"],[11,395,4,37],[11,409,4,37,"_t"],[11,411,4,37],[11,415,4,37,"e"],[11,416,4,37],[11,432,4,37,"_t"],[11,434,4,37],[11,441,4,37,"hasOwnProperty"],[11,455,4,37],[11,456,4,37,"call"],[11,460,4,37],[11,461,4,37,"e"],[11,462,4,37],[11,464,4,37,"_t"],[11,466,4,37],[11,473,4,37,"i"],[11,474,4,37],[11,478,4,37,"o"],[11,479,4,37],[11,482,4,37,"Object"],[11,488,4,37],[11,489,4,37,"defineProperty"],[11,503,4,37],[11,508,4,37,"Object"],[11,514,4,37],[11,515,4,37,"getOwnPropertyDescriptor"],[11,539,4,37],[11,540,4,37,"e"],[11,541,4,37],[11,543,4,37,"_t"],[11,545,4,37],[11,552,4,37,"i"],[11,553,4,37],[11,554,4,37,"get"],[11,557,4,37],[11,561,4,37,"i"],[11,562,4,37],[11,563,4,37,"set"],[11,566,4,37],[11,570,4,37,"o"],[11,571,4,37],[11,572,4,37,"f"],[11,573,4,37],[11,575,4,37,"_t"],[11,577,4,37],[11,579,4,37,"i"],[11,580,4,37],[11,584,4,37,"f"],[11,585,4,37],[11,586,4,37,"_t"],[11,588,4,37],[11,592,4,37,"e"],[11,593,4,37],[11,594,4,37,"_t"],[11,596,4,37],[11,607,4,37,"f"],[11,608,4,37],[11,613,4,37,"e"],[11,614,4,37],[11,616,4,37,"t"],[11,617,4,37],[12,2,1,0],[14,2,6,0],[14,6,6,4,"locationSubscription"],[14,26,6,24],[14,29,6,27],[14,33,6,31],[15,2,7,0],[15,6,7,4,"isTracking"],[15,16,7,14],[15,19,7,17],[15,24,7,22],[17,2,9,0],[18,2,10,7],[18,6,10,13,"requestLocationPermissions"],[18,32,10,39],[18,35,10,39,"exports"],[18,42,10,39],[18,43,10,39,"requestLocationPermissions"],[18,69,10,39],[19,4,10,39],[19,8,10,39,"_ref"],[19,12,10,39],[19,19,10,39,"_asyncToGenerator2"],[19,37,10,39],[19,38,10,39,"default"],[19,45,10,39],[19,47,10,42],[19,60,10,54],[20,6,11,2],[20,10,11,6],[21,8,12,4],[21,12,12,4,"_yield$Location$reque"],[21,33,12,4],[21,42,12,47,"Location"],[21,50,12,55],[21,51,12,56,"requestForegroundPermissionsAsync"],[21,84,12,89],[21,85,12,90],[21,86,12,91],[22,10,12,20,"foregroundStatus"],[22,26,12,36],[22,29,12,36,"_yield$Location$reque"],[22,50,12,36],[22,51,12,12,"status"],[22,57,12,18],[23,8,14,4],[23,12,14,8,"foregroundStatus"],[23,28,14,24],[23,33,14,29],[23,42,14,38],[23,44,14,40],[24,10,15,6,"Alert"],[24,28,15,11],[24,29,15,12,"alert"],[24,34,15,17],[24,35,16,8],[24,54,16,27],[24,56,17,8],[24,127,17,79],[24,129,18,8],[24,130,18,9],[25,12,18,11,"text"],[25,16,18,15],[25,18,18,17],[26,10,18,22],[26,11,18,23],[26,12,19,6],[26,13,19,7],[27,10,20,6],[27,17,20,13],[27,22,20,18],[28,8,21,4],[30,8,23,4],[31,8,24,4],[31,12,24,4,"_yield$Location$reque2"],[31,34,24,4],[31,43,24,47,"Location"],[31,51,24,55],[31,52,24,56,"requestBackgroundPermissionsAsync"],[31,85,24,89],[31,86,24,90],[31,87,24,91],[32,10,24,20,"backgroundStatus"],[32,26,24,36],[32,29,24,36,"_yield$Location$reque2"],[32,51,24,36],[32,52,24,12,"status"],[32,58,24,18],[33,8,26,4],[33,12,26,8,"backgroundStatus"],[33,28,26,24],[33,33,26,29],[33,42,26,38],[33,44,26,40],[34,10,27,6,"console"],[34,17,27,13],[34,18,27,14,"warn"],[34,22,27,18],[34,23,27,19],[34,62,27,58],[34,63,27,59],[35,10,28,6],[36,8,29,4],[37,8,31,4],[37,15,31,11],[37,19,31,15],[38,6,32,2],[38,7,32,3],[38,8,32,4],[38,15,32,11,"error"],[38,20,32,16],[38,22,32,18],[39,8,33,4,"console"],[39,15,33,11],[39,16,33,12,"error"],[39,21,33,17],[39,22,33,18],[39,50,33,46],[39,52,33,48,"error"],[39,57,33,53],[39,58,33,54],[40,8,34,4],[40,15,34,11],[40,20,34,16],[41,6,35,2],[42,4,36,0],[42,5,36,1],[43,4,36,1],[43,20,10,13,"requestLocationPermissions"],[43,46,10,39,"requestLocationPermissions"],[43,47,10,39],[44,6,10,39],[44,13,10,39,"_ref"],[44,17,10,39],[44,18,10,39,"apply"],[44,23,10,39],[44,30,10,39,"arguments"],[44,39,10,39],[45,4,10,39],[46,2,10,39],[46,5,36,1],[48,2,38,0],[49,2,39,7],[49,6,39,13,"getCurrentLocation"],[49,24,39,31],[49,27,39,31,"exports"],[49,34,39,31],[49,35,39,31,"getCurrentLocation"],[49,53,39,31],[50,4,39,31],[50,8,39,31,"_ref2"],[50,13,39,31],[50,20,39,31,"_asyncToGenerator2"],[50,38,39,31],[50,39,39,31,"default"],[50,46,39,31],[50,48,39,34],[50,61,39,46],[51,6,40,2],[51,10,40,6],[52,8,41,4],[52,12,41,10,"hasPermission"],[52,25,41,23],[52,34,41,32,"requestLocationPermissions"],[52,60,41,58],[52,61,41,59],[52,62,41,60],[53,8,42,4],[53,12,42,8],[53,13,42,9,"hasPermission"],[53,26,42,22],[53,28,42,24],[53,35,42,31],[53,39,42,35],[54,8,44,4],[54,12,44,10,"location"],[54,20,44,18],[54,29,44,27,"Location"],[54,37,44,35],[54,38,44,36,"getCurrentPositionAsync"],[54,61,44,59],[54,62,44,60],[55,10,45,6,"accuracy"],[55,18,45,14],[55,20,45,16,"Location"],[55,28,45,24],[55,29,45,25,"Accuracy"],[55,37,45,33],[55,38,45,34,"High"],[56,8,46,4],[56,9,46,5],[56,10,46,6],[57,8,48,4],[57,15,48,11],[58,10,49,6,"latitude"],[58,18,49,14],[58,20,49,16,"location"],[58,28,49,24],[58,29,49,25,"coords"],[58,35,49,31],[58,36,49,32,"latitude"],[58,44,49,40],[59,10,50,6,"longitude"],[59,19,50,15],[59,21,50,17,"location"],[59,29,50,25],[59,30,50,26,"coords"],[59,36,50,32],[59,37,50,33,"longitude"],[59,46,50,42],[60,10,51,6,"accuracy"],[60,18,51,14],[60,20,51,16,"location"],[60,28,51,24],[60,29,51,25,"coords"],[60,35,51,31],[60,36,51,32,"accuracy"],[60,44,51,40],[61,10,52,6,"timestamp"],[61,19,52,15],[61,21,52,17,"location"],[61,29,52,25],[61,30,52,26,"timestamp"],[62,8,53,4],[62,9,53,5],[63,6,54,2],[63,7,54,3],[63,8,54,4],[63,15,54,11,"error"],[63,20,54,16],[63,22,54,18],[64,8,55,4,"console"],[64,15,55,11],[64,16,55,12,"error"],[64,21,55,17],[64,22,55,18],[64,51,55,47],[64,53,55,49,"error"],[64,58,55,54],[64,59,55,55],[65,8,56,4],[65,15,56,11],[65,19,56,15],[66,6,57,2],[67,4,58,0],[67,5,58,1],[68,4,58,1],[68,20,39,13,"getCurrentLocation"],[68,38,39,31,"getCurrentLocation"],[68,39,39,31],[69,6,39,31],[69,13,39,31,"_ref2"],[69,18,39,31],[69,19,39,31,"apply"],[69,24,39,31],[69,31,39,31,"arguments"],[69,40,39,31],[70,4,39,31],[71,2,39,31],[71,5,58,1],[73,2,60,0],[74,2,61,7],[74,6,61,13,"startLocationTracking"],[74,27,61,34],[74,30,61,34,"exports"],[74,37,61,34],[74,38,61,34,"startLocationTracking"],[74,59,61,34],[75,4,61,34],[75,8,61,34,"_ref3"],[75,13,61,34],[75,20,61,34,"_asyncToGenerator2"],[75,38,61,34],[75,39,61,34,"default"],[75,46,61,34],[75,48,61,37],[75,59,61,44,"userId"],[75,65,61,50],[75,67,61,55],[76,6,62,2],[76,10,62,6],[77,8,63,4],[77,12,63,8,"isTracking"],[77,22,63,18],[77,24,63,20],[78,10,64,6,"console"],[78,17,64,13],[78,18,64,14,"log"],[78,21,64,17],[78,22,64,18],[78,56,64,52],[78,57,64,53],[79,10,65,6],[79,17,65,13],[79,21,65,17],[80,8,66,4],[81,8,68,4],[81,12,68,10,"hasPermission"],[81,25,68,23],[81,34,68,32,"requestLocationPermissions"],[81,60,68,58],[81,61,68,59],[81,62,68,60],[82,8,69,4],[82,12,69,8],[82,13,69,9,"hasPermission"],[82,26,69,22],[82,28,69,24],[82,35,69,31],[82,40,69,36],[84,8,71,4],[85,8,72,4,"locationSubscription"],[85,28,72,24],[85,37,72,33,"Location"],[85,45,72,41],[85,46,72,42,"watchPositionAsync"],[85,64,72,60],[85,65,73,6],[86,10,74,8,"accuracy"],[86,18,74,16],[86,20,74,18,"Location"],[86,28,74,26],[86,29,74,27,"Accuracy"],[86,37,74,35],[86,38,74,36,"High"],[86,42,74,40],[87,10,75,8,"timeInterval"],[87,22,75,20],[87,24,75,22],[87,29,75,27],[88,10,75,29],[89,10,76,8,"distanceInterval"],[89,26,76,24],[89,28,76,26],[89,30,76,28],[89,31,76,30],[90,8,77,6],[90,9,77,7],[91,10,77,7],[91,14,77,7,"_ref4"],[91,19,77,7],[91,26,77,7,"_asyncToGenerator2"],[91,44,77,7],[91,45,77,7,"default"],[91,52,77,7],[91,54,78,6],[91,65,78,13,"location"],[91,73,78,21],[91,75,78,26],[92,12,79,8],[92,16,79,12],[93,14,80,10],[94,14,81,10],[94,18,81,10,"_yield$supabase$from$"],[94,39,81,10],[94,48,81,34,"supabase"],[94,66,81,42],[94,67,82,13,"from"],[94,71,82,17],[94,72,82,18],[94,88,82,34],[94,89,82,35],[94,90,83,13,"upsert"],[94,96,83,19],[94,97,83,20],[95,18,84,14,"user_id"],[95,25,84,21],[95,27,84,23,"userId"],[95,33,84,29],[96,18,85,14,"latitude"],[96,26,85,22],[96,28,85,24,"location"],[96,36,85,32],[96,37,85,33,"coords"],[96,43,85,39],[96,44,85,40,"latitude"],[96,52,85,48],[97,18,86,14,"longitude"],[97,27,86,23],[97,29,86,25,"location"],[97,37,86,33],[97,38,86,34,"coords"],[97,44,86,40],[97,45,86,41,"longitude"],[97,54,86,50],[98,18,87,14,"accuracy"],[98,26,87,22],[98,28,87,24,"location"],[98,36,87,32],[98,37,87,33,"coords"],[98,43,87,39],[98,44,87,40,"accuracy"],[98,52,87,48],[99,18,88,14,"updated_at"],[99,28,88,24],[99,30,88,26],[99,34,88,30,"Date"],[99,38,88,34],[99,39,88,35],[99,40,88,36],[99,41,88,37,"toISOString"],[99,52,88,48],[99,53,88,49],[100,16,89,12],[100,17,89,13],[100,19,89,15],[101,18,90,14,"onConflict"],[101,28,90,24],[101,30,90,26],[102,16,91,12],[102,17,91,13],[102,18,91,14],[103,16,81,18,"error"],[103,21,81,23],[103,24,81,23,"_yield$supabase$from$"],[103,45,81,23],[103,46,81,18,"error"],[103,51,81,23],[104,14,93,10],[104,18,93,14,"error"],[104,23,93,19],[104,25,93,21],[105,16,94,12,"console"],[105,23,94,19],[105,24,94,20,"error"],[105,29,94,25],[105,30,94,26],[105,56,94,52],[105,58,94,54,"error"],[105,63,94,59],[105,64,94,60],[106,14,95,10],[106,15,95,11],[106,21,95,17],[107,16,96,12,"console"],[107,23,96,19],[107,24,96,20,"log"],[107,27,96,23],[107,28,96,24],[107,59,96,55],[107,60,96,56],[108,14,97,10],[109,12,98,8],[109,13,98,9],[109,14,98,10],[109,21,98,17,"error"],[109,26,98,22],[109,28,98,24],[110,14,99,10,"console"],[110,21,99,17],[110,22,99,18,"error"],[110,27,99,23],[110,28,99,24],[110,52,99,48],[110,54,99,50,"error"],[110,59,99,55],[110,60,99,56],[111,12,100,8],[112,10,101,6],[112,11,101,7],[113,10,101,7],[113,27,101,7,"_x2"],[113,30,101,7],[114,12,101,7],[114,19,101,7,"_ref4"],[114,24,101,7],[114,25,101,7,"apply"],[114,30,101,7],[114,37,101,7,"arguments"],[114,46,101,7],[115,10,101,7],[116,8,101,7],[116,11,102,4],[116,12,102,5],[117,8,104,4,"isTracking"],[117,18,104,14],[117,21,104,17],[117,25,104,21],[118,8,105,4,"console"],[118,15,105,11],[118,16,105,12,"log"],[118,19,105,15],[118,20,105,16],[118,47,105,43],[118,48,105,44],[119,8,106,4],[119,15,106,11],[119,19,106,15],[120,6,107,2],[120,7,107,3],[120,8,107,4],[120,15,107,11,"error"],[120,20,107,16],[120,22,107,18],[121,8,108,4,"console"],[121,15,108,11],[121,16,108,12,"error"],[121,21,108,17],[121,22,108,18],[121,54,108,50],[121,56,108,52,"error"],[121,61,108,57],[121,62,108,58],[122,8,109,4],[122,15,109,11],[122,20,109,16],[123,6,110,2],[124,4,111,0],[124,5,111,1],[125,4,111,1],[125,20,61,13,"startLocationTracking"],[125,41,61,34,"startLocationTracking"],[125,42,61,34,"_x"],[125,44,61,34],[126,6,61,34],[126,13,61,34,"_ref3"],[126,18,61,34],[126,19,61,34,"apply"],[126,24,61,34],[126,31,61,34,"arguments"],[126,40,61,34],[127,4,61,34],[128,2,61,34],[128,5,111,1],[130,2,113,0],[131,2,114,7],[131,6,114,13,"stopLocationTracking"],[131,26,114,33],[131,29,114,36,"stopLocationTracking"],[131,30,114,36],[131,35,114,42],[132,4,115,2],[132,8,115,6,"locationSubscription"],[132,28,115,26],[132,30,115,28],[133,6,116,4,"locationSubscription"],[133,26,116,24],[133,27,116,25,"remove"],[133,33,116,31],[133,34,116,32],[133,35,116,33],[134,6,117,4,"locationSubscription"],[134,26,117,24],[134,29,117,27],[134,33,117,31],[135,6,118,4,"isTracking"],[135,16,118,14],[135,19,118,17],[135,24,118,22],[136,6,119,4,"console"],[136,13,119,11],[136,14,119,12,"log"],[136,17,119,15],[136,18,119,16],[136,45,119,43],[136,46,119,44],[137,4,120,2],[138,2,121,0],[138,3,121,1],[140,2,123,0],[141,2,123,0,"exports"],[141,9,123,0],[141,10,123,0,"stopLocationTracking"],[141,30,123,0],[141,33,123,0,"stopLocationTracking"],[141,53,123,0],[142,2,124,7],[142,6,124,13,"getUserLocation"],[142,21,124,28],[142,24,124,28,"exports"],[142,31,124,28],[142,32,124,28,"getUserLocation"],[142,47,124,28],[143,4,124,28],[143,8,124,28,"_ref5"],[143,13,124,28],[143,20,124,28,"_asyncToGenerator2"],[143,38,124,28],[143,39,124,28,"default"],[143,46,124,28],[143,48,124,31],[143,59,124,38,"userId"],[143,65,124,44],[143,67,124,49],[144,6,125,2],[144,10,125,6],[145,8,126,4],[145,12,126,4,"_yield$supabase$from$2"],[145,34,126,4],[145,43,126,34,"supabase"],[145,61,126,42],[145,62,127,7,"from"],[145,66,127,11],[145,67,127,12],[145,83,127,28],[145,84,127,29],[145,85,128,7,"select"],[145,91,128,13],[145,92,128,14],[145,95,128,17],[145,96,128,18],[145,97,129,7,"eq"],[145,99,129,9],[145,100,129,10],[145,109,129,19],[145,111,129,21,"userId"],[145,117,129,27],[145,118,129,28],[145,119,130,7,"single"],[145,125,130,13],[145,126,130,14],[145,127,130,15],[146,10,126,12,"data"],[146,14,126,16],[146,17,126,16,"_yield$supabase$from$2"],[146,39,126,16],[146,40,126,12,"data"],[146,44,126,16],[147,10,126,18,"error"],[147,15,126,23],[147,18,126,23,"_yield$supabase$from$2"],[147,40,126,23],[147,41,126,18,"error"],[147,46,126,23],[148,8,132,4],[148,12,132,8,"error"],[148,17,132,13],[148,19,132,15],[149,10,133,6,"console"],[149,17,133,13],[149,18,133,14,"error"],[149,23,133,19],[149,24,133,20],[149,55,133,51],[149,57,133,53,"error"],[149,62,133,58],[149,63,133,59],[150,10,134,6],[150,17,134,13],[150,21,134,17],[151,8,135,4],[152,8,137,4],[152,15,137,11,"data"],[152,19,137,15],[153,6,138,2],[153,7,138,3],[153,8,138,4],[153,15,138,11,"error"],[153,20,138,16],[153,22,138,18],[154,8,139,4,"console"],[154,15,139,11],[154,16,139,12,"error"],[154,21,139,17],[154,22,139,18],[154,48,139,44],[154,50,139,46,"error"],[154,55,139,51],[154,56,139,52],[155,8,140,4],[155,15,140,11],[155,19,140,15],[156,6,141,2],[157,4,142,0],[157,5,142,1],[158,4,142,1],[158,20,124,13,"getUserLocation"],[158,35,124,28,"getUserLocation"],[158,36,124,28,"_x3"],[158,39,124,28],[159,6,124,28],[159,13,124,28,"_ref5"],[159,18,124,28],[159,19,124,28,"apply"],[159,24,124,28],[159,31,124,28,"arguments"],[159,40,124,28],[160,4,124,28],[161,2,124,28],[161,5,142,1],[163,2,144,0],[164,2,145,7],[164,6,145,13,"getTrustedContactsLocations"],[164,33,145,40],[164,36,145,40,"exports"],[164,43,145,40],[164,44,145,40,"getTrustedContactsLocations"],[164,71,145,40],[165,4,145,40],[165,8,145,40,"_ref6"],[165,13,145,40],[165,20,145,40,"_asyncToGenerator2"],[165,38,145,40],[165,39,145,40,"default"],[165,46,145,40],[165,48,145,43],[165,59,145,50,"userId"],[165,65,145,56],[165,67,145,61],[166,6,146,2],[166,10,146,6],[167,8,147,4],[168,8,148,4],[168,12,148,4,"_yield$supabase$from$3"],[168,34,148,4],[168,43,148,59,"supabase"],[168,61,148,67],[168,62,149,7,"from"],[168,66,149,11],[168,67,149,12],[168,87,149,32],[168,88,149,33],[168,89,150,7,"select"],[168,95,150,13],[168,96,150,14],[168,105,150,23],[168,106,150,24],[168,107,151,7,"eq"],[168,109,151,9],[168,110,151,10],[168,119,151,19],[168,121,151,21,"userId"],[168,127,151,27],[168,128,151,28],[169,10,148,18,"contacts"],[169,18,148,26],[169,21,148,26,"_yield$supabase$from$3"],[169,43,148,26],[169,44,148,12,"data"],[169,48,148,16],[170,10,148,35,"contactsError"],[170,23,148,48],[170,26,148,48,"_yield$supabase$from$3"],[170,48,148,48],[170,49,148,28,"error"],[170,54,148,33],[171,8,153,4],[171,12,153,8,"contactsError"],[171,25,153,21],[171,27,153,23],[172,10,154,6,"console"],[172,17,154,13],[172,18,154,14,"error"],[172,23,154,19],[172,24,154,20],[172,50,154,46],[172,52,154,48,"contactsError"],[172,65,154,61],[172,66,154,62],[173,10,155,6],[173,17,155,13],[173,19,155,15],[174,8,156,4],[176,8,158,4],[177,8,159,4],[177,12,159,10,"contactIds"],[177,22,159,20],[177,25,159,23,"contacts"],[177,33,159,31],[177,34,159,32,"map"],[177,37,159,35],[177,38,159,36,"c"],[177,39,159,37],[177,43,159,41,"c"],[177,44,159,42],[177,45,159,43,"user_id"],[177,52,159,50],[177,53,159,51],[178,8,161,4],[178,12,161,4,"_yield$supabase$from$4"],[178,34,161,4],[178,43,161,61,"supabase"],[178,61,161,69],[178,62,162,7,"from"],[178,66,162,11],[178,67,162,12],[178,83,162,28],[178,84,162,29],[178,85,163,7,"select"],[178,91,163,13],[178,92,163,14],[178,95,163,17],[178,96,163,18],[178,97,164,7,"in"],[178,99,164,9],[178,100,164,10],[178,109,164,19],[178,111,164,21,"contactIds"],[178,121,164,31],[178,122,164,32],[179,10,161,18,"locations"],[179,19,161,27],[179,22,161,27,"_yield$supabase$from$4"],[179,44,161,27],[179,45,161,12,"data"],[179,49,161,16],[180,10,161,36,"locationsError"],[180,24,161,50],[180,27,161,50,"_yield$supabase$from$4"],[180,49,161,50],[180,50,161,29,"error"],[180,55,161,34],[181,8,166,4],[181,12,166,8,"locationsError"],[181,26,166,22],[181,28,166,24],[182,10,167,6,"console"],[182,17,167,13],[182,18,167,14,"error"],[182,23,167,19],[182,24,167,20],[182,51,167,47],[182,53,167,49,"locationsError"],[182,67,167,63],[182,68,167,64],[183,10,168,6],[183,17,168,13],[183,19,168,15],[184,8,169,4],[185,8,171,4],[185,15,171,11,"locations"],[185,24,171,20],[185,28,171,24],[185,30,171,26],[186,6,172,2],[186,7,172,3],[186,8,172,4],[186,15,172,11,"error"],[186,20,172,16],[186,22,172,18],[187,8,173,4,"console"],[187,15,173,11],[187,16,173,12,"error"],[187,21,173,17],[187,22,173,18],[187,61,173,57],[187,63,173,59,"error"],[187,68,173,64],[187,69,173,65],[188,8,174,4],[188,15,174,11],[188,17,174,13],[189,6,175,2],[190,4,176,0],[190,5,176,1],[191,4,176,1],[191,20,145,13,"getTrustedContactsLocations"],[191,47,145,40,"getTrustedContactsLocations"],[191,48,145,40,"_x4"],[191,51,145,40],[192,6,145,40],[192,13,145,40,"_ref6"],[192,18,145,40],[192,19,145,40,"apply"],[192,24,145,40],[192,31,145,40,"arguments"],[192,40,145,40],[193,4,145,40],[194,2,145,40],[194,5,176,1],[195,2,178,7],[195,6,178,13,"isLocationTrackingActive"],[195,30,178,37],[195,33,178,40,"isLocationTrackingActive"],[195,34,178,40],[195,39,178,46,"isTracking"],[195,49,178,56],[196,2,178,57,"exports"],[196,9,178,57],[196,10,178,57,"isLocationTrackingActive"],[196,34,178,57],[196,37,178,57,"isLocationTrackingActive"],[196,61,178,57],[197,0,178,57],[197,3]],"functionMap":{"names":["<global>","requestLocationPermissions","getCurrentLocation","startLocationTracking","Location.watchPositionAsync$argument_1","stopLocationTracking","getUserLocation","getTrustedContactsLocations","contacts.map$argument_0","isLocationTrackingActive"],"mappings":"AAA;0CCS;CD0B;kCEG;CFmB;qCGG;MCiB;ODuB;CHU;oCKG;CLO;+BMG;CNkB;2COG;oCCc,cD;CPiB;wCSE,gBT"}},"type":"js/module"}]}