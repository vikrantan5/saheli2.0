{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  /**\n   * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n   *\n   * @example\n   *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n   *      return [1000, 5000, 10000][tries - 1] || 10000\n   *    })\n   *    reconnectTimer.scheduleTimeout() // fires after 1000\n   *    reconnectTimer.scheduleTimeout() // fires after 5000\n   *    reconnectTimer.reset()\n   *    reconnectTimer.scheduleTimeout() // fires after 1000\n   */\n  class Timer {\n    constructor(callback, timerCalc) {\n      this.callback = callback;\n      this.timerCalc = timerCalc;\n      this.timer = undefined;\n      this.tries = 0;\n      this.callback = callback;\n      this.timerCalc = timerCalc;\n    }\n    reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n      clearTimeout(this.timer);\n      this.timer = setTimeout(() => {\n        this.tries = this.tries + 1;\n        this.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }\n  exports.default = Timer;\n});","lineCount":42,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,2,13,15],[18,8,13,21,"Timer"],[18,13,13,26],[18,14,13,27],[19,4,14,4,"constructor"],[19,15,14,15,"constructor"],[19,16,14,16,"callback"],[19,24,14,24],[19,26,14,26,"timerCalc"],[19,35,14,35],[19,37,14,37],[20,6,15,8],[20,10,15,12],[20,11,15,13,"callback"],[20,19,15,21],[20,22,15,24,"callback"],[20,30,15,32],[21,6,16,8],[21,10,16,12],[21,11,16,13,"timerCalc"],[21,20,16,22],[21,23,16,25,"timerCalc"],[21,32,16,34],[22,6,17,8],[22,10,17,12],[22,11,17,13,"timer"],[22,16,17,18],[22,19,17,21,"undefined"],[22,28,17,30],[23,6,18,8],[23,10,18,12],[23,11,18,13,"tries"],[23,16,18,18],[23,19,18,21],[23,20,18,22],[24,6,19,8],[24,10,19,12],[24,11,19,13,"callback"],[24,19,19,21],[24,22,19,24,"callback"],[24,30,19,32],[25,6,20,8],[25,10,20,12],[25,11,20,13,"timerCalc"],[25,20,20,22],[25,23,20,25,"timerCalc"],[25,32,20,34],[26,4,21,4],[27,4,22,4,"reset"],[27,9,22,9,"reset"],[27,10,22,9],[27,12,22,12],[28,6,23,8],[28,10,23,12],[28,11,23,13,"tries"],[28,16,23,18],[28,19,23,21],[28,20,23,22],[29,6,24,8,"clearTimeout"],[29,18,24,20],[29,19,24,21],[29,23,24,25],[29,24,24,26,"timer"],[29,29,24,31],[29,30,24,32],[30,6,25,8],[30,10,25,12],[30,11,25,13,"timer"],[30,16,25,18],[30,19,25,21,"undefined"],[30,28,25,30],[31,4,26,4],[32,4,27,4],[33,4,28,4,"scheduleTimeout"],[33,19,28,19,"scheduleTimeout"],[33,20,28,19],[33,22,28,22],[34,6,29,8,"clearTimeout"],[34,18,29,20],[34,19,29,21],[34,23,29,25],[34,24,29,26,"timer"],[34,29,29,31],[34,30,29,32],[35,6,30,8],[35,10,30,12],[35,11,30,13,"timer"],[35,16,30,18],[35,19,30,21,"setTimeout"],[35,29,30,31],[35,30,30,32],[35,36,30,38],[36,8,31,12],[36,12,31,16],[36,13,31,17,"tries"],[36,18,31,22],[36,21,31,25],[36,25,31,29],[36,26,31,30,"tries"],[36,31,31,35],[36,34,31,38],[36,35,31,39],[37,8,32,12],[37,12,32,16],[37,13,32,17,"callback"],[37,21,32,25],[37,22,32,26],[37,23,32,27],[38,6,33,8],[38,7,33,9],[38,9,33,11],[38,13,33,15],[38,14,33,16,"timerCalc"],[38,23,33,25],[38,24,33,26],[38,28,33,30],[38,29,33,31,"tries"],[38,34,33,36],[38,37,33,39],[38,38,33,40],[38,39,33,41],[38,40,33,42],[39,4,34,4],[40,2,35,0],[41,2,35,1,"exports"],[41,9,35,1],[41,10,35,1,"default"],[41,17,35,1],[41,20,35,1,"Timer"],[41,25,35,1],[42,0,35,1],[42,3]],"functionMap":{"names":["<global>","Timer","Timer#constructor","Timer#reset","Timer#scheduleTimeout","setTimeout$argument_0"],"mappings":"AAA;eCY;ICC;KDO;IEC;KFI;IGE;gCCE;SDG;KHC;CDC"}},"type":"js/module"}]}