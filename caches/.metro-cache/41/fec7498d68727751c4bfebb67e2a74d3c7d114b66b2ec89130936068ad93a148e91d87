{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"]}},{"name":"../lib/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":51,"index":86}}],"key":"waQwSI03ELOcvO96++KD0MVyAp4=","exportNames":["*"]}},{"name":"../lib/errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":87},"end":{"line":3,"column":47,"index":134}}],"key":"tudpaQjH3OjVUtpmjZhVLT9U2eg=","exportNames":["*"]}},{"name":"../lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":135},"end":{"line":4,"column":49,"index":184}}],"key":"/wMuRavEihVn+ROyUD1wSDV6K9s=","exportNames":["*"]}},{"name":"../lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":185},"end":{"line":5,"column":46,"index":231}}],"key":"MBha6f1BCecZ/poT97RGOQKH7kw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _constants = require(_dependencyMap[1], \"../lib/constants\");\n  var _errors = require(_dependencyMap[2], \"../lib/errors\");\n  var _fetch = require(_dependencyMap[3], \"../lib/fetch\");\n  var _helpers = require(_dependencyMap[4], \"../lib/helpers\");\n  /**\n   * API class for managing Analytics Buckets using Iceberg tables\n   * Provides methods for creating, listing, and deleting analytics buckets\n   */\n  class StorageAnalyticsApi {\n    /**\n     * Creates a new StorageAnalyticsApi instance\n     * @param url - The base URL for the storage API\n     * @param headers - HTTP headers to include in requests\n     * @param fetch - Optional custom fetch implementation\n     */\n    constructor(url, headers = {}, fetch) {\n      this.shouldThrowOnError = false;\n      this.url = url.replace(/\\/$/, '');\n      this.headers = Object.assign(Object.assign({}, _constants.DEFAULT_HEADERS), headers);\n      this.fetch = (0, _helpers.resolveFetch)(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them in the response\n     * When enabled, failed operations will throw instead of returning { data: null, error }\n     *\n     * @returns This instance for method chaining\n     */\n    throwOnError() {\n      this.shouldThrowOnError = true;\n      return this;\n    }\n    /**\n     * Creates a new analytics bucket using Iceberg tables\n     * Analytics buckets are optimized for analytical queries and data processing\n     *\n     * @param name A unique name for the bucket you are creating\n     * @returns Promise with newly created bucket name or error\n     *\n     * @example\n     * ```typescript\n     * const { data, error } = await storage.analytics.createBucket('analytics-data')\n     * if (error) {\n     *   console.error('Failed to create analytics bucket:', error.message)\n     * } else {\n     *   console.log('Created bucket:', data.name)\n     * }\n     * ```\n     */\n    createBucket(name) {\n      return (0, _tslib.__awaiter)(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, _fetch.post)(this.fetch, `${this.url}/bucket`, {\n            name\n          }, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, _errors.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Retrieves the details of all Analytics Storage buckets within an existing project\n     * Only returns buckets of type 'ANALYTICS'\n     *\n     * @param options Query parameters for listing buckets\n     * @param options.limit Maximum number of buckets to return\n     * @param options.offset Number of buckets to skip\n     * @param options.sortColumn Column to sort by ('id', 'name', 'created_at', 'updated_at')\n     * @param options.sortOrder Sort order ('asc' or 'desc')\n     * @param options.search Search term to filter bucket names\n     * @returns Promise with list of analytics buckets or error\n     *\n     * @example\n     * ```typescript\n     * const { data, error } = await storage.analytics.listBuckets({\n     *   limit: 10,\n     *   offset: 0,\n     *   sortColumn: 'created_at',\n     *   sortOrder: 'desc',\n     *   search: 'analytics'\n     * })\n     * if (data) {\n     *   console.log('Found analytics buckets:', data.length)\n     *   data.forEach(bucket => console.log(`- ${bucket.name}`))\n     * }\n     * ```\n     */\n    listBuckets(options) {\n      return (0, _tslib.__awaiter)(this, void 0, void 0, function* () {\n        try {\n          // Build query string from options\n          const queryParams = new URLSearchParams();\n          if ((options === null || options === void 0 ? void 0 : options.limit) !== undefined) queryParams.set('limit', options.limit.toString());\n          if ((options === null || options === void 0 ? void 0 : options.offset) !== undefined) queryParams.set('offset', options.offset.toString());\n          if (options === null || options === void 0 ? void 0 : options.sortColumn) queryParams.set('sortColumn', options.sortColumn);\n          if (options === null || options === void 0 ? void 0 : options.sortOrder) queryParams.set('sortOrder', options.sortOrder);\n          if (options === null || options === void 0 ? void 0 : options.search) queryParams.set('search', options.search);\n          const queryString = queryParams.toString();\n          const url = queryString ? `${this.url}/bucket?${queryString}` : `${this.url}/bucket`;\n          const data = yield (0, _fetch.get)(this.fetch, url, {\n            headers: this.headers\n          });\n          // Filter to only return analytics buckets\n          const analyticsBuckets = Array.isArray(data) ? data.filter(bucket => bucket.type === 'ANALYTICS') : [];\n          return {\n            data: analyticsBuckets,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, _errors.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Deletes an existing analytics bucket\n     * A bucket can't be deleted with existing objects inside it\n     * You must first empty the bucket before deletion\n     *\n     * @param bucketId The unique identifier of the bucket you would like to delete\n     * @returns Promise with success message or error\n     *\n     * @example\n     * ```typescript\n     * const { data, error } = await analyticsApi.deleteBucket('old-analytics-bucket')\n     * if (error) {\n     *   console.error('Failed to delete bucket:', error.message)\n     * } else {\n     *   console.log('Bucket deleted successfully:', data.message)\n     * }\n     * ```\n     */\n    deleteBucket(bucketId) {\n      return (0, _tslib.__awaiter)(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, _fetch.remove)(this.fetch, `${this.url}/bucket/${bucketId}`, {}, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, _errors.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n  }\n  exports.default = StorageAnalyticsApi;\n});","lineCount":187,"map":[[6,2,1,0],[6,6,1,0,"_tslib"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_errors"],[8,13,3,0],[8,16,3,0,"require"],[8,23,3,0],[8,24,3,0,"_dependencyMap"],[8,38,3,0],[9,2,4,0],[9,6,4,0,"_fetch"],[9,12,4,0],[9,15,4,0,"require"],[9,22,4,0],[9,23,4,0,"_dependencyMap"],[9,37,4,0],[10,2,5,0],[10,6,5,0,"_helpers"],[10,14,5,0],[10,17,5,0,"require"],[10,24,5,0],[10,25,5,0,"_dependencyMap"],[10,39,5,0],[11,2,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,2,10,15],[15,8,10,21,"StorageAnalyticsApi"],[15,27,10,40],[15,28,10,41],[16,4,11,4],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,4,17,4,"constructor"],[22,15,17,15,"constructor"],[22,16,17,16,"url"],[22,19,17,19],[22,21,17,21,"headers"],[22,28,17,28],[22,31,17,31],[22,32,17,32],[22,33,17,33],[22,35,17,35,"fetch"],[22,40,17,40],[22,42,17,42],[23,6,18,8],[23,10,18,12],[23,11,18,13,"shouldThrowOnError"],[23,29,18,31],[23,32,18,34],[23,37,18,39],[24,6,19,8],[24,10,19,12],[24,11,19,13,"url"],[24,14,19,16],[24,17,19,19,"url"],[24,20,19,22],[24,21,19,23,"replace"],[24,28,19,30],[24,29,19,31],[24,34,19,36],[24,36,19,38],[24,38,19,40],[24,39,19,41],[25,6,20,8],[25,10,20,12],[25,11,20,13,"headers"],[25,18,20,20],[25,21,20,23,"Object"],[25,27,20,29],[25,28,20,30,"assign"],[25,34,20,36],[25,35,20,37,"Object"],[25,41,20,43],[25,42,20,44,"assign"],[25,48,20,50],[25,49,20,51],[25,50,20,52],[25,51,20,53],[25,53,20,55,"DEFAULT_HEADERS"],[25,79,20,70],[25,80,20,71],[25,82,20,73,"headers"],[25,89,20,80],[25,90,20,81],[26,6,21,8],[26,10,21,12],[26,11,21,13,"fetch"],[26,16,21,18],[26,19,21,21],[26,23,21,21,"resolveFetch"],[26,44,21,33],[26,46,21,34,"fetch"],[26,51,21,39],[26,52,21,40],[27,4,22,4],[28,4,23,4],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,4,29,4,"throwOnError"],[34,16,29,16,"throwOnError"],[34,17,29,16],[34,19,29,19],[35,6,30,8],[35,10,30,12],[35,11,30,13,"shouldThrowOnError"],[35,29,30,31],[35,32,30,34],[35,36,30,38],[36,6,31,8],[36,13,31,15],[36,17,31,19],[37,4,32,4],[38,4,33,4],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,4,50,4,"createBucket"],[55,16,50,16,"createBucket"],[55,17,50,17,"name"],[55,21,50,21],[55,23,50,23],[56,6,51,8],[56,13,51,15],[56,17,51,15,"__awaiter"],[56,33,51,24],[56,35,51,25],[56,39,51,29],[56,41,51,31],[56,46,51,36],[56,47,51,37],[56,49,51,39],[56,54,51,44],[56,55,51,45],[56,57,51,47],[56,70,51,60],[57,8,52,12],[57,12,52,16],[58,10,53,16],[58,16,53,22,"data"],[58,20,53,26],[58,23,53,29],[58,29,53,35],[58,33,53,35,"post"],[58,44,53,39],[58,46,53,40],[58,50,53,44],[58,51,53,45,"fetch"],[58,56,53,50],[58,58,53,52],[58,61,53,55],[58,65,53,59],[58,66,53,60,"url"],[58,69,53,63],[58,78,53,72],[58,80,53,74],[59,12,53,76,"name"],[60,10,53,81],[60,11,53,82],[60,13,53,84],[61,12,53,86,"headers"],[61,19,53,93],[61,21,53,95],[61,25,53,99],[61,26,53,100,"headers"],[62,10,53,108],[62,11,53,109],[62,12,53,110],[63,10,54,16],[63,17,54,23],[64,12,54,25,"data"],[64,16,54,29],[65,12,54,31,"error"],[65,17,54,36],[65,19,54,38],[66,10,54,43],[66,11,54,44],[67,8,55,12],[67,9,55,13],[67,10,56,12],[67,17,56,19,"error"],[67,22,56,24],[67,24,56,26],[68,10,57,16],[68,14,57,20],[68,18,57,24],[68,19,57,25,"shouldThrowOnError"],[68,37,57,43],[68,39,57,45],[69,12,58,20],[69,18,58,26,"error"],[69,23,58,31],[70,10,59,16],[71,10,60,16],[71,14,60,20],[71,18,60,20,"isStorageError"],[71,40,60,34],[71,42,60,35,"error"],[71,47,60,40],[71,48,60,41],[71,50,60,43],[72,12,61,20],[72,19,61,27],[73,14,61,29,"data"],[73,18,61,33],[73,20,61,35],[73,24,61,39],[74,14,61,41,"error"],[75,12,61,47],[75,13,61,48],[76,10,62,16],[77,10,63,16],[77,16,63,22,"error"],[77,21,63,27],[78,8,64,12],[79,6,65,8],[79,7,65,9],[79,8,65,10],[80,4,66,4],[81,4,67,4],[82,0,68,0],[83,0,69,0],[84,0,70,0],[85,0,71,0],[86,0,72,0],[87,0,73,0],[88,0,74,0],[89,0,75,0],[90,0,76,0],[91,0,77,0],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,0,84,0],[99,0,85,0],[100,0,86,0],[101,0,87,0],[102,0,88,0],[103,0,89,0],[104,0,90,0],[105,0,91,0],[106,0,92,0],[107,0,93,0],[108,4,94,4,"listBuckets"],[108,15,94,15,"listBuckets"],[108,16,94,16,"options"],[108,23,94,23],[108,25,94,25],[109,6,95,8],[109,13,95,15],[109,17,95,15,"__awaiter"],[109,33,95,24],[109,35,95,25],[109,39,95,29],[109,41,95,31],[109,46,95,36],[109,47,95,37],[109,49,95,39],[109,54,95,44],[109,55,95,45],[109,57,95,47],[109,70,95,60],[110,8,96,12],[110,12,96,16],[111,10,97,16],[112,10,98,16],[112,16,98,22,"queryParams"],[112,27,98,33],[112,30,98,36],[112,34,98,40,"URLSearchParams"],[112,49,98,55],[112,50,98,56],[112,51,98,57],[113,10,99,16],[113,14,99,20],[113,15,99,21,"options"],[113,22,99,28],[113,27,99,33],[113,31,99,37],[113,35,99,41,"options"],[113,42,99,48],[113,47,99,53],[113,52,99,58],[113,53,99,59],[113,56,99,62],[113,61,99,67],[113,62,99,68],[113,65,99,71,"options"],[113,72,99,78],[113,73,99,79,"limit"],[113,78,99,84],[113,84,99,90,"undefined"],[113,93,99,99],[113,95,100,20,"queryParams"],[113,106,100,31],[113,107,100,32,"set"],[113,110,100,35],[113,111,100,36],[113,118,100,43],[113,120,100,45,"options"],[113,127,100,52],[113,128,100,53,"limit"],[113,133,100,58],[113,134,100,59,"toString"],[113,142,100,67],[113,143,100,68],[113,144,100,69],[113,145,100,70],[114,10,101,16],[114,14,101,20],[114,15,101,21,"options"],[114,22,101,28],[114,27,101,33],[114,31,101,37],[114,35,101,41,"options"],[114,42,101,48],[114,47,101,53],[114,52,101,58],[114,53,101,59],[114,56,101,62],[114,61,101,67],[114,62,101,68],[114,65,101,71,"options"],[114,72,101,78],[114,73,101,79,"offset"],[114,79,101,85],[114,85,101,91,"undefined"],[114,94,101,100],[114,96,102,20,"queryParams"],[114,107,102,31],[114,108,102,32,"set"],[114,111,102,35],[114,112,102,36],[114,120,102,44],[114,122,102,46,"options"],[114,129,102,53],[114,130,102,54,"offset"],[114,136,102,60],[114,137,102,61,"toString"],[114,145,102,69],[114,146,102,70],[114,147,102,71],[114,148,102,72],[115,10,103,16],[115,14,103,20,"options"],[115,21,103,27],[115,26,103,32],[115,30,103,36],[115,34,103,40,"options"],[115,41,103,47],[115,46,103,52],[115,51,103,57],[115,52,103,58],[115,55,103,61],[115,60,103,66],[115,61,103,67],[115,64,103,70,"options"],[115,71,103,77],[115,72,103,78,"sortColumn"],[115,82,103,88],[115,84,104,20,"queryParams"],[115,95,104,31],[115,96,104,32,"set"],[115,99,104,35],[115,100,104,36],[115,112,104,48],[115,114,104,50,"options"],[115,121,104,57],[115,122,104,58,"sortColumn"],[115,132,104,68],[115,133,104,69],[116,10,105,16],[116,14,105,20,"options"],[116,21,105,27],[116,26,105,32],[116,30,105,36],[116,34,105,40,"options"],[116,41,105,47],[116,46,105,52],[116,51,105,57],[116,52,105,58],[116,55,105,61],[116,60,105,66],[116,61,105,67],[116,64,105,70,"options"],[116,71,105,77],[116,72,105,78,"sortOrder"],[116,81,105,87],[116,83,106,20,"queryParams"],[116,94,106,31],[116,95,106,32,"set"],[116,98,106,35],[116,99,106,36],[116,110,106,47],[116,112,106,49,"options"],[116,119,106,56],[116,120,106,57,"sortOrder"],[116,129,106,66],[116,130,106,67],[117,10,107,16],[117,14,107,20,"options"],[117,21,107,27],[117,26,107,32],[117,30,107,36],[117,34,107,40,"options"],[117,41,107,47],[117,46,107,52],[117,51,107,57],[117,52,107,58],[117,55,107,61],[117,60,107,66],[117,61,107,67],[117,64,107,70,"options"],[117,71,107,77],[117,72,107,78,"search"],[117,78,107,84],[117,80,108,20,"queryParams"],[117,91,108,31],[117,92,108,32,"set"],[117,95,108,35],[117,96,108,36],[117,104,108,44],[117,106,108,46,"options"],[117,113,108,53],[117,114,108,54,"search"],[117,120,108,60],[117,121,108,61],[118,10,109,16],[118,16,109,22,"queryString"],[118,27,109,33],[118,30,109,36,"queryParams"],[118,41,109,47],[118,42,109,48,"toString"],[118,50,109,56],[118,51,109,57],[118,52,109,58],[119,10,110,16],[119,16,110,22,"url"],[119,19,110,25],[119,22,110,28,"queryString"],[119,33,110,39],[119,36,110,42],[119,39,110,45],[119,43,110,49],[119,44,110,50,"url"],[119,47,110,53],[119,58,110,64,"queryString"],[119,69,110,75],[119,71,110,77],[119,74,110,80],[119,77,110,83],[119,81,110,87],[119,82,110,88,"url"],[119,85,110,91],[119,94,110,100],[120,10,111,16],[120,16,111,22,"data"],[120,20,111,26],[120,23,111,29],[120,29,111,35],[120,33,111,35,"get"],[120,43,111,38],[120,45,111,39],[120,49,111,43],[120,50,111,44,"fetch"],[120,55,111,49],[120,57,111,51,"url"],[120,60,111,54],[120,62,111,56],[121,12,111,58,"headers"],[121,19,111,65],[121,21,111,67],[121,25,111,71],[121,26,111,72,"headers"],[122,10,111,80],[122,11,111,81],[122,12,111,82],[123,10,112,16],[124,10,113,16],[124,16,113,22,"analyticsBuckets"],[124,32,113,38],[124,35,113,41,"Array"],[124,40,113,46],[124,41,113,47,"isArray"],[124,48,113,54],[124,49,113,55,"data"],[124,53,113,59],[124,54,113,60],[124,57,114,22,"data"],[124,61,114,26],[124,62,114,27,"filter"],[124,68,114,33],[124,69,114,35,"bucket"],[124,75,114,41],[124,79,114,46,"bucket"],[124,85,114,52],[124,86,114,53,"type"],[124,90,114,57],[124,95,114,62],[124,106,114,73],[124,107,114,74],[124,110,115,22],[124,112,115,24],[125,10,116,16],[125,17,116,23],[126,12,116,25,"data"],[126,16,116,29],[126,18,116,31,"analyticsBuckets"],[126,34,116,47],[127,12,116,49,"error"],[127,17,116,54],[127,19,116,56],[128,10,116,61],[128,11,116,62],[129,8,117,12],[129,9,117,13],[129,10,118,12],[129,17,118,19,"error"],[129,22,118,24],[129,24,118,26],[130,10,119,16],[130,14,119,20],[130,18,119,24],[130,19,119,25,"shouldThrowOnError"],[130,37,119,43],[130,39,119,45],[131,12,120,20],[131,18,120,26,"error"],[131,23,120,31],[132,10,121,16],[133,10,122,16],[133,14,122,20],[133,18,122,20,"isStorageError"],[133,40,122,34],[133,42,122,35,"error"],[133,47,122,40],[133,48,122,41],[133,50,122,43],[134,12,123,20],[134,19,123,27],[135,14,123,29,"data"],[135,18,123,33],[135,20,123,35],[135,24,123,39],[136,14,123,41,"error"],[137,12,123,47],[137,13,123,48],[138,10,124,16],[139,10,125,16],[139,16,125,22,"error"],[139,21,125,27],[140,8,126,12],[141,6,127,8],[141,7,127,9],[141,8,127,10],[142,4,128,4],[143,4,129,4],[144,0,130,0],[145,0,131,0],[146,0,132,0],[147,0,133,0],[148,0,134,0],[149,0,135,0],[150,0,136,0],[151,0,137,0],[152,0,138,0],[153,0,139,0],[154,0,140,0],[155,0,141,0],[156,0,142,0],[157,0,143,0],[158,0,144,0],[159,0,145,0],[160,0,146,0],[161,4,147,4,"deleteBucket"],[161,16,147,16,"deleteBucket"],[161,17,147,17,"bucketId"],[161,25,147,25],[161,27,147,27],[162,6,148,8],[162,13,148,15],[162,17,148,15,"__awaiter"],[162,33,148,24],[162,35,148,25],[162,39,148,29],[162,41,148,31],[162,46,148,36],[162,47,148,37],[162,49,148,39],[162,54,148,44],[162,55,148,45],[162,57,148,47],[162,70,148,60],[163,8,149,12],[163,12,149,16],[164,10,150,16],[164,16,150,22,"data"],[164,20,150,26],[164,23,150,29],[164,29,150,35],[164,33,150,35,"remove"],[164,46,150,41],[164,48,150,42],[164,52,150,46],[164,53,150,47,"fetch"],[164,58,150,52],[164,60,150,54],[164,63,150,57],[164,67,150,61],[164,68,150,62,"url"],[164,71,150,65],[164,82,150,76,"bucketId"],[164,90,150,84],[164,92,150,86],[164,94,150,88],[164,95,150,89],[164,96,150,90],[164,98,150,92],[165,12,150,94,"headers"],[165,19,150,101],[165,21,150,103],[165,25,150,107],[165,26,150,108,"headers"],[166,10,150,116],[166,11,150,117],[166,12,150,118],[167,10,151,16],[167,17,151,23],[168,12,151,25,"data"],[168,16,151,29],[169,12,151,31,"error"],[169,17,151,36],[169,19,151,38],[170,10,151,43],[170,11,151,44],[171,8,152,12],[171,9,152,13],[171,10,153,12],[171,17,153,19,"error"],[171,22,153,24],[171,24,153,26],[172,10,154,16],[172,14,154,20],[172,18,154,24],[172,19,154,25,"shouldThrowOnError"],[172,37,154,43],[172,39,154,45],[173,12,155,20],[173,18,155,26,"error"],[173,23,155,31],[174,10,156,16],[175,10,157,16],[175,14,157,20],[175,18,157,20,"isStorageError"],[175,40,157,34],[175,42,157,35,"error"],[175,47,157,40],[175,48,157,41],[175,50,157,43],[176,12,158,20],[176,19,158,27],[177,14,158,29,"data"],[177,18,158,33],[177,20,158,35],[177,24,158,39],[178,14,158,41,"error"],[179,12,158,47],[179,13,158,48],[180,10,159,16],[181,10,160,16],[181,16,160,22,"error"],[181,21,160,27],[182,8,161,12],[183,6,162,8],[183,7,162,9],[183,8,162,10],[184,4,163,4],[185,2,164,0],[186,2,164,1,"exports"],[186,9,164,1],[186,10,164,1,"default"],[186,17,164,1],[186,20,164,1,"StorageAnalyticsApi"],[186,39,164,1],[187,0,164,1],[187,3]],"functionMap":{"names":["<global>","StorageAnalyticsApi","constructor","throwOnError","createBucket","__awaiter$argument_3","listBuckets","data.filter$argument_0","deleteBucket"],"mappings":"AAA;eCS;ICO;KDK;IEO;KFG;IGkB;+CCC;SDc;KHC;IK4B;+CDC;kCEmB,uCF;SCa;KLC;IOmB;+CHC;SGc;KPC;CDC"}},"type":"js/module"}]}