{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"]}},{"name":"./helper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":40,"index":75}}],"key":"XzTjbTLZPqGBcKq7cSmvD13rCtQ=","exportNames":["*"]}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":104,"index":180}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FunctionsClient = void 0;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _helper = require(_dependencyMap[1], \"./helper\");\n  var _types = require(_dependencyMap[2], \"./types\");\n  class FunctionsClient {\n    constructor(url, {\n      headers = {},\n      customFetch,\n      region = _types.FunctionRegion.Any\n    } = {}) {\n      this.url = url;\n      this.headers = headers;\n      this.region = region;\n      this.fetch = (0, _helper.resolveFetch)(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n      this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName_1) {\n      return (0, _tslib.__awaiter)(this, arguments, void 0, function* (functionName, options = {}) {\n        var _a;\n        try {\n          const {\n            headers,\n            method,\n            body: functionArgs,\n            signal\n          } = options;\n          let _headers = {};\n          let {\n            region\n          } = options;\n          if (!region) {\n            region = this.region;\n          }\n          // Add region as query parameter using URL API\n          const url = new URL(`${this.url}/${functionName}`);\n          if (region && region !== 'any') {\n            _headers['x-region'] = region;\n            url.searchParams.set('forceFunctionRegion', region);\n          }\n          let body;\n          if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n            if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n              // will work for File as File inherits Blob\n              // also works for ArrayBuffer as it is the same underlying structure as a Blob\n              _headers['Content-Type'] = 'application/octet-stream';\n              body = functionArgs;\n            } else if (typeof functionArgs === 'string') {\n              // plain string\n              _headers['Content-Type'] = 'text/plain';\n              body = functionArgs;\n            } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n              // don't set content-type headers\n              // Request will automatically add the right boundary value\n              body = functionArgs;\n            } else {\n              // default, assume this is JSON\n              _headers['Content-Type'] = 'application/json';\n              body = JSON.stringify(functionArgs);\n            }\n          } else {\n            // if the Content-Type was supplied, simply set the body\n            body = functionArgs;\n          }\n          const response = yield this.fetch(url.toString(), {\n            method: method || 'POST',\n            // headers priority is (high to low):\n            // 1. invoke-level headers\n            // 2. client-level headers\n            // 3. default Content-Type header\n            headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n            body,\n            signal\n          }).catch(fetchError => {\n            if (fetchError.name === 'AbortError') {\n              throw fetchError;\n            }\n            throw new _types.FunctionsFetchError(fetchError);\n          });\n          const isRelayError = response.headers.get('x-relay-error');\n          if (isRelayError && isRelayError === 'true') {\n            throw new _types.FunctionsRelayError(response);\n          }\n          if (!response.ok) {\n            throw new _types.FunctionsHttpError(response);\n          }\n          let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n          let data;\n          if (responseType === 'application/json') {\n            data = yield response.json();\n          } else if (responseType === 'application/octet-stream' || responseType === 'application/pdf') {\n            data = yield response.blob();\n          } else if (responseType === 'text/event-stream') {\n            data = response;\n          } else if (responseType === 'multipart/form-data') {\n            data = yield response.formData();\n          } else {\n            // default to text\n            data = yield response.text();\n          }\n          return {\n            data,\n            error: null,\n            response\n          };\n        } catch (error) {\n          if (error instanceof Error && error.name === 'AbortError') {\n            return {\n              data: null,\n              error: new _types.FunctionsFetchError(error)\n            };\n          }\n          return {\n            data: null,\n            error,\n            response: error instanceof _types.FunctionsHttpError || error instanceof _types.FunctionsRelayError ? error.context : undefined\n          };\n        }\n      });\n    }\n  }\n  exports.FunctionsClient = FunctionsClient;\n});","lineCount":137,"map":[[6,2,1,0],[6,6,1,0,"_tslib"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_helper"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,3,0],[8,6,3,0,"_types"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,7],[9,8,4,13,"FunctionsClient"],[9,23,4,28],[9,24,4,29],[10,4,5,4,"constructor"],[10,15,5,15,"constructor"],[10,16,5,16,"url"],[10,19,5,19],[10,21,5,21],[11,6,5,23,"headers"],[11,13,5,30],[11,16,5,33],[11,17,5,34],[11,18,5,35],[12,6,5,37,"customFetch"],[12,17,5,48],[13,6,5,50,"region"],[13,12,5,56],[13,15,5,59,"FunctionRegion"],[13,36,5,73],[13,37,5,74,"Any"],[14,4,5,79],[14,5,5,80],[14,8,5,83],[14,9,5,84],[14,10,5,85],[14,12,5,87],[15,6,6,8],[15,10,6,12],[15,11,6,13,"url"],[15,14,6,16],[15,17,6,19,"url"],[15,20,6,22],[16,6,7,8],[16,10,7,12],[16,11,7,13,"headers"],[16,18,7,20],[16,21,7,23,"headers"],[16,28,7,30],[17,6,8,8],[17,10,8,12],[17,11,8,13,"region"],[17,17,8,19],[17,20,8,22,"region"],[17,26,8,28],[18,6,9,8],[18,10,9,12],[18,11,9,13,"fetch"],[18,16,9,18],[18,19,9,21],[18,23,9,21,"resolveFetch"],[18,43,9,33],[18,45,9,34,"customFetch"],[18,56,9,45],[18,57,9,46],[19,4,10,4],[20,4,11,4],[21,0,12,0],[22,0,13,0],[23,0,14,0],[24,4,15,4,"setAuth"],[24,11,15,11,"setAuth"],[24,12,15,12,"token"],[24,17,15,17],[24,19,15,19],[25,6,16,8],[25,10,16,12],[25,11,16,13,"headers"],[25,18,16,20],[25,19,16,21,"Authorization"],[25,32,16,34],[25,35,16,37],[25,45,16,47,"token"],[25,50,16,52],[25,52,16,54],[26,4,17,4],[27,4,18,4],[28,0,19,0],[29,0,20,0],[30,0,21,0],[31,0,22,0],[32,4,23,4,"invoke"],[32,10,23,10,"invoke"],[32,11,23,11,"functionName_1"],[32,25,23,25],[32,27,23,27],[33,6,24,8],[33,13,24,15],[33,17,24,15,"__awaiter"],[33,33,24,24],[33,35,24,25],[33,39,24,29],[33,41,24,31,"arguments"],[33,50,24,40],[33,52,24,42],[33,57,24,47],[33,58,24,48],[33,60,24,50],[33,71,24,61,"functionName"],[33,83,24,73],[33,85,24,75,"options"],[33,92,24,82],[33,95,24,85],[33,96,24,86],[33,97,24,87],[33,99,24,89],[34,8,25,12],[34,12,25,16,"_a"],[34,14,25,18],[35,8,26,12],[35,12,26,16],[36,10,27,16],[36,16,27,22],[37,12,27,24,"headers"],[37,19,27,31],[38,12,27,33,"method"],[38,18,27,39],[39,12,27,41,"body"],[39,16,27,45],[39,18,27,47,"functionArgs"],[39,30,27,59],[40,12,27,61,"signal"],[41,10,27,68],[41,11,27,69],[41,14,27,72,"options"],[41,21,27,79],[42,10,28,16],[42,14,28,20,"_headers"],[42,22,28,28],[42,25,28,31],[42,26,28,32],[42,27,28,33],[43,10,29,16],[43,14,29,20],[44,12,29,22,"region"],[45,10,29,29],[45,11,29,30],[45,14,29,33,"options"],[45,21,29,40],[46,10,30,16],[46,14,30,20],[46,15,30,21,"region"],[46,21,30,27],[46,23,30,29],[47,12,31,20,"region"],[47,18,31,26],[47,21,31,29],[47,25,31,33],[47,26,31,34,"region"],[47,32,31,40],[48,10,32,16],[49,10,33,16],[50,10,34,16],[50,16,34,22,"url"],[50,19,34,25],[50,22,34,28],[50,26,34,32,"URL"],[50,29,34,35],[50,30,34,36],[50,33,34,39],[50,37,34,43],[50,38,34,44,"url"],[50,41,34,47],[50,45,34,51,"functionName"],[50,57,34,63],[50,59,34,65],[50,60,34,66],[51,10,35,16],[51,14,35,20,"region"],[51,20,35,26],[51,24,35,30,"region"],[51,30,35,36],[51,35,35,41],[51,40,35,46],[51,42,35,48],[52,12,36,20,"_headers"],[52,20,36,28],[52,21,36,29],[52,31,36,39],[52,32,36,40],[52,35,36,43,"region"],[52,41,36,49],[53,12,37,20,"url"],[53,15,37,23],[53,16,37,24,"searchParams"],[53,28,37,36],[53,29,37,37,"set"],[53,32,37,40],[53,33,37,41],[53,54,37,62],[53,56,37,64,"region"],[53,62,37,70],[53,63,37,71],[54,10,38,16],[55,10,39,16],[55,14,39,20,"body"],[55,18,39,24],[56,10,40,16],[56,14,40,20,"functionArgs"],[56,26,40,32],[56,31,41,22,"headers"],[56,38,41,29],[56,42,41,33],[56,43,41,34,"Object"],[56,49,41,40],[56,50,41,41,"prototype"],[56,59,41,50],[56,60,41,51,"hasOwnProperty"],[56,74,41,65],[56,75,41,66,"call"],[56,79,41,70],[56,80,41,71,"headers"],[56,87,41,78],[56,89,41,80],[56,103,41,94],[56,104,41,95],[56,108,41,100],[56,109,41,101,"headers"],[56,116,41,108],[56,117,41,109],[56,119,41,111],[57,12,42,20],[57,16,42,25],[57,23,42,32,"Blob"],[57,27,42,36],[57,32,42,41],[57,43,42,52],[57,47,42,56,"functionArgs"],[57,59,42,68],[57,71,42,80,"Blob"],[57,75,42,84],[57,79,43,24,"functionArgs"],[57,91,43,36],[57,103,43,48,"ArrayBuffer"],[57,114,43,59],[57,116,43,61],[58,14,44,24],[59,14,45,24],[60,14,46,24,"_headers"],[60,22,46,32],[60,23,46,33],[60,37,46,47],[60,38,46,48],[60,41,46,51],[60,67,46,77],[61,14,47,24,"body"],[61,18,47,28],[61,21,47,31,"functionArgs"],[61,33,47,43],[62,12,48,20],[62,13,48,21],[62,19,49,25],[62,23,49,29],[62,30,49,36,"functionArgs"],[62,42,49,48],[62,47,49,53],[62,55,49,61],[62,57,49,63],[63,14,50,24],[64,14,51,24,"_headers"],[64,22,51,32],[64,23,51,33],[64,37,51,47],[64,38,51,48],[64,41,51,51],[64,53,51,63],[65,14,52,24,"body"],[65,18,52,28],[65,21,52,31,"functionArgs"],[65,33,52,43],[66,12,53,20],[66,13,53,21],[66,19,54,25],[66,23,54,29],[66,30,54,36,"FormData"],[66,38,54,44],[66,43,54,49],[66,54,54,60],[66,58,54,64,"functionArgs"],[66,70,54,76],[66,82,54,88,"FormData"],[66,90,54,96],[66,92,54,98],[67,14,55,24],[68,14,56,24],[69,14,57,24,"body"],[69,18,57,28],[69,21,57,31,"functionArgs"],[69,33,57,43],[70,12,58,20],[70,13,58,21],[70,19,59,25],[71,14,60,24],[72,14,61,24,"_headers"],[72,22,61,32],[72,23,61,33],[72,37,61,47],[72,38,61,48],[72,41,61,51],[72,59,61,69],[73,14,62,24,"body"],[73,18,62,28],[73,21,62,31,"JSON"],[73,25,62,35],[73,26,62,36,"stringify"],[73,35,62,45],[73,36,62,46,"functionArgs"],[73,48,62,58],[73,49,62,59],[74,12,63,20],[75,10,64,16],[75,11,64,17],[75,17,65,21],[76,12,66,20],[77,12,67,20,"body"],[77,16,67,24],[77,19,67,27,"functionArgs"],[77,31,67,39],[78,10,68,16],[79,10,69,16],[79,16,69,22,"response"],[79,24,69,30],[79,27,69,33],[79,33,69,39],[79,37,69,43],[79,38,69,44,"fetch"],[79,43,69,49],[79,44,69,50,"url"],[79,47,69,53],[79,48,69,54,"toString"],[79,56,69,62],[79,57,69,63],[79,58,69,64],[79,60,69,66],[80,12,70,20,"method"],[80,18,70,26],[80,20,70,28,"method"],[80,26,70,34],[80,30,70,38],[80,36,70,44],[81,12,71,20],[82,12,72,20],[83,12,73,20],[84,12,74,20],[85,12,75,20,"headers"],[85,19,75,27],[85,21,75,29,"Object"],[85,27,75,35],[85,28,75,36,"assign"],[85,34,75,42],[85,35,75,43,"Object"],[85,41,75,49],[85,42,75,50,"assign"],[85,48,75,56],[85,49,75,57,"Object"],[85,55,75,63],[85,56,75,64,"assign"],[85,62,75,70],[85,63,75,71],[85,64,75,72],[85,65,75,73],[85,67,75,75,"_headers"],[85,75,75,83],[85,76,75,84],[85,78,75,86],[85,82,75,90],[85,83,75,91,"headers"],[85,90,75,98],[85,91,75,99],[85,93,75,101,"headers"],[85,100,75,108],[85,101,75,109],[86,12,76,20,"body"],[86,16,76,24],[87,12,77,20,"signal"],[88,10,78,16],[88,11,78,17],[88,12,78,18],[88,13,78,19,"catch"],[88,18,78,24],[88,19,78,26,"fetchError"],[88,29,78,36],[88,33,78,41],[89,12,79,20],[89,16,79,24,"fetchError"],[89,26,79,34],[89,27,79,35,"name"],[89,31,79,39],[89,36,79,44],[89,48,79,56],[89,50,79,58],[90,14,80,24],[90,20,80,30,"fetchError"],[90,30,80,40],[91,12,81,20],[92,12,82,20],[92,18,82,26],[92,22,82,30,"FunctionsFetchError"],[92,48,82,49],[92,49,82,50,"fetchError"],[92,59,82,60],[92,60,82,61],[93,10,83,16],[93,11,83,17],[93,12,83,18],[94,10,84,16],[94,16,84,22,"isRelayError"],[94,28,84,34],[94,31,84,37,"response"],[94,39,84,45],[94,40,84,46,"headers"],[94,47,84,53],[94,48,84,54,"get"],[94,51,84,57],[94,52,84,58],[94,67,84,73],[94,68,84,74],[95,10,85,16],[95,14,85,20,"isRelayError"],[95,26,85,32],[95,30,85,36,"isRelayError"],[95,42,85,48],[95,47,85,53],[95,53,85,59],[95,55,85,61],[96,12,86,20],[96,18,86,26],[96,22,86,30,"FunctionsRelayError"],[96,48,86,49],[96,49,86,50,"response"],[96,57,86,58],[96,58,86,59],[97,10,87,16],[98,10,88,16],[98,14,88,20],[98,15,88,21,"response"],[98,23,88,29],[98,24,88,30,"ok"],[98,26,88,32],[98,28,88,34],[99,12,89,20],[99,18,89,26],[99,22,89,30,"FunctionsHttpError"],[99,47,89,48],[99,48,89,49,"response"],[99,56,89,57],[99,57,89,58],[100,10,90,16],[101,10,91,16],[101,14,91,20,"responseType"],[101,26,91,32],[101,29,91,35],[101,30,91,36],[101,31,91,37,"_a"],[101,33,91,39],[101,36,91,42,"response"],[101,44,91,50],[101,45,91,51,"headers"],[101,52,91,58],[101,53,91,59,"get"],[101,56,91,62],[101,57,91,63],[101,71,91,77],[101,72,91,78],[101,78,91,84],[101,82,91,88],[101,86,91,92,"_a"],[101,88,91,94],[101,93,91,99],[101,98,91,104],[101,99,91,105],[101,102,91,108,"_a"],[101,104,91,110],[101,107,91,113],[101,119,91,125],[101,121,91,127,"split"],[101,126,91,132],[101,127,91,133],[101,130,91,136],[101,131,91,137],[101,132,91,138],[101,133,91,139],[101,134,91,140],[101,135,91,141,"trim"],[101,139,91,145],[101,140,91,146],[101,141,91,147],[102,10,92,16],[102,14,92,20,"data"],[102,18,92,24],[103,10,93,16],[103,14,93,20,"responseType"],[103,26,93,32],[103,31,93,37],[103,49,93,55],[103,51,93,57],[104,12,94,20,"data"],[104,16,94,24],[104,19,94,27],[104,25,94,33,"response"],[104,33,94,41],[104,34,94,42,"json"],[104,38,94,46],[104,39,94,47],[104,40,94,48],[105,10,95,16],[105,11,95,17],[105,17,96,21],[105,21,96,25,"responseType"],[105,33,96,37],[105,38,96,42],[105,64,96,68],[105,68,97,20,"responseType"],[105,80,97,32],[105,85,97,37],[105,102,97,54],[105,104,97,56],[106,12,98,20,"data"],[106,16,98,24],[106,19,98,27],[106,25,98,33,"response"],[106,33,98,41],[106,34,98,42,"blob"],[106,38,98,46],[106,39,98,47],[106,40,98,48],[107,10,99,16],[107,11,99,17],[107,17,100,21],[107,21,100,25,"responseType"],[107,33,100,37],[107,38,100,42],[107,57,100,61],[107,59,100,63],[108,12,101,20,"data"],[108,16,101,24],[108,19,101,27,"response"],[108,27,101,35],[109,10,102,16],[109,11,102,17],[109,17,103,21],[109,21,103,25,"responseType"],[109,33,103,37],[109,38,103,42],[109,59,103,63],[109,61,103,65],[110,12,104,20,"data"],[110,16,104,24],[110,19,104,27],[110,25,104,33,"response"],[110,33,104,41],[110,34,104,42,"formData"],[110,42,104,50],[110,43,104,51],[110,44,104,52],[111,10,105,16],[111,11,105,17],[111,17,106,21],[112,12,107,20],[113,12,108,20,"data"],[113,16,108,24],[113,19,108,27],[113,25,108,33,"response"],[113,33,108,41],[113,34,108,42,"text"],[113,38,108,46],[113,39,108,47],[113,40,108,48],[114,10,109,16],[115,10,110,16],[115,17,110,23],[116,12,110,25,"data"],[116,16,110,29],[117,12,110,31,"error"],[117,17,110,36],[117,19,110,38],[117,23,110,42],[118,12,110,44,"response"],[119,10,110,53],[119,11,110,54],[120,8,111,12],[120,9,111,13],[120,10,112,12],[120,17,112,19,"error"],[120,22,112,24],[120,24,112,26],[121,10,113,16],[121,14,113,20,"error"],[121,19,113,25],[121,31,113,37,"Error"],[121,36,113,42],[121,40,113,46,"error"],[121,45,113,51],[121,46,113,52,"name"],[121,50,113,56],[121,55,113,61],[121,67,113,73],[121,69,113,75],[122,12,114,20],[122,19,114,27],[123,14,114,29,"data"],[123,18,114,33],[123,20,114,35],[123,24,114,39],[124,14,114,41,"error"],[124,19,114,46],[124,21,114,48],[124,25,114,52,"FunctionsFetchError"],[124,51,114,71],[124,52,114,72,"error"],[124,57,114,77],[125,12,114,79],[125,13,114,80],[126,10,115,16],[127,10,116,16],[127,17,116,23],[128,12,117,20,"data"],[128,16,117,24],[128,18,117,26],[128,22,117,30],[129,12,118,20,"error"],[129,17,118,25],[130,12,119,20,"response"],[130,20,119,28],[130,22,119,30,"error"],[130,27,119,35],[130,39,119,47,"FunctionsHttpError"],[130,64,119,65],[130,68,119,69,"error"],[130,73,119,74],[130,85,119,86,"FunctionsRelayError"],[130,111,119,105],[130,114,120,26,"error"],[130,119,120,31],[130,120,120,32,"context"],[130,127,120,39],[130,130,121,26,"undefined"],[131,10,122,16],[131,11,122,17],[132,8,123,12],[133,6,124,8],[133,7,124,9],[133,8,124,10],[134,4,125,4],[135,2,126,0],[136,2,126,1,"exports"],[136,9,126,1],[136,10,126,1,"FunctionsClient"],[136,25,126,1],[136,28,126,1,"FunctionsClient"],[136,43,126,1],[137,0,126,1],[137,3]],"functionMap":{"names":["<global>","FunctionsClient","constructor","setAuth","invoke","__awaiter$argument_3","fetch._catch$argument_0"],"mappings":"AAA;OCG;ICC;KDK;IEK;KFE;IGM;kDCC;yBCsD;iBDK;SDyC;KHC;CDC"}},"type":"js/module"}]}