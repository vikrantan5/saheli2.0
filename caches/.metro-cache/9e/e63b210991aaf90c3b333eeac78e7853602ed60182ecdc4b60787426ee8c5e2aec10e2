{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"]}},{"name":"./base64url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":70,"index":102}}],"key":"dhv0KPIkoHN6QWLEoiPQ8fdmrOg=","exportNames":["*"]}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":103},"end":{"line":3,"column":68,"index":171}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}},{"name":"./helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":172},"end":{"line":4,"column":38,"index":210}}],"key":"kg0rJsyHf+Iyf4Z1AFOYGhKLkW4=","exportNames":["*"]}},{"name":"./webauthn.errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":211},"end":{"line":5,"column":146,"index":357}}],"key":"UHcccN2SA7jmJTgW6outcYz70/A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WebAuthnApi = exports.WebAuthnAbortService = exports.DEFAULT_REQUEST_OPTIONS = exports.DEFAULT_CREATION_OPTIONS = void 0;\n  Object.defineProperty(exports, \"WebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthn.WebAuthnError;\n    }\n  });\n  exports.createCredential = createCredential;\n  exports.deserializeCredentialCreationOptions = deserializeCredentialCreationOptions;\n  exports.deserializeCredentialRequestOptions = deserializeCredentialRequestOptions;\n  exports.getCredential = getCredential;\n  Object.defineProperty(exports, \"identifyAuthenticationError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthn.identifyAuthenticationError;\n    }\n  });\n  Object.defineProperty(exports, \"identifyRegistrationError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthn.identifyRegistrationError;\n    }\n  });\n  exports.isValidDomain = isValidDomain;\n  Object.defineProperty(exports, \"isWebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthn.isWebAuthnError;\n    }\n  });\n  exports.mergeCredentialCreationOptions = mergeCredentialCreationOptions;\n  exports.mergeCredentialRequestOptions = mergeCredentialRequestOptions;\n  exports.serializeCredentialCreationResponse = serializeCredentialCreationResponse;\n  exports.serializeCredentialRequestResponse = serializeCredentialRequestResponse;\n  exports.webAuthnAbortService = void 0;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _base64url = require(_dependencyMap[1], \"./base64url\");\n  var _errors = require(_dependencyMap[2], \"./errors\");\n  var _helpers = require(_dependencyMap[3], \"./helpers\");\n  var _webauthn = require(_dependencyMap[4], \"./webauthn.errors\");\n  /**\n   * WebAuthn abort service to manage ceremony cancellation.\n   * Ensures only one WebAuthn ceremony is active at a time to prevent \"operation already in progress\" errors.\n   *\n   * @experimental This class is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/#sctn-automation-webdriver-capability W3C WebAuthn Spec - Aborting Ceremonies}\n   */\n  class WebAuthnAbortService {\n    /**\n     * Create an abort signal for a new WebAuthn operation.\n     * Automatically cancels any existing operation.\n     *\n     * @returns {AbortSignal} Signal to pass to navigator.credentials.create() or .get()\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal MDN - AbortSignal}\n     */\n    createNewAbortSignal() {\n      // Abort any existing calls to navigator.credentials.create() or navigator.credentials.get()\n      if (this.controller) {\n        const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n        abortError.name = 'AbortError';\n        this.controller.abort(abortError);\n      }\n      const newController = new AbortController();\n      this.controller = newController;\n      return newController.signal;\n    }\n    /**\n     * Manually cancel the current WebAuthn operation.\n     * Useful for cleaning up when user cancels or navigates away.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort MDN - AbortController.abort}\n     */\n    cancelCeremony() {\n      if (this.controller) {\n        const abortError = new Error('Manually cancelling existing WebAuthn API call');\n        abortError.name = 'AbortError';\n        this.controller.abort(abortError);\n        this.controller = undefined;\n      }\n    }\n  }\n  /**\n   * Singleton instance to ensure only one WebAuthn ceremony is active at a time.\n   * This prevents \"operation already in progress\" errors when retrying WebAuthn operations.\n   *\n   * @experimental This instance is experimental and may change in future releases\n   */\n  exports.WebAuthnAbortService = WebAuthnAbortService;\n  const webAuthnAbortService = exports.webAuthnAbortService = new WebAuthnAbortService();\n  /**\n   * Convert base64url encoded strings in WebAuthn credential creation options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseCreationOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialCreationOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Options ready for navigator.credentials.create()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseCreationOptionsFromJSON W3C WebAuthn Spec - parseCreationOptionsFromJSON}\n   */\n  function deserializeCredentialCreationOptions(options) {\n    if (!options) {\n      throw new Error('Credential creation options are required');\n    }\n    // Check if the native parseCreationOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseCreationOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseCreationOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseCreationOptionsFromJSON(/** we assert the options here as typescript still doesn't know about future webauthn types */\n      options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    const {\n        challenge: challengeStr,\n        user: userOpts,\n        excludeCredentials\n      } = options,\n      restOptions = (0, _tslib.__rest)(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"user\", \"excludeCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    const challenge = (0, _base64url.base64UrlToUint8Array)(challengeStr).buffer;\n    // Convert user.id from base64url to ArrayBuffer\n    const user = Object.assign(Object.assign({}, userOpts), {\n      id: (0, _base64url.base64UrlToUint8Array)(userOpts.id).buffer\n    });\n    // Build the result object\n    const result = Object.assign(Object.assign({}, restOptions), {\n      challenge,\n      user\n    });\n    // Only add excludeCredentials if it exists\n    if (excludeCredentials && excludeCredentials.length > 0) {\n      result.excludeCredentials = new Array(excludeCredentials.length);\n      for (let i = 0; i < excludeCredentials.length; i++) {\n        const cred = excludeCredentials[i];\n        result.excludeCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, _base64url.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert base64url encoded strings in WebAuthn credential request options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseRequestOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialRequestOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Options ready for navigator.credentials.get()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseRequestOptionsFromJSON W3C WebAuthn Spec - parseRequestOptionsFromJSON}\n   */\n  function deserializeCredentialRequestOptions(options) {\n    if (!options) {\n      throw new Error('Credential request options are required');\n    }\n    // Check if the native parseRequestOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseRequestOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseRequestOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseRequestOptionsFromJSON(options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    const {\n        challenge: challengeStr,\n        allowCredentials\n      } = options,\n      restOptions = (0, _tslib.__rest)(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"allowCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    const challenge = (0, _base64url.base64UrlToUint8Array)(challengeStr).buffer;\n    // Build the result object\n    const result = Object.assign(Object.assign({}, restOptions), {\n      challenge\n    });\n    // Only add allowCredentials if it exists\n    if (allowCredentials && allowCredentials.length > 0) {\n      result.allowCredentials = new Array(allowCredentials.length);\n      for (let i = 0; i < allowCredentials.length; i++) {\n        const cred = allowCredentials[i];\n        result.allowCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, _base64url.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert a registration/enrollment credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {RegistrationCredential} credential - Credential from navigator.credentials.create()\n   * @returns {RegistrationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialCreationResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    const credentialWithAttachment = credential;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      response: {\n        attestationObject: (0, _base64url.bytesToBase64URL)(new Uint8Array(credential.response.attestationObject)),\n        clientDataJSON: (0, _base64url.bytesToBase64URL)(new Uint8Array(credential.response.clientDataJSON))\n      },\n      type: 'public-key',\n      clientExtensionResults: credential.getClientExtensionResults(),\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * Convert an authentication/verification credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {AuthenticationCredential} credential - Credential from navigator.credentials.get()\n   * @returns {AuthenticationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialRequestResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    // Fallback to manual conversion for browsers that don't support toJSON\n    // Access authenticatorAttachment via type assertion to handle TypeScript version differences\n    // @simplewebauthn/types includes this property but base TypeScript 4.7.4 doesn't\n    const credentialWithAttachment = credential;\n    const clientExtensionResults = credential.getClientExtensionResults();\n    const assertionResponse = credential.response;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      // W3C spec expects rawId to match id for JSON format\n      response: {\n        authenticatorData: (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.authenticatorData)),\n        clientDataJSON: (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.clientDataJSON)),\n        signature: (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.signature)),\n        userHandle: assertionResponse.userHandle ? (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.userHandle)) : undefined\n      },\n      type: 'public-key',\n      clientExtensionResults,\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * A simple test to determine if a hostname is a properly-formatted domain name.\n   * Considers localhost valid for development environments.\n   *\n   * A \"valid domain\" is defined here: https://url.spec.whatwg.org/#valid-domain\n   *\n   * Regex sourced from here:\n   * https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n   *\n   * @param {string} hostname - The hostname to validate\n   * @returns {boolean} True if valid domain or localhost\n   * @see {@link https://url.spec.whatwg.org/#valid-domain WHATWG URL Spec - Valid Domain}\n   */\n  function isValidDomain(hostname) {\n    return (\n      // Consider localhost valid as well since it's okay wrt Secure Contexts\n      hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname)\n    );\n  }\n  /**\n   * Determine if the browser is capable of WebAuthn.\n   * Checks for necessary Web APIs: PublicKeyCredential and Credential Management.\n   *\n   * @returns {boolean} True if browser supports WebAuthn\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential#browser_compatibility MDN - PublicKeyCredential Browser Compatibility}\n   */\n  function browserSupportsWebAuthn() {\n    var _a, _b;\n    return !!((0, _helpers.isBrowser)() && 'PublicKeyCredential' in window && window.PublicKeyCredential && 'credentials' in navigator && typeof ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _a === void 0 ? void 0 : _a.create) === 'function' && typeof ((_b = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _b === void 0 ? void 0 : _b.get) === 'function');\n  }\n  /**\n   * Create a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.create() with error handling.\n   *\n   * @param {CredentialCreationOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<RegistrationCredential, WebAuthnError>>} Created credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create MDN - credentials.create}\n   */\n  async function createCredential(options) {\n    try {\n      const response = await navigator.credentials.create(/** we assert the type here until typescript types are updated */\n      options);\n      if (!response) {\n        return {\n          data: null,\n          error: new _webauthn.WebAuthnUnknownError('Empty credential response', response)\n        };\n      }\n      if (!(response instanceof PublicKeyCredential)) {\n        return {\n          data: null,\n          error: new _webauthn.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n        };\n      }\n      return {\n        data: response,\n        error: null\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: (0, _webauthn.identifyRegistrationError)({\n          error: err,\n          options\n        })\n      };\n    }\n  }\n  /**\n   * Get a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.get() with error handling.\n   *\n   * @param {CredentialRequestOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<AuthenticationCredential, WebAuthnError>>} Retrieved credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get MDN - credentials.get}\n   */\n  async function getCredential(options) {\n    try {\n      const response = await navigator.credentials.get(/** we assert the type here until typescript types are updated */\n      options);\n      if (!response) {\n        return {\n          data: null,\n          error: new _webauthn.WebAuthnUnknownError('Empty credential response', response)\n        };\n      }\n      if (!(response instanceof PublicKeyCredential)) {\n        return {\n          data: null,\n          error: new _webauthn.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n        };\n      }\n      return {\n        data: response,\n        error: null\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: (0, _webauthn.identifyAuthenticationError)({\n          error: err,\n          options\n        })\n      };\n    }\n  }\n  const DEFAULT_CREATION_OPTIONS = exports.DEFAULT_CREATION_OPTIONS = {\n    hints: ['security-key'],\n    authenticatorSelection: {\n      authenticatorAttachment: 'cross-platform',\n      requireResidentKey: false,\n      /** set to preferred because older yubikeys don't have PIN/Biometric */\n      userVerification: 'preferred',\n      residentKey: 'discouraged'\n    },\n    attestation: 'none'\n  };\n  const DEFAULT_REQUEST_OPTIONS = exports.DEFAULT_REQUEST_OPTIONS = {\n    /** set to preferred because older yubikeys don't have PIN/Biometric */\n    userVerification: 'preferred',\n    hints: ['security-key']\n  };\n  function deepMerge(...sources) {\n    const isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n    const isArrayBufferLike = val => val instanceof ArrayBuffer || ArrayBuffer.isView(val);\n    const result = {};\n    for (const source of sources) {\n      if (!source) continue;\n      for (const key in source) {\n        const value = source[key];\n        if (value === undefined) continue;\n        if (Array.isArray(value)) {\n          // preserve array reference, including unions like AuthenticatorTransport[]\n          result[key] = value;\n        } else if (isArrayBufferLike(value)) {\n          result[key] = value;\n        } else if (isObject(value)) {\n          const existing = result[key];\n          if (isObject(existing)) {\n            result[key] = deepMerge(existing, value);\n          } else {\n            result[key] = deepMerge(value);\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Merges WebAuthn credential creation options with overrides.\n   * Sets sensible defaults for authenticator selection and extensions.\n   *\n   * @param {PublicKeyCredentialCreationOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Optional overrides to apply\n   * @param {string} friendlyName - Optional friendly name for the credential\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Merged credential creation options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-authenticatorselectioncriteria W3C WebAuthn Spec - AuthenticatorSelectionCriteria}\n   */\n  function mergeCredentialCreationOptions(baseOptions, overrides) {\n    return deepMerge(DEFAULT_CREATION_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * Merges WebAuthn credential request options with overrides.\n   * Sets sensible defaults for user verification and hints.\n   *\n   * @param {PublicKeyCredentialRequestOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Optional overrides to apply\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Merged credential request options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-publickeycredentialrequestoptions W3C WebAuthn Spec - PublicKeyCredentialRequestOptions}\n   */\n  function mergeCredentialRequestOptions(baseOptions, overrides) {\n    return deepMerge(DEFAULT_REQUEST_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * WebAuthn API wrapper for Supabase Auth.\n   * Provides methods for enrolling, challenging, verifying, authenticating, and registering WebAuthn credentials.\n   *\n   * @experimental This API is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/ W3C WebAuthn Specification}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API MDN - Web Authentication API}\n   */\n  class WebAuthnApi {\n    constructor(client) {\n      this.client = client;\n      // Bind all methods so they can be destructured\n      this.enroll = this._enroll.bind(this);\n      this.challenge = this._challenge.bind(this);\n      this.verify = this._verify.bind(this);\n      this.authenticate = this._authenticate.bind(this);\n      this.register = this._register.bind(this);\n    }\n    /**\n     * Enroll a new WebAuthn factor.\n     * Creates an unverified WebAuthn factor that must be verified with a credential.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Omit<MFAEnrollWebauthnParams, 'factorType'>} params - Enrollment parameters (friendlyName required)\n     * @returns {Promise<AuthMFAEnrollWebauthnResponse>} Enrolled factor details or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n     */\n    async _enroll(params) {\n      return this.client.mfa.enroll(Object.assign(Object.assign({}, params), {\n        factorType: 'webauthn'\n      }));\n    }\n    /**\n     * Challenge for WebAuthn credential creation or authentication.\n     * Combines server challenge with browser credential operations.\n     * Handles both registration (create) and authentication (request) flows.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal }} params - Challenge parameters including factorId\n     * @param {Object} overrides - Allows you to override the parameters passed to navigator.credentials\n     * @param {PublicKeyCredentialCreationOptionsFuture} overrides.create - Override options for credential creation\n     * @param {PublicKeyCredentialRequestOptionsFuture} overrides.request - Override options for credential request\n     * @returns {Promise<RequestResult>} Challenge response with credential or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}\n     * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying Assertion}\n     */\n    async _challenge({\n      factorId,\n      webauthn,\n      friendlyName,\n      signal\n    }, overrides) {\n      try {\n        // Get challenge from server using the client's MFA methods\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this.client.mfa.challenge({\n          factorId,\n          webauthn\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        const abortSignal = signal !== null && signal !== void 0 ? signal : webAuthnAbortService.createNewAbortSignal();\n        /** webauthn will fail if either of the name/displayname are blank */\n        if (challengeResponse.webauthn.type === 'create') {\n          const {\n            user\n          } = challengeResponse.webauthn.credential_options.publicKey;\n          if (!user.name) {\n            user.name = `${user.id}:${friendlyName}`;\n          }\n          if (!user.displayName) {\n            user.displayName = user.name;\n          }\n        }\n        switch (challengeResponse.webauthn.type) {\n          case 'create':\n            {\n              const options = mergeCredentialCreationOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.create);\n              const {\n                data,\n                error\n              } = await createCredential({\n                publicKey: options,\n                signal: abortSignal\n              });\n              if (data) {\n                return {\n                  data: {\n                    factorId,\n                    challengeId: challengeResponse.id,\n                    webauthn: {\n                      type: challengeResponse.webauthn.type,\n                      credential_response: data\n                    }\n                  },\n                  error: null\n                };\n              }\n              return {\n                data: null,\n                error\n              };\n            }\n          case 'request':\n            {\n              const options = mergeCredentialRequestOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.request);\n              const {\n                data,\n                error\n              } = await getCredential(Object.assign(Object.assign({}, challengeResponse.webauthn.credential_options), {\n                publicKey: options,\n                signal: abortSignal\n              }));\n              if (data) {\n                return {\n                  data: {\n                    factorId,\n                    challengeId: challengeResponse.id,\n                    webauthn: {\n                      type: challengeResponse.webauthn.type,\n                      credential_response: data\n                    }\n                  },\n                  error: null\n                };\n              }\n              return {\n                data: null,\n                error\n              };\n            }\n        }\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new _errors.AuthUnknownError('Unexpected error in challenge', error)\n        };\n      }\n    }\n    /**\n     * Verify a WebAuthn credential with the server.\n     * Completes the WebAuthn ceremony by sending the credential to the server for verification.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Verification parameters\n     * @param {string} params.challengeId - ID of the challenge being verified\n     * @param {string} params.factorId - ID of the WebAuthn factor\n     * @param {MFAVerifyWebauthnParams<T>['webauthn']} params.webauthn - WebAuthn credential response\n     * @returns {Promise<AuthMFAVerifyResponse>} Verification result with session or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}\n     * */\n    async _verify({\n      challengeId,\n      factorId,\n      webauthn\n    }) {\n      return this.client.mfa.verify({\n        factorId,\n        challengeId,\n        webauthn: webauthn\n      });\n    }\n    /**\n     * Complete WebAuthn authentication flow.\n     * Performs challenge and verification in a single operation for existing credentials.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Authentication parameters\n     * @param {string} params.factorId - ID of the WebAuthn factor to authenticate with\n     * @param {Object} params.webauthn - WebAuthn configuration\n     * @param {string} params.webauthn.rpId - Relying Party ID (defaults to current hostname)\n     * @param {string[]} params.webauthn.rpOrigins - Allowed origins (defaults to current origin)\n     * @param {AbortSignal} params.webauthn.signal - Optional abort signal\n     * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Override options for navigator.credentials.get\n     * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Authentication result\n     * @see {@link https://w3c.github.io/webauthn/#sctn-authentication W3C WebAuthn Spec - Authentication Ceremony}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions MDN - PublicKeyCredentialRequestOptions}\n     */\n    async _authenticate({\n      factorId,\n      webauthn: {\n        rpId = typeof window !== 'undefined' ? window.location.hostname : undefined,\n        rpOrigins = typeof window !== 'undefined' ? [window.location.origin] : undefined,\n        signal\n      }\n    }, overrides) {\n      if (!rpId) {\n        return {\n          data: null,\n          error: new _errors.AuthError('rpId is required for WebAuthn authentication')\n        };\n      }\n      try {\n        if (!browserSupportsWebAuthn()) {\n          return {\n            data: null,\n            error: new _errors.AuthUnknownError('Browser does not support WebAuthn', null)\n          };\n        }\n        // Get challenge and credential\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this.challenge({\n          factorId,\n          webauthn: {\n            rpId,\n            rpOrigins\n          },\n          signal\n        }, {\n          request: overrides\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        const {\n          webauthn\n        } = challengeResponse;\n        // Verify credential\n        return this._verify({\n          factorId,\n          challengeId: challengeResponse.challengeId,\n          webauthn: {\n            type: webauthn.type,\n            rpId,\n            rpOrigins,\n            credential_response: webauthn.credential_response\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new _errors.AuthUnknownError('Unexpected error in authenticate', error)\n        };\n      }\n    }\n    /**\n     * Complete WebAuthn registration flow.\n     * Performs enrollment, challenge, and verification in a single operation for new credentials.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Registration parameters\n     * @param {string} params.friendlyName - User-friendly name for the credential\n     * @param {string} params.rpId - Relying Party ID (defaults to current hostname)\n     * @param {string[]} params.rpOrigins - Allowed origins (defaults to current origin)\n     * @param {AbortSignal} params.signal - Optional abort signal\n     * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Override options for navigator.credentials.create\n     * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Registration result\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registration Ceremony}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions MDN - PublicKeyCredentialCreationOptions}\n     */\n    async _register({\n      friendlyName,\n      rpId = typeof window !== 'undefined' ? window.location.hostname : undefined,\n      rpOrigins = typeof window !== 'undefined' ? [window.location.origin] : undefined,\n      signal\n    }, overrides) {\n      if (!rpId) {\n        return {\n          data: null,\n          error: new _errors.AuthError('rpId is required for WebAuthn registration')\n        };\n      }\n      try {\n        if (!browserSupportsWebAuthn()) {\n          return {\n            data: null,\n            error: new _errors.AuthUnknownError('Browser does not support WebAuthn', null)\n          };\n        }\n        // Enroll factor\n        const {\n          data: factor,\n          error: enrollError\n        } = await this._enroll({\n          friendlyName\n        });\n        if (!factor) {\n          await this.client.mfa.listFactors().then(factors => {\n            var _a;\n            return (_a = factors.data) === null || _a === void 0 ? void 0 : _a.all.find(v => v.factor_type === 'webauthn' && v.friendly_name === friendlyName && v.status !== 'unverified');\n          }).then(factor => factor ? this.client.mfa.unenroll({\n            factorId: factor === null || factor === void 0 ? void 0 : factor.id\n          }) : void 0);\n          return {\n            data: null,\n            error: enrollError\n          };\n        }\n        // Get challenge and create credential\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this._challenge({\n          factorId: factor.id,\n          friendlyName: factor.friendly_name,\n          webauthn: {\n            rpId,\n            rpOrigins\n          },\n          signal\n        }, {\n          create: overrides\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        return this._verify({\n          factorId: factor.id,\n          challengeId: challengeResponse.challengeId,\n          webauthn: {\n            rpId,\n            rpOrigins,\n            type: challengeResponse.webauthn.type,\n            credential_response: challengeResponse.webauthn.credential_response\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new _errors.AuthUnknownError('Unexpected error in register', error)\n        };\n      }\n    }\n  }\n  exports.WebAuthnApi = WebAuthnApi;\n});","lineCount":799,"map":[[40,2,1,0],[40,6,1,0,"_tslib"],[40,12,1,0],[40,15,1,0,"require"],[40,22,1,0],[40,23,1,0,"_dependencyMap"],[40,37,1,0],[41,2,2,0],[41,6,2,0,"_base64url"],[41,16,2,0],[41,19,2,0,"require"],[41,26,2,0],[41,27,2,0,"_dependencyMap"],[41,41,2,0],[42,2,3,0],[42,6,3,0,"_errors"],[42,13,3,0],[42,16,3,0,"require"],[42,23,3,0],[42,24,3,0,"_dependencyMap"],[42,38,3,0],[43,2,4,0],[43,6,4,0,"_helpers"],[43,14,4,0],[43,17,4,0,"require"],[43,24,4,0],[43,25,4,0,"_dependencyMap"],[43,39,4,0],[44,2,5,0],[44,6,5,0,"_webauthn"],[44,15,5,0],[44,18,5,0,"require"],[44,25,5,0],[44,26,5,0,"_dependencyMap"],[44,40,5,0],[45,2,7,0],[46,0,8,0],[47,0,9,0],[48,0,10,0],[49,0,11,0],[50,0,12,0],[51,0,13,0],[52,2,14,7],[52,8,14,13,"WebAuthnAbortService"],[52,28,14,33],[52,29,14,34],[53,4,15,4],[54,0,16,0],[55,0,17,0],[56,0,18,0],[57,0,19,0],[58,0,20,0],[59,0,21,0],[60,4,22,4,"createNewAbortSignal"],[60,24,22,24,"createNewAbortSignal"],[60,25,22,24],[60,27,22,27],[61,6,23,8],[62,6,24,8],[62,10,24,12],[62,14,24,16],[62,15,24,17,"controller"],[62,25,24,27],[62,27,24,29],[63,8,25,12],[63,14,25,18,"abortError"],[63,24,25,28],[63,27,25,31],[63,31,25,35,"Error"],[63,36,25,40],[63,37,25,41],[63,88,25,92],[63,89,25,93],[64,8,26,12,"abortError"],[64,18,26,22],[64,19,26,23,"name"],[64,23,26,27],[64,26,26,30],[64,38,26,42],[65,8,27,12],[65,12,27,16],[65,13,27,17,"controller"],[65,23,27,27],[65,24,27,28,"abort"],[65,29,27,33],[65,30,27,34,"abortError"],[65,40,27,44],[65,41,27,45],[66,6,28,8],[67,6,29,8],[67,12,29,14,"newController"],[67,25,29,27],[67,28,29,30],[67,32,29,34,"AbortController"],[67,47,29,49],[67,48,29,50],[67,49,29,51],[68,6,30,8],[68,10,30,12],[68,11,30,13,"controller"],[68,21,30,23],[68,24,30,26,"newController"],[68,37,30,39],[69,6,31,8],[69,13,31,15,"newController"],[69,26,31,28],[69,27,31,29,"signal"],[69,33,31,35],[70,4,32,4],[71,4,33,4],[72,0,34,0],[73,0,35,0],[74,0,36,0],[75,0,37,0],[76,0,38,0],[77,4,39,4,"cancelCeremony"],[77,18,39,18,"cancelCeremony"],[77,19,39,18],[77,21,39,21],[78,6,40,8],[78,10,40,12],[78,14,40,16],[78,15,40,17,"controller"],[78,25,40,27],[78,27,40,29],[79,8,41,12],[79,14,41,18,"abortError"],[79,24,41,28],[79,27,41,31],[79,31,41,35,"Error"],[79,36,41,40],[79,37,41,41],[79,85,41,89],[79,86,41,90],[80,8,42,12,"abortError"],[80,18,42,22],[80,19,42,23,"name"],[80,23,42,27],[80,26,42,30],[80,38,42,42],[81,8,43,12],[81,12,43,16],[81,13,43,17,"controller"],[81,23,43,27],[81,24,43,28,"abort"],[81,29,43,33],[81,30,43,34,"abortError"],[81,40,43,44],[81,41,43,45],[82,8,44,12],[82,12,44,16],[82,13,44,17,"controller"],[82,23,44,27],[82,26,44,30,"undefined"],[82,35,44,39],[83,6,45,8],[84,4,46,4],[85,2,47,0],[86,2,48,0],[87,0,49,0],[88,0,50,0],[89,0,51,0],[90,0,52,0],[91,0,53,0],[92,2,48,0,"exports"],[92,9,48,0],[92,10,48,0,"WebAuthnAbortService"],[92,30,48,0],[92,33,48,0,"WebAuthnAbortService"],[92,53,48,0],[93,2,54,7],[93,8,54,13,"webAuthnAbortService"],[93,28,54,33],[93,31,54,33,"exports"],[93,38,54,33],[93,39,54,33,"webAuthnAbortService"],[93,59,54,33],[93,62,54,36],[93,66,54,40,"WebAuthnAbortService"],[93,86,54,60],[93,87,54,61],[93,88,54,62],[94,2,55,0],[95,0,56,0],[96,0,57,0],[97,0,58,0],[98,0,59,0],[99,0,60,0],[100,0,61,0],[101,0,62,0],[102,0,63,0],[103,2,64,7],[103,11,64,16,"deserializeCredentialCreationOptions"],[103,47,64,52,"deserializeCredentialCreationOptions"],[103,48,64,53,"options"],[103,55,64,60],[103,57,64,62],[104,4,65,4],[104,8,65,8],[104,9,65,9,"options"],[104,16,65,16],[104,18,65,18],[105,6,66,8],[105,12,66,14],[105,16,66,18,"Error"],[105,21,66,23],[105,22,66,24],[105,64,66,66],[105,65,66,67],[106,4,67,4],[107,4,68,4],[108,4,69,4],[108,8,69,8],[108,15,69,15,"PublicKeyCredential"],[108,34,69,34],[108,39,69,39],[108,50,69,50],[108,54,70,8],[108,84,70,38],[108,88,70,42,"PublicKeyCredential"],[108,107,70,61],[108,111,71,8],[108,118,71,15,"PublicKeyCredential"],[108,137,71,34],[108,138,72,13,"parseCreationOptionsFromJSON"],[108,166,72,41],[108,171,72,46],[108,181,72,56],[108,183,72,58],[109,6,73,8],[110,6,74,8],[110,13,74,15,"PublicKeyCredential"],[110,32,74,34],[110,33,74,35,"parseCreationOptionsFromJSON"],[110,61,74,63],[110,62,75,8],[111,6,76,8,"options"],[111,13,76,15],[111,14,76,16],[112,4,77,4],[113,4,78,4],[114,4,79,4],[115,4,80,4],[115,10,80,10],[116,8,80,12,"challenge"],[116,17,80,21],[116,19,80,23,"challengeStr"],[116,31,80,35],[117,8,80,37,"user"],[117,12,80,41],[117,14,80,43,"userOpts"],[117,22,80,51],[118,8,80,53,"excludeCredentials"],[119,6,80,72],[119,7,80,73],[119,10,80,76,"options"],[119,17,80,83],[120,6,80,85,"restOptions"],[120,17,80,96],[120,20,80,99],[120,24,80,99,"__rest"],[120,37,80,105],[120,39,80,106,"options"],[121,6,81,4],[122,6,81,4],[122,8,82,6],[122,9,82,7],[122,20,82,18],[122,22,82,20],[122,28,82,26],[122,30,82,28],[122,50,82,48],[122,51,82,49],[122,52,82,50],[123,4,83,4],[124,4,84,4],[124,10,84,10,"challenge"],[124,19,84,19],[124,22,84,22],[124,26,84,22,"base64UrlToUint8Array"],[124,58,84,43],[124,60,84,44,"challengeStr"],[124,72,84,56],[124,73,84,57],[124,74,84,58,"buffer"],[124,80,84,64],[125,4,85,4],[126,4,86,4],[126,10,86,10,"user"],[126,14,86,14],[126,17,86,17,"Object"],[126,23,86,23],[126,24,86,24,"assign"],[126,30,86,30],[126,31,86,31,"Object"],[126,37,86,37],[126,38,86,38,"assign"],[126,44,86,44],[126,45,86,45],[126,46,86,46],[126,47,86,47],[126,49,86,49,"userOpts"],[126,57,86,57],[126,58,86,58],[126,60,86,60],[127,6,86,62,"id"],[127,8,86,64],[127,10,86,66],[127,14,86,66,"base64UrlToUint8Array"],[127,46,86,87],[127,48,86,88,"userOpts"],[127,56,86,96],[127,57,86,97,"id"],[127,59,86,99],[127,60,86,100],[127,61,86,101,"buffer"],[128,4,86,108],[128,5,86,109],[128,6,86,110],[129,4,87,4],[130,4,88,4],[130,10,88,10,"result"],[130,16,88,16],[130,19,88,19,"Object"],[130,25,88,25],[130,26,88,26,"assign"],[130,32,88,32],[130,33,88,33,"Object"],[130,39,88,39],[130,40,88,40,"assign"],[130,46,88,46],[130,47,88,47],[130,48,88,48],[130,49,88,49],[130,51,88,51,"restOptions"],[130,62,88,62],[130,63,88,63],[130,65,88,65],[131,6,88,67,"challenge"],[131,15,88,76],[132,6,89,8,"user"],[133,4,89,13],[133,5,89,14],[133,6,89,15],[134,4,90,4],[135,4,91,4],[135,8,91,8,"excludeCredentials"],[135,26,91,26],[135,30,91,30,"excludeCredentials"],[135,48,91,48],[135,49,91,49,"length"],[135,55,91,55],[135,58,91,58],[135,59,91,59],[135,61,91,61],[136,6,92,8,"result"],[136,12,92,14],[136,13,92,15,"excludeCredentials"],[136,31,92,33],[136,34,92,36],[136,38,92,40,"Array"],[136,43,92,45],[136,44,92,46,"excludeCredentials"],[136,62,92,64],[136,63,92,65,"length"],[136,69,92,71],[136,70,92,72],[137,6,93,8],[137,11,93,13],[137,15,93,17,"i"],[137,16,93,18],[137,19,93,21],[137,20,93,22],[137,22,93,24,"i"],[137,23,93,25],[137,26,93,28,"excludeCredentials"],[137,44,93,46],[137,45,93,47,"length"],[137,51,93,53],[137,53,93,55,"i"],[137,54,93,56],[137,56,93,58],[137,58,93,60],[138,8,94,12],[138,14,94,18,"cred"],[138,18,94,22],[138,21,94,25,"excludeCredentials"],[138,39,94,43],[138,40,94,44,"i"],[138,41,94,45],[138,42,94,46],[139,8,95,12,"result"],[139,14,95,18],[139,15,95,19,"excludeCredentials"],[139,33,95,37],[139,34,95,38,"i"],[139,35,95,39],[139,36,95,40],[139,39,95,43,"Object"],[139,45,95,49],[139,46,95,50,"assign"],[139,52,95,56],[139,53,95,57,"Object"],[139,59,95,63],[139,60,95,64,"assign"],[139,66,95,70],[139,67,95,71],[139,68,95,72],[139,69,95,73],[139,71,95,75,"cred"],[139,75,95,79],[139,76,95,80],[139,78,95,82],[140,10,95,84,"id"],[140,12,95,86],[140,14,95,88],[140,18,95,88,"base64UrlToUint8Array"],[140,50,95,109],[140,52,95,110,"cred"],[140,56,95,114],[140,57,95,115,"id"],[140,59,95,117],[140,60,95,118],[140,61,95,119,"buffer"],[140,67,95,125],[141,10,95,127,"type"],[141,14,95,131],[141,16,95,133,"cred"],[141,20,95,137],[141,21,95,138,"type"],[141,25,95,142],[141,29,95,146],[141,41,95,158],[142,10,96,16],[143,10,97,16,"transports"],[143,20,97,26],[143,22,97,28,"cred"],[143,26,97,32],[143,27,97,33,"transports"],[144,8,97,44],[144,9,97,45],[144,10,97,46],[145,6,98,8],[146,4,99,4],[147,4,100,4],[147,11,100,11,"result"],[147,17,100,17],[148,2,101,0],[149,2,102,0],[150,0,103,0],[151,0,104,0],[152,0,105,0],[153,0,106,0],[154,0,107,0],[155,0,108,0],[156,0,109,0],[157,0,110,0],[158,2,111,7],[158,11,111,16,"deserializeCredentialRequestOptions"],[158,46,111,51,"deserializeCredentialRequestOptions"],[158,47,111,52,"options"],[158,54,111,59],[158,56,111,61],[159,4,112,4],[159,8,112,8],[159,9,112,9,"options"],[159,16,112,16],[159,18,112,18],[160,6,113,8],[160,12,113,14],[160,16,113,18,"Error"],[160,21,113,23],[160,22,113,24],[160,63,113,65],[160,64,113,66],[161,4,114,4],[162,4,115,4],[163,4,116,4],[163,8,116,8],[163,15,116,15,"PublicKeyCredential"],[163,34,116,34],[163,39,116,39],[163,50,116,50],[163,54,117,8],[163,83,117,37],[163,87,117,41,"PublicKeyCredential"],[163,106,117,60],[163,110,118,8],[163,117,118,15,"PublicKeyCredential"],[163,136,118,34],[163,137,119,13,"parseRequestOptionsFromJSON"],[163,164,119,40],[163,169,119,45],[163,179,119,55],[163,181,119,57],[164,6,120,8],[165,6,121,8],[165,13,121,15,"PublicKeyCredential"],[165,32,121,34],[165,33,121,35,"parseRequestOptionsFromJSON"],[165,60,121,62],[165,61,121,63,"options"],[165,68,121,70],[165,69,121,71],[166,4,122,4],[167,4,123,4],[168,4,124,4],[169,4,125,4],[169,10,125,10],[170,8,125,12,"challenge"],[170,17,125,21],[170,19,125,23,"challengeStr"],[170,31,125,35],[171,8,125,37,"allowCredentials"],[172,6,125,54],[172,7,125,55],[172,10,125,58,"options"],[172,17,125,65],[173,6,125,67,"restOptions"],[173,17,125,78],[173,20,125,81],[173,24,125,81,"__rest"],[173,37,125,87],[173,39,125,88,"options"],[174,6,126,4],[175,6,126,4],[175,8,127,6],[175,9,127,7],[175,20,127,18],[175,22,127,20],[175,40,127,38],[175,41,127,39],[175,42,127,40],[176,4,128,4],[177,4,129,4],[177,10,129,10,"challenge"],[177,19,129,19],[177,22,129,22],[177,26,129,22,"base64UrlToUint8Array"],[177,58,129,43],[177,60,129,44,"challengeStr"],[177,72,129,56],[177,73,129,57],[177,74,129,58,"buffer"],[177,80,129,64],[178,4,130,4],[179,4,131,4],[179,10,131,10,"result"],[179,16,131,16],[179,19,131,19,"Object"],[179,25,131,25],[179,26,131,26,"assign"],[179,32,131,32],[179,33,131,33,"Object"],[179,39,131,39],[179,40,131,40,"assign"],[179,46,131,46],[179,47,131,47],[179,48,131,48],[179,49,131,49],[179,51,131,51,"restOptions"],[179,62,131,62],[179,63,131,63],[179,65,131,65],[180,6,131,67,"challenge"],[181,4,131,77],[181,5,131,78],[181,6,131,79],[182,4,132,4],[183,4,133,4],[183,8,133,8,"allowCredentials"],[183,24,133,24],[183,28,133,28,"allowCredentials"],[183,44,133,44],[183,45,133,45,"length"],[183,51,133,51],[183,54,133,54],[183,55,133,55],[183,57,133,57],[184,6,134,8,"result"],[184,12,134,14],[184,13,134,15,"allowCredentials"],[184,29,134,31],[184,32,134,34],[184,36,134,38,"Array"],[184,41,134,43],[184,42,134,44,"allowCredentials"],[184,58,134,60],[184,59,134,61,"length"],[184,65,134,67],[184,66,134,68],[185,6,135,8],[185,11,135,13],[185,15,135,17,"i"],[185,16,135,18],[185,19,135,21],[185,20,135,22],[185,22,135,24,"i"],[185,23,135,25],[185,26,135,28,"allowCredentials"],[185,42,135,44],[185,43,135,45,"length"],[185,49,135,51],[185,51,135,53,"i"],[185,52,135,54],[185,54,135,56],[185,56,135,58],[186,8,136,12],[186,14,136,18,"cred"],[186,18,136,22],[186,21,136,25,"allowCredentials"],[186,37,136,41],[186,38,136,42,"i"],[186,39,136,43],[186,40,136,44],[187,8,137,12,"result"],[187,14,137,18],[187,15,137,19,"allowCredentials"],[187,31,137,35],[187,32,137,36,"i"],[187,33,137,37],[187,34,137,38],[187,37,137,41,"Object"],[187,43,137,47],[187,44,137,48,"assign"],[187,50,137,54],[187,51,137,55,"Object"],[187,57,137,61],[187,58,137,62,"assign"],[187,64,137,68],[187,65,137,69],[187,66,137,70],[187,67,137,71],[187,69,137,73,"cred"],[187,73,137,77],[187,74,137,78],[187,76,137,80],[188,10,137,82,"id"],[188,12,137,84],[188,14,137,86],[188,18,137,86,"base64UrlToUint8Array"],[188,50,137,107],[188,52,137,108,"cred"],[188,56,137,112],[188,57,137,113,"id"],[188,59,137,115],[188,60,137,116],[188,61,137,117,"buffer"],[188,67,137,123],[189,10,137,125,"type"],[189,14,137,129],[189,16,137,131,"cred"],[189,20,137,135],[189,21,137,136,"type"],[189,25,137,140],[189,29,137,144],[189,41,137,156],[190,10,138,16],[191,10,139,16,"transports"],[191,20,139,26],[191,22,139,28,"cred"],[191,26,139,32],[191,27,139,33,"transports"],[192,8,139,44],[192,9,139,45],[192,10,139,46],[193,6,140,8],[194,4,141,4],[195,4,142,4],[195,11,142,11,"result"],[195,17,142,17],[196,2,143,0],[197,2,144,0],[198,0,145,0],[199,0,146,0],[200,0,147,0],[201,0,148,0],[202,0,149,0],[203,0,150,0],[204,0,151,0],[205,0,152,0],[206,2,153,7],[206,11,153,16,"serializeCredentialCreationResponse"],[206,46,153,51,"serializeCredentialCreationResponse"],[206,47,153,52,"credential"],[206,57,153,62],[206,59,153,64],[207,4,154,4],[207,8,154,8,"_a"],[207,10,154,10],[208,4,155,4],[209,4,156,4],[209,8,156,8],[209,16,156,16],[209,20,156,20,"credential"],[209,30,156,30],[209,34,156,34],[209,41,156,41,"credential"],[209,51,156,51],[209,52,156,52,"toJSON"],[209,58,156,58],[209,63,156,63],[209,73,156,73],[209,75,156,75],[210,6,157,8],[211,6,158,8],[211,13,158,15,"credential"],[211,23,158,25],[211,24,158,26,"toJSON"],[211,30,158,32],[211,31,158,33],[211,32,158,34],[212,4,159,4],[213,4,160,4],[213,10,160,10,"credentialWithAttachment"],[213,34,160,34],[213,37,160,37,"credential"],[213,47,160,47],[214,4,161,4],[214,11,161,11],[215,6,162,8,"id"],[215,8,162,10],[215,10,162,12,"credential"],[215,20,162,22],[215,21,162,23,"id"],[215,23,162,25],[216,6,163,8,"rawId"],[216,11,163,13],[216,13,163,15,"credential"],[216,23,163,25],[216,24,163,26,"id"],[216,26,163,28],[217,6,164,8,"response"],[217,14,164,16],[217,16,164,18],[218,8,165,12,"attestationObject"],[218,25,165,29],[218,27,165,31],[218,31,165,31,"bytesToBase64URL"],[218,58,165,47],[218,60,165,48],[218,64,165,52,"Uint8Array"],[218,74,165,62],[218,75,165,63,"credential"],[218,85,165,73],[218,86,165,74,"response"],[218,94,165,82],[218,95,165,83,"attestationObject"],[218,112,165,100],[218,113,165,101],[218,114,165,102],[219,8,166,12,"clientDataJSON"],[219,22,166,26],[219,24,166,28],[219,28,166,28,"bytesToBase64URL"],[219,55,166,44],[219,57,166,45],[219,61,166,49,"Uint8Array"],[219,71,166,59],[219,72,166,60,"credential"],[219,82,166,70],[219,83,166,71,"response"],[219,91,166,79],[219,92,166,80,"clientDataJSON"],[219,106,166,94],[219,107,166,95],[220,6,167,8],[220,7,167,9],[221,6,168,8,"type"],[221,10,168,12],[221,12,168,14],[221,24,168,26],[222,6,169,8,"clientExtensionResults"],[222,28,169,30],[222,30,169,32,"credential"],[222,40,169,42],[222,41,169,43,"getClientExtensionResults"],[222,66,169,68],[222,67,169,69],[222,68,169,70],[223,6,170,8],[224,6,171,8,"authenticatorAttachment"],[224,29,171,31],[224,31,171,34],[224,32,171,35,"_a"],[224,34,171,37],[224,37,171,40,"credentialWithAttachment"],[224,61,171,64],[224,62,171,65,"authenticatorAttachment"],[224,85,171,88],[224,91,171,94],[224,95,171,98],[224,99,171,102,"_a"],[224,101,171,104],[224,106,171,109],[224,111,171,114],[224,112,171,115],[224,115,171,118,"_a"],[224,117,171,120],[224,120,171,123,"undefined"],[225,4,172,4],[225,5,172,5],[226,2,173,0],[227,2,174,0],[228,0,175,0],[229,0,176,0],[230,0,177,0],[231,0,178,0],[232,0,179,0],[233,0,180,0],[234,0,181,0],[235,0,182,0],[236,2,183,7],[236,11,183,16,"serializeCredentialRequestResponse"],[236,45,183,50,"serializeCredentialRequestResponse"],[236,46,183,51,"credential"],[236,56,183,61],[236,58,183,63],[237,4,184,4],[237,8,184,8,"_a"],[237,10,184,10],[238,4,185,4],[239,4,186,4],[239,8,186,8],[239,16,186,16],[239,20,186,20,"credential"],[239,30,186,30],[239,34,186,34],[239,41,186,41,"credential"],[239,51,186,51],[239,52,186,52,"toJSON"],[239,58,186,58],[239,63,186,63],[239,73,186,73],[239,75,186,75],[240,6,187,8],[241,6,188,8],[241,13,188,15,"credential"],[241,23,188,25],[241,24,188,26,"toJSON"],[241,30,188,32],[241,31,188,33],[241,32,188,34],[242,4,189,4],[243,4,190,4],[244,4,191,4],[245,4,192,4],[246,4,193,4],[246,10,193,10,"credentialWithAttachment"],[246,34,193,34],[246,37,193,37,"credential"],[246,47,193,47],[247,4,194,4],[247,10,194,10,"clientExtensionResults"],[247,32,194,32],[247,35,194,35,"credential"],[247,45,194,45],[247,46,194,46,"getClientExtensionResults"],[247,71,194,71],[247,72,194,72],[247,73,194,73],[248,4,195,4],[248,10,195,10,"assertionResponse"],[248,27,195,27],[248,30,195,30,"credential"],[248,40,195,40],[248,41,195,41,"response"],[248,49,195,49],[249,4,196,4],[249,11,196,11],[250,6,197,8,"id"],[250,8,197,10],[250,10,197,12,"credential"],[250,20,197,22],[250,21,197,23,"id"],[250,23,197,25],[251,6,198,8,"rawId"],[251,11,198,13],[251,13,198,15,"credential"],[251,23,198,25],[251,24,198,26,"id"],[251,26,198,28],[252,6,198,30],[253,6,199,8,"response"],[253,14,199,16],[253,16,199,18],[254,8,200,12,"authenticatorData"],[254,25,200,29],[254,27,200,31],[254,31,200,31,"bytesToBase64URL"],[254,58,200,47],[254,60,200,48],[254,64,200,52,"Uint8Array"],[254,74,200,62],[254,75,200,63,"assertionResponse"],[254,92,200,80],[254,93,200,81,"authenticatorData"],[254,110,200,98],[254,111,200,99],[254,112,200,100],[255,8,201,12,"clientDataJSON"],[255,22,201,26],[255,24,201,28],[255,28,201,28,"bytesToBase64URL"],[255,55,201,44],[255,57,201,45],[255,61,201,49,"Uint8Array"],[255,71,201,59],[255,72,201,60,"assertionResponse"],[255,89,201,77],[255,90,201,78,"clientDataJSON"],[255,104,201,92],[255,105,201,93],[255,106,201,94],[256,8,202,12,"signature"],[256,17,202,21],[256,19,202,23],[256,23,202,23,"bytesToBase64URL"],[256,50,202,39],[256,52,202,40],[256,56,202,44,"Uint8Array"],[256,66,202,54],[256,67,202,55,"assertionResponse"],[256,84,202,72],[256,85,202,73,"signature"],[256,94,202,82],[256,95,202,83],[256,96,202,84],[257,8,203,12,"userHandle"],[257,18,203,22],[257,20,203,24,"assertionResponse"],[257,37,203,41],[257,38,203,42,"userHandle"],[257,48,203,52],[257,51,204,18],[257,55,204,18,"bytesToBase64URL"],[257,82,204,34],[257,84,204,35],[257,88,204,39,"Uint8Array"],[257,98,204,49],[257,99,204,50,"assertionResponse"],[257,116,204,67],[257,117,204,68,"userHandle"],[257,127,204,78],[257,128,204,79],[257,129,204,80],[257,132,205,18,"undefined"],[258,6,206,8],[258,7,206,9],[259,6,207,8,"type"],[259,10,207,12],[259,12,207,14],[259,24,207,26],[260,6,208,8,"clientExtensionResults"],[260,28,208,30],[261,6,209,8],[262,6,210,8,"authenticatorAttachment"],[262,29,210,31],[262,31,210,34],[262,32,210,35,"_a"],[262,34,210,37],[262,37,210,40,"credentialWithAttachment"],[262,61,210,64],[262,62,210,65,"authenticatorAttachment"],[262,85,210,88],[262,91,210,94],[262,95,210,98],[262,99,210,102,"_a"],[262,101,210,104],[262,106,210,109],[262,111,210,114],[262,112,210,115],[262,115,210,118,"_a"],[262,117,210,120],[262,120,210,123,"undefined"],[263,4,211,4],[263,5,211,5],[264,2,212,0],[265,2,213,0],[266,0,214,0],[267,0,215,0],[268,0,216,0],[269,0,217,0],[270,0,218,0],[271,0,219,0],[272,0,220,0],[273,0,221,0],[274,0,222,0],[275,0,223,0],[276,0,224,0],[277,0,225,0],[278,2,226,7],[278,11,226,16,"isValidDomain"],[278,24,226,29,"isValidDomain"],[278,25,226,30,"hostname"],[278,33,226,38],[278,35,226,40],[279,4,227,4],[280,6,228,4],[281,6,229,4,"hostname"],[281,14,229,12],[281,19,229,17],[281,30,229,28],[281,34,229,32],[281,75,229,73],[281,76,229,74,"test"],[281,80,229,78],[281,81,229,79,"hostname"],[281,89,229,87],[282,4,229,88],[283,2,230,0],[284,2,231,0],[285,0,232,0],[286,0,233,0],[287,0,234,0],[288,0,235,0],[289,0,236,0],[290,0,237,0],[291,2,238,0],[291,11,238,9,"browserSupportsWebAuthn"],[291,34,238,32,"browserSupportsWebAuthn"],[291,35,238,32],[291,37,238,35],[292,4,239,4],[292,8,239,8,"_a"],[292,10,239,10],[292,12,239,12,"_b"],[292,14,239,14],[293,4,240,4],[293,11,240,11],[293,12,240,12],[293,14,240,14],[293,18,240,14,"isBrowser"],[293,36,240,23],[293,38,240,24],[293,39,240,25],[293,43,241,8],[293,64,241,29],[293,68,241,33,"window"],[293,74,241,39],[293,78,242,8,"window"],[293,84,242,14],[293,85,242,15,"PublicKeyCredential"],[293,104,242,34],[293,108,243,8],[293,121,243,21],[293,125,243,25,"navigator"],[293,134,243,34],[293,138,244,8],[293,146,244,16],[293,147,244,17,"_a"],[293,149,244,19],[293,152,244,22,"navigator"],[293,161,244,31],[293,166,244,36],[293,170,244,40],[293,174,244,44,"navigator"],[293,183,244,53],[293,188,244,58],[293,193,244,63],[293,194,244,64],[293,197,244,67],[293,202,244,72],[293,203,244,73],[293,206,244,76,"navigator"],[293,215,244,85],[293,216,244,86,"credentials"],[293,227,244,97],[293,233,244,103],[293,237,244,107],[293,241,244,111,"_a"],[293,243,244,113],[293,248,244,118],[293,253,244,123],[293,254,244,124],[293,257,244,127],[293,262,244,132],[293,263,244,133],[293,266,244,136,"_a"],[293,268,244,138],[293,269,244,139,"create"],[293,275,244,145],[293,276,244,146],[293,281,244,151],[293,291,244,161],[293,295,245,8],[293,303,245,16],[293,304,245,17,"_b"],[293,306,245,19],[293,309,245,22,"navigator"],[293,318,245,31],[293,323,245,36],[293,327,245,40],[293,331,245,44,"navigator"],[293,340,245,53],[293,345,245,58],[293,350,245,63],[293,351,245,64],[293,354,245,67],[293,359,245,72],[293,360,245,73],[293,363,245,76,"navigator"],[293,372,245,85],[293,373,245,86,"credentials"],[293,384,245,97],[293,390,245,103],[293,394,245,107],[293,398,245,111,"_b"],[293,400,245,113],[293,405,245,118],[293,410,245,123],[293,411,245,124],[293,414,245,127],[293,419,245,132],[293,420,245,133],[293,423,245,136,"_b"],[293,425,245,138],[293,426,245,139,"get"],[293,429,245,142],[293,430,245,143],[293,435,245,148],[293,445,245,158],[293,446,245,159],[294,2,246,0],[295,2,247,0],[296,0,248,0],[297,0,249,0],[298,0,250,0],[299,0,251,0],[300,0,252,0],[301,0,253,0],[302,0,254,0],[303,0,255,0],[304,2,256,7],[304,17,256,22,"createCredential"],[304,33,256,38,"createCredential"],[304,34,256,39,"options"],[304,41,256,46],[304,43,256,48],[305,4,257,4],[305,8,257,8],[306,6,258,8],[306,12,258,14,"response"],[306,20,258,22],[306,23,258,25],[306,29,258,31,"navigator"],[306,38,258,40],[306,39,258,41,"credentials"],[306,50,258,52],[306,51,258,53,"create"],[306,57,258,59],[306,58,259,8],[307,6,260,8,"options"],[307,13,260,15],[307,14,260,16],[308,6,261,8],[308,10,261,12],[308,11,261,13,"response"],[308,19,261,21],[308,21,261,23],[309,8,262,12],[309,15,262,19],[310,10,263,16,"data"],[310,14,263,20],[310,16,263,22],[310,20,263,26],[311,10,264,16,"error"],[311,15,264,21],[311,17,264,23],[311,21,264,27,"WebAuthnUnknownError"],[311,51,264,47],[311,52,264,48],[311,79,264,75],[311,81,264,77,"response"],[311,89,264,85],[312,8,265,12],[312,9,265,13],[313,6,266,8],[314,6,267,8],[314,10,267,12],[314,12,267,14,"response"],[314,20,267,22],[314,32,267,34,"PublicKeyCredential"],[314,51,267,53],[314,52,267,54],[314,54,267,56],[315,8,268,12],[315,15,268,19],[316,10,269,16,"data"],[316,14,269,20],[316,16,269,22],[316,20,269,26],[317,10,270,16,"error"],[317,15,270,21],[317,17,270,23],[317,21,270,27,"WebAuthnUnknownError"],[317,51,270,47],[317,52,270,48],[317,97,270,93],[317,99,270,95,"response"],[317,107,270,103],[318,8,271,12],[318,9,271,13],[319,6,272,8],[320,6,273,8],[320,13,273,15],[321,8,273,17,"data"],[321,12,273,21],[321,14,273,23,"response"],[321,22,273,31],[322,8,273,33,"error"],[322,13,273,38],[322,15,273,40],[323,6,273,45],[323,7,273,46],[324,4,274,4],[324,5,274,5],[324,6,275,4],[324,13,275,11,"err"],[324,16,275,14],[324,18,275,16],[325,6,276,8],[325,13,276,15],[326,8,277,12,"data"],[326,12,277,16],[326,14,277,18],[326,18,277,22],[327,8,278,12,"error"],[327,13,278,17],[327,15,278,19],[327,19,278,19,"identifyRegistrationError"],[327,54,278,44],[327,56,278,45],[328,10,279,16,"error"],[328,15,279,21],[328,17,279,23,"err"],[328,20,279,26],[329,10,280,16,"options"],[330,8,281,12],[330,9,281,13],[331,6,282,8],[331,7,282,9],[332,4,283,4],[333,2,284,0],[334,2,285,0],[335,0,286,0],[336,0,287,0],[337,0,288,0],[338,0,289,0],[339,0,290,0],[340,0,291,0],[341,0,292,0],[342,0,293,0],[343,2,294,7],[343,17,294,22,"getCredential"],[343,30,294,35,"getCredential"],[343,31,294,36,"options"],[343,38,294,43],[343,40,294,45],[344,4,295,4],[344,8,295,8],[345,6,296,8],[345,12,296,14,"response"],[345,20,296,22],[345,23,296,25],[345,29,296,31,"navigator"],[345,38,296,40],[345,39,296,41,"credentials"],[345,50,296,52],[345,51,296,53,"get"],[345,54,296,56],[345,55,297,8],[346,6,298,8,"options"],[346,13,298,15],[346,14,298,16],[347,6,299,8],[347,10,299,12],[347,11,299,13,"response"],[347,19,299,21],[347,21,299,23],[348,8,300,12],[348,15,300,19],[349,10,301,16,"data"],[349,14,301,20],[349,16,301,22],[349,20,301,26],[350,10,302,16,"error"],[350,15,302,21],[350,17,302,23],[350,21,302,27,"WebAuthnUnknownError"],[350,51,302,47],[350,52,302,48],[350,79,302,75],[350,81,302,77,"response"],[350,89,302,85],[351,8,303,12],[351,9,303,13],[352,6,304,8],[353,6,305,8],[353,10,305,12],[353,12,305,14,"response"],[353,20,305,22],[353,32,305,34,"PublicKeyCredential"],[353,51,305,53],[353,52,305,54],[353,54,305,56],[354,8,306,12],[354,15,306,19],[355,10,307,16,"data"],[355,14,307,20],[355,16,307,22],[355,20,307,26],[356,10,308,16,"error"],[356,15,308,21],[356,17,308,23],[356,21,308,27,"WebAuthnUnknownError"],[356,51,308,47],[356,52,308,48],[356,97,308,93],[356,99,308,95,"response"],[356,107,308,103],[357,8,309,12],[357,9,309,13],[358,6,310,8],[359,6,311,8],[359,13,311,15],[360,8,311,17,"data"],[360,12,311,21],[360,14,311,23,"response"],[360,22,311,31],[361,8,311,33,"error"],[361,13,311,38],[361,15,311,40],[362,6,311,45],[362,7,311,46],[363,4,312,4],[363,5,312,5],[363,6,313,4],[363,13,313,11,"err"],[363,16,313,14],[363,18,313,16],[364,6,314,8],[364,13,314,15],[365,8,315,12,"data"],[365,12,315,16],[365,14,315,18],[365,18,315,22],[366,8,316,12,"error"],[366,13,316,17],[366,15,316,19],[366,19,316,19,"identifyAuthenticationError"],[366,56,316,46],[366,58,316,47],[367,10,317,16,"error"],[367,15,317,21],[367,17,317,23,"err"],[367,20,317,26],[368,10,318,16,"options"],[369,8,319,12],[369,9,319,13],[370,6,320,8],[370,7,320,9],[371,4,321,4],[372,2,322,0],[373,2,323,7],[373,8,323,13,"DEFAULT_CREATION_OPTIONS"],[373,32,323,37],[373,35,323,37,"exports"],[373,42,323,37],[373,43,323,37,"DEFAULT_CREATION_OPTIONS"],[373,67,323,37],[373,70,323,40],[374,4,324,4,"hints"],[374,9,324,9],[374,11,324,11],[374,12,324,12],[374,26,324,26],[374,27,324,27],[375,4,325,4,"authenticatorSelection"],[375,26,325,26],[375,28,325,28],[376,6,326,8,"authenticatorAttachment"],[376,29,326,31],[376,31,326,33],[376,47,326,49],[377,6,327,8,"requireResidentKey"],[377,24,327,26],[377,26,327,28],[377,31,327,33],[378,6,328,8],[379,6,329,8,"userVerification"],[379,22,329,24],[379,24,329,26],[379,35,329,37],[380,6,330,8,"residentKey"],[380,17,330,19],[380,19,330,21],[381,4,331,4],[381,5,331,5],[382,4,332,4,"attestation"],[382,15,332,15],[382,17,332,17],[383,2,333,0],[383,3,333,1],[384,2,334,7],[384,8,334,13,"DEFAULT_REQUEST_OPTIONS"],[384,31,334,36],[384,34,334,36,"exports"],[384,41,334,36],[384,42,334,36,"DEFAULT_REQUEST_OPTIONS"],[384,65,334,36],[384,68,334,39],[385,4,335,4],[386,4,336,4,"userVerification"],[386,20,336,20],[386,22,336,22],[386,33,336,33],[387,4,337,4,"hints"],[387,9,337,9],[387,11,337,11],[387,12,337,12],[387,26,337,26],[388,2,338,0],[388,3,338,1],[389,2,339,0],[389,11,339,9,"deepMerge"],[389,20,339,18,"deepMerge"],[389,21,339,19],[389,24,339,22,"sources"],[389,31,339,29],[389,33,339,31],[390,4,340,4],[390,10,340,10,"isObject"],[390,18,340,18],[390,21,340,22,"val"],[390,24,340,25],[390,28,340,30,"val"],[390,31,340,33],[390,36,340,38],[390,40,340,42],[390,44,340,46],[390,51,340,53,"val"],[390,54,340,56],[390,59,340,61],[390,67,340,69],[390,71,340,73],[390,72,340,74,"Array"],[390,77,340,79],[390,78,340,80,"isArray"],[390,85,340,87],[390,86,340,88,"val"],[390,89,340,91],[390,90,340,92],[391,4,341,4],[391,10,341,10,"isArrayBufferLike"],[391,27,341,27],[391,30,341,31,"val"],[391,33,341,34],[391,37,341,39,"val"],[391,40,341,42],[391,52,341,54,"ArrayBuffer"],[391,63,341,65],[391,67,341,69,"ArrayBuffer"],[391,78,341,80],[391,79,341,81,"isView"],[391,85,341,87],[391,86,341,88,"val"],[391,89,341,91],[391,90,341,92],[392,4,342,4],[392,10,342,10,"result"],[392,16,342,16],[392,19,342,19],[392,20,342,20],[392,21,342,21],[393,4,343,4],[393,9,343,9],[393,15,343,15,"source"],[393,21,343,21],[393,25,343,25,"sources"],[393,32,343,32],[393,34,343,34],[394,6,344,8],[394,10,344,12],[394,11,344,13,"source"],[394,17,344,19],[394,19,345,12],[395,6,346,8],[395,11,346,13],[395,17,346,19,"key"],[395,20,346,22],[395,24,346,26,"source"],[395,30,346,32],[395,32,346,34],[396,8,347,12],[396,14,347,18,"value"],[396,19,347,23],[396,22,347,26,"source"],[396,28,347,32],[396,29,347,33,"key"],[396,32,347,36],[396,33,347,37],[397,8,348,12],[397,12,348,16,"value"],[397,17,348,21],[397,22,348,26,"undefined"],[397,31,348,35],[397,33,349,16],[398,8,350,12],[398,12,350,16,"Array"],[398,17,350,21],[398,18,350,22,"isArray"],[398,25,350,29],[398,26,350,30,"value"],[398,31,350,35],[398,32,350,36],[398,34,350,38],[399,10,351,16],[400,10,352,16,"result"],[400,16,352,22],[400,17,352,23,"key"],[400,20,352,26],[400,21,352,27],[400,24,352,30,"value"],[400,29,352,35],[401,8,353,12],[401,9,353,13],[401,15,354,17],[401,19,354,21,"isArrayBufferLike"],[401,36,354,38],[401,37,354,39,"value"],[401,42,354,44],[401,43,354,45],[401,45,354,47],[402,10,355,16,"result"],[402,16,355,22],[402,17,355,23,"key"],[402,20,355,26],[402,21,355,27],[402,24,355,30,"value"],[402,29,355,35],[403,8,356,12],[403,9,356,13],[403,15,357,17],[403,19,357,21,"isObject"],[403,27,357,29],[403,28,357,30,"value"],[403,33,357,35],[403,34,357,36],[403,36,357,38],[404,10,358,16],[404,16,358,22,"existing"],[404,24,358,30],[404,27,358,33,"result"],[404,33,358,39],[404,34,358,40,"key"],[404,37,358,43],[404,38,358,44],[405,10,359,16],[405,14,359,20,"isObject"],[405,22,359,28],[405,23,359,29,"existing"],[405,31,359,37],[405,32,359,38],[405,34,359,40],[406,12,360,20,"result"],[406,18,360,26],[406,19,360,27,"key"],[406,22,360,30],[406,23,360,31],[406,26,360,34,"deepMerge"],[406,35,360,43],[406,36,360,44,"existing"],[406,44,360,52],[406,46,360,54,"value"],[406,51,360,59],[406,52,360,60],[407,10,361,16],[407,11,361,17],[407,17,362,21],[408,12,363,20,"result"],[408,18,363,26],[408,19,363,27,"key"],[408,22,363,30],[408,23,363,31],[408,26,363,34,"deepMerge"],[408,35,363,43],[408,36,363,44,"value"],[408,41,363,49],[408,42,363,50],[409,10,364,16],[410,8,365,12],[410,9,365,13],[410,15,366,17],[411,10,367,16,"result"],[411,16,367,22],[411,17,367,23,"key"],[411,20,367,26],[411,21,367,27],[411,24,367,30,"value"],[411,29,367,35],[412,8,368,12],[413,6,369,8],[414,4,370,4],[415,4,371,4],[415,11,371,11,"result"],[415,17,371,17],[416,2,372,0],[417,2,373,0],[418,0,374,0],[419,0,375,0],[420,0,376,0],[421,0,377,0],[422,0,378,0],[423,0,379,0],[424,0,380,0],[425,0,381,0],[426,0,382,0],[427,2,383,7],[427,11,383,16,"mergeCredentialCreationOptions"],[427,41,383,46,"mergeCredentialCreationOptions"],[427,42,383,47,"baseOptions"],[427,53,383,58],[427,55,383,60,"overrides"],[427,64,383,69],[427,66,383,71],[428,4,384,4],[428,11,384,11,"deepMerge"],[428,20,384,20],[428,21,384,21,"DEFAULT_CREATION_OPTIONS"],[428,45,384,45],[428,47,384,47,"baseOptions"],[428,58,384,58],[428,60,384,60,"overrides"],[428,69,384,69],[428,73,384,73],[428,74,384,74],[428,75,384,75],[428,76,384,76],[429,2,385,0],[430,2,386,0],[431,0,387,0],[432,0,388,0],[433,0,389,0],[434,0,390,0],[435,0,391,0],[436,0,392,0],[437,0,393,0],[438,0,394,0],[439,2,395,7],[439,11,395,16,"mergeCredentialRequestOptions"],[439,40,395,45,"mergeCredentialRequestOptions"],[439,41,395,46,"baseOptions"],[439,52,395,57],[439,54,395,59,"overrides"],[439,63,395,68],[439,65,395,70],[440,4,396,4],[440,11,396,11,"deepMerge"],[440,20,396,20],[440,21,396,21,"DEFAULT_REQUEST_OPTIONS"],[440,44,396,44],[440,46,396,46,"baseOptions"],[440,57,396,57],[440,59,396,59,"overrides"],[440,68,396,68],[440,72,396,72],[440,73,396,73],[440,74,396,74],[440,75,396,75],[441,2,397,0],[442,2,398,0],[443,0,399,0],[444,0,400,0],[445,0,401,0],[446,0,402,0],[447,0,403,0],[448,0,404,0],[449,0,405,0],[450,2,406,7],[450,8,406,13,"WebAuthnApi"],[450,19,406,24],[450,20,406,25],[451,4,407,4,"constructor"],[451,15,407,15,"constructor"],[451,16,407,16,"client"],[451,22,407,22],[451,24,407,24],[452,6,408,8],[452,10,408,12],[452,11,408,13,"client"],[452,17,408,19],[452,20,408,22,"client"],[452,26,408,28],[453,6,409,8],[454,6,410,8],[454,10,410,12],[454,11,410,13,"enroll"],[454,17,410,19],[454,20,410,22],[454,24,410,26],[454,25,410,27,"_enroll"],[454,32,410,34],[454,33,410,35,"bind"],[454,37,410,39],[454,38,410,40],[454,42,410,44],[454,43,410,45],[455,6,411,8],[455,10,411,12],[455,11,411,13,"challenge"],[455,20,411,22],[455,23,411,25],[455,27,411,29],[455,28,411,30,"_challenge"],[455,38,411,40],[455,39,411,41,"bind"],[455,43,411,45],[455,44,411,46],[455,48,411,50],[455,49,411,51],[456,6,412,8],[456,10,412,12],[456,11,412,13,"verify"],[456,17,412,19],[456,20,412,22],[456,24,412,26],[456,25,412,27,"_verify"],[456,32,412,34],[456,33,412,35,"bind"],[456,37,412,39],[456,38,412,40],[456,42,412,44],[456,43,412,45],[457,6,413,8],[457,10,413,12],[457,11,413,13,"authenticate"],[457,23,413,25],[457,26,413,28],[457,30,413,32],[457,31,413,33,"_authenticate"],[457,44,413,46],[457,45,413,47,"bind"],[457,49,413,51],[457,50,413,52],[457,54,413,56],[457,55,413,57],[458,6,414,8],[458,10,414,12],[458,11,414,13,"register"],[458,19,414,21],[458,22,414,24],[458,26,414,28],[458,27,414,29,"_register"],[458,36,414,38],[458,37,414,39,"bind"],[458,41,414,43],[458,42,414,44],[458,46,414,48],[458,47,414,49],[459,4,415,4],[460,4,416,4],[461,0,417,0],[462,0,418,0],[463,0,419,0],[464,0,420,0],[465,0,421,0],[466,0,422,0],[467,0,423,0],[468,0,424,0],[469,4,425,4],[469,10,425,10,"_enroll"],[469,17,425,17,"_enroll"],[469,18,425,18,"params"],[469,24,425,24],[469,26,425,26],[470,6,426,8],[470,13,426,15],[470,17,426,19],[470,18,426,20,"client"],[470,24,426,26],[470,25,426,27,"mfa"],[470,28,426,30],[470,29,426,31,"enroll"],[470,35,426,37],[470,36,426,38,"Object"],[470,42,426,44],[470,43,426,45,"assign"],[470,49,426,51],[470,50,426,52,"Object"],[470,56,426,58],[470,57,426,59,"assign"],[470,63,426,65],[470,64,426,66],[470,65,426,67],[470,66,426,68],[470,68,426,70,"params"],[470,74,426,76],[470,75,426,77],[470,77,426,79],[471,8,426,81,"factorType"],[471,18,426,91],[471,20,426,93],[472,6,426,104],[472,7,426,105],[472,8,426,106],[472,9,426,107],[473,4,427,4],[474,4,428,4],[475,0,429,0],[476,0,430,0],[477,0,431,0],[478,0,432,0],[479,0,433,0],[480,0,434,0],[481,0,435,0],[482,0,436,0],[483,0,437,0],[484,0,438,0],[485,0,439,0],[486,0,440,0],[487,0,441,0],[488,4,442,4],[488,10,442,10,"_challenge"],[488,20,442,20,"_challenge"],[488,21,442,21],[489,6,442,23,"factorId"],[489,14,442,31],[490,6,442,33,"webauthn"],[490,14,442,41],[491,6,442,43,"friendlyName"],[491,18,442,55],[492,6,442,57,"signal"],[493,4,442,65],[493,5,442,66],[493,7,442,68,"overrides"],[493,16,442,77],[493,18,442,79],[494,6,443,8],[494,10,443,12],[495,8,444,12],[496,8,445,12],[496,14,445,18],[497,10,445,20,"data"],[497,14,445,24],[497,16,445,26,"challengeResponse"],[497,33,445,43],[498,10,445,45,"error"],[498,15,445,50],[498,17,445,52,"challengeError"],[499,8,445,67],[499,9,445,68],[499,12,445,71],[499,18,445,77],[499,22,445,81],[499,23,445,82,"client"],[499,29,445,88],[499,30,445,89,"mfa"],[499,33,445,92],[499,34,445,93,"challenge"],[499,43,445,102],[499,44,445,103],[500,10,446,16,"factorId"],[500,18,446,24],[501,10,447,16,"webauthn"],[502,8,448,12],[502,9,448,13],[502,10,448,14],[503,8,449,12],[503,12,449,16],[503,13,449,17,"challengeResponse"],[503,30,449,34],[503,32,449,36],[504,10,450,16],[504,17,450,23],[505,12,450,25,"data"],[505,16,450,29],[505,18,450,31],[505,22,450,35],[506,12,450,37,"error"],[506,17,450,42],[506,19,450,44,"challengeError"],[507,10,450,59],[507,11,450,60],[508,8,451,12],[509,8,452,12],[509,14,452,18,"abortSignal"],[509,25,452,29],[509,28,452,32,"signal"],[509,34,452,38],[509,39,452,43],[509,43,452,47],[509,47,452,51,"signal"],[509,53,452,57],[509,58,452,62],[509,63,452,67],[509,64,452,68],[509,67,452,71,"signal"],[509,73,452,77],[509,76,452,80,"webAuthnAbortService"],[509,96,452,100],[509,97,452,101,"createNewAbortSignal"],[509,117,452,121],[509,118,452,122],[509,119,452,123],[510,8,453,12],[511,8,454,12],[511,12,454,16,"challengeResponse"],[511,29,454,33],[511,30,454,34,"webauthn"],[511,38,454,42],[511,39,454,43,"type"],[511,43,454,47],[511,48,454,52],[511,56,454,60],[511,58,454,62],[512,10,455,16],[512,16,455,22],[513,12,455,24,"user"],[514,10,455,29],[514,11,455,30],[514,14,455,33,"challengeResponse"],[514,31,455,50],[514,32,455,51,"webauthn"],[514,40,455,59],[514,41,455,60,"credential_options"],[514,59,455,78],[514,60,455,79,"publicKey"],[514,69,455,88],[515,10,456,16],[515,14,456,20],[515,15,456,21,"user"],[515,19,456,25],[515,20,456,26,"name"],[515,24,456,30],[515,26,456,32],[516,12,457,20,"user"],[516,16,457,24],[516,17,457,25,"name"],[516,21,457,29],[516,24,457,32],[516,27,457,35,"user"],[516,31,457,39],[516,32,457,40,"id"],[516,34,457,42],[516,38,457,46,"friendlyName"],[516,50,457,58],[516,52,457,60],[517,10,458,16],[518,10,459,16],[518,14,459,20],[518,15,459,21,"user"],[518,19,459,25],[518,20,459,26,"displayName"],[518,31,459,37],[518,33,459,39],[519,12,460,20,"user"],[519,16,460,24],[519,17,460,25,"displayName"],[519,28,460,36],[519,31,460,39,"user"],[519,35,460,43],[519,36,460,44,"name"],[519,40,460,48],[520,10,461,16],[521,8,462,12],[522,8,463,12],[522,16,463,20,"challengeResponse"],[522,33,463,37],[522,34,463,38,"webauthn"],[522,42,463,46],[522,43,463,47,"type"],[522,47,463,51],[523,10,464,16],[523,15,464,21],[523,23,464,29],[524,12,464,31],[525,14,465,20],[525,20,465,26,"options"],[525,27,465,33],[525,30,465,36,"mergeCredentialCreationOptions"],[525,60,465,66],[525,61,465,67,"challengeResponse"],[525,78,465,84],[525,79,465,85,"webauthn"],[525,87,465,93],[525,88,465,94,"credential_options"],[525,106,465,112],[525,107,465,113,"publicKey"],[525,116,465,122],[525,118,465,124,"overrides"],[525,127,465,133],[525,132,465,138],[525,136,465,142],[525,140,465,146,"overrides"],[525,149,465,155],[525,154,465,160],[525,159,465,165],[525,160,465,166],[525,163,465,169],[525,168,465,174],[525,169,465,175],[525,172,465,178,"overrides"],[525,181,465,187],[525,182,465,188,"create"],[525,188,465,194],[525,189,465,195],[526,14,466,20],[526,20,466,26],[527,16,466,28,"data"],[527,20,466,32],[528,16,466,34,"error"],[529,14,466,40],[529,15,466,41],[529,18,466,44],[529,24,466,50,"createCredential"],[529,40,466,66],[529,41,466,67],[530,16,467,24,"publicKey"],[530,25,467,33],[530,27,467,35,"options"],[530,34,467,42],[531,16,468,24,"signal"],[531,22,468,30],[531,24,468,32,"abortSignal"],[532,14,469,20],[532,15,469,21],[532,16,469,22],[533,14,470,20],[533,18,470,24,"data"],[533,22,470,28],[533,24,470,30],[534,16,471,24],[534,23,471,31],[535,18,472,28,"data"],[535,22,472,32],[535,24,472,34],[536,20,473,32,"factorId"],[536,28,473,40],[537,20,474,32,"challengeId"],[537,31,474,43],[537,33,474,45,"challengeResponse"],[537,50,474,62],[537,51,474,63,"id"],[537,53,474,65],[538,20,475,32,"webauthn"],[538,28,475,40],[538,30,475,42],[539,22,476,36,"type"],[539,26,476,40],[539,28,476,42,"challengeResponse"],[539,45,476,59],[539,46,476,60,"webauthn"],[539,54,476,68],[539,55,476,69,"type"],[539,59,476,73],[540,22,477,36,"credential_response"],[540,41,477,55],[540,43,477,57,"data"],[541,20,478,32],[542,18,479,28],[542,19,479,29],[543,18,480,28,"error"],[543,23,480,33],[543,25,480,35],[544,16,481,24],[544,17,481,25],[545,14,482,20],[546,14,483,20],[546,21,483,27],[547,16,483,29,"data"],[547,20,483,33],[547,22,483,35],[547,26,483,39],[548,16,483,41,"error"],[549,14,483,47],[549,15,483,48],[550,12,484,16],[551,10,485,16],[551,15,485,21],[551,24,485,30],[552,12,485,32],[553,14,486,20],[553,20,486,26,"options"],[553,27,486,33],[553,30,486,36,"mergeCredentialRequestOptions"],[553,59,486,65],[553,60,486,66,"challengeResponse"],[553,77,486,83],[553,78,486,84,"webauthn"],[553,86,486,92],[553,87,486,93,"credential_options"],[553,105,486,111],[553,106,486,112,"publicKey"],[553,115,486,121],[553,117,486,123,"overrides"],[553,126,486,132],[553,131,486,137],[553,135,486,141],[553,139,486,145,"overrides"],[553,148,486,154],[553,153,486,159],[553,158,486,164],[553,159,486,165],[553,162,486,168],[553,167,486,173],[553,168,486,174],[553,171,486,177,"overrides"],[553,180,486,186],[553,181,486,187,"request"],[553,188,486,194],[553,189,486,195],[554,14,487,20],[554,20,487,26],[555,16,487,28,"data"],[555,20,487,32],[556,16,487,34,"error"],[557,14,487,40],[557,15,487,41],[557,18,487,44],[557,24,487,50,"getCredential"],[557,37,487,63],[557,38,487,64,"Object"],[557,44,487,70],[557,45,487,71,"assign"],[557,51,487,77],[557,52,487,78,"Object"],[557,58,487,84],[557,59,487,85,"assign"],[557,65,487,91],[557,66,487,92],[557,67,487,93],[557,68,487,94],[557,70,487,96,"challengeResponse"],[557,87,487,113],[557,88,487,114,"webauthn"],[557,96,487,122],[557,97,487,123,"credential_options"],[557,115,487,141],[557,116,487,142],[557,118,487,144],[558,16,487,146,"publicKey"],[558,25,487,155],[558,27,487,157,"options"],[558,34,487,164],[559,16,487,166,"signal"],[559,22,487,172],[559,24,487,174,"abortSignal"],[560,14,487,186],[560,15,487,187],[560,16,487,188],[560,17,487,189],[561,14,488,20],[561,18,488,24,"data"],[561,22,488,28],[561,24,488,30],[562,16,489,24],[562,23,489,31],[563,18,490,28,"data"],[563,22,490,32],[563,24,490,34],[564,20,491,32,"factorId"],[564,28,491,40],[565,20,492,32,"challengeId"],[565,31,492,43],[565,33,492,45,"challengeResponse"],[565,50,492,62],[565,51,492,63,"id"],[565,53,492,65],[566,20,493,32,"webauthn"],[566,28,493,40],[566,30,493,42],[567,22,494,36,"type"],[567,26,494,40],[567,28,494,42,"challengeResponse"],[567,45,494,59],[567,46,494,60,"webauthn"],[567,54,494,68],[567,55,494,69,"type"],[567,59,494,73],[568,22,495,36,"credential_response"],[568,41,495,55],[568,43,495,57,"data"],[569,20,496,32],[570,18,497,28],[570,19,497,29],[571,18,498,28,"error"],[571,23,498,33],[571,25,498,35],[572,16,499,24],[572,17,499,25],[573,14,500,20],[574,14,501,20],[574,21,501,27],[575,16,501,29,"data"],[575,20,501,33],[575,22,501,35],[575,26,501,39],[576,16,501,41,"error"],[577,14,501,47],[577,15,501,48],[578,12,502,16],[579,8,503,12],[580,6,504,8],[580,7,504,9],[580,8,505,8],[580,15,505,15,"error"],[580,20,505,20],[580,22,505,22],[581,8,506,12],[581,12,506,16],[581,16,506,16,"isAuthError"],[581,35,506,27],[581,37,506,28,"error"],[581,42,506,33],[581,43,506,34],[581,45,506,36],[582,10,507,16],[582,17,507,23],[583,12,507,25,"data"],[583,16,507,29],[583,18,507,31],[583,22,507,35],[584,12,507,37,"error"],[585,10,507,43],[585,11,507,44],[586,8,508,12],[587,8,509,12],[587,15,509,19],[588,10,510,16,"data"],[588,14,510,20],[588,16,510,22],[588,20,510,26],[589,10,511,16,"error"],[589,15,511,21],[589,17,511,23],[589,21,511,27,"AuthUnknownError"],[589,45,511,43],[589,46,511,44],[589,77,511,75],[589,79,511,77,"error"],[589,84,511,82],[590,8,512,12],[590,9,512,13],[591,6,513,8],[592,4,514,4],[593,4,515,4],[594,0,516,0],[595,0,517,0],[596,0,518,0],[597,0,519,0],[598,0,520,0],[599,0,521,0],[600,0,522,0],[601,0,523,0],[602,0,524,0],[603,0,525,0],[604,0,526,0],[605,4,527,4],[605,10,527,10,"_verify"],[605,17,527,17,"_verify"],[605,18,527,18],[606,6,527,20,"challengeId"],[606,17,527,31],[607,6,527,33,"factorId"],[607,14,527,41],[608,6,527,43,"webauthn"],[609,4,527,53],[609,5,527,54],[609,7,527,56],[610,6,528,8],[610,13,528,15],[610,17,528,19],[610,18,528,20,"client"],[610,24,528,26],[610,25,528,27,"mfa"],[610,28,528,30],[610,29,528,31,"verify"],[610,35,528,37],[610,36,528,38],[611,8,529,12,"factorId"],[611,16,529,20],[612,8,530,12,"challengeId"],[612,19,530,23],[613,8,531,12,"webauthn"],[613,16,531,20],[613,18,531,22,"webauthn"],[614,6,532,8],[614,7,532,9],[614,8,532,10],[615,4,533,4],[616,4,534,4],[617,0,535,0],[618,0,536,0],[619,0,537,0],[620,0,538,0],[621,0,539,0],[622,0,540,0],[623,0,541,0],[624,0,542,0],[625,0,543,0],[626,0,544,0],[627,0,545,0],[628,0,546,0],[629,0,547,0],[630,0,548,0],[631,0,549,0],[632,4,550,4],[632,10,550,10,"_authenticate"],[632,23,550,23,"_authenticate"],[632,24,550,24],[633,6,550,26,"factorId"],[633,14,550,34],[634,6,550,36,"webauthn"],[634,14,550,44],[634,16,550,46],[635,8,550,48,"rpId"],[635,12,550,52],[635,15,550,55],[635,22,550,62,"window"],[635,28,550,68],[635,33,550,73],[635,44,550,84],[635,47,550,87,"window"],[635,53,550,93],[635,54,550,94,"location"],[635,62,550,102],[635,63,550,103,"hostname"],[635,71,550,111],[635,74,550,114,"undefined"],[635,83,550,123],[636,8,550,125,"rpOrigins"],[636,17,550,134],[636,20,550,137],[636,27,550,144,"window"],[636,33,550,150],[636,38,550,155],[636,49,550,166],[636,52,550,169],[636,53,550,170,"window"],[636,59,550,176],[636,60,550,177,"location"],[636,68,550,185],[636,69,550,186,"origin"],[636,75,550,192],[636,76,550,193],[636,79,550,196,"undefined"],[636,88,550,205],[637,8,550,207,"signal"],[638,6,550,215],[639,4,550,218],[639,5,550,219],[639,7,550,221,"overrides"],[639,16,550,230],[639,18,550,232],[640,6,551,8],[640,10,551,12],[640,11,551,13,"rpId"],[640,15,551,17],[640,17,551,19],[641,8,552,12],[641,15,552,19],[642,10,553,16,"data"],[642,14,553,20],[642,16,553,22],[642,20,553,26],[643,10,554,16,"error"],[643,15,554,21],[643,17,554,23],[643,21,554,27,"AuthError"],[643,38,554,36],[643,39,554,37],[643,85,554,83],[644,8,555,12],[644,9,555,13],[645,6,556,8],[646,6,557,8],[646,10,557,12],[647,8,558,12],[647,12,558,16],[647,13,558,17,"browserSupportsWebAuthn"],[647,36,558,40],[647,37,558,41],[647,38,558,42],[647,40,558,44],[648,10,559,16],[648,17,559,23],[649,12,560,20,"data"],[649,16,560,24],[649,18,560,26],[649,22,560,30],[650,12,561,20,"error"],[650,17,561,25],[650,19,561,27],[650,23,561,31,"AuthUnknownError"],[650,47,561,47],[650,48,561,48],[650,83,561,83],[650,85,561,85],[650,89,561,89],[651,10,562,16],[651,11,562,17],[652,8,563,12],[653,8,564,12],[654,8,565,12],[654,14,565,18],[655,10,565,20,"data"],[655,14,565,24],[655,16,565,26,"challengeResponse"],[655,33,565,43],[656,10,565,45,"error"],[656,15,565,50],[656,17,565,52,"challengeError"],[657,8,565,67],[657,9,565,68],[657,12,565,71],[657,18,565,77],[657,22,565,81],[657,23,565,82,"challenge"],[657,32,565,91],[657,33,565,92],[658,10,566,16,"factorId"],[658,18,566,24],[659,10,567,16,"webauthn"],[659,18,567,24],[659,20,567,26],[660,12,567,28,"rpId"],[660,16,567,32],[661,12,567,34,"rpOrigins"],[662,10,567,44],[662,11,567,45],[663,10,568,16,"signal"],[664,8,569,12],[664,9,569,13],[664,11,569,15],[665,10,569,17,"request"],[665,17,569,24],[665,19,569,26,"overrides"],[666,8,569,36],[666,9,569,37],[666,10,569,38],[667,8,570,12],[667,12,570,16],[667,13,570,17,"challengeResponse"],[667,30,570,34],[667,32,570,36],[668,10,571,16],[668,17,571,23],[669,12,571,25,"data"],[669,16,571,29],[669,18,571,31],[669,22,571,35],[670,12,571,37,"error"],[670,17,571,42],[670,19,571,44,"challengeError"],[671,10,571,59],[671,11,571,60],[672,8,572,12],[673,8,573,12],[673,14,573,18],[674,10,573,20,"webauthn"],[675,8,573,29],[675,9,573,30],[675,12,573,33,"challengeResponse"],[675,29,573,50],[676,8,574,12],[677,8,575,12],[677,15,575,19],[677,19,575,23],[677,20,575,24,"_verify"],[677,27,575,31],[677,28,575,32],[678,10,576,16,"factorId"],[678,18,576,24],[679,10,577,16,"challengeId"],[679,21,577,27],[679,23,577,29,"challengeResponse"],[679,40,577,46],[679,41,577,47,"challengeId"],[679,52,577,58],[680,10,578,16,"webauthn"],[680,18,578,24],[680,20,578,26],[681,12,579,20,"type"],[681,16,579,24],[681,18,579,26,"webauthn"],[681,26,579,34],[681,27,579,35,"type"],[681,31,579,39],[682,12,580,20,"rpId"],[682,16,580,24],[683,12,581,20,"rpOrigins"],[683,21,581,29],[684,12,582,20,"credential_response"],[684,31,582,39],[684,33,582,41,"webauthn"],[684,41,582,49],[684,42,582,50,"credential_response"],[685,10,583,16],[686,8,584,12],[686,9,584,13],[686,10,584,14],[687,6,585,8],[687,7,585,9],[687,8,586,8],[687,15,586,15,"error"],[687,20,586,20],[687,22,586,22],[688,8,587,12],[688,12,587,16],[688,16,587,16,"isAuthError"],[688,35,587,27],[688,37,587,28,"error"],[688,42,587,33],[688,43,587,34],[688,45,587,36],[689,10,588,16],[689,17,588,23],[690,12,588,25,"data"],[690,16,588,29],[690,18,588,31],[690,22,588,35],[691,12,588,37,"error"],[692,10,588,43],[692,11,588,44],[693,8,589,12],[694,8,590,12],[694,15,590,19],[695,10,591,16,"data"],[695,14,591,20],[695,16,591,22],[695,20,591,26],[696,10,592,16,"error"],[696,15,592,21],[696,17,592,23],[696,21,592,27,"AuthUnknownError"],[696,45,592,43],[696,46,592,44],[696,80,592,78],[696,82,592,80,"error"],[696,87,592,85],[697,8,593,12],[697,9,593,13],[698,6,594,8],[699,4,595,4],[700,4,596,4],[701,0,597,0],[702,0,598,0],[703,0,599,0],[704,0,600,0],[705,0,601,0],[706,0,602,0],[707,0,603,0],[708,0,604,0],[709,0,605,0],[710,0,606,0],[711,0,607,0],[712,0,608,0],[713,0,609,0],[714,0,610,0],[715,4,611,4],[715,10,611,10,"_register"],[715,19,611,19,"_register"],[715,20,611,20],[716,6,611,22,"friendlyName"],[716,18,611,34],[717,6,611,36,"rpId"],[717,10,611,40],[717,13,611,43],[717,20,611,50,"window"],[717,26,611,56],[717,31,611,61],[717,42,611,72],[717,45,611,75,"window"],[717,51,611,81],[717,52,611,82,"location"],[717,60,611,90],[717,61,611,91,"hostname"],[717,69,611,99],[717,72,611,102,"undefined"],[717,81,611,111],[718,6,611,113,"rpOrigins"],[718,15,611,122],[718,18,611,125],[718,25,611,132,"window"],[718,31,611,138],[718,36,611,143],[718,47,611,154],[718,50,611,157],[718,51,611,158,"window"],[718,57,611,164],[718,58,611,165,"location"],[718,66,611,173],[718,67,611,174,"origin"],[718,73,611,180],[718,74,611,181],[718,77,611,184,"undefined"],[718,86,611,193],[719,6,611,195,"signal"],[720,4,611,203],[720,5,611,204],[720,7,611,206,"overrides"],[720,16,611,215],[720,18,611,217],[721,6,612,8],[721,10,612,12],[721,11,612,13,"rpId"],[721,15,612,17],[721,17,612,19],[722,8,613,12],[722,15,613,19],[723,10,614,16,"data"],[723,14,614,20],[723,16,614,22],[723,20,614,26],[724,10,615,16,"error"],[724,15,615,21],[724,17,615,23],[724,21,615,27,"AuthError"],[724,38,615,36],[724,39,615,37],[724,83,615,81],[725,8,616,12],[725,9,616,13],[726,6,617,8],[727,6,618,8],[727,10,618,12],[728,8,619,12],[728,12,619,16],[728,13,619,17,"browserSupportsWebAuthn"],[728,36,619,40],[728,37,619,41],[728,38,619,42],[728,40,619,44],[729,10,620,16],[729,17,620,23],[730,12,621,20,"data"],[730,16,621,24],[730,18,621,26],[730,22,621,30],[731,12,622,20,"error"],[731,17,622,25],[731,19,622,27],[731,23,622,31,"AuthUnknownError"],[731,47,622,47],[731,48,622,48],[731,83,622,83],[731,85,622,85],[731,89,622,89],[732,10,623,16],[732,11,623,17],[733,8,624,12],[734,8,625,12],[735,8,626,12],[735,14,626,18],[736,10,626,20,"data"],[736,14,626,24],[736,16,626,26,"factor"],[736,22,626,32],[737,10,626,34,"error"],[737,15,626,39],[737,17,626,41,"enrollError"],[738,8,626,53],[738,9,626,54],[738,12,626,57],[738,18,626,63],[738,22,626,67],[738,23,626,68,"_enroll"],[738,30,626,75],[738,31,626,76],[739,10,627,16,"friendlyName"],[740,8,628,12],[740,9,628,13],[740,10,628,14],[741,8,629,12],[741,12,629,16],[741,13,629,17,"factor"],[741,19,629,23],[741,21,629,25],[742,10,630,16],[742,16,630,22],[742,20,630,26],[742,21,630,27,"client"],[742,27,630,33],[742,28,630,34,"mfa"],[742,31,630,37],[742,32,631,21,"listFactors"],[742,43,631,32],[742,44,631,33],[742,45,631,34],[742,46,632,21,"then"],[742,50,632,25],[742,51,632,27,"factors"],[742,58,632,34],[742,62,632,39],[743,12,633,20],[743,16,633,24,"_a"],[743,18,633,26],[744,12,634,20],[744,19,634,27],[744,20,634,28,"_a"],[744,22,634,30],[744,25,634,33,"factors"],[744,32,634,40],[744,33,634,41,"data"],[744,37,634,45],[744,43,634,51],[744,47,634,55],[744,51,634,59,"_a"],[744,53,634,61],[744,58,634,66],[744,63,634,71],[744,64,634,72],[744,67,634,75],[744,72,634,80],[744,73,634,81],[744,76,634,84,"_a"],[744,78,634,86],[744,79,634,87,"all"],[744,82,634,90],[744,83,634,91,"find"],[744,87,634,95],[744,88,634,97,"v"],[744,89,634,98],[744,93,634,103,"v"],[744,94,634,104],[744,95,634,105,"factor_type"],[744,106,634,116],[744,111,634,121],[744,121,634,131],[744,125,635,24,"v"],[744,126,635,25],[744,127,635,26,"friendly_name"],[744,140,635,39],[744,145,635,44,"friendlyName"],[744,157,635,56],[744,161,636,24,"v"],[744,162,636,25],[744,163,636,26,"status"],[744,169,636,32],[744,174,636,37],[744,186,636,49],[744,187,636,50],[745,10,637,16],[745,11,637,17],[745,12,637,18],[745,13,638,21,"then"],[745,17,638,25],[745,18,638,27,"factor"],[745,24,638,33],[745,28,638,39,"factor"],[745,34,638,45],[745,37,638,48],[745,41,638,52],[745,42,638,53,"client"],[745,48,638,59],[745,49,638,60,"mfa"],[745,52,638,63],[745,53,638,64,"unenroll"],[745,61,638,72],[745,62,638,73],[746,12,638,75,"factorId"],[746,20,638,83],[746,22,638,85,"factor"],[746,28,638,91],[746,33,638,96],[746,37,638,100],[746,41,638,104,"factor"],[746,47,638,110],[746,52,638,115],[746,57,638,120],[746,58,638,121],[746,61,638,124],[746,66,638,129],[746,67,638,130],[746,70,638,133,"factor"],[746,76,638,139],[746,77,638,140,"id"],[747,10,638,143],[747,11,638,144],[747,12,638,145],[747,15,638,148],[747,20,638,153],[747,21,638,155],[747,22,638,156],[748,10,639,16],[748,17,639,23],[749,12,639,25,"data"],[749,16,639,29],[749,18,639,31],[749,22,639,35],[750,12,639,37,"error"],[750,17,639,42],[750,19,639,44,"enrollError"],[751,10,639,56],[751,11,639,57],[752,8,640,12],[753,8,641,12],[754,8,642,12],[754,14,642,18],[755,10,642,20,"data"],[755,14,642,24],[755,16,642,26,"challengeResponse"],[755,33,642,43],[756,10,642,45,"error"],[756,15,642,50],[756,17,642,52,"challengeError"],[757,8,642,67],[757,9,642,68],[757,12,642,71],[757,18,642,77],[757,22,642,81],[757,23,642,82,"_challenge"],[757,33,642,92],[757,34,642,93],[758,10,643,16,"factorId"],[758,18,643,24],[758,20,643,26,"factor"],[758,26,643,32],[758,27,643,33,"id"],[758,29,643,35],[759,10,644,16,"friendlyName"],[759,22,644,28],[759,24,644,30,"factor"],[759,30,644,36],[759,31,644,37,"friendly_name"],[759,44,644,50],[760,10,645,16,"webauthn"],[760,18,645,24],[760,20,645,26],[761,12,645,28,"rpId"],[761,16,645,32],[762,12,645,34,"rpOrigins"],[763,10,645,44],[763,11,645,45],[764,10,646,16,"signal"],[765,8,647,12],[765,9,647,13],[765,11,647,15],[766,10,648,16,"create"],[766,16,648,22],[766,18,648,24,"overrides"],[767,8,649,12],[767,9,649,13],[767,10,649,14],[768,8,650,12],[768,12,650,16],[768,13,650,17,"challengeResponse"],[768,30,650,34],[768,32,650,36],[769,10,651,16],[769,17,651,23],[770,12,651,25,"data"],[770,16,651,29],[770,18,651,31],[770,22,651,35],[771,12,651,37,"error"],[771,17,651,42],[771,19,651,44,"challengeError"],[772,10,651,59],[772,11,651,60],[773,8,652,12],[774,8,653,12],[774,15,653,19],[774,19,653,23],[774,20,653,24,"_verify"],[774,27,653,31],[774,28,653,32],[775,10,654,16,"factorId"],[775,18,654,24],[775,20,654,26,"factor"],[775,26,654,32],[775,27,654,33,"id"],[775,29,654,35],[776,10,655,16,"challengeId"],[776,21,655,27],[776,23,655,29,"challengeResponse"],[776,40,655,46],[776,41,655,47,"challengeId"],[776,52,655,58],[777,10,656,16,"webauthn"],[777,18,656,24],[777,20,656,26],[778,12,657,20,"rpId"],[778,16,657,24],[779,12,658,20,"rpOrigins"],[779,21,658,29],[780,12,659,20,"type"],[780,16,659,24],[780,18,659,26,"challengeResponse"],[780,35,659,43],[780,36,659,44,"webauthn"],[780,44,659,52],[780,45,659,53,"type"],[780,49,659,57],[781,12,660,20,"credential_response"],[781,31,660,39],[781,33,660,41,"challengeResponse"],[781,50,660,58],[781,51,660,59,"webauthn"],[781,59,660,67],[781,60,660,68,"credential_response"],[782,10,661,16],[783,8,662,12],[783,9,662,13],[783,10,662,14],[784,6,663,8],[784,7,663,9],[784,8,664,8],[784,15,664,15,"error"],[784,20,664,20],[784,22,664,22],[785,8,665,12],[785,12,665,16],[785,16,665,16,"isAuthError"],[785,35,665,27],[785,37,665,28,"error"],[785,42,665,33],[785,43,665,34],[785,45,665,36],[786,10,666,16],[786,17,666,23],[787,12,666,25,"data"],[787,16,666,29],[787,18,666,31],[787,22,666,35],[788,12,666,37,"error"],[789,10,666,43],[789,11,666,44],[790,8,667,12],[791,8,668,12],[791,15,668,19],[792,10,669,16,"data"],[792,14,669,20],[792,16,669,22],[792,20,669,26],[793,10,670,16,"error"],[793,15,670,21],[793,17,670,23],[793,21,670,27,"AuthUnknownError"],[793,45,670,43],[793,46,670,44],[793,76,670,74],[793,78,670,76,"error"],[793,83,670,81],[794,8,671,12],[794,9,671,13],[795,6,672,8],[796,4,673,4],[797,2,674,0],[798,2,674,1,"exports"],[798,9,674,1],[798,10,674,1,"WebAuthnApi"],[798,21,674,1],[798,24,674,1,"WebAuthnApi"],[798,35,674,1],[799,0,674,1],[799,3]],"functionMap":{"names":["<global>","WebAuthnAbortService","WebAuthnAbortService#createNewAbortSignal","WebAuthnAbortService#cancelCeremony","deserializeCredentialCreationOptions","deserializeCredentialRequestOptions","serializeCredentialCreationResponse","serializeCredentialRequestResponse","isValidDomain","browserSupportsWebAuthn","createCredential","getCredential","deepMerge","isObject","isArrayBufferLike","mergeCredentialCreationOptions","mergeCredentialRequestOptions","WebAuthnApi","WebAuthnApi#constructor","WebAuthnApi#_enroll","WebAuthnApi#_challenge","WebAuthnApi#_verify","WebAuthnApi#_authenticate","WebAuthnApi#_register","client.mfa.listFactors.then$argument_0","_a.all.find$argument_0","client.mfa.listFactors.then.then$argument_0"],"mappings":"AAA;OCa;ICQ;KDU;IEO;KFO;CDC;OIiB;CJqC;OKU;CLgC;OMU;CNoB;OOU;CP6B;OQc;CRI;ASQ;CTQ;OUU;CV4B;OWU;CX4B;AYiB;qBCC,uED;8BEC,8DF;CZ+B;OeW;CfE;OgBU;ChBE;OiBS;ICC;KDQ;IEU;KFE;IGe;KHwE;IIa;KJM;IKiB;KL6C;IMgB;0BCqB;gGCE;iDDE;iBDC;0BGC,iIH;KNmC;CjBC"}},"type":"js/module"}]}