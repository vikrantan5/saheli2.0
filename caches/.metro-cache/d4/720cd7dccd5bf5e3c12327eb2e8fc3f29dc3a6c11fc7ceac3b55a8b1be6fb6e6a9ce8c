{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n\n  /**\n   * @license\n   * Copyright 2017 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * A container for all of the Logger instances\n   */\n  var instances = [];\n  /**\n   * The JS SDK supports 5 log levels and also allows a user the ability to\n   * silence the logs altogether.\n   *\n   * The order is a follows:\n   * DEBUG < VERBOSE < INFO < WARN < ERROR\n   *\n   * All of the log types above the current log level will be captured (i.e. if\n   * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n   * `VERBOSE` logs will not)\n   */\n  exports.LogLevel = void 0;\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n  })(exports.LogLevel || (exports.LogLevel = {}));\n  var levelStringToEnum = {\n    'debug': exports.LogLevel.DEBUG,\n    'verbose': exports.LogLevel.VERBOSE,\n    'info': exports.LogLevel.INFO,\n    'warn': exports.LogLevel.WARN,\n    'error': exports.LogLevel.ERROR,\n    'silent': exports.LogLevel.SILENT\n  };\n  /**\n   * The default log level\n   */\n  var defaultLogLevel = exports.LogLevel.INFO;\n  /**\n   * By default, `console.debug` is not displayed in the developer console (in\n   * chrome). To avoid forcing users to have to opt-in to these logs twice\n   * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n   * logs to the `console.log` function.\n   */\n  var ConsoleMethod = {\n    [exports.LogLevel.DEBUG]: 'log',\n    [exports.LogLevel.VERBOSE]: 'log',\n    [exports.LogLevel.INFO]: 'info',\n    [exports.LogLevel.WARN]: 'warn',\n    [exports.LogLevel.ERROR]: 'error'\n  };\n  /**\n   * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n   * messages on to their corresponding console counterparts (if the log method\n   * is supported by the current log level)\n   */\n  var defaultLogHandler = function (instance, logType) {\n    if (logType < instance.logLevel) {\n      return;\n    }\n    var now = new Date().toISOString();\n    var method = ConsoleMethod[logType];\n    if (method) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      console[method](`[${now}]  ${instance.name}:`, ...args);\n    } else {\n      throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n    }\n  };\n  var Logger = /*#__PURE__*/function () {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    function Logger(name) {\n      _classCallCheck(this, Logger);\n      this.name = name;\n      /**\n       * The log level of the given Logger instance.\n       */\n      this._logLevel = defaultLogLevel;\n      /**\n       * The main (internal) log handler for the Logger instance.\n       * Can be set to a new function in internal package code but not by user.\n       */\n      this._logHandler = defaultLogHandler;\n      /**\n       * The optional, additional, user-defined log handler for the Logger instance.\n       */\n      this._userLogHandler = null;\n      /**\n       * Capture the current instance for later use\n       */\n      instances.push(this);\n    }\n    return _createClass(Logger, [{\n      key: \"logLevel\",\n      get: function () {\n        return this._logLevel;\n      },\n      set: function (val) {\n        if (!(val in exports.LogLevel)) {\n          throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n        }\n        this._logLevel = val;\n      }\n      // Workaround for setter/getter having to be the same type.\n    }, {\n      key: \"setLogLevel\",\n      value: function setLogLevel(val) {\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n      }\n    }, {\n      key: \"logHandler\",\n      get: function () {\n        return this._logHandler;\n      },\n      set: function (val) {\n        if (typeof val !== 'function') {\n          throw new TypeError('Value assigned to `logHandler` must be a function');\n        }\n        this._logHandler = val;\n      }\n    }, {\n      key: \"userLogHandler\",\n      get: function () {\n        return this._userLogHandler;\n      },\n      set: function (val) {\n        this._userLogHandler = val;\n      }\n      /**\n       * The functions below are all based on the `console` interface\n       */\n    }, {\n      key: \"debug\",\n      value: function debug() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        this._userLogHandler && this._userLogHandler(this, exports.LogLevel.DEBUG, ...args);\n        this._logHandler(this, exports.LogLevel.DEBUG, ...args);\n      }\n    }, {\n      key: \"log\",\n      value: function log() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        this._userLogHandler && this._userLogHandler(this, exports.LogLevel.VERBOSE, ...args);\n        this._logHandler(this, exports.LogLevel.VERBOSE, ...args);\n      }\n    }, {\n      key: \"info\",\n      value: function info() {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n        this._userLogHandler && this._userLogHandler(this, exports.LogLevel.INFO, ...args);\n        this._logHandler(this, exports.LogLevel.INFO, ...args);\n      }\n    }, {\n      key: \"warn\",\n      value: function warn() {\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n        this._userLogHandler && this._userLogHandler(this, exports.LogLevel.WARN, ...args);\n        this._logHandler(this, exports.LogLevel.WARN, ...args);\n      }\n    }, {\n      key: \"error\",\n      value: function error() {\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n        this._userLogHandler && this._userLogHandler(this, exports.LogLevel.ERROR, ...args);\n        this._logHandler(this, exports.LogLevel.ERROR, ...args);\n      }\n    }]);\n  }();\n  function setLogLevel(level) {\n    instances.forEach(inst => {\n      inst.setLogLevel(level);\n    });\n  }\n  function setUserLogHandler(logCallback, options) {\n    var _loop = function () {\n      var customLogLevel = null;\n      if (options && options.level) {\n        customLogLevel = levelStringToEnum[options.level];\n      }\n      if (logCallback === null) {\n        instance.userLogHandler = null;\n      } else {\n        instance.userLogHandler = function (instance, level) {\n          for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n            args[_key7 - 2] = arguments[_key7];\n          }\n          var message = args.map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          }).filter(arg => arg).join(' ');\n          if (level >= (customLogLevel ?? instance.logLevel)) {\n            logCallback({\n              level: exports.LogLevel[level].toLowerCase(),\n              message,\n              args,\n              type: instance.name\n            });\n          }\n        };\n      }\n    };\n    for (var instance of instances) {\n      _loop();\n    }\n  }\n  exports.Logger = Logger;\n  exports.setLogLevel = setLogLevel;\n  exports.setUserLogHandler = setUserLogHandler;\n});","lineCount":262,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,21],[6,24,3,22,"exports"],[6,31,3,29],[6,33,3,31],[6,45,3,43],[6,47,3,45],[7,4,3,47,"value"],[7,9,3,52],[7,11,3,54],[8,2,3,59],[8,3,3,60],[8,4,3,61],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,0],[27,0,22,0],[28,0,23,0],[29,2,24,0],[29,6,24,6,"instances"],[29,15,24,15],[29,18,24,18],[29,20,24,20],[30,2,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,2,36,0,"exports"],[41,9,36,7],[41,10,36,8,"LogLevel"],[41,18,36,16],[41,21,36,19],[41,26,36,24],[41,27,36,25],[42,2,37,0],[42,3,37,1],[42,13,37,11,"LogLevel"],[42,21,37,19],[42,23,37,21],[43,4,38,4,"LogLevel"],[43,12,38,12],[43,13,38,13,"LogLevel"],[43,21,38,21],[43,22,38,22],[43,29,38,29],[43,30,38,30],[43,33,38,33],[43,34,38,34],[43,35,38,35],[43,38,38,38],[43,45,38,45],[44,4,39,4,"LogLevel"],[44,12,39,12],[44,13,39,13,"LogLevel"],[44,21,39,21],[44,22,39,22],[44,31,39,31],[44,32,39,32],[44,35,39,35],[44,36,39,36],[44,37,39,37],[44,40,39,40],[44,49,39,49],[45,4,40,4,"LogLevel"],[45,12,40,12],[45,13,40,13,"LogLevel"],[45,21,40,21],[45,22,40,22],[45,28,40,28],[45,29,40,29],[45,32,40,32],[45,33,40,33],[45,34,40,34],[45,37,40,37],[45,43,40,43],[46,4,41,4,"LogLevel"],[46,12,41,12],[46,13,41,13,"LogLevel"],[46,21,41,21],[46,22,41,22],[46,28,41,28],[46,29,41,29],[46,32,41,32],[46,33,41,33],[46,34,41,34],[46,37,41,37],[46,43,41,43],[47,4,42,4,"LogLevel"],[47,12,42,12],[47,13,42,13,"LogLevel"],[47,21,42,21],[47,22,42,22],[47,29,42,29],[47,30,42,30],[47,33,42,33],[47,34,42,34],[47,35,42,35],[47,38,42,38],[47,45,42,45],[48,4,43,4,"LogLevel"],[48,12,43,12],[48,13,43,13,"LogLevel"],[48,21,43,21],[48,22,43,22],[48,30,43,30],[48,31,43,31],[48,34,43,34],[48,35,43,35],[48,36,43,36],[48,39,43,39],[48,47,43,47],[49,2,44,0],[49,3,44,1],[49,5,44,3,"exports"],[49,12,44,10],[49,13,44,11,"LogLevel"],[49,21,44,19],[49,26,44,24,"exports"],[49,33,44,31],[49,34,44,32,"LogLevel"],[49,42,44,40],[49,45,44,43],[49,46,44,44],[49,47,44,45],[49,48,44,46],[49,49,44,47],[50,2,45,0],[50,6,45,6,"levelStringToEnum"],[50,23,45,23],[50,26,45,26],[51,4,46,4],[51,11,46,11],[51,13,46,13,"exports"],[51,20,46,20],[51,21,46,21,"LogLevel"],[51,29,46,29],[51,30,46,30,"DEBUG"],[51,35,46,35],[52,4,47,4],[52,13,47,13],[52,15,47,15,"exports"],[52,22,47,22],[52,23,47,23,"LogLevel"],[52,31,47,31],[52,32,47,32,"VERBOSE"],[52,39,47,39],[53,4,48,4],[53,10,48,10],[53,12,48,12,"exports"],[53,19,48,19],[53,20,48,20,"LogLevel"],[53,28,48,28],[53,29,48,29,"INFO"],[53,33,48,33],[54,4,49,4],[54,10,49,10],[54,12,49,12,"exports"],[54,19,49,19],[54,20,49,20,"LogLevel"],[54,28,49,28],[54,29,49,29,"WARN"],[54,33,49,33],[55,4,50,4],[55,11,50,11],[55,13,50,13,"exports"],[55,20,50,20],[55,21,50,21,"LogLevel"],[55,29,50,29],[55,30,50,30,"ERROR"],[55,35,50,35],[56,4,51,4],[56,12,51,12],[56,14,51,14,"exports"],[56,21,51,21],[56,22,51,22,"LogLevel"],[56,30,51,30],[56,31,51,31,"SILENT"],[57,2,52,0],[57,3,52,1],[58,2,53,0],[59,0,54,0],[60,0,55,0],[61,2,56,0],[61,6,56,6,"defaultLogLevel"],[61,21,56,21],[61,24,56,24,"exports"],[61,31,56,31],[61,32,56,32,"LogLevel"],[61,40,56,40],[61,41,56,41,"INFO"],[61,45,56,45],[62,2,57,0],[63,0,58,0],[64,0,59,0],[65,0,60,0],[66,0,61,0],[67,0,62,0],[68,2,63,0],[68,6,63,6,"ConsoleMethod"],[68,19,63,19],[68,22,63,22],[69,4,64,4],[69,5,64,5,"exports"],[69,12,64,12],[69,13,64,13,"LogLevel"],[69,21,64,21],[69,22,64,22,"DEBUG"],[69,27,64,27],[69,30,64,30],[69,35,64,35],[70,4,65,4],[70,5,65,5,"exports"],[70,12,65,12],[70,13,65,13,"LogLevel"],[70,21,65,21],[70,22,65,22,"VERBOSE"],[70,29,65,29],[70,32,65,32],[70,37,65,37],[71,4,66,4],[71,5,66,5,"exports"],[71,12,66,12],[71,13,66,13,"LogLevel"],[71,21,66,21],[71,22,66,22,"INFO"],[71,26,66,26],[71,29,66,29],[71,35,66,35],[72,4,67,4],[72,5,67,5,"exports"],[72,12,67,12],[72,13,67,13,"LogLevel"],[72,21,67,21],[72,22,67,22,"WARN"],[72,26,67,26],[72,29,67,29],[72,35,67,35],[73,4,68,4],[73,5,68,5,"exports"],[73,12,68,12],[73,13,68,13,"LogLevel"],[73,21,68,21],[73,22,68,22,"ERROR"],[73,27,68,27],[73,30,68,30],[74,2,69,0],[74,3,69,1],[75,2,70,0],[76,0,71,0],[77,0,72,0],[78,0,73,0],[79,0,74,0],[80,2,75,0],[80,6,75,6,"defaultLogHandler"],[80,23,75,23],[80,26,75,26],[80,35,75,26,"defaultLogHandler"],[80,36,75,27,"instance"],[80,44,75,35],[80,46,75,37,"logType"],[80,53,75,44],[80,55,75,58],[81,4,76,4],[81,8,76,8,"logType"],[81,15,76,15],[81,18,76,18,"instance"],[81,26,76,26],[81,27,76,27,"logLevel"],[81,35,76,35],[81,37,76,37],[82,6,77,8],[83,4,78,4],[84,4,79,4],[84,8,79,10,"now"],[84,11,79,13],[84,14,79,16],[84,18,79,20,"Date"],[84,22,79,24],[84,23,79,25],[84,24,79,26],[84,25,79,27,"toISOString"],[84,36,79,38],[84,37,79,39],[84,38,79,40],[85,4,80,4],[85,8,80,10,"method"],[85,14,80,16],[85,17,80,19,"ConsoleMethod"],[85,30,80,32],[85,31,80,33,"logType"],[85,38,80,40],[85,39,80,41],[86,4,81,4],[86,8,81,8,"method"],[86,14,81,14],[86,16,81,16],[87,6,81,16],[87,15,81,16,"_len"],[87,19,81,16],[87,22,81,16,"arguments"],[87,31,81,16],[87,32,81,16,"length"],[87,38,81,16],[87,40,75,49,"args"],[87,44,75,53],[87,51,75,53,"Array"],[87,56,75,53],[87,57,75,53,"_len"],[87,61,75,53],[87,68,75,53,"_len"],[87,72,75,53],[87,83,75,53,"_key"],[87,87,75,53],[87,93,75,53,"_key"],[87,97,75,53],[87,100,75,53,"_len"],[87,104,75,53],[87,106,75,53,"_key"],[87,110,75,53],[88,8,75,49,"args"],[88,12,75,53],[88,13,75,53,"_key"],[88,17,75,53],[88,25,75,53,"arguments"],[88,34,75,53],[88,35,75,53,"_key"],[88,39,75,53],[89,6,75,53],[90,6,82,8,"console"],[90,13,82,15],[90,14,82,16,"method"],[90,20,82,22],[90,21,82,23],[90,22,82,24],[90,26,82,28,"now"],[90,29,82,31],[90,35,82,37,"instance"],[90,43,82,45],[90,44,82,46,"name"],[90,48,82,50],[90,51,82,53],[90,53,82,55],[90,56,82,58,"args"],[90,60,82,62],[90,61,82,63],[91,4,83,4],[91,5,83,5],[91,11,84,9],[92,6,85,8],[92,12,85,14],[92,16,85,18,"Error"],[92,21,85,23],[92,22,85,24],[92,84,85,86,"logType"],[92,91,85,93],[92,94,85,96],[92,95,85,97],[93,4,86,4],[94,2,87,0],[94,3,87,1],[95,2,87,2],[95,6,88,6,"Logger"],[95,12,88,12],[96,4,89,4],[97,0,90,0],[98,0,91,0],[99,0,92,0],[100,0,93,0],[101,0,94,0],[102,4,95,4],[102,13,95,4,"Logger"],[102,20,95,16,"name"],[102,24,95,20],[102,26,95,22],[103,6,95,22,"_classCallCheck"],[103,21,95,22],[103,28,95,22,"Logger"],[103,34,95,22],[104,6,96,8],[104,10,96,12],[104,11,96,13,"name"],[104,15,96,17],[104,18,96,20,"name"],[104,22,96,24],[105,6,97,8],[106,0,98,0],[107,0,99,0],[108,6,100,8],[108,10,100,12],[108,11,100,13,"_logLevel"],[108,20,100,22],[108,23,100,25,"defaultLogLevel"],[108,38,100,40],[109,6,101,8],[110,0,102,0],[111,0,103,0],[112,0,104,0],[113,6,105,8],[113,10,105,12],[113,11,105,13,"_logHandler"],[113,22,105,24],[113,25,105,27,"defaultLogHandler"],[113,42,105,44],[114,6,106,8],[115,0,107,0],[116,0,108,0],[117,6,109,8],[117,10,109,12],[117,11,109,13,"_userLogHandler"],[117,26,109,28],[117,29,109,31],[117,33,109,35],[118,6,110,8],[119,0,111,0],[120,0,112,0],[121,6,113,8,"instances"],[121,15,113,17],[121,16,113,18,"push"],[121,20,113,22],[121,21,113,23],[121,25,113,27],[121,26,113,28],[122,4,114,4],[123,4,114,5],[123,11,114,5,"_createClass"],[123,23,114,5],[123,24,114,5,"Logger"],[123,30,114,5],[124,6,114,5,"key"],[124,9,114,5],[125,6,114,5,"get"],[125,9,114,5],[125,11,115,4],[125,20,115,4,"get"],[125,21,115,4],[125,23,115,19],[126,8,116,8],[126,15,116,15],[126,19,116,19],[126,20,116,20,"_logLevel"],[126,29,116,29],[127,6,117,4],[127,7,117,5],[128,6,117,5,"set"],[128,9,117,5],[128,11,118,4],[128,20,118,4,"set"],[128,21,118,17,"val"],[128,24,118,20],[128,26,118,22],[129,8,119,8],[129,12,119,12],[129,14,119,14,"val"],[129,17,119,17],[129,21,119,21,"exports"],[129,28,119,28],[129,29,119,29,"LogLevel"],[129,37,119,37],[129,38,119,38],[129,40,119,40],[130,10,120,12],[130,16,120,18],[130,20,120,22,"TypeError"],[130,29,120,31],[130,30,120,32],[130,48,120,50,"val"],[130,51,120,53],[130,79,120,81],[130,80,120,82],[131,8,121,8],[132,8,122,8],[132,12,122,12],[132,13,122,13,"_logLevel"],[132,22,122,22],[132,25,122,25,"val"],[132,28,122,28],[133,6,123,4],[134,6,124,4],[135,4,124,4],[136,6,124,4,"key"],[136,9,124,4],[137,6,124,4,"value"],[137,11,124,4],[137,13,125,4],[137,22,125,4,"setLogLevel"],[137,33,125,15,"setLogLevel"],[137,34,125,16,"val"],[137,37,125,19],[137,39,125,21],[138,8,126,8],[138,12,126,12],[138,13,126,13,"_logLevel"],[138,22,126,22],[138,25,126,25],[138,32,126,32,"val"],[138,35,126,35],[138,40,126,40],[138,48,126,48],[138,51,126,51,"levelStringToEnum"],[138,68,126,68],[138,69,126,69,"val"],[138,72,126,72],[138,73,126,73],[138,76,126,76,"val"],[138,79,126,79],[139,6,127,4],[140,4,127,5],[141,6,127,5,"key"],[141,9,127,5],[142,6,127,5,"get"],[142,9,127,5],[142,11,128,4],[142,20,128,4,"get"],[142,21,128,4],[142,23,128,21],[143,8,129,8],[143,15,129,15],[143,19,129,19],[143,20,129,20,"_logHandler"],[143,31,129,31],[144,6,130,4],[144,7,130,5],[145,6,130,5,"set"],[145,9,130,5],[145,11,131,4],[145,20,131,4,"set"],[145,21,131,19,"val"],[145,24,131,22],[145,26,131,24],[146,8,132,8],[146,12,132,12],[146,19,132,19,"val"],[146,22,132,22],[146,27,132,27],[146,37,132,37],[146,39,132,39],[147,10,133,12],[147,16,133,18],[147,20,133,22,"TypeError"],[147,29,133,31],[147,30,133,32],[147,81,133,83],[147,82,133,84],[148,8,134,8],[149,8,135,8],[149,12,135,12],[149,13,135,13,"_logHandler"],[149,24,135,24],[149,27,135,27,"val"],[149,30,135,30],[150,6,136,4],[151,4,136,5],[152,6,136,5,"key"],[152,9,136,5],[153,6,136,5,"get"],[153,9,136,5],[153,11,137,4],[153,20,137,4,"get"],[153,21,137,4],[153,23,137,25],[154,8,138,8],[154,15,138,15],[154,19,138,19],[154,20,138,20,"_userLogHandler"],[154,35,138,35],[155,6,139,4],[155,7,139,5],[156,6,139,5,"set"],[156,9,139,5],[156,11,140,4],[156,20,140,4,"set"],[156,21,140,23,"val"],[156,24,140,26],[156,26,140,28],[157,8,141,8],[157,12,141,12],[157,13,141,13,"_userLogHandler"],[157,28,141,28],[157,31,141,31,"val"],[157,34,141,34],[158,6,142,4],[159,6,143,4],[160,0,144,0],[161,0,145,0],[162,4,143,4],[163,6,143,4,"key"],[163,9,143,4],[164,6,143,4,"value"],[164,11,143,4],[164,13,146,4],[164,22,146,4,"debug"],[164,27,146,9,"debug"],[164,28,146,9],[164,30,146,19],[165,8,146,19],[165,17,146,19,"_len2"],[165,22,146,19],[165,25,146,19,"arguments"],[165,34,146,19],[165,35,146,19,"length"],[165,41,146,19],[165,43,146,13,"args"],[165,47,146,17],[165,54,146,17,"Array"],[165,59,146,17],[165,60,146,17,"_len2"],[165,65,146,17],[165,68,146,17,"_key2"],[165,73,146,17],[165,79,146,17,"_key2"],[165,84,146,17],[165,87,146,17,"_len2"],[165,92,146,17],[165,94,146,17,"_key2"],[165,99,146,17],[166,10,146,13,"args"],[166,14,146,17],[166,15,146,17,"_key2"],[166,20,146,17],[166,24,146,17,"arguments"],[166,33,146,17],[166,34,146,17,"_key2"],[166,39,146,17],[167,8,146,17],[168,8,147,8],[168,12,147,12],[168,13,147,13,"_userLogHandler"],[168,28,147,28],[168,32,147,32],[168,36,147,36],[168,37,147,37,"_userLogHandler"],[168,52,147,52],[168,53,147,53],[168,57,147,57],[168,59,147,59,"exports"],[168,66,147,66],[168,67,147,67,"LogLevel"],[168,75,147,75],[168,76,147,76,"DEBUG"],[168,81,147,81],[168,83,147,83],[168,86,147,86,"args"],[168,90,147,90],[168,91,147,91],[169,8,148,8],[169,12,148,12],[169,13,148,13,"_logHandler"],[169,24,148,24],[169,25,148,25],[169,29,148,29],[169,31,148,31,"exports"],[169,38,148,38],[169,39,148,39,"LogLevel"],[169,47,148,47],[169,48,148,48,"DEBUG"],[169,53,148,53],[169,55,148,55],[169,58,148,58,"args"],[169,62,148,62],[169,63,148,63],[170,6,149,4],[171,4,149,5],[172,6,149,5,"key"],[172,9,149,5],[173,6,149,5,"value"],[173,11,149,5],[173,13,150,4],[173,22,150,4,"log"],[173,25,150,7,"log"],[173,26,150,7],[173,28,150,17],[174,8,150,17],[174,17,150,17,"_len3"],[174,22,150,17],[174,25,150,17,"arguments"],[174,34,150,17],[174,35,150,17,"length"],[174,41,150,17],[174,43,150,11,"args"],[174,47,150,15],[174,54,150,15,"Array"],[174,59,150,15],[174,60,150,15,"_len3"],[174,65,150,15],[174,68,150,15,"_key3"],[174,73,150,15],[174,79,150,15,"_key3"],[174,84,150,15],[174,87,150,15,"_len3"],[174,92,150,15],[174,94,150,15,"_key3"],[174,99,150,15],[175,10,150,11,"args"],[175,14,150,15],[175,15,150,15,"_key3"],[175,20,150,15],[175,24,150,15,"arguments"],[175,33,150,15],[175,34,150,15,"_key3"],[175,39,150,15],[176,8,150,15],[177,8,151,8],[177,12,151,12],[177,13,151,13,"_userLogHandler"],[177,28,151,28],[177,32,152,12],[177,36,152,16],[177,37,152,17,"_userLogHandler"],[177,52,152,32],[177,53,152,33],[177,57,152,37],[177,59,152,39,"exports"],[177,66,152,46],[177,67,152,47,"LogLevel"],[177,75,152,55],[177,76,152,56,"VERBOSE"],[177,83,152,63],[177,85,152,65],[177,88,152,68,"args"],[177,92,152,72],[177,93,152,73],[178,8,153,8],[178,12,153,12],[178,13,153,13,"_logHandler"],[178,24,153,24],[178,25,153,25],[178,29,153,29],[178,31,153,31,"exports"],[178,38,153,38],[178,39,153,39,"LogLevel"],[178,47,153,47],[178,48,153,48,"VERBOSE"],[178,55,153,55],[178,57,153,57],[178,60,153,60,"args"],[178,64,153,64],[178,65,153,65],[179,6,154,4],[180,4,154,5],[181,6,154,5,"key"],[181,9,154,5],[182,6,154,5,"value"],[182,11,154,5],[182,13,155,4],[182,22,155,4,"info"],[182,26,155,8,"info"],[182,27,155,8],[182,29,155,18],[183,8,155,18],[183,17,155,18,"_len4"],[183,22,155,18],[183,25,155,18,"arguments"],[183,34,155,18],[183,35,155,18,"length"],[183,41,155,18],[183,43,155,12,"args"],[183,47,155,16],[183,54,155,16,"Array"],[183,59,155,16],[183,60,155,16,"_len4"],[183,65,155,16],[183,68,155,16,"_key4"],[183,73,155,16],[183,79,155,16,"_key4"],[183,84,155,16],[183,87,155,16,"_len4"],[183,92,155,16],[183,94,155,16,"_key4"],[183,99,155,16],[184,10,155,12,"args"],[184,14,155,16],[184,15,155,16,"_key4"],[184,20,155,16],[184,24,155,16,"arguments"],[184,33,155,16],[184,34,155,16,"_key4"],[184,39,155,16],[185,8,155,16],[186,8,156,8],[186,12,156,12],[186,13,156,13,"_userLogHandler"],[186,28,156,28],[186,32,156,32],[186,36,156,36],[186,37,156,37,"_userLogHandler"],[186,52,156,52],[186,53,156,53],[186,57,156,57],[186,59,156,59,"exports"],[186,66,156,66],[186,67,156,67,"LogLevel"],[186,75,156,75],[186,76,156,76,"INFO"],[186,80,156,80],[186,82,156,82],[186,85,156,85,"args"],[186,89,156,89],[186,90,156,90],[187,8,157,8],[187,12,157,12],[187,13,157,13,"_logHandler"],[187,24,157,24],[187,25,157,25],[187,29,157,29],[187,31,157,31,"exports"],[187,38,157,38],[187,39,157,39,"LogLevel"],[187,47,157,47],[187,48,157,48,"INFO"],[187,52,157,52],[187,54,157,54],[187,57,157,57,"args"],[187,61,157,61],[187,62,157,62],[188,6,158,4],[189,4,158,5],[190,6,158,5,"key"],[190,9,158,5],[191,6,158,5,"value"],[191,11,158,5],[191,13,159,4],[191,22,159,4,"warn"],[191,26,159,8,"warn"],[191,27,159,8],[191,29,159,18],[192,8,159,18],[192,17,159,18,"_len5"],[192,22,159,18],[192,25,159,18,"arguments"],[192,34,159,18],[192,35,159,18,"length"],[192,41,159,18],[192,43,159,12,"args"],[192,47,159,16],[192,54,159,16,"Array"],[192,59,159,16],[192,60,159,16,"_len5"],[192,65,159,16],[192,68,159,16,"_key5"],[192,73,159,16],[192,79,159,16,"_key5"],[192,84,159,16],[192,87,159,16,"_len5"],[192,92,159,16],[192,94,159,16,"_key5"],[192,99,159,16],[193,10,159,12,"args"],[193,14,159,16],[193,15,159,16,"_key5"],[193,20,159,16],[193,24,159,16,"arguments"],[193,33,159,16],[193,34,159,16,"_key5"],[193,39,159,16],[194,8,159,16],[195,8,160,8],[195,12,160,12],[195,13,160,13,"_userLogHandler"],[195,28,160,28],[195,32,160,32],[195,36,160,36],[195,37,160,37,"_userLogHandler"],[195,52,160,52],[195,53,160,53],[195,57,160,57],[195,59,160,59,"exports"],[195,66,160,66],[195,67,160,67,"LogLevel"],[195,75,160,75],[195,76,160,76,"WARN"],[195,80,160,80],[195,82,160,82],[195,85,160,85,"args"],[195,89,160,89],[195,90,160,90],[196,8,161,8],[196,12,161,12],[196,13,161,13,"_logHandler"],[196,24,161,24],[196,25,161,25],[196,29,161,29],[196,31,161,31,"exports"],[196,38,161,38],[196,39,161,39,"LogLevel"],[196,47,161,47],[196,48,161,48,"WARN"],[196,52,161,52],[196,54,161,54],[196,57,161,57,"args"],[196,61,161,61],[196,62,161,62],[197,6,162,4],[198,4,162,5],[199,6,162,5,"key"],[199,9,162,5],[200,6,162,5,"value"],[200,11,162,5],[200,13,163,4],[200,22,163,4,"error"],[200,27,163,9,"error"],[200,28,163,9],[200,30,163,19],[201,8,163,19],[201,17,163,19,"_len6"],[201,22,163,19],[201,25,163,19,"arguments"],[201,34,163,19],[201,35,163,19,"length"],[201,41,163,19],[201,43,163,13,"args"],[201,47,163,17],[201,54,163,17,"Array"],[201,59,163,17],[201,60,163,17,"_len6"],[201,65,163,17],[201,68,163,17,"_key6"],[201,73,163,17],[201,79,163,17,"_key6"],[201,84,163,17],[201,87,163,17,"_len6"],[201,92,163,17],[201,94,163,17,"_key6"],[201,99,163,17],[202,10,163,13,"args"],[202,14,163,17],[202,15,163,17,"_key6"],[202,20,163,17],[202,24,163,17,"arguments"],[202,33,163,17],[202,34,163,17,"_key6"],[202,39,163,17],[203,8,163,17],[204,8,164,8],[204,12,164,12],[204,13,164,13,"_userLogHandler"],[204,28,164,28],[204,32,164,32],[204,36,164,36],[204,37,164,37,"_userLogHandler"],[204,52,164,52],[204,53,164,53],[204,57,164,57],[204,59,164,59,"exports"],[204,66,164,66],[204,67,164,67,"LogLevel"],[204,75,164,75],[204,76,164,76,"ERROR"],[204,81,164,81],[204,83,164,83],[204,86,164,86,"args"],[204,90,164,90],[204,91,164,91],[205,8,165,8],[205,12,165,12],[205,13,165,13,"_logHandler"],[205,24,165,24],[205,25,165,25],[205,29,165,29],[205,31,165,31,"exports"],[205,38,165,38],[205,39,165,39,"LogLevel"],[205,47,165,47],[205,48,165,48,"ERROR"],[205,53,165,53],[205,55,165,55],[205,58,165,58,"args"],[205,62,165,62],[205,63,165,63],[206,6,166,4],[207,4,166,5],[208,2,166,5],[209,2,168,0],[209,11,168,9,"setLogLevel"],[209,22,168,20,"setLogLevel"],[209,23,168,21,"level"],[209,28,168,26],[209,30,168,28],[210,4,169,4,"instances"],[210,13,169,13],[210,14,169,14,"forEach"],[210,21,169,21],[210,22,169,22,"inst"],[210,26,169,26],[210,30,169,30],[211,6,170,8,"inst"],[211,10,170,12],[211,11,170,13,"setLogLevel"],[211,22,170,24],[211,23,170,25,"level"],[211,28,170,30],[211,29,170,31],[212,4,171,4],[212,5,171,5],[212,6,171,6],[213,2,172,0],[214,2,173,0],[214,11,173,9,"setUserLogHandler"],[214,28,173,26,"setUserLogHandler"],[214,29,173,27,"logCallback"],[214,40,173,38],[214,42,173,40,"options"],[214,49,173,47],[214,51,173,49],[215,4,173,49],[215,8,173,49,"_loop"],[215,13,173,49],[215,25,173,49,"_loop"],[215,26,173,49],[215,28,174,38],[216,6,175,8],[216,10,175,12,"customLogLevel"],[216,24,175,26],[216,27,175,29],[216,31,175,33],[217,6,176,8],[217,10,176,12,"options"],[217,17,176,19],[217,21,176,23,"options"],[217,28,176,30],[217,29,176,31,"level"],[217,34,176,36],[217,36,176,38],[218,8,177,12,"customLogLevel"],[218,22,177,26],[218,25,177,29,"levelStringToEnum"],[218,42,177,46],[218,43,177,47,"options"],[218,50,177,54],[218,51,177,55,"level"],[218,56,177,60],[218,57,177,61],[219,6,178,8],[220,6,179,8],[220,10,179,12,"logCallback"],[220,21,179,23],[220,26,179,28],[220,30,179,32],[220,32,179,34],[221,8,180,12,"instance"],[221,16,180,20],[221,17,180,21,"userLogHandler"],[221,31,180,35],[221,34,180,38],[221,38,180,42],[222,6,181,8],[222,7,181,9],[222,13,182,13],[223,8,183,12,"instance"],[223,16,183,20],[223,17,183,21,"userLogHandler"],[223,31,183,35],[223,34,183,38],[223,44,183,39,"instance"],[223,52,183,47],[223,54,183,49,"level"],[223,59,183,54],[223,61,183,68],[224,10,183,68],[224,19,183,68,"_len7"],[224,24,183,68],[224,27,183,68,"arguments"],[224,36,183,68],[224,37,183,68,"length"],[224,43,183,68],[224,45,183,59,"args"],[224,49,183,63],[224,56,183,63,"Array"],[224,61,183,63],[224,62,183,63,"_len7"],[224,67,183,63],[224,74,183,63,"_len7"],[224,79,183,63],[224,90,183,63,"_key7"],[224,95,183,63],[224,101,183,63,"_key7"],[224,106,183,63],[224,109,183,63,"_len7"],[224,114,183,63],[224,116,183,63,"_key7"],[224,121,183,63],[225,12,183,59,"args"],[225,16,183,63],[225,17,183,63,"_key7"],[225,22,183,63],[225,30,183,63,"arguments"],[225,39,183,63],[225,40,183,63,"_key7"],[225,45,183,63],[226,10,183,63],[227,10,184,16],[227,14,184,22,"message"],[227,21,184,29],[227,24,184,32,"args"],[227,28,184,36],[227,29,185,21,"map"],[227,32,185,24],[227,33,185,25,"arg"],[227,36,185,28],[227,40,185,32],[228,12,186,20],[228,16,186,24,"arg"],[228,19,186,27],[228,23,186,31],[228,27,186,35],[228,29,186,37],[229,14,187,24],[229,21,187,31],[229,25,187,35],[230,12,188,20],[230,13,188,21],[230,19,189,25],[230,23,189,29],[230,30,189,36,"arg"],[230,33,189,39],[230,38,189,44],[230,46,189,52],[230,48,189,54],[231,14,190,24],[231,21,190,31,"arg"],[231,24,190,34],[232,12,191,20],[232,13,191,21],[232,19,192,25],[232,23,192,29],[232,30,192,36,"arg"],[232,33,192,39],[232,38,192,44],[232,46,192,52],[232,50,192,56],[232,57,192,63,"arg"],[232,60,192,66],[232,65,192,71],[232,74,192,80],[232,76,192,82],[233,14,193,24],[233,21,193,31,"arg"],[233,24,193,34],[233,25,193,35,"toString"],[233,33,193,43],[233,34,193,44],[233,35,193,45],[234,12,194,20],[234,13,194,21],[234,19,195,25],[234,23,195,29,"arg"],[234,26,195,32],[234,38,195,44,"Error"],[234,43,195,49],[234,45,195,51],[235,14,196,24],[235,21,196,31,"arg"],[235,24,196,34],[235,25,196,35,"message"],[235,32,196,42],[236,12,197,20],[236,13,197,21],[236,19,198,25],[237,14,199,24],[237,18,199,28],[238,16,200,28],[238,23,200,35,"JSON"],[238,27,200,39],[238,28,200,40,"stringify"],[238,37,200,49],[238,38,200,50,"arg"],[238,41,200,53],[238,42,200,54],[239,14,201,24],[239,15,201,25],[239,16,202,24],[239,23,202,31,"ignored"],[239,30,202,38],[239,32,202,40],[240,16,203,28],[240,23,203,35],[240,27,203,39],[241,14,204,24],[242,12,205,20],[243,10,206,16],[243,11,206,17],[243,12,206,18],[243,13,207,21,"filter"],[243,19,207,27],[243,20,207,28,"arg"],[243,23,207,31],[243,27,207,35,"arg"],[243,30,207,38],[243,31,207,39],[243,32,208,21,"join"],[243,36,208,25],[243,37,208,26],[243,40,208,29],[243,41,208,30],[244,10,209,16],[244,14,209,20,"level"],[244,19,209,25],[244,24,209,30,"customLogLevel"],[244,38,209,44],[244,42,209,48,"instance"],[244,50,209,56],[244,51,209,57,"logLevel"],[244,59,209,65],[244,60,209,66],[244,62,209,68],[245,12,210,20,"logCallback"],[245,23,210,31],[245,24,210,32],[246,14,211,24,"level"],[246,19,211,29],[246,21,211,31,"exports"],[246,28,211,38],[246,29,211,39,"LogLevel"],[246,37,211,47],[246,38,211,48,"level"],[246,43,211,53],[246,44,211,54],[246,45,211,55,"toLowerCase"],[246,56,211,66],[246,57,211,67],[246,58,211,68],[247,14,212,24,"message"],[247,21,212,31],[248,14,213,24,"args"],[248,18,213,28],[249,14,214,24,"type"],[249,18,214,28],[249,20,214,30,"instance"],[249,28,214,38],[249,29,214,39,"name"],[250,12,215,20],[250,13,215,21],[250,14,215,22],[251,10,216,16],[252,8,217,12],[252,9,217,13],[253,6,218,8],[254,4,219,4],[254,5,219,5],[255,4,174,4],[255,9,174,9],[255,13,174,15,"instance"],[255,21,174,23],[255,25,174,27,"instances"],[255,34,174,36],[256,6,174,36,"_loop"],[256,11,174,36],[257,4,174,36],[258,2,220,0],[259,2,222,0,"exports"],[259,9,222,7],[259,10,222,8,"Logger"],[259,16,222,14],[259,19,222,17,"Logger"],[259,25,222,23],[260,2,223,0,"exports"],[260,9,223,7],[260,10,223,8,"setLogLevel"],[260,21,223,19],[260,24,223,22,"setLogLevel"],[260,35,223,33],[261,2,224,0,"exports"],[261,9,224,7],[261,10,224,8,"setUserLogHandler"],[261,27,224,25],[261,30,224,28,"setUserLogHandler"],[261,47,224,45],[262,0,224,46],[262,3]],"functionMap":{"names":["<global>","<anonymous>","defaultLogHandler","Logger","Logger#constructor","Logger#get__logLevel","Logger#set__logLevel","Logger#setLogLevel","Logger#get__logHandler","Logger#set__logHandler","Logger#get__userLogHandler","Logger#set__userLogHandler","Logger#debug","Logger#log","Logger#info","Logger#warn","Logger#error","setLogLevel","instances.forEach$argument_0","setUserLogHandler","instance.userLogHandler","args.map$argument_0","args.map.filter$argument_0"],"mappings":"AAA;CCoC;CDO;0BE+B;CFY;AGC;ICO;KDmB;IEC;KFE;IGC;KHK;IIE;KJE;IKC;KLE;IMC;KNK;IOC;KPE;IQC;KRE;ISI;KTG;IUC;KVI;IWC;KXG;IYC;KZG;IaC;KbG;CHC;AiBC;sBCC;KDE;CjBC;AmBC;sCCU;yBCE;iBDqB;4BEC,UF;aDU;CnBG"}},"type":"js/module"}]}