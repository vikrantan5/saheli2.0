{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _customDirectEventTypes = require(_dependencyMap[8], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[9], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[10], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[11], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[12], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[13], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[14], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[15], \"../utils\");\n  var _ActionType = require(_dependencyMap[16], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[17], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[18], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[19], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[20], \"../mountRegistry\");\n  var _jsxDevRuntime = require(_dependencyMap[21], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"D:\\\\saheli\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\handlers\\\\createHandler.tsx\";\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants') ?? UIManagerAny.getConstants?.();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n              this.setState(_ => ({\n                allowTouches\n              }));\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_PressabilityDebugView.PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isTestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":420,"map":[[12,2,1,0],[12,6,1,0,"React"],[12,11,1,0],[12,14,1,0,"_interopRequireWildcard"],[12,37,1,0],[12,38,1,0,"require"],[12,45,1,0],[12,46,1,0,"_dependencyMap"],[12,60,1,0],[13,2,2,0],[13,6,2,0,"_reactNative"],[13,18,2,0],[13,21,2,0,"require"],[13,28,2,0],[13,29,2,0,"_dependencyMap"],[13,43,2,0],[14,2,8,0],[14,6,8,0,"_customDirectEventTypes"],[14,29,8,0],[14,32,8,0,"require"],[14,39,8,0],[14,40,8,0,"_dependencyMap"],[14,54,8,0],[15,2,9,0],[15,6,9,0,"_RNGestureHandlerModule"],[15,29,9,0],[15,32,9,0,"_interopRequireDefault"],[15,54,9,0],[15,55,9,0,"require"],[15,62,9,0],[15,63,9,0,"_dependencyMap"],[15,77,9,0],[16,2,10,0],[16,6,10,0,"_State"],[16,12,10,0],[16,15,10,0,"require"],[16,22,10,0],[16,23,10,0,"_dependencyMap"],[16,37,10,0],[17,2,11,0],[17,6,11,0,"_handlersRegistry"],[17,23,11,0],[17,26,11,0,"require"],[17,33,11,0],[17,34,11,0,"_dependencyMap"],[17,48,11,0],[18,2,16,0],[18,6,16,0,"_getNextHandlerTag"],[18,24,16,0],[18,27,16,0,"require"],[18,34,16,0],[18,35,16,0,"_dependencyMap"],[18,49,16,0],[19,2,23,0],[19,6,23,0,"_utils"],[19,12,23,0],[19,15,23,0,"require"],[19,22,23,0],[19,23,23,0,"_dependencyMap"],[19,37,23,0],[20,2,24,0],[20,6,24,0,"_findNodeHandle"],[20,21,24,0],[20,24,24,0,"_interopRequireDefault"],[20,46,24,0],[20,47,24,0,"require"],[20,54,24,0],[20,55,24,0,"_dependencyMap"],[20,69,24,0],[21,2,26,0],[21,6,26,0,"_utils2"],[21,13,26,0],[21,16,26,0,"require"],[21,23,26,0],[21,24,26,0,"_dependencyMap"],[21,38,26,0],[22,2,33,0],[22,6,33,0,"_ActionType"],[22,17,33,0],[22,20,33,0,"require"],[22,27,33,0],[22,28,33,0,"_dependencyMap"],[22,42,33,0],[23,2,34,0],[23,6,34,0,"_PressabilityDebugView"],[23,28,34,0],[23,31,34,0,"require"],[23,38,34,0],[23,39,34,0,"_dependencyMap"],[23,53,34,0],[24,2,35,0],[24,6,35,0,"_GestureHandlerRootViewContext"],[24,36,35,0],[24,39,35,0,"_interopRequireDefault"],[24,61,35,0],[24,62,35,0,"require"],[24,69,35,0],[24,70,35,0,"_dependencyMap"],[24,84,35,0],[25,2,36,0],[25,6,36,0,"_ghQueueMicrotask"],[25,23,36,0],[25,26,36,0,"require"],[25,33,36,0],[25,34,36,0,"_dependencyMap"],[25,48,36,0],[26,2,37,0],[26,6,37,0,"_mountRegistry"],[26,20,37,0],[26,23,37,0,"require"],[26,30,37,0],[26,31,37,0,"_dependencyMap"],[26,45,37,0],[27,2,37,49],[27,6,37,49,"_jsxDevRuntime"],[27,20,37,49],[27,23,37,49,"require"],[27,30,37,49],[27,31,37,49,"_dependencyMap"],[27,45,37,49],[28,2,37,49],[28,6,37,49,"_jsxFileName"],[28,18,37,49],[29,2,37,49],[29,11,37,49,"_interopRequireWildcard"],[29,35,37,49,"e"],[29,36,37,49],[29,38,37,49,"t"],[29,39,37,49],[29,68,37,49,"WeakMap"],[29,75,37,49],[29,81,37,49,"r"],[29,82,37,49],[29,89,37,49,"WeakMap"],[29,96,37,49],[29,100,37,49,"n"],[29,101,37,49],[29,108,37,49,"WeakMap"],[29,115,37,49],[29,127,37,49,"_interopRequireWildcard"],[29,150,37,49],[29,162,37,49,"_interopRequireWildcard"],[29,163,37,49,"e"],[29,164,37,49],[29,166,37,49,"t"],[29,167,37,49],[29,176,37,49,"t"],[29,177,37,49],[29,181,37,49,"e"],[29,182,37,49],[29,186,37,49,"e"],[29,187,37,49],[29,188,37,49,"__esModule"],[29,198,37,49],[29,207,37,49,"e"],[29,208,37,49],[29,214,37,49,"o"],[29,215,37,49],[29,217,37,49,"i"],[29,218,37,49],[29,220,37,49,"f"],[29,221,37,49],[29,226,37,49,"__proto__"],[29,235,37,49],[29,243,37,49,"default"],[29,250,37,49],[29,252,37,49,"e"],[29,253,37,49],[29,270,37,49,"e"],[29,271,37,49],[29,294,37,49,"e"],[29,295,37,49],[29,320,37,49,"e"],[29,321,37,49],[29,330,37,49,"f"],[29,331,37,49],[29,337,37,49,"o"],[29,338,37,49],[29,341,37,49,"t"],[29,342,37,49],[29,345,37,49,"n"],[29,346,37,49],[29,349,37,49,"r"],[29,350,37,49],[29,358,37,49,"o"],[29,359,37,49],[29,360,37,49,"has"],[29,363,37,49],[29,364,37,49,"e"],[29,365,37,49],[29,375,37,49,"o"],[29,376,37,49],[29,377,37,49,"get"],[29,380,37,49],[29,381,37,49,"e"],[29,382,37,49],[29,385,37,49,"o"],[29,386,37,49],[29,387,37,49,"set"],[29,390,37,49],[29,391,37,49,"e"],[29,392,37,49],[29,394,37,49,"f"],[29,395,37,49],[29,409,37,49,"_t"],[29,411,37,49],[29,415,37,49,"e"],[29,416,37,49],[29,432,37,49,"_t"],[29,434,37,49],[29,441,37,49,"hasOwnProperty"],[29,455,37,49],[29,456,37,49,"call"],[29,460,37,49],[29,461,37,49,"e"],[29,462,37,49],[29,464,37,49,"_t"],[29,466,37,49],[29,473,37,49,"i"],[29,474,37,49],[29,478,37,49,"o"],[29,479,37,49],[29,482,37,49,"Object"],[29,488,37,49],[29,489,37,49,"defineProperty"],[29,503,37,49],[29,508,37,49,"Object"],[29,514,37,49],[29,515,37,49,"getOwnPropertyDescriptor"],[29,539,37,49],[29,540,37,49,"e"],[29,541,37,49],[29,543,37,49,"_t"],[29,545,37,49],[29,552,37,49,"i"],[29,553,37,49],[29,554,37,49,"get"],[29,557,37,49],[29,561,37,49,"i"],[29,562,37,49],[29,563,37,49,"set"],[29,566,37,49],[29,570,37,49,"o"],[29,571,37,49],[29,572,37,49,"f"],[29,573,37,49],[29,575,37,49,"_t"],[29,577,37,49],[29,579,37,49,"i"],[29,580,37,49],[29,584,37,49,"f"],[29,585,37,49],[29,586,37,49,"_t"],[29,588,37,49],[29,592,37,49,"e"],[29,593,37,49],[29,594,37,49,"_t"],[29,596,37,49],[29,607,37,49,"f"],[29,608,37,49],[29,613,37,49,"e"],[29,614,37,49],[29,616,37,49,"t"],[29,617,37,49],[30,2,37,49],[30,11,37,49,"_callSuper"],[30,22,37,49,"t"],[30,23,37,49],[30,25,37,49,"o"],[30,26,37,49],[30,28,37,49,"e"],[30,29,37,49],[30,40,37,49,"o"],[30,41,37,49],[30,48,37,49,"_getPrototypeOf2"],[30,64,37,49],[30,65,37,49,"default"],[30,72,37,49],[30,74,37,49,"o"],[30,75,37,49],[30,82,37,49,"_possibleConstructorReturn2"],[30,109,37,49],[30,110,37,49,"default"],[30,117,37,49],[30,119,37,49,"t"],[30,120,37,49],[30,122,37,49,"_isNativeReflectConstruct"],[30,147,37,49],[30,152,37,49,"Reflect"],[30,159,37,49],[30,160,37,49,"construct"],[30,169,37,49],[30,170,37,49,"o"],[30,171,37,49],[30,173,37,49,"e"],[30,174,37,49],[30,186,37,49,"_getPrototypeOf2"],[30,202,37,49],[30,203,37,49,"default"],[30,210,37,49],[30,212,37,49,"t"],[30,213,37,49],[30,215,37,49,"constructor"],[30,226,37,49],[30,230,37,49,"o"],[30,231,37,49],[30,232,37,49,"apply"],[30,237,37,49],[30,238,37,49,"t"],[30,239,37,49],[30,241,37,49,"e"],[30,242,37,49],[31,2,37,49],[31,11,37,49,"_isNativeReflectConstruct"],[31,37,37,49],[31,51,37,49,"t"],[31,52,37,49],[31,56,37,49,"Boolean"],[31,63,37,49],[31,64,37,49,"prototype"],[31,73,37,49],[31,74,37,49,"valueOf"],[31,81,37,49],[31,82,37,49,"call"],[31,86,37,49],[31,87,37,49,"Reflect"],[31,94,37,49],[31,95,37,49,"construct"],[31,104,37,49],[31,105,37,49,"Boolean"],[31,112,37,49],[31,145,37,49,"t"],[31,146,37,49],[31,159,37,49,"_isNativeReflectConstruct"],[31,184,37,49],[31,196,37,49,"_isNativeReflectConstruct"],[31,197,37,49],[31,210,37,49,"t"],[31,211,37,49],[32,2,40,0],[32,6,40,6,"UIManagerAny"],[32,18,40,18],[32,21,40,21,"UIManager"],[32,43,40,37],[33,2,42,0,"customDirectEventTypes"],[33,48,42,22],[33,49,42,23,"topGestureHandlerEvent"],[33,71,42,45],[33,74,42,48],[34,4,43,2,"registrationName"],[34,20,43,18],[34,22,43,20],[35,2,44,0],[35,3,44,1],[36,2,46,0],[36,6,46,6,"customGHEventsConfigFabricAndroid"],[36,39,46,39],[36,42,46,42],[37,4,47,2,"topOnGestureHandlerEvent"],[37,28,47,26],[37,30,47,28],[38,6,47,30,"registrationName"],[38,22,47,46],[38,24,47,48],[39,4,47,72],[39,5,47,73],[40,4,48,2,"topOnGestureHandlerStateChange"],[40,34,48,32],[40,36,48,34],[41,6,49,4,"registrationName"],[41,22,49,20],[41,24,49,22],[42,4,50,2],[43,2,51,0],[43,3,51,1],[44,2,53,0],[44,6,53,6,"customGHEventsConfig"],[44,26,53,26],[44,29,53,29],[45,4,54,2,"onGestureHandlerEvent"],[45,25,54,23],[45,27,54,25],[46,6,54,27,"registrationName"],[46,22,54,43],[46,24,54,45],[47,4,54,69],[47,5,54,70],[48,4,55,2,"onGestureHandlerStateChange"],[48,31,55,29],[48,33,55,31],[49,6,56,4,"registrationName"],[49,22,56,20],[49,24,56,22],[50,4,57,2],[50,5,57,3],[51,4,59,2],[52,4,60,2],[53,4,61,2],[54,4,62,2],[55,4,63,2],[56,4,64,2],[57,4,65,2],[58,4,66,2],[59,4,67,2],[59,8,67,6],[59,12,67,6,"isFabric"],[59,28,67,14],[59,30,67,15],[59,31,67,16],[59,35,68,4,"Platform"],[59,56,68,12],[59,57,68,13,"OS"],[59,59,68,15],[59,64,68,20],[59,73,68,29],[59,77,69,4,"customGHEventsConfigFabricAndroid"],[59,110,69,37],[60,2,70,0],[60,3,70,1],[62,2,72,0],[63,2,73,0],[64,2,74,0],[65,2,75,0],[66,2,76,0,"UIManagerAny"],[66,14,76,12],[66,15,76,13,"genericDirectEventTypes"],[66,38,76,36],[66,41,76,39],[67,4,77,2],[67,7,77,5,"UIManagerAny"],[67,19,77,17],[67,20,77,18,"genericDirectEventTypes"],[67,43,77,41],[68,4,78,2],[68,7,78,5,"customGHEventsConfig"],[69,2,79,0],[69,3,79,1],[70,2,80,0],[71,2,81,0],[72,2,82,0],[73,2,83,0],[73,6,83,6,"UIManagerConstants"],[73,24,83,24],[73,27,84,2,"UIManagerAny"],[73,39,84,14],[73,40,84,15,"getViewManagerConfig"],[73,60,84,35],[73,63,84,38],[73,77,84,52],[73,78,84,53],[73,82,85,2,"UIManagerAny"],[73,94,85,14],[73,95,85,15,"getConstants"],[73,107,85,27],[73,110,85,30],[73,111,85,31],[74,2,87,0],[74,6,87,4,"UIManagerConstants"],[74,24,87,22],[74,26,87,24],[75,4,88,2,"UIManagerConstants"],[75,22,88,20],[75,23,88,21,"genericDirectEventTypes"],[75,46,88,44],[75,49,88,47],[76,6,89,4],[76,9,89,7,"UIManagerConstants"],[76,27,89,25],[76,28,89,26,"genericDirectEventTypes"],[76,51,89,49],[77,6,90,4],[77,9,90,7,"customGHEventsConfig"],[78,4,91,2],[78,5,91,3],[79,2,92,0],[81,2,94,0],[82,2,95,0],[82,6,95,0,"_UIManagerAny$setJSRe"],[82,27,95,0],[82,30,102,4,"UIManagerAny"],[82,42,102,16],[82,43,96,2,"setJSResponder"],[82,57,96,16],[83,4,96,18,"oldSetJSResponder"],[83,21,96,35],[83,24,96,35,"_UIManagerAny$setJSRe"],[83,45,96,35],[83,59,96,38],[83,65,96,44],[84,6,97,4],[85,4,97,4],[85,5,98,3],[85,8,98,3,"_UIManagerAny$setJSRe"],[85,29,98,3],[86,4,98,3,"_UIManagerAny$clearJS"],[86,25,98,3],[86,28,102,4,"UIManagerAny"],[86,40,102,16],[86,41,99,2,"clearJSResponder"],[86,57,99,18],[87,4,99,20,"oldClearJSResponder"],[87,23,99,39],[87,26,99,39,"_UIManagerAny$clearJS"],[87,47,99,39],[87,61,99,42],[87,67,99,48],[88,6,100,4],[89,4,100,4],[89,5,101,3],[89,8,101,3,"_UIManagerAny$clearJS"],[89,29,101,3],[90,2,103,0,"UIManagerAny"],[90,14,103,12],[90,15,103,13,"setJSResponder"],[90,29,103,27],[90,32,103,30],[90,33,103,31,"tag"],[90,36,103,42],[90,38,103,44,"blockNativeResponder"],[90,58,103,73],[90,63,103,78],[91,4,104,2,"RNGestureHandlerModule"],[91,35,104,24],[91,36,104,25,"handleSetJSResponder"],[91,56,104,45],[91,57,104,46,"tag"],[91,60,104,49],[91,62,104,51,"blockNativeResponder"],[91,82,104,71],[91,83,104,72],[92,4,105,2,"oldSetJSResponder"],[92,21,105,19],[92,22,105,20,"tag"],[92,25,105,23],[92,27,105,25,"blockNativeResponder"],[92,47,105,45],[92,48,105,46],[93,2,106,0],[93,3,106,1],[94,2,107,0,"UIManagerAny"],[94,14,107,12],[94,15,107,13,"clearJSResponder"],[94,31,107,29],[94,34,107,32],[94,40,107,38],[95,4,108,2,"RNGestureHandlerModule"],[95,35,108,24],[95,36,108,25,"handleClearJSResponder"],[95,58,108,47],[95,59,108,48],[95,60,108,49],[96,4,109,2,"oldClearJSResponder"],[96,23,109,21],[96,24,109,22],[96,25,109,23],[97,2,110,0],[97,3,110,1],[98,2,112,0],[98,6,112,4,"allowTouches"],[98,18,112,16],[98,21,112,19],[98,25,112,23],[99,2,113,0],[99,6,113,6,"DEV_ON_ANDROID"],[99,20,113,20],[99,23,113,23,"__DEV__"],[99,30,113,30],[99,34,113,34,"Platform"],[99,55,113,42],[99,56,113,43,"OS"],[99,58,113,45],[99,63,113,50],[99,72,113,59],[100,2,114,0],[101,2,115,0],[102,2,116,0],[102,6,116,4,"DEV_ON_ANDROID"],[102,20,116,18],[102,22,116,20],[103,4,117,2,"DeviceEventEmitter"],[103,35,117,20],[103,36,117,21,"addListener"],[103,47,117,32],[103,48,117,33],[103,72,117,57],[103,74,117,59],[103,80,117,65],[104,6,118,4,"allowTouches"],[104,18,118,16],[104,21,118,19],[104,22,118,20,"allowTouches"],[104,34,118,32],[105,4,119,2],[105,5,119,3],[105,6,119,4],[106,2,120,0],[107,2,125,0],[107,11,125,9,"hasUnresolvedRefs"],[107,28,125,26,"hasUnresolvedRefs"],[107,29,126,2,"props"],[107,34,126,24],[107,36,127,2],[108,4,128,2],[109,4,129,2],[109,8,129,8,"extract"],[109,15,129,15],[109,18,129,19,"refs"],[109,22,129,36],[109,26,129,41],[110,6,130,4],[110,10,130,8],[110,11,130,9,"Array"],[110,16,130,14],[110,17,130,15,"isArray"],[110,24,130,22],[110,25,130,23,"refs"],[110,29,130,27],[110,30,130,28],[110,32,130,30],[111,8,131,6],[111,15,131,13,"refs"],[111,19,131,17],[111,23,131,21,"refs"],[111,27,131,25],[111,28,131,26,"current"],[111,35,131,33],[111,40,131,38],[111,44,131,42],[112,6,132,4],[113,6,133,4],[113,13,133,11,"refs"],[113,17,133,15],[113,18,133,16,"some"],[113,22,133,20],[113,23,133,22,"r"],[113,24,133,23],[113,28,133,28,"r"],[113,29,133,29],[113,33,133,33,"r"],[113,34,133,34],[113,35,133,35,"current"],[113,42,133,42],[113,47,133,47],[113,51,133,51],[113,52,133,52],[114,4,134,2],[114,5,134,3],[115,4,135,2],[115,11,135,9,"extract"],[115,18,135,16],[115,19,135,17,"props"],[115,24,135,22],[115,25,135,23],[115,47,135,45],[115,48,135,46],[115,49,135,47],[115,53,135,51,"extract"],[115,60,135,58],[115,61,135,59,"props"],[115,66,135,64],[115,67,135,65],[115,76,135,74],[115,77,135,75],[115,78,135,76],[116,2,136,0],[117,2,138,0],[117,6,138,6,"stateToPropMappings"],[117,25,138,25],[117,28,138,28],[118,4,139,2],[118,5,139,3,"State"],[118,17,139,8],[118,18,139,9,"UNDETERMINED"],[118,30,139,21],[118,33,139,24,"undefined"],[118,42,139,33],[119,4,140,2],[119,5,140,3,"State"],[119,17,140,8],[119,18,140,9,"BEGAN"],[119,23,140,14],[119,26,140,17],[119,35,140,26],[120,4,141,2],[120,5,141,3,"State"],[120,17,141,8],[120,18,141,9,"FAILED"],[120,24,141,15],[120,27,141,18],[120,37,141,28],[121,4,142,2],[121,5,142,3,"State"],[121,17,142,8],[121,18,142,9,"CANCELLED"],[121,27,142,18],[121,30,142,21],[121,43,142,34],[122,4,143,2],[122,5,143,3,"State"],[122,17,143,8],[122,18,143,9,"ACTIVE"],[122,24,143,15],[122,27,143,18],[122,40,143,31],[123,4,144,2],[123,5,144,3,"State"],[123,17,144,8],[123,18,144,9,"END"],[123,21,144,12],[123,24,144,15],[124,2,145,0],[124,3,145,10],[126,2,156,0],[128,2,170,0],[128,6,170,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[128,33,170,33],[128,36,170,36],[128,37,170,37],[130,2,172,0],[131,2,173,15],[131,11,173,24,"createHandler"],[131,24,173,37,"createHandler"],[131,25,173,37,"_ref"],[131,29,173,37],[131,31,182,76],[132,4,182,76],[132,8,177,2,"name"],[132,12,177,6],[132,15,177,6,"_ref"],[132,19,177,6],[132,20,177,2,"name"],[132,24,177,6],[133,6,177,6,"_ref$allowedProps"],[133,23,177,6],[133,26,177,6,"_ref"],[133,30,177,6],[133,31,178,2,"allowedProps"],[133,43,178,14],[134,6,178,2,"allowedProps"],[134,18,178,14],[134,21,178,14,"_ref$allowedProps"],[134,38,178,14],[134,52,178,17],[134,54,178,19],[134,57,178,19,"_ref$allowedProps"],[134,74,178,19],[135,6,178,19,"_ref$config"],[135,17,178,19],[135,20,178,19,"_ref"],[135,24,178,19],[135,25,179,2,"config"],[135,31,179,8],[136,6,179,2,"config"],[136,12,179,8],[136,15,179,8,"_ref$config"],[136,26,179,8],[136,40,179,11],[136,41,179,12],[136,42,179,13],[136,45,179,13,"_ref$config"],[136,56,179,13],[137,6,180,2,"transformProps"],[137,20,180,16],[137,23,180,16,"_ref"],[137,27,180,16],[137,28,180,2,"transformProps"],[137,42,180,16],[138,6,180,16,"_ref$customNativeProp"],[138,27,180,16],[138,30,180,16,"_ref"],[138,34,180,16],[138,35,181,2,"customNativeProps"],[138,52,181,19],[139,6,181,2,"customNativeProps"],[139,23,181,19],[139,26,181,19,"_ref$customNativeProp"],[139,47,181,19],[139,61,181,22],[139,63,181,24],[139,66,181,24,"_ref$customNativeProp"],[139,87,181,24],[140,4,181,24],[140,8,186,8,"Handler"],[140,15,186,15],[140,41,186,15,"_React$Component"],[140,57,186,15],[141,6,201,4],[141,15,201,4,"Handler"],[141,23,201,16,"props"],[141,28,201,48],[141,30,201,50],[142,8,201,50],[142,12,201,50,"_this"],[142,17,201,50],[143,8,201,50],[143,12,201,50,"_classCallCheck2"],[143,28,201,50],[143,29,201,50,"default"],[143,36,201,50],[143,44,201,50,"Handler"],[143,51,201,50],[144,8,202,6,"_this"],[144,13,202,6],[144,16,202,6,"_callSuper"],[144,26,202,6],[144,33,202,6,"Handler"],[144,40,202,6],[144,43,202,12,"props"],[144,48,202,17],[145,8,202,19,"_this"],[145,13,202,19],[145,14,284,12,"onGestureHandlerEvent"],[145,35,284,33],[145,38,284,37,"event"],[145,43,284,59],[145,47,284,64],[146,10,285,6],[146,14,285,10,"event"],[146,19,285,15],[146,20,285,16,"nativeEvent"],[146,31,285,27],[146,32,285,28,"handlerTag"],[146,42,285,38],[146,47,285,43,"_this"],[146,52,285,43],[146,53,285,48,"handlerTag"],[146,63,285,58],[146,65,285,60],[147,12,286,8],[147,16,286,12],[147,23,286,19,"_this"],[147,28,286,19],[147,29,286,24,"props"],[147,34,286,29],[147,35,286,30,"onGestureEvent"],[147,49,286,44],[147,54,286,49],[147,64,286,59],[147,66,286,61],[148,14,287,10,"_this"],[148,19,287,10],[148,20,287,15,"props"],[148,25,287,20],[148,26,287,21,"onGestureEvent"],[148,40,287,35],[148,43,287,38,"event"],[148,48,287,43],[148,49,287,44],[149,12,288,8],[150,10,289,6],[150,11,289,7],[150,17,289,13],[151,12,290,8,"_this"],[151,17,290,8],[151,18,290,13,"props"],[151,23,290,18],[151,24,290,19,"onGestureHandlerEvent"],[151,45,290,40],[151,48,290,43,"event"],[151,53,290,48],[151,54,290,49],[152,10,291,6],[153,8,292,4],[153,9,292,5],[154,8,294,4],[155,8,294,4,"_this"],[155,13,294,4],[155,14,295,12,"onGestureHandlerStateChange"],[155,41,295,39],[155,44,296,6,"event"],[155,49,296,39],[155,53,297,9],[156,10,298,6],[156,14,298,10,"event"],[156,19,298,15],[156,20,298,16,"nativeEvent"],[156,31,298,27],[156,32,298,28,"handlerTag"],[156,42,298,38],[156,47,298,43,"_this"],[156,52,298,43],[156,53,298,48,"handlerTag"],[156,63,298,58],[156,65,298,60],[157,12,299,8],[157,16,299,12],[157,23,299,19,"_this"],[157,28,299,19],[157,29,299,24,"props"],[157,34,299,29],[157,35,299,30,"onHandlerStateChange"],[157,55,299,50],[157,60,299,55],[157,70,299,65],[157,72,299,67],[158,14,300,10,"_this"],[158,19,300,10],[158,20,300,15,"props"],[158,25,300,20],[158,26,300,21,"onHandlerStateChange"],[158,46,300,41],[158,49,300,44,"event"],[158,54,300,49],[158,55,300,50],[159,12,301,8],[160,12,303,8],[160,16,303,14,"state"],[160,21,303,42],[160,24,303,45,"event"],[160,29,303,50],[160,30,303,51,"nativeEvent"],[160,41,303,62],[160,42,303,63,"state"],[160,47,303,68],[161,12,304,8],[161,16,304,14,"stateEventName"],[161,30,304,28],[161,33,304,31,"stateToPropMappings"],[161,52,304,50],[161,53,304,51,"state"],[161,58,304,56],[161,59,304,57],[162,12,305,8],[162,16,305,14,"eventHandler"],[162,28,305,26],[162,31,305,29,"stateEventName"],[162,45,305,43],[162,49,305,47,"_this"],[162,54,305,47],[162,55,305,52,"props"],[162,60,305,57],[162,61,305,58,"stateEventName"],[162,75,305,72],[162,76,305,73],[163,12,306,8],[163,16,306,12,"eventHandler"],[163,28,306,24],[163,32,306,28],[163,39,306,35,"eventHandler"],[163,51,306,47],[163,56,306,52],[163,66,306,62],[163,68,306,64],[164,14,307,10,"eventHandler"],[164,26,307,22],[164,27,307,23,"event"],[164,32,307,28],[164,33,307,29],[165,12,308,8],[166,10,309,6],[166,11,309,7],[166,17,309,13],[167,12,310,8,"_this"],[167,17,310,8],[167,18,310,13,"props"],[167,23,310,18],[167,24,310,19,"onGestureHandlerStateChange"],[167,51,310,46],[167,54,310,49,"event"],[167,59,310,54],[167,60,310,55],[168,10,311,6],[169,8,312,4],[169,9,312,5],[170,8,312,5,"_this"],[170,13,312,5],[170,14,314,12,"refHandler"],[170,24,314,22],[170,27,314,26,"node"],[170,31,314,35],[170,35,314,40],[171,10,315,6,"_this"],[171,15,315,6],[171,16,315,11,"viewNode"],[171,24,315,19],[171,27,315,22,"node"],[171,31,315,26],[172,10,317,6],[172,14,317,12,"child"],[172,19,317,17],[172,22,317,20,"React"],[172,27,317,25],[172,28,317,26,"Children"],[172,36,317,34],[172,37,317,35,"only"],[172,41,317,39],[172,42,317,40,"_this"],[172,47,317,40],[172,48,317,45,"props"],[172,53,317,50],[172,54,317,51,"children"],[172,62,317,59],[172,63,317,60],[173,10,318,6],[174,10,319,6],[175,10,320,6],[175,14,320,12,"ref"],[175,17,320,15],[175,20,320,18],[175,24,320,18,"isReact19"],[175,41,320,27],[175,43,320,28],[175,44,320,29],[175,47,320,33,"child"],[175,52,320,38],[175,53,320,56,"props"],[175,58,320,61],[175,60,320,63,"ref"],[175,63,320,66],[175,66,320,69,"child"],[175,71,320,74],[175,73,320,76,"ref"],[175,76,320,79],[176,10,322,6],[176,14,322,10],[176,15,322,11,"ref"],[176,18,322,14],[176,20,322,16],[177,12,323,8],[178,10,324,6],[179,10,326,6],[179,14,326,10],[179,21,326,17,"ref"],[179,24,326,20],[179,29,326,25],[179,39,326,35],[179,41,326,37],[180,12,327,8,"ref"],[180,15,327,11],[180,16,327,12,"node"],[180,20,327,16],[180,21,327,17],[181,10,328,6],[181,11,328,7],[181,17,328,13],[182,12,329,8,"ref"],[182,15,329,11],[182,16,329,12,"current"],[182,23,329,19],[182,26,329,22,"node"],[182,30,329,26],[183,10,330,6],[184,8,331,4],[184,9,331,5],[185,8,331,5,"_this"],[185,13,331,5],[185,14,333,12,"createGestureHandler"],[185,34,333,32],[185,37,334,6,"newConfig"],[185,46,334,50],[185,50,335,9],[186,10,336,6,"_this"],[186,15,336,6],[186,16,336,11,"config"],[186,22,336,17],[186,25,336,20,"newConfig"],[186,34,336,29],[187,10,338,6,"RNGestureHandlerModule"],[187,41,338,28],[187,42,338,29,"createGestureHandler"],[187,62,338,49],[187,63,339,8,"name"],[187,67,339,12],[187,69,340,8,"_this"],[187,74,340,8],[187,75,340,13,"handlerTag"],[187,85,340,23],[187,87,341,8,"newConfig"],[187,96,342,6],[187,97,342,7],[188,8,343,4],[188,9,343,5],[189,8,343,5,"_this"],[189,13,343,5],[189,14,345,12,"attachGestureHandler"],[189,34,345,32],[189,37,345,36,"newViewTag"],[189,47,345,54],[189,51,345,59],[190,10,346,6,"_this"],[190,15,346,6],[190,16,346,11,"viewTag"],[190,23,346,18],[190,26,346,21,"newViewTag"],[190,36,346,31],[191,10,348,6],[191,14,348,10,"Platform"],[191,35,348,18],[191,36,348,19,"OS"],[191,38,348,21],[191,43,348,26],[191,48,348,31],[191,50,348,33],[192,12,349,8],[193,12,351,10,"RNGestureHandlerModule"],[193,43,351,32],[193,44,351,33,"attachGestureHandler"],[193,64,351,53],[193,65,353,10,"_this"],[193,70,353,10],[193,71,353,15,"handlerTag"],[193,81,353,25],[193,83,354,10,"newViewTag"],[193,93,354,20],[193,95,355,10,"ActionType"],[193,117,355,20],[193,118,355,21,"JS_FUNCTION_OLD_API"],[193,137,355,40],[194,12,355,42],[195,12,356,10,"_this"],[195,17,356,10],[195,18,356,15,"propsRef"],[195,26,357,8],[195,27,357,9],[196,10,358,6],[196,11,358,7],[196,17,358,13],[197,12,359,8],[197,16,359,8,"registerOldGestureHandler"],[197,59,359,33],[197,61,359,34,"_this"],[197,66,359,34],[197,67,359,39,"handlerTag"],[197,77,359,49],[197,79,359,51],[198,14,360,10,"onGestureEvent"],[198,28,360,24],[198,30,360,26,"_this"],[198,35,360,26],[198,36,360,31,"onGestureHandlerEvent"],[198,57,360,52],[199,14,361,10,"onGestureStateChange"],[199,34,361,30],[199,36,361,32,"_this"],[199,41,361,32],[199,42,361,37,"onGestureHandlerStateChange"],[200,12,362,8],[200,13,362,9],[200,14,362,10],[201,12,364,8],[201,16,364,14,"actionType"],[201,26,364,24],[201,29,364,27],[201,30,364,28],[201,36,364,34],[202,14,365,10],[202,18,365,16,"onGestureEvent"],[202,32,365,30],[202,35,365,33,"_this"],[202,40,365,33],[202,41,365,38,"props"],[202,46,365,43],[202,48,365,45,"onGestureEvent"],[202,62,365,59],[203,14,366,10],[203,18,366,16,"isGestureHandlerWorklet"],[203,41,366,39],[203,44,367,12,"onGestureEvent"],[203,58,367,26],[203,63,368,13],[203,72,368,22],[203,76,368,26,"onGestureEvent"],[203,90,368,40],[203,94,369,14],[203,115,369,35],[203,119,369,39,"onGestureEvent"],[203,133,369,53],[203,134,369,54],[204,14,370,10],[204,18,370,16,"onHandlerStateChange"],[204,38,370,36],[204,41,370,39,"_this"],[204,46,370,39],[204,47,370,44,"props"],[204,52,370,49],[204,54,370,51,"onHandlerStateChange"],[204,74,370,71],[205,14,371,10],[205,18,371,16,"isStateChangeHandlerWorklet"],[205,45,371,43],[205,48,372,12,"onHandlerStateChange"],[205,68,372,32],[205,73,373,13],[205,82,373,22],[205,86,373,26,"onHandlerStateChange"],[205,106,373,46],[205,110,374,14],[205,131,374,35],[205,135,374,39,"onHandlerStateChange"],[205,155,374,59],[205,156,374,60],[206,14,375,10],[206,18,375,16,"isReanimatedHandler"],[206,37,375,35],[206,40,376,12,"isGestureHandlerWorklet"],[206,63,376,35],[206,67,376,39,"isStateChangeHandlerWorklet"],[206,94,376,66],[207,14,377,10],[207,18,377,14,"isReanimatedHandler"],[207,37,377,33],[207,39,377,35],[208,16,378,12],[209,16,379,12],[209,23,379,19,"ActionType"],[209,45,379,29],[209,46,379,30,"REANIMATED_WORKLET"],[209,64,379,48],[210,14,380,10],[210,15,380,11],[210,21,380,17],[210,25,380,21,"onGestureEvent"],[210,39,380,35],[210,43,380,39],[210,55,380,51],[210,59,380,55,"onGestureEvent"],[210,73,380,69],[210,75,380,71],[211,16,381,12],[212,16,382,12],[212,23,382,19,"ActionType"],[212,45,382,29],[212,46,382,30,"NATIVE_ANIMATED_EVENT"],[212,67,382,51],[213,14,383,10],[213,15,383,11],[213,21,383,17],[214,16,384,12],[215,16,385,12],[215,23,385,19,"ActionType"],[215,45,385,29],[215,46,385,30,"JS_FUNCTION_OLD_API"],[215,65,385,49],[216,14,386,10],[217,12,387,8],[217,13,387,9],[217,15,387,11],[217,16,387,12],[218,12,389,8,"RNGestureHandlerModule"],[218,43,389,30],[218,44,389,31,"attachGestureHandler"],[218,64,389,51],[218,65,390,10,"_this"],[218,70,390,10],[218,71,390,15,"handlerTag"],[218,81,390,25],[218,83,391,10,"newViewTag"],[218,93,391,20],[218,95,392,10,"actionType"],[218,105,393,8],[218,106,393,9],[219,10,394,6],[220,10,396,6],[220,14,396,6,"scheduleFlushOperations"],[220,44,396,29],[220,46,396,30],[220,47,396,31],[221,10,398,6],[221,14,398,6,"ghQueueMicrotask"],[221,48,398,22],[221,50,398,23],[221,56,398,29],[222,12,399,8,"MountRegistry"],[222,40,399,21],[222,41,399,22,"gestureHandlerWillMount"],[222,64,399,45],[222,65,399,45,"_this"],[222,70,399,50],[222,71,399,51],[223,10,400,6],[223,11,400,7],[223,12,400,8],[224,8,401,4],[224,9,401,5],[225,8,401,5,"_this"],[225,13,401,5],[225,14,403,12,"updateGestureHandler"],[225,34,403,32],[225,37,404,6,"newConfig"],[225,46,404,50],[225,50,405,9],[226,10,406,6,"_this"],[226,15,406,6],[226,16,406,11,"config"],[226,22,406,17],[226,25,406,20,"newConfig"],[226,34,406,29],[227,10,408,6,"RNGestureHandlerModule"],[227,41,408,28],[227,42,408,29,"updateGestureHandler"],[227,62,408,49],[227,63,408,50,"_this"],[227,68,408,50],[227,69,408,55,"handlerTag"],[227,79,408,65],[227,81,408,67,"newConfig"],[227,90,408,76],[227,91,408,77],[228,10,409,6],[228,14,409,6,"scheduleFlushOperations"],[228,44,409,29],[228,46,409,30],[228,47,409,31],[229,8,410,4],[229,9,410,5],[230,8,203,6,"_this"],[230,13,203,6],[230,14,203,11,"handlerTag"],[230,24,203,21],[230,27,203,24],[230,31,203,24,"getNextHandlerTag"],[230,67,203,41],[230,69,203,42],[230,70,203,43],[231,8,204,6,"_this"],[231,13,204,6],[231,14,204,11,"config"],[231,20,204,17],[231,23,204,20],[231,24,204,21],[231,25,204,22],[232,8,205,6,"_this"],[232,13,205,6],[232,14,205,11,"propsRef"],[232,22,205,19],[232,38,205,22,"React"],[232,43,205,27],[232,44,205,28,"createRef"],[232,53,205,37],[232,54,205,38],[232,55,205,39],[233,8,206,6,"_this"],[233,13,206,6],[233,14,206,11,"isMountedRef"],[233,26,206,23],[233,42,206,26,"React"],[233,47,206,31],[233,48,206,32,"createRef"],[233,57,206,41],[233,58,206,42],[233,59,206,43],[234,8,207,6,"_this"],[234,13,207,6],[234,14,207,11,"state"],[234,19,207,16],[234,22,207,19],[235,10,207,21,"allowTouches"],[236,8,207,34],[236,9,207,35],[237,8,208,6],[237,12,208,10,"props"],[237,17,208,15],[237,18,208,16,"id"],[237,20,208,18],[237,22,208,20],[238,10,209,8],[238,14,209,12,"handlerIDToTag"],[238,46,209,26],[238,47,209,27,"props"],[238,52,209,32],[238,53,209,33,"id"],[238,55,209,35],[238,56,209,36],[238,61,209,41,"undefined"],[238,70,209,50],[238,72,209,52],[239,12,210,10],[239,18,210,16],[239,22,210,20,"Error"],[239,27,210,25],[239,28,210,26],[239,48,210,46,"props"],[239,53,210,51],[239,54,210,52,"id"],[239,56,210,54],[239,78,210,76],[239,79,210,77],[240,10,211,8],[241,10,212,8,"handlerIDToTag"],[241,42,212,22],[241,43,212,23,"props"],[241,48,212,28],[241,49,212,29,"id"],[241,51,212,31],[241,52,212,32],[241,55,212,35,"_this"],[241,60,212,35],[241,61,212,40,"handlerTag"],[241,71,212,50],[242,8,213,6],[243,8,213,7],[243,15,213,7,"_this"],[243,20,213,7],[244,6,214,4],[245,6,214,5],[245,10,214,5,"_inherits2"],[245,20,214,5],[245,21,214,5,"default"],[245,28,214,5],[245,30,214,5,"Handler"],[245,37,214,5],[245,39,214,5,"_React$Component"],[245,55,214,5],[246,6,214,5],[246,17,214,5,"_createClass2"],[246,30,214,5],[246,31,214,5,"default"],[246,38,214,5],[246,40,214,5,"Handler"],[246,47,214,5],[247,8,214,5,"key"],[247,11,214,5],[248,8,214,5,"value"],[248,13,214,5],[248,15,216,4],[248,24,216,4,"componentDidMount"],[248,41,216,21,"componentDidMount"],[248,42,216,21],[248,44,216,24],[249,10,217,6],[249,14,217,12,"props"],[249,19,217,34],[249,22,217,37],[249,26,217,41],[249,27,217,42,"props"],[249,32,217,47],[250,10,218,6],[250,14,218,10],[250,15,218,11,"isMountedRef"],[250,27,218,23],[250,28,218,24,"current"],[250,35,218,31],[250,38,218,34],[250,42,218,38],[251,10,220,6],[251,14,220,10,"DEV_ON_ANDROID"],[251,28,220,24],[251,30,220,26],[252,12,221,8],[252,16,221,12],[252,17,221,13,"inspectorToggleListener"],[252,40,221,36],[252,43,221,39,"DeviceEventEmitter"],[252,74,221,57],[252,75,221,58,"addListener"],[252,86,221,69],[252,87,222,10],[252,111,222,34],[252,113,223,10],[252,119,223,16],[253,14,224,12],[253,18,224,16],[253,19,224,17,"setState"],[253,27,224,25],[253,28,224,27,"_"],[253,29,224,28],[253,34,224,34],[254,16,224,36,"allowTouches"],[255,14,224,49],[255,15,224,50],[255,16,224,51],[255,17,224,52],[256,14,225,12],[256,18,225,16],[256,19,225,17,"update"],[256,25,225,23],[256,26,225,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[256,53,225,51],[256,54,225,52],[257,12,226,10],[257,13,227,8],[257,14,227,9],[258,10,228,6],[259,10,229,6],[259,14,229,10,"hasUnresolvedRefs"],[259,31,229,27],[259,32,229,28,"props"],[259,37,229,33],[259,38,229,34],[259,40,229,36],[260,12,230,8],[261,12,231,8],[262,12,232,8],[263,12,233,8],[264,12,234,8],[265,12,235,8],[266,12,236,8],[266,16,236,8,"ghQueueMicrotask"],[266,50,236,24],[266,52,236,25],[266,58,236,31],[267,14,237,10],[267,18,237,14],[267,19,237,15,"update"],[267,25,237,21],[267,26,237,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[267,53,237,49],[267,54,237,50],[268,12,238,8],[268,13,238,9],[268,14,238,10],[269,10,239,6],[270,10,241,6],[270,14,241,10],[270,15,241,11,"createGestureHandler"],[270,35,241,31],[270,36,242,8],[270,40,242,8,"filterConfig"],[270,59,242,20],[270,61,243,10,"transformProps"],[270,75,243,24],[270,78,243,27,"transformProps"],[270,92,243,41],[270,93,243,42],[270,97,243,46],[270,98,243,47,"props"],[270,103,243,52],[270,104,243,53],[270,107,243,56],[270,111,243,60],[270,112,243,61,"props"],[270,117,243,66],[270,119,244,10],[270,120,244,11],[270,123,244,14,"allowedProps"],[270,135,244,26],[270,137,244,28],[270,140,244,31,"customNativeProps"],[270,157,244,48],[270,158,244,49],[270,160,245,10,"config"],[270,166,246,8],[270,167,247,6],[270,168,247,7],[271,10,249,6],[271,14,249,10],[271,15,249,11],[271,19,249,15],[271,20,249,16,"viewNode"],[271,28,249,24],[271,30,249,26],[272,12,250,8],[272,18,250,14],[272,22,250,18,"Error"],[272,27,250,23],[272,28,251,10],[272,75,251,57,"Handler"],[272,82,251,64],[272,83,251,65,"displayName"],[272,94,251,76],[272,154,252,8],[272,155,252,9],[273,10,253,6],[274,10,255,6],[274,14,255,10],[274,15,255,11,"attachGestureHandler"],[274,35,255,31],[274,36,255,32],[274,40,255,32,"findNodeHandle"],[274,63,255,46],[274,65,255,47],[274,69,255,51],[274,70,255,52,"viewNode"],[274,78,255,60],[274,79,255,71],[274,80,255,72],[274,81,255,73],[274,82,255,74],[275,8,256,4],[276,6,256,5],[277,8,256,5,"key"],[277,11,256,5],[278,8,256,5,"value"],[278,13,256,5],[278,15,258,4],[278,24,258,4,"componentDidUpdate"],[278,42,258,22,"componentDidUpdate"],[278,43,258,22],[278,45,258,25],[279,10,259,6],[279,14,259,12,"viewTag"],[279,21,259,19],[279,24,259,22],[279,28,259,22,"findNodeHandle"],[279,51,259,36],[279,53,259,37],[279,57,259,41],[279,58,259,42,"viewNode"],[279,66,259,50],[279,67,259,51],[280,10,260,6],[280,14,260,10],[280,18,260,14],[280,19,260,15,"viewTag"],[280,26,260,22],[280,31,260,27,"viewTag"],[280,38,260,34],[280,40,260,36],[281,12,261,8],[281,16,261,12],[281,17,261,13,"attachGestureHandler"],[281,37,261,33],[281,38,261,34,"viewTag"],[281,45,261,51],[281,46,261,52],[281,47,261,53],[281,48,261,54],[282,10,262,6],[283,10,263,6],[283,14,263,10],[283,15,263,11,"update"],[283,21,263,17],[283,22,263,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[283,49,263,45],[283,50,263,46],[284,8,264,4],[285,6,264,5],[286,8,264,5,"key"],[286,11,264,5],[287,8,264,5,"value"],[287,13,264,5],[287,15,266,4],[287,24,266,4,"componentWillUnmount"],[287,44,266,24,"componentWillUnmount"],[287,45,266,24],[287,47,266,27],[288,10,267,6],[288,14,267,10],[288,15,267,11,"inspectorToggleListener"],[288,38,267,34],[288,40,267,36,"remove"],[288,46,267,42],[288,47,267,43],[288,48,267,44],[289,10,268,6],[289,14,268,10],[289,15,268,11,"isMountedRef"],[289,27,268,23],[289,28,268,24,"current"],[289,35,268,31],[289,38,268,34],[289,43,268,39],[290,10,269,6],[290,14,269,10,"Platform"],[290,35,269,18],[290,36,269,19,"OS"],[290,38,269,21],[290,43,269,26],[290,48,269,31],[290,50,269,33],[291,12,270,8],[291,16,270,8,"unregisterOldGestureHandler"],[291,61,270,35],[291,63,270,36],[291,67,270,40],[291,68,270,41,"handlerTag"],[291,78,270,51],[291,79,270,52],[292,10,271,6],[293,10,272,6,"RNGestureHandlerModule"],[293,41,272,28],[293,42,272,29,"dropGestureHandler"],[293,60,272,47],[293,61,272,48],[293,65,272,52],[293,66,272,53,"handlerTag"],[293,76,272,63],[293,77,272,64],[294,10,273,6],[294,14,273,6,"scheduleFlushOperations"],[294,44,273,29],[294,46,273,30],[294,47,273,31],[295,10,274,6],[296,10,275,6],[296,14,275,12,"handlerID"],[296,23,275,41],[296,26,275,44],[296,30,275,48],[296,31,275,49,"props"],[296,36,275,54],[296,37,275,55,"id"],[296,39,275,57],[297,10,276,6],[297,14,276,10,"handlerID"],[297,23,276,19],[297,25,276,21],[298,12,277,8],[299,12,278,8],[299,19,278,15,"handlerIDToTag"],[299,51,278,29],[299,52,278,30,"handlerID"],[299,61,278,39],[299,62,278,40],[300,10,279,6],[301,10,281,6,"MountRegistry"],[301,38,281,19],[301,39,281,20,"gestureHandlerWillUnmount"],[301,64,281,45],[301,65,281,46],[301,69,281,50],[301,70,281,51],[302,8,282,4],[303,6,282,5],[304,8,282,5,"key"],[304,11,282,5],[305,8,282,5,"value"],[305,13,282,5],[305,15,412,4],[305,24,412,12,"update"],[305,30,412,18,"update"],[305,31,412,19,"remainingTries"],[305,45,412,41],[305,47,412,43],[306,10,413,6],[306,14,413,10],[306,15,413,11],[306,19,413,15],[306,20,413,16,"isMountedRef"],[306,32,413,28],[306,33,413,29,"current"],[306,40,413,36],[306,42,413,38],[307,12,414,8],[308,10,415,6],[309,10,417,6],[309,14,417,12,"props"],[309,19,417,34],[309,22,417,37],[309,26,417,41],[309,27,417,42,"props"],[309,32,417,47],[311,10,419,6],[312,10,420,6],[313,10,421,6],[314,10,422,6],[314,14,422,10,"hasUnresolvedRefs"],[314,31,422,27],[314,32,422,28,"props"],[314,37,422,33],[314,38,422,34],[314,42,422,38,"remainingTries"],[314,56,422,52],[314,59,422,55],[314,60,422,56],[314,62,422,58],[315,12,423,8],[315,16,423,8,"ghQueueMicrotask"],[315,50,423,24],[315,52,423,25],[315,58,423,31],[316,14,424,10],[316,18,424,14],[316,19,424,15,"update"],[316,25,424,21],[316,26,424,22,"remainingTries"],[316,40,424,36],[316,43,424,39],[316,44,424,40],[316,45,424,41],[317,12,425,8],[317,13,425,9],[317,14,425,10],[318,10,426,6],[318,11,426,7],[318,17,426,13],[319,12,427,8],[319,16,427,14,"newConfig"],[319,25,427,23],[319,28,427,26],[319,32,427,26,"filterConfig"],[319,51,427,38],[319,53,428,10,"transformProps"],[319,67,428,24],[319,70,428,27,"transformProps"],[319,84,428,41],[319,85,428,42],[319,89,428,46],[319,90,428,47,"props"],[319,95,428,52],[319,96,428,53],[319,99,428,56],[319,103,428,60],[319,104,428,61,"props"],[319,109,428,66],[319,111,429,10],[319,112,429,11],[319,115,429,14,"allowedProps"],[319,127,429,26],[319,129,429,28],[319,132,429,31,"customNativeProps"],[319,149,429,48],[319,150,429,49],[319,152,430,10,"config"],[319,158,431,8],[319,159,431,9],[320,12,432,8],[320,16,432,12],[320,17,432,13],[320,21,432,13,"deepEqual"],[320,38,432,22],[320,40,432,23],[320,44,432,27],[320,45,432,28,"config"],[320,51,432,34],[320,53,432,36,"newConfig"],[320,62,432,45],[320,63,432,46],[320,65,432,48],[321,14,433,10],[321,18,433,14],[321,19,433,15,"updateGestureHandler"],[321,39,433,35],[321,40,433,36,"newConfig"],[321,49,433,45],[321,50,433,46],[322,12,434,8],[323,10,435,6],[324,8,436,4],[325,6,436,5],[326,8,436,5,"key"],[326,11,436,5],[327,8,436,5,"value"],[327,13,436,5],[327,15,438,4],[327,24,438,4,"setNativeProps"],[327,38,438,18,"setNativeProps"],[327,39,438,19,"updates"],[327,46,438,31],[327,48,438,33],[328,10,439,6],[328,14,439,12,"mergedProps"],[328,25,439,23],[328,28,439,26],[329,12,439,28],[329,15,439,31],[329,19,439,35],[329,20,439,36,"props"],[329,25,439,41],[330,12,439,43],[330,15,439,46,"updates"],[331,10,439,54],[331,11,439,55],[332,10,440,6],[332,14,440,12,"newConfig"],[332,23,440,21],[332,26,440,24],[332,30,440,24,"filterConfig"],[332,49,440,36],[332,51,441,8,"transformProps"],[332,65,441,22],[332,68,441,25,"transformProps"],[332,82,441,39],[332,83,441,40,"mergedProps"],[332,94,441,51],[332,95,441,52],[332,98,441,55,"mergedProps"],[332,109,441,66],[332,111,442,8],[332,112,442,9],[332,115,442,12,"allowedProps"],[332,127,442,24],[332,129,442,26],[332,132,442,29,"customNativeProps"],[332,149,442,46],[332,150,442,47],[332,152,443,8,"config"],[332,158,444,6],[332,159,444,7],[333,10,445,6],[333,14,445,10],[333,15,445,11,"updateGestureHandler"],[333,35,445,31],[333,36,445,32,"newConfig"],[333,45,445,41],[333,46,445,42],[334,8,446,4],[335,6,446,5],[336,8,446,5,"key"],[336,11,446,5],[337,8,446,5,"value"],[337,13,446,5],[337,15,448,4],[337,24,448,4,"render"],[337,30,448,10,"render"],[337,31,448,10],[337,33,448,13],[338,10,449,6],[338,14,449,10,"__DEV__"],[338,21,449,17],[338,25,449,21],[338,26,449,22],[338,30,449,26],[338,31,449,27,"context"],[338,38,449,34],[338,42,449,38],[338,43,449,39],[338,47,449,39,"isTestEnv"],[338,64,449,48],[338,66,449,49],[338,67,449,50],[338,71,449,54,"Platform"],[338,92,449,62],[338,93,449,63,"OS"],[338,95,449,65],[338,100,449,70],[338,105,449,75],[338,107,449,77],[339,12,450,8],[339,18,450,14],[339,22,450,18,"Error"],[339,27,450,23],[339,28,451,10,"name"],[339,32,451,14],[339,35,452,12],[339,236,453,8],[339,237,453,9],[340,10,454,6],[341,10,456,6],[341,14,456,10,"gestureEventHandler"],[341,33,456,29],[341,36,456,32],[341,40,456,36],[341,41,456,37,"onGestureHandlerEvent"],[341,62,456,58],[342,10,457,6],[344,10,462,6],[344,14,462,6,"_this$props"],[344,25,462,6],[344,28,463,8],[344,32,463,12],[344,33,463,13,"props"],[344,38,463,18],[345,12,462,14,"onGestureEvent"],[345,26,462,28],[345,29,462,28,"_this$props"],[345,40,462,28],[345,41,462,14,"onGestureEvent"],[345,55,462,28],[346,12,462,30,"onGestureHandlerEvent"],[346,33,462,51],[346,36,462,51,"_this$props"],[346,47,462,51],[346,48,462,30,"onGestureHandlerEvent"],[346,69,462,51],[347,10,464,6],[347,14,464,10,"onGestureEvent"],[347,28,464,24],[347,32,464,28],[347,39,464,35,"onGestureEvent"],[347,53,464,49],[347,58,464,54],[347,68,464,64],[347,70,464,66],[348,12,465,8],[349,12,466,8],[350,12,467,8],[351,12,468,8],[351,16,468,12,"onGestureHandlerEvent"],[351,37,468,33],[351,39,468,35],[352,14,469,10],[352,20,469,16],[352,24,469,20,"Error"],[352,29,469,25],[352,30,470,12],[352,103,471,10],[352,104,471,11],[353,12,472,8],[354,12,473,8,"gestureEventHandler"],[354,31,473,27],[354,34,473,30,"onGestureEvent"],[354,48,473,44],[355,10,474,6],[355,11,474,7],[355,17,474,13],[356,12,475,8],[356,16,476,10,"onGestureHandlerEvent"],[356,37,476,31],[356,41,477,10],[356,48,477,17,"onGestureHandlerEvent"],[356,69,477,38],[356,74,477,43],[356,84,477,53],[356,86,478,10],[357,14,479,10],[357,20,479,16],[357,24,479,20,"Error"],[357,29,479,25],[357,30,480,12],[357,103,481,10],[357,104,481,11],[358,12,482,8],[359,10,483,6],[360,10,485,6],[360,14,485,10,"gestureStateEventHandler"],[360,38,485,34],[360,41,485,37],[360,45,485,41],[360,46,485,42,"onGestureHandlerStateChange"],[360,73,485,69],[361,10,486,6],[363,10,491,6],[363,14,491,6,"_this$props2"],[363,26,491,6],[363,29,494,40],[363,33,494,44],[363,34,494,45,"props"],[363,39,494,50],[364,12,492,8,"onHandlerStateChange"],[364,32,492,28],[364,35,492,28,"_this$props2"],[364,47,492,28],[364,48,492,8,"onHandlerStateChange"],[364,68,492,28],[365,12,493,8,"onGestureHandlerStateChange"],[365,39,493,35],[365,42,493,35,"_this$props2"],[365,54,493,35],[365,55,493,8,"onGestureHandlerStateChange"],[365,82,493,35],[366,10,495,6],[366,14,495,10,"onHandlerStateChange"],[366,34,495,30],[366,38,495,34],[366,45,495,41,"onHandlerStateChange"],[366,65,495,61],[366,70,495,66],[366,80,495,76],[366,82,495,78],[367,12,496,8],[368,12,497,8],[369,12,498,8],[370,12,499,8],[370,16,499,12,"onGestureHandlerStateChange"],[370,43,499,39],[370,45,499,41],[371,14,500,10],[371,20,500,16],[371,24,500,20,"Error"],[371,29,500,25],[371,30,501,12],[371,103,502,10],[371,104,502,11],[372,12,503,8],[373,12,504,8,"gestureStateEventHandler"],[373,36,504,32],[373,39,504,35,"onHandlerStateChange"],[373,59,504,55],[374,10,505,6],[374,11,505,7],[374,17,505,13],[375,12,506,8],[375,16,507,10,"onGestureHandlerStateChange"],[375,43,507,37],[375,47,508,10],[375,54,508,17,"onGestureHandlerStateChange"],[375,81,508,44],[375,86,508,49],[375,96,508,59],[375,98,509,10],[376,14,510,10],[376,20,510,16],[376,24,510,20,"Error"],[376,29,510,25],[376,30,511,12],[376,103,512,10],[376,104,512,11],[377,12,513,8],[378,10,514,6],[379,10,515,6],[379,14,515,12,"events"],[379,20,515,18],[379,23,515,21],[380,12,516,8,"onGestureHandlerEvent"],[380,33,516,29],[380,35,516,31],[380,39,516,35],[380,40,516,36,"state"],[380,45,516,41],[380,46,516,42,"allowTouches"],[380,58,516,54],[380,61,517,12,"gestureEventHandler"],[380,80,517,31],[380,83,518,12,"undefined"],[380,92,518,21],[381,12,519,8,"onGestureHandlerStateChange"],[381,39,519,35],[381,41,519,37],[381,45,519,41],[381,46,519,42,"state"],[381,51,519,47],[381,52,519,48,"allowTouches"],[381,64,519,60],[381,67,520,12,"gestureStateEventHandler"],[381,91,520,36],[381,94,521,12,"undefined"],[382,10,522,6],[382,11,522,7],[383,10,524,6],[383,14,524,10],[383,15,524,11,"propsRef"],[383,23,524,19],[383,24,524,20,"current"],[383,31,524,27],[383,34,524,30,"events"],[383,40,524,36],[384,10,526,6],[384,14,526,10,"child"],[384,19,526,20],[384,22,526,23],[384,26,526,27],[385,10,527,6],[385,14,527,10],[386,12,528,8,"child"],[386,17,528,13],[386,20,528,16,"React"],[386,25,528,21],[386,26,528,22,"Children"],[386,34,528,30],[386,35,528,31,"only"],[386,39,528,35],[386,40,528,36],[386,44,528,40],[386,45,528,41,"props"],[386,50,528,46],[386,51,528,47,"children"],[386,59,528,55],[386,60,528,56],[387,10,529,6],[387,11,529,7],[387,12,529,8],[387,19,529,15,"e"],[387,20,529,16],[387,22,529,18],[388,12,530,8],[388,18,530,14],[388,22,530,18,"Error"],[388,27,530,23],[388,28,531,10],[388,32,531,10,"tagMessage"],[388,50,531,20],[388,52,532,12],[388,55,532,15,"name"],[388,59,532,19],[388,215,533,10],[388,216,534,8],[388,217,534,9],[389,10,535,6],[390,10,537,6],[390,14,537,10,"grandChildren"],[390,27,537,23],[390,30,537,26,"child"],[390,35,537,31],[390,36,537,32,"props"],[390,41,537,37],[390,42,537,38,"children"],[390,50,537,46],[391,10,538,6],[391,14,539,8,"__DEV__"],[391,21,539,15],[391,25,540,8,"child"],[391,30,540,13],[391,31,540,14,"type"],[391,35,540,18],[391,40,541,9,"child"],[391,45,541,14],[391,46,541,15,"type"],[391,50,541,19],[391,55,541,24],[391,79,541,48],[391,83,542,10,"child"],[391,88,542,15],[391,89,542,16,"type"],[391,93,542,20],[391,94,542,21,"name"],[391,98,542,25],[391,103,542,30],[391,109,542,36],[391,113,543,10,"child"],[391,118,543,15],[391,119,543,16,"type"],[391,123,543,20],[391,124,543,21,"displayName"],[391,135,543,32],[391,140,543,37],[391,146,543,43],[391,147,543,44],[391,149,544,8],[392,12,545,8,"grandChildren"],[392,25,545,21],[392,28,545,24,"React"],[392,33,545,29],[392,34,545,30,"Children"],[392,42,545,38],[392,43,545,39,"toArray"],[392,50,545,46],[392,51,545,47,"grandChildren"],[392,64,545,60],[392,65,545,61],[393,12,546,8,"grandChildren"],[393,25,546,21],[393,26,546,22,"push"],[393,30,546,26],[393,44,547,10],[393,48,547,10,"_jsxDevRuntime"],[393,62,547,10],[393,63,547,10,"jsxDEV"],[393,69,547,10],[393,71,547,11,"_PressabilityDebugView"],[393,93,547,11],[393,94,547,11,"PressabilityDebugView"],[393,115,547,32],[394,14,549,12,"color"],[394,19,549,17],[394,21,549,18],[394,40,549,37],[395,14,550,12,"hitSlop"],[395,21,550,19],[395,23,550,21,"child"],[395,28,550,26],[395,29,550,27,"props"],[395,34,550,32],[395,35,550,33,"hitSlop"],[396,12,550,41],[396,15,548,16],[396,38,548,39],[397,14,548,39,"fileName"],[397,22,548,39],[397,24,548,39,"_jsxFileName"],[397,36,548,39],[398,14,548,39,"lineNumber"],[398,24,548,39],[399,14,548,39,"columnNumber"],[399,26,548,39],[400,12,548,39],[400,19,551,11],[400,20,552,8],[400,21,552,9],[401,10,553,6],[402,10,555,6],[402,30,555,13,"React"],[402,35,555,18],[402,36,555,19,"cloneElement"],[402,48,555,31],[402,49,556,8,"child"],[402,54,556,13],[402,56,557,8],[403,12,558,10,"ref"],[403,15,558,13],[403,17,558,15],[403,21,558,19],[403,22,558,20,"refHandler"],[403,32,558,30],[404,12,559,10,"collapsable"],[404,23,559,21],[404,25,559,23],[404,30,559,28],[405,12,560,10],[405,16,560,14],[405,20,560,14,"isTestEnv"],[405,37,560,23],[405,39,560,24],[405,40,560,25],[405,43,561,14],[406,14,562,16,"handlerType"],[406,25,562,27],[406,27,562,29,"name"],[406,31,562,33],[407,14,563,16,"handlerTag"],[407,24,563,26],[407,26,563,28],[407,30,563,32],[407,31,563,33,"handlerTag"],[407,41,563,43],[408,14,564,16,"enabled"],[408,21,564,23],[408,23,564,25],[408,27,564,29],[408,28,564,30,"props"],[408,33,564,35],[408,34,564,36,"enabled"],[409,12,565,14],[409,13,565,15],[409,16,566,14],[409,17,566,15],[409,18,566,16],[409,19,566,17],[410,12,567,10,"testID"],[410,18,567,16],[410,20,567,18],[410,24,567,22],[410,25,567,23,"props"],[410,30,567,28],[410,31,567,29,"testID"],[410,37,567,35],[410,41,567,39,"child"],[410,46,567,44],[410,47,567,45,"props"],[410,52,567,50],[410,53,567,51,"testID"],[410,59,567,57],[411,12,568,10],[411,15,568,13,"events"],[412,10,569,8],[412,11,569,9],[412,13,570,8,"grandChildren"],[412,26,571,6],[412,27,571,7],[413,8,572,4],[414,6,572,5],[415,4,572,5],[415,6,186,24,"React"],[415,11,186,29],[415,12,186,30,"Component"],[415,21,186,39],[416,4,186,8,"Handler"],[416,11,186,15],[416,12,190,11,"displayName"],[416,23,190,22],[416,26,190,25,"name"],[416,30,190,29],[417,4,186,8,"Handler"],[417,11,186,15],[417,12,191,11,"contextType"],[417,23,191,22],[417,26,191,25,"GestureHandlerRootViewContext"],[417,64,191,54],[418,4,574,2],[418,11,574,9,"Handler"],[418,18,574,16],[419,2,575,0],[420,0,575,1],[420,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC+F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVU;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}