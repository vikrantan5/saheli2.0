{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.willFetch = exports.shouldSuspend = exports.fetchOptimistic = exports.ensureSuspenseTimers = exports.defaultThrowOnError = void 0;\n  // src/suspense.ts\n  var defaultThrowOnError = (_error, query) => query.state.data === void 0;\n  exports.defaultThrowOnError = defaultThrowOnError;\n  var ensureSuspenseTimers = defaultedOptions => {\n    if (defaultedOptions.suspense) {\n      const clamp = value => value === \"static\" ? value : Math.max(value ?? 1e3, 1e3);\n      const originalStaleTime = defaultedOptions.staleTime;\n      defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n      if (typeof defaultedOptions.gcTime === \"number\") {\n        defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n      }\n    }\n  };\n  exports.ensureSuspenseTimers = ensureSuspenseTimers;\n  var willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\n  exports.willFetch = willFetch;\n  var shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\n  exports.shouldSuspend = shouldSuspend;\n  var fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset();\n  });\n  exports.fetchOptimistic = fetchOptimistic;\n});","lineCount":28,"map":[[6,2,1,0],[7,2,2,0],[7,6,2,4,"defaultThrowOnError"],[7,25,2,23],[7,28,2,26,"defaultThrowOnError"],[7,29,2,27,"_error"],[7,35,2,33],[7,37,2,35,"query"],[7,42,2,40],[7,47,2,45,"query"],[7,52,2,50],[7,53,2,51,"state"],[7,58,2,56],[7,59,2,57,"data"],[7,63,2,61],[7,68,2,66],[7,73,2,71],[7,74,2,72],[8,2,2,73,"exports"],[8,9,2,73],[8,10,2,73,"defaultThrowOnError"],[8,29,2,73],[8,32,2,73,"defaultThrowOnError"],[8,51,2,73],[9,2,3,0],[9,6,3,4,"ensureSuspenseTimers"],[9,26,3,24],[9,29,3,28,"defaultedOptions"],[9,45,3,44],[9,49,3,49],[10,4,4,2],[10,8,4,6,"defaultedOptions"],[10,24,4,22],[10,25,4,23,"suspense"],[10,33,4,31],[10,35,4,33],[11,6,5,4],[11,12,5,10,"clamp"],[11,17,5,15],[11,20,5,19,"value"],[11,25,5,24],[11,29,5,29,"value"],[11,34,5,34],[11,39,5,39],[11,47,5,47],[11,50,5,50,"value"],[11,55,5,55],[11,58,5,58,"Math"],[11,62,5,62],[11,63,5,63,"max"],[11,66,5,66],[11,67,5,67,"value"],[11,72,5,72],[11,76,5,76],[11,79,5,79],[11,81,5,81],[11,84,5,84],[11,85,5,85],[12,6,6,4],[12,12,6,10,"originalStaleTime"],[12,29,6,27],[12,32,6,30,"defaultedOptions"],[12,48,6,46],[12,49,6,47,"staleTime"],[12,58,6,56],[13,6,7,4,"defaultedOptions"],[13,22,7,20],[13,23,7,21,"staleTime"],[13,32,7,30],[13,35,7,33],[13,42,7,40,"originalStaleTime"],[13,59,7,57],[13,64,7,62],[13,74,7,72],[13,77,7,75],[13,78,7,76],[13,81,7,79,"args"],[13,85,7,83],[13,90,7,88,"clamp"],[13,95,7,93],[13,96,7,94,"originalStaleTime"],[13,113,7,111],[13,114,7,112],[13,117,7,115,"args"],[13,121,7,119],[13,122,7,120],[13,123,7,121],[13,126,7,124,"clamp"],[13,131,7,129],[13,132,7,130,"originalStaleTime"],[13,149,7,147],[13,150,7,148],[14,6,8,4],[14,10,8,8],[14,17,8,15,"defaultedOptions"],[14,33,8,31],[14,34,8,32,"gcTime"],[14,40,8,38],[14,45,8,43],[14,53,8,51],[14,55,8,53],[15,8,9,6,"defaultedOptions"],[15,24,9,22],[15,25,9,23,"gcTime"],[15,31,9,29],[15,34,9,32,"Math"],[15,38,9,36],[15,39,9,37,"max"],[15,42,9,40],[15,43,9,41,"defaultedOptions"],[15,59,9,57],[15,60,9,58,"gcTime"],[15,66,9,64],[15,68,9,66],[15,71,9,69],[15,72,9,70],[16,6,10,4],[17,4,11,2],[18,2,12,0],[18,3,12,1],[19,2,12,2,"exports"],[19,9,12,2],[19,10,12,2,"ensureSuspenseTimers"],[19,30,12,2],[19,33,12,2,"ensureSuspenseTimers"],[19,53,12,2],[20,2,13,0],[20,6,13,4,"willFetch"],[20,15,13,13],[20,18,13,16,"willFetch"],[20,19,13,17,"result"],[20,25,13,23],[20,27,13,25,"isRestoring"],[20,38,13,36],[20,43,13,41,"result"],[20,49,13,47],[20,50,13,48,"isLoading"],[20,59,13,57],[20,63,13,61,"result"],[20,69,13,67],[20,70,13,68,"isFetching"],[20,80,13,78],[20,84,13,82],[20,85,13,83,"isRestoring"],[20,96,13,94],[21,2,13,95,"exports"],[21,9,13,95],[21,10,13,95,"willFetch"],[21,19,13,95],[21,22,13,95,"willFetch"],[21,31,13,95],[22,2,14,0],[22,6,14,4,"shouldSuspend"],[22,19,14,17],[22,22,14,20,"shouldSuspend"],[22,23,14,21,"defaultedOptions"],[22,39,14,37],[22,41,14,39,"result"],[22,47,14,45],[22,52,14,50,"defaultedOptions"],[22,68,14,66],[22,70,14,68,"suspense"],[22,78,14,76],[22,82,14,80,"result"],[22,88,14,86],[22,89,14,87,"isPending"],[22,98,14,96],[23,2,14,97,"exports"],[23,9,14,97],[23,10,14,97,"shouldSuspend"],[23,23,14,97],[23,26,14,97,"shouldSuspend"],[23,39,14,97],[24,2,15,0],[24,6,15,4,"fetchOptimistic"],[24,21,15,19],[24,24,15,22,"fetchOptimistic"],[24,25,15,23,"defaultedOptions"],[24,41,15,39],[24,43,15,41,"observer"],[24,51,15,49],[24,53,15,51,"errorResetBoundary"],[24,71,15,69],[24,76,15,74,"observer"],[24,84,15,82],[24,85,15,83,"fetchOptimistic"],[24,100,15,98],[24,101,15,99,"defaultedOptions"],[24,117,15,115],[24,118,15,116],[24,119,15,117,"catch"],[24,124,15,122],[24,125,15,123],[24,131,15,129],[25,4,16,2,"errorResetBoundary"],[25,22,16,20],[25,23,16,21,"clearReset"],[25,33,16,31],[25,34,16,32],[25,35,16,33],[26,2,17,0],[26,3,17,1],[26,4,17,2],[27,2,17,3,"exports"],[27,9,17,3],[27,10,17,3,"fetchOptimistic"],[27,25,17,3],[27,28,17,3,"fetchOptimistic"],[27,43,17,3],[28,0,17,3],[28,3]],"functionMap":{"names":["<global>","defaultThrowOnError","ensureSuspenseTimers","clamp","<anonymous>","willFetch","shouldSuspend","fetchOptimistic","observer.fetchOptimistic._catch$argument_0"],"mappings":"AAA;0BCC,8CD;2BEC;kBCE,mED;2EEE,8CF;CFK;gBKC,8EL;oBMC,4EN;sBOC,qGC;CDE,CP"}},"type":"js/module"}]}