{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createSiweMessage = createSiweMessage;\n  exports.fromHex = fromHex;\n  exports.getAddress = getAddress;\n  exports.toHex = toHex;\n  // types and functions copied over from viem so this library doesn't depend on it\n  function getAddress(address) {\n    if (!/^0x[a-fA-F0-9]{40}$/.test(address)) {\n      throw new Error(`@supabase/auth-js: Address \"${address}\" is invalid.`);\n    }\n    return address.toLowerCase();\n  }\n  function fromHex(hex) {\n    return parseInt(hex, 16);\n  }\n  function toHex(value) {\n    const bytes = new TextEncoder().encode(value);\n    const hex = Array.from(bytes, byte => byte.toString(16).padStart(2, '0')).join('');\n    return '0x' + hex;\n  }\n  /**\n   * Creates EIP-4361 formatted message.\n   */\n  function createSiweMessage(parameters) {\n    var _a;\n    const {\n      chainId,\n      domain,\n      expirationTime,\n      issuedAt = new Date(),\n      nonce,\n      notBefore,\n      requestId,\n      resources,\n      scheme,\n      uri,\n      version\n    } = parameters;\n    // Validate fields\n    {\n      if (!Number.isInteger(chainId)) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"chainId\". Chain ID must be a EIP-155 chain ID. Provided value: ${chainId}`);\n      if (!domain) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"domain\". Domain must be provided.`);\n      if (nonce && nonce.length < 8) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"nonce\". Nonce must be at least 8 characters. Provided value: ${nonce}`);\n      if (!uri) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"uri\". URI must be provided.`);\n      if (version !== '1') throw new Error(`@supabase/auth-js: Invalid SIWE message field \"version\". Version must be '1'. Provided value: ${version}`);\n      if ((_a = parameters.statement) === null || _a === void 0 ? void 0 : _a.includes('\\n')) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"statement\". Statement must not include '\\\\n'. Provided value: ${parameters.statement}`);\n    }\n    // Construct message\n    const address = getAddress(parameters.address);\n    const origin = scheme ? `${scheme}://${domain}` : domain;\n    const statement = parameters.statement ? `${parameters.statement}\\n` : '';\n    const prefix = `${origin} wants you to sign in with your Ethereum account:\\n${address}\\n\\n${statement}`;\n    let suffix = `URI: ${uri}\\nVersion: ${version}\\nChain ID: ${chainId}${nonce ? `\\nNonce: ${nonce}` : ''}\\nIssued At: ${issuedAt.toISOString()}`;\n    if (expirationTime) suffix += `\\nExpiration Time: ${expirationTime.toISOString()}`;\n    if (notBefore) suffix += `\\nNot Before: ${notBefore.toISOString()}`;\n    if (requestId) suffix += `\\nRequest ID: ${requestId}`;\n    if (resources) {\n      let content = '\\nResources:';\n      for (const resource of resources) {\n        if (!resource || typeof resource !== 'string') throw new Error(`@supabase/auth-js: Invalid SIWE message field \"resources\". Every resource must be a valid string. Provided value: ${resource}`);\n        content += `\\n- ${resource}`;\n      }\n      suffix += content;\n    }\n    return `${prefix}\\n${suffix}`;\n  }\n});","lineCount":70,"map":[[9,2,1,0],[10,2,2,7],[10,11,2,16,"getAddress"],[10,21,2,26,"getAddress"],[10,22,2,27,"address"],[10,29,2,34],[10,31,2,36],[11,4,3,4],[11,8,3,8],[11,9,3,9],[11,30,3,30],[11,31,3,31,"test"],[11,35,3,35],[11,36,3,36,"address"],[11,43,3,43],[11,44,3,44],[11,46,3,46],[12,6,4,8],[12,12,4,14],[12,16,4,18,"Error"],[12,21,4,23],[12,22,4,24],[12,53,4,55,"address"],[12,60,4,62],[12,75,4,77],[12,76,4,78],[13,4,5,4],[14,4,6,4],[14,11,6,11,"address"],[14,18,6,18],[14,19,6,19,"toLowerCase"],[14,30,6,30],[14,31,6,31],[14,32,6,32],[15,2,7,0],[16,2,8,7],[16,11,8,16,"fromHex"],[16,18,8,23,"fromHex"],[16,19,8,24,"hex"],[16,22,8,27],[16,24,8,29],[17,4,9,4],[17,11,9,11,"parseInt"],[17,19,9,19],[17,20,9,20,"hex"],[17,23,9,23],[17,25,9,25],[17,27,9,27],[17,28,9,28],[18,2,10,0],[19,2,11,7],[19,11,11,16,"toHex"],[19,16,11,21,"toHex"],[19,17,11,22,"value"],[19,22,11,27],[19,24,11,29],[20,4,12,4],[20,10,12,10,"bytes"],[20,15,12,15],[20,18,12,18],[20,22,12,22,"TextEncoder"],[20,33,12,33],[20,34,12,34],[20,35,12,35],[20,36,12,36,"encode"],[20,42,12,42],[20,43,12,43,"value"],[20,48,12,48],[20,49,12,49],[21,4,13,4],[21,10,13,10,"hex"],[21,13,13,13],[21,16,13,16,"Array"],[21,21,13,21],[21,22,13,22,"from"],[21,26,13,26],[21,27,13,27,"bytes"],[21,32,13,32],[21,34,13,35,"byte"],[21,38,13,39],[21,42,13,44,"byte"],[21,46,13,48],[21,47,13,49,"toString"],[21,55,13,57],[21,56,13,58],[21,58,13,60],[21,59,13,61],[21,60,13,62,"padStart"],[21,68,13,70],[21,69,13,71],[21,70,13,72],[21,72,13,74],[21,75,13,77],[21,76,13,78],[21,77,13,79],[21,78,13,80,"join"],[21,82,13,84],[21,83,13,85],[21,85,13,87],[21,86,13,88],[22,4,14,4],[22,11,14,12],[22,15,14,16],[22,18,14,19,"hex"],[22,21,14,22],[23,2,15,0],[24,2,16,0],[25,0,17,0],[26,0,18,0],[27,2,19,7],[27,11,19,16,"createSiweMessage"],[27,28,19,33,"createSiweMessage"],[27,29,19,34,"parameters"],[27,39,19,44],[27,41,19,46],[28,4,20,4],[28,8,20,8,"_a"],[28,10,20,10],[29,4,21,4],[29,10,21,10],[30,6,21,12,"chainId"],[30,13,21,19],[31,6,21,21,"domain"],[31,12,21,27],[32,6,21,29,"expirationTime"],[32,20,21,43],[33,6,21,45,"issuedAt"],[33,14,21,53],[33,17,21,56],[33,21,21,60,"Date"],[33,25,21,64],[33,26,21,65],[33,27,21,66],[34,6,21,68,"nonce"],[34,11,21,73],[35,6,21,75,"notBefore"],[35,15,21,84],[36,6,21,86,"requestId"],[36,15,21,95],[37,6,21,97,"resources"],[37,15,21,106],[38,6,21,108,"scheme"],[38,12,21,114],[39,6,21,116,"uri"],[39,9,21,119],[40,6,21,121,"version"],[41,4,21,130],[41,5,21,131],[41,8,21,134,"parameters"],[41,18,21,144],[42,4,22,4],[43,4,23,4],[44,6,24,8],[44,10,24,12],[44,11,24,13,"Number"],[44,17,24,19],[44,18,24,20,"isInteger"],[44,27,24,29],[44,28,24,30,"chainId"],[44,35,24,37],[44,36,24,38],[44,38,25,12],[44,44,25,18],[44,48,25,22,"Error"],[44,53,25,27],[44,54,25,28],[44,167,25,141,"chainId"],[44,174,25,148],[44,176,25,150],[44,177,25,151],[45,6,26,8],[45,10,26,12],[45,11,26,13,"domain"],[45,17,26,19],[45,19,27,12],[45,25,27,18],[45,29,27,22,"Error"],[45,34,27,27],[45,35,27,28],[45,117,27,110],[45,118,27,111],[46,6,28,8],[46,10,28,12,"nonce"],[46,15,28,17],[46,19,28,21,"nonce"],[46,24,28,26],[46,25,28,27,"length"],[46,31,28,33],[46,34,28,36],[46,35,28,37],[46,37,29,12],[46,43,29,18],[46,47,29,22,"Error"],[46,52,29,27],[46,53,29,28],[46,164,29,139,"nonce"],[46,169,29,144],[46,171,29,146],[46,172,29,147],[47,6,30,8],[47,10,30,12],[47,11,30,13,"uri"],[47,14,30,16],[47,16,31,12],[47,22,31,18],[47,26,31,22,"Error"],[47,31,31,27],[47,32,31,28],[47,108,31,104],[47,109,31,105],[48,6,32,8],[48,10,32,12,"version"],[48,17,32,19],[48,22,32,24],[48,25,32,27],[48,27,33,12],[48,33,33,18],[48,37,33,22,"Error"],[48,42,33,27],[48,43,33,28],[48,140,33,125,"version"],[48,147,33,132],[48,149,33,134],[48,150,33,135],[49,6,34,8],[49,10,34,12],[49,11,34,13,"_a"],[49,13,34,15],[49,16,34,18,"parameters"],[49,26,34,28],[49,27,34,29,"statement"],[49,36,34,38],[49,42,34,44],[49,46,34,48],[49,50,34,52,"_a"],[49,52,34,54],[49,57,34,59],[49,62,34,64],[49,63,34,65],[49,66,34,68],[49,71,34,73],[49,72,34,74],[49,75,34,77,"_a"],[49,77,34,79],[49,78,34,80,"includes"],[49,86,34,88],[49,87,34,89],[49,91,34,93],[49,92,34,94],[49,94,35,12],[49,100,35,18],[49,104,35,22,"Error"],[49,109,35,27],[49,110,35,28],[49,222,35,140,"parameters"],[49,232,35,150],[49,233,35,151,"statement"],[49,242,35,160],[49,244,35,162],[49,245,35,163],[50,4,36,4],[51,4,37,4],[52,4,38,4],[52,10,38,10,"address"],[52,17,38,17],[52,20,38,20,"getAddress"],[52,30,38,30],[52,31,38,31,"parameters"],[52,41,38,41],[52,42,38,42,"address"],[52,49,38,49],[52,50,38,50],[53,4,39,4],[53,10,39,10,"origin"],[53,16,39,16],[53,19,39,19,"scheme"],[53,25,39,25],[53,28,39,28],[53,31,39,31,"scheme"],[53,37,39,37],[53,43,39,43,"domain"],[53,49,39,49],[53,51,39,51],[53,54,39,54,"domain"],[53,60,39,60],[54,4,40,4],[54,10,40,10,"statement"],[54,19,40,19],[54,22,40,22,"parameters"],[54,32,40,32],[54,33,40,33,"statement"],[54,42,40,42],[54,45,40,45],[54,48,40,48,"parameters"],[54,58,40,58],[54,59,40,59,"statement"],[54,68,40,68],[54,72,40,72],[54,75,40,75],[54,77,40,77],[55,4,41,4],[55,10,41,10,"prefix"],[55,16,41,16],[55,19,41,19],[55,22,41,22,"origin"],[55,28,41,28],[55,82,41,82,"address"],[55,89,41,89],[55,96,41,96,"statement"],[55,105,41,105],[55,107,41,107],[56,4,42,4],[56,8,42,8,"suffix"],[56,14,42,14],[56,17,42,17],[56,25,42,25,"uri"],[56,28,42,28],[56,42,42,42,"version"],[56,49,42,49],[56,64,42,64,"chainId"],[56,71,42,71],[56,74,42,74,"nonce"],[56,79,42,79],[56,82,42,82],[56,94,42,94,"nonce"],[56,99,42,99],[56,101,42,101],[56,104,42,104],[56,106,42,106],[56,122,42,122,"issuedAt"],[56,130,42,130],[56,131,42,131,"toISOString"],[56,142,42,142],[56,143,42,143],[56,144,42,144],[56,146,42,146],[57,4,43,4],[57,8,43,8,"expirationTime"],[57,22,43,22],[57,24,44,8,"suffix"],[57,30,44,14],[57,34,44,18],[57,56,44,40,"expirationTime"],[57,70,44,54],[57,71,44,55,"toISOString"],[57,82,44,66],[57,83,44,67],[57,84,44,68],[57,86,44,70],[58,4,45,4],[58,8,45,8,"notBefore"],[58,17,45,17],[58,19,46,8,"suffix"],[58,25,46,14],[58,29,46,18],[58,46,46,35,"notBefore"],[58,55,46,44],[58,56,46,45,"toISOString"],[58,67,46,56],[58,68,46,57],[58,69,46,58],[58,71,46,60],[59,4,47,4],[59,8,47,8,"requestId"],[59,17,47,17],[59,19,48,8,"suffix"],[59,25,48,14],[59,29,48,18],[59,46,48,35,"requestId"],[59,55,48,44],[59,57,48,46],[60,4,49,4],[60,8,49,8,"resources"],[60,17,49,17],[60,19,49,19],[61,6,50,8],[61,10,50,12,"content"],[61,17,50,19],[61,20,50,22],[61,34,50,36],[62,6,51,8],[62,11,51,13],[62,17,51,19,"resource"],[62,25,51,27],[62,29,51,31,"resources"],[62,38,51,40],[62,40,51,42],[63,8,52,12],[63,12,52,16],[63,13,52,17,"resource"],[63,21,52,25],[63,25,52,29],[63,32,52,36,"resource"],[63,40,52,44],[63,45,52,49],[63,53,52,57],[63,55,53,16],[63,61,53,22],[63,65,53,26,"Error"],[63,70,53,31],[63,71,53,32],[63,188,53,149,"resource"],[63,196,53,157],[63,198,53,159],[63,199,53,160],[64,8,54,12,"content"],[64,15,54,19],[64,19,54,23],[64,26,54,30,"resource"],[64,34,54,38],[64,36,54,40],[65,6,55,8],[66,6,56,8,"suffix"],[66,12,56,14],[66,16,56,18,"content"],[66,23,56,25],[67,4,57,4],[68,4,58,4],[68,11,58,11],[68,14,58,14,"prefix"],[68,20,58,20],[68,25,58,25,"suffix"],[68,31,58,31],[68,33,58,33],[69,2,59,0],[70,0,59,1],[70,3]],"functionMap":{"names":["<global>","getAddress","fromHex","toHex","Array.from$argument_1","createSiweMessage"],"mappings":"AAA;OCC;CDK;OEC;CFE;OGC;kCCE,4CD;CHE;OKI;CLwC"}},"type":"js/module"}]}