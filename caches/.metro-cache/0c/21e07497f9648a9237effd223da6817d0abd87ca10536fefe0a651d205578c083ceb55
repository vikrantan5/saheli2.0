{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":32,"index":109}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":49,"index":160},"end":{"line":4,"column":76,"index":187}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":20,"index":210},"end":{"line":5,"column":46,"index":236}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"]}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":255},"end":{"line":6,"column":40,"index":278}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":296},"end":{"line":7,"column":38,"index":318}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":18,"index":338},"end":{"line":8,"column":42,"index":362}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"]}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":24,"index":388},"end":{"line":9,"column":54,"index":418}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"]}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":16,"index":436},"end":{"line":10,"column":38,"index":458}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"]}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":20,"index":480},"end":{"line":11,"column":46,"index":506}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"]}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":18,"index":526},"end":{"line":12,"column":42,"index":550}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"]}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":572},"end":{"line":13,"column":46,"index":598}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"]}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":619},"end":{"line":14,"column":49,"index":649}}],"key":"7NCa1l0WsdounoYDseQIolyeoT4=","exportNames":["*"]}},{"name":"./lib/webauthn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":19,"index":670},"end":{"line":15,"column":44,"index":695}}],"key":"OCQwc7y6/FfrfsXu7zeL/LXC+4c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _asyncToGenerator = require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var tslib_1 = require(_dependencyMap[4], \"tslib\");\n  var GoTrueAdminApi_1 = tslib_1.__importDefault(require(_dependencyMap[5], \"./GoTrueAdminApi\"));\n  var constants_1 = require(_dependencyMap[6], \"./lib/constants\");\n  var errors_1 = require(_dependencyMap[7], \"./lib/errors\");\n  var fetch_1 = require(_dependencyMap[8], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[9], \"./lib/helpers\");\n  var local_storage_1 = require(_dependencyMap[10], \"./lib/local-storage\");\n  var locks_1 = require(_dependencyMap[11], \"./lib/locks\");\n  var polyfills_1 = require(_dependencyMap[12], \"./lib/polyfills\");\n  var version_1 = require(_dependencyMap[13], \"./lib/version\");\n  var base64url_1 = require(_dependencyMap[14], \"./lib/base64url\");\n  var ethereum_1 = require(_dependencyMap[15], \"./lib/web3/ethereum\");\n  var webauthn_1 = require(_dependencyMap[16], \"./lib/webauthn\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  var DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  function lockNoOp(_x, _x2, _x3) {\n    return _lockNoOp.apply(this, arguments);\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  function _lockNoOp() {\n    _lockNoOp = _asyncToGenerator(function* (name, acquireTimeout, fn) {\n      return yield fn();\n    });\n    return _lockNoOp.apply(this, arguments);\n  }\n  var GLOBAL_JWKS = {};\n  var GoTrueClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     */\n    function GoTrueClient(options) {\n      var _this = this;\n      _classCallCheck(this, GoTrueClient);\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        webauthn: new webauthn_1.WebAuthnApi(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this._debug('received broadcast notification from other tab or client', event);\n            yield _this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n          });\n          return function (_x4) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n      this.initialize();\n    }\n    return _createClass(GoTrueClient, [{\n      key: \"jwks\",\n      get:\n      /**\n       * The JWKS used for verifying asymmetric JWTs\n       */\n      function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n          keys: []\n        };\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          jwks: value\n        });\n      }\n    }, {\n      key: \"jwks_cached_at\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          cachedAt: value\n        });\n      }\n    }, {\n      key: \"_debug\",\n      value: function _debug() {\n        if (this.logDebugMessages) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n      }\n      /**\n       * Initializes the client session either from the url or from storage.\n       * This method is automatically called when instantiating the client, but should also be called\n       * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize2 = _asyncToGenerator(function* () {\n          var _this2 = this;\n          if (this.initializePromise) {\n            return yield this.initializePromise;\n          }\n          this.initializePromise = _asyncToGenerator(function* () {\n            return yield _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this2._initialize();\n            }));\n          })();\n          return yield this.initializePromise;\n        });\n        function initialize() {\n          return _initialize2.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * IMPORTANT:\n       * 1. Never throw in this method, as it is called from the constructor\n       * 2. Never return a session from this method as it would be cached over\n       *    the whole lifetime of the client\n       */\n      )\n    }, {\n      key: \"_initialize\",\n      value: (function () {\n        var _initialize3 = _asyncToGenerator(function* () {\n          var _this3 = this;\n          var _a;\n          try {\n            var params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n            var callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n              callbackUrlType = 'implicit';\n            } else if (yield this._isPKCECallback(params)) {\n              callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n              var _yield$this$_getSessi = yield this._getSessionFromURL(params, callbackUrlType),\n                data = _yield$this$_getSessi.data,\n                error = _yield$this$_getSessi.error;\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error);\n                if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n                  var errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                  if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                    return {\n                      error\n                    };\n                  }\n                }\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                yield this._removeSession();\n                return {\n                  error\n                };\n              }\n              var session = data.session,\n                redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              yield this._saveSession(session);\n              setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n                if (redirectType === 'recovery') {\n                  yield _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                } else {\n                  yield _this3._notifyAllSubscribers('SIGNED_IN', session);\n                }\n              }), 0);\n              return {\n                error: null\n              };\n            }\n            // no login attempt via callback url try to recover session from storage\n            yield this._recoverAndRefresh();\n            return {\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                error\n              };\n            }\n            return {\n              error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n            };\n          } finally {\n            yield this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n          }\n        });\n        function _initialize() {\n          return _initialize3.apply(this, arguments);\n        }\n        return _initialize;\n      }()\n      /**\n       * Creates a new anonymous user.\n       *\n       * @returns A session where the is_anonymous claim in the access token JWT set to true\n       */\n      )\n    }, {\n      key: \"signInAnonymously\",\n      value: (function () {\n        var _signInAnonymously = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n              headers: this.headers,\n              body: {\n                data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                gotrue_meta_security: {\n                  captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInAnonymously(_x5) {\n          return _signInAnonymously.apply(this, arguments);\n        }\n        return signInAnonymously;\n      }()\n      /**\n       * Creates a new user.\n       *\n       * Be aware that if a user account exists in the system you may get back an\n       * error message that attempts to hide this information from the user.\n       * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n       *\n       * @returns A logged-in session if the server has \"autoconfirm\" ON\n       * @returns A user if the server has \"autoconfirm\" OFF\n       */\n      )\n    }, {\n      key: \"signUp\",\n      value: (function () {\n        var _signUp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield2 = _slicedToArray(_yield, 2);\n                codeChallenge = _yield2[0];\n                codeChallengeMethod = _yield2[1];\n              }\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email,\n                  password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password = credentials.password,\n                _options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res = res,\n              data = _res.data,\n              error = _res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signUp(_x6) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n      /**\n       * Log in an existing user with an email and password or phone and password.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or that the\n       * email/phone and password combination is wrong or that the account can only\n       * be accessed via social login.\n       */\n      )\n    }, {\n      key: \"signInWithPassword\",\n      value: (function () {\n        var _signInWithPassword = _asyncToGenerator(function* (credentials) {\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  email,\n                  password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password2 = credentials.password,\n                _options2 = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res2 = res,\n              data = _res2.data,\n              error = _res2.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({\n                user: data.user,\n                session: data.session\n              }, data.weak_password ? {\n                weakPassword: data.weak_password\n              } : null),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithPassword(_x7) {\n          return _signInWithPassword.apply(this, arguments);\n        }\n        return signInWithPassword;\n      }()\n      /**\n       * Log in an existing user via a third-party provider.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"signInWithOAuth\",\n      value: (function () {\n        var _signInWithOAuth = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d;\n          return yield this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n          });\n        });\n        function signInWithOAuth(_x8) {\n          return _signInWithOAuth.apply(this, arguments);\n        }\n        return signInWithOAuth;\n      }()\n      /**\n       * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n       */\n      )\n    }, {\n      key: \"exchangeCodeForSession\",\n      value: (function () {\n        var _exchangeCodeForSession2 = _asyncToGenerator(function* (authCode) {\n          var _this4 = this;\n          yield this.initializePromise;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this4._exchangeCodeForSession(authCode);\n          }));\n        });\n        function exchangeCodeForSession(_x9) {\n          return _exchangeCodeForSession2.apply(this, arguments);\n        }\n        return exchangeCodeForSession;\n      }()\n      /**\n       * Signs in a user by verifying a message signed by the user's private key.\n       * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n       * both of which derive from the EIP-4361 standard\n       * With slight variation on Solana's side.\n       * @reference https://eips.ethereum.org/EIPS/eip-4361\n       */\n      )\n    }, {\n      key: \"signInWithWeb3\",\n      value: (function () {\n        var _signInWithWeb = _asyncToGenerator(function* (credentials) {\n          var chain = credentials.chain;\n          switch (chain) {\n            case 'ethereum':\n              return yield this.signInWithEthereum(credentials);\n            case 'solana':\n              return yield this.signInWithSolana(credentials);\n            default:\n              throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n          }\n        });\n        function signInWithWeb3(_x0) {\n          return _signInWithWeb.apply(this, arguments);\n        }\n        return signInWithWeb3;\n      }())\n    }, {\n      key: \"signInWithEthereum\",\n      value: function () {\n        var _signInWithEthereum = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n          // TODO: flatten type\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n                resolvedWallet = windowAny.ethereum;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            var accounts = yield resolvedWallet.request({\n              method: 'eth_requestAccounts'\n            }).then(accs => accs).catch(() => {\n              throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n            });\n            if (!accounts || accounts.length === 0) {\n              throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n            }\n            var address = (0, ethereum_1.getAddress)(accounts[0]);\n            var chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n            if (!chainId) {\n              var chainIdHex = yield resolvedWallet.request({\n                method: 'eth_chainId'\n              });\n              chainId = (0, ethereum_1.fromHex)(chainIdHex);\n            }\n            var siweMessage = {\n              domain: url.host,\n              address: address,\n              statement: statement,\n              uri: url.href,\n              version: '1',\n              chainId: chainId,\n              nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n              issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n              expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n              notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n              requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n              resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n            };\n            message = (0, ethereum_1.createSiweMessage)(siweMessage);\n            // Sign message\n            signature = yield resolvedWallet.request({\n              method: 'personal_sign',\n              params: [(0, ethereum_1.toHex)(message), address]\n            });\n          }\n          try {\n            var _yield3 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'ethereum',\n                  message,\n                  signature\n                }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield3.data,\n              error = _yield3.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithEthereum(_x1) {\n          return _signInWithEthereum.apply(this, arguments);\n        }\n        return signInWithEthereum;\n      }()\n    }, {\n      key: \"signInWithSolana\",\n      value: function () {\n        var _signInWithSolana = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n                resolvedWallet = windowAny.solana;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n              var output = yield resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n                issuedAt: new Date().toISOString()\n              }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n                // non-overridable properties\n                version: '1',\n                domain: url.host,\n                uri: url.href\n              }), statement ? {\n                statement\n              } : null));\n              var outputToProcess;\n              if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                outputToProcess = output[0];\n              } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n                outputToProcess = output;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n              }\n              if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n                message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n                signature = outputToProcess.signature;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n              }\n            } else {\n              if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n              }\n              message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n              var maybeSignature = yield resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n              if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n              }\n              signature = maybeSignature;\n            }\n          }\n          try {\n            var _yield4 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'solana',\n                  message,\n                  signature: (0, base64url_1.bytesToBase64URL)(signature)\n                }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield4.data,\n              error = _yield4.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSolana(_x10) {\n          return _signInWithSolana.apply(this, arguments);\n        }\n        return signInWithSolana;\n      }()\n    }, {\n      key: \"_exchangeCodeForSession\",\n      value: function () {\n        var _exchangeCodeForSession3 = _asyncToGenerator(function* (authCode) {\n          var storageItem = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          var _split = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/'),\n            _split2 = _slicedToArray(_split, 2),\n            codeVerifier = _split2[0],\n            redirectType = _split2[1];\n          try {\n            var _yield5 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield5.data,\n              error = _yield5.error;\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign(Object.assign({}, data), {\n                redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n              }),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _exchangeCodeForSession(_x11) {\n          return _exchangeCodeForSession3.apply(this, arguments);\n        }\n        return _exchangeCodeForSession;\n      }()\n      /**\n       * Allows signing in with an OIDC ID token. The authentication provider used\n       * should be enabled and configured.\n       */\n    }, {\n      key: \"signInWithIdToken\",\n      value: (function () {\n        var _signInWithIdToken = _asyncToGenerator(function* (credentials) {\n          try {\n            var options = credentials.options,\n              provider = credentials.provider,\n              token = credentials.token,\n              access_token = credentials.access_token,\n              nonce = credentials.nonce;\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n              headers: this.headers,\n              body: {\n                provider,\n                id_token: token,\n                access_token,\n                nonce,\n                gotrue_meta_security: {\n                  captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data,\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithIdToken(_x12) {\n          return _signInWithIdToken.apply(this, arguments);\n        }\n        return signInWithIdToken;\n      }()\n      /**\n       * Log in a user using magiclink or a one-time password (OTP).\n       *\n       * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n       * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n       * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or, that the account\n       * can only be accessed via social login.\n       *\n       * Do note that you will need to configure a Whatsapp sender on Twilio\n       * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n       * channel is not supported on other providers\n       * at this time.\n       * This method supports PKCE when an email is passed.\n       */\n      )\n    }, {\n      key: \"signInWithOtp\",\n      value: (function () {\n        var _signInWithOtp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e;\n          try {\n            if ('email' in credentials) {\n              var email = credentials.email,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield6 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield7 = _slicedToArray(_yield6, 2);\n                codeChallenge = _yield7[0];\n                codeChallengeMethod = _yield7[1];\n              }\n              var _yield8 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield8.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _options3 = credentials.options;\n              var _yield9 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                  }\n                }),\n                data = _yield9.data,\n                _error = _yield9.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithOtp(_x13) {\n          return _signInWithOtp.apply(this, arguments);\n        }\n        return signInWithOtp;\n      }()\n      /**\n       * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n       */\n      )\n    }, {\n      key: \"verifyOtp\",\n      value: (function () {\n        var _verifyOtp = _asyncToGenerator(function* (params) {\n          var _a, _b;\n          try {\n            var redirectTo = undefined;\n            var captchaToken = undefined;\n            if ('options' in params) {\n              redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n              captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            var _yield0 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo,\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield0.data,\n              error = _yield0.error;\n            if (error) {\n              throw error;\n            }\n            if (!data) {\n              throw new Error('An error occurred on token verification.');\n            }\n            var session = data.session;\n            var user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function verifyOtp(_x14) {\n          return _verifyOtp.apply(this, arguments);\n        }\n        return verifyOtp;\n      }()\n      /**\n       * Attempts a single-sign on using an enterprise Identity Provider. A\n       * successful SSO attempt will redirect the current page to the identity\n       * provider authorization page. The redirect URL is implementation and SSO\n       * protocol specific.\n       *\n       * You can use it by providing a SSO domain. Typically you can extract this\n       * domain by asking users for their email address. If this domain is\n       * registered on the Auth instance the redirect will use that organization's\n       * currently active SSO Identity Provider for the login.\n       *\n       * If you have built an organization-specific login page, you can use the\n       * organization's SSO Identity Provider UUID directly instead.\n       */\n      )\n    }, {\n      key: \"signInWithSSO\",\n      value: (function () {\n        var _signInWithSSO = _asyncToGenerator(function* (params) {\n          var _a, _b, _c;\n          try {\n            var codeChallenge = null;\n            var codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n              ;\n              var _yield1 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n              var _yield10 = _slicedToArray(_yield1, 2);\n              codeChallenge = _yield10[0];\n              codeChallengeMethod = _yield10[1];\n            }\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                provider_id: params.providerId\n              } : null), 'domain' in params ? {\n                domain: params.domain\n              } : null), {\n                redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n              }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                gotrue_meta_security: {\n                  captcha_token: params.options.captchaToken\n                }\n              } : null), {\n                skip_http_redirect: true,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod\n              }),\n              headers: this.headers,\n              xform: fetch_1._ssoResponse\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSSO(_x15) {\n          return _signInWithSSO.apply(this, arguments);\n        }\n        return signInWithSSO;\n      }()\n      /**\n       * Sends a reauthentication OTP to the user's email or phone number.\n       * Requires the user to be signed-in.\n       */\n      )\n    }, {\n      key: \"reauthenticate\",\n      value: (function () {\n        var _reauthenticate2 = _asyncToGenerator(function* () {\n          var _this5 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this5._reauthenticate();\n          }));\n        });\n        function reauthenticate() {\n          return _reauthenticate2.apply(this, arguments);\n        }\n        return reauthenticate;\n      }())\n    }, {\n      key: \"_reauthenticate\",\n      value: function () {\n        var _reauthenticate3 = _asyncToGenerator(function* () {\n          var _this6 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (result) {\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) throw sessionError;\n                if (!session) throw new errors_1.AuthSessionMissingError();\n                var _yield11 = yield (0, fetch_1._request)(_this6.fetch, 'GET', `${_this6.url}/reauthenticate`, {\n                    headers: _this6.headers,\n                    jwt: session.access_token\n                  }),\n                  error = _yield11.error;\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error\n                };\n              });\n              return function (_x16) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _reauthenticate() {\n          return _reauthenticate3.apply(this, arguments);\n        }\n        return _reauthenticate;\n      }()\n      /**\n       * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n       */\n    }, {\n      key: \"resend\",\n      value: (function () {\n        var _resend = _asyncToGenerator(function* (credentials) {\n          try {\n            var endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                type = credentials.type,\n                options = credentials.options;\n              var _yield12 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield12.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _type = credentials.type,\n                _options4 = credentials.options;\n              var _yield13 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                    }\n                  }\n                }),\n                data = _yield13.data,\n                _error2 = _yield13.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resend(_x17) {\n          return _resend.apply(this, arguments);\n        }\n        return resend;\n      }()\n      /**\n       * Returns the session, refreshing it if necessary.\n       *\n       * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n       *\n       * **IMPORTANT:** This method loads values directly from the storage attached\n       * to the client. If that storage is based on request cookies for example,\n       * the values in it may not be authentic and therefore it's strongly advised\n       * against using this method and its results in such circumstances. A warning\n       * will be emitted if this is detected. Use {@link #getUser()} instead.\n       */\n      )\n    }, {\n      key: \"getSession\",\n      value: (function () {\n        var _getSession = _asyncToGenerator(function* () {\n          var _this7 = this;\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this7._useSession(/*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator(function* (result) {\n                return result;\n              });\n              return function (_x18) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n          }));\n          return result;\n        });\n        function getSession() {\n          return _getSession.apply(this, arguments);\n        }\n        return getSession;\n      }()\n      /**\n       * Acquires a global lock based on the storage key.\n       */\n      )\n    }, {\n      key: \"_acquireLock\",\n      value: (function () {\n        var _acquireLock2 = _asyncToGenerator(function* (acquireTimeout, fn) {\n          var _this8 = this;\n          this._debug('#_acquireLock', 'begin', acquireTimeout);\n          try {\n            if (this.lockAcquired) {\n              var last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              var result = _asyncToGenerator(function* () {\n                yield last;\n                return yield fn();\n              })();\n              this.pendingInLock.push(_asyncToGenerator(function* () {\n                try {\n                  yield result;\n                } catch (e) {\n                  // we just care if it finished\n                }\n              })());\n              return result;\n            }\n            return yield this.lock(`lock:${this.storageKey}`, acquireTimeout, /*#__PURE__*/_asyncToGenerator(function* () {\n              _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n              try {\n                _this8.lockAcquired = true;\n                var _result = fn();\n                _this8.pendingInLock.push(_asyncToGenerator(function* () {\n                  try {\n                    yield _result;\n                  } catch (e) {\n                    // we just care if it finished\n                  }\n                })());\n                yield _result;\n                // keep draining the queue until there's nothing to wait on\n                while (_this8.pendingInLock.length) {\n                  var waitOn = [..._this8.pendingInLock];\n                  yield Promise.all(waitOn);\n                  _this8.pendingInLock.splice(0, waitOn.length);\n                }\n                return yield _result;\n              } finally {\n                _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                _this8.lockAcquired = false;\n              }\n            }));\n          } finally {\n            this._debug('#_acquireLock', 'end');\n          }\n        });\n        function _acquireLock(_x19, _x20) {\n          return _acquireLock2.apply(this, arguments);\n        }\n        return _acquireLock;\n      }()\n      /**\n       * Use instead of {@link #getSession} inside the library. It is\n       * semantically usually what you want, as getting a session involves some\n       * processing afterwards that requires only one client operating on the\n       * session at once across multiple tabs or processes.\n       */\n      )\n    }, {\n      key: \"_useSession\",\n      value: (function () {\n        var _useSession2 = _asyncToGenerator(function* (fn) {\n          this._debug('#_useSession', 'begin');\n          try {\n            // the use of __loadSession here is the only correct use of the function!\n            var result = yield this.__loadSession();\n            return yield fn(result);\n          } finally {\n            this._debug('#_useSession', 'end');\n          }\n        });\n        function _useSession(_x21) {\n          return _useSession2.apply(this, arguments);\n        }\n        return _useSession;\n      }()\n      /**\n       * NEVER USE DIRECTLY!\n       *\n       * Always use {@link #_useSession}.\n       */\n      )\n    }, {\n      key: \"__loadSession\",\n      value: (function () {\n        var _loadSession = _asyncToGenerator(function* () {\n          this._debug('#__loadSession()', 'begin');\n          if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n          }\n          try {\n            var currentSession = null;\n            var maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n              if (this._isValidSession(maybeSession)) {\n                currentSession = maybeSession;\n              } else {\n                this._debug('#getSession()', 'session from storage is not valid');\n                yield this._removeSession();\n              }\n            }\n            if (!currentSession) {\n              return {\n                data: {\n                  session: null\n                },\n                error: null\n              };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            var hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n              if (this.userStorage) {\n                var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n                if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                  currentSession.user = maybeUser.user;\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n              if (this.storage.isServer && currentSession.user) {\n                var suppressWarning = this.suppressGetSessionWarning;\n                var proxySession = new Proxy(currentSession, {\n                  get: (target, prop, receiver) => {\n                    if (!suppressWarning && prop === 'user') {\n                      // only show warning when the user object is being accessed from the server\n                      console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                      suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                      this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                    }\n                    return Reflect.get(target, prop, receiver);\n                  }\n                });\n                currentSession = proxySession;\n              }\n              return {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              };\n            }\n            var _yield$this$_callRefr = yield this._callRefreshToken(currentSession.refresh_token),\n              session = _yield$this$_callRefr.data,\n              error = _yield$this$_callRefr.error;\n            if (error) {\n              return {\n                data: {\n                  session: null\n                },\n                error\n              };\n            }\n            return {\n              data: {\n                session\n              },\n              error: null\n            };\n          } finally {\n            this._debug('#__loadSession()', 'end');\n          }\n        });\n        function __loadSession() {\n          return _loadSession.apply(this, arguments);\n        }\n        return __loadSession;\n      }()\n      /**\n       * Gets the current user details if there is an existing session. This method\n       * performs a network request to the Supabase Auth server, so the returned\n       * value is authentic and can be used to base authorization rules on.\n       *\n       * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n       */\n      )\n    }, {\n      key: \"getUser\",\n      value: (function () {\n        var _getUser2 = _asyncToGenerator(function* (jwt) {\n          var _this9 = this;\n          if (jwt) {\n            return yield this._getUser(jwt);\n          }\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this9._getUser();\n          }));\n          return result;\n        });\n        function getUser(_x22) {\n          return _getUser2.apply(this, arguments);\n        }\n        return getUser;\n      }())\n    }, {\n      key: \"_getUser\",\n      value: function () {\n        var _getUser3 = _asyncToGenerator(function* (jwt) {\n          var _this0 = this;\n          try {\n            if (jwt) {\n              return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                headers: this.headers,\n                jwt: jwt,\n                xform: fetch_1._userResponse\n              });\n            }\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(function* (result) {\n                var _a, _b, _c;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !_this0.hasCustomAuthorizationHeader) {\n                  return {\n                    data: {\n                      user: null\n                    },\n                    error: new errors_1.AuthSessionMissingError()\n                  };\n                }\n                return yield (0, fetch_1._request)(_this0.fetch, 'GET', `${_this0.url}/user`, {\n                  headers: _this0.headers,\n                  jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                  xform: fetch_1._userResponse\n                });\n              });\n              return function (_x24) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              if ((0, errors_1.isAuthSessionMissingError)(error)) {\n                // JWT contains a `session_id` which does not correspond to an active\n                // session in the database, indicating the user is signed out.\n                yield this._removeSession();\n                yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n              }\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getUser(_x23) {\n          return _getUser3.apply(this, arguments);\n        }\n        return _getUser;\n      }()\n      /**\n       * Updates user data for a logged in user.\n       */\n    }, {\n      key: \"updateUser\",\n      value: (function () {\n        var _updateUser2 = _asyncToGenerator(function* (attributes) {\n          var _this1 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this1._updateUser(attributes, options);\n          }));\n        });\n        function updateUser(_x25) {\n          return _updateUser2.apply(this, arguments);\n        }\n        return updateUser;\n      }())\n    }, {\n      key: \"_updateUser\",\n      value: function () {\n        var _updateUser3 = _asyncToGenerator(function* (attributes) {\n          var _this10 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator(function* (result) {\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  throw sessionError;\n                }\n                if (!sessionData.session) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var session = sessionData.session;\n                var codeChallenge = null;\n                var codeChallengeMethod = null;\n                if (_this10.flowType === 'pkce' && attributes.email != null) {\n                  ;\n                  var _yield14 = yield (0, helpers_1.getCodeChallengeAndMethod)(_this10.storage, _this10.storageKey);\n                  var _yield15 = _slicedToArray(_yield14, 2);\n                  codeChallenge = _yield15[0];\n                  codeChallengeMethod = _yield15[1];\n                }\n                var _yield16 = yield (0, fetch_1._request)(_this10.fetch, 'PUT', `${_this10.url}/user`, {\n                    headers: _this10.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                      code_challenge: codeChallenge,\n                      code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse\n                  }),\n                  data = _yield16.data,\n                  userError = _yield16.error;\n                if (userError) throw userError;\n                session.user = data.user;\n                yield _this10._saveSession(session);\n                yield _this10._notifyAllSubscribers('USER_UPDATED', session);\n                return {\n                  data: {\n                    user: session.user\n                  },\n                  error: null\n                };\n              });\n              return function (_x27) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _updateUser(_x26) {\n          return _updateUser3.apply(this, arguments);\n        }\n        return _updateUser;\n      }()\n      /**\n       * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n       * If the refresh token or access token in the current session is invalid, an error will be thrown.\n       * @param currentSession The current session that minimally contains an access token and refresh token.\n       */\n    }, {\n      key: \"setSession\",\n      value: (function () {\n        var _setSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this11 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this11._setSession(currentSession);\n          }));\n        });\n        function setSession(_x28) {\n          return _setSession2.apply(this, arguments);\n        }\n        return setSession;\n      }())\n    }, {\n      key: \"_setSession\",\n      value: function () {\n        var _setSession3 = _asyncToGenerator(function* (currentSession) {\n          try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n              throw new errors_1.AuthSessionMissingError();\n            }\n            var timeNow = Date.now() / 1000;\n            var expiresAt = timeNow;\n            var hasExpired = true;\n            var session = null;\n            var _ref17 = (0, helpers_1.decodeJWT)(currentSession.access_token),\n              payload = _ref17.payload;\n            if (payload.exp) {\n              expiresAt = payload.exp;\n              hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n              var _yield$this$_callRefr2 = yield this._callRefreshToken(currentSession.refresh_token),\n                refreshedSession = _yield$this$_callRefr2.data,\n                error = _yield$this$_callRefr2.error;\n              if (error) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              }\n              if (!refreshedSession) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                };\n              }\n              session = refreshedSession;\n            } else {\n              var _yield$this$_getUser = yield this._getUser(currentSession.access_token),\n                data = _yield$this$_getUser.data,\n                _error3 = _yield$this$_getUser.error;\n              if (_error3) {\n                throw _error3;\n              }\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: session.user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _setSession(_x29) {\n          return _setSession3.apply(this, arguments);\n        }\n        return _setSession;\n      }()\n      /**\n       * Returns a new session, regardless of expiry status.\n       * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n       * If the current session's refresh token is invalid, an error will be thrown.\n       * @param currentSession The current session. If passed in, it must contain a refresh token.\n       */\n    }, {\n      key: \"refreshSession\",\n      value: (function () {\n        var _refreshSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this12 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this12._refreshSession(currentSession);\n          }));\n        });\n        function refreshSession(_x30) {\n          return _refreshSession2.apply(this, arguments);\n        }\n        return refreshSession;\n      }())\n    }, {\n      key: \"_refreshSession\",\n      value: function () {\n        var _refreshSession3 = _asyncToGenerator(function* (currentSession) {\n          var _this13 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator(function* (result) {\n                var _a;\n                if (!currentSession) {\n                  var data = result.data,\n                    _error4 = result.error;\n                  if (_error4) {\n                    throw _error4;\n                  }\n                  currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var _yield$_this13$_callR = yield _this13._callRefreshToken(currentSession.refresh_token),\n                  session = _yield$_this13$_callR.data,\n                  error = _yield$_this13$_callR.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: error\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: null\n                  };\n                }\n                return {\n                  data: {\n                    user: session.user,\n                    session\n                  },\n                  error: null\n                };\n              });\n              return function (_x32) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _refreshSession(_x31) {\n          return _refreshSession3.apply(this, arguments);\n        }\n        return _refreshSession;\n      }()\n      /**\n       * Gets the session data from a URL string\n       */\n    }, {\n      key: \"_getSessionFromURL\",\n      value: (function () {\n        var _getSessionFromURL2 = _asyncToGenerator(function* (params, callbackUrlType) {\n          try {\n            if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n              // The error class returned implies that the redirect is from an implicit grant flow\n              // but it could also be from a redirect error from a PKCE flow.\n              throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n              case 'implicit':\n                if (this.flowType === 'pkce') {\n                  throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                break;\n              case 'pkce':\n                if (this.flowType === 'implicit') {\n                  throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                break;\n              default:\n              // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n              if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n              var _yield$this$_exchange = yield this._exchangeCodeForSession(params.code),\n                _data = _yield$this$_exchange.data,\n                _error5 = _yield$this$_exchange.error;\n              if (_error5) throw _error5;\n              var url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              };\n            }\n            var provider_token = params.provider_token,\n              provider_refresh_token = params.provider_refresh_token,\n              access_token = params.access_token,\n              refresh_token = params.refresh_token,\n              expires_in = params.expires_in,\n              expires_at = params.expires_at,\n              token_type = params.token_type;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n              throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            var timeNow = Math.round(Date.now() / 1000);\n            var expiresIn = parseInt(expires_in);\n            var expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n              expiresAt = parseInt(expires_at);\n            }\n            var actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n              console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            var issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            } else if (timeNow - issuedAt < 0) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            var _yield$this$_getUser2 = yield this._getUser(access_token),\n              data = _yield$this$_getUser2.data,\n              error = _yield$this$_getUser2.error;\n            if (error) throw error;\n            var session = {\n              provider_token,\n              provider_refresh_token,\n              access_token,\n              expires_in: expiresIn,\n              expires_at: expiresAt,\n              refresh_token,\n              token_type: token_type,\n              user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return {\n              data: {\n                session,\n                redirectType: params.type\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getSessionFromURL(_x33, _x34) {\n          return _getSessionFromURL2.apply(this, arguments);\n        }\n        return _getSessionFromURL;\n      }()\n      /**\n       * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n       */\n      )\n    }, {\n      key: \"_isImplicitGrantCallback\",\n      value: function _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n      }\n      /**\n       * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n       */\n    }, {\n      key: \"_isPKCECallback\",\n      value: (function () {\n        var _isPKCECallback2 = _asyncToGenerator(function* (params) {\n          var currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          return !!(params.code && currentStorageContent);\n        });\n        function _isPKCECallback(_x35) {\n          return _isPKCECallback2.apply(this, arguments);\n        }\n        return _isPKCECallback;\n      }()\n      /**\n       * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n       *\n       * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n       * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n       *\n       * If using `others` scope, no `SIGNED_OUT` event is fired!\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut2 = _asyncToGenerator(function* () {\n          var _this14 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            scope: 'global'\n          };\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this14._signOut(options);\n          }));\n        });\n        function signOut() {\n          return _signOut2.apply(this, arguments);\n        }\n        return signOut;\n      }())\n    }, {\n      key: \"_signOut\",\n      value: function () {\n        var _signOut3 = _asyncToGenerator(function* () {\n          var _this15 = this;\n          var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n              scope: 'global'\n            },\n            scope = _ref21.scope;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref22 = _asyncToGenerator(function* (result) {\n              var _a;\n              var data = result.data,\n                sessionError = result.error;\n              if (sessionError) {\n                return {\n                  error: sessionError\n                };\n              }\n              var accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n              if (accessToken) {\n                var _yield$_this15$admin$ = yield _this15.admin.signOut(accessToken, scope),\n                  error = _yield$_this15$admin$.error;\n                if (error) {\n                  // ignore 404s since user might not exist anymore\n                  // ignore 401s since an invalid or expired JWT should sign out the current session\n                  if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                    return {\n                      error\n                    };\n                  }\n                }\n              }\n              if (scope !== 'others') {\n                yield _this15._removeSession();\n                yield (0, helpers_1.removeItemAsync)(_this15.storage, `${_this15.storageKey}-code-verifier`);\n              }\n              return {\n                error: null\n              };\n            });\n            return function (_x36) {\n              return _ref22.apply(this, arguments);\n            };\n          }());\n        });\n        function _signOut() {\n          return _signOut3.apply(this, arguments);\n        }\n        return _signOut;\n      }()\n    }, {\n      key: \"onAuthStateChange\",\n      value: function onAuthStateChange(callback) {\n        var _this16 = this;\n        var id = (0, helpers_1.uuid)();\n        var subscription = {\n          id,\n          callback,\n          unsubscribe: () => {\n            this._debug('#unsubscribe()', 'state change callback with id removed', id);\n            this.stateChangeEmitters.delete(id);\n          }\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        _asyncToGenerator(function* () {\n          yield _this16.initializePromise;\n          yield _this16._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            _this16._emitInitialSession(id);\n          }));\n        })();\n        return {\n          data: {\n            subscription\n          }\n        };\n      }\n    }, {\n      key: \"_emitInitialSession\",\n      value: function () {\n        var _emitInitialSession2 = _asyncToGenerator(function* (id) {\n          var _this17 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref25 = _asyncToGenerator(function* (result) {\n              var _a, _b;\n              try {\n                var session = result.data.session,\n                  error = result.error;\n                if (error) throw error;\n                yield (_a = _this17.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n              } catch (err) {\n                yield (_b = _this17.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n              }\n            });\n            return function (_x38) {\n              return _ref25.apply(this, arguments);\n            };\n          }());\n        });\n        function _emitInitialSession(_x37) {\n          return _emitInitialSession2.apply(this, arguments);\n        }\n        return _emitInitialSession;\n      }()\n      /**\n       * Sends a password reset request to an email address. This method supports the PKCE flow.\n       *\n       * @param email The email address of the user.\n       * @param options.redirectTo The URL to send the user to after they click the password reset link.\n       * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n       */\n    }, {\n      key: \"resetPasswordForEmail\",\n      value: (function () {\n        var _resetPasswordForEmail = _asyncToGenerator(function* (email) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var codeChallenge = null;\n          var codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            var _yield17 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n            var _yield18 = _slicedToArray(_yield17, 2);\n            codeChallenge = _yield18[0];\n            codeChallengeMethod = _yield18[1];\n          }\n          try {\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n              body: {\n                email,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod,\n                gotrue_meta_security: {\n                  captcha_token: options.captchaToken\n                }\n              },\n              headers: this.headers,\n              redirectTo: options.redirectTo\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resetPasswordForEmail(_x39) {\n          return _resetPasswordForEmail.apply(this, arguments);\n        }\n        return resetPasswordForEmail;\n      }()\n      /**\n       * Gets all the identities linked to a user.\n       */\n      )\n    }, {\n      key: \"getUserIdentities\",\n      value: (function () {\n        var _getUserIdentities = _asyncToGenerator(function* () {\n          var _a;\n          try {\n            var _yield$this$getUser = yield this.getUser(),\n              data = _yield$this$getUser.data,\n              error = _yield$this$getUser.error;\n            if (error) throw error;\n            return {\n              data: {\n                identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getUserIdentities() {\n          return _getUserIdentities.apply(this, arguments);\n        }\n        return getUserIdentities;\n      }())\n    }, {\n      key: \"linkIdentity\",\n      value: function () {\n        var _linkIdentity = _asyncToGenerator(function* (credentials) {\n          if ('token' in credentials) {\n            return this.linkIdentityIdToken(credentials);\n          }\n          return this.linkIdentityOAuth(credentials);\n        });\n        function linkIdentity(_x40) {\n          return _linkIdentity.apply(this, arguments);\n        }\n        return linkIdentity;\n      }()\n    }, {\n      key: \"linkIdentityOAuth\",\n      value: function () {\n        var _linkIdentityOAuth = _asyncToGenerator(function* (credentials) {\n          var _this18 = this;\n          var _a;\n          try {\n            var _yield$this$_useSessi = yield this._useSession(/*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator(function* (result) {\n                  var _a, _b, _c, _d, _e;\n                  var data = result.data,\n                    error = result.error;\n                  if (error) throw error;\n                  var url = yield _this18._getUrlForProvider(`${_this18.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true\n                  });\n                  return yield (0, fetch_1._request)(_this18.fetch, 'GET', url, {\n                    headers: _this18.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                  });\n                });\n                return function (_x42) {\n                  return _ref26.apply(this, arguments);\n                };\n              }()),\n              data = _yield$this$_useSessi.data,\n              error = _yield$this$_useSessi.error;\n            if (error) throw error;\n            if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n              window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return {\n              data: {\n                provider: credentials.provider,\n                url: data === null || data === void 0 ? void 0 : data.url\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  provider: credentials.provider,\n                  url: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function linkIdentityOAuth(_x41) {\n          return _linkIdentityOAuth.apply(this, arguments);\n        }\n        return linkIdentityOAuth;\n      }()\n    }, {\n      key: \"linkIdentityIdToken\",\n      value: function () {\n        var _linkIdentityIdToken = _asyncToGenerator(function* (credentials) {\n          var _this19 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref27 = _asyncToGenerator(function* (result) {\n              var _a;\n              try {\n                var sessionError = result.error,\n                  session = result.data.session;\n                if (sessionError) throw sessionError;\n                var options = credentials.options,\n                  provider = credentials.provider,\n                  token = credentials.token,\n                  access_token = credentials.access_token,\n                  nonce = credentials.nonce;\n                var res = yield (0, fetch_1._request)(_this19.fetch, 'POST', `${_this19.url}/token?grant_type=id_token`, {\n                  headers: _this19.headers,\n                  jwt: (_a = session === null || session === void 0 ? void 0 : session.access_token) !== null && _a !== void 0 ? _a : undefined,\n                  body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    link_identity: true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  xform: fetch_1._sessionResponse\n                });\n                var data = res.data,\n                  error = res.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error\n                  };\n                } else if (!data || !data.session || !data.user) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: new errors_1.AuthInvalidTokenResponseError()\n                  };\n                }\n                if (data.session) {\n                  yield _this19._saveSession(data.session);\n                  yield _this19._notifyAllSubscribers('USER_UPDATED', data.session);\n                }\n                return {\n                  data,\n                  error\n                };\n              } catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error\n                  };\n                }\n                throw error;\n              }\n            });\n            return function (_x44) {\n              return _ref27.apply(this, arguments);\n            };\n          }());\n        });\n        function linkIdentityIdToken(_x43) {\n          return _linkIdentityIdToken.apply(this, arguments);\n        }\n        return linkIdentityIdToken;\n      }()\n      /**\n       * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n       */\n    }, {\n      key: \"unlinkIdentity\",\n      value: (function () {\n        var _unlinkIdentity = _asyncToGenerator(function* (identity) {\n          var _this20 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref28 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                return yield (0, fetch_1._request)(_this20.fetch, 'DELETE', `${_this20.url}/user/identities/${identity.identity_id}`, {\n                  headers: _this20.headers,\n                  jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                });\n              });\n              return function (_x46) {\n                return _ref28.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function unlinkIdentity(_x45) {\n          return _unlinkIdentity.apply(this, arguments);\n        }\n        return unlinkIdentity;\n      }()\n      /**\n       * Generates a new JWT.\n       * @param refreshToken A valid refresh token that was returned on login.\n       */\n      )\n    }, {\n      key: \"_refreshAccessToken\",\n      value: (function () {\n        var _refreshAccessToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _this21 = this;\n          var debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            var startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return yield (0, helpers_1.retryable)(/*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator(function* (attempt) {\n                if (attempt > 0) {\n                  yield (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                _this21._debug(debugName, 'refreshing attempt', attempt);\n                return yield (0, fetch_1._request)(_this21.fetch, 'POST', `${_this21.url}/token?grant_type=refresh_token`, {\n                  body: {\n                    refresh_token: refreshToken\n                  },\n                  headers: _this21.headers,\n                  xform: fetch_1._sessionResponse\n                });\n              });\n              return function (_x48) {\n                return _ref29.apply(this, arguments);\n              };\n            }(), (attempt, error) => {\n              var nextBackOffInterval = 200 * Math.pow(2, attempt);\n              return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n              // retryable only if the request can be sent before the backoff overflows the tick duration\n              Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _refreshAccessToken(_x47) {\n          return _refreshAccessToken2.apply(this, arguments);\n        }\n        return _refreshAccessToken;\n      }())\n    }, {\n      key: \"_isValidSession\",\n      value: function _isValidSession(maybeSession) {\n        var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n        return isValidSession;\n      }\n    }, {\n      key: \"_handleProviderSignIn\",\n      value: function () {\n        var _handleProviderSignIn2 = _asyncToGenerator(function* (provider, options) {\n          var url = yield this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n          this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n          // try to open on the browser\n          if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n          }\n          return {\n            data: {\n              provider,\n              url\n            },\n            error: null\n          };\n        });\n        function _handleProviderSignIn(_x49, _x50) {\n          return _handleProviderSignIn2.apply(this, arguments);\n        }\n        return _handleProviderSignIn;\n      }()\n      /**\n       * Recovers the session from LocalStorage and refreshes the token\n       * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n       */\n    }, {\n      key: \"_recoverAndRefresh\",\n      value: (function () {\n        var _recoverAndRefresh2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          var debugName = '#_recoverAndRefresh()';\n          this._debug(debugName, 'begin');\n          try {\n            var currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            if (currentSession && this.userStorage) {\n              var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n              if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                // storage and userStorage are the same storage medium, for example\n                // window.localStorage if userStorage does not have the user from\n                // storage stored, store it first thereby migrating the user object\n                // from storage -> userStorage\n                maybeUser = {\n                  user: currentSession.user\n                };\n                yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n              }\n              currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n            } else if (currentSession && !currentSession.user) {\n              // user storage is not set, let's check if it was previously enabled so\n              // we bring back the storage as it should be\n              if (!currentSession.user) {\n                // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                var separateUser = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n                if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                  currentSession.user = separateUser.user;\n                  yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n                  yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n              this._debug(debugName, 'session is not valid');\n              if (currentSession !== null) {\n                yield this._removeSession();\n              }\n              return;\n            }\n            var expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n              if (this.autoRefreshToken && currentSession.refresh_token) {\n                var _yield$this$_callRefr3 = yield this._callRefreshToken(currentSession.refresh_token),\n                  error = _yield$this$_callRefr3.error;\n                if (error) {\n                  console.error(error);\n                  if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                    this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                    yield this._removeSession();\n                  }\n                }\n              }\n            } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n              // If we have a proxy user, try to get the real user data\n              try {\n                var _yield$this$_getUser3 = yield this._getUser(currentSession.access_token),\n                  data = _yield$this$_getUser3.data,\n                  userError = _yield$this$_getUser3.error;\n                if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                  currentSession.user = data.user;\n                  yield this._saveSession(currentSession);\n                  yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                } else {\n                  this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                }\n              } catch (getUserError) {\n                console.error('Error getting user data:', getUserError);\n                this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n              }\n            } else {\n              // no need to persist currentSession again, as we just loaded it from\n              // local storage; persisting it again may overwrite a value saved by\n              // another client with access to the same local storage\n              yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n          } catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _recoverAndRefresh() {\n          return _recoverAndRefresh2.apply(this, arguments);\n        }\n        return _recoverAndRefresh;\n      }())\n    }, {\n      key: \"_callRefreshToken\",\n      value: function () {\n        var _callRefreshToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _a, _b;\n          if (!refreshToken) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          // refreshing is already in progress\n          if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n          }\n          var debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            this.refreshingDeferred = new helpers_1.Deferred();\n            var _yield$this$_refreshA = yield this._refreshAccessToken(refreshToken),\n              data = _yield$this$_refreshA.data,\n              error = _yield$this$_refreshA.error;\n            if (error) throw error;\n            if (!data.session) throw new errors_1.AuthSessionMissingError();\n            yield this._saveSession(data.session);\n            yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            var result = {\n              data: data.session,\n              error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              var _result2 = {\n                data: null,\n                error\n              };\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                yield this._removeSession();\n              }\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n              return _result2;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n          } finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n          }\n        });\n        function _callRefreshToken(_x51) {\n          return _callRefreshToken2.apply(this, arguments);\n        }\n        return _callRefreshToken;\n      }()\n    }, {\n      key: \"_notifyAllSubscribers\",\n      value: function () {\n        var _notifyAllSubscribers2 = _asyncToGenerator(function* (event, session) {\n          var broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          var debugName = `#_notifyAllSubscribers(${event})`;\n          this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n          try {\n            if (this.broadcastChannel && broadcast) {\n              this.broadcastChannel.postMessage({\n                event,\n                session\n              });\n            }\n            var errors = [];\n            var promises = Array.from(this.stateChangeEmitters.values()).map(/*#__PURE__*/function () {\n              var _ref30 = _asyncToGenerator(function* (x) {\n                try {\n                  yield x.callback(event, session);\n                } catch (e) {\n                  errors.push(e);\n                }\n              });\n              return function (_x54) {\n                return _ref30.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n            if (errors.length > 0) {\n              for (var i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            }\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _notifyAllSubscribers(_x52, _x53) {\n          return _notifyAllSubscribers2.apply(this, arguments);\n        }\n        return _notifyAllSubscribers;\n      }()\n      /**\n       * set currentSession and currentUser\n       * process to _startAutoRefreshToken if possible\n       */\n    }, {\n      key: \"_saveSession\",\n      value: (function () {\n        var _saveSession2 = _asyncToGenerator(function* (session) {\n          this._debug('#_saveSession()', session);\n          // _saveSession is always called whenever a new session has been acquired\n          // so we can safely suppress the warning returned by future getSession calls\n          this.suppressGetSessionWarning = true;\n          // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n          var sessionToProcess = Object.assign({}, session);\n          var userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n          if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n              // If it's a real user object, save it to userStorage.\n              yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                user: sessionToProcess.user\n              });\n            } else if (userIsProxy) {\n              // If it's the proxy, it means user was not found in userStorage.\n              // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n              // or simply not save the proxy. For now, we don't save the proxy here.\n              // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            var mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            var clonedMainSessionData = (0, helpers_1.deepClone)(mainSessionData);\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n          } else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            var clonedSession = (0, helpers_1.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n          }\n        });\n        function _saveSession(_x55) {\n          return _saveSession2.apply(this, arguments);\n        }\n        return _saveSession;\n      }())\n    }, {\n      key: \"_removeSession\",\n      value: function () {\n        var _removeSession2 = _asyncToGenerator(function* () {\n          this._debug('#_removeSession()');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n          if (this.userStorage) {\n            yield (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n          }\n          yield this._notifyAllSubscribers('SIGNED_OUT', null);\n        });\n        function _removeSession() {\n          return _removeSession2.apply(this, arguments);\n        }\n        return _removeSession;\n      }()\n      /**\n       * Removes any registered visibilitychange callback.\n       *\n       * {@see #startAutoRefresh}\n       * {@see #stopAutoRefresh}\n       */\n    }, {\n      key: \"_removeVisibilityChangedCallback\",\n      value: function _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        var callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n          if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n            window.removeEventListener('visibilitychange', callback);\n          }\n        } catch (e) {\n          console.error('removing visibilitychange callback failed', e);\n        }\n      }\n      /**\n       * This is the private implementation of {@link #startAutoRefresh}. Use this\n       * within the library.\n       */\n    }, {\n      key: \"_startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh2 = _asyncToGenerator(function* () {\n          var _this22 = this;\n          yield this._stopAutoRefresh();\n          this._debug('#_startAutoRefresh()');\n          var ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n          this.autoRefreshTicker = ticker;\n          if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n          } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n          }\n          // run the tick immediately, but in the next pass of the event loop so that\n          // #_initialize can be allowed to complete without recursively waiting on\n          // itself\n          setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n            yield _this22.initializePromise;\n            yield _this22._autoRefreshTokenTick();\n          }), 0);\n        });\n        function _startAutoRefresh() {\n          return _startAutoRefresh2.apply(this, arguments);\n        }\n        return _startAutoRefresh;\n      }()\n      /**\n       * This is the private implementation of {@link #stopAutoRefresh}. Use this\n       * within the library.\n       */\n      )\n    }, {\n      key: \"_stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh2 = _asyncToGenerator(function* () {\n          this._debug('#_stopAutoRefresh()');\n          var ticker = this.autoRefreshTicker;\n          this.autoRefreshTicker = null;\n          if (ticker) {\n            clearInterval(ticker);\n          }\n        });\n        function _stopAutoRefresh() {\n          return _stopAutoRefresh2.apply(this, arguments);\n        }\n        return _stopAutoRefresh;\n      }()\n      /**\n       * Starts an auto-refresh process in the background. The session is checked\n       * every few seconds. Close to the time of expiration a process is started to\n       * refresh the session. If refreshing fails it will be retried for as long as\n       * necessary.\n       *\n       * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n       * to call this function, it will be called for you.\n       *\n       * On browsers the refresh process works only when the tab/window is in the\n       * foreground to conserve resources as well as prevent race conditions and\n       * flooding auth with requests. If you call this method any managed\n       * visibility change callback will be removed and you must manage visibility\n       * changes on your own.\n       *\n       * On non-browser platforms the refresh process works *continuously* in the\n       * background, which may not be desirable. You should hook into your\n       * platform's foreground indication mechanism and call these methods\n       * appropriately to conserve resources.\n       *\n       * {@see #stopAutoRefresh}\n       */\n      )\n    }, {\n      key: \"startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._startAutoRefresh();\n        });\n        function startAutoRefresh() {\n          return _startAutoRefresh3.apply(this, arguments);\n        }\n        return startAutoRefresh;\n      }()\n      /**\n       * Stops an active auto refresh process running in the background (if any).\n       *\n       * If you call this method any managed visibility change callback will be\n       * removed and you must manage visibility changes on your own.\n       *\n       * See {@link #startAutoRefresh} for more details.\n       */\n      )\n    }, {\n      key: \"stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._stopAutoRefresh();\n        });\n        function stopAutoRefresh() {\n          return _stopAutoRefresh3.apply(this, arguments);\n        }\n        return stopAutoRefresh;\n      }()\n      /**\n       * Runs the auto refresh token tick.\n       */\n      )\n    }, {\n      key: \"_autoRefreshTokenTick\",\n      value: (function () {\n        var _autoRefreshTokenTick2 = _asyncToGenerator(function* () {\n          var _this23 = this;\n          this._debug('#_autoRefreshTokenTick()', 'begin');\n          try {\n            yield this._acquireLock(0, /*#__PURE__*/_asyncToGenerator(function* () {\n              try {\n                var now = Date.now();\n                try {\n                  return yield _this23._useSession(/*#__PURE__*/function () {\n                    var _ref33 = _asyncToGenerator(function* (result) {\n                      var session = result.data.session;\n                      if (!session || !session.refresh_token || !session.expires_at) {\n                        _this23._debug('#_autoRefreshTokenTick()', 'no session');\n                        return;\n                      }\n                      // session will expire in this many ticks (or has already expired if <= 0)\n                      var expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                      _this23._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                      if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                        yield _this23._callRefreshToken(session.refresh_token);\n                      }\n                    });\n                    return function (_x56) {\n                      return _ref33.apply(this, arguments);\n                    };\n                  }());\n                } catch (e) {\n                  console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                }\n              } finally {\n                _this23._debug('#_autoRefreshTokenTick()', 'end');\n              }\n            }));\n          } catch (e) {\n            if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n              this._debug('auto refresh token tick lock not available');\n            } else {\n              throw e;\n            }\n          }\n        });\n        function _autoRefreshTokenTick() {\n          return _autoRefreshTokenTick2.apply(this, arguments);\n        }\n        return _autoRefreshTokenTick;\n      }()\n      /**\n       * Registers callbacks on the browser / platform, which in-turn run\n       * algorithms when the browser window/tab are in foreground. On non-browser\n       * platforms it assumes always foreground.\n       */\n      )\n    }, {\n      key: \"_handleVisibilityChange\",\n      value: (function () {\n        var _handleVisibilityChange2 = _asyncToGenerator(function* () {\n          var _this24 = this;\n          this._debug('#_handleVisibilityChange()');\n          if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n              // in non-browser environments the refresh token ticker runs always\n              this.startAutoRefresh();\n            }\n            return false;\n          }\n          try {\n            this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this24._onVisibilityChanged(false);\n            });\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            yield this._onVisibilityChanged(true); // initial call\n          } catch (error) {\n            console.error('_handleVisibilityChange', error);\n          }\n        });\n        function _handleVisibilityChange() {\n          return _handleVisibilityChange2.apply(this, arguments);\n        }\n        return _handleVisibilityChange;\n      }()\n      /**\n       * Callback registered with `window.addEventListener('visibilitychange')`.\n       */\n      )\n    }, {\n      key: \"_onVisibilityChanged\",\n      value: (function () {\n        var _onVisibilityChanged2 = _asyncToGenerator(function* (calledFromInitialize) {\n          var _this25 = this;\n          var methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n          this._debug(methodName, 'visibilityState', document.visibilityState);\n          if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n              // in browser environments the refresh token ticker runs only on focused tabs\n              // which prevents race conditions\n              this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n              // called when the visibility has changed, i.e. the browser\n              // transitioned from hidden -> visible so we need to see if the session\n              // should be recovered immediately... but to do that we need to acquire\n              // the lock first asynchronously\n              yield this.initializePromise;\n              yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n                if (document.visibilityState !== 'visible') {\n                  _this25._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                  // visibility has changed while waiting for the lock, abort\n                  return;\n                }\n                // recover the session\n                yield _this25._recoverAndRefresh();\n              }));\n            }\n          } else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n              this._stopAutoRefresh();\n            }\n          }\n        });\n        function _onVisibilityChanged(_x57) {\n          return _onVisibilityChanged2.apply(this, arguments);\n        }\n        return _onVisibilityChanged;\n      }()\n      /**\n       * Generates the relevant login URL for a third-party provider.\n       * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n       * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n       * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n       */\n      )\n    }, {\n      key: \"_getUrlForProvider\",\n      value: (function () {\n        var _getUrlForProvider2 = _asyncToGenerator(function* (url, provider, options) {\n          var urlParams = [`provider=${encodeURIComponent(provider)}`];\n          if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n          }\n          if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n          }\n          if (this.flowType === 'pkce') {\n            var _yield19 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey),\n              _yield20 = _slicedToArray(_yield19, 2),\n              codeChallenge = _yield20[0],\n              codeChallengeMethod = _yield20[1];\n            var flowParams = new URLSearchParams({\n              code_challenge: `${encodeURIComponent(codeChallenge)}`,\n              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n            });\n            urlParams.push(flowParams.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            var query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n          }\n          return `${url}?${urlParams.join('&')}`;\n        });\n        function _getUrlForProvider(_x58, _x59, _x60) {\n          return _getUrlForProvider2.apply(this, arguments);\n        }\n        return _getUrlForProvider;\n      }())\n    }, {\n      key: \"_unenroll\",\n      value: function () {\n        var _unenroll2 = _asyncToGenerator(function* (params) {\n          var _this26 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref36 = _asyncToGenerator(function* (result) {\n                var _a;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                return yield (0, fetch_1._request)(_this26.fetch, 'DELETE', `${_this26.url}/factors/${params.factorId}`, {\n                  headers: _this26.headers,\n                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n              });\n              return function (_x62) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _unenroll(_x61) {\n          return _unenroll2.apply(this, arguments);\n        }\n        return _unenroll;\n      }()\n    }, {\n      key: \"_enroll\",\n      value: function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          var _this27 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref37 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                var body = Object.assign({\n                  friendly_name: params.friendlyName,\n                  factor_type: params.factorType\n                }, params.factorType === 'phone' ? {\n                  phone: params.phone\n                } : params.factorType === 'totp' ? {\n                  issuer: params.issuer\n                } : {});\n                var _yield21 = yield (0, fetch_1._request)(_this27.fetch, 'POST', `${_this27.url}/factors`, {\n                    body,\n                    headers: _this27.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  }),\n                  data = _yield21.data,\n                  error = _yield21.error;\n                if (error) {\n                  return {\n                    data: null,\n                    error\n                  };\n                }\n                if (params.factorType === 'totp' && data.type === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                  data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return {\n                  data,\n                  error: null\n                };\n              });\n              return function (_x64) {\n                return _ref37.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _enroll(_x63) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n    }, {\n      key: \"_verify\",\n      value: function () {\n        var _verify2 = _asyncToGenerator(function* (params) {\n          var _this28 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this28._useSession(/*#__PURE__*/function () {\n                var _ref39 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var body = Object.assign({\n                    challenge_id: params.challengeId\n                  }, 'webauthn' in params ? {\n                    webauthn: Object.assign(Object.assign({}, params.webauthn), {\n                      credential_response: params.webauthn.type === 'create' ? (0, webauthn_1.serializeCredentialCreationResponse)(params.webauthn.credential_response) : (0, webauthn_1.serializeCredentialRequestResponse)(params.webauthn.credential_response)\n                    })\n                  } : {\n                    code: params.code\n                  });\n                  var _yield22 = yield (0, fetch_1._request)(_this28.fetch, 'POST', `${_this28.url}/factors/${params.factorId}/verify`, {\n                      body,\n                      headers: _this28.headers,\n                      jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    }),\n                    data = _yield22.data,\n                    error = _yield22.error;\n                  if (error) {\n                    return {\n                      data: null,\n                      error\n                    };\n                  }\n                  yield _this28._saveSession(Object.assign({\n                    expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                  }, data));\n                  yield _this28._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                  return {\n                    data,\n                    error\n                  };\n                });\n                return function (_x66) {\n                  return _ref39.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _verify(_x65) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n    }, {\n      key: \"_challenge\",\n      value: function () {\n        var _challenge2 = _asyncToGenerator(function* (params) {\n          var _this29 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this29._useSession(/*#__PURE__*/function () {\n                var _ref41 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var response = yield (0, fetch_1._request)(_this29.fetch, 'POST', `${_this29.url}/factors/${params.factorId}/challenge`, {\n                    body: params,\n                    headers: _this29.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  });\n                  if (response.error) {\n                    return response;\n                  }\n                  var data = response.data;\n                  if (data.type !== 'webauthn') {\n                    return {\n                      data,\n                      error: null\n                    };\n                  }\n                  switch (data.webauthn.type) {\n                    case 'create':\n                      return {\n                        data: Object.assign(Object.assign({}, data), {\n                          webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                            credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                              publicKey: (0, webauthn_1.deserializeCredentialCreationOptions)(data.webauthn.credential_options.publicKey)\n                            })\n                          })\n                        }),\n                        error: null\n                      };\n                    case 'request':\n                      return {\n                        data: Object.assign(Object.assign({}, data), {\n                          webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                            credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                              publicKey: (0, webauthn_1.deserializeCredentialRequestOptions)(data.webauthn.credential_options.publicKey)\n                            })\n                          })\n                        }),\n                        error: null\n                      };\n                  }\n                });\n                return function (_x68) {\n                  return _ref41.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _challenge(_x67) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challengeAndVerify}\n       */\n    }, {\n      key: \"_challengeAndVerify\",\n      value: (function () {\n        var _challengeAndVerify2 = _asyncToGenerator(function* (params) {\n          // both _challenge and _verify independently acquire the lock, so no need\n          // to acquire it here\n          var _yield$this$_challeng = yield this._challenge({\n              factorId: params.factorId\n            }),\n            challengeData = _yield$this$_challeng.data,\n            challengeError = _yield$this$_challeng.error;\n          if (challengeError) {\n            return {\n              data: null,\n              error: challengeError\n            };\n          }\n          return yield this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n          });\n        });\n        function _challengeAndVerify(_x69) {\n          return _challengeAndVerify2.apply(this, arguments);\n        }\n        return _challengeAndVerify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#listFactors}\n       */\n      )\n    }, {\n      key: \"_listFactors\",\n      value: (function () {\n        var _listFactors2 = _asyncToGenerator(function* () {\n          var _a;\n          // use #getUser instead of #_getUser as the former acquires a lock\n          var _yield$this$getUser2 = yield this.getUser(),\n            user = _yield$this$getUser2.data.user,\n            userError = _yield$this$getUser2.error;\n          if (userError) {\n            return {\n              data: null,\n              error: userError\n            };\n          }\n          var data = {\n            all: [],\n            phone: [],\n            totp: [],\n            webauthn: []\n          };\n          // loop over the factors ONCE\n          for (var factor of (_a = user === null || user === void 0 ? void 0 : user.factors) !== null && _a !== void 0 ? _a : []) {\n            data.all.push(factor);\n            if (factor.status === 'verified') {\n              ;\n              data[factor.factor_type].push(factor);\n            }\n          }\n          return {\n            data,\n            error: null\n          };\n        });\n        function _listFactors() {\n          return _listFactors2.apply(this, arguments);\n        }\n        return _listFactors;\n      }()\n      /**\n       * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n       */\n      )\n    }, {\n      key: \"_getAuthenticatorAssuranceLevel\",\n      value: (function () {\n        var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator(function* () {\n          var _this30 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this30._useSession(/*#__PURE__*/function () {\n              var _ref43 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      currentLevel: null,\n                      nextLevel: null,\n                      currentAuthenticationMethods: []\n                    },\n                    error: null\n                  };\n                }\n                var _ref44 = (0, helpers_1.decodeJWT)(session.access_token),\n                  payload = _ref44.payload;\n                var currentLevel = null;\n                if (payload.aal) {\n                  currentLevel = payload.aal;\n                }\n                var nextLevel = currentLevel;\n                var verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                  nextLevel = 'aal2';\n                }\n                var currentAuthenticationMethods = payload.amr || [];\n                return {\n                  data: {\n                    currentLevel,\n                    nextLevel,\n                    currentAuthenticationMethods\n                  },\n                  error: null\n                };\n              });\n              return function (_x70) {\n                return _ref43.apply(this, arguments);\n              };\n            }());\n          }));\n        });\n        function _getAuthenticatorAssuranceLevel() {\n          return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n        }\n        return _getAuthenticatorAssuranceLevel;\n      }())\n    }, {\n      key: \"fetchJwk\",\n      value: function () {\n        var _fetchJwk = _asyncToGenerator(function* (kid) {\n          var jwks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            keys: []\n          };\n          // try fetching from the supplied jwks\n          var jwk = jwks.keys.find(key => key.kid === kid);\n          if (jwk) {\n            return jwk;\n          }\n          var now = Date.now();\n          // try fetching from cache\n          jwk = this.jwks.keys.find(key => key.kid === kid);\n          // jwk exists and jwks isn't stale\n          if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n            return jwk;\n          }\n          // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n          var _yield23 = yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n              headers: this.headers\n            }),\n            data = _yield23.data,\n            error = _yield23.error;\n          if (error) {\n            throw error;\n          }\n          if (!data.keys || data.keys.length === 0) {\n            return null;\n          }\n          this.jwks = data;\n          this.jwks_cached_at = now;\n          // Find the signing key\n          jwk = data.keys.find(key => key.kid === kid);\n          if (!jwk) {\n            return null;\n          }\n          return jwk;\n        });\n        function fetchJwk(_x71) {\n          return _fetchJwk.apply(this, arguments);\n        }\n        return fetchJwk;\n      }()\n      /**\n       * Extracts the JWT claims present in the access token by first verifying the\n       * JWT against the server's JSON Web Key Set endpoint\n       * `/.well-known/jwks.json` which is often cached, resulting in significantly\n       * faster responses. Prefer this method over {@link #getUser} which always\n       * sends a request to the Auth server for each JWT.\n       *\n       * If the project is not using an asymmetric JWT signing key (like ECC or\n       * RSA) it always sends a request to the Auth server (similar to {@link\n       * #getUser}) to verify the JWT.\n       *\n       * @param jwt An optional specific JWT you wish to verify, not the one you\n       *            can obtain from {@link #getSession}.\n       * @param options Various additional options that allow you to customize the\n       *                behavior of this method.\n       */\n    }, {\n      key: \"getClaims\",\n      value: (function () {\n        var _getClaims = _asyncToGenerator(function* (jwt) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            var token = jwt;\n            if (!token) {\n              var _yield$this$getSessio = yield this.getSession(),\n                data = _yield$this$getSessio.data,\n                error = _yield$this$getSessio.error;\n              if (error || !data.session) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              token = data.session.access_token;\n            }\n            var _ref45 = (0, helpers_1.decodeJWT)(token),\n              header = _ref45.header,\n              payload = _ref45.payload,\n              signature = _ref45.signature,\n              _ref45$raw = _ref45.raw,\n              rawHeader = _ref45$raw.header,\n              rawPayload = _ref45$raw.payload;\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n              // Reject expired JWTs should only happen if jwt argument was passed\n              (0, helpers_1.validateExp)(payload.exp);\n            }\n            var signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : yield this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n              keys: options.keys\n            } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n              var _yield$this$getUser3 = yield this.getUser(token),\n                _error6 = _yield$this$getUser3.error;\n              if (_error6) {\n                throw _error6;\n              }\n              // getUser succeeds so the claims in the JWT can be trusted\n              return {\n                data: {\n                  claims: payload,\n                  header,\n                  signature\n                },\n                error: null\n              };\n            }\n            var algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            var publicKey = yield crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n            // Verify the signature\n            var isValid = yield crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n              throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n              data: {\n                claims: payload,\n                header,\n                signature\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getClaims(_x72) {\n          return _getClaims.apply(this, arguments);\n        }\n        return getClaims;\n      }())\n    }]);\n  }();\n  GoTrueClient.nextInstanceID = 0;\n  exports.default = GoTrueClient;\n});","lineCount":3778,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[7,2,1,13],[7,6,1,13,"_asyncToGenerator"],[7,23,1,13],[7,26,1,13,"require"],[7,33,1,13],[7,34,1,13,"_dependencyMap"],[7,48,1,13],[8,2,2,0,"Object"],[8,8,2,6],[8,9,2,7,"defineProperty"],[8,23,2,21],[8,24,2,22,"exports"],[8,31,2,29],[8,33,2,31],[8,45,2,43],[8,47,2,45],[9,4,2,47,"value"],[9,9,2,52],[9,11,2,54],[10,2,2,59],[10,3,2,60],[10,4,2,61],[11,2,3,0],[11,6,3,6,"tslib_1"],[11,13,3,13],[11,16,3,16,"require"],[11,23,3,23],[11,24,3,23,"_dependencyMap"],[11,38,3,23],[11,50,3,31],[11,51,3,32],[12,2,4,0],[12,6,4,6,"GoTrueAdminApi_1"],[12,22,4,22],[12,25,4,25,"tslib_1"],[12,32,4,32],[12,33,4,33,"__importDefault"],[12,48,4,48],[12,49,4,49,"require"],[12,56,4,56],[12,57,4,56,"_dependencyMap"],[12,71,4,56],[12,94,4,75],[12,95,4,76],[12,96,4,77],[13,2,5,0],[13,6,5,6,"constants_1"],[13,17,5,17],[13,20,5,20,"require"],[13,27,5,27],[13,28,5,27,"_dependencyMap"],[13,42,5,27],[13,64,5,45],[13,65,5,46],[14,2,6,0],[14,6,6,6,"errors_1"],[14,14,6,14],[14,17,6,17,"require"],[14,24,6,24],[14,25,6,24,"_dependencyMap"],[14,39,6,24],[14,58,6,39],[14,59,6,40],[15,2,7,0],[15,6,7,6,"fetch_1"],[15,13,7,13],[15,16,7,16,"require"],[15,23,7,23],[15,24,7,23,"_dependencyMap"],[15,38,7,23],[15,56,7,37],[15,57,7,38],[16,2,8,0],[16,6,8,6,"helpers_1"],[16,15,8,15],[16,18,8,18,"require"],[16,25,8,25],[16,26,8,25,"_dependencyMap"],[16,40,8,25],[16,60,8,41],[16,61,8,42],[17,2,9,0],[17,6,9,6,"local_storage_1"],[17,21,9,21],[17,24,9,24,"require"],[17,31,9,31],[17,32,9,31,"_dependencyMap"],[17,46,9,31],[17,73,9,53],[17,74,9,54],[18,2,10,0],[18,6,10,6,"locks_1"],[18,13,10,13],[18,16,10,16,"require"],[18,23,10,23],[18,24,10,23,"_dependencyMap"],[18,38,10,23],[18,57,10,37],[18,58,10,38],[19,2,11,0],[19,6,11,6,"polyfills_1"],[19,17,11,17],[19,20,11,20,"require"],[19,27,11,27],[19,28,11,27,"_dependencyMap"],[19,42,11,27],[19,65,11,45],[19,66,11,46],[20,2,12,0],[20,6,12,6,"version_1"],[20,15,12,15],[20,18,12,18,"require"],[20,25,12,25],[20,26,12,25,"_dependencyMap"],[20,40,12,25],[20,61,12,41],[20,62,12,42],[21,2,13,0],[21,6,13,6,"base64url_1"],[21,17,13,17],[21,20,13,20,"require"],[21,27,13,27],[21,28,13,27,"_dependencyMap"],[21,42,13,27],[21,65,13,45],[21,66,13,46],[22,2,14,0],[22,6,14,6,"ethereum_1"],[22,16,14,16],[22,19,14,19,"require"],[22,26,14,26],[22,27,14,26,"_dependencyMap"],[22,41,14,26],[22,68,14,48],[22,69,14,49],[23,2,15,0],[23,6,15,6,"webauthn_1"],[23,16,15,16],[23,19,15,19,"require"],[23,26,15,26],[23,27,15,26,"_dependencyMap"],[23,41,15,26],[23,63,15,43],[23,64,15,44],[24,2,16,0],[24,3,16,1],[24,4,16,2],[24,6,16,4,"polyfills_1"],[24,17,16,15],[24,18,16,16,"polyfillGlobalThis"],[24,36,16,34],[24,38,16,36],[24,39,16,37],[24,40,16,38],[24,41,16,39],[25,2,17,0],[25,6,17,6,"DEFAULT_OPTIONS"],[25,21,17,21],[25,24,17,24],[26,4,18,4,"url"],[26,7,18,7],[26,9,18,9,"constants_1"],[26,20,18,20],[26,21,18,21,"GOTRUE_URL"],[26,31,18,31],[27,4,19,4,"storageKey"],[27,14,19,14],[27,16,19,16,"constants_1"],[27,27,19,27],[27,28,19,28,"STORAGE_KEY"],[27,39,19,39],[28,4,20,4,"autoRefreshToken"],[28,20,20,20],[28,22,20,22],[28,26,20,26],[29,4,21,4,"persistSession"],[29,18,21,18],[29,20,21,20],[29,24,21,24],[30,4,22,4,"detectSessionInUrl"],[30,22,22,22],[30,24,22,24],[30,28,22,28],[31,4,23,4,"headers"],[31,11,23,11],[31,13,23,13,"constants_1"],[31,24,23,24],[31,25,23,25,"DEFAULT_HEADERS"],[31,40,23,40],[32,4,24,4,"flowType"],[32,12,24,12],[32,14,24,14],[32,24,24,24],[33,4,25,4,"debug"],[33,9,25,9],[33,11,25,11],[33,16,25,16],[34,4,26,4,"hasCustomAuthorizationHeader"],[34,32,26,32],[34,34,26,34],[35,2,27,0],[35,3,27,1],[36,2,27,2],[36,11,28,15,"lockNoOp"],[36,19,28,23,"lockNoOp"],[36,20,28,23,"_x"],[36,22,28,23],[36,24,28,23,"_x2"],[36,27,28,23],[36,29,28,23,"_x3"],[36,32,28,23],[37,4,28,23],[37,11,28,23,"_lockNoOp"],[37,20,28,23],[37,21,28,23,"apply"],[37,26,28,23],[37,33,28,23,"arguments"],[37,42,28,23],[38,2,28,23],[39,2,31,0],[40,0,32,0],[41,0,33,0],[42,0,34,0],[43,0,35,0],[44,0,36,0],[45,0,37,0],[46,0,38,0],[47,2,31,0],[47,11,31,0,"_lockNoOp"],[47,21,31,0],[48,4,31,0,"_lockNoOp"],[48,13,31,0],[48,16,31,0,"_asyncToGenerator"],[48,33,31,0],[48,34,28,0],[48,45,28,24,"name"],[48,49,28,28],[48,51,28,30,"acquireTimeout"],[48,65,28,44],[48,67,28,46,"fn"],[48,69,28,48],[48,71,28,50],[49,6,29,4],[49,19,29,17,"fn"],[49,21,29,19],[49,22,29,20],[49,23,29,21],[50,4,30,0],[50,5,30,1],[51,4,30,1],[51,11,30,1,"_lockNoOp"],[51,20,30,1],[51,21,30,1,"apply"],[51,26,30,1],[51,33,30,1,"arguments"],[51,42,30,1],[52,2,30,1],[53,2,39,0],[53,6,39,6,"GLOBAL_JWKS"],[53,17,39,17],[53,20,39,20],[53,21,39,21],[53,22,39,22],[54,2,39,23],[54,6,40,6,"GoTrueClient"],[54,18,40,18],[55,4,58,4],[56,0,59,0],[57,0,60,0],[58,4,61,4],[58,13,61,4,"GoTrueClient"],[58,26,61,16,"options"],[58,33,61,23],[58,35,61,25],[59,6,61,25],[59,10,61,25,"_this"],[59,15,61,25],[60,6,61,25,"_classCallCheck"],[60,21,61,25],[60,28,61,25,"GoTrueClient"],[60,40,61,25],[61,6,62,8],[61,10,62,12,"_a"],[61,12,62,14],[61,14,62,16,"_b"],[61,16,62,18],[62,6,63,8],[63,0,64,0],[64,0,65,0],[65,6,66,8],[65,10,66,12],[65,11,66,13,"userStorage"],[65,22,66,24],[65,25,66,27],[65,29,66,31],[66,6,67,8],[66,10,67,12],[66,11,67,13,"memoryStorage"],[66,24,67,26],[66,27,67,29],[66,31,67,33],[67,6,68,8],[67,10,68,12],[67,11,68,13,"stateChangeEmitters"],[67,30,68,32],[67,33,68,35],[67,37,68,39,"Map"],[67,40,68,42],[67,41,68,43],[67,42,68,44],[68,6,69,8],[68,10,69,12],[68,11,69,13,"autoRefreshTicker"],[68,28,69,30],[68,31,69,33],[68,35,69,37],[69,6,70,8],[69,10,70,12],[69,11,70,13,"visibilityChangedCallback"],[69,36,70,38],[69,39,70,41],[69,43,70,45],[70,6,71,8],[70,10,71,12],[70,11,71,13,"refreshingDeferred"],[70,29,71,31],[70,32,71,34],[70,36,71,38],[71,6,72,8],[72,0,73,0],[73,0,74,0],[74,0,75,0],[75,0,76,0],[76,0,77,0],[77,6,78,8],[77,10,78,12],[77,11,78,13,"initializePromise"],[77,28,78,30],[77,31,78,33],[77,35,78,37],[78,6,79,8],[78,10,79,12],[78,11,79,13,"detectSessionInUrl"],[78,29,79,31],[78,32,79,34],[78,36,79,38],[79,6,80,8],[79,10,80,12],[79,11,80,13,"hasCustomAuthorizationHeader"],[79,39,80,41],[79,42,80,44],[79,47,80,49],[80,6,81,8],[80,10,81,12],[80,11,81,13,"suppressGetSessionWarning"],[80,36,81,38],[80,39,81,41],[80,44,81,46],[81,6,82,8],[81,10,82,12],[81,11,82,13,"lockAcquired"],[81,23,82,25],[81,26,82,28],[81,31,82,33],[82,6,83,8],[82,10,83,12],[82,11,83,13,"pendingInLock"],[82,24,83,26],[82,27,83,29],[82,29,83,31],[83,6,84,8],[84,0,85,0],[85,0,86,0],[86,6,87,8],[86,10,87,12],[86,11,87,13,"broadcastChannel"],[86,27,87,29],[86,30,87,32],[86,34,87,36],[87,6,88,8],[87,10,88,12],[87,11,88,13,"logger"],[87,17,88,19],[87,20,88,22,"console"],[87,27,88,29],[87,28,88,30,"log"],[87,31,88,33],[88,6,89,8],[88,10,89,12],[88,11,89,13,"instanceID"],[88,21,89,23],[88,24,89,26,"GoTrueClient"],[88,36,89,38],[88,37,89,39,"nextInstanceID"],[88,51,89,53],[89,6,90,8,"GoTrueClient"],[89,18,90,20],[89,19,90,21,"nextInstanceID"],[89,33,90,35],[89,37,90,39],[89,38,90,40],[90,6,91,8],[90,10,91,12],[90,14,91,16],[90,15,91,17,"instanceID"],[90,25,91,27],[90,28,91,30],[90,29,91,31],[90,33,91,35],[90,34,91,36],[90,35,91,37],[90,37,91,39,"helpers_1"],[90,46,91,48],[90,47,91,49,"isBrowser"],[90,56,91,58],[90,58,91,60],[90,59,91,61],[90,61,91,63],[91,8,92,12,"console"],[91,15,92,19],[91,16,92,20,"warn"],[91,20,92,24],[91,21,92,25],[91,227,92,231],[91,228,92,232],[92,6,93,8],[93,6,94,8],[93,10,94,14,"settings"],[93,18,94,22],[93,21,94,25,"Object"],[93,27,94,31],[93,28,94,32,"assign"],[93,34,94,38],[93,35,94,39,"Object"],[93,41,94,45],[93,42,94,46,"assign"],[93,48,94,52],[93,49,94,53],[93,50,94,54],[93,51,94,55],[93,53,94,57,"DEFAULT_OPTIONS"],[93,68,94,72],[93,69,94,73],[93,71,94,75,"options"],[93,78,94,82],[93,79,94,83],[94,6,95,8],[94,10,95,12],[94,11,95,13,"logDebugMessages"],[94,27,95,29],[94,30,95,32],[94,31,95,33],[94,32,95,34,"settings"],[94,40,95,42],[94,41,95,43,"debug"],[94,46,95,48],[95,6,96,8],[95,10,96,12],[95,17,96,19,"settings"],[95,25,96,27],[95,26,96,28,"debug"],[95,31,96,33],[95,36,96,38],[95,46,96,48],[95,48,96,50],[96,8,97,12],[96,12,97,16],[96,13,97,17,"logger"],[96,19,97,23],[96,22,97,26,"settings"],[96,30,97,34],[96,31,97,35,"debug"],[96,36,97,40],[97,6,98,8],[98,6,99,8],[98,10,99,12],[98,11,99,13,"persistSession"],[98,25,99,27],[98,28,99,30,"settings"],[98,36,99,38],[98,37,99,39,"persistSession"],[98,51,99,53],[99,6,100,8],[99,10,100,12],[99,11,100,13,"storageKey"],[99,21,100,23],[99,24,100,26,"settings"],[99,32,100,34],[99,33,100,35,"storageKey"],[99,43,100,45],[100,6,101,8],[100,10,101,12],[100,11,101,13,"autoRefreshToken"],[100,27,101,29],[100,30,101,32,"settings"],[100,38,101,40],[100,39,101,41,"autoRefreshToken"],[100,55,101,57],[101,6,102,8],[101,10,102,12],[101,11,102,13,"admin"],[101,16,102,18],[101,19,102,21],[101,23,102,25,"GoTrueAdminApi_1"],[101,39,102,41],[101,40,102,42,"default"],[101,47,102,49],[101,48,102,50],[102,8,103,12,"url"],[102,11,103,15],[102,13,103,17,"settings"],[102,21,103,25],[102,22,103,26,"url"],[102,25,103,29],[103,8,104,12,"headers"],[103,15,104,19],[103,17,104,21,"settings"],[103,25,104,29],[103,26,104,30,"headers"],[103,33,104,37],[104,8,105,12,"fetch"],[104,13,105,17],[104,15,105,19,"settings"],[104,23,105,27],[104,24,105,28,"fetch"],[105,6,106,8],[105,7,106,9],[105,8,106,10],[106,6,107,8],[106,10,107,12],[106,11,107,13,"url"],[106,14,107,16],[106,17,107,19,"settings"],[106,25,107,27],[106,26,107,28,"url"],[106,29,107,31],[107,6,108,8],[107,10,108,12],[107,11,108,13,"headers"],[107,18,108,20],[107,21,108,23,"settings"],[107,29,108,31],[107,30,108,32,"headers"],[107,37,108,39],[108,6,109,8],[108,10,109,12],[108,11,109,13,"fetch"],[108,16,109,18],[108,19,109,21],[108,20,109,22],[108,21,109,23],[108,23,109,25,"helpers_1"],[108,32,109,34],[108,33,109,35,"resolveFetch"],[108,45,109,47],[108,47,109,49,"settings"],[108,55,109,57],[108,56,109,58,"fetch"],[108,61,109,63],[108,62,109,64],[109,6,110,8],[109,10,110,12],[109,11,110,13,"lock"],[109,15,110,17],[109,18,110,20,"settings"],[109,26,110,28],[109,27,110,29,"lock"],[109,31,110,33],[109,35,110,37,"lockNoOp"],[109,43,110,45],[110,6,111,8],[110,10,111,12],[110,11,111,13,"detectSessionInUrl"],[110,29,111,31],[110,32,111,34,"settings"],[110,40,111,42],[110,41,111,43,"detectSessionInUrl"],[110,59,111,61],[111,6,112,8],[111,10,112,12],[111,11,112,13,"flowType"],[111,19,112,21],[111,22,112,24,"settings"],[111,30,112,32],[111,31,112,33,"flowType"],[111,39,112,41],[112,6,113,8],[112,10,113,12],[112,11,113,13,"hasCustomAuthorizationHeader"],[112,39,113,41],[112,42,113,44,"settings"],[112,50,113,52],[112,51,113,53,"hasCustomAuthorizationHeader"],[112,79,113,81],[113,6,114,8],[113,10,114,12,"settings"],[113,18,114,20],[113,19,114,21,"lock"],[113,23,114,25],[113,25,114,27],[114,8,115,12],[114,12,115,16],[114,13,115,17,"lock"],[114,17,115,21],[114,20,115,24,"settings"],[114,28,115,32],[114,29,115,33,"lock"],[114,33,115,37],[115,6,116,8],[115,7,116,9],[115,13,117,13],[115,17,117,17],[115,18,117,18],[115,19,117,19],[115,21,117,21,"helpers_1"],[115,30,117,30],[115,31,117,31,"isBrowser"],[115,40,117,40],[115,42,117,42],[115,43,117,43],[115,48,117,48],[115,49,117,49,"_a"],[115,51,117,51],[115,54,117,54,"globalThis"],[115,64,117,64],[115,69,117,69],[115,73,117,73],[115,77,117,77,"globalThis"],[115,87,117,87],[115,92,117,92],[115,97,117,97],[115,98,117,98],[115,101,117,101],[115,106,117,106],[115,107,117,107],[115,110,117,110,"globalThis"],[115,120,117,120],[115,121,117,121,"navigator"],[115,130,117,130],[115,136,117,136],[115,140,117,140],[115,144,117,144,"_a"],[115,146,117,146],[115,151,117,151],[115,156,117,156],[115,157,117,157],[115,160,117,160],[115,165,117,165],[115,166,117,166],[115,169,117,169,"_a"],[115,171,117,171],[115,172,117,172,"locks"],[115,177,117,177],[115,178,117,178],[115,180,117,180],[116,8,118,12],[116,12,118,16],[116,13,118,17,"lock"],[116,17,118,21],[116,20,118,24,"locks_1"],[116,27,118,31],[116,28,118,32,"navigatorLock"],[116,41,118,45],[117,6,119,8],[117,7,119,9],[117,13,120,13],[118,8,121,12],[118,12,121,16],[118,13,121,17,"lock"],[118,17,121,21],[118,20,121,24,"lockNoOp"],[118,28,121,32],[119,6,122,8],[120,6,123,8],[120,10,123,12],[120,11,123,13],[120,15,123,17],[120,16,123,18,"jwks"],[120,20,123,22],[120,22,123,24],[121,8,124,12],[121,12,124,16],[121,13,124,17,"jwks"],[121,17,124,21],[121,20,124,24],[122,10,124,26,"keys"],[122,14,124,30],[122,16,124,32],[123,8,124,35],[123,9,124,36],[124,8,125,12],[124,12,125,16],[124,13,125,17,"jwks_cached_at"],[124,27,125,31],[124,30,125,34,"Number"],[124,36,125,40],[124,37,125,41,"MIN_SAFE_INTEGER"],[124,53,125,57],[125,6,126,8],[126,6,127,8],[126,10,127,12],[126,11,127,13,"mfa"],[126,14,127,16],[126,17,127,19],[127,8,128,12,"verify"],[127,14,128,18],[127,16,128,20],[127,20,128,24],[127,21,128,25,"_verify"],[127,28,128,32],[127,29,128,33,"bind"],[127,33,128,37],[127,34,128,38],[127,38,128,42],[127,39,128,43],[128,8,129,12,"enroll"],[128,14,129,18],[128,16,129,20],[128,20,129,24],[128,21,129,25,"_enroll"],[128,28,129,32],[128,29,129,33,"bind"],[128,33,129,37],[128,34,129,38],[128,38,129,42],[128,39,129,43],[129,8,130,12,"unenroll"],[129,16,130,20],[129,18,130,22],[129,22,130,26],[129,23,130,27,"_unenroll"],[129,32,130,36],[129,33,130,37,"bind"],[129,37,130,41],[129,38,130,42],[129,42,130,46],[129,43,130,47],[130,8,131,12,"challenge"],[130,17,131,21],[130,19,131,23],[130,23,131,27],[130,24,131,28,"_challenge"],[130,34,131,38],[130,35,131,39,"bind"],[130,39,131,43],[130,40,131,44],[130,44,131,48],[130,45,131,49],[131,8,132,12,"listFactors"],[131,19,132,23],[131,21,132,25],[131,25,132,29],[131,26,132,30,"_listFactors"],[131,38,132,42],[131,39,132,43,"bind"],[131,43,132,47],[131,44,132,48],[131,48,132,52],[131,49,132,53],[132,8,133,12,"challengeAndVerify"],[132,26,133,30],[132,28,133,32],[132,32,133,36],[132,33,133,37,"_challengeAndVerify"],[132,52,133,56],[132,53,133,57,"bind"],[132,57,133,61],[132,58,133,62],[132,62,133,66],[132,63,133,67],[133,8,134,12,"getAuthenticatorAssuranceLevel"],[133,38,134,42],[133,40,134,44],[133,44,134,48],[133,45,134,49,"_getAuthenticatorAssuranceLevel"],[133,76,134,80],[133,77,134,81,"bind"],[133,81,134,85],[133,82,134,86],[133,86,134,90],[133,87,134,91],[134,8,135,12,"webauthn"],[134,16,135,20],[134,18,135,22],[134,22,135,26,"webauthn_1"],[134,32,135,36],[134,33,135,37,"WebAuthnApi"],[134,44,135,48],[134,45,135,49],[134,49,135,53],[135,6,136,8],[135,7,136,9],[136,6,137,8],[136,10,137,12],[136,14,137,16],[136,15,137,17,"persistSession"],[136,29,137,31],[136,31,137,33],[137,8,138,12],[137,12,138,16,"settings"],[137,20,138,24],[137,21,138,25,"storage"],[137,28,138,32],[137,30,138,34],[138,10,139,16],[138,14,139,20],[138,15,139,21,"storage"],[138,22,139,28],[138,25,139,31,"settings"],[138,33,139,39],[138,34,139,40,"storage"],[138,41,139,47],[139,8,140,12],[139,9,140,13],[139,15,141,17],[140,10,142,16],[140,14,142,20],[140,15,142,21],[140,16,142,22],[140,18,142,24,"helpers_1"],[140,27,142,33],[140,28,142,34,"supportsLocalStorage"],[140,48,142,54],[140,50,142,56],[140,51,142,57],[140,53,142,59],[141,12,143,20],[141,16,143,24],[141,17,143,25,"storage"],[141,24,143,32],[141,27,143,35,"globalThis"],[141,37,143,45],[141,38,143,46,"localStorage"],[141,50,143,58],[142,10,144,16],[142,11,144,17],[142,17,145,21],[143,12,146,20],[143,16,146,24],[143,17,146,25,"memoryStorage"],[143,30,146,38],[143,33,146,41],[143,34,146,42],[143,35,146,43],[144,12,147,20],[144,16,147,24],[144,17,147,25,"storage"],[144,24,147,32],[144,27,147,35],[144,28,147,36],[144,29,147,37],[144,31,147,39,"local_storage_1"],[144,46,147,54],[144,47,147,55,"memoryLocalStorageAdapter"],[144,72,147,80],[144,74,147,82],[144,78,147,86],[144,79,147,87,"memoryStorage"],[144,92,147,100],[144,93,147,101],[145,10,148,16],[146,8,149,12],[147,8,150,12],[147,12,150,16,"settings"],[147,20,150,24],[147,21,150,25,"userStorage"],[147,32,150,36],[147,34,150,38],[148,10,151,16],[148,14,151,20],[148,15,151,21,"userStorage"],[148,26,151,32],[148,29,151,35,"settings"],[148,37,151,43],[148,38,151,44,"userStorage"],[148,49,151,55],[149,8,152,12],[150,6,153,8],[150,7,153,9],[150,13,154,13],[151,8,155,12],[151,12,155,16],[151,13,155,17,"memoryStorage"],[151,26,155,30],[151,29,155,33],[151,30,155,34],[151,31,155,35],[152,8,156,12],[152,12,156,16],[152,13,156,17,"storage"],[152,20,156,24],[152,23,156,27],[152,24,156,28],[152,25,156,29],[152,27,156,31,"local_storage_1"],[152,42,156,46],[152,43,156,47,"memoryLocalStorageAdapter"],[152,68,156,72],[152,70,156,74],[152,74,156,78],[152,75,156,79,"memoryStorage"],[152,88,156,92],[152,89,156,93],[153,6,157,8],[154,6,158,8],[154,10,158,12],[154,11,158,13],[154,12,158,14],[154,14,158,16,"helpers_1"],[154,23,158,25],[154,24,158,26,"isBrowser"],[154,33,158,35],[154,35,158,37],[154,36,158,38],[154,40,158,42,"globalThis"],[154,50,158,52],[154,51,158,53,"BroadcastChannel"],[154,67,158,69],[154,71,158,73],[154,75,158,77],[154,76,158,78,"persistSession"],[154,90,158,92],[154,94,158,96],[154,98,158,100],[154,99,158,101,"storageKey"],[154,109,158,111],[154,111,158,113],[155,8,159,12],[155,12,159,16],[156,10,160,16],[156,14,160,20],[156,15,160,21,"broadcastChannel"],[156,31,160,37],[156,34,160,40],[156,38,160,44,"globalThis"],[156,48,160,54],[156,49,160,55,"BroadcastChannel"],[156,65,160,71],[156,66,160,72],[156,70,160,76],[156,71,160,77,"storageKey"],[156,81,160,87],[156,82,160,88],[157,8,161,12],[157,9,161,13],[157,10,162,12],[157,17,162,19,"e"],[157,18,162,20],[157,20,162,22],[158,10,163,16,"console"],[158,17,163,23],[158,18,163,24,"error"],[158,23,163,29],[158,24,163,30],[158,112,163,118],[158,114,163,120,"e"],[158,115,163,121],[158,116,163,122],[159,8,164,12],[160,8,165,12],[160,9,165,13,"_b"],[160,11,165,15],[160,14,165,18],[160,18,165,22],[160,19,165,23,"broadcastChannel"],[160,35,165,39],[160,41,165,45],[160,45,165,49],[160,49,165,53,"_b"],[160,51,165,55],[160,56,165,60],[160,61,165,65],[160,62,165,66],[160,65,165,69],[160,70,165,74],[160,71,165,75],[160,74,165,78,"_b"],[160,76,165,80],[160,77,165,81,"addEventListener"],[160,93,165,97],[160,94,165,98],[160,103,165,107],[161,10,165,107],[161,14,165,107,"_ref"],[161,18,165,107],[161,21,165,107,"_asyncToGenerator"],[161,38,165,107],[161,39,165,109],[161,50,165,116,"event"],[161,55,165,121],[161,57,165,126],[162,12,166,16,"_this"],[162,17,166,20],[162,18,166,21,"_debug"],[162,24,166,27],[162,25,166,28],[162,83,166,86],[162,85,166,88,"event"],[162,90,166,93],[162,91,166,94],[163,12,167,16],[163,18,167,22,"_this"],[163,23,167,26],[163,24,167,27,"_notifyAllSubscribers"],[163,45,167,48],[163,46,167,49,"event"],[163,51,167,54],[163,52,167,55,"data"],[163,56,167,59],[163,57,167,60,"event"],[163,62,167,65],[163,64,167,67,"event"],[163,69,167,72],[163,70,167,73,"data"],[163,74,167,77],[163,75,167,78,"session"],[163,82,167,85],[163,84,167,87],[163,89,167,92],[163,90,167,93],[163,91,167,94],[163,92,167,95],[164,10,168,12],[164,11,168,13],[165,10,168,13],[165,27,168,13,"_x4"],[165,30,168,13],[166,12,168,13],[166,19,168,13,"_ref"],[166,23,168,13],[166,24,168,13,"apply"],[166,29,168,13],[166,36,168,13,"arguments"],[166,45,168,13],[167,10,168,13],[168,8,168,13],[168,12,168,14],[169,6,169,8],[170,6,170,8],[170,10,170,12],[170,11,170,13,"initialize"],[170,21,170,23],[170,22,170,24],[170,23,170,25],[171,4,171,4],[172,4,171,5],[172,11,171,5,"_createClass"],[172,23,171,5],[172,24,171,5,"GoTrueClient"],[172,36,171,5],[173,6,171,5,"key"],[173,9,171,5],[174,6,171,5,"get"],[174,9,171,5],[175,6,41,4],[176,0,42,0],[177,0,43,0],[178,6,44,4],[178,15,44,4,"get"],[178,16,44,4],[178,18,44,15],[179,8,45,8],[179,12,45,12,"_a"],[179,14,45,14],[179,16,45,16,"_b"],[179,18,45,18],[180,8,46,8],[180,15,46,15],[180,16,46,16,"_b"],[180,18,46,18],[180,21,46,21],[180,22,46,22,"_a"],[180,24,46,24],[180,27,46,27,"GLOBAL_JWKS"],[180,38,46,38],[180,39,46,39],[180,43,46,43],[180,44,46,44,"storageKey"],[180,54,46,54],[180,55,46,55],[180,61,46,61],[180,65,46,65],[180,69,46,69,"_a"],[180,71,46,71],[180,76,46,76],[180,81,46,81],[180,82,46,82],[180,85,46,85],[180,90,46,90],[180,91,46,91],[180,94,46,94,"_a"],[180,96,46,96],[180,97,46,97,"jwks"],[180,101,46,101],[180,107,46,107],[180,111,46,111],[180,115,46,115,"_b"],[180,117,46,117],[180,122,46,122],[180,127,46,127],[180,128,46,128],[180,131,46,131,"_b"],[180,133,46,133],[180,136,46,136],[181,10,46,138,"keys"],[181,14,46,142],[181,16,46,144],[182,8,46,147],[182,9,46,148],[183,6,47,4],[183,7,47,5],[184,6,47,5,"set"],[184,9,47,5],[184,11,48,4],[184,20,48,4,"set"],[184,21,48,13,"value"],[184,26,48,18],[184,28,48,20],[185,8,49,8,"GLOBAL_JWKS"],[185,19,49,19],[185,20,49,20],[185,24,49,24],[185,25,49,25,"storageKey"],[185,35,49,35],[185,36,49,36],[185,39,49,39,"Object"],[185,45,49,45],[185,46,49,46,"assign"],[185,52,49,52],[185,53,49,53,"Object"],[185,59,49,59],[185,60,49,60,"assign"],[185,66,49,66],[185,67,49,67],[185,68,49,68],[185,69,49,69],[185,71,49,71,"GLOBAL_JWKS"],[185,82,49,82],[185,83,49,83],[185,87,49,87],[185,88,49,88,"storageKey"],[185,98,49,98],[185,99,49,99],[185,100,49,100],[185,102,49,102],[186,10,49,104,"jwks"],[186,14,49,108],[186,16,49,110,"value"],[187,8,49,116],[187,9,49,117],[187,10,49,118],[188,6,50,4],[189,4,50,5],[190,6,50,5,"key"],[190,9,50,5],[191,6,50,5,"get"],[191,9,50,5],[191,11,51,4],[191,20,51,4,"get"],[191,21,51,4],[191,23,51,25],[192,8,52,8],[192,12,52,12,"_a"],[192,14,52,14],[192,16,52,16,"_b"],[192,18,52,18],[193,8,53,8],[193,15,53,15],[193,16,53,16,"_b"],[193,18,53,18],[193,21,53,21],[193,22,53,22,"_a"],[193,24,53,24],[193,27,53,27,"GLOBAL_JWKS"],[193,38,53,38],[193,39,53,39],[193,43,53,43],[193,44,53,44,"storageKey"],[193,54,53,54],[193,55,53,55],[193,61,53,61],[193,65,53,65],[193,69,53,69,"_a"],[193,71,53,71],[193,76,53,76],[193,81,53,81],[193,82,53,82],[193,85,53,85],[193,90,53,90],[193,91,53,91],[193,94,53,94,"_a"],[193,96,53,96],[193,97,53,97,"cachedAt"],[193,105,53,105],[193,111,53,111],[193,115,53,115],[193,119,53,119,"_b"],[193,121,53,121],[193,126,53,126],[193,131,53,131],[193,132,53,132],[193,135,53,135,"_b"],[193,137,53,137],[193,140,53,140,"Number"],[193,146,53,146],[193,147,53,147,"MIN_SAFE_INTEGER"],[193,163,53,163],[194,6,54,4],[194,7,54,5],[195,6,54,5,"set"],[195,9,54,5],[195,11,55,4],[195,20,55,4,"set"],[195,21,55,23,"value"],[195,26,55,28],[195,28,55,30],[196,8,56,8,"GLOBAL_JWKS"],[196,19,56,19],[196,20,56,20],[196,24,56,24],[196,25,56,25,"storageKey"],[196,35,56,35],[196,36,56,36],[196,39,56,39,"Object"],[196,45,56,45],[196,46,56,46,"assign"],[196,52,56,52],[196,53,56,53,"Object"],[196,59,56,59],[196,60,56,60,"assign"],[196,66,56,66],[196,67,56,67],[196,68,56,68],[196,69,56,69],[196,71,56,71,"GLOBAL_JWKS"],[196,82,56,82],[196,83,56,83],[196,87,56,87],[196,88,56,88,"storageKey"],[196,98,56,98],[196,99,56,99],[196,100,56,100],[196,102,56,102],[197,10,56,104,"cachedAt"],[197,18,56,112],[197,20,56,114,"value"],[198,8,56,120],[198,9,56,121],[198,10,56,122],[199,6,57,4],[200,4,57,5],[201,6,57,5,"key"],[201,9,57,5],[202,6,57,5,"value"],[202,11,57,5],[202,13,172,4],[202,22,172,4,"_debug"],[202,28,172,10,"_debug"],[202,29,172,10],[202,31,172,20],[203,8,173,8],[203,12,173,12],[203,16,173,16],[203,17,173,17,"logDebugMessages"],[203,33,173,33],[203,35,173,35],[204,10,173,35],[204,19,173,35,"_len"],[204,23,173,35],[204,26,173,35,"arguments"],[204,35,173,35],[204,36,173,35,"length"],[204,42,173,35],[204,44,172,14,"args"],[204,48,172,18],[204,55,172,18,"Array"],[204,60,172,18],[204,61,172,18,"_len"],[204,65,172,18],[204,68,172,18,"_key"],[204,72,172,18],[204,78,172,18,"_key"],[204,82,172,18],[204,85,172,18,"_len"],[204,89,172,18],[204,91,172,18,"_key"],[204,95,172,18],[205,12,172,14,"args"],[205,16,172,18],[205,17,172,18,"_key"],[205,21,172,18],[205,25,172,18,"arguments"],[205,34,172,18],[205,35,172,18,"_key"],[205,39,172,18],[206,10,172,18],[207,10,174,12],[207,14,174,16],[207,15,174,17,"logger"],[207,21,174,23],[207,22,174,24],[207,38,174,40],[207,42,174,44],[207,43,174,45,"instanceID"],[207,53,174,55],[207,58,174,60,"version_1"],[207,67,174,69],[207,68,174,70,"version"],[207,75,174,77],[207,80,174,82],[207,84,174,86,"Date"],[207,88,174,90],[207,89,174,91],[207,90,174,92],[207,91,174,93,"toISOString"],[207,102,174,104],[207,103,174,105],[207,104,174,106],[207,106,174,108],[207,108,174,110],[207,111,174,113,"args"],[207,115,174,117],[207,116,174,118],[208,8,175,8],[209,8,176,8],[209,15,176,15],[209,19,176,19],[210,6,177,4],[211,6,178,4],[212,0,179,0],[213,0,180,0],[214,0,181,0],[215,0,182,0],[216,4,178,4],[217,6,178,4,"key"],[217,9,178,4],[218,6,178,4,"value"],[218,11,178,4],[219,8,178,4],[219,12,178,4,"_initialize2"],[219,24,178,4],[219,27,178,4,"_asyncToGenerator"],[219,44,178,4],[219,45,183,4],[219,58,183,23],[220,10,183,23],[220,14,183,23,"_this2"],[220,20,183,23],[221,10,184,8],[221,14,184,12],[221,18,184,16],[221,19,184,17,"initializePromise"],[221,36,184,34],[221,38,184,36],[222,12,185,12],[222,25,185,25],[222,29,185,29],[222,30,185,30,"initializePromise"],[222,47,185,47],[223,10,186,8],[224,10,187,8],[224,14,187,12],[224,15,187,13,"initializePromise"],[224,32,187,30],[224,35,187,33,"_asyncToGenerator"],[224,52,187,33],[224,53,187,34],[224,66,187,46],[225,12,188,12],[225,25,188,25,"_this2"],[225,31,188,29],[225,32,188,30,"_acquireLock"],[225,44,188,42],[225,45,188,43],[225,46,188,44],[225,47,188,45],[225,62,188,45,"_asyncToGenerator"],[225,79,188,45],[225,80,188,47],[225,93,188,59],[226,14,189,16],[226,27,189,29,"_this2"],[226,33,189,33],[226,34,189,34,"_initialize"],[226,45,189,45],[226,46,189,46],[226,47,189,47],[227,12,190,12],[227,13,190,13],[227,15,190,14],[228,10,191,8],[228,11,191,9],[228,13,191,11],[228,14,191,12],[229,10,192,8],[229,23,192,21],[229,27,192,25],[229,28,192,26,"initializePromise"],[229,45,192,43],[230,8,193,4],[230,9,193,5],[231,8,193,5],[231,17,183,10,"initialize"],[231,27,183,20,"initialize"],[231,28,183,20],[232,10,183,20],[232,17,183,20,"_initialize2"],[232,29,183,20],[232,30,183,20,"apply"],[232,35,183,20],[232,42,183,20,"arguments"],[232,51,183,20],[233,8,183,20],[234,8,183,20],[234,15,183,10,"initialize"],[234,25,183,20],[235,6,183,20],[236,6,194,4],[237,0,195,0],[238,0,196,0],[239,0,197,0],[240,0,198,0],[241,0,199,0],[242,6,194,4],[243,4,194,4],[244,6,194,4,"key"],[244,9,194,4],[245,6,194,4,"value"],[245,11,194,4],[246,8,194,4],[246,12,194,4,"_initialize3"],[246,24,194,4],[246,27,194,4,"_asyncToGenerator"],[246,44,194,4],[246,45,200,4],[246,58,200,24],[247,10,200,24],[247,14,200,24,"_this3"],[247,20,200,24],[248,10,201,8],[248,14,201,12,"_a"],[248,16,201,14],[249,10,202,8],[249,14,202,12],[250,12,203,12],[250,16,203,18,"params"],[250,22,203,24],[250,25,203,27],[250,26,203,28],[250,27,203,29],[250,29,203,31,"helpers_1"],[250,38,203,40],[250,39,203,41,"parseParametersFromURL"],[250,61,203,63],[250,63,203,65,"window"],[250,69,203,71],[250,70,203,72,"location"],[250,78,203,80],[250,79,203,81,"href"],[250,83,203,85],[250,84,203,86],[251,12,204,12],[251,16,204,16,"callbackUrlType"],[251,31,204,31],[251,34,204,34],[251,40,204,40],[252,12,205,12],[252,16,205,16],[252,20,205,20],[252,21,205,21,"_isImplicitGrantCallback"],[252,45,205,45],[252,46,205,46,"params"],[252,52,205,52],[252,53,205,53],[252,55,205,55],[253,14,206,16,"callbackUrlType"],[253,29,206,31],[253,32,206,34],[253,42,206,44],[254,12,207,12],[254,13,207,13],[254,19,208,17],[254,29,208,27],[254,33,208,31],[254,34,208,32,"_isPKCECallback"],[254,49,208,47],[254,50,208,48,"params"],[254,56,208,54],[254,57,208,55],[254,59,208,57],[255,14,209,16,"callbackUrlType"],[255,29,209,31],[255,32,209,34],[255,38,209,40],[256,12,210,12],[257,12,211,12],[258,0,212,0],[259,0,213,0],[260,0,214,0],[261,0,215,0],[262,0,216,0],[263,12,217,12],[263,16,217,16],[263,17,217,17],[263,18,217,18],[263,20,217,20,"helpers_1"],[263,29,217,29],[263,30,217,30,"isBrowser"],[263,39,217,39],[263,41,217,41],[263,42,217,42],[263,46,217,46],[263,50,217,50],[263,51,217,51,"detectSessionInUrl"],[263,69,217,69],[263,73,217,73,"callbackUrlType"],[263,88,217,88],[263,93,217,93],[263,99,217,99],[263,101,217,101],[264,14,218,16],[264,18,218,16,"_yield$this$_getSessi"],[264,39,218,16],[264,48,218,46],[264,52,218,50],[264,53,218,51,"_getSessionFromURL"],[264,71,218,69],[264,72,218,70,"params"],[264,78,218,76],[264,80,218,78,"callbackUrlType"],[264,95,218,93],[264,96,218,94],[265,16,218,24,"data"],[265,20,218,28],[265,23,218,28,"_yield$this$_getSessi"],[265,44,218,28],[265,45,218,24,"data"],[265,49,218,28],[266,16,218,30,"error"],[266,21,218,35],[266,24,218,35,"_yield$this$_getSessi"],[266,45,218,35],[266,46,218,30,"error"],[266,51,218,35],[267,14,219,16],[267,18,219,20,"error"],[267,23,219,25],[267,25,219,27],[268,16,220,20],[268,20,220,24],[268,21,220,25,"_debug"],[268,27,220,31],[268,28,220,32],[268,44,220,48],[268,46,220,50],[268,80,220,84],[268,82,220,86,"error"],[268,87,220,91],[268,88,220,92],[269,16,221,20],[269,20,221,24],[269,21,221,25],[269,22,221,26],[269,24,221,28,"errors_1"],[269,32,221,36],[269,33,221,37,"isAuthImplicitGrantRedirectError"],[269,65,221,69],[269,67,221,71,"error"],[269,72,221,76],[269,73,221,77],[269,75,221,79],[270,18,222,24],[270,22,222,30,"errorCode"],[270,31,222,39],[270,34,222,42],[270,35,222,43,"_a"],[270,37,222,45],[270,40,222,48,"error"],[270,45,222,53],[270,46,222,54,"details"],[270,53,222,61],[270,59,222,67],[270,63,222,71],[270,67,222,75,"_a"],[270,69,222,77],[270,74,222,82],[270,79,222,87],[270,80,222,88],[270,83,222,91],[270,88,222,96],[270,89,222,97],[270,92,222,100,"_a"],[270,94,222,102],[270,95,222,103,"code"],[270,99,222,107],[271,18,223,24],[271,22,223,28,"errorCode"],[271,31,223,37],[271,36,223,42],[271,61,223,67],[271,65,224,28,"errorCode"],[271,74,224,37],[271,79,224,42],[271,99,224,62],[271,103,225,28,"errorCode"],[271,112,225,37],[271,117,225,42],[271,148,225,73],[271,150,225,75],[272,20,226,28],[272,27,226,35],[273,22,226,37,"error"],[274,20,226,43],[274,21,226,44],[275,18,227,24],[276,16,228,20],[277,16,229,20],[278,16,230,20],[279,16,231,20],[279,22,231,26],[279,26,231,30],[279,27,231,31,"_removeSession"],[279,41,231,45],[279,42,231,46],[279,43,231,47],[280,16,232,20],[280,23,232,27],[281,18,232,29,"error"],[282,16,232,35],[282,17,232,36],[283,14,233,16],[284,14,234,16],[284,18,234,24,"session"],[284,25,234,31],[284,28,234,50,"data"],[284,32,234,54],[284,33,234,24,"session"],[284,40,234,31],[285,16,234,33,"redirectType"],[285,28,234,45],[285,31,234,50,"data"],[285,35,234,54],[285,36,234,33,"redirectType"],[285,48,234,45],[286,14,235,16],[286,18,235,20],[286,19,235,21,"_debug"],[286,25,235,27],[286,26,235,28],[286,42,235,44],[286,44,235,46],[286,69,235,71],[286,71,235,73,"session"],[286,78,235,80],[286,80,235,82],[286,95,235,97],[286,97,235,99,"redirectType"],[286,109,235,111],[286,110,235,112],[287,14,236,16],[287,20,236,22],[287,24,236,26],[287,25,236,27,"_saveSession"],[287,37,236,39],[287,38,236,40,"session"],[287,45,236,47],[287,46,236,48],[288,14,237,16,"setTimeout"],[288,24,237,26],[288,38,237,26,"_asyncToGenerator"],[288,55,237,26],[288,56,237,27],[288,69,237,39],[289,16,238,20],[289,20,238,24,"redirectType"],[289,32,238,36],[289,37,238,41],[289,47,238,51],[289,49,238,53],[290,18,239,24],[290,24,239,30,"_this3"],[290,30,239,34],[290,31,239,35,"_notifyAllSubscribers"],[290,52,239,56],[290,53,239,57],[290,72,239,76],[290,74,239,78,"session"],[290,81,239,85],[290,82,239,86],[291,16,240,20],[291,17,240,21],[291,23,241,25],[292,18,242,24],[292,24,242,30,"_this3"],[292,30,242,34],[292,31,242,35,"_notifyAllSubscribers"],[292,52,242,56],[292,53,242,57],[292,64,242,68],[292,66,242,70,"session"],[292,73,242,77],[292,74,242,78],[293,16,243,20],[294,14,244,16],[294,15,244,17],[294,18,244,19],[294,19,244,20],[294,20,244,21],[295,14,245,16],[295,21,245,23],[296,16,245,25,"error"],[296,21,245,30],[296,23,245,32],[297,14,245,37],[297,15,245,38],[298,12,246,12],[299,12,247,12],[300,12,248,12],[300,18,248,18],[300,22,248,22],[300,23,248,23,"_recoverAndRefresh"],[300,41,248,41],[300,42,248,42],[300,43,248,43],[301,12,249,12],[301,19,249,19],[302,14,249,21,"error"],[302,19,249,26],[302,21,249,28],[303,12,249,33],[303,13,249,34],[304,10,250,8],[304,11,250,9],[304,12,251,8],[304,19,251,15,"error"],[304,24,251,20],[304,26,251,22],[305,12,252,12],[305,16,252,16],[305,17,252,17],[305,18,252,18],[305,20,252,20,"errors_1"],[305,28,252,28],[305,29,252,29,"isAuthError"],[305,40,252,40],[305,42,252,42,"error"],[305,47,252,47],[305,48,252,48],[305,50,252,50],[306,14,253,16],[306,21,253,23],[307,16,253,25,"error"],[308,14,253,31],[308,15,253,32],[309,12,254,12],[310,12,255,12],[310,19,255,19],[311,14,256,16,"error"],[311,19,256,21],[311,21,256,23],[311,25,256,27,"errors_1"],[311,33,256,35],[311,34,256,36,"AuthUnknownError"],[311,50,256,52],[311,51,256,53],[311,91,256,93],[311,93,256,95,"error"],[311,98,256,100],[312,12,257,12],[312,13,257,13],[313,10,258,8],[313,11,258,9],[313,20,259,16],[314,12,260,12],[314,18,260,18],[314,22,260,22],[314,23,260,23,"_handleVisibilityChange"],[314,46,260,46],[314,47,260,47],[314,48,260,48],[315,12,261,12],[315,16,261,16],[315,17,261,17,"_debug"],[315,23,261,23],[315,24,261,24],[315,40,261,40],[315,42,261,42],[315,47,261,47],[315,48,261,48],[316,10,262,8],[317,8,263,4],[317,9,263,5],[318,8,263,5],[318,17,200,10,"_initialize"],[318,28,200,21,"_initialize"],[318,29,200,21],[319,10,200,21],[319,17,200,21,"_initialize3"],[319,29,200,21],[319,30,200,21,"apply"],[319,35,200,21],[319,42,200,21,"arguments"],[319,51,200,21],[320,8,200,21],[321,8,200,21],[321,15,200,10,"_initialize"],[321,26,200,21],[322,6,200,21],[323,6,264,4],[324,0,265,0],[325,0,266,0],[326,0,267,0],[327,0,268,0],[328,6,264,4],[329,4,264,4],[330,6,264,4,"key"],[330,9,264,4],[331,6,264,4,"value"],[331,11,264,4],[332,8,264,4],[332,12,264,4,"_signInAnonymously"],[332,30,264,4],[332,33,264,4,"_asyncToGenerator"],[332,50,264,4],[332,51,269,4],[332,62,269,28,"credentials"],[332,73,269,39],[332,75,269,41],[333,10,270,8],[333,14,270,12,"_a"],[333,16,270,14],[333,18,270,16,"_b"],[333,20,270,18],[333,22,270,20,"_c"],[333,24,270,22],[334,10,271,8],[334,14,271,12],[335,12,272,12],[335,16,272,18,"res"],[335,19,272,21],[335,28,272,30],[335,29,272,31],[335,30,272,32],[335,32,272,34,"fetch_1"],[335,39,272,41],[335,40,272,42,"_request"],[335,48,272,50],[335,50,272,52],[335,54,272,56],[335,55,272,57,"fetch"],[335,60,272,62],[335,62,272,64],[335,68,272,70],[335,70,272,72],[335,73,272,75],[335,77,272,79],[335,78,272,80,"url"],[335,81,272,83],[335,90,272,92],[335,92,272,94],[336,14,273,16,"headers"],[336,21,273,23],[336,23,273,25],[336,27,273,29],[336,28,273,30,"headers"],[336,35,273,37],[337,14,274,16,"body"],[337,18,274,20],[337,20,274,22],[338,16,275,20,"data"],[338,20,275,24],[338,22,275,26],[338,23,275,27,"_b"],[338,25,275,29],[338,28,275,32],[338,29,275,33,"_a"],[338,31,275,35],[338,34,275,38,"credentials"],[338,45,275,49],[338,50,275,54],[338,54,275,58],[338,58,275,62,"credentials"],[338,69,275,73],[338,74,275,78],[338,79,275,83],[338,80,275,84],[338,83,275,87],[338,88,275,92],[338,89,275,93],[338,92,275,96,"credentials"],[338,103,275,107],[338,104,275,108,"options"],[338,111,275,115],[338,117,275,121],[338,121,275,125],[338,125,275,129,"_a"],[338,127,275,131],[338,132,275,136],[338,137,275,141],[338,138,275,142],[338,141,275,145],[338,146,275,150],[338,147,275,151],[338,150,275,154,"_a"],[338,152,275,156],[338,153,275,157,"data"],[338,157,275,161],[338,163,275,167],[338,167,275,171],[338,171,275,175,"_b"],[338,173,275,177],[338,178,275,182],[338,183,275,187],[338,184,275,188],[338,187,275,191,"_b"],[338,189,275,193],[338,192,275,196],[338,193,275,197],[338,194,275,198],[339,16,276,20,"gotrue_meta_security"],[339,36,276,40],[339,38,276,42],[340,18,276,44,"captcha_token"],[340,31,276,57],[340,33,276,59],[340,34,276,60,"_c"],[340,36,276,62],[340,39,276,65,"credentials"],[340,50,276,76],[340,55,276,81],[340,59,276,85],[340,63,276,89,"credentials"],[340,74,276,100],[340,79,276,105],[340,84,276,110],[340,85,276,111],[340,88,276,114],[340,93,276,119],[340,94,276,120],[340,97,276,123,"credentials"],[340,108,276,134],[340,109,276,135,"options"],[340,116,276,142],[340,122,276,148],[340,126,276,152],[340,130,276,156,"_c"],[340,132,276,158],[340,137,276,163],[340,142,276,168],[340,143,276,169],[340,146,276,172],[340,151,276,177],[340,152,276,178],[340,155,276,181,"_c"],[340,157,276,183],[340,158,276,184,"captchaToken"],[341,16,276,197],[342,14,277,16],[342,15,277,17],[343,14,278,16,"xform"],[343,19,278,21],[343,21,278,23,"fetch_1"],[343,28,278,30],[343,29,278,31,"_sessionResponse"],[344,12,279,12],[344,13,279,13],[344,14,279,14],[345,12,280,12],[345,16,280,20,"data"],[345,20,280,24],[345,23,280,36,"res"],[345,26,280,39],[345,27,280,20,"data"],[345,31,280,24],[346,14,280,26,"error"],[346,19,280,31],[346,22,280,36,"res"],[346,25,280,39],[346,26,280,26,"error"],[346,31,280,31],[347,12,281,12],[347,16,281,16,"error"],[347,21,281,21],[347,25,281,25],[347,26,281,26,"data"],[347,30,281,30],[347,32,281,32],[348,14,282,16],[348,21,282,23],[349,16,282,25,"data"],[349,20,282,29],[349,22,282,31],[350,18,282,33,"user"],[350,22,282,37],[350,24,282,39],[350,28,282,43],[351,18,282,45,"session"],[351,25,282,52],[351,27,282,54],[352,16,282,59],[352,17,282,60],[353,16,282,62,"error"],[353,21,282,67],[353,23,282,69,"error"],[354,14,282,75],[354,15,282,76],[355,12,283,12],[356,12,284,12],[356,16,284,18,"session"],[356,23,284,25],[356,26,284,28,"data"],[356,30,284,32],[356,31,284,33,"session"],[356,38,284,40],[357,12,285,12],[357,16,285,18,"user"],[357,20,285,22],[357,23,285,25,"data"],[357,27,285,29],[357,28,285,30,"user"],[357,32,285,34],[358,12,286,12],[358,16,286,16,"data"],[358,20,286,20],[358,21,286,21,"session"],[358,28,286,28],[358,30,286,30],[359,14,287,16],[359,20,287,22],[359,24,287,26],[359,25,287,27,"_saveSession"],[359,37,287,39],[359,38,287,40,"data"],[359,42,287,44],[359,43,287,45,"session"],[359,50,287,52],[359,51,287,53],[360,14,288,16],[360,20,288,22],[360,24,288,26],[360,25,288,27,"_notifyAllSubscribers"],[360,46,288,48],[360,47,288,49],[360,58,288,60],[360,60,288,62,"session"],[360,67,288,69],[360,68,288,70],[361,12,289,12],[362,12,290,12],[362,19,290,19],[363,14,290,21,"data"],[363,18,290,25],[363,20,290,27],[364,16,290,29,"user"],[364,20,290,33],[365,16,290,35,"session"],[366,14,290,43],[366,15,290,44],[367,14,290,46,"error"],[367,19,290,51],[367,21,290,53],[368,12,290,58],[368,13,290,59],[369,10,291,8],[369,11,291,9],[369,12,292,8],[369,19,292,15,"error"],[369,24,292,20],[369,26,292,22],[370,12,293,12],[370,16,293,16],[370,17,293,17],[370,18,293,18],[370,20,293,20,"errors_1"],[370,28,293,28],[370,29,293,29,"isAuthError"],[370,40,293,40],[370,42,293,42,"error"],[370,47,293,47],[370,48,293,48],[370,50,293,50],[371,14,294,16],[371,21,294,23],[372,16,294,25,"data"],[372,20,294,29],[372,22,294,31],[373,18,294,33,"user"],[373,22,294,37],[373,24,294,39],[373,28,294,43],[374,18,294,45,"session"],[374,25,294,52],[374,27,294,54],[375,16,294,59],[375,17,294,60],[376,16,294,62,"error"],[377,14,294,68],[377,15,294,69],[378,12,295,12],[379,12,296,12],[379,18,296,18,"error"],[379,23,296,23],[380,10,297,8],[381,8,298,4],[381,9,298,5],[382,8,298,5],[382,17,269,10,"signInAnonymously"],[382,34,269,27,"signInAnonymously"],[382,35,269,27,"_x5"],[382,38,269,27],[383,10,269,27],[383,17,269,27,"_signInAnonymously"],[383,35,269,27],[383,36,269,27,"apply"],[383,41,269,27],[383,48,269,27,"arguments"],[383,57,269,27],[384,8,269,27],[385,8,269,27],[385,15,269,10,"signInAnonymously"],[385,32,269,27],[386,6,269,27],[387,6,299,4],[388,0,300,0],[389,0,301,0],[390,0,302,0],[391,0,303,0],[392,0,304,0],[393,0,305,0],[394,0,306,0],[395,0,307,0],[396,0,308,0],[397,6,299,4],[398,4,299,4],[399,6,299,4,"key"],[399,9,299,4],[400,6,299,4,"value"],[400,11,299,4],[401,8,299,4],[401,12,299,4,"_signUp"],[401,19,299,4],[401,22,299,4,"_asyncToGenerator"],[401,39,299,4],[401,40,309,4],[401,51,309,17,"credentials"],[401,62,309,28],[401,64,309,30],[402,10,310,8],[402,14,310,12,"_a"],[402,16,310,14],[402,18,310,16,"_b"],[402,20,310,18],[402,22,310,20,"_c"],[402,24,310,22],[403,10,311,8],[403,14,311,12],[404,12,312,12],[404,16,312,16,"res"],[404,19,312,19],[405,12,313,12],[405,16,313,16],[405,23,313,23],[405,27,313,27,"credentials"],[405,38,313,38],[405,40,313,40],[406,14,314,16],[406,18,314,24,"email"],[406,23,314,29],[406,26,314,53,"credentials"],[406,37,314,64],[406,38,314,24,"email"],[406,43,314,29],[407,16,314,31,"password"],[407,24,314,39],[407,27,314,53,"credentials"],[407,38,314,64],[407,39,314,31,"password"],[407,47,314,39],[408,16,314,41,"options"],[408,23,314,48],[408,26,314,53,"credentials"],[408,37,314,64],[408,38,314,41,"options"],[408,45,314,48],[409,14,315,16],[409,18,315,20,"codeChallenge"],[409,31,315,33],[409,34,315,36],[409,38,315,40],[410,14,316,16],[410,18,316,20,"codeChallengeMethod"],[410,37,316,39],[410,40,316,42],[410,44,316,46],[411,14,317,16],[411,18,317,20],[411,22,317,24],[411,23,317,25,"flowType"],[411,31,317,33],[411,36,317,38],[411,42,317,44],[411,44,317,46],[412,16,318,20],[413,16,318,21],[413,20,318,21,"_yield"],[413,26,318,21],[413,35,319,65],[413,36,319,66],[413,37,319,67],[413,39,319,69,"helpers_1"],[413,48,319,78],[413,49,319,79,"getCodeChallengeAndMethod"],[413,74,319,104],[413,76,319,106],[413,80,319,110],[413,81,319,111,"storage"],[413,88,319,118],[413,90,319,120],[413,94,319,124],[413,95,319,125,"storageKey"],[413,105,319,135],[413,106,319,136],[414,16,319,136],[414,20,319,136,"_yield2"],[414,27,319,136],[414,30,319,136,"_slicedToArray"],[414,44,319,136],[414,45,319,136,"_yield"],[414,51,319,136],[415,16,319,21,"codeChallenge"],[415,29,319,34],[415,32,319,34,"_yield2"],[415,39,319,34],[416,16,319,36,"codeChallengeMethod"],[416,35,319,55],[416,38,319,55,"_yield2"],[416,45,319,55],[417,14,320,16],[418,14,321,16,"res"],[418,17,321,19],[418,26,321,28],[418,27,321,29],[418,28,321,30],[418,30,321,32,"fetch_1"],[418,37,321,39],[418,38,321,40,"_request"],[418,46,321,48],[418,48,321,50],[418,52,321,54],[418,53,321,55,"fetch"],[418,58,321,60],[418,60,321,62],[418,66,321,68],[418,68,321,70],[418,71,321,73],[418,75,321,77],[418,76,321,78,"url"],[418,79,321,81],[418,88,321,90],[418,90,321,92],[419,16,322,20,"headers"],[419,23,322,27],[419,25,322,29],[419,29,322,33],[419,30,322,34,"headers"],[419,37,322,41],[420,16,323,20,"redirectTo"],[420,26,323,30],[420,28,323,32,"options"],[420,35,323,39],[420,40,323,44],[420,44,323,48],[420,48,323,52,"options"],[420,55,323,59],[420,60,323,64],[420,65,323,69],[420,66,323,70],[420,69,323,73],[420,74,323,78],[420,75,323,79],[420,78,323,82,"options"],[420,85,323,89],[420,86,323,90,"emailRedirectTo"],[420,101,323,105],[421,16,324,20,"body"],[421,20,324,24],[421,22,324,26],[422,18,325,24,"email"],[422,23,325,29],[423,18,326,24,"password"],[423,26,326,32],[424,18,327,24,"data"],[424,22,327,28],[424,24,327,30],[424,25,327,31,"_a"],[424,27,327,33],[424,30,327,36,"options"],[424,37,327,43],[424,42,327,48],[424,46,327,52],[424,50,327,56,"options"],[424,57,327,63],[424,62,327,68],[424,67,327,73],[424,68,327,74],[424,71,327,77],[424,76,327,82],[424,77,327,83],[424,80,327,86,"options"],[424,87,327,93],[424,88,327,94,"data"],[424,92,327,98],[424,98,327,104],[424,102,327,108],[424,106,327,112,"_a"],[424,108,327,114],[424,113,327,119],[424,118,327,124],[424,119,327,125],[424,122,327,128,"_a"],[424,124,327,130],[424,127,327,133],[424,128,327,134],[424,129,327,135],[425,18,328,24,"gotrue_meta_security"],[425,38,328,44],[425,40,328,46],[426,20,328,48,"captcha_token"],[426,33,328,61],[426,35,328,63,"options"],[426,42,328,70],[426,47,328,75],[426,51,328,79],[426,55,328,83,"options"],[426,62,328,90],[426,67,328,95],[426,72,328,100],[426,73,328,101],[426,76,328,104],[426,81,328,109],[426,82,328,110],[426,85,328,113,"options"],[426,92,328,120],[426,93,328,121,"captchaToken"],[427,18,328,134],[427,19,328,135],[428,18,329,24,"code_challenge"],[428,32,329,38],[428,34,329,40,"codeChallenge"],[428,47,329,53],[429,18,330,24,"code_challenge_method"],[429,39,330,45],[429,41,330,47,"codeChallengeMethod"],[430,16,331,20],[430,17,331,21],[431,16,332,20,"xform"],[431,21,332,25],[431,23,332,27,"fetch_1"],[431,30,332,34],[431,31,332,35,"_sessionResponse"],[432,14,333,16],[432,15,333,17],[432,16,333,18],[433,12,334,12],[433,13,334,13],[433,19,335,17],[433,23,335,21],[433,30,335,28],[433,34,335,32,"credentials"],[433,45,335,43],[433,47,335,45],[434,14,336,16],[434,18,336,24,"phone"],[434,23,336,29],[434,26,336,53,"credentials"],[434,37,336,64],[434,38,336,24,"phone"],[434,43,336,29],[435,16,336,31,"password"],[435,25,336,39],[435,28,336,53,"credentials"],[435,39,336,64],[435,40,336,31,"password"],[435,48,336,39],[436,16,336,41,"options"],[436,24,336,48],[436,27,336,53,"credentials"],[436,38,336,64],[436,39,336,41,"options"],[436,46,336,48],[437,14,337,16,"res"],[437,17,337,19],[437,26,337,28],[437,27,337,29],[437,28,337,30],[437,30,337,32,"fetch_1"],[437,37,337,39],[437,38,337,40,"_request"],[437,46,337,48],[437,48,337,50],[437,52,337,54],[437,53,337,55,"fetch"],[437,58,337,60],[437,60,337,62],[437,66,337,68],[437,68,337,70],[437,71,337,73],[437,75,337,77],[437,76,337,78,"url"],[437,79,337,81],[437,88,337,90],[437,90,337,92],[438,16,338,20,"headers"],[438,23,338,27],[438,25,338,29],[438,29,338,33],[438,30,338,34,"headers"],[438,37,338,41],[439,16,339,20,"body"],[439,20,339,24],[439,22,339,26],[440,18,340,24,"phone"],[440,23,340,29],[441,18,341,24,"password"],[441,26,341,32],[441,28,341,24,"password"],[441,37,341,32],[442,18,342,24,"data"],[442,22,342,28],[442,24,342,30],[442,25,342,31,"_b"],[442,27,342,33],[442,30,342,36,"options"],[442,38,342,43],[442,43,342,48],[442,47,342,52],[442,51,342,56,"options"],[442,59,342,63],[442,64,342,68],[442,69,342,73],[442,70,342,74],[442,73,342,77],[442,78,342,82],[442,79,342,83],[442,82,342,86,"options"],[442,90,342,93],[442,91,342,94,"data"],[442,95,342,98],[442,101,342,104],[442,105,342,108],[442,109,342,112,"_b"],[442,111,342,114],[442,116,342,119],[442,121,342,124],[442,122,342,125],[442,125,342,128,"_b"],[442,127,342,130],[442,130,342,133],[442,131,342,134],[442,132,342,135],[443,18,343,24,"channel"],[443,25,343,31],[443,27,343,33],[443,28,343,34,"_c"],[443,30,343,36],[443,33,343,39,"options"],[443,41,343,46],[443,46,343,51],[443,50,343,55],[443,54,343,59,"options"],[443,62,343,66],[443,67,343,71],[443,72,343,76],[443,73,343,77],[443,76,343,80],[443,81,343,85],[443,82,343,86],[443,85,343,89,"options"],[443,93,343,96],[443,94,343,97,"channel"],[443,101,343,104],[443,107,343,110],[443,111,343,114],[443,115,343,118,"_c"],[443,117,343,120],[443,122,343,125],[443,127,343,130],[443,128,343,131],[443,131,343,134,"_c"],[443,133,343,136],[443,136,343,139],[443,141,343,144],[444,18,344,24,"gotrue_meta_security"],[444,38,344,44],[444,40,344,46],[445,20,344,48,"captcha_token"],[445,33,344,61],[445,35,344,63,"options"],[445,43,344,70],[445,48,344,75],[445,52,344,79],[445,56,344,83,"options"],[445,64,344,90],[445,69,344,95],[445,74,344,100],[445,75,344,101],[445,78,344,104],[445,83,344,109],[445,84,344,110],[445,87,344,113,"options"],[445,95,344,120],[445,96,344,121,"captchaToken"],[446,18,344,134],[447,16,345,20],[447,17,345,21],[448,16,346,20,"xform"],[448,21,346,25],[448,23,346,27,"fetch_1"],[448,30,346,34],[448,31,346,35,"_sessionResponse"],[449,14,347,16],[449,15,347,17],[449,16,347,18],[450,12,348,12],[450,13,348,13],[450,19,349,17],[451,14,350,16],[451,20,350,22],[451,24,350,26,"errors_1"],[451,32,350,34],[451,33,350,35,"AuthInvalidCredentialsError"],[451,60,350,62],[451,61,350,63],[451,126,350,128],[451,127,350,129],[452,12,351,12],[453,12,352,12],[453,16,352,12,"_res"],[453,20,352,12],[453,23,352,36,"res"],[453,26,352,39],[454,14,352,20,"data"],[454,18,352,24],[454,21,352,24,"_res"],[454,25,352,24],[454,26,352,20,"data"],[454,30,352,24],[455,14,352,26,"error"],[455,19,352,31],[455,22,352,31,"_res"],[455,26,352,31],[455,27,352,26,"error"],[455,32,352,31],[456,12,353,12],[456,16,353,16,"error"],[456,21,353,21],[456,25,353,25],[456,26,353,26,"data"],[456,30,353,30],[456,32,353,32],[457,14,354,16],[457,21,354,23],[458,16,354,25,"data"],[458,20,354,29],[458,22,354,31],[459,18,354,33,"user"],[459,22,354,37],[459,24,354,39],[459,28,354,43],[460,18,354,45,"session"],[460,25,354,52],[460,27,354,54],[461,16,354,59],[461,17,354,60],[462,16,354,62,"error"],[462,21,354,67],[462,23,354,69,"error"],[463,14,354,75],[463,15,354,76],[464,12,355,12],[465,12,356,12],[465,16,356,18,"session"],[465,23,356,25],[465,26,356,28,"data"],[465,30,356,32],[465,31,356,33,"session"],[465,38,356,40],[466,12,357,12],[466,16,357,18,"user"],[466,20,357,22],[466,23,357,25,"data"],[466,27,357,29],[466,28,357,30,"user"],[466,32,357,34],[467,12,358,12],[467,16,358,16,"data"],[467,20,358,20],[467,21,358,21,"session"],[467,28,358,28],[467,30,358,30],[468,14,359,16],[468,20,359,22],[468,24,359,26],[468,25,359,27,"_saveSession"],[468,37,359,39],[468,38,359,40,"data"],[468,42,359,44],[468,43,359,45,"session"],[468,50,359,52],[468,51,359,53],[469,14,360,16],[469,20,360,22],[469,24,360,26],[469,25,360,27,"_notifyAllSubscribers"],[469,46,360,48],[469,47,360,49],[469,58,360,60],[469,60,360,62,"session"],[469,67,360,69],[469,68,360,70],[470,12,361,12],[471,12,362,12],[471,19,362,19],[472,14,362,21,"data"],[472,18,362,25],[472,20,362,27],[473,16,362,29,"user"],[473,20,362,33],[474,16,362,35,"session"],[475,14,362,43],[475,15,362,44],[476,14,362,46,"error"],[476,19,362,51],[476,21,362,53],[477,12,362,58],[477,13,362,59],[478,10,363,8],[478,11,363,9],[478,12,364,8],[478,19,364,15,"error"],[478,24,364,20],[478,26,364,22],[479,12,365,12],[479,16,365,16],[479,17,365,17],[479,18,365,18],[479,20,365,20,"errors_1"],[479,28,365,28],[479,29,365,29,"isAuthError"],[479,40,365,40],[479,42,365,42,"error"],[479,47,365,47],[479,48,365,48],[479,50,365,50],[480,14,366,16],[480,21,366,23],[481,16,366,25,"data"],[481,20,366,29],[481,22,366,31],[482,18,366,33,"user"],[482,22,366,37],[482,24,366,39],[482,28,366,43],[483,18,366,45,"session"],[483,25,366,52],[483,27,366,54],[484,16,366,59],[484,17,366,60],[485,16,366,62,"error"],[486,14,366,68],[486,15,366,69],[487,12,367,12],[488,12,368,12],[488,18,368,18,"error"],[488,23,368,23],[489,10,369,8],[490,8,370,4],[490,9,370,5],[491,8,370,5],[491,17,309,10,"signUp"],[491,23,309,16,"signUp"],[491,24,309,16,"_x6"],[491,27,309,16],[492,10,309,16],[492,17,309,16,"_signUp"],[492,24,309,16],[492,25,309,16,"apply"],[492,30,309,16],[492,37,309,16,"arguments"],[492,46,309,16],[493,8,309,16],[494,8,309,16],[494,15,309,10,"signUp"],[494,21,309,16],[495,6,309,16],[496,6,371,4],[497,0,372,0],[498,0,373,0],[499,0,374,0],[500,0,375,0],[501,0,376,0],[502,0,377,0],[503,0,378,0],[504,6,371,4],[505,4,371,4],[506,6,371,4,"key"],[506,9,371,4],[507,6,371,4,"value"],[507,11,371,4],[508,8,371,4],[508,12,371,4,"_signInWithPassword"],[508,31,371,4],[508,34,371,4,"_asyncToGenerator"],[508,51,371,4],[508,52,379,4],[508,63,379,29,"credentials"],[508,74,379,40],[508,76,379,42],[509,10,380,8],[509,14,380,12],[510,12,381,12],[510,16,381,16,"res"],[510,19,381,19],[511,12,382,12],[511,16,382,16],[511,23,382,23],[511,27,382,27,"credentials"],[511,38,382,38],[511,40,382,40],[512,14,383,16],[512,18,383,24,"email"],[512,23,383,29],[512,26,383,53,"credentials"],[512,37,383,64],[512,38,383,24,"email"],[512,43,383,29],[513,16,383,31,"password"],[513,24,383,39],[513,27,383,53,"credentials"],[513,38,383,64],[513,39,383,31,"password"],[513,47,383,39],[514,16,383,41,"options"],[514,23,383,48],[514,26,383,53,"credentials"],[514,37,383,64],[514,38,383,41,"options"],[514,45,383,48],[515,14,384,16,"res"],[515,17,384,19],[515,26,384,28],[515,27,384,29],[515,28,384,30],[515,30,384,32,"fetch_1"],[515,37,384,39],[515,38,384,40,"_request"],[515,46,384,48],[515,48,384,50],[515,52,384,54],[515,53,384,55,"fetch"],[515,58,384,60],[515,60,384,62],[515,66,384,68],[515,68,384,70],[515,71,384,73],[515,75,384,77],[515,76,384,78,"url"],[515,79,384,81],[515,107,384,109],[515,109,384,111],[516,16,385,20,"headers"],[516,23,385,27],[516,25,385,29],[516,29,385,33],[516,30,385,34,"headers"],[516,37,385,41],[517,16,386,20,"body"],[517,20,386,24],[517,22,386,26],[518,18,387,24,"email"],[518,23,387,29],[519,18,388,24,"password"],[519,26,388,32],[520,18,389,24,"gotrue_meta_security"],[520,38,389,44],[520,40,389,46],[521,20,389,48,"captcha_token"],[521,33,389,61],[521,35,389,63,"options"],[521,42,389,70],[521,47,389,75],[521,51,389,79],[521,55,389,83,"options"],[521,62,389,90],[521,67,389,95],[521,72,389,100],[521,73,389,101],[521,76,389,104],[521,81,389,109],[521,82,389,110],[521,85,389,113,"options"],[521,92,389,120],[521,93,389,121,"captchaToken"],[522,18,389,134],[523,16,390,20],[523,17,390,21],[524,16,391,20,"xform"],[524,21,391,25],[524,23,391,27,"fetch_1"],[524,30,391,34],[524,31,391,35,"_sessionResponsePassword"],[525,14,392,16],[525,15,392,17],[525,16,392,18],[526,12,393,12],[526,13,393,13],[526,19,394,17],[526,23,394,21],[526,30,394,28],[526,34,394,32,"credentials"],[526,45,394,43],[526,47,394,45],[527,14,395,16],[527,18,395,24,"phone"],[527,23,395,29],[527,26,395,53,"credentials"],[527,37,395,64],[527,38,395,24,"phone"],[527,43,395,29],[528,16,395,31,"password"],[528,26,395,39],[528,29,395,53,"credentials"],[528,40,395,64],[528,41,395,31,"password"],[528,49,395,39],[529,16,395,41,"options"],[529,25,395,48],[529,28,395,53,"credentials"],[529,39,395,64],[529,40,395,41,"options"],[529,47,395,48],[530,14,396,16,"res"],[530,17,396,19],[530,26,396,28],[530,27,396,29],[530,28,396,30],[530,30,396,32,"fetch_1"],[530,37,396,39],[530,38,396,40,"_request"],[530,46,396,48],[530,48,396,50],[530,52,396,54],[530,53,396,55,"fetch"],[530,58,396,60],[530,60,396,62],[530,66,396,68],[530,68,396,70],[530,71,396,73],[530,75,396,77],[530,76,396,78,"url"],[530,79,396,81],[530,107,396,109],[530,109,396,111],[531,16,397,20,"headers"],[531,23,397,27],[531,25,397,29],[531,29,397,33],[531,30,397,34,"headers"],[531,37,397,41],[532,16,398,20,"body"],[532,20,398,24],[532,22,398,26],[533,18,399,24,"phone"],[533,23,399,29],[534,18,400,24,"password"],[534,26,400,32],[534,28,400,24,"password"],[534,38,400,32],[535,18,401,24,"gotrue_meta_security"],[535,38,401,44],[535,40,401,46],[536,20,401,48,"captcha_token"],[536,33,401,61],[536,35,401,63,"options"],[536,44,401,70],[536,49,401,75],[536,53,401,79],[536,57,401,83,"options"],[536,66,401,90],[536,71,401,95],[536,76,401,100],[536,77,401,101],[536,80,401,104],[536,85,401,109],[536,86,401,110],[536,89,401,113,"options"],[536,98,401,120],[536,99,401,121,"captchaToken"],[537,18,401,134],[538,16,402,20],[538,17,402,21],[539,16,403,20,"xform"],[539,21,403,25],[539,23,403,27,"fetch_1"],[539,30,403,34],[539,31,403,35,"_sessionResponsePassword"],[540,14,404,16],[540,15,404,17],[540,16,404,18],[541,12,405,12],[541,13,405,13],[541,19,406,17],[542,14,407,16],[542,20,407,22],[542,24,407,26,"errors_1"],[542,32,407,34],[542,33,407,35,"AuthInvalidCredentialsError"],[542,60,407,62],[542,61,407,63],[542,126,407,128],[542,127,407,129],[543,12,408,12],[544,12,409,12],[544,16,409,12,"_res2"],[544,21,409,12],[544,24,409,36,"res"],[544,27,409,39],[545,14,409,20,"data"],[545,18,409,24],[545,21,409,24,"_res2"],[545,26,409,24],[545,27,409,20,"data"],[545,31,409,24],[546,14,409,26,"error"],[546,19,409,31],[546,22,409,31,"_res2"],[546,27,409,31],[546,28,409,26,"error"],[546,33,409,31],[547,12,410,12],[547,16,410,16,"error"],[547,21,410,21],[547,23,410,23],[548,14,411,16],[548,21,411,23],[549,16,411,25,"data"],[549,20,411,29],[549,22,411,31],[550,18,411,33,"user"],[550,22,411,37],[550,24,411,39],[550,28,411,43],[551,18,411,45,"session"],[551,25,411,52],[551,27,411,54],[552,16,411,59],[552,17,411,60],[553,16,411,62,"error"],[554,14,411,68],[554,15,411,69],[555,12,412,12],[555,13,412,13],[555,19,413,17],[555,23,413,21],[555,24,413,22,"data"],[555,28,413,26],[555,32,413,30],[555,33,413,31,"data"],[555,37,413,35],[555,38,413,36,"session"],[555,45,413,43],[555,49,413,47],[555,50,413,48,"data"],[555,54,413,52],[555,55,413,53,"user"],[555,59,413,57],[555,61,413,59],[556,14,414,16],[556,21,414,23],[557,16,414,25,"data"],[557,20,414,29],[557,22,414,31],[558,18,414,33,"user"],[558,22,414,37],[558,24,414,39],[558,28,414,43],[559,18,414,45,"session"],[559,25,414,52],[559,27,414,54],[560,16,414,59],[560,17,414,60],[561,16,414,62,"error"],[561,21,414,67],[561,23,414,69],[561,27,414,73,"errors_1"],[561,35,414,81],[561,36,414,82,"AuthInvalidTokenResponseError"],[561,65,414,111],[561,66,414,112],[562,14,414,114],[562,15,414,115],[563,12,415,12],[564,12,416,12],[564,16,416,16,"data"],[564,20,416,20],[564,21,416,21,"session"],[564,28,416,28],[564,30,416,30],[565,14,417,16],[565,20,417,22],[565,24,417,26],[565,25,417,27,"_saveSession"],[565,37,417,39],[565,38,417,40,"data"],[565,42,417,44],[565,43,417,45,"session"],[565,50,417,52],[565,51,417,53],[566,14,418,16],[566,20,418,22],[566,24,418,26],[566,25,418,27,"_notifyAllSubscribers"],[566,46,418,48],[566,47,418,49],[566,58,418,60],[566,60,418,62,"data"],[566,64,418,66],[566,65,418,67,"session"],[566,72,418,74],[566,73,418,75],[567,12,419,12],[568,12,420,12],[568,19,420,19],[569,14,421,16,"data"],[569,18,421,20],[569,20,421,22,"Object"],[569,26,421,28],[569,27,421,29,"assign"],[569,33,421,35],[569,34,421,36],[570,16,421,38,"user"],[570,20,421,42],[570,22,421,44,"data"],[570,26,421,48],[570,27,421,49,"user"],[570,31,421,53],[571,16,421,55,"session"],[571,23,421,62],[571,25,421,64,"data"],[571,29,421,68],[571,30,421,69,"session"],[572,14,421,77],[572,15,421,78],[572,17,421,81,"data"],[572,21,421,85],[572,22,421,86,"weak_password"],[572,35,421,99],[572,38,421,102],[573,16,421,104,"weakPassword"],[573,28,421,116],[573,30,421,118,"data"],[573,34,421,122],[573,35,421,123,"weak_password"],[574,14,421,137],[574,15,421,138],[574,18,421,141],[574,22,421,146],[574,23,421,147],[575,14,422,16,"error"],[576,12,423,12],[576,13,423,13],[577,10,424,8],[577,11,424,9],[577,12,425,8],[577,19,425,15,"error"],[577,24,425,20],[577,26,425,22],[578,12,426,12],[578,16,426,16],[578,17,426,17],[578,18,426,18],[578,20,426,20,"errors_1"],[578,28,426,28],[578,29,426,29,"isAuthError"],[578,40,426,40],[578,42,426,42,"error"],[578,47,426,47],[578,48,426,48],[578,50,426,50],[579,14,427,16],[579,21,427,23],[580,16,427,25,"data"],[580,20,427,29],[580,22,427,31],[581,18,427,33,"user"],[581,22,427,37],[581,24,427,39],[581,28,427,43],[582,18,427,45,"session"],[582,25,427,52],[582,27,427,54],[583,16,427,59],[583,17,427,60],[584,16,427,62,"error"],[585,14,427,68],[585,15,427,69],[586,12,428,12],[587,12,429,12],[587,18,429,18,"error"],[587,23,429,23],[588,10,430,8],[589,8,431,4],[589,9,431,5],[590,8,431,5],[590,17,379,10,"signInWithPassword"],[590,35,379,28,"signInWithPassword"],[590,36,379,28,"_x7"],[590,39,379,28],[591,10,379,28],[591,17,379,28,"_signInWithPassword"],[591,36,379,28],[591,37,379,28,"apply"],[591,42,379,28],[591,49,379,28,"arguments"],[591,58,379,28],[592,8,379,28],[593,8,379,28],[593,15,379,10,"signInWithPassword"],[593,33,379,28],[594,6,379,28],[595,6,432,4],[596,0,433,0],[597,0,434,0],[598,0,435,0],[599,6,432,4],[600,4,432,4],[601,6,432,4,"key"],[601,9,432,4],[602,6,432,4,"value"],[602,11,432,4],[603,8,432,4],[603,12,432,4,"_signInWithOAuth"],[603,28,432,4],[603,31,432,4,"_asyncToGenerator"],[603,48,432,4],[603,49,436,4],[603,60,436,26,"credentials"],[603,71,436,37],[603,73,436,39],[604,10,437,8],[604,14,437,12,"_a"],[604,16,437,14],[604,18,437,16,"_b"],[604,20,437,18],[604,22,437,20,"_c"],[604,24,437,22],[604,26,437,24,"_d"],[604,28,437,26],[605,10,438,8],[605,23,438,21],[605,27,438,25],[605,28,438,26,"_handleProviderSignIn"],[605,49,438,47],[605,50,438,48,"credentials"],[605,61,438,59],[605,62,438,60,"provider"],[605,70,438,68],[605,72,438,70],[606,12,439,12,"redirectTo"],[606,22,439,22],[606,24,439,24],[606,25,439,25,"_a"],[606,27,439,27],[606,30,439,30,"credentials"],[606,41,439,41],[606,42,439,42,"options"],[606,49,439,49],[606,55,439,55],[606,59,439,59],[606,63,439,63,"_a"],[606,65,439,65],[606,70,439,70],[606,75,439,75],[606,76,439,76],[606,79,439,79],[606,84,439,84],[606,85,439,85],[606,88,439,88,"_a"],[606,90,439,90],[606,91,439,91,"redirectTo"],[606,101,439,101],[607,12,440,12,"scopes"],[607,18,440,18],[607,20,440,20],[607,21,440,21,"_b"],[607,23,440,23],[607,26,440,26,"credentials"],[607,37,440,37],[607,38,440,38,"options"],[607,45,440,45],[607,51,440,51],[607,55,440,55],[607,59,440,59,"_b"],[607,61,440,61],[607,66,440,66],[607,71,440,71],[607,72,440,72],[607,75,440,75],[607,80,440,80],[607,81,440,81],[607,84,440,84,"_b"],[607,86,440,86],[607,87,440,87,"scopes"],[607,93,440,93],[608,12,441,12,"queryParams"],[608,23,441,23],[608,25,441,25],[608,26,441,26,"_c"],[608,28,441,28],[608,31,441,31,"credentials"],[608,42,441,42],[608,43,441,43,"options"],[608,50,441,50],[608,56,441,56],[608,60,441,60],[608,64,441,64,"_c"],[608,66,441,66],[608,71,441,71],[608,76,441,76],[608,77,441,77],[608,80,441,80],[608,85,441,85],[608,86,441,86],[608,89,441,89,"_c"],[608,91,441,91],[608,92,441,92,"queryParams"],[608,103,441,103],[609,12,442,12,"skipBrowserRedirect"],[609,31,442,31],[609,33,442,33],[609,34,442,34,"_d"],[609,36,442,36],[609,39,442,39,"credentials"],[609,50,442,50],[609,51,442,51,"options"],[609,58,442,58],[609,64,442,64],[609,68,442,68],[609,72,442,72,"_d"],[609,74,442,74],[609,79,442,79],[609,84,442,84],[609,85,442,85],[609,88,442,88],[609,93,442,93],[609,94,442,94],[609,97,442,97,"_d"],[609,99,442,99],[609,100,442,100,"skipBrowserRedirect"],[610,10,443,8],[610,11,443,9],[610,12,443,10],[611,8,444,4],[611,9,444,5],[612,8,444,5],[612,17,436,10,"signInWithOAuth"],[612,32,436,25,"signInWithOAuth"],[612,33,436,25,"_x8"],[612,36,436,25],[613,10,436,25],[613,17,436,25,"_signInWithOAuth"],[613,33,436,25],[613,34,436,25,"apply"],[613,39,436,25],[613,46,436,25,"arguments"],[613,55,436,25],[614,8,436,25],[615,8,436,25],[615,15,436,10,"signInWithOAuth"],[615,30,436,25],[616,6,436,25],[617,6,445,4],[618,0,446,0],[619,0,447,0],[620,6,445,4],[621,4,445,4],[622,6,445,4,"key"],[622,9,445,4],[623,6,445,4,"value"],[623,11,445,4],[624,8,445,4],[624,12,445,4,"_exchangeCodeForSession2"],[624,36,445,4],[624,39,445,4,"_asyncToGenerator"],[624,56,445,4],[624,57,448,4],[624,68,448,33,"authCode"],[624,76,448,41],[624,78,448,43],[625,10,448,43],[625,14,448,43,"_this4"],[625,20,448,43],[626,10,449,8],[626,16,449,14],[626,20,449,18],[626,21,449,19,"initializePromise"],[626,38,449,36],[627,10,450,8],[627,17,450,15],[627,21,450,19],[627,22,450,20,"_acquireLock"],[627,34,450,32],[627,35,450,33],[627,36,450,34],[627,37,450,35],[627,52,450,35,"_asyncToGenerator"],[627,69,450,35],[627,70,450,37],[627,83,450,49],[628,12,451,12],[628,19,451,19,"_this4"],[628,25,451,23],[628,26,451,24,"_exchangeCodeForSession"],[628,49,451,47],[628,50,451,48,"authCode"],[628,58,451,56],[628,59,451,57],[629,10,452,8],[629,11,452,9],[629,13,452,10],[630,8,453,4],[630,9,453,5],[631,8,453,5],[631,17,448,10,"exchangeCodeForSession"],[631,39,448,32,"exchangeCodeForSession"],[631,40,448,32,"_x9"],[631,43,448,32],[632,10,448,32],[632,17,448,32,"_exchangeCodeForSession2"],[632,41,448,32],[632,42,448,32,"apply"],[632,47,448,32],[632,54,448,32,"arguments"],[632,63,448,32],[633,8,448,32],[634,8,448,32],[634,15,448,10,"exchangeCodeForSession"],[634,37,448,32],[635,6,448,32],[636,6,454,4],[637,0,455,0],[638,0,456,0],[639,0,457,0],[640,0,458,0],[641,0,459,0],[642,0,460,0],[643,6,454,4],[644,4,454,4],[645,6,454,4,"key"],[645,9,454,4],[646,6,454,4,"value"],[646,11,454,4],[647,8,454,4],[647,12,454,4,"_signInWithWeb"],[647,26,454,4],[647,29,454,4,"_asyncToGenerator"],[647,46,454,4],[647,47,461,4],[647,58,461,25,"credentials"],[647,69,461,36],[647,71,461,38],[648,10,462,8],[648,14,462,16,"chain"],[648,19,462,21],[648,22,462,26,"credentials"],[648,33,462,37],[648,34,462,16,"chain"],[648,39,462,21],[649,10,463,8],[649,18,463,16,"chain"],[649,23,463,21],[650,12,464,12],[650,17,464,17],[650,27,464,27],[651,14,465,16],[651,27,465,29],[651,31,465,33],[651,32,465,34,"signInWithEthereum"],[651,50,465,52],[651,51,465,53,"credentials"],[651,62,465,64],[651,63,465,65],[652,12,466,12],[652,17,466,17],[652,25,466,25],[653,14,467,16],[653,27,467,29],[653,31,467,33],[653,32,467,34,"signInWithSolana"],[653,48,467,50],[653,49,467,51,"credentials"],[653,60,467,62],[653,61,467,63],[654,12,468,12],[655,14,469,16],[655,20,469,22],[655,24,469,26,"Error"],[655,29,469,31],[655,30,469,32],[655,71,469,73,"chain"],[655,76,469,78],[655,79,469,81],[655,80,469,82],[656,10,470,8],[657,8,471,4],[657,9,471,5],[658,8,471,5],[658,17,461,10,"signInWithWeb3"],[658,31,461,24,"signInWithWeb3"],[658,32,461,24,"_x0"],[658,35,461,24],[659,10,461,24],[659,17,461,24,"_signInWithWeb"],[659,31,461,24],[659,32,461,24,"apply"],[659,37,461,24],[659,44,461,24,"arguments"],[659,53,461,24],[660,8,461,24],[661,8,461,24],[661,15,461,10,"signInWithWeb3"],[661,29,461,24],[662,6,461,24],[663,4,461,24],[664,6,461,24,"key"],[664,9,461,24],[665,6,461,24,"value"],[665,11,461,24],[666,8,461,24],[666,12,461,24,"_signInWithEthereum"],[666,31,461,24],[666,34,461,24,"_asyncToGenerator"],[666,51,461,24],[666,52,472,4],[666,63,472,29,"credentials"],[666,74,472,40],[666,76,472,42],[667,10,473,8],[667,14,473,12,"_a"],[667,16,473,14],[667,18,473,16,"_b"],[667,20,473,18],[667,22,473,20,"_c"],[667,24,473,22],[667,26,473,24,"_d"],[667,28,473,26],[667,30,473,28,"_e"],[667,32,473,30],[667,34,473,32,"_f"],[667,36,473,34],[667,38,473,36,"_g"],[667,40,473,38],[667,42,473,40,"_h"],[667,44,473,42],[667,46,473,44,"_j"],[667,48,473,46],[667,50,473,48,"_k"],[667,52,473,50],[667,54,473,52,"_l"],[667,56,473,54],[668,10,474,8],[669,10,475,8],[669,14,475,12,"message"],[669,21,475,19],[670,10,476,8],[670,14,476,12,"signature"],[670,23,476,21],[671,10,477,8],[671,14,477,12],[671,23,477,21],[671,27,477,25,"credentials"],[671,38,477,36],[671,40,477,38],[672,12,478,12,"message"],[672,19,478,19],[672,22,478,22,"credentials"],[672,33,478,33],[672,34,478,34,"message"],[672,41,478,41],[673,12,479,12,"signature"],[673,21,479,21],[673,24,479,24,"credentials"],[673,35,479,35],[673,36,479,36,"signature"],[673,45,479,45],[674,10,480,8],[674,11,480,9],[674,17,481,13],[675,12,482,12],[675,16,482,20,"chain"],[675,21,482,25],[675,24,482,58,"credentials"],[675,35,482,69],[675,36,482,20,"chain"],[675,41,482,25],[676,14,482,27,"wallet"],[676,20,482,33],[676,23,482,58,"credentials"],[676,34,482,69],[676,35,482,27,"wallet"],[676,41,482,33],[677,14,482,35,"statement"],[677,23,482,44],[677,26,482,58,"credentials"],[677,37,482,69],[677,38,482,35,"statement"],[677,47,482,44],[678,14,482,46,"options"],[678,21,482,53],[678,24,482,58,"credentials"],[678,35,482,69],[678,36,482,46,"options"],[678,43,482,53],[679,12,483,12],[679,16,483,16,"resolvedWallet"],[679,30,483,30],[680,12,484,12],[680,16,484,16],[680,17,484,17],[680,18,484,18],[680,19,484,19],[680,21,484,21,"helpers_1"],[680,30,484,30],[680,31,484,31,"isBrowser"],[680,40,484,40],[680,42,484,42],[680,43,484,43],[680,45,484,45],[681,14,485,16],[681,18,485,20],[681,25,485,27,"wallet"],[681,31,485,33],[681,36,485,38],[681,44,485,46],[681,48,485,50],[681,50,485,52,"options"],[681,57,485,59],[681,62,485,64],[681,66,485,68],[681,70,485,72,"options"],[681,77,485,79],[681,82,485,84],[681,87,485,89],[681,88,485,90],[681,91,485,93],[681,96,485,98],[681,97,485,99],[681,100,485,102,"options"],[681,107,485,109],[681,108,485,110,"url"],[681,111,485,113],[681,112,485,114],[681,114,485,116],[682,16,486,20],[682,22,486,26],[682,26,486,30,"Error"],[682,31,486,35],[682,32,486,36],[682,119,486,123],[682,120,486,124],[683,14,487,16],[684,14,488,16,"resolvedWallet"],[684,28,488,30],[684,31,488,33,"wallet"],[684,37,488,39],[685,12,489,12],[685,13,489,13],[685,19,490,17],[685,23,490,21],[685,30,490,28,"wallet"],[685,36,490,34],[685,41,490,39],[685,49,490,47],[685,51,490,49],[686,14,491,16,"resolvedWallet"],[686,28,491,30],[686,31,491,33,"wallet"],[686,37,491,39],[687,12,492,12],[687,13,492,13],[687,19,493,17],[688,14,494,16],[688,18,494,22,"windowAny"],[688,27,494,31],[688,30,494,34,"window"],[688,36,494,40],[689,14,495,16],[689,18,495,20],[689,28,495,30],[689,32,495,34,"windowAny"],[689,41,495,43],[689,45,496,20],[689,52,496,27,"windowAny"],[689,61,496,36],[689,62,496,37,"ethereum"],[689,70,496,45],[689,75,496,50],[689,83,496,58],[689,87,497,20],[689,96,497,29],[689,100,497,33,"windowAny"],[689,109,497,42],[689,110,497,43,"ethereum"],[689,118,497,51],[689,122,498,20],[689,129,498,27,"windowAny"],[689,138,498,36],[689,139,498,37,"ethereum"],[689,147,498,45],[689,148,498,46,"request"],[689,155,498,53],[689,160,498,58],[689,170,498,68],[689,172,498,70],[690,16,499,20,"resolvedWallet"],[690,30,499,34],[690,33,499,37,"windowAny"],[690,42,499,46],[690,43,499,47,"ethereum"],[690,51,499,55],[691,14,500,16],[691,15,500,17],[691,21,501,21],[692,16,502,20],[692,22,502,26],[692,26,502,30,"Error"],[692,31,502,35],[692,32,502,36],[692,349,502,353],[692,350,502,354],[693,14,503,16],[694,12,504,12],[695,12,505,12],[695,16,505,18,"url"],[695,19,505,21],[695,22,505,24],[695,26,505,28,"URL"],[695,29,505,31],[695,30,505,32],[695,31,505,33,"_a"],[695,33,505,35],[695,36,505,38,"options"],[695,43,505,45],[695,48,505,50],[695,52,505,54],[695,56,505,58,"options"],[695,63,505,65],[695,68,505,70],[695,73,505,75],[695,74,505,76],[695,77,505,79],[695,82,505,84],[695,83,505,85],[695,86,505,88,"options"],[695,93,505,95],[695,94,505,96,"url"],[695,97,505,99],[695,103,505,105],[695,107,505,109],[695,111,505,113,"_a"],[695,113,505,115],[695,118,505,120],[695,123,505,125],[695,124,505,126],[695,127,505,129,"_a"],[695,129,505,131],[695,132,505,134,"window"],[695,138,505,140],[695,139,505,141,"location"],[695,147,505,149],[695,148,505,150,"href"],[695,152,505,154],[695,153,505,155],[696,12,506,12],[696,16,506,18,"accounts"],[696,24,506,26],[696,33,506,35,"resolvedWallet"],[696,47,506,49],[696,48,507,17,"request"],[696,55,507,24],[696,56,507,25],[697,14,508,16,"method"],[697,20,508,22],[697,22,508,24],[698,12,509,12],[698,13,509,13],[698,14,509,14],[698,15,510,17,"then"],[698,19,510,21],[698,20,510,23,"accs"],[698,24,510,27],[698,28,510,32,"accs"],[698,32,510,36],[698,33,510,37],[698,34,511,17,"catch"],[698,39,511,22],[698,40,511,23],[698,46,511,29],[699,14,512,16],[699,20,512,22],[699,24,512,26,"Error"],[699,29,512,31],[699,30,512,32],[699,106,512,108],[699,107,512,109],[700,12,513,12],[700,13,513,13],[700,14,513,14],[701,12,514,12],[701,16,514,16],[701,17,514,17,"accounts"],[701,25,514,25],[701,29,514,29,"accounts"],[701,37,514,37],[701,38,514,38,"length"],[701,44,514,44],[701,49,514,49],[701,50,514,50],[701,52,514,52],[702,14,515,16],[702,20,515,22],[702,24,515,26,"Error"],[702,29,515,31],[702,30,515,32],[702,112,515,114],[702,113,515,115],[703,12,516,12],[704,12,517,12],[704,16,517,18,"address"],[704,23,517,25],[704,26,517,28],[704,27,517,29],[704,28,517,30],[704,30,517,32,"ethereum_1"],[704,40,517,42],[704,41,517,43,"getAddress"],[704,51,517,53],[704,53,517,55,"accounts"],[704,61,517,63],[704,62,517,64],[704,63,517,65],[704,64,517,66],[704,65,517,67],[705,12,518,12],[705,16,518,16,"chainId"],[705,23,518,23],[705,26,518,26],[705,27,518,27,"_b"],[705,29,518,29],[705,32,518,32,"options"],[705,39,518,39],[705,44,518,44],[705,48,518,48],[705,52,518,52,"options"],[705,59,518,59],[705,64,518,64],[705,69,518,69],[705,70,518,70],[705,73,518,73],[705,78,518,78],[705,79,518,79],[705,82,518,82,"options"],[705,89,518,89],[705,90,518,90,"signInWithEthereum"],[705,108,518,108],[705,114,518,114],[705,118,518,118],[705,122,518,122,"_b"],[705,124,518,124],[705,129,518,129],[705,134,518,134],[705,135,518,135],[705,138,518,138],[705,143,518,143],[705,144,518,144],[705,147,518,147,"_b"],[705,149,518,149],[705,150,518,150,"chainId"],[705,157,518,157],[706,12,519,12],[706,16,519,16],[706,17,519,17,"chainId"],[706,24,519,24],[706,26,519,26],[707,14,520,16],[707,18,520,22,"chainIdHex"],[707,28,520,32],[707,37,520,41,"resolvedWallet"],[707,51,520,55],[707,52,520,56,"request"],[707,59,520,63],[707,60,520,64],[708,16,521,20,"method"],[708,22,521,26],[708,24,521,28],[709,14,522,16],[709,15,522,17],[709,16,522,18],[710,14,523,16,"chainId"],[710,21,523,23],[710,24,523,26],[710,25,523,27],[710,26,523,28],[710,28,523,30,"ethereum_1"],[710,38,523,40],[710,39,523,41,"fromHex"],[710,46,523,48],[710,48,523,50,"chainIdHex"],[710,58,523,60],[710,59,523,61],[711,12,524,12],[712,12,525,12],[712,16,525,18,"siweMessage"],[712,27,525,29],[712,30,525,32],[713,14,526,16,"domain"],[713,20,526,22],[713,22,526,24,"url"],[713,25,526,27],[713,26,526,28,"host"],[713,30,526,32],[714,14,527,16,"address"],[714,21,527,23],[714,23,527,25,"address"],[714,30,527,32],[715,14,528,16,"statement"],[715,23,528,25],[715,25,528,27,"statement"],[715,34,528,36],[716,14,529,16,"uri"],[716,17,529,19],[716,19,529,21,"url"],[716,22,529,24],[716,23,529,25,"href"],[716,27,529,29],[717,14,530,16,"version"],[717,21,530,23],[717,23,530,25],[717,26,530,28],[718,14,531,16,"chainId"],[718,21,531,23],[718,23,531,25,"chainId"],[718,30,531,32],[719,14,532,16,"nonce"],[719,19,532,21],[719,21,532,23],[719,22,532,24,"_c"],[719,24,532,26],[719,27,532,29,"options"],[719,34,532,36],[719,39,532,41],[719,43,532,45],[719,47,532,49,"options"],[719,54,532,56],[719,59,532,61],[719,64,532,66],[719,65,532,67],[719,68,532,70],[719,73,532,75],[719,74,532,76],[719,77,532,79,"options"],[719,84,532,86],[719,85,532,87,"signInWithEthereum"],[719,103,532,105],[719,109,532,111],[719,113,532,115],[719,117,532,119,"_c"],[719,119,532,121],[719,124,532,126],[719,129,532,131],[719,130,532,132],[719,133,532,135],[719,138,532,140],[719,139,532,141],[719,142,532,144,"_c"],[719,144,532,146],[719,145,532,147,"nonce"],[719,150,532,152],[720,14,533,16,"issuedAt"],[720,22,533,24],[720,24,533,26],[720,25,533,27,"_e"],[720,27,533,29],[720,30,533,32],[720,31,533,33,"_d"],[720,33,533,35],[720,36,533,38,"options"],[720,43,533,45],[720,48,533,50],[720,52,533,54],[720,56,533,58,"options"],[720,63,533,65],[720,68,533,70],[720,73,533,75],[720,74,533,76],[720,77,533,79],[720,82,533,84],[720,83,533,85],[720,86,533,88,"options"],[720,93,533,95],[720,94,533,96,"signInWithEthereum"],[720,112,533,114],[720,118,533,120],[720,122,533,124],[720,126,533,128,"_d"],[720,128,533,130],[720,133,533,135],[720,138,533,140],[720,139,533,141],[720,142,533,144],[720,147,533,149],[720,148,533,150],[720,151,533,153,"_d"],[720,153,533,155],[720,154,533,156,"issuedAt"],[720,162,533,164],[720,168,533,170],[720,172,533,174],[720,176,533,178,"_e"],[720,178,533,180],[720,183,533,185],[720,188,533,190],[720,189,533,191],[720,192,533,194,"_e"],[720,194,533,196],[720,197,533,199],[720,201,533,203,"Date"],[720,205,533,207],[720,206,533,208],[720,207,533,209],[721,14,534,16,"expirationTime"],[721,28,534,30],[721,30,534,32],[721,31,534,33,"_f"],[721,33,534,35],[721,36,534,38,"options"],[721,43,534,45],[721,48,534,50],[721,52,534,54],[721,56,534,58,"options"],[721,63,534,65],[721,68,534,70],[721,73,534,75],[721,74,534,76],[721,77,534,79],[721,82,534,84],[721,83,534,85],[721,86,534,88,"options"],[721,93,534,95],[721,94,534,96,"signInWithEthereum"],[721,112,534,114],[721,118,534,120],[721,122,534,124],[721,126,534,128,"_f"],[721,128,534,130],[721,133,534,135],[721,138,534,140],[721,139,534,141],[721,142,534,144],[721,147,534,149],[721,148,534,150],[721,151,534,153,"_f"],[721,153,534,155],[721,154,534,156,"expirationTime"],[721,168,534,170],[722,14,535,16,"notBefore"],[722,23,535,25],[722,25,535,27],[722,26,535,28,"_g"],[722,28,535,30],[722,31,535,33,"options"],[722,38,535,40],[722,43,535,45],[722,47,535,49],[722,51,535,53,"options"],[722,58,535,60],[722,63,535,65],[722,68,535,70],[722,69,535,71],[722,72,535,74],[722,77,535,79],[722,78,535,80],[722,81,535,83,"options"],[722,88,535,90],[722,89,535,91,"signInWithEthereum"],[722,107,535,109],[722,113,535,115],[722,117,535,119],[722,121,535,123,"_g"],[722,123,535,125],[722,128,535,130],[722,133,535,135],[722,134,535,136],[722,137,535,139],[722,142,535,144],[722,143,535,145],[722,146,535,148,"_g"],[722,148,535,150],[722,149,535,151,"notBefore"],[722,158,535,160],[723,14,536,16,"requestId"],[723,23,536,25],[723,25,536,27],[723,26,536,28,"_h"],[723,28,536,30],[723,31,536,33,"options"],[723,38,536,40],[723,43,536,45],[723,47,536,49],[723,51,536,53,"options"],[723,58,536,60],[723,63,536,65],[723,68,536,70],[723,69,536,71],[723,72,536,74],[723,77,536,79],[723,78,536,80],[723,81,536,83,"options"],[723,88,536,90],[723,89,536,91,"signInWithEthereum"],[723,107,536,109],[723,113,536,115],[723,117,536,119],[723,121,536,123,"_h"],[723,123,536,125],[723,128,536,130],[723,133,536,135],[723,134,536,136],[723,137,536,139],[723,142,536,144],[723,143,536,145],[723,146,536,148,"_h"],[723,148,536,150],[723,149,536,151,"requestId"],[723,158,536,160],[724,14,537,16,"resources"],[724,23,537,25],[724,25,537,27],[724,26,537,28,"_j"],[724,28,537,30],[724,31,537,33,"options"],[724,38,537,40],[724,43,537,45],[724,47,537,49],[724,51,537,53,"options"],[724,58,537,60],[724,63,537,65],[724,68,537,70],[724,69,537,71],[724,72,537,74],[724,77,537,79],[724,78,537,80],[724,81,537,83,"options"],[724,88,537,90],[724,89,537,91,"signInWithEthereum"],[724,107,537,109],[724,113,537,115],[724,117,537,119],[724,121,537,123,"_j"],[724,123,537,125],[724,128,537,130],[724,133,537,135],[724,134,537,136],[724,137,537,139],[724,142,537,144],[724,143,537,145],[724,146,537,148,"_j"],[724,148,537,150],[724,149,537,151,"resources"],[725,12,538,12],[725,13,538,13],[726,12,539,12,"message"],[726,19,539,19],[726,22,539,22],[726,23,539,23],[726,24,539,24],[726,26,539,26,"ethereum_1"],[726,36,539,36],[726,37,539,37,"createSiweMessage"],[726,54,539,54],[726,56,539,56,"siweMessage"],[726,67,539,67],[726,68,539,68],[727,12,540,12],[728,12,541,12,"signature"],[728,21,541,21],[728,30,541,31,"resolvedWallet"],[728,44,541,45],[728,45,541,46,"request"],[728,52,541,53],[728,53,541,54],[729,14,542,16,"method"],[729,20,542,22],[729,22,542,24],[729,37,542,39],[730,14,543,16,"params"],[730,20,543,22],[730,22,543,24],[730,23,543,25],[730,24,543,26],[730,25,543,27],[730,27,543,29,"ethereum_1"],[730,37,543,39],[730,38,543,40,"toHex"],[730,43,543,45],[730,45,543,47,"message"],[730,52,543,54],[730,53,543,55],[730,55,543,57,"address"],[730,62,543,64],[731,12,544,12],[731,13,544,13],[731,14,544,15],[732,10,545,8],[733,10,546,8],[733,14,546,12],[734,12,547,12],[734,16,547,12,"_yield3"],[734,23,547,12],[734,32,547,42],[734,33,547,43],[734,34,547,44],[734,36,547,46,"fetch_1"],[734,43,547,53],[734,44,547,54,"_request"],[734,52,547,62],[734,54,547,64],[734,58,547,68],[734,59,547,69,"fetch"],[734,64,547,74],[734,66,547,76],[734,72,547,82],[734,74,547,84],[734,77,547,87],[734,81,547,91],[734,82,547,92,"url"],[734,85,547,95],[734,109,547,119],[734,111,547,121],[735,16,548,16,"headers"],[735,23,548,23],[735,25,548,25],[735,29,548,29],[735,30,548,30,"headers"],[735,37,548,37],[736,16,549,16,"body"],[736,20,549,20],[736,22,549,22,"Object"],[736,28,549,28],[736,29,549,29,"assign"],[736,35,549,35],[736,36,549,36],[737,18,549,38,"chain"],[737,23,549,43],[737,25,549,45],[737,35,549,55],[738,18,549,57,"message"],[738,25,549,64],[739,18,550,20,"signature"],[740,16,550,30],[740,17,550,31],[740,19,550,34],[740,20,550,35],[740,21,550,36,"_k"],[740,23,550,38],[740,26,550,41,"credentials"],[740,37,550,52],[740,38,550,53,"options"],[740,45,550,60],[740,51,550,66],[740,55,550,70],[740,59,550,74,"_k"],[740,61,550,76],[740,66,550,81],[740,71,550,86],[740,72,550,87],[740,75,550,90],[740,80,550,95],[740,81,550,96],[740,84,550,99,"_k"],[740,86,550,101],[740,87,550,102,"captchaToken"],[740,99,550,114],[740,103,551,22],[741,18,551,24,"gotrue_meta_security"],[741,38,551,44],[741,40,551,46],[742,20,551,48,"captcha_token"],[742,33,551,61],[742,35,551,63],[742,36,551,64,"_l"],[742,38,551,66],[742,41,551,69,"credentials"],[742,52,551,80],[742,53,551,81,"options"],[742,60,551,88],[742,66,551,94],[742,70,551,98],[742,74,551,102,"_l"],[742,76,551,104],[742,81,551,109],[742,86,551,114],[742,87,551,115],[742,90,551,118],[742,95,551,123],[742,96,551,124],[742,99,551,127,"_l"],[742,101,551,129],[742,102,551,130,"captchaToken"],[743,18,551,143],[744,16,551,145],[744,17,551,146],[744,20,552,22],[744,24,552,27],[744,25,552,28],[745,16,553,16,"xform"],[745,21,553,21],[745,23,553,23,"fetch_1"],[745,30,553,30],[745,31,553,31,"_sessionResponse"],[746,14,554,12],[746,15,554,13],[746,16,554,14],[747,14,547,20,"data"],[747,18,547,24],[747,21,547,24,"_yield3"],[747,28,547,24],[747,29,547,20,"data"],[747,33,547,24],[748,14,547,26,"error"],[748,19,547,31],[748,22,547,31,"_yield3"],[748,29,547,31],[748,30,547,26,"error"],[748,35,547,31],[749,12,555,12],[749,16,555,16,"error"],[749,21,555,21],[749,23,555,23],[750,14,556,16],[750,20,556,22,"error"],[750,25,556,27],[751,12,557,12],[752,12,558,12],[752,16,558,16],[752,17,558,17,"data"],[752,21,558,21],[752,25,558,25],[752,26,558,26,"data"],[752,30,558,30],[752,31,558,31,"session"],[752,38,558,38],[752,42,558,42],[752,43,558,43,"data"],[752,47,558,47],[752,48,558,48,"user"],[752,52,558,52],[752,54,558,54],[753,14,559,16],[753,21,559,23],[754,16,560,20,"data"],[754,20,560,24],[754,22,560,26],[755,18,560,28,"user"],[755,22,560,32],[755,24,560,34],[755,28,560,38],[756,18,560,40,"session"],[756,25,560,47],[756,27,560,49],[757,16,560,54],[757,17,560,55],[758,16,561,20,"error"],[758,21,561,25],[758,23,561,27],[758,27,561,31,"errors_1"],[758,35,561,39],[758,36,561,40,"AuthInvalidTokenResponseError"],[758,65,561,69],[758,66,561,70],[759,14,562,16],[759,15,562,17],[760,12,563,12],[761,12,564,12],[761,16,564,16,"data"],[761,20,564,20],[761,21,564,21,"session"],[761,28,564,28],[761,30,564,30],[762,14,565,16],[762,20,565,22],[762,24,565,26],[762,25,565,27,"_saveSession"],[762,37,565,39],[762,38,565,40,"data"],[762,42,565,44],[762,43,565,45,"session"],[762,50,565,52],[762,51,565,53],[763,14,566,16],[763,20,566,22],[763,24,566,26],[763,25,566,27,"_notifyAllSubscribers"],[763,46,566,48],[763,47,566,49],[763,58,566,60],[763,60,566,62,"data"],[763,64,566,66],[763,65,566,67,"session"],[763,72,566,74],[763,73,566,75],[764,12,567,12],[765,12,568,12],[765,19,568,19],[766,14,568,21,"data"],[766,18,568,25],[766,20,568,27,"Object"],[766,26,568,33],[766,27,568,34,"assign"],[766,33,568,40],[766,34,568,41],[766,35,568,42],[766,36,568,43],[766,38,568,45,"data"],[766,42,568,49],[766,43,568,50],[767,14,568,52,"error"],[768,12,568,58],[768,13,568,59],[769,10,569,8],[769,11,569,9],[769,12,570,8],[769,19,570,15,"error"],[769,24,570,20],[769,26,570,22],[770,12,571,12],[770,16,571,16],[770,17,571,17],[770,18,571,18],[770,20,571,20,"errors_1"],[770,28,571,28],[770,29,571,29,"isAuthError"],[770,40,571,40],[770,42,571,42,"error"],[770,47,571,47],[770,48,571,48],[770,50,571,50],[771,14,572,16],[771,21,572,23],[772,16,572,25,"data"],[772,20,572,29],[772,22,572,31],[773,18,572,33,"user"],[773,22,572,37],[773,24,572,39],[773,28,572,43],[774,18,572,45,"session"],[774,25,572,52],[774,27,572,54],[775,16,572,59],[775,17,572,60],[776,16,572,62,"error"],[777,14,572,68],[777,15,572,69],[778,12,573,12],[779,12,574,12],[779,18,574,18,"error"],[779,23,574,23],[780,10,575,8],[781,8,576,4],[781,9,576,5],[782,8,576,5],[782,17,472,10,"signInWithEthereum"],[782,35,472,28,"signInWithEthereum"],[782,36,472,28,"_x1"],[782,39,472,28],[783,10,472,28],[783,17,472,28,"_signInWithEthereum"],[783,36,472,28],[783,37,472,28,"apply"],[783,42,472,28],[783,49,472,28,"arguments"],[783,58,472,28],[784,8,472,28],[785,8,472,28],[785,15,472,10,"signInWithEthereum"],[785,33,472,28],[786,6,472,28],[787,4,472,28],[788,6,472,28,"key"],[788,9,472,28],[789,6,472,28,"value"],[789,11,472,28],[790,8,472,28],[790,12,472,28,"_signInWithSolana"],[790,29,472,28],[790,32,472,28,"_asyncToGenerator"],[790,49,472,28],[790,50,577,4],[790,61,577,27,"credentials"],[790,72,577,38],[790,74,577,40],[791,10,578,8],[791,14,578,12,"_a"],[791,16,578,14],[791,18,578,16,"_b"],[791,20,578,18],[791,22,578,20,"_c"],[791,24,578,22],[791,26,578,24,"_d"],[791,28,578,26],[791,30,578,28,"_e"],[791,32,578,30],[791,34,578,32,"_f"],[791,36,578,34],[791,38,578,36,"_g"],[791,40,578,38],[791,42,578,40,"_h"],[791,44,578,42],[791,46,578,44,"_j"],[791,48,578,46],[791,50,578,48,"_k"],[791,52,578,50],[791,54,578,52,"_l"],[791,56,578,54],[791,58,578,56,"_m"],[791,60,578,58],[792,10,579,8],[792,14,579,12,"message"],[792,21,579,19],[793,10,580,8],[793,14,580,12,"signature"],[793,23,580,21],[794,10,581,8],[794,14,581,12],[794,23,581,21],[794,27,581,25,"credentials"],[794,38,581,36],[794,40,581,38],[795,12,582,12,"message"],[795,19,582,19],[795,22,582,22,"credentials"],[795,33,582,33],[795,34,582,34,"message"],[795,41,582,41],[796,12,583,12,"signature"],[796,21,583,21],[796,24,583,24,"credentials"],[796,35,583,35],[796,36,583,36,"signature"],[796,45,583,45],[797,10,584,8],[797,11,584,9],[797,17,585,13],[798,12,586,12],[798,16,586,20,"chain"],[798,21,586,25],[798,24,586,58,"credentials"],[798,35,586,69],[798,36,586,20,"chain"],[798,41,586,25],[799,14,586,27,"wallet"],[799,20,586,33],[799,23,586,58,"credentials"],[799,34,586,69],[799,35,586,27,"wallet"],[799,41,586,33],[800,14,586,35,"statement"],[800,23,586,44],[800,26,586,58,"credentials"],[800,37,586,69],[800,38,586,35,"statement"],[800,47,586,44],[801,14,586,46,"options"],[801,21,586,53],[801,24,586,58,"credentials"],[801,35,586,69],[801,36,586,46,"options"],[801,43,586,53],[802,12,587,12],[802,16,587,16,"resolvedWallet"],[802,30,587,30],[803,12,588,12],[803,16,588,16],[803,17,588,17],[803,18,588,18],[803,19,588,19],[803,21,588,21,"helpers_1"],[803,30,588,30],[803,31,588,31,"isBrowser"],[803,40,588,40],[803,42,588,42],[803,43,588,43],[803,45,588,45],[804,14,589,16],[804,18,589,20],[804,25,589,27,"wallet"],[804,31,589,33],[804,36,589,38],[804,44,589,46],[804,48,589,50],[804,50,589,52,"options"],[804,57,589,59],[804,62,589,64],[804,66,589,68],[804,70,589,72,"options"],[804,77,589,79],[804,82,589,84],[804,87,589,89],[804,88,589,90],[804,91,589,93],[804,96,589,98],[804,97,589,99],[804,100,589,102,"options"],[804,107,589,109],[804,108,589,110,"url"],[804,111,589,113],[804,112,589,114],[804,114,589,116],[805,16,590,20],[805,22,590,26],[805,26,590,30,"Error"],[805,31,590,35],[805,32,590,36],[805,119,590,123],[805,120,590,124],[806,14,591,16],[807,14,592,16,"resolvedWallet"],[807,28,592,30],[807,31,592,33,"wallet"],[807,37,592,39],[808,12,593,12],[808,13,593,13],[808,19,594,17],[808,23,594,21],[808,30,594,28,"wallet"],[808,36,594,34],[808,41,594,39],[808,49,594,47],[808,51,594,49],[809,14,595,16,"resolvedWallet"],[809,28,595,30],[809,31,595,33,"wallet"],[809,37,595,39],[810,12,596,12],[810,13,596,13],[810,19,597,17],[811,14,598,16],[811,18,598,22,"windowAny"],[811,27,598,31],[811,30,598,34,"window"],[811,36,598,40],[812,14,599,16],[812,18,599,20],[812,26,599,28],[812,30,599,32,"windowAny"],[812,39,599,41],[812,43,600,20],[812,50,600,27,"windowAny"],[812,59,600,36],[812,60,600,37,"solana"],[812,66,600,43],[812,71,600,48],[812,79,600,56],[812,84,601,22],[812,92,601,30],[812,96,601,34,"windowAny"],[812,105,601,43],[812,106,601,44,"solana"],[812,112,601,50],[812,116,601,54],[812,123,601,61,"windowAny"],[812,132,601,70],[812,133,601,71,"solana"],[812,139,601,77],[812,140,601,78,"signIn"],[812,146,601,84],[812,151,601,89],[812,161,601,99],[812,165,602,25],[812,178,602,38],[812,182,602,42,"windowAny"],[812,191,602,51],[812,192,602,52,"solana"],[812,198,602,58],[812,202,603,28],[812,209,603,35,"windowAny"],[812,218,603,44],[812,219,603,45,"solana"],[812,225,603,51],[812,226,603,52,"signMessage"],[812,237,603,63],[812,242,603,68],[812,252,603,79],[812,253,603,80],[812,255,603,82],[813,16,604,20,"resolvedWallet"],[813,30,604,34],[813,33,604,37,"windowAny"],[813,42,604,46],[813,43,604,47,"solana"],[813,49,604,53],[814,14,605,16],[814,15,605,17],[814,21,606,21],[815,16,607,20],[815,22,607,26],[815,26,607,30,"Error"],[815,31,607,35],[815,32,607,36],[815,343,607,347],[815,344,607,348],[816,14,608,16],[817,12,609,12],[818,12,610,12],[818,16,610,18,"url"],[818,19,610,21],[818,22,610,24],[818,26,610,28,"URL"],[818,29,610,31],[818,30,610,32],[818,31,610,33,"_a"],[818,33,610,35],[818,36,610,38,"options"],[818,43,610,45],[818,48,610,50],[818,52,610,54],[818,56,610,58,"options"],[818,63,610,65],[818,68,610,70],[818,73,610,75],[818,74,610,76],[818,77,610,79],[818,82,610,84],[818,83,610,85],[818,86,610,88,"options"],[818,93,610,95],[818,94,610,96,"url"],[818,97,610,99],[818,103,610,105],[818,107,610,109],[818,111,610,113,"_a"],[818,113,610,115],[818,118,610,120],[818,123,610,125],[818,124,610,126],[818,127,610,129,"_a"],[818,129,610,131],[818,132,610,134,"window"],[818,138,610,140],[818,139,610,141,"location"],[818,147,610,149],[818,148,610,150,"href"],[818,152,610,154],[818,153,610,155],[819,12,611,12],[819,16,611,16],[819,24,611,24],[819,28,611,28,"resolvedWallet"],[819,42,611,42],[819,46,611,46,"resolvedWallet"],[819,60,611,60],[819,61,611,61,"signIn"],[819,67,611,67],[819,69,611,69],[820,14,612,16],[820,18,612,22,"output"],[820,24,612,28],[820,33,612,37,"resolvedWallet"],[820,47,612,51],[820,48,612,52,"signIn"],[820,54,612,58],[820,55,612,59,"Object"],[820,61,612,65],[820,62,612,66,"assign"],[820,68,612,72],[820,69,612,73,"Object"],[820,75,612,79],[820,76,612,80,"assign"],[820,82,612,86],[820,83,612,87,"Object"],[820,89,612,93],[820,90,612,94,"assign"],[820,96,612,100],[820,97,612,101],[821,16,612,103,"issuedAt"],[821,24,612,111],[821,26,612,113],[821,30,612,117,"Date"],[821,34,612,121],[821,35,612,122],[821,36,612,123],[821,37,612,124,"toISOString"],[821,48,612,135],[821,49,612,136],[822,14,612,138],[822,15,612,139],[822,17,612,141,"options"],[822,24,612,148],[822,29,612,153],[822,33,612,157],[822,37,612,161,"options"],[822,44,612,168],[822,49,612,173],[822,54,612,178],[822,55,612,179],[822,58,612,182],[822,63,612,187],[822,64,612,188],[822,67,612,191,"options"],[822,74,612,198],[822,75,612,199,"signInWithSolana"],[822,91,612,215],[822,92,612,216],[822,94,612,218],[823,16,613,20],[824,16,614,20,"version"],[824,23,614,27],[824,25,614,29],[824,28,614,32],[825,16,614,34,"domain"],[825,22,614,40],[825,24,614,42,"url"],[825,27,614,45],[825,28,614,46,"host"],[825,32,614,50],[826,16,614,52,"uri"],[826,19,614,55],[826,21,614,57,"url"],[826,24,614,60],[826,25,614,61,"href"],[827,14,614,66],[827,15,614,67],[827,16,614,68],[827,18,614,71,"statement"],[827,27,614,80],[827,30,614,83],[828,16,614,85,"statement"],[829,14,614,95],[829,15,614,96],[829,18,614,99],[829,22,614,104],[829,23,614,105],[829,24,614,106],[830,14,615,16],[830,18,615,20,"outputToProcess"],[830,33,615,35],[831,14,616,16],[831,18,616,20,"Array"],[831,23,616,25],[831,24,616,26,"isArray"],[831,31,616,33],[831,32,616,34,"output"],[831,38,616,40],[831,39,616,41],[831,43,616,45,"output"],[831,49,616,51],[831,50,616,52],[831,51,616,53],[831,52,616,54],[831,56,616,58],[831,63,616,65,"output"],[831,69,616,71],[831,70,616,72],[831,71,616,73],[831,72,616,74],[831,77,616,79],[831,85,616,87],[831,87,616,89],[832,16,617,20,"outputToProcess"],[832,31,617,35],[832,34,617,38,"output"],[832,40,617,44],[832,41,617,45],[832,42,617,46],[832,43,617,47],[833,14,618,16],[833,15,618,17],[833,21,619,21],[833,25,619,25,"output"],[833,31,619,31],[833,35,620,20],[833,42,620,27,"output"],[833,48,620,33],[833,53,620,38],[833,61,620,46],[833,65,621,20],[833,80,621,35],[833,84,621,39,"output"],[833,90,621,45],[833,94,622,20],[833,105,622,31],[833,109,622,35,"output"],[833,115,622,41],[833,117,622,43],[834,16,623,20,"outputToProcess"],[834,31,623,35],[834,34,623,38,"output"],[834,40,623,44],[835,14,624,16],[835,15,624,17],[835,21,625,21],[836,16,626,20],[836,22,626,26],[836,26,626,30,"Error"],[836,31,626,35],[836,32,626,36],[836,103,626,107],[836,104,626,108],[837,14,627,16],[838,14,628,16],[838,18,628,20],[838,33,628,35],[838,37,628,39,"outputToProcess"],[838,52,628,54],[838,56,629,20],[838,67,629,31],[838,71,629,35,"outputToProcess"],[838,86,629,50],[838,91,630,21],[838,98,630,28,"outputToProcess"],[838,113,630,43],[838,114,630,44,"signedMessage"],[838,127,630,57],[838,132,630,62],[838,140,630,70],[838,144,631,24,"outputToProcess"],[838,159,631,39],[838,160,631,40,"signedMessage"],[838,173,631,53],[838,185,631,65,"Uint8Array"],[838,195,631,75],[838,196,631,76],[838,200,632,20,"outputToProcess"],[838,215,632,35],[838,216,632,36,"signature"],[838,225,632,45],[838,237,632,57,"Uint8Array"],[838,247,632,67],[838,249,632,69],[839,16,633,20,"message"],[839,23,633,27],[839,26,634,24],[839,33,634,31,"outputToProcess"],[839,48,634,46],[839,49,634,47,"signedMessage"],[839,62,634,60],[839,67,634,65],[839,75,634,73],[839,78,635,30,"outputToProcess"],[839,93,635,45],[839,94,635,46,"signedMessage"],[839,107,635,59],[839,110,636,30],[839,114,636,34,"TextDecoder"],[839,125,636,45],[839,126,636,46],[839,127,636,47],[839,128,636,48,"decode"],[839,134,636,54],[839,135,636,55,"outputToProcess"],[839,150,636,70],[839,151,636,71,"signedMessage"],[839,164,636,84],[839,165,636,85],[840,16,637,20,"signature"],[840,25,637,29],[840,28,637,32,"outputToProcess"],[840,43,637,47],[840,44,637,48,"signature"],[840,53,637,57],[841,14,638,16],[841,15,638,17],[841,21,639,21],[842,16,640,20],[842,22,640,26],[842,26,640,30,"Error"],[842,31,640,35],[842,32,640,36],[842,138,640,142],[842,139,640,143],[843,14,641,16],[844,12,642,12],[844,13,642,13],[844,19,643,17],[845,14,644,16],[845,18,644,20],[845,20,644,22],[845,33,644,35],[845,37,644,39,"resolvedWallet"],[845,51,644,53],[845,52,644,54],[845,56,645,20],[845,63,645,27,"resolvedWallet"],[845,77,645,41],[845,78,645,42,"signMessage"],[845,89,645,53],[845,94,645,58],[845,104,645,68],[845,108,646,20],[845,110,646,22],[845,121,646,33],[845,125,646,37,"resolvedWallet"],[845,139,646,51],[845,140,646,52],[845,144,647,20],[845,151,647,27,"resolvedWallet"],[845,165,647,41],[845,170,647,46],[845,178,647,54],[845,182,648,20],[845,183,648,21,"resolvedWallet"],[845,197,648,35],[845,198,648,36,"publicKey"],[845,207,648,45],[845,211,649,20],[845,213,649,22],[845,223,649,32],[845,227,649,36,"resolvedWallet"],[845,241,649,50],[845,242,649,51,"publicKey"],[845,251,649,60],[845,252,649,61],[845,256,650,20],[845,263,650,27,"resolvedWallet"],[845,277,650,41],[845,278,650,42,"publicKey"],[845,287,650,51],[845,288,650,52,"toBase58"],[845,296,650,60],[845,301,650,65],[845,311,650,75],[845,313,650,77],[846,16,651,20],[846,22,651,26],[846,26,651,30,"Error"],[846,31,651,35],[846,32,651,36],[846,129,651,133],[846,130,651,134],[847,14,652,16],[848,14,653,16,"message"],[848,21,653,23],[848,24,653,26],[848,25,654,20],[848,28,654,23,"url"],[848,31,654,26],[848,32,654,27,"host"],[848,36,654,31],[848,85,654,80],[848,87,655,20,"resolvedWallet"],[848,101,655,34],[848,102,655,35,"publicKey"],[848,111,655,44],[848,112,655,45,"toBase58"],[848,120,655,53],[848,121,655,54],[848,122,655,55],[848,124,656,20],[848,128,656,24,"statement"],[848,137,656,33],[848,140,656,36],[848,141,656,37],[848,143,656,39],[848,145,656,41,"statement"],[848,154,656,50],[848,156,656,52],[848,158,656,54],[848,159,656,55],[848,162,656,58],[848,163,656,59],[848,165,656,61],[848,166,656,62],[848,167,656,63],[848,169,657,20],[848,181,657,32],[848,183,658,20],[848,191,658,28,"url"],[848,194,658,31],[848,195,658,32,"href"],[848,199,658,36],[848,201,658,38],[848,203,659,20],[848,217,659,34],[848,218,659,35,"_c"],[848,220,659,37],[848,223,659,40],[848,224,659,41,"_b"],[848,226,659,43],[848,229,659,46,"options"],[848,236,659,53],[848,241,659,58],[848,245,659,62],[848,249,659,66,"options"],[848,256,659,73],[848,261,659,78],[848,266,659,83],[848,267,659,84],[848,270,659,87],[848,275,659,92],[848,276,659,93],[848,279,659,96,"options"],[848,286,659,103],[848,287,659,104,"signInWithSolana"],[848,303,659,120],[848,309,659,126],[848,313,659,130],[848,317,659,134,"_b"],[848,319,659,136],[848,324,659,141],[848,329,659,146],[848,330,659,147],[848,333,659,150],[848,338,659,155],[848,339,659,156],[848,342,659,159,"_b"],[848,344,659,161],[848,345,659,162,"issuedAt"],[848,353,659,170],[848,359,659,176],[848,363,659,180],[848,367,659,184,"_c"],[848,369,659,186],[848,374,659,191],[848,379,659,196],[848,380,659,197],[848,383,659,200,"_c"],[848,385,659,202],[848,388,659,205],[848,392,659,209,"Date"],[848,396,659,213],[848,397,659,214],[848,398,659,215],[848,399,659,216,"toISOString"],[848,410,659,227],[848,411,659,228],[848,412,659,229],[848,414,659,231],[848,416,660,20],[848,420,660,24],[848,421,660,25],[848,422,660,26,"_d"],[848,424,660,28],[848,427,660,31,"options"],[848,434,660,38],[848,439,660,43],[848,443,660,47],[848,447,660,51,"options"],[848,454,660,58],[848,459,660,63],[848,464,660,68],[848,465,660,69],[848,468,660,72],[848,473,660,77],[848,474,660,78],[848,477,660,81,"options"],[848,484,660,88],[848,485,660,89,"signInWithSolana"],[848,501,660,105],[848,507,660,111],[848,511,660,115],[848,515,660,119,"_d"],[848,517,660,121],[848,522,660,126],[848,527,660,131],[848,528,660,132],[848,531,660,135],[848,536,660,140],[848,537,660,141],[848,540,660,144,"_d"],[848,542,660,146],[848,543,660,147,"notBefore"],[848,552,660,156],[848,556,661,26],[848,557,661,27],[848,572,661,42,"options"],[848,579,661,49],[848,580,661,50,"signInWithSolana"],[848,596,661,66],[848,597,661,67,"notBefore"],[848,606,661,76],[848,608,661,78],[848,609,661,79],[848,612,662,26],[848,614,662,28],[848,615,662,29],[848,617,663,20],[848,621,663,24],[848,622,663,25],[848,623,663,26,"_e"],[848,625,663,28],[848,628,663,31,"options"],[848,635,663,38],[848,640,663,43],[848,644,663,47],[848,648,663,51,"options"],[848,655,663,58],[848,660,663,63],[848,665,663,68],[848,666,663,69],[848,669,663,72],[848,674,663,77],[848,675,663,78],[848,678,663,81,"options"],[848,685,663,88],[848,686,663,89,"signInWithSolana"],[848,702,663,105],[848,708,663,111],[848,712,663,115],[848,716,663,119,"_e"],[848,718,663,121],[848,723,663,126],[848,728,663,131],[848,729,663,132],[848,732,663,135],[848,737,663,140],[848,738,663,141],[848,741,663,144,"_e"],[848,743,663,146],[848,744,663,147,"expirationTime"],[848,758,663,161],[848,762,664,26],[848,763,664,27],[848,783,664,47,"options"],[848,790,664,54],[848,791,664,55,"signInWithSolana"],[848,807,664,71],[848,808,664,72,"expirationTime"],[848,822,664,86],[848,824,664,88],[848,825,664,89],[848,828,665,26],[848,830,665,28],[848,831,665,29],[848,833,666,20],[848,837,666,24],[848,838,666,25],[848,839,666,26,"_f"],[848,841,666,28],[848,844,666,31,"options"],[848,851,666,38],[848,856,666,43],[848,860,666,47],[848,864,666,51,"options"],[848,871,666,58],[848,876,666,63],[848,881,666,68],[848,882,666,69],[848,885,666,72],[848,890,666,77],[848,891,666,78],[848,894,666,81,"options"],[848,901,666,88],[848,902,666,89,"signInWithSolana"],[848,918,666,105],[848,924,666,111],[848,928,666,115],[848,932,666,119,"_f"],[848,934,666,121],[848,939,666,126],[848,944,666,131],[848,945,666,132],[848,948,666,135],[848,953,666,140],[848,954,666,141],[848,957,666,144,"_f"],[848,959,666,146],[848,960,666,147,"chainId"],[848,967,666,154],[848,971,667,26],[848,972,667,27],[848,985,667,40,"options"],[848,992,667,47],[848,993,667,48,"signInWithSolana"],[848,1009,667,64],[848,1010,667,65,"chainId"],[848,1017,667,72],[848,1019,667,74],[848,1020,667,75],[848,1023,668,26],[848,1025,668,28],[848,1026,668,29],[848,1028,669,20],[848,1032,669,24],[848,1033,669,25],[848,1034,669,26,"_g"],[848,1036,669,28],[848,1039,669,31,"options"],[848,1046,669,38],[848,1051,669,43],[848,1055,669,47],[848,1059,669,51,"options"],[848,1066,669,58],[848,1071,669,63],[848,1076,669,68],[848,1077,669,69],[848,1080,669,72],[848,1085,669,77],[848,1086,669,78],[848,1089,669,81,"options"],[848,1096,669,88],[848,1097,669,89,"signInWithSolana"],[848,1113,669,105],[848,1119,669,111],[848,1123,669,115],[848,1127,669,119,"_g"],[848,1129,669,121],[848,1134,669,126],[848,1139,669,131],[848,1140,669,132],[848,1143,669,135],[848,1148,669,140],[848,1149,669,141],[848,1152,669,144,"_g"],[848,1154,669,146],[848,1155,669,147,"nonce"],[848,1160,669,152],[848,1164,669,156],[848,1165,669,157],[848,1175,669,167,"options"],[848,1182,669,174],[848,1183,669,175,"signInWithSolana"],[848,1199,669,191],[848,1200,669,192,"nonce"],[848,1205,669,197],[848,1207,669,199],[848,1208,669,200],[848,1211,669,203],[848,1213,669,205],[848,1214,669,206],[848,1216,670,20],[848,1220,670,24],[848,1221,670,25],[848,1222,670,26,"_h"],[848,1224,670,28],[848,1227,670,31,"options"],[848,1234,670,38],[848,1239,670,43],[848,1243,670,47],[848,1247,670,51,"options"],[848,1254,670,58],[848,1259,670,63],[848,1264,670,68],[848,1265,670,69],[848,1268,670,72],[848,1273,670,77],[848,1274,670,78],[848,1277,670,81,"options"],[848,1284,670,88],[848,1285,670,89,"signInWithSolana"],[848,1301,670,105],[848,1307,670,111],[848,1311,670,115],[848,1315,670,119,"_h"],[848,1317,670,121],[848,1322,670,126],[848,1327,670,131],[848,1328,670,132],[848,1331,670,135],[848,1336,670,140],[848,1337,670,141],[848,1340,670,144,"_h"],[848,1342,670,146],[848,1343,670,147,"requestId"],[848,1352,670,156],[848,1356,671,26],[848,1357,671,27],[848,1372,671,42,"options"],[848,1379,671,49],[848,1380,671,50,"signInWithSolana"],[848,1396,671,66],[848,1397,671,67,"requestId"],[848,1406,671,76],[848,1408,671,78],[848,1409,671,79],[848,1412,672,26],[848,1414,672,28],[848,1415,672,29],[848,1417,673,20],[848,1421,673,24],[848,1422,673,25],[848,1423,673,26,"_k"],[848,1425,673,28],[848,1428,673,31],[848,1429,673,32,"_j"],[848,1431,673,34],[848,1434,673,37,"options"],[848,1441,673,44],[848,1446,673,49],[848,1450,673,53],[848,1454,673,57,"options"],[848,1461,673,64],[848,1466,673,69],[848,1471,673,74],[848,1472,673,75],[848,1475,673,78],[848,1480,673,83],[848,1481,673,84],[848,1484,673,87,"options"],[848,1491,673,94],[848,1492,673,95,"signInWithSolana"],[848,1508,673,111],[848,1514,673,117],[848,1518,673,121],[848,1522,673,125,"_j"],[848,1524,673,127],[848,1529,673,132],[848,1534,673,137],[848,1535,673,138],[848,1538,673,141],[848,1543,673,146],[848,1544,673,147],[848,1547,673,150,"_j"],[848,1549,673,152],[848,1550,673,153,"resources"],[848,1559,673,162],[848,1565,673,168],[848,1569,673,172],[848,1573,673,176,"_k"],[848,1575,673,178],[848,1580,673,183],[848,1585,673,188],[848,1586,673,189],[848,1589,673,192],[848,1594,673,197],[848,1595,673,198],[848,1598,673,201,"_k"],[848,1600,673,203],[848,1601,673,204,"length"],[848,1607,673,210],[848,1611,674,26],[848,1612,675,28],[848,1623,675,39],[848,1625,676,28],[848,1628,676,31,"options"],[848,1635,676,38],[848,1636,676,39,"signInWithSolana"],[848,1652,676,55],[848,1653,676,56,"resources"],[848,1662,676,65],[848,1663,676,66,"map"],[848,1666,676,69],[848,1667,676,71,"resource"],[848,1675,676,79],[848,1679,676,84],[848,1684,676,89,"resource"],[848,1692,676,97],[848,1694,676,99],[848,1695,676,100],[848,1696,677,25],[848,1699,678,26],[848,1701,678,28],[848,1702,678,29],[848,1703,679,17],[848,1704,679,18,"join"],[848,1708,679,22],[848,1709,679,23],[848,1713,679,27],[848,1714,679,28],[849,14,680,16],[849,18,680,22,"maybeSignature"],[849,32,680,36],[849,41,680,45,"resolvedWallet"],[849,55,680,59],[849,56,680,60,"signMessage"],[849,67,680,71],[849,68,680,72],[849,72,680,76,"TextEncoder"],[849,83,680,87],[849,84,680,88],[849,85,680,89],[849,86,680,90,"encode"],[849,92,680,96],[849,93,680,97,"message"],[849,100,680,104],[849,101,680,105],[849,103,680,107],[849,109,680,113],[849,110,680,114],[850,14,681,16],[850,18,681,20],[850,19,681,21,"maybeSignature"],[850,33,681,35],[850,37,681,39],[850,39,681,41,"maybeSignature"],[850,53,681,55],[850,65,681,67,"Uint8Array"],[850,75,681,77],[850,76,681,78],[850,78,681,80],[851,16,682,20],[851,22,682,26],[851,26,682,30,"Error"],[851,31,682,35],[851,32,682,36],[851,106,682,110],[851,107,682,111],[852,14,683,16],[853,14,684,16,"signature"],[853,23,684,25],[853,26,684,28,"maybeSignature"],[853,40,684,42],[854,12,685,12],[855,10,686,8],[856,10,687,8],[856,14,687,12],[857,12,688,12],[857,16,688,12,"_yield4"],[857,23,688,12],[857,32,688,42],[857,33,688,43],[857,34,688,44],[857,36,688,46,"fetch_1"],[857,43,688,53],[857,44,688,54,"_request"],[857,52,688,62],[857,54,688,64],[857,58,688,68],[857,59,688,69,"fetch"],[857,64,688,74],[857,66,688,76],[857,72,688,82],[857,74,688,84],[857,77,688,87],[857,81,688,91],[857,82,688,92,"url"],[857,85,688,95],[857,109,688,119],[857,111,688,121],[858,16,689,16,"headers"],[858,23,689,23],[858,25,689,25],[858,29,689,29],[858,30,689,30,"headers"],[858,37,689,37],[859,16,690,16,"body"],[859,20,690,20],[859,22,690,22,"Object"],[859,28,690,28],[859,29,690,29,"assign"],[859,35,690,35],[859,36,690,36],[860,18,690,38,"chain"],[860,23,690,43],[860,25,690,45],[860,33,690,53],[861,18,690,55,"message"],[861,25,690,62],[862,18,690,64,"signature"],[862,27,690,73],[862,29,690,75],[862,30,690,76],[862,31,690,77],[862,33,690,79,"base64url_1"],[862,44,690,90],[862,45,690,91,"bytesToBase64URL"],[862,61,690,107],[862,63,690,109,"signature"],[862,72,690,118],[863,16,690,120],[863,17,690,121],[863,19,690,124],[863,20,690,125],[863,21,690,126,"_l"],[863,23,690,128],[863,26,690,131,"credentials"],[863,37,690,142],[863,38,690,143,"options"],[863,45,690,150],[863,51,690,156],[863,55,690,160],[863,59,690,164,"_l"],[863,61,690,166],[863,66,690,171],[863,71,690,176],[863,72,690,177],[863,75,690,180],[863,80,690,185],[863,81,690,186],[863,84,690,189,"_l"],[863,86,690,191],[863,87,690,192,"captchaToken"],[863,99,690,204],[863,103,691,22],[864,18,691,24,"gotrue_meta_security"],[864,38,691,44],[864,40,691,46],[865,20,691,48,"captcha_token"],[865,33,691,61],[865,35,691,63],[865,36,691,64,"_m"],[865,38,691,66],[865,41,691,69,"credentials"],[865,52,691,80],[865,53,691,81,"options"],[865,60,691,88],[865,66,691,94],[865,70,691,98],[865,74,691,102,"_m"],[865,76,691,104],[865,81,691,109],[865,86,691,114],[865,87,691,115],[865,90,691,118],[865,95,691,123],[865,96,691,124],[865,99,691,127,"_m"],[865,101,691,129],[865,102,691,130,"captchaToken"],[866,18,691,143],[867,16,691,145],[867,17,691,146],[867,20,692,22],[867,24,692,27],[867,25,692,28],[868,16,693,16,"xform"],[868,21,693,21],[868,23,693,23,"fetch_1"],[868,30,693,30],[868,31,693,31,"_sessionResponse"],[869,14,694,12],[869,15,694,13],[869,16,694,14],[870,14,688,20,"data"],[870,18,688,24],[870,21,688,24,"_yield4"],[870,28,688,24],[870,29,688,20,"data"],[870,33,688,24],[871,14,688,26,"error"],[871,19,688,31],[871,22,688,31,"_yield4"],[871,29,688,31],[871,30,688,26,"error"],[871,35,688,31],[872,12,695,12],[872,16,695,16,"error"],[872,21,695,21],[872,23,695,23],[873,14,696,16],[873,20,696,22,"error"],[873,25,696,27],[874,12,697,12],[875,12,698,12],[875,16,698,16],[875,17,698,17,"data"],[875,21,698,21],[875,25,698,25],[875,26,698,26,"data"],[875,30,698,30],[875,31,698,31,"session"],[875,38,698,38],[875,42,698,42],[875,43,698,43,"data"],[875,47,698,47],[875,48,698,48,"user"],[875,52,698,52],[875,54,698,54],[876,14,699,16],[876,21,699,23],[877,16,700,20,"data"],[877,20,700,24],[877,22,700,26],[878,18,700,28,"user"],[878,22,700,32],[878,24,700,34],[878,28,700,38],[879,18,700,40,"session"],[879,25,700,47],[879,27,700,49],[880,16,700,54],[880,17,700,55],[881,16,701,20,"error"],[881,21,701,25],[881,23,701,27],[881,27,701,31,"errors_1"],[881,35,701,39],[881,36,701,40,"AuthInvalidTokenResponseError"],[881,65,701,69],[881,66,701,70],[882,14,702,16],[882,15,702,17],[883,12,703,12],[884,12,704,12],[884,16,704,16,"data"],[884,20,704,20],[884,21,704,21,"session"],[884,28,704,28],[884,30,704,30],[885,14,705,16],[885,20,705,22],[885,24,705,26],[885,25,705,27,"_saveSession"],[885,37,705,39],[885,38,705,40,"data"],[885,42,705,44],[885,43,705,45,"session"],[885,50,705,52],[885,51,705,53],[886,14,706,16],[886,20,706,22],[886,24,706,26],[886,25,706,27,"_notifyAllSubscribers"],[886,46,706,48],[886,47,706,49],[886,58,706,60],[886,60,706,62,"data"],[886,64,706,66],[886,65,706,67,"session"],[886,72,706,74],[886,73,706,75],[887,12,707,12],[888,12,708,12],[888,19,708,19],[889,14,708,21,"data"],[889,18,708,25],[889,20,708,27,"Object"],[889,26,708,33],[889,27,708,34,"assign"],[889,33,708,40],[889,34,708,41],[889,35,708,42],[889,36,708,43],[889,38,708,45,"data"],[889,42,708,49],[889,43,708,50],[890,14,708,52,"error"],[891,12,708,58],[891,13,708,59],[892,10,709,8],[892,11,709,9],[892,12,710,8],[892,19,710,15,"error"],[892,24,710,20],[892,26,710,22],[893,12,711,12],[893,16,711,16],[893,17,711,17],[893,18,711,18],[893,20,711,20,"errors_1"],[893,28,711,28],[893,29,711,29,"isAuthError"],[893,40,711,40],[893,42,711,42,"error"],[893,47,711,47],[893,48,711,48],[893,50,711,50],[894,14,712,16],[894,21,712,23],[895,16,712,25,"data"],[895,20,712,29],[895,22,712,31],[896,18,712,33,"user"],[896,22,712,37],[896,24,712,39],[896,28,712,43],[897,18,712,45,"session"],[897,25,712,52],[897,27,712,54],[898,16,712,59],[898,17,712,60],[899,16,712,62,"error"],[900,14,712,68],[900,15,712,69],[901,12,713,12],[902,12,714,12],[902,18,714,18,"error"],[902,23,714,23],[903,10,715,8],[904,8,716,4],[904,9,716,5],[905,8,716,5],[905,17,577,10,"signInWithSolana"],[905,33,577,26,"signInWithSolana"],[905,34,577,26,"_x10"],[905,38,577,26],[906,10,577,26],[906,17,577,26,"_signInWithSolana"],[906,34,577,26],[906,35,577,26,"apply"],[906,40,577,26],[906,47,577,26,"arguments"],[906,56,577,26],[907,8,577,26],[908,8,577,26],[908,15,577,10,"signInWithSolana"],[908,31,577,26],[909,6,577,26],[910,4,577,26],[911,6,577,26,"key"],[911,9,577,26],[912,6,577,26,"value"],[912,11,577,26],[913,8,577,26],[913,12,577,26,"_exchangeCodeForSession3"],[913,36,577,26],[913,39,577,26,"_asyncToGenerator"],[913,56,577,26],[913,57,717,4],[913,68,717,34,"authCode"],[913,76,717,42],[913,78,717,44],[914,10,718,8],[914,14,718,14,"storageItem"],[914,25,718,25],[914,34,718,34],[914,35,718,35],[914,36,718,36],[914,38,718,38,"helpers_1"],[914,47,718,47],[914,48,718,48,"getItemAsync"],[914,60,718,60],[914,62,718,62],[914,66,718,66],[914,67,718,67,"storage"],[914,74,718,74],[914,76,718,76],[914,79,718,79],[914,83,718,83],[914,84,718,84,"storageKey"],[914,94,718,94],[914,110,718,110],[914,111,718,111],[915,10,719,8],[915,14,719,8,"_split"],[915,20,719,8],[915,23,719,45],[915,24,719,46,"storageItem"],[915,35,719,57],[915,40,719,62],[915,44,719,66],[915,48,719,70,"storageItem"],[915,59,719,81],[915,64,719,86],[915,69,719,91],[915,70,719,92],[915,73,719,95,"storageItem"],[915,84,719,106],[915,87,719,109],[915,89,719,111],[915,91,719,113,"split"],[915,96,719,118],[915,97,719,119],[915,100,719,122],[915,101,719,123],[916,12,719,123,"_split2"],[916,19,719,123],[916,22,719,123,"_slicedToArray"],[916,36,719,123],[916,37,719,123,"_split"],[916,43,719,123],[917,12,719,15,"codeVerifier"],[917,24,719,27],[917,27,719,27,"_split2"],[917,34,719,27],[918,12,719,29,"redirectType"],[918,24,719,41],[918,27,719,41,"_split2"],[918,34,719,41],[919,10,720,8],[919,14,720,12],[920,12,721,12],[920,16,721,12,"_yield5"],[920,23,721,12],[920,32,721,42],[920,33,721,43],[920,34,721,44],[920,36,721,46,"fetch_1"],[920,43,721,53],[920,44,721,54,"_request"],[920,52,721,62],[920,54,721,64],[920,58,721,68],[920,59,721,69,"fetch"],[920,64,721,74],[920,66,721,76],[920,72,721,82],[920,74,721,84],[920,77,721,87],[920,81,721,91],[920,82,721,92,"url"],[920,85,721,95],[920,109,721,119],[920,111,721,121],[921,16,722,16,"headers"],[921,23,722,23],[921,25,722,25],[921,29,722,29],[921,30,722,30,"headers"],[921,37,722,37],[922,16,723,16,"body"],[922,20,723,20],[922,22,723,22],[923,18,724,20,"auth_code"],[923,27,724,29],[923,29,724,31,"authCode"],[923,37,724,39],[924,18,725,20,"code_verifier"],[924,31,725,33],[924,33,725,35,"codeVerifier"],[925,16,726,16],[925,17,726,17],[926,16,727,16,"xform"],[926,21,727,21],[926,23,727,23,"fetch_1"],[926,30,727,30],[926,31,727,31,"_sessionResponse"],[927,14,728,12],[927,15,728,13],[927,16,728,14],[928,14,721,20,"data"],[928,18,721,24],[928,21,721,24,"_yield5"],[928,28,721,24],[928,29,721,20,"data"],[928,33,721,24],[929,14,721,26,"error"],[929,19,721,31],[929,22,721,31,"_yield5"],[929,29,721,31],[929,30,721,26,"error"],[929,35,721,31],[930,12,729,12],[930,18,729,18],[930,19,729,19],[930,20,729,20],[930,22,729,22,"helpers_1"],[930,31,729,31],[930,32,729,32,"removeItemAsync"],[930,47,729,47],[930,49,729,49],[930,53,729,53],[930,54,729,54,"storage"],[930,61,729,61],[930,63,729,63],[930,66,729,66],[930,70,729,70],[930,71,729,71,"storageKey"],[930,81,729,81],[930,97,729,97],[930,98,729,98],[931,12,730,12],[931,16,730,16,"error"],[931,21,730,21],[931,23,730,23],[932,14,731,16],[932,20,731,22,"error"],[932,25,731,27],[933,12,732,12],[934,12,733,12],[934,16,733,16],[934,17,733,17,"data"],[934,21,733,21],[934,25,733,25],[934,26,733,26,"data"],[934,30,733,30],[934,31,733,31,"session"],[934,38,733,38],[934,42,733,42],[934,43,733,43,"data"],[934,47,733,47],[934,48,733,48,"user"],[934,52,733,52],[934,54,733,54],[935,14,734,16],[935,21,734,23],[936,16,735,20,"data"],[936,20,735,24],[936,22,735,26],[937,18,735,28,"user"],[937,22,735,32],[937,24,735,34],[937,28,735,38],[938,18,735,40,"session"],[938,25,735,47],[938,27,735,49],[938,31,735,53],[939,18,735,55,"redirectType"],[939,30,735,67],[939,32,735,69],[940,16,735,74],[940,17,735,75],[941,16,736,20,"error"],[941,21,736,25],[941,23,736,27],[941,27,736,31,"errors_1"],[941,35,736,39],[941,36,736,40,"AuthInvalidTokenResponseError"],[941,65,736,69],[941,66,736,70],[942,14,737,16],[942,15,737,17],[943,12,738,12],[944,12,739,12],[944,16,739,16,"data"],[944,20,739,20],[944,21,739,21,"session"],[944,28,739,28],[944,30,739,30],[945,14,740,16],[945,20,740,22],[945,24,740,26],[945,25,740,27,"_saveSession"],[945,37,740,39],[945,38,740,40,"data"],[945,42,740,44],[945,43,740,45,"session"],[945,50,740,52],[945,51,740,53],[946,14,741,16],[946,20,741,22],[946,24,741,26],[946,25,741,27,"_notifyAllSubscribers"],[946,46,741,48],[946,47,741,49],[946,58,741,60],[946,60,741,62,"data"],[946,64,741,66],[946,65,741,67,"session"],[946,72,741,74],[946,73,741,75],[947,12,742,12],[948,12,743,12],[948,19,743,19],[949,14,743,21,"data"],[949,18,743,25],[949,20,743,27,"Object"],[949,26,743,33],[949,27,743,34,"assign"],[949,33,743,40],[949,34,743,41,"Object"],[949,40,743,47],[949,41,743,48,"assign"],[949,47,743,54],[949,48,743,55],[949,49,743,56],[949,50,743,57],[949,52,743,59,"data"],[949,56,743,63],[949,57,743,64],[949,59,743,66],[950,16,743,68,"redirectType"],[950,28,743,80],[950,30,743,82,"redirectType"],[950,42,743,94],[950,47,743,99],[950,51,743,103],[950,55,743,107,"redirectType"],[950,67,743,119],[950,72,743,124],[950,77,743,129],[950,78,743,130],[950,81,743,133,"redirectType"],[950,93,743,145],[950,96,743,148],[951,14,743,153],[951,15,743,154],[951,16,743,155],[952,14,743,157,"error"],[953,12,743,163],[953,13,743,164],[954,10,744,8],[954,11,744,9],[954,12,745,8],[954,19,745,15,"error"],[954,24,745,20],[954,26,745,22],[955,12,746,12],[955,16,746,16],[955,17,746,17],[955,18,746,18],[955,20,746,20,"errors_1"],[955,28,746,28],[955,29,746,29,"isAuthError"],[955,40,746,40],[955,42,746,42,"error"],[955,47,746,47],[955,48,746,48],[955,50,746,50],[956,14,747,16],[956,21,747,23],[957,16,747,25,"data"],[957,20,747,29],[957,22,747,31],[958,18,747,33,"user"],[958,22,747,37],[958,24,747,39],[958,28,747,43],[959,18,747,45,"session"],[959,25,747,52],[959,27,747,54],[959,31,747,58],[960,18,747,60,"redirectType"],[960,30,747,72],[960,32,747,74],[961,16,747,79],[961,17,747,80],[962,16,747,82,"error"],[963,14,747,88],[963,15,747,89],[964,12,748,12],[965,12,749,12],[965,18,749,18,"error"],[965,23,749,23],[966,10,750,8],[967,8,751,4],[967,9,751,5],[968,8,751,5],[968,17,717,10,"_exchangeCodeForSession"],[968,40,717,33,"_exchangeCodeForSession"],[968,41,717,33,"_x11"],[968,45,717,33],[969,10,717,33],[969,17,717,33,"_exchangeCodeForSession3"],[969,41,717,33],[969,42,717,33,"apply"],[969,47,717,33],[969,54,717,33,"arguments"],[969,63,717,33],[970,8,717,33],[971,8,717,33],[971,15,717,10,"_exchangeCodeForSession"],[971,38,717,33],[972,6,717,33],[973,6,752,4],[974,0,753,0],[975,0,754,0],[976,0,755,0],[977,4,752,4],[978,6,752,4,"key"],[978,9,752,4],[979,6,752,4,"value"],[979,11,752,4],[980,8,752,4],[980,12,752,4,"_signInWithIdToken"],[980,30,752,4],[980,33,752,4,"_asyncToGenerator"],[980,50,752,4],[980,51,756,4],[980,62,756,28,"credentials"],[980,73,756,39],[980,75,756,41],[981,10,757,8],[981,14,757,12],[982,12,758,12],[982,16,758,20,"options"],[982,23,758,27],[982,26,758,70,"credentials"],[982,37,758,81],[982,38,758,20,"options"],[982,45,758,27],[983,14,758,29,"provider"],[983,22,758,37],[983,25,758,70,"credentials"],[983,36,758,81],[983,37,758,29,"provider"],[983,45,758,37],[984,14,758,39,"token"],[984,19,758,44],[984,22,758,70,"credentials"],[984,33,758,81],[984,34,758,39,"token"],[984,39,758,44],[985,14,758,46,"access_token"],[985,26,758,58],[985,29,758,70,"credentials"],[985,40,758,81],[985,41,758,46,"access_token"],[985,53,758,58],[986,14,758,60,"nonce"],[986,19,758,65],[986,22,758,70,"credentials"],[986,33,758,81],[986,34,758,60,"nonce"],[986,39,758,65],[987,12,759,12],[987,16,759,18,"res"],[987,19,759,21],[987,28,759,30],[987,29,759,31],[987,30,759,32],[987,32,759,34,"fetch_1"],[987,39,759,41],[987,40,759,42,"_request"],[987,48,759,50],[987,50,759,52],[987,54,759,56],[987,55,759,57,"fetch"],[987,60,759,62],[987,62,759,64],[987,68,759,70],[987,70,759,72],[987,73,759,75],[987,77,759,79],[987,78,759,80,"url"],[987,81,759,83],[987,109,759,111],[987,111,759,113],[988,14,760,16,"headers"],[988,21,760,23],[988,23,760,25],[988,27,760,29],[988,28,760,30,"headers"],[988,35,760,37],[989,14,761,16,"body"],[989,18,761,20],[989,20,761,22],[990,16,762,20,"provider"],[990,24,762,28],[991,16,763,20,"id_token"],[991,24,763,28],[991,26,763,30,"token"],[991,31,763,35],[992,16,764,20,"access_token"],[992,28,764,32],[993,16,765,20,"nonce"],[993,21,765,25],[994,16,766,20,"gotrue_meta_security"],[994,36,766,40],[994,38,766,42],[995,18,766,44,"captcha_token"],[995,31,766,57],[995,33,766,59,"options"],[995,40,766,66],[995,45,766,71],[995,49,766,75],[995,53,766,79,"options"],[995,60,766,86],[995,65,766,91],[995,70,766,96],[995,71,766,97],[995,74,766,100],[995,79,766,105],[995,80,766,106],[995,83,766,109,"options"],[995,90,766,116],[995,91,766,117,"captchaToken"],[996,16,766,130],[997,14,767,16],[997,15,767,17],[998,14,768,16,"xform"],[998,19,768,21],[998,21,768,23,"fetch_1"],[998,28,768,30],[998,29,768,31,"_sessionResponse"],[999,12,769,12],[999,13,769,13],[999,14,769,14],[1000,12,770,12],[1000,16,770,20,"data"],[1000,20,770,24],[1000,23,770,36,"res"],[1000,26,770,39],[1000,27,770,20,"data"],[1000,31,770,24],[1001,14,770,26,"error"],[1001,19,770,31],[1001,22,770,36,"res"],[1001,25,770,39],[1001,26,770,26,"error"],[1001,31,770,31],[1002,12,771,12],[1002,16,771,16,"error"],[1002,21,771,21],[1002,23,771,23],[1003,14,772,16],[1003,21,772,23],[1004,16,772,25,"data"],[1004,20,772,29],[1004,22,772,31],[1005,18,772,33,"user"],[1005,22,772,37],[1005,24,772,39],[1005,28,772,43],[1006,18,772,45,"session"],[1006,25,772,52],[1006,27,772,54],[1007,16,772,59],[1007,17,772,60],[1008,16,772,62,"error"],[1009,14,772,68],[1009,15,772,69],[1010,12,773,12],[1010,13,773,13],[1010,19,774,17],[1010,23,774,21],[1010,24,774,22,"data"],[1010,28,774,26],[1010,32,774,30],[1010,33,774,31,"data"],[1010,37,774,35],[1010,38,774,36,"session"],[1010,45,774,43],[1010,49,774,47],[1010,50,774,48,"data"],[1010,54,774,52],[1010,55,774,53,"user"],[1010,59,774,57],[1010,61,774,59],[1011,14,775,16],[1011,21,775,23],[1012,16,776,20,"data"],[1012,20,776,24],[1012,22,776,26],[1013,18,776,28,"user"],[1013,22,776,32],[1013,24,776,34],[1013,28,776,38],[1014,18,776,40,"session"],[1014,25,776,47],[1014,27,776,49],[1015,16,776,54],[1015,17,776,55],[1016,16,777,20,"error"],[1016,21,777,25],[1016,23,777,27],[1016,27,777,31,"errors_1"],[1016,35,777,39],[1016,36,777,40,"AuthInvalidTokenResponseError"],[1016,65,777,69],[1016,66,777,70],[1017,14,778,16],[1017,15,778,17],[1018,12,779,12],[1019,12,780,12],[1019,16,780,16,"data"],[1019,20,780,20],[1019,21,780,21,"session"],[1019,28,780,28],[1019,30,780,30],[1020,14,781,16],[1020,20,781,22],[1020,24,781,26],[1020,25,781,27,"_saveSession"],[1020,37,781,39],[1020,38,781,40,"data"],[1020,42,781,44],[1020,43,781,45,"session"],[1020,50,781,52],[1020,51,781,53],[1021,14,782,16],[1021,20,782,22],[1021,24,782,26],[1021,25,782,27,"_notifyAllSubscribers"],[1021,46,782,48],[1021,47,782,49],[1021,58,782,60],[1021,60,782,62,"data"],[1021,64,782,66],[1021,65,782,67,"session"],[1021,72,782,74],[1021,73,782,75],[1022,12,783,12],[1023,12,784,12],[1023,19,784,19],[1024,14,784,21,"data"],[1024,18,784,25],[1025,14,784,27,"error"],[1026,12,784,33],[1026,13,784,34],[1027,10,785,8],[1027,11,785,9],[1027,12,786,8],[1027,19,786,15,"error"],[1027,24,786,20],[1027,26,786,22],[1028,12,787,12],[1028,16,787,16],[1028,17,787,17],[1028,18,787,18],[1028,20,787,20,"errors_1"],[1028,28,787,28],[1028,29,787,29,"isAuthError"],[1028,40,787,40],[1028,42,787,42,"error"],[1028,47,787,47],[1028,48,787,48],[1028,50,787,50],[1029,14,788,16],[1029,21,788,23],[1030,16,788,25,"data"],[1030,20,788,29],[1030,22,788,31],[1031,18,788,33,"user"],[1031,22,788,37],[1031,24,788,39],[1031,28,788,43],[1032,18,788,45,"session"],[1032,25,788,52],[1032,27,788,54],[1033,16,788,59],[1033,17,788,60],[1034,16,788,62,"error"],[1035,14,788,68],[1035,15,788,69],[1036,12,789,12],[1037,12,790,12],[1037,18,790,18,"error"],[1037,23,790,23],[1038,10,791,8],[1039,8,792,4],[1039,9,792,5],[1040,8,792,5],[1040,17,756,10,"signInWithIdToken"],[1040,34,756,27,"signInWithIdToken"],[1040,35,756,27,"_x12"],[1040,39,756,27],[1041,10,756,27],[1041,17,756,27,"_signInWithIdToken"],[1041,35,756,27],[1041,36,756,27,"apply"],[1041,41,756,27],[1041,48,756,27,"arguments"],[1041,57,756,27],[1042,8,756,27],[1043,8,756,27],[1043,15,756,10,"signInWithIdToken"],[1043,32,756,27],[1044,6,756,27],[1045,6,793,4],[1046,0,794,0],[1047,0,795,0],[1048,0,796,0],[1049,0,797,0],[1050,0,798,0],[1051,0,799,0],[1052,0,800,0],[1053,0,801,0],[1054,0,802,0],[1055,0,803,0],[1056,0,804,0],[1057,0,805,0],[1058,0,806,0],[1059,0,807,0],[1060,0,808,0],[1061,0,809,0],[1062,6,793,4],[1063,4,793,4],[1064,6,793,4,"key"],[1064,9,793,4],[1065,6,793,4,"value"],[1065,11,793,4],[1066,8,793,4],[1066,12,793,4,"_signInWithOtp"],[1066,26,793,4],[1066,29,793,4,"_asyncToGenerator"],[1066,46,793,4],[1066,47,810,4],[1066,58,810,24,"credentials"],[1066,69,810,35],[1066,71,810,37],[1067,10,811,8],[1067,14,811,12,"_a"],[1067,16,811,14],[1067,18,811,16,"_b"],[1067,20,811,18],[1067,22,811,20,"_c"],[1067,24,811,22],[1067,26,811,24,"_d"],[1067,28,811,26],[1067,30,811,28,"_e"],[1067,32,811,30],[1068,10,812,8],[1068,14,812,12],[1069,12,813,12],[1069,16,813,16],[1069,23,813,23],[1069,27,813,27,"credentials"],[1069,38,813,38],[1069,40,813,40],[1070,14,814,16],[1070,18,814,24,"email"],[1070,23,814,29],[1070,26,814,43,"credentials"],[1070,37,814,54],[1070,38,814,24,"email"],[1070,43,814,29],[1071,16,814,31,"options"],[1071,23,814,38],[1071,26,814,43,"credentials"],[1071,37,814,54],[1071,38,814,31,"options"],[1071,45,814,38],[1072,14,815,16],[1072,18,815,20,"codeChallenge"],[1072,31,815,33],[1072,34,815,36],[1072,38,815,40],[1073,14,816,16],[1073,18,816,20,"codeChallengeMethod"],[1073,37,816,39],[1073,40,816,42],[1073,44,816,46],[1074,14,817,16],[1074,18,817,20],[1074,22,817,24],[1074,23,817,25,"flowType"],[1074,31,817,33],[1074,36,817,38],[1074,42,817,44],[1074,44,817,46],[1075,16,818,20],[1076,16,818,21],[1076,20,818,21,"_yield6"],[1076,27,818,21],[1076,36,819,65],[1076,37,819,66],[1076,38,819,67],[1076,40,819,69,"helpers_1"],[1076,49,819,78],[1076,50,819,79,"getCodeChallengeAndMethod"],[1076,75,819,104],[1076,77,819,106],[1076,81,819,110],[1076,82,819,111,"storage"],[1076,89,819,118],[1076,91,819,120],[1076,95,819,124],[1076,96,819,125,"storageKey"],[1076,106,819,135],[1076,107,819,136],[1077,16,819,136],[1077,20,819,136,"_yield7"],[1077,27,819,136],[1077,30,819,136,"_slicedToArray"],[1077,44,819,136],[1077,45,819,136,"_yield6"],[1077,52,819,136],[1078,16,819,21,"codeChallenge"],[1078,29,819,34],[1078,32,819,34,"_yield7"],[1078,39,819,34],[1079,16,819,36,"codeChallengeMethod"],[1079,35,819,55],[1079,38,819,55,"_yield7"],[1079,45,819,55],[1080,14,820,16],[1081,14,821,16],[1081,18,821,16,"_yield8"],[1081,25,821,16],[1081,34,821,40],[1081,35,821,41],[1081,36,821,42],[1081,38,821,44,"fetch_1"],[1081,45,821,51],[1081,46,821,52,"_request"],[1081,54,821,60],[1081,56,821,62],[1081,60,821,66],[1081,61,821,67,"fetch"],[1081,66,821,72],[1081,68,821,74],[1081,74,821,80],[1081,76,821,82],[1081,79,821,85],[1081,83,821,89],[1081,84,821,90,"url"],[1081,87,821,93],[1081,93,821,99],[1081,95,821,101],[1082,18,822,20,"headers"],[1082,25,822,27],[1082,27,822,29],[1082,31,822,33],[1082,32,822,34,"headers"],[1082,39,822,41],[1083,18,823,20,"body"],[1083,22,823,24],[1083,24,823,26],[1084,20,824,24,"email"],[1084,25,824,29],[1085,20,825,24,"data"],[1085,24,825,28],[1085,26,825,30],[1085,27,825,31,"_a"],[1085,29,825,33],[1085,32,825,36,"options"],[1085,39,825,43],[1085,44,825,48],[1085,48,825,52],[1085,52,825,56,"options"],[1085,59,825,63],[1085,64,825,68],[1085,69,825,73],[1085,70,825,74],[1085,73,825,77],[1085,78,825,82],[1085,79,825,83],[1085,82,825,86,"options"],[1085,89,825,93],[1085,90,825,94,"data"],[1085,94,825,98],[1085,100,825,104],[1085,104,825,108],[1085,108,825,112,"_a"],[1085,110,825,114],[1085,115,825,119],[1085,120,825,124],[1085,121,825,125],[1085,124,825,128,"_a"],[1085,126,825,130],[1085,129,825,133],[1085,130,825,134],[1085,131,825,135],[1086,20,826,24,"create_user"],[1086,31,826,35],[1086,33,826,37],[1086,34,826,38,"_b"],[1086,36,826,40],[1086,39,826,43,"options"],[1086,46,826,50],[1086,51,826,55],[1086,55,826,59],[1086,59,826,63,"options"],[1086,66,826,70],[1086,71,826,75],[1086,76,826,80],[1086,77,826,81],[1086,80,826,84],[1086,85,826,89],[1086,86,826,90],[1086,89,826,93,"options"],[1086,96,826,100],[1086,97,826,101,"shouldCreateUser"],[1086,113,826,117],[1086,119,826,123],[1086,123,826,127],[1086,127,826,131,"_b"],[1086,129,826,133],[1086,134,826,138],[1086,139,826,143],[1086,140,826,144],[1086,143,826,147,"_b"],[1086,145,826,149],[1086,148,826,152],[1086,152,826,156],[1087,20,827,24,"gotrue_meta_security"],[1087,40,827,44],[1087,42,827,46],[1088,22,827,48,"captcha_token"],[1088,35,827,61],[1088,37,827,63,"options"],[1088,44,827,70],[1088,49,827,75],[1088,53,827,79],[1088,57,827,83,"options"],[1088,64,827,90],[1088,69,827,95],[1088,74,827,100],[1088,75,827,101],[1088,78,827,104],[1088,83,827,109],[1088,84,827,110],[1088,87,827,113,"options"],[1088,94,827,120],[1088,95,827,121,"captchaToken"],[1089,20,827,134],[1089,21,827,135],[1090,20,828,24,"code_challenge"],[1090,34,828,38],[1090,36,828,40,"codeChallenge"],[1090,49,828,53],[1091,20,829,24,"code_challenge_method"],[1091,41,829,45],[1091,43,829,47,"codeChallengeMethod"],[1092,18,830,20],[1092,19,830,21],[1093,18,831,20,"redirectTo"],[1093,28,831,30],[1093,30,831,32,"options"],[1093,37,831,39],[1093,42,831,44],[1093,46,831,48],[1093,50,831,52,"options"],[1093,57,831,59],[1093,62,831,64],[1093,67,831,69],[1093,68,831,70],[1093,71,831,73],[1093,76,831,78],[1093,77,831,79],[1093,80,831,82,"options"],[1093,87,831,89],[1093,88,831,90,"emailRedirectTo"],[1094,16,832,16],[1094,17,832,17],[1094,18,832,18],[1095,16,821,24,"error"],[1095,21,821,29],[1095,24,821,29,"_yield8"],[1095,31,821,29],[1095,32,821,24,"error"],[1095,37,821,29],[1096,14,833,16],[1096,21,833,23],[1097,16,833,25,"data"],[1097,20,833,29],[1097,22,833,31],[1098,18,833,33,"user"],[1098,22,833,37],[1098,24,833,39],[1098,28,833,43],[1099,18,833,45,"session"],[1099,25,833,52],[1099,27,833,54],[1100,16,833,59],[1100,17,833,60],[1101,16,833,62,"error"],[1102,14,833,68],[1102,15,833,69],[1103,12,834,12],[1104,12,835,12],[1104,16,835,16],[1104,23,835,23],[1104,27,835,27,"credentials"],[1104,38,835,38],[1104,40,835,40],[1105,14,836,16],[1105,18,836,24,"phone"],[1105,23,836,29],[1105,26,836,43,"credentials"],[1105,37,836,54],[1105,38,836,24,"phone"],[1105,43,836,29],[1106,16,836,31,"options"],[1106,25,836,38],[1106,28,836,43,"credentials"],[1106,39,836,54],[1106,40,836,31,"options"],[1106,47,836,38],[1107,14,837,16],[1107,18,837,16,"_yield9"],[1107,25,837,16],[1107,34,837,46],[1107,35,837,47],[1107,36,837,48],[1107,38,837,50,"fetch_1"],[1107,45,837,57],[1107,46,837,58,"_request"],[1107,54,837,66],[1107,56,837,68],[1107,60,837,72],[1107,61,837,73,"fetch"],[1107,66,837,78],[1107,68,837,80],[1107,74,837,86],[1107,76,837,88],[1107,79,837,91],[1107,83,837,95],[1107,84,837,96,"url"],[1107,87,837,99],[1107,93,837,105],[1107,95,837,107],[1108,18,838,20,"headers"],[1108,25,838,27],[1108,27,838,29],[1108,31,838,33],[1108,32,838,34,"headers"],[1108,39,838,41],[1109,18,839,20,"body"],[1109,22,839,24],[1109,24,839,26],[1110,20,840,24,"phone"],[1110,25,840,29],[1111,20,841,24,"data"],[1111,24,841,28],[1111,26,841,30],[1111,27,841,31,"_c"],[1111,29,841,33],[1111,32,841,36,"options"],[1111,41,841,43],[1111,46,841,48],[1111,50,841,52],[1111,54,841,56,"options"],[1111,63,841,63],[1111,68,841,68],[1111,73,841,73],[1111,74,841,74],[1111,77,841,77],[1111,82,841,82],[1111,83,841,83],[1111,86,841,86,"options"],[1111,95,841,93],[1111,96,841,94,"data"],[1111,100,841,98],[1111,106,841,104],[1111,110,841,108],[1111,114,841,112,"_c"],[1111,116,841,114],[1111,121,841,119],[1111,126,841,124],[1111,127,841,125],[1111,130,841,128,"_c"],[1111,132,841,130],[1111,135,841,133],[1111,136,841,134],[1111,137,841,135],[1112,20,842,24,"create_user"],[1112,31,842,35],[1112,33,842,37],[1112,34,842,38,"_d"],[1112,36,842,40],[1112,39,842,43,"options"],[1112,48,842,50],[1112,53,842,55],[1112,57,842,59],[1112,61,842,63,"options"],[1112,70,842,70],[1112,75,842,75],[1112,80,842,80],[1112,81,842,81],[1112,84,842,84],[1112,89,842,89],[1112,90,842,90],[1112,93,842,93,"options"],[1112,102,842,100],[1112,103,842,101,"shouldCreateUser"],[1112,119,842,117],[1112,125,842,123],[1112,129,842,127],[1112,133,842,131,"_d"],[1112,135,842,133],[1112,140,842,138],[1112,145,842,143],[1112,146,842,144],[1112,149,842,147,"_d"],[1112,151,842,149],[1112,154,842,152],[1112,158,842,156],[1113,20,843,24,"gotrue_meta_security"],[1113,40,843,44],[1113,42,843,46],[1114,22,843,48,"captcha_token"],[1114,35,843,61],[1114,37,843,63,"options"],[1114,46,843,70],[1114,51,843,75],[1114,55,843,79],[1114,59,843,83,"options"],[1114,68,843,90],[1114,73,843,95],[1114,78,843,100],[1114,79,843,101],[1114,82,843,104],[1114,87,843,109],[1114,88,843,110],[1114,91,843,113,"options"],[1114,100,843,120],[1114,101,843,121,"captchaToken"],[1115,20,843,134],[1115,21,843,135],[1116,20,844,24,"channel"],[1116,27,844,31],[1116,29,844,33],[1116,30,844,34,"_e"],[1116,32,844,36],[1116,35,844,39,"options"],[1116,44,844,46],[1116,49,844,51],[1116,53,844,55],[1116,57,844,59,"options"],[1116,66,844,66],[1116,71,844,71],[1116,76,844,76],[1116,77,844,77],[1116,80,844,80],[1116,85,844,85],[1116,86,844,86],[1116,89,844,89,"options"],[1116,98,844,96],[1116,99,844,97,"channel"],[1116,106,844,104],[1116,112,844,110],[1116,116,844,114],[1116,120,844,118,"_e"],[1116,122,844,120],[1116,127,844,125],[1116,132,844,130],[1116,133,844,131],[1116,136,844,134,"_e"],[1116,138,844,136],[1116,141,844,139],[1117,18,845,20],[1118,16,846,16],[1118,17,846,17],[1118,18,846,18],[1119,16,837,24,"data"],[1119,20,837,28],[1119,23,837,28,"_yield9"],[1119,30,837,28],[1119,31,837,24,"data"],[1119,35,837,28],[1120,16,837,30,"error"],[1120,22,837,35],[1120,25,837,35,"_yield9"],[1120,32,837,35],[1120,33,837,30,"error"],[1120,38,837,35],[1121,14,847,16],[1121,21,847,23],[1122,16,847,25,"data"],[1122,20,847,29],[1122,22,847,31],[1123,18,847,33,"user"],[1123,22,847,37],[1123,24,847,39],[1123,28,847,43],[1124,18,847,45,"session"],[1124,25,847,52],[1124,27,847,54],[1124,31,847,58],[1125,18,847,60,"messageId"],[1125,27,847,69],[1125,29,847,71,"data"],[1125,33,847,75],[1125,38,847,80],[1125,42,847,84],[1125,46,847,88,"data"],[1125,50,847,92],[1125,55,847,97],[1125,60,847,102],[1125,61,847,103],[1125,64,847,106],[1125,69,847,111],[1125,70,847,112],[1125,73,847,115,"data"],[1125,77,847,119],[1125,78,847,120,"message_id"],[1126,16,847,131],[1126,17,847,132],[1127,16,847,134,"error"],[1127,21,847,139],[1127,23,847,134,"error"],[1128,14,847,140],[1128,15,847,141],[1129,12,848,12],[1130,12,849,12],[1130,18,849,18],[1130,22,849,22,"errors_1"],[1130,30,849,30],[1130,31,849,31,"AuthInvalidCredentialsError"],[1130,58,849,58],[1130,59,849,59],[1130,110,849,110],[1130,111,849,111],[1131,10,850,8],[1131,11,850,9],[1131,12,851,8],[1131,19,851,15,"error"],[1131,24,851,20],[1131,26,851,22],[1132,12,852,12],[1132,16,852,16],[1132,17,852,17],[1132,18,852,18],[1132,20,852,20,"errors_1"],[1132,28,852,28],[1132,29,852,29,"isAuthError"],[1132,40,852,40],[1132,42,852,42,"error"],[1132,47,852,47],[1132,48,852,48],[1132,50,852,50],[1133,14,853,16],[1133,21,853,23],[1134,16,853,25,"data"],[1134,20,853,29],[1134,22,853,31],[1135,18,853,33,"user"],[1135,22,853,37],[1135,24,853,39],[1135,28,853,43],[1136,18,853,45,"session"],[1136,25,853,52],[1136,27,853,54],[1137,16,853,59],[1137,17,853,60],[1138,16,853,62,"error"],[1139,14,853,68],[1139,15,853,69],[1140,12,854,12],[1141,12,855,12],[1141,18,855,18,"error"],[1141,23,855,23],[1142,10,856,8],[1143,8,857,4],[1143,9,857,5],[1144,8,857,5],[1144,17,810,10,"signInWithOtp"],[1144,30,810,23,"signInWithOtp"],[1144,31,810,23,"_x13"],[1144,35,810,23],[1145,10,810,23],[1145,17,810,23,"_signInWithOtp"],[1145,31,810,23],[1145,32,810,23,"apply"],[1145,37,810,23],[1145,44,810,23,"arguments"],[1145,53,810,23],[1146,8,810,23],[1147,8,810,23],[1147,15,810,10,"signInWithOtp"],[1147,28,810,23],[1148,6,810,23],[1149,6,858,4],[1150,0,859,0],[1151,0,860,0],[1152,6,858,4],[1153,4,858,4],[1154,6,858,4,"key"],[1154,9,858,4],[1155,6,858,4,"value"],[1155,11,858,4],[1156,8,858,4],[1156,12,858,4,"_verifyOtp"],[1156,22,858,4],[1156,25,858,4,"_asyncToGenerator"],[1156,42,858,4],[1156,43,861,4],[1156,54,861,20,"params"],[1156,60,861,26],[1156,62,861,28],[1157,10,862,8],[1157,14,862,12,"_a"],[1157,16,862,14],[1157,18,862,16,"_b"],[1157,20,862,18],[1158,10,863,8],[1158,14,863,12],[1159,12,864,12],[1159,16,864,16,"redirectTo"],[1159,26,864,26],[1159,29,864,29,"undefined"],[1159,38,864,38],[1160,12,865,12],[1160,16,865,16,"captchaToken"],[1160,28,865,28],[1160,31,865,31,"undefined"],[1160,40,865,40],[1161,12,866,12],[1161,16,866,16],[1161,25,866,25],[1161,29,866,29,"params"],[1161,35,866,35],[1161,37,866,37],[1162,14,867,16,"redirectTo"],[1162,24,867,26],[1162,27,867,29],[1162,28,867,30,"_a"],[1162,30,867,32],[1162,33,867,35,"params"],[1162,39,867,41],[1162,40,867,42,"options"],[1162,47,867,49],[1162,53,867,55],[1162,57,867,59],[1162,61,867,63,"_a"],[1162,63,867,65],[1162,68,867,70],[1162,73,867,75],[1162,74,867,76],[1162,77,867,79],[1162,82,867,84],[1162,83,867,85],[1162,86,867,88,"_a"],[1162,88,867,90],[1162,89,867,91,"redirectTo"],[1162,99,867,101],[1163,14,868,16,"captchaToken"],[1163,26,868,28],[1163,29,868,31],[1163,30,868,32,"_b"],[1163,32,868,34],[1163,35,868,37,"params"],[1163,41,868,43],[1163,42,868,44,"options"],[1163,49,868,51],[1163,55,868,57],[1163,59,868,61],[1163,63,868,65,"_b"],[1163,65,868,67],[1163,70,868,72],[1163,75,868,77],[1163,76,868,78],[1163,79,868,81],[1163,84,868,86],[1163,85,868,87],[1163,88,868,90,"_b"],[1163,90,868,92],[1163,91,868,93,"captchaToken"],[1163,103,868,105],[1164,12,869,12],[1165,12,870,12],[1165,16,870,12,"_yield0"],[1165,23,870,12],[1165,32,870,42],[1165,33,870,43],[1165,34,870,44],[1165,36,870,46,"fetch_1"],[1165,43,870,53],[1165,44,870,54,"_request"],[1165,52,870,62],[1165,54,870,64],[1165,58,870,68],[1165,59,870,69,"fetch"],[1165,64,870,74],[1165,66,870,76],[1165,72,870,82],[1165,74,870,84],[1165,77,870,87],[1165,81,870,91],[1165,82,870,92,"url"],[1165,85,870,95],[1165,94,870,104],[1165,96,870,106],[1166,16,871,16,"headers"],[1166,23,871,23],[1166,25,871,25],[1166,29,871,29],[1166,30,871,30,"headers"],[1166,37,871,37],[1167,16,872,16,"body"],[1167,20,872,20],[1167,22,872,22,"Object"],[1167,28,872,28],[1167,29,872,29,"assign"],[1167,35,872,35],[1167,36,872,36,"Object"],[1167,42,872,42],[1167,43,872,43,"assign"],[1167,49,872,49],[1167,50,872,50],[1167,51,872,51],[1167,52,872,52],[1167,54,872,54,"params"],[1167,60,872,60],[1167,61,872,61],[1167,63,872,63],[1168,18,872,65,"gotrue_meta_security"],[1168,38,872,85],[1168,40,872,87],[1169,20,872,89,"captcha_token"],[1169,33,872,102],[1169,35,872,104,"captchaToken"],[1170,18,872,117],[1171,16,872,119],[1171,17,872,120],[1171,18,872,121],[1172,16,873,16,"redirectTo"],[1172,26,873,26],[1173,16,874,16,"xform"],[1173,21,874,21],[1173,23,874,23,"fetch_1"],[1173,30,874,30],[1173,31,874,31,"_sessionResponse"],[1174,14,875,12],[1174,15,875,13],[1174,16,875,14],[1175,14,870,20,"data"],[1175,18,870,24],[1175,21,870,24,"_yield0"],[1175,28,870,24],[1175,29,870,20,"data"],[1175,33,870,24],[1176,14,870,26,"error"],[1176,19,870,31],[1176,22,870,31,"_yield0"],[1176,29,870,31],[1176,30,870,26,"error"],[1176,35,870,31],[1177,12,876,12],[1177,16,876,16,"error"],[1177,21,876,21],[1177,23,876,23],[1178,14,877,16],[1178,20,877,22,"error"],[1178,25,877,27],[1179,12,878,12],[1180,12,879,12],[1180,16,879,16],[1180,17,879,17,"data"],[1180,21,879,21],[1180,23,879,23],[1181,14,880,16],[1181,20,880,22],[1181,24,880,26,"Error"],[1181,29,880,31],[1181,30,880,32],[1181,72,880,74],[1181,73,880,75],[1182,12,881,12],[1183,12,882,12],[1183,16,882,18,"session"],[1183,23,882,25],[1183,26,882,28,"data"],[1183,30,882,32],[1183,31,882,33,"session"],[1183,38,882,40],[1184,12,883,12],[1184,16,883,18,"user"],[1184,20,883,22],[1184,23,883,25,"data"],[1184,27,883,29],[1184,28,883,30,"user"],[1184,32,883,34],[1185,12,884,12],[1185,16,884,16,"session"],[1185,23,884,23],[1185,28,884,28],[1185,32,884,32],[1185,36,884,36,"session"],[1185,43,884,43],[1185,48,884,48],[1185,53,884,53],[1185,54,884,54],[1185,57,884,57],[1185,62,884,62],[1185,63,884,63],[1185,66,884,66,"session"],[1185,73,884,73],[1185,74,884,74,"access_token"],[1185,86,884,86],[1185,88,884,88],[1186,14,885,16],[1186,20,885,22],[1186,24,885,26],[1186,25,885,27,"_saveSession"],[1186,37,885,39],[1186,38,885,40,"session"],[1186,45,885,47],[1186,46,885,48],[1187,14,886,16],[1187,20,886,22],[1187,24,886,26],[1187,25,886,27,"_notifyAllSubscribers"],[1187,46,886,48],[1187,47,886,49,"params"],[1187,53,886,55],[1187,54,886,56,"type"],[1187,58,886,60],[1187,62,886,64],[1187,72,886,74],[1187,75,886,77],[1187,94,886,96],[1187,97,886,99],[1187,108,886,110],[1187,110,886,112,"session"],[1187,117,886,119],[1187,118,886,120],[1188,12,887,12],[1189,12,888,12],[1189,19,888,19],[1190,14,888,21,"data"],[1190,18,888,25],[1190,20,888,27],[1191,16,888,29,"user"],[1191,20,888,33],[1192,16,888,35,"session"],[1193,14,888,43],[1193,15,888,44],[1194,14,888,46,"error"],[1194,19,888,51],[1194,21,888,53],[1195,12,888,58],[1195,13,888,59],[1196,10,889,8],[1196,11,889,9],[1196,12,890,8],[1196,19,890,15,"error"],[1196,24,890,20],[1196,26,890,22],[1197,12,891,12],[1197,16,891,16],[1197,17,891,17],[1197,18,891,18],[1197,20,891,20,"errors_1"],[1197,28,891,28],[1197,29,891,29,"isAuthError"],[1197,40,891,40],[1197,42,891,42,"error"],[1197,47,891,47],[1197,48,891,48],[1197,50,891,50],[1198,14,892,16],[1198,21,892,23],[1199,16,892,25,"data"],[1199,20,892,29],[1199,22,892,31],[1200,18,892,33,"user"],[1200,22,892,37],[1200,24,892,39],[1200,28,892,43],[1201,18,892,45,"session"],[1201,25,892,52],[1201,27,892,54],[1202,16,892,59],[1202,17,892,60],[1203,16,892,62,"error"],[1204,14,892,68],[1204,15,892,69],[1205,12,893,12],[1206,12,894,12],[1206,18,894,18,"error"],[1206,23,894,23],[1207,10,895,8],[1208,8,896,4],[1208,9,896,5],[1209,8,896,5],[1209,17,861,10,"verifyOtp"],[1209,26,861,19,"verifyOtp"],[1209,27,861,19,"_x14"],[1209,31,861,19],[1210,10,861,19],[1210,17,861,19,"_verifyOtp"],[1210,27,861,19],[1210,28,861,19,"apply"],[1210,33,861,19],[1210,40,861,19,"arguments"],[1210,49,861,19],[1211,8,861,19],[1212,8,861,19],[1212,15,861,10,"verifyOtp"],[1212,24,861,19],[1213,6,861,19],[1214,6,897,4],[1215,0,898,0],[1216,0,899,0],[1217,0,900,0],[1218,0,901,0],[1219,0,902,0],[1220,0,903,0],[1221,0,904,0],[1222,0,905,0],[1223,0,906,0],[1224,0,907,0],[1225,0,908,0],[1226,0,909,0],[1227,0,910,0],[1228,6,897,4],[1229,4,897,4],[1230,6,897,4,"key"],[1230,9,897,4],[1231,6,897,4,"value"],[1231,11,897,4],[1232,8,897,4],[1232,12,897,4,"_signInWithSSO"],[1232,26,897,4],[1232,29,897,4,"_asyncToGenerator"],[1232,46,897,4],[1232,47,911,4],[1232,58,911,24,"params"],[1232,64,911,30],[1232,66,911,32],[1233,10,912,8],[1233,14,912,12,"_a"],[1233,16,912,14],[1233,18,912,16,"_b"],[1233,20,912,18],[1233,22,912,20,"_c"],[1233,24,912,22],[1234,10,913,8],[1234,14,913,12],[1235,12,914,12],[1235,16,914,16,"codeChallenge"],[1235,29,914,29],[1235,32,914,32],[1235,36,914,36],[1236,12,915,12],[1236,16,915,16,"codeChallengeMethod"],[1236,35,915,35],[1236,38,915,38],[1236,42,915,42],[1237,12,916,12],[1237,16,916,16],[1237,20,916,20],[1237,21,916,21,"flowType"],[1237,29,916,29],[1237,34,916,34],[1237,40,916,40],[1237,42,916,42],[1238,14,917,16],[1239,14,917,17],[1239,18,917,17,"_yield1"],[1239,25,917,17],[1239,34,918,61],[1239,35,918,62],[1239,36,918,63],[1239,38,918,65,"helpers_1"],[1239,47,918,74],[1239,48,918,75,"getCodeChallengeAndMethod"],[1239,73,918,100],[1239,75,918,102],[1239,79,918,106],[1239,80,918,107,"storage"],[1239,87,918,114],[1239,89,918,116],[1239,93,918,120],[1239,94,918,121,"storageKey"],[1239,104,918,131],[1239,105,918,132],[1240,14,918,132],[1240,18,918,132,"_yield10"],[1240,26,918,132],[1240,29,918,132,"_slicedToArray"],[1240,43,918,132],[1240,44,918,132,"_yield1"],[1240,51,918,132],[1241,14,918,17,"codeChallenge"],[1241,27,918,30],[1241,30,918,30,"_yield10"],[1241,38,918,30],[1242,14,918,32,"codeChallengeMethod"],[1242,33,918,51],[1242,36,918,51,"_yield10"],[1242,44,918,51],[1243,12,919,12],[1244,12,920,12],[1244,25,920,25],[1244,26,920,26],[1244,27,920,27],[1244,29,920,29,"fetch_1"],[1244,36,920,36],[1244,37,920,37,"_request"],[1244,45,920,45],[1244,47,920,47],[1244,51,920,51],[1244,52,920,52,"fetch"],[1244,57,920,57],[1244,59,920,59],[1244,65,920,65],[1244,67,920,67],[1244,70,920,70],[1244,74,920,74],[1244,75,920,75,"url"],[1244,78,920,78],[1244,84,920,84],[1244,86,920,86],[1245,14,921,16,"body"],[1245,18,921,20],[1245,20,921,22,"Object"],[1245,26,921,28],[1245,27,921,29,"assign"],[1245,33,921,35],[1245,34,921,36,"Object"],[1245,40,921,42],[1245,41,921,43,"assign"],[1245,47,921,49],[1245,48,921,50,"Object"],[1245,54,921,56],[1245,55,921,57,"assign"],[1245,61,921,63],[1245,62,921,64,"Object"],[1245,68,921,70],[1245,69,921,71,"assign"],[1245,75,921,77],[1245,76,921,78,"Object"],[1245,82,921,84],[1245,83,921,85,"assign"],[1245,89,921,91],[1245,90,921,92],[1245,91,921,93],[1245,92,921,94],[1245,94,921,97],[1245,106,921,109],[1245,110,921,113,"params"],[1245,116,921,119],[1245,119,921,122],[1246,16,921,124,"provider_id"],[1246,27,921,135],[1246,29,921,137,"params"],[1246,35,921,143],[1246,36,921,144,"providerId"],[1247,14,921,155],[1247,15,921,156],[1247,18,921,159],[1247,22,921,164],[1247,23,921,165],[1247,25,921,168],[1247,33,921,176],[1247,37,921,180,"params"],[1247,43,921,186],[1247,46,921,189],[1248,16,921,191,"domain"],[1248,22,921,197],[1248,24,921,199,"params"],[1248,30,921,205],[1248,31,921,206,"domain"],[1249,14,921,213],[1249,15,921,214],[1249,18,921,217],[1249,22,921,222],[1249,23,921,223],[1249,25,921,225],[1250,16,921,227,"redirect_to"],[1250,27,921,238],[1250,29,921,240],[1250,30,921,241,"_b"],[1250,32,921,243],[1250,35,921,246],[1250,36,921,247,"_a"],[1250,38,921,249],[1250,41,921,252,"params"],[1250,47,921,258],[1250,48,921,259,"options"],[1250,55,921,266],[1250,61,921,272],[1250,65,921,276],[1250,69,921,280,"_a"],[1250,71,921,282],[1250,76,921,287],[1250,81,921,292],[1250,82,921,293],[1250,85,921,296],[1250,90,921,301],[1250,91,921,302],[1250,94,921,305,"_a"],[1250,96,921,307],[1250,97,921,308,"redirectTo"],[1250,107,921,318],[1250,113,921,324],[1250,117,921,328],[1250,121,921,332,"_b"],[1250,123,921,334],[1250,128,921,339],[1250,133,921,344],[1250,134,921,345],[1250,137,921,348,"_b"],[1250,139,921,350],[1250,142,921,353,"undefined"],[1251,14,921,363],[1251,15,921,364],[1251,16,921,365],[1251,18,921,368],[1251,19,921,369],[1251,20,921,370,"_c"],[1251,22,921,372],[1251,25,921,375,"params"],[1251,31,921,381],[1251,36,921,386],[1251,40,921,390],[1251,44,921,394,"params"],[1251,50,921,400],[1251,55,921,405],[1251,60,921,410],[1251,61,921,411],[1251,64,921,414],[1251,69,921,419],[1251,70,921,420],[1251,73,921,423,"params"],[1251,79,921,429],[1251,80,921,430,"options"],[1251,87,921,437],[1251,93,921,443],[1251,97,921,447],[1251,101,921,451,"_c"],[1251,103,921,453],[1251,108,921,458],[1251,113,921,463],[1251,114,921,464],[1251,117,921,467],[1251,122,921,472],[1251,123,921,473],[1251,126,921,476,"_c"],[1251,128,921,478],[1251,129,921,479,"captchaToken"],[1251,141,921,491],[1251,145,922,22],[1252,16,922,24,"gotrue_meta_security"],[1252,36,922,44],[1252,38,922,46],[1253,18,922,48,"captcha_token"],[1253,31,922,61],[1253,33,922,63,"params"],[1253,39,922,69],[1253,40,922,70,"options"],[1253,47,922,77],[1253,48,922,78,"captchaToken"],[1254,16,922,91],[1255,14,922,93],[1255,15,922,94],[1255,18,923,22],[1255,22,923,27],[1255,23,923,28],[1255,25,923,30],[1256,16,923,32,"skip_http_redirect"],[1256,34,923,50],[1256,36,923,52],[1256,40,923,56],[1257,16,923,58,"code_challenge"],[1257,30,923,72],[1257,32,923,74,"codeChallenge"],[1257,45,923,87],[1258,16,923,89,"code_challenge_method"],[1258,37,923,110],[1258,39,923,112,"codeChallengeMethod"],[1259,14,923,132],[1259,15,923,133],[1259,16,923,134],[1260,14,924,16,"headers"],[1260,21,924,23],[1260,23,924,25],[1260,27,924,29],[1260,28,924,30,"headers"],[1260,35,924,37],[1261,14,925,16,"xform"],[1261,19,925,21],[1261,21,925,23,"fetch_1"],[1261,28,925,30],[1261,29,925,31,"_ssoResponse"],[1262,12,926,12],[1262,13,926,13],[1262,14,926,14],[1263,10,927,8],[1263,11,927,9],[1263,12,928,8],[1263,19,928,15,"error"],[1263,24,928,20],[1263,26,928,22],[1264,12,929,12],[1264,16,929,16],[1264,17,929,17],[1264,18,929,18],[1264,20,929,20,"errors_1"],[1264,28,929,28],[1264,29,929,29,"isAuthError"],[1264,40,929,40],[1264,42,929,42,"error"],[1264,47,929,47],[1264,48,929,48],[1264,50,929,50],[1265,14,930,16],[1265,21,930,23],[1266,16,930,25,"data"],[1266,20,930,29],[1266,22,930,31],[1266,26,930,35],[1267,16,930,37,"error"],[1268,14,930,43],[1268,15,930,44],[1269,12,931,12],[1270,12,932,12],[1270,18,932,18,"error"],[1270,23,932,23],[1271,10,933,8],[1272,8,934,4],[1272,9,934,5],[1273,8,934,5],[1273,17,911,10,"signInWithSSO"],[1273,30,911,23,"signInWithSSO"],[1273,31,911,23,"_x15"],[1273,35,911,23],[1274,10,911,23],[1274,17,911,23,"_signInWithSSO"],[1274,31,911,23],[1274,32,911,23,"apply"],[1274,37,911,23],[1274,44,911,23,"arguments"],[1274,53,911,23],[1275,8,911,23],[1276,8,911,23],[1276,15,911,10,"signInWithSSO"],[1276,28,911,23],[1277,6,911,23],[1278,6,935,4],[1279,0,936,0],[1280,0,937,0],[1281,0,938,0],[1282,6,935,4],[1283,4,935,4],[1284,6,935,4,"key"],[1284,9,935,4],[1285,6,935,4,"value"],[1285,11,935,4],[1286,8,935,4],[1286,12,935,4,"_reauthenticate2"],[1286,28,935,4],[1286,31,935,4,"_asyncToGenerator"],[1286,48,935,4],[1286,49,939,4],[1286,62,939,27],[1287,10,939,27],[1287,14,939,27,"_this5"],[1287,20,939,27],[1288,10,940,8],[1288,16,940,14],[1288,20,940,18],[1288,21,940,19,"initializePromise"],[1288,38,940,36],[1289,10,941,8],[1289,23,941,21],[1289,27,941,25],[1289,28,941,26,"_acquireLock"],[1289,40,941,38],[1289,41,941,39],[1289,42,941,40],[1289,43,941,41],[1289,58,941,41,"_asyncToGenerator"],[1289,75,941,41],[1289,76,941,43],[1289,89,941,55],[1290,12,942,12],[1290,25,942,25,"_this5"],[1290,31,942,29],[1290,32,942,30,"_reauthenticate"],[1290,47,942,45],[1290,48,942,46],[1290,49,942,47],[1291,10,943,8],[1291,11,943,9],[1291,13,943,10],[1292,8,944,4],[1292,9,944,5],[1293,8,944,5],[1293,17,939,10,"reauthenticate"],[1293,31,939,24,"reauthenticate"],[1293,32,939,24],[1294,10,939,24],[1294,17,939,24,"_reauthenticate2"],[1294,33,939,24],[1294,34,939,24,"apply"],[1294,39,939,24],[1294,46,939,24,"arguments"],[1294,55,939,24],[1295,8,939,24],[1296,8,939,24],[1296,15,939,10,"reauthenticate"],[1296,29,939,24],[1297,6,939,24],[1298,4,939,24],[1299,6,939,24,"key"],[1299,9,939,24],[1300,6,939,24,"value"],[1300,11,939,24],[1301,8,939,24],[1301,12,939,24,"_reauthenticate3"],[1301,28,939,24],[1301,31,939,24,"_asyncToGenerator"],[1301,48,939,24],[1301,49,945,4],[1301,62,945,28],[1302,10,945,28],[1302,14,945,28,"_this6"],[1302,20,945,28],[1303,10,946,8],[1303,14,946,12],[1304,12,947,12],[1304,25,947,25],[1304,29,947,29],[1304,30,947,30,"_useSession"],[1304,41,947,41],[1305,14,947,41],[1305,18,947,41,"_ref7"],[1305,23,947,41],[1305,26,947,41,"_asyncToGenerator"],[1305,43,947,41],[1305,44,947,42],[1305,55,947,49,"result"],[1305,61,947,55],[1305,63,947,60],[1306,16,948,16],[1306,20,948,32,"session"],[1306,27,948,39],[1306,30,948,68,"result"],[1306,36,948,74],[1306,37,948,24,"data"],[1306,41,948,28],[1306,42,948,32,"session"],[1306,49,948,39],[1307,18,948,50,"sessionError"],[1307,30,948,62],[1307,33,948,68,"result"],[1307,39,948,74],[1307,40,948,43,"error"],[1307,45,948,48],[1308,16,949,16],[1308,20,949,20,"sessionError"],[1308,32,949,32],[1308,34,950,20],[1308,40,950,26,"sessionError"],[1308,52,950,38],[1309,16,951,16],[1309,20,951,20],[1309,21,951,21,"session"],[1309,28,951,28],[1309,30,952,20],[1309,36,952,26],[1309,40,952,30,"errors_1"],[1309,48,952,38],[1309,49,952,39,"AuthSessionMissingError"],[1309,72,952,62],[1309,73,952,63],[1309,74,952,64],[1310,16,953,16],[1310,20,953,16,"_yield11"],[1310,28,953,16],[1310,37,953,40],[1310,38,953,41],[1310,39,953,42],[1310,41,953,44,"fetch_1"],[1310,48,953,51],[1310,49,953,52,"_request"],[1310,57,953,60],[1310,59,953,62,"_this6"],[1310,65,953,66],[1310,66,953,67,"fetch"],[1310,71,953,72],[1310,73,953,74],[1310,78,953,79],[1310,80,953,81],[1310,83,953,84,"_this6"],[1310,89,953,88],[1310,90,953,89,"url"],[1310,93,953,92],[1310,110,953,109],[1310,112,953,111],[1311,20,954,20,"headers"],[1311,27,954,27],[1311,29,954,29,"_this6"],[1311,35,954,33],[1311,36,954,34,"headers"],[1311,43,954,41],[1312,20,955,20,"jwt"],[1312,23,955,23],[1312,25,955,25,"session"],[1312,32,955,32],[1312,33,955,33,"access_token"],[1313,18,956,16],[1313,19,956,17],[1313,20,956,18],[1314,18,953,24,"error"],[1314,23,953,29],[1314,26,953,29,"_yield11"],[1314,34,953,29],[1314,35,953,24,"error"],[1314,40,953,29],[1315,16,957,16],[1315,23,957,23],[1316,18,957,25,"data"],[1316,22,957,29],[1316,24,957,31],[1317,20,957,33,"user"],[1317,24,957,37],[1317,26,957,39],[1317,30,957,43],[1318,20,957,45,"session"],[1318,27,957,52],[1318,29,957,54],[1319,18,957,59],[1319,19,957,60],[1320,18,957,62,"error"],[1321,16,957,68],[1321,17,957,69],[1322,14,958,12],[1322,15,958,13],[1323,14,958,13],[1323,31,958,13,"_x16"],[1323,35,958,13],[1324,16,958,13],[1324,23,958,13,"_ref7"],[1324,28,958,13],[1324,29,958,13,"apply"],[1324,34,958,13],[1324,41,958,13,"arguments"],[1324,50,958,13],[1325,14,958,13],[1326,12,958,13],[1326,16,958,14],[1327,10,959,8],[1327,11,959,9],[1327,12,960,8],[1327,19,960,15,"error"],[1327,24,960,20],[1327,26,960,22],[1328,12,961,12],[1328,16,961,16],[1328,17,961,17],[1328,18,961,18],[1328,20,961,20,"errors_1"],[1328,28,961,28],[1328,29,961,29,"isAuthError"],[1328,40,961,40],[1328,42,961,42,"error"],[1328,47,961,47],[1328,48,961,48],[1328,50,961,50],[1329,14,962,16],[1329,21,962,23],[1330,16,962,25,"data"],[1330,20,962,29],[1330,22,962,31],[1331,18,962,33,"user"],[1331,22,962,37],[1331,24,962,39],[1331,28,962,43],[1332,18,962,45,"session"],[1332,25,962,52],[1332,27,962,54],[1333,16,962,59],[1333,17,962,60],[1334,16,962,62,"error"],[1335,14,962,68],[1335,15,962,69],[1336,12,963,12],[1337,12,964,12],[1337,18,964,18,"error"],[1337,23,964,23],[1338,10,965,8],[1339,8,966,4],[1339,9,966,5],[1340,8,966,5],[1340,17,945,10,"_reauthenticate"],[1340,32,945,25,"_reauthenticate"],[1340,33,945,25],[1341,10,945,25],[1341,17,945,25,"_reauthenticate3"],[1341,33,945,25],[1341,34,945,25,"apply"],[1341,39,945,25],[1341,46,945,25,"arguments"],[1341,55,945,25],[1342,8,945,25],[1343,8,945,25],[1343,15,945,10,"_reauthenticate"],[1343,30,945,25],[1344,6,945,25],[1345,6,967,4],[1346,0,968,0],[1347,0,969,0],[1348,4,967,4],[1349,6,967,4,"key"],[1349,9,967,4],[1350,6,967,4,"value"],[1350,11,967,4],[1351,8,967,4],[1351,12,967,4,"_resend"],[1351,19,967,4],[1351,22,967,4,"_asyncToGenerator"],[1351,39,967,4],[1351,40,970,4],[1351,51,970,17,"credentials"],[1351,62,970,28],[1351,64,970,30],[1352,10,971,8],[1352,14,971,12],[1353,12,972,12],[1353,16,972,18,"endpoint"],[1353,24,972,26],[1353,27,972,29],[1353,30,972,32],[1353,34,972,36],[1353,35,972,37,"url"],[1353,38,972,40],[1353,47,972,49],[1354,12,973,12],[1354,16,973,16],[1354,23,973,23],[1354,27,973,27,"credentials"],[1354,38,973,38],[1354,40,973,40],[1355,14,974,16],[1355,18,974,24,"email"],[1355,23,974,29],[1355,26,974,49,"credentials"],[1355,37,974,60],[1355,38,974,24,"email"],[1355,43,974,29],[1356,16,974,31,"type"],[1356,20,974,35],[1356,23,974,49,"credentials"],[1356,34,974,60],[1356,35,974,31,"type"],[1356,39,974,35],[1357,16,974,37,"options"],[1357,23,974,44],[1357,26,974,49,"credentials"],[1357,37,974,60],[1357,38,974,37,"options"],[1357,45,974,44],[1358,14,975,16],[1358,18,975,16,"_yield12"],[1358,26,975,16],[1358,35,975,40],[1358,36,975,41],[1358,37,975,42],[1358,39,975,44,"fetch_1"],[1358,46,975,51],[1358,47,975,52,"_request"],[1358,55,975,60],[1358,57,975,62],[1358,61,975,66],[1358,62,975,67,"fetch"],[1358,67,975,72],[1358,69,975,74],[1358,75,975,80],[1358,77,975,82,"endpoint"],[1358,85,975,90],[1358,87,975,92],[1359,18,976,20,"headers"],[1359,25,976,27],[1359,27,976,29],[1359,31,976,33],[1359,32,976,34,"headers"],[1359,39,976,41],[1360,18,977,20,"body"],[1360,22,977,24],[1360,24,977,26],[1361,20,978,24,"email"],[1361,25,978,29],[1362,20,979,24,"type"],[1362,24,979,28],[1363,20,980,24,"gotrue_meta_security"],[1363,40,980,44],[1363,42,980,46],[1364,22,980,48,"captcha_token"],[1364,35,980,61],[1364,37,980,63,"options"],[1364,44,980,70],[1364,49,980,75],[1364,53,980,79],[1364,57,980,83,"options"],[1364,64,980,90],[1364,69,980,95],[1364,74,980,100],[1364,75,980,101],[1364,78,980,104],[1364,83,980,109],[1364,84,980,110],[1364,87,980,113,"options"],[1364,94,980,120],[1364,95,980,121,"captchaToken"],[1365,20,980,134],[1366,18,981,20],[1366,19,981,21],[1367,18,982,20,"redirectTo"],[1367,28,982,30],[1367,30,982,32,"options"],[1367,37,982,39],[1367,42,982,44],[1367,46,982,48],[1367,50,982,52,"options"],[1367,57,982,59],[1367,62,982,64],[1367,67,982,69],[1367,68,982,70],[1367,71,982,73],[1367,76,982,78],[1367,77,982,79],[1367,80,982,82,"options"],[1367,87,982,89],[1367,88,982,90,"emailRedirectTo"],[1368,16,983,16],[1368,17,983,17],[1368,18,983,18],[1369,16,975,24,"error"],[1369,21,975,29],[1369,24,975,29,"_yield12"],[1369,32,975,29],[1369,33,975,24,"error"],[1369,38,975,29],[1370,14,984,16],[1370,21,984,23],[1371,16,984,25,"data"],[1371,20,984,29],[1371,22,984,31],[1372,18,984,33,"user"],[1372,22,984,37],[1372,24,984,39],[1372,28,984,43],[1373,18,984,45,"session"],[1373,25,984,52],[1373,27,984,54],[1374,16,984,59],[1374,17,984,60],[1375,16,984,62,"error"],[1376,14,984,68],[1376,15,984,69],[1377,12,985,12],[1377,13,985,13],[1377,19,986,17],[1377,23,986,21],[1377,30,986,28],[1377,34,986,32,"credentials"],[1377,45,986,43],[1377,47,986,45],[1378,14,987,16],[1378,18,987,24,"phone"],[1378,23,987,29],[1378,26,987,49,"credentials"],[1378,37,987,60],[1378,38,987,24,"phone"],[1378,43,987,29],[1379,16,987,31,"type"],[1379,21,987,35],[1379,24,987,49,"credentials"],[1379,35,987,60],[1379,36,987,31,"type"],[1379,40,987,35],[1380,16,987,37,"options"],[1380,25,987,44],[1380,28,987,49,"credentials"],[1380,39,987,60],[1380,40,987,37,"options"],[1380,47,987,44],[1381,14,988,16],[1381,18,988,16,"_yield13"],[1381,26,988,16],[1381,35,988,46],[1381,36,988,47],[1381,37,988,48],[1381,39,988,50,"fetch_1"],[1381,46,988,57],[1381,47,988,58,"_request"],[1381,55,988,66],[1381,57,988,68],[1381,61,988,72],[1381,62,988,73,"fetch"],[1381,67,988,78],[1381,69,988,80],[1381,75,988,86],[1381,77,988,88,"endpoint"],[1381,85,988,96],[1381,87,988,98],[1382,18,989,20,"headers"],[1382,25,989,27],[1382,27,989,29],[1382,31,989,33],[1382,32,989,34,"headers"],[1382,39,989,41],[1383,18,990,20,"body"],[1383,22,990,24],[1383,24,990,26],[1384,20,991,24,"phone"],[1384,25,991,29],[1385,20,992,24,"type"],[1385,24,992,28],[1385,26,992,24,"type"],[1385,31,992,28],[1386,20,993,24,"gotrue_meta_security"],[1386,40,993,44],[1386,42,993,46],[1387,22,993,48,"captcha_token"],[1387,35,993,61],[1387,37,993,63,"options"],[1387,46,993,70],[1387,51,993,75],[1387,55,993,79],[1387,59,993,83,"options"],[1387,68,993,90],[1387,73,993,95],[1387,78,993,100],[1387,79,993,101],[1387,82,993,104],[1387,87,993,109],[1387,88,993,110],[1387,91,993,113,"options"],[1387,100,993,120],[1387,101,993,121,"captchaToken"],[1388,20,993,134],[1389,18,994,20],[1390,16,995,16],[1390,17,995,17],[1390,18,995,18],[1391,16,988,24,"data"],[1391,20,988,28],[1391,23,988,28,"_yield13"],[1391,31,988,28],[1391,32,988,24,"data"],[1391,36,988,28],[1392,16,988,30,"error"],[1392,23,988,35],[1392,26,988,35,"_yield13"],[1392,34,988,35],[1392,35,988,30,"error"],[1392,40,988,35],[1393,14,996,16],[1393,21,996,23],[1394,16,996,25,"data"],[1394,20,996,29],[1394,22,996,31],[1395,18,996,33,"user"],[1395,22,996,37],[1395,24,996,39],[1395,28,996,43],[1396,18,996,45,"session"],[1396,25,996,52],[1396,27,996,54],[1396,31,996,58],[1397,18,996,60,"messageId"],[1397,27,996,69],[1397,29,996,71,"data"],[1397,33,996,75],[1397,38,996,80],[1397,42,996,84],[1397,46,996,88,"data"],[1397,50,996,92],[1397,55,996,97],[1397,60,996,102],[1397,61,996,103],[1397,64,996,106],[1397,69,996,111],[1397,70,996,112],[1397,73,996,115,"data"],[1397,77,996,119],[1397,78,996,120,"message_id"],[1398,16,996,131],[1398,17,996,132],[1399,16,996,134,"error"],[1399,21,996,139],[1399,23,996,134,"error"],[1400,14,996,140],[1400,15,996,141],[1401,12,997,12],[1402,12,998,12],[1402,18,998,18],[1402,22,998,22,"errors_1"],[1402,30,998,30],[1402,31,998,31,"AuthInvalidCredentialsError"],[1402,58,998,58],[1402,59,998,59],[1402,120,998,120],[1402,121,998,121],[1403,10,999,8],[1403,11,999,9],[1403,12,1000,8],[1403,19,1000,15,"error"],[1403,24,1000,20],[1403,26,1000,22],[1404,12,1001,12],[1404,16,1001,16],[1404,17,1001,17],[1404,18,1001,18],[1404,20,1001,20,"errors_1"],[1404,28,1001,28],[1404,29,1001,29,"isAuthError"],[1404,40,1001,40],[1404,42,1001,42,"error"],[1404,47,1001,47],[1404,48,1001,48],[1404,50,1001,50],[1405,14,1002,16],[1405,21,1002,23],[1406,16,1002,25,"data"],[1406,20,1002,29],[1406,22,1002,31],[1407,18,1002,33,"user"],[1407,22,1002,37],[1407,24,1002,39],[1407,28,1002,43],[1408,18,1002,45,"session"],[1408,25,1002,52],[1408,27,1002,54],[1409,16,1002,59],[1409,17,1002,60],[1410,16,1002,62,"error"],[1411,14,1002,68],[1411,15,1002,69],[1412,12,1003,12],[1413,12,1004,12],[1413,18,1004,18,"error"],[1413,23,1004,23],[1414,10,1005,8],[1415,8,1006,4],[1415,9,1006,5],[1416,8,1006,5],[1416,17,970,10,"resend"],[1416,23,970,16,"resend"],[1416,24,970,16,"_x17"],[1416,28,970,16],[1417,10,970,16],[1417,17,970,16,"_resend"],[1417,24,970,16],[1417,25,970,16,"apply"],[1417,30,970,16],[1417,37,970,16,"arguments"],[1417,46,970,16],[1418,8,970,16],[1419,8,970,16],[1419,15,970,10,"resend"],[1419,21,970,16],[1420,6,970,16],[1421,6,1007,4],[1422,0,1008,0],[1423,0,1009,0],[1424,0,1010,0],[1425,0,1011,0],[1426,0,1012,0],[1427,0,1013,0],[1428,0,1014,0],[1429,0,1015,0],[1430,0,1016,0],[1431,0,1017,0],[1432,6,1007,4],[1433,4,1007,4],[1434,6,1007,4,"key"],[1434,9,1007,4],[1435,6,1007,4,"value"],[1435,11,1007,4],[1436,8,1007,4],[1436,12,1007,4,"_getSession"],[1436,23,1007,4],[1436,26,1007,4,"_asyncToGenerator"],[1436,43,1007,4],[1436,44,1018,4],[1436,57,1018,23],[1437,10,1018,23],[1437,14,1018,23,"_this7"],[1437,20,1018,23],[1438,10,1019,8],[1438,16,1019,14],[1438,20,1019,18],[1438,21,1019,19,"initializePromise"],[1438,38,1019,36],[1439,10,1020,8],[1439,14,1020,14,"result"],[1439,20,1020,20],[1439,29,1020,29],[1439,33,1020,33],[1439,34,1020,34,"_acquireLock"],[1439,46,1020,46],[1439,47,1020,47],[1439,48,1020,48],[1439,49,1020,49],[1439,64,1020,49,"_asyncToGenerator"],[1439,81,1020,49],[1439,82,1020,51],[1439,95,1020,63],[1440,12,1021,12],[1440,19,1021,19,"_this7"],[1440,25,1021,23],[1440,26,1021,24,"_useSession"],[1440,37,1021,35],[1441,14,1021,35],[1441,18,1021,35,"_ref9"],[1441,23,1021,35],[1441,26,1021,35,"_asyncToGenerator"],[1441,43,1021,35],[1441,44,1021,36],[1441,55,1021,43,"result"],[1441,61,1021,49],[1441,63,1021,54],[1442,16,1022,16],[1442,23,1022,23,"result"],[1442,29,1022,29],[1443,14,1023,12],[1443,15,1023,13],[1444,14,1023,13],[1444,31,1023,13,"_x18"],[1444,35,1023,13],[1445,16,1023,13],[1445,23,1023,13,"_ref9"],[1445,28,1023,13],[1445,29,1023,13,"apply"],[1445,34,1023,13],[1445,41,1023,13,"arguments"],[1445,50,1023,13],[1446,14,1023,13],[1447,12,1023,13],[1447,16,1023,14],[1448,10,1024,8],[1448,11,1024,9],[1448,13,1024,10],[1449,10,1025,8],[1449,17,1025,15,"result"],[1449,23,1025,21],[1450,8,1026,4],[1450,9,1026,5],[1451,8,1026,5],[1451,17,1018,10,"getSession"],[1451,27,1018,20,"getSession"],[1451,28,1018,20],[1452,10,1018,20],[1452,17,1018,20,"_getSession"],[1452,28,1018,20],[1452,29,1018,20,"apply"],[1452,34,1018,20],[1452,41,1018,20,"arguments"],[1452,50,1018,20],[1453,8,1018,20],[1454,8,1018,20],[1454,15,1018,10,"getSession"],[1454,25,1018,20],[1455,6,1018,20],[1456,6,1027,4],[1457,0,1028,0],[1458,0,1029,0],[1459,6,1027,4],[1460,4,1027,4],[1461,6,1027,4,"key"],[1461,9,1027,4],[1462,6,1027,4,"value"],[1462,11,1027,4],[1463,8,1027,4],[1463,12,1027,4,"_acquireLock2"],[1463,25,1027,4],[1463,28,1027,4,"_asyncToGenerator"],[1463,45,1027,4],[1463,46,1030,4],[1463,57,1030,23,"acquireTimeout"],[1463,71,1030,37],[1463,73,1030,39,"fn"],[1463,75,1030,41],[1463,77,1030,43],[1464,10,1030,43],[1464,14,1030,43,"_this8"],[1464,20,1030,43],[1465,10,1031,8],[1465,14,1031,12],[1465,15,1031,13,"_debug"],[1465,21,1031,19],[1465,22,1031,20],[1465,37,1031,35],[1465,39,1031,37],[1465,46,1031,44],[1465,48,1031,46,"acquireTimeout"],[1465,62,1031,60],[1465,63,1031,61],[1466,10,1032,8],[1466,14,1032,12],[1467,12,1033,12],[1467,16,1033,16],[1467,20,1033,20],[1467,21,1033,21,"lockAcquired"],[1467,33,1033,33],[1467,35,1033,35],[1468,14,1034,16],[1468,18,1034,22,"last"],[1468,22,1034,26],[1468,25,1034,29],[1468,29,1034,33],[1468,30,1034,34,"pendingInLock"],[1468,43,1034,47],[1468,44,1034,48,"length"],[1468,50,1034,54],[1468,53,1035,22],[1468,57,1035,26],[1468,58,1035,27,"pendingInLock"],[1468,71,1035,40],[1468,72,1035,41],[1468,76,1035,45],[1468,77,1035,46,"pendingInLock"],[1468,90,1035,59],[1468,91,1035,60,"length"],[1468,97,1035,66],[1468,100,1035,69],[1468,101,1035,70],[1468,102,1035,71],[1468,105,1036,22,"Promise"],[1468,112,1036,29],[1468,113,1036,30,"resolve"],[1468,120,1036,37],[1468,121,1036,38],[1468,122,1036,39],[1469,14,1037,16],[1469,18,1037,22,"result"],[1469,24,1037,28],[1469,27,1037,31,"_asyncToGenerator"],[1469,44,1037,31],[1469,45,1037,32],[1469,58,1037,44],[1470,16,1038,20],[1470,22,1038,26,"last"],[1470,26,1038,30],[1471,16,1039,20],[1471,29,1039,33,"fn"],[1471,31,1039,35],[1471,32,1039,36],[1471,33,1039,37],[1472,14,1040,16],[1472,15,1040,17],[1472,17,1040,19],[1472,18,1040,20],[1473,14,1041,16],[1473,18,1041,20],[1473,19,1041,21,"pendingInLock"],[1473,32,1041,34],[1473,33,1041,35,"push"],[1473,37,1041,39],[1473,38,1041,40,"_asyncToGenerator"],[1473,55,1041,40],[1473,56,1041,41],[1473,69,1041,53],[1474,16,1042,20],[1474,20,1042,24],[1475,18,1043,24],[1475,24,1043,30,"result"],[1475,30,1043,36],[1476,16,1044,20],[1476,17,1044,21],[1476,18,1045,20],[1476,25,1045,27,"e"],[1476,26,1045,28],[1476,28,1045,30],[1477,18,1046,24],[1478,16,1046,24],[1479,14,1048,16],[1479,15,1048,17],[1479,17,1048,19],[1479,18,1048,20],[1479,19,1048,21],[1480,14,1049,16],[1480,21,1049,23,"result"],[1480,27,1049,29],[1481,12,1050,12],[1482,12,1051,12],[1482,25,1051,25],[1482,29,1051,29],[1482,30,1051,30,"lock"],[1482,34,1051,34],[1482,35,1051,35],[1482,43,1051,43],[1482,47,1051,47],[1482,48,1051,48,"storageKey"],[1482,58,1051,58],[1482,60,1051,60],[1482,62,1051,62,"acquireTimeout"],[1482,76,1051,76],[1482,91,1051,76,"_asyncToGenerator"],[1482,108,1051,76],[1482,109,1051,78],[1482,122,1051,90],[1483,14,1052,16,"_this8"],[1483,20,1052,20],[1483,21,1052,21,"_debug"],[1483,27,1052,27],[1483,28,1052,28],[1483,43,1052,43],[1483,45,1052,45],[1483,76,1052,76],[1483,78,1052,78,"_this8"],[1483,84,1052,82],[1483,85,1052,83,"storageKey"],[1483,95,1052,93],[1483,96,1052,94],[1484,14,1053,16],[1484,18,1053,20],[1485,16,1054,20,"_this8"],[1485,22,1054,24],[1485,23,1054,25,"lockAcquired"],[1485,35,1054,37],[1485,38,1054,40],[1485,42,1054,44],[1486,16,1055,20],[1486,20,1055,26,"result"],[1486,27,1055,32],[1486,30,1055,35,"fn"],[1486,32,1055,37],[1486,33,1055,38],[1486,34,1055,39],[1487,16,1056,20,"_this8"],[1487,22,1056,24],[1487,23,1056,25,"pendingInLock"],[1487,36,1056,38],[1487,37,1056,39,"push"],[1487,41,1056,43],[1487,42,1056,44,"_asyncToGenerator"],[1487,59,1056,44],[1487,60,1056,45],[1487,73,1056,57],[1488,18,1057,24],[1488,22,1057,28],[1489,20,1058,28],[1489,26,1058,34,"result"],[1489,33,1058,40],[1490,18,1059,24],[1490,19,1059,25],[1490,20,1060,24],[1490,27,1060,31,"e"],[1490,28,1060,32],[1490,30,1060,34],[1491,20,1061,28],[1492,18,1061,28],[1493,16,1063,20],[1493,17,1063,21],[1493,19,1063,23],[1493,20,1063,24],[1493,21,1063,25],[1494,16,1064,20],[1494,22,1064,26,"result"],[1494,29,1064,32],[1495,16,1065,20],[1496,16,1066,20],[1496,23,1066,27,"_this8"],[1496,29,1066,31],[1496,30,1066,32,"pendingInLock"],[1496,43,1066,45],[1496,44,1066,46,"length"],[1496,50,1066,52],[1496,52,1066,54],[1497,18,1067,24],[1497,22,1067,30,"waitOn"],[1497,28,1067,36],[1497,31,1067,39],[1497,32,1067,40],[1497,35,1067,43,"_this8"],[1497,41,1067,47],[1497,42,1067,48,"pendingInLock"],[1497,55,1067,61],[1497,56,1067,62],[1498,18,1068,24],[1498,24,1068,30,"Promise"],[1498,31,1068,37],[1498,32,1068,38,"all"],[1498,35,1068,41],[1498,36,1068,42,"waitOn"],[1498,42,1068,48],[1498,43,1068,49],[1499,18,1069,24,"_this8"],[1499,24,1069,28],[1499,25,1069,29,"pendingInLock"],[1499,38,1069,42],[1499,39,1069,43,"splice"],[1499,45,1069,49],[1499,46,1069,50],[1499,47,1069,51],[1499,49,1069,53,"waitOn"],[1499,55,1069,59],[1499,56,1069,60,"length"],[1499,62,1069,66],[1499,63,1069,67],[1500,16,1070,20],[1501,16,1071,20],[1501,29,1071,33,"result"],[1501,36,1071,39],[1502,14,1072,16],[1502,15,1072,17],[1502,24,1073,24],[1503,16,1074,20,"_this8"],[1503,22,1074,24],[1503,23,1074,25,"_debug"],[1503,29,1074,31],[1503,30,1074,32],[1503,45,1074,47],[1503,47,1074,49],[1503,78,1074,80],[1503,80,1074,82,"_this8"],[1503,86,1074,86],[1503,87,1074,87,"storageKey"],[1503,97,1074,97],[1503,98,1074,98],[1504,16,1075,20,"_this8"],[1504,22,1075,24],[1504,23,1075,25,"lockAcquired"],[1504,35,1075,37],[1504,38,1075,40],[1504,43,1075,45],[1505,14,1076,16],[1506,12,1077,12],[1506,13,1077,13],[1506,15,1077,14],[1507,10,1078,8],[1507,11,1078,9],[1507,20,1079,16],[1508,12,1080,12],[1508,16,1080,16],[1508,17,1080,17,"_debug"],[1508,23,1080,23],[1508,24,1080,24],[1508,39,1080,39],[1508,41,1080,41],[1508,46,1080,46],[1508,47,1080,47],[1509,10,1081,8],[1510,8,1082,4],[1510,9,1082,5],[1511,8,1082,5],[1511,17,1030,10,"_acquireLock"],[1511,29,1030,22,"_acquireLock"],[1511,30,1030,22,"_x19"],[1511,34,1030,22],[1511,36,1030,22,"_x20"],[1511,40,1030,22],[1512,10,1030,22],[1512,17,1030,22,"_acquireLock2"],[1512,30,1030,22],[1512,31,1030,22,"apply"],[1512,36,1030,22],[1512,43,1030,22,"arguments"],[1512,52,1030,22],[1513,8,1030,22],[1514,8,1030,22],[1514,15,1030,10,"_acquireLock"],[1514,27,1030,22],[1515,6,1030,22],[1516,6,1083,4],[1517,0,1084,0],[1518,0,1085,0],[1519,0,1086,0],[1520,0,1087,0],[1521,0,1088,0],[1522,6,1083,4],[1523,4,1083,4],[1524,6,1083,4,"key"],[1524,9,1083,4],[1525,6,1083,4,"value"],[1525,11,1083,4],[1526,8,1083,4],[1526,12,1083,4,"_useSession2"],[1526,24,1083,4],[1526,27,1083,4,"_asyncToGenerator"],[1526,44,1083,4],[1526,45,1089,4],[1526,56,1089,22,"fn"],[1526,58,1089,24],[1526,60,1089,26],[1527,10,1090,8],[1527,14,1090,12],[1527,15,1090,13,"_debug"],[1527,21,1090,19],[1527,22,1090,20],[1527,36,1090,34],[1527,38,1090,36],[1527,45,1090,43],[1527,46,1090,44],[1528,10,1091,8],[1528,14,1091,12],[1529,12,1092,12],[1530,12,1093,12],[1530,16,1093,18,"result"],[1530,22,1093,24],[1530,31,1093,33],[1530,35,1093,37],[1530,36,1093,38,"__loadSession"],[1530,49,1093,51],[1530,50,1093,52],[1530,51,1093,53],[1531,12,1094,12],[1531,25,1094,25,"fn"],[1531,27,1094,27],[1531,28,1094,28,"result"],[1531,34,1094,34],[1531,35,1094,35],[1532,10,1095,8],[1532,11,1095,9],[1532,20,1096,16],[1533,12,1097,12],[1533,16,1097,16],[1533,17,1097,17,"_debug"],[1533,23,1097,23],[1533,24,1097,24],[1533,38,1097,38],[1533,40,1097,40],[1533,45,1097,45],[1533,46,1097,46],[1534,10,1098,8],[1535,8,1099,4],[1535,9,1099,5],[1536,8,1099,5],[1536,17,1089,10,"_useSession"],[1536,28,1089,21,"_useSession"],[1536,29,1089,21,"_x21"],[1536,33,1089,21],[1537,10,1089,21],[1537,17,1089,21,"_useSession2"],[1537,29,1089,21],[1537,30,1089,21,"apply"],[1537,35,1089,21],[1537,42,1089,21,"arguments"],[1537,51,1089,21],[1538,8,1089,21],[1539,8,1089,21],[1539,15,1089,10,"_useSession"],[1539,26,1089,21],[1540,6,1089,21],[1541,6,1100,4],[1542,0,1101,0],[1543,0,1102,0],[1544,0,1103,0],[1545,0,1104,0],[1546,6,1100,4],[1547,4,1100,4],[1548,6,1100,4,"key"],[1548,9,1100,4],[1549,6,1100,4,"value"],[1549,11,1100,4],[1550,8,1100,4],[1550,12,1100,4,"_loadSession"],[1550,24,1100,4],[1550,27,1100,4,"_asyncToGenerator"],[1550,44,1100,4],[1550,45,1105,4],[1550,58,1105,26],[1551,10,1106,8],[1551,14,1106,12],[1551,15,1106,13,"_debug"],[1551,21,1106,19],[1551,22,1106,20],[1551,40,1106,38],[1551,42,1106,40],[1551,49,1106,47],[1551,50,1106,48],[1552,10,1107,8],[1552,14,1107,12],[1552,15,1107,13],[1552,19,1107,17],[1552,20,1107,18,"lockAcquired"],[1552,32,1107,30],[1552,34,1107,32],[1553,12,1108,12],[1553,16,1108,16],[1553,17,1108,17,"_debug"],[1553,23,1108,23],[1553,24,1108,24],[1553,42,1108,42],[1553,44,1108,44],[1553,79,1108,79],[1553,81,1108,81],[1553,85,1108,85,"Error"],[1553,90,1108,90],[1553,91,1108,91],[1553,92,1108,92],[1553,93,1108,93,"stack"],[1553,98,1108,98],[1553,99,1108,99],[1554,10,1109,8],[1555,10,1110,8],[1555,14,1110,12],[1556,12,1111,12],[1556,16,1111,16,"currentSession"],[1556,30,1111,30],[1556,33,1111,33],[1556,37,1111,37],[1557,12,1112,12],[1557,16,1112,18,"maybeSession"],[1557,28,1112,30],[1557,37,1112,39],[1557,38,1112,40],[1557,39,1112,41],[1557,41,1112,43,"helpers_1"],[1557,50,1112,52],[1557,51,1112,53,"getItemAsync"],[1557,63,1112,65],[1557,65,1112,67],[1557,69,1112,71],[1557,70,1112,72,"storage"],[1557,77,1112,79],[1557,79,1112,81],[1557,83,1112,85],[1557,84,1112,86,"storageKey"],[1557,94,1112,96],[1557,95,1112,97],[1558,12,1113,12],[1558,16,1113,16],[1558,17,1113,17,"_debug"],[1558,23,1113,23],[1558,24,1113,24],[1558,39,1113,39],[1558,41,1113,41],[1558,63,1113,63],[1558,65,1113,65,"maybeSession"],[1558,77,1113,77],[1558,78,1113,78],[1559,12,1114,12],[1559,16,1114,16,"maybeSession"],[1559,28,1114,28],[1559,33,1114,33],[1559,37,1114,37],[1559,39,1114,39],[1560,14,1115,16],[1560,18,1115,20],[1560,22,1115,24],[1560,23,1115,25,"_isValidSession"],[1560,38,1115,40],[1560,39,1115,41,"maybeSession"],[1560,51,1115,53],[1560,52,1115,54],[1560,54,1115,56],[1561,16,1116,20,"currentSession"],[1561,30,1116,34],[1561,33,1116,37,"maybeSession"],[1561,45,1116,49],[1562,14,1117,16],[1562,15,1117,17],[1562,21,1118,21],[1563,16,1119,20],[1563,20,1119,24],[1563,21,1119,25,"_debug"],[1563,27,1119,31],[1563,28,1119,32],[1563,43,1119,47],[1563,45,1119,49],[1563,80,1119,84],[1563,81,1119,85],[1564,16,1120,20],[1564,22,1120,26],[1564,26,1120,30],[1564,27,1120,31,"_removeSession"],[1564,41,1120,45],[1564,42,1120,46],[1564,43,1120,47],[1565,14,1121,16],[1566,12,1122,12],[1567,12,1123,12],[1567,16,1123,16],[1567,17,1123,17,"currentSession"],[1567,31,1123,31],[1567,33,1123,33],[1568,14,1124,16],[1568,21,1124,23],[1569,16,1124,25,"data"],[1569,20,1124,29],[1569,22,1124,31],[1570,18,1124,33,"session"],[1570,25,1124,40],[1570,27,1124,42],[1571,16,1124,47],[1571,17,1124,48],[1572,16,1124,50,"error"],[1572,21,1124,55],[1572,23,1124,57],[1573,14,1124,62],[1573,15,1124,63],[1574,12,1125,12],[1575,12,1126,12],[1576,12,1127,12],[1577,12,1128,12],[1578,12,1129,12],[1579,12,1130,12],[1580,12,1131,12],[1580,16,1131,18,"hasExpired"],[1580,26,1131,28],[1580,29,1131,31,"currentSession"],[1580,43,1131,45],[1580,44,1131,46,"expires_at"],[1580,54,1131,56],[1580,57,1132,18,"currentSession"],[1580,71,1132,32],[1580,72,1132,33,"expires_at"],[1580,82,1132,43],[1580,85,1132,46],[1580,89,1132,50],[1580,92,1132,53,"Date"],[1580,96,1132,57],[1580,97,1132,58,"now"],[1580,100,1132,61],[1580,101,1132,62],[1580,102,1132,63],[1580,105,1132,66,"constants_1"],[1580,116,1132,77],[1580,117,1132,78,"EXPIRY_MARGIN_MS"],[1580,133,1132,94],[1580,136,1133,18],[1580,141,1133,23],[1581,12,1134,12],[1581,16,1134,16],[1581,17,1134,17,"_debug"],[1581,23,1134,23],[1581,24,1134,24],[1581,42,1134,42],[1581,44,1134,44],[1581,58,1134,58,"hasExpired"],[1581,68,1134,68],[1581,71,1134,71],[1581,73,1134,73],[1581,76,1134,76],[1581,82,1134,82],[1581,92,1134,92],[1581,94,1134,94],[1581,106,1134,106],[1581,108,1134,108,"currentSession"],[1581,122,1134,122],[1581,123,1134,123,"expires_at"],[1581,133,1134,133],[1581,134,1134,134],[1582,12,1135,12],[1582,16,1135,16],[1582,17,1135,17,"hasExpired"],[1582,27,1135,27],[1582,29,1135,29],[1583,14,1136,16],[1583,18,1136,20],[1583,22,1136,24],[1583,23,1136,25,"userStorage"],[1583,34,1136,36],[1583,36,1136,38],[1584,16,1137,20],[1584,20,1137,26,"maybeUser"],[1584,29,1137,35],[1584,38,1137,45],[1584,39,1137,46],[1584,40,1137,47],[1584,42,1137,49,"helpers_1"],[1584,51,1137,58],[1584,52,1137,59,"getItemAsync"],[1584,64,1137,71],[1584,66,1137,73],[1584,70,1137,77],[1584,71,1137,78,"userStorage"],[1584,82,1137,89],[1584,84,1137,91],[1584,88,1137,95],[1584,89,1137,96,"storageKey"],[1584,99,1137,106],[1584,102,1137,109],[1584,109,1137,116],[1584,110,1137,118],[1585,16,1138,20],[1585,20,1138,24,"maybeUser"],[1585,29,1138,33],[1585,34,1138,38],[1585,38,1138,42],[1585,42,1138,46,"maybeUser"],[1585,51,1138,55],[1585,56,1138,60],[1585,61,1138,65],[1585,62,1138,66],[1585,65,1138,69],[1585,70,1138,74],[1585,71,1138,75],[1585,74,1138,78,"maybeUser"],[1585,83,1138,87],[1585,84,1138,88,"user"],[1585,88,1138,92],[1585,90,1138,94],[1586,18,1139,24,"currentSession"],[1586,32,1139,38],[1586,33,1139,39,"user"],[1586,37,1139,43],[1586,40,1139,46,"maybeUser"],[1586,49,1139,55],[1586,50,1139,56,"user"],[1586,54,1139,60],[1587,16,1140,20],[1587,17,1140,21],[1587,23,1141,25],[1588,18,1142,24,"currentSession"],[1588,32,1142,38],[1588,33,1142,39,"user"],[1588,37,1142,43],[1588,40,1142,46],[1588,41,1142,47],[1588,42,1142,48],[1588,44,1142,50,"helpers_1"],[1588,53,1142,59],[1588,54,1142,60,"userNotAvailableProxy"],[1588,75,1142,81],[1588,77,1142,83],[1588,78,1142,84],[1589,16,1143,20],[1590,14,1144,16],[1591,14,1145,16],[1591,18,1145,20],[1591,22,1145,24],[1591,23,1145,25,"storage"],[1591,30,1145,32],[1591,31,1145,33,"isServer"],[1591,39,1145,41],[1591,43,1145,45,"currentSession"],[1591,57,1145,59],[1591,58,1145,60,"user"],[1591,62,1145,64],[1591,64,1145,66],[1592,16,1146,20],[1592,20,1146,24,"suppressWarning"],[1592,35,1146,39],[1592,38,1146,42],[1592,42,1146,46],[1592,43,1146,47,"suppressGetSessionWarning"],[1592,68,1146,72],[1593,16,1147,20],[1593,20,1147,26,"proxySession"],[1593,32,1147,38],[1593,35,1147,41],[1593,39,1147,45,"Proxy"],[1593,44,1147,50],[1593,45,1147,51,"currentSession"],[1593,59,1147,65],[1593,61,1147,67],[1594,18,1148,24,"get"],[1594,21,1148,27],[1594,23,1148,29,"get"],[1594,24,1148,30,"target"],[1594,30,1148,36],[1594,32,1148,38,"prop"],[1594,36,1148,42],[1594,38,1148,44,"receiver"],[1594,46,1148,52],[1594,51,1148,57],[1595,20,1149,28],[1595,24,1149,32],[1595,25,1149,33,"suppressWarning"],[1595,40,1149,48],[1595,44,1149,52,"prop"],[1595,48,1149,56],[1595,53,1149,61],[1595,59,1149,67],[1595,61,1149,69],[1596,22,1150,32],[1597,22,1151,32,"console"],[1597,29,1151,39],[1597,30,1151,40,"warn"],[1597,34,1151,44],[1597,35,1151,45],[1597,388,1151,398],[1597,389,1151,399],[1598,22,1152,32,"suppressWarning"],[1598,37,1152,47],[1598,40,1152,50],[1598,44,1152,54],[1598,45,1152,55],[1598,46,1152,56],[1599,22,1153,32],[1599,26,1153,36],[1599,27,1153,37,"suppressGetSessionWarning"],[1599,52,1153,62],[1599,55,1153,65],[1599,59,1153,69],[1599,60,1153,70],[1599,61,1153,71],[1600,20,1154,28],[1601,20,1155,28],[1601,27,1155,35,"Reflect"],[1601,34,1155,42],[1601,35,1155,43,"get"],[1601,38,1155,46],[1601,39,1155,47,"target"],[1601,45,1155,53],[1601,47,1155,55,"prop"],[1601,51,1155,59],[1601,53,1155,61,"receiver"],[1601,61,1155,69],[1601,62,1155,70],[1602,18,1156,24],[1603,16,1157,20],[1603,17,1157,21],[1603,18,1157,22],[1604,16,1158,20,"currentSession"],[1604,30,1158,34],[1604,33,1158,37,"proxySession"],[1604,45,1158,49],[1605,14,1159,16],[1606,14,1160,16],[1606,21,1160,23],[1607,16,1160,25,"data"],[1607,20,1160,29],[1607,22,1160,31],[1608,18,1160,33,"session"],[1608,25,1160,40],[1608,27,1160,42,"currentSession"],[1609,16,1160,57],[1609,17,1160,58],[1610,16,1160,60,"error"],[1610,21,1160,65],[1610,23,1160,67],[1611,14,1160,72],[1611,15,1160,73],[1612,12,1161,12],[1613,12,1162,12],[1613,16,1162,12,"_yield$this$_callRefr"],[1613,37,1162,12],[1613,46,1162,51],[1613,50,1162,55],[1613,51,1162,56,"_callRefreshToken"],[1613,68,1162,73],[1613,69,1162,74,"currentSession"],[1613,83,1162,88],[1613,84,1162,89,"refresh_token"],[1613,97,1162,102],[1613,98,1162,103],[1614,14,1162,26,"session"],[1614,21,1162,33],[1614,24,1162,33,"_yield$this$_callRefr"],[1614,45,1162,33],[1614,46,1162,20,"data"],[1614,50,1162,24],[1615,14,1162,35,"error"],[1615,19,1162,40],[1615,22,1162,40,"_yield$this$_callRefr"],[1615,43,1162,40],[1615,44,1162,35,"error"],[1615,49,1162,40],[1616,12,1163,12],[1616,16,1163,16,"error"],[1616,21,1163,21],[1616,23,1163,23],[1617,14,1164,16],[1617,21,1164,23],[1618,16,1164,25,"data"],[1618,20,1164,29],[1618,22,1164,31],[1619,18,1164,33,"session"],[1619,25,1164,40],[1619,27,1164,42],[1620,16,1164,47],[1620,17,1164,48],[1621,16,1164,50,"error"],[1622,14,1164,56],[1622,15,1164,57],[1623,12,1165,12],[1624,12,1166,12],[1624,19,1166,19],[1625,14,1166,21,"data"],[1625,18,1166,25],[1625,20,1166,27],[1626,16,1166,29,"session"],[1627,14,1166,37],[1627,15,1166,38],[1628,14,1166,40,"error"],[1628,19,1166,45],[1628,21,1166,47],[1629,12,1166,52],[1629,13,1166,53],[1630,10,1167,8],[1630,11,1167,9],[1630,20,1168,16],[1631,12,1169,12],[1631,16,1169,16],[1631,17,1169,17,"_debug"],[1631,23,1169,23],[1631,24,1169,24],[1631,42,1169,42],[1631,44,1169,44],[1631,49,1169,49],[1631,50,1169,50],[1632,10,1170,8],[1633,8,1171,4],[1633,9,1171,5],[1634,8,1171,5],[1634,17,1105,10,"__loadSession"],[1634,30,1105,23,"__loadSession"],[1634,31,1105,23],[1635,10,1105,23],[1635,17,1105,23,"_loadSession"],[1635,29,1105,23],[1635,30,1105,23,"apply"],[1635,35,1105,23],[1635,42,1105,23,"arguments"],[1635,51,1105,23],[1636,8,1105,23],[1637,8,1105,23],[1637,15,1105,10,"__loadSession"],[1637,28,1105,23],[1638,6,1105,23],[1639,6,1172,4],[1640,0,1173,0],[1641,0,1174,0],[1642,0,1175,0],[1643,0,1176,0],[1644,0,1177,0],[1645,0,1178,0],[1646,6,1172,4],[1647,4,1172,4],[1648,6,1172,4,"key"],[1648,9,1172,4],[1649,6,1172,4,"value"],[1649,11,1172,4],[1650,8,1172,4],[1650,12,1172,4,"_getUser2"],[1650,21,1172,4],[1650,24,1172,4,"_asyncToGenerator"],[1650,41,1172,4],[1650,42,1179,4],[1650,53,1179,18,"jwt"],[1650,56,1179,21],[1650,58,1179,23],[1651,10,1179,23],[1651,14,1179,23,"_this9"],[1651,20,1179,23],[1652,10,1180,8],[1652,14,1180,12,"jwt"],[1652,17,1180,15],[1652,19,1180,17],[1653,12,1181,12],[1653,25,1181,25],[1653,29,1181,29],[1653,30,1181,30,"_getUser"],[1653,38,1181,38],[1653,39,1181,39,"jwt"],[1653,42,1181,42],[1653,43,1181,43],[1654,10,1182,8],[1655,10,1183,8],[1655,16,1183,14],[1655,20,1183,18],[1655,21,1183,19,"initializePromise"],[1655,38,1183,36],[1656,10,1184,8],[1656,14,1184,14,"result"],[1656,20,1184,20],[1656,29,1184,29],[1656,33,1184,33],[1656,34,1184,34,"_acquireLock"],[1656,46,1184,46],[1656,47,1184,47],[1656,48,1184,48],[1656,49,1184,49],[1656,64,1184,49,"_asyncToGenerator"],[1656,81,1184,49],[1656,82,1184,51],[1656,95,1184,63],[1657,12,1185,12],[1657,25,1185,25,"_this9"],[1657,31,1185,29],[1657,32,1185,30,"_getUser"],[1657,40,1185,38],[1657,41,1185,39],[1657,42,1185,40],[1658,10,1186,8],[1658,11,1186,9],[1658,13,1186,10],[1659,10,1187,8],[1659,17,1187,15,"result"],[1659,23,1187,21],[1660,8,1188,4],[1660,9,1188,5],[1661,8,1188,5],[1661,17,1179,10,"getUser"],[1661,24,1179,17,"getUser"],[1661,25,1179,17,"_x22"],[1661,29,1179,17],[1662,10,1179,17],[1662,17,1179,17,"_getUser2"],[1662,26,1179,17],[1662,27,1179,17,"apply"],[1662,32,1179,17],[1662,39,1179,17,"arguments"],[1662,48,1179,17],[1663,8,1179,17],[1664,8,1179,17],[1664,15,1179,10,"getUser"],[1664,22,1179,17],[1665,6,1179,17],[1666,4,1179,17],[1667,6,1179,17,"key"],[1667,9,1179,17],[1668,6,1179,17,"value"],[1668,11,1179,17],[1669,8,1179,17],[1669,12,1179,17,"_getUser3"],[1669,21,1179,17],[1669,24,1179,17,"_asyncToGenerator"],[1669,41,1179,17],[1669,42,1189,4],[1669,53,1189,19,"jwt"],[1669,56,1189,22],[1669,58,1189,24],[1670,10,1189,24],[1670,14,1189,24,"_this0"],[1670,20,1189,24],[1671,10,1190,8],[1671,14,1190,12],[1672,12,1191,12],[1672,16,1191,16,"jwt"],[1672,19,1191,19],[1672,21,1191,21],[1673,14,1192,16],[1673,27,1192,29],[1673,28,1192,30],[1673,29,1192,31],[1673,31,1192,33,"fetch_1"],[1673,38,1192,40],[1673,39,1192,41,"_request"],[1673,47,1192,49],[1673,49,1192,51],[1673,53,1192,55],[1673,54,1192,56,"fetch"],[1673,59,1192,61],[1673,61,1192,63],[1673,66,1192,68],[1673,68,1192,70],[1673,71,1192,73],[1673,75,1192,77],[1673,76,1192,78,"url"],[1673,79,1192,81],[1673,86,1192,88],[1673,88,1192,90],[1674,16,1193,20,"headers"],[1674,23,1193,27],[1674,25,1193,29],[1674,29,1193,33],[1674,30,1193,34,"headers"],[1674,37,1193,41],[1675,16,1194,20,"jwt"],[1675,19,1194,23],[1675,21,1194,25,"jwt"],[1675,24,1194,28],[1676,16,1195,20,"xform"],[1676,21,1195,25],[1676,23,1195,27,"fetch_1"],[1676,30,1195,34],[1676,31,1195,35,"_userResponse"],[1677,14,1196,16],[1677,15,1196,17],[1677,16,1196,18],[1678,12,1197,12],[1679,12,1198,12],[1679,25,1198,25],[1679,29,1198,29],[1679,30,1198,30,"_useSession"],[1679,41,1198,41],[1680,14,1198,41],[1680,18,1198,41,"_ref13"],[1680,24,1198,41],[1680,27,1198,41,"_asyncToGenerator"],[1680,44,1198,41],[1680,45,1198,42],[1680,56,1198,49,"result"],[1680,62,1198,55],[1680,64,1198,60],[1681,16,1199,16],[1681,20,1199,20,"_a"],[1681,22,1199,22],[1681,24,1199,24,"_b"],[1681,26,1199,26],[1681,28,1199,28,"_c"],[1681,30,1199,30],[1682,16,1200,16],[1682,20,1200,24,"data"],[1682,24,1200,28],[1682,27,1200,40,"result"],[1682,33,1200,46],[1682,34,1200,24,"data"],[1682,38,1200,28],[1683,18,1200,30,"error"],[1683,23,1200,35],[1683,26,1200,40,"result"],[1683,32,1200,46],[1683,33,1200,30,"error"],[1683,38,1200,35],[1684,16,1201,16],[1684,20,1201,20,"error"],[1684,25,1201,25],[1684,27,1201,27],[1685,18,1202,20],[1685,24,1202,26,"error"],[1685,29,1202,31],[1686,16,1203,16],[1687,16,1204,16],[1688,16,1205,16],[1688,20,1205,20],[1688,22,1205,22],[1688,23,1205,23,"_a"],[1688,25,1205,25],[1688,28,1205,28,"data"],[1688,32,1205,32],[1688,33,1205,33,"session"],[1688,40,1205,40],[1688,46,1205,46],[1688,50,1205,50],[1688,54,1205,54,"_a"],[1688,56,1205,56],[1688,61,1205,61],[1688,66,1205,66],[1688,67,1205,67],[1688,70,1205,70],[1688,75,1205,75],[1688,76,1205,76],[1688,79,1205,79,"_a"],[1688,81,1205,81],[1688,82,1205,82,"access_token"],[1688,94,1205,94],[1688,95,1205,95],[1688,99,1205,99],[1688,100,1205,100,"_this0"],[1688,106,1205,104],[1688,107,1205,105,"hasCustomAuthorizationHeader"],[1688,135,1205,133],[1688,137,1205,135],[1689,18,1206,20],[1689,25,1206,27],[1690,20,1206,29,"data"],[1690,24,1206,33],[1690,26,1206,35],[1691,22,1206,37,"user"],[1691,26,1206,41],[1691,28,1206,43],[1692,20,1206,48],[1692,21,1206,49],[1693,20,1206,51,"error"],[1693,25,1206,56],[1693,27,1206,58],[1693,31,1206,62,"errors_1"],[1693,39,1206,70],[1693,40,1206,71,"AuthSessionMissingError"],[1693,63,1206,94],[1693,64,1206,95],[1694,18,1206,97],[1694,19,1206,98],[1695,16,1207,16],[1696,16,1208,16],[1696,29,1208,29],[1696,30,1208,30],[1696,31,1208,31],[1696,33,1208,33,"fetch_1"],[1696,40,1208,40],[1696,41,1208,41,"_request"],[1696,49,1208,49],[1696,51,1208,51,"_this0"],[1696,57,1208,55],[1696,58,1208,56,"fetch"],[1696,63,1208,61],[1696,65,1208,63],[1696,70,1208,68],[1696,72,1208,70],[1696,75,1208,73,"_this0"],[1696,81,1208,77],[1696,82,1208,78,"url"],[1696,85,1208,81],[1696,92,1208,88],[1696,94,1208,90],[1697,18,1209,20,"headers"],[1697,25,1209,27],[1697,27,1209,29,"_this0"],[1697,33,1209,33],[1697,34,1209,34,"headers"],[1697,41,1209,41],[1698,18,1210,20,"jwt"],[1698,21,1210,23],[1698,23,1210,25],[1698,24,1210,26,"_c"],[1698,26,1210,28],[1698,29,1210,31],[1698,30,1210,32,"_b"],[1698,32,1210,34],[1698,35,1210,37,"data"],[1698,39,1210,41],[1698,40,1210,42,"session"],[1698,47,1210,49],[1698,53,1210,55],[1698,57,1210,59],[1698,61,1210,63,"_b"],[1698,63,1210,65],[1698,68,1210,70],[1698,73,1210,75],[1698,74,1210,76],[1698,77,1210,79],[1698,82,1210,84],[1698,83,1210,85],[1698,86,1210,88,"_b"],[1698,88,1210,90],[1698,89,1210,91,"access_token"],[1698,101,1210,103],[1698,107,1210,109],[1698,111,1210,113],[1698,115,1210,117,"_c"],[1698,117,1210,119],[1698,122,1210,124],[1698,127,1210,129],[1698,128,1210,130],[1698,131,1210,133,"_c"],[1698,133,1210,135],[1698,136,1210,138,"undefined"],[1698,145,1210,147],[1699,18,1211,20,"xform"],[1699,23,1211,25],[1699,25,1211,27,"fetch_1"],[1699,32,1211,34],[1699,33,1211,35,"_userResponse"],[1700,16,1212,16],[1700,17,1212,17],[1700,18,1212,18],[1701,14,1213,12],[1701,15,1213,13],[1702,14,1213,13],[1702,31,1213,13,"_x24"],[1702,35,1213,13],[1703,16,1213,13],[1703,23,1213,13,"_ref13"],[1703,29,1213,13],[1703,30,1213,13,"apply"],[1703,35,1213,13],[1703,42,1213,13,"arguments"],[1703,51,1213,13],[1704,14,1213,13],[1705,12,1213,13],[1705,16,1213,14],[1706,10,1214,8],[1706,11,1214,9],[1706,12,1215,8],[1706,19,1215,15,"error"],[1706,24,1215,20],[1706,26,1215,22],[1707,12,1216,12],[1707,16,1216,16],[1707,17,1216,17],[1707,18,1216,18],[1707,20,1216,20,"errors_1"],[1707,28,1216,28],[1707,29,1216,29,"isAuthError"],[1707,40,1216,40],[1707,42,1216,42,"error"],[1707,47,1216,47],[1707,48,1216,48],[1707,50,1216,50],[1708,14,1217,16],[1708,18,1217,20],[1708,19,1217,21],[1708,20,1217,22],[1708,22,1217,24,"errors_1"],[1708,30,1217,32],[1708,31,1217,33,"isAuthSessionMissingError"],[1708,56,1217,58],[1708,58,1217,60,"error"],[1708,63,1217,65],[1708,64,1217,66],[1708,66,1217,68],[1709,16,1218,20],[1710,16,1219,20],[1711,16,1220,20],[1711,22,1220,26],[1711,26,1220,30],[1711,27,1220,31,"_removeSession"],[1711,41,1220,45],[1711,42,1220,46],[1711,43,1220,47],[1712,16,1221,20],[1712,22,1221,26],[1712,23,1221,27],[1712,24,1221,28],[1712,26,1221,30,"helpers_1"],[1712,35,1221,39],[1712,36,1221,40,"removeItemAsync"],[1712,51,1221,55],[1712,53,1221,57],[1712,57,1221,61],[1712,58,1221,62,"storage"],[1712,65,1221,69],[1712,67,1221,71],[1712,70,1221,74],[1712,74,1221,78],[1712,75,1221,79,"storageKey"],[1712,85,1221,89],[1712,101,1221,105],[1712,102,1221,106],[1713,14,1222,16],[1714,14,1223,16],[1714,21,1223,23],[1715,16,1223,25,"data"],[1715,20,1223,29],[1715,22,1223,31],[1716,18,1223,33,"user"],[1716,22,1223,37],[1716,24,1223,39],[1717,16,1223,44],[1717,17,1223,45],[1718,16,1223,47,"error"],[1719,14,1223,53],[1719,15,1223,54],[1720,12,1224,12],[1721,12,1225,12],[1721,18,1225,18,"error"],[1721,23,1225,23],[1722,10,1226,8],[1723,8,1227,4],[1723,9,1227,5],[1724,8,1227,5],[1724,17,1189,10,"_getUser"],[1724,25,1189,18,"_getUser"],[1724,26,1189,18,"_x23"],[1724,30,1189,18],[1725,10,1189,18],[1725,17,1189,18,"_getUser3"],[1725,26,1189,18],[1725,27,1189,18,"apply"],[1725,32,1189,18],[1725,39,1189,18,"arguments"],[1725,48,1189,18],[1726,8,1189,18],[1727,8,1189,18],[1727,15,1189,10,"_getUser"],[1727,23,1189,18],[1728,6,1189,18],[1729,6,1228,4],[1730,0,1229,0],[1731,0,1230,0],[1732,4,1228,4],[1733,6,1228,4,"key"],[1733,9,1228,4],[1734,6,1228,4,"value"],[1734,11,1228,4],[1735,8,1228,4],[1735,12,1228,4,"_updateUser2"],[1735,24,1228,4],[1735,27,1228,4,"_asyncToGenerator"],[1735,44,1228,4],[1735,45,1231,4],[1735,56,1231,21,"attributes"],[1735,66,1231,31],[1735,68,1231,47],[1736,10,1231,47],[1736,14,1231,47,"_this1"],[1736,20,1231,47],[1737,10,1231,47],[1737,14,1231,33,"options"],[1737,21,1231,40],[1737,24,1231,40,"arguments"],[1737,33,1231,40],[1737,34,1231,40,"length"],[1737,40,1231,40],[1737,48,1231,40,"arguments"],[1737,57,1231,40],[1737,65,1231,40,"undefined"],[1737,74,1231,40],[1737,77,1231,40,"arguments"],[1737,86,1231,40],[1737,92,1231,43],[1737,93,1231,44],[1737,94,1231,45],[1738,10,1232,8],[1738,16,1232,14],[1738,20,1232,18],[1738,21,1232,19,"initializePromise"],[1738,38,1232,36],[1739,10,1233,8],[1739,23,1233,21],[1739,27,1233,25],[1739,28,1233,26,"_acquireLock"],[1739,40,1233,38],[1739,41,1233,39],[1739,42,1233,40],[1739,43,1233,41],[1739,58,1233,41,"_asyncToGenerator"],[1739,75,1233,41],[1739,76,1233,43],[1739,89,1233,55],[1740,12,1234,12],[1740,25,1234,25,"_this1"],[1740,31,1234,29],[1740,32,1234,30,"_updateUser"],[1740,43,1234,41],[1740,44,1234,42,"attributes"],[1740,54,1234,52],[1740,56,1234,54,"options"],[1740,63,1234,61],[1740,64,1234,62],[1741,10,1235,8],[1741,11,1235,9],[1741,13,1235,10],[1742,8,1236,4],[1742,9,1236,5],[1743,8,1236,5],[1743,17,1231,10,"updateUser"],[1743,27,1231,20,"updateUser"],[1743,28,1231,20,"_x25"],[1743,32,1231,20],[1744,10,1231,20],[1744,17,1231,20,"_updateUser2"],[1744,29,1231,20],[1744,30,1231,20,"apply"],[1744,35,1231,20],[1744,42,1231,20,"arguments"],[1744,51,1231,20],[1745,8,1231,20],[1746,8,1231,20],[1746,15,1231,10,"updateUser"],[1746,25,1231,20],[1747,6,1231,20],[1748,4,1231,20],[1749,6,1231,20,"key"],[1749,9,1231,20],[1750,6,1231,20,"value"],[1750,11,1231,20],[1751,8,1231,20],[1751,12,1231,20,"_updateUser3"],[1751,24,1231,20],[1751,27,1231,20,"_asyncToGenerator"],[1751,44,1231,20],[1751,45,1237,4],[1751,56,1237,22,"attributes"],[1751,66,1237,32],[1751,68,1237,48],[1752,10,1237,48],[1752,14,1237,48,"_this10"],[1752,21,1237,48],[1753,10,1237,48],[1753,14,1237,34,"options"],[1753,21,1237,41],[1753,24,1237,41,"arguments"],[1753,33,1237,41],[1753,34,1237,41,"length"],[1753,40,1237,41],[1753,48,1237,41,"arguments"],[1753,57,1237,41],[1753,65,1237,41,"undefined"],[1753,74,1237,41],[1753,77,1237,41,"arguments"],[1753,86,1237,41],[1753,92,1237,44],[1753,93,1237,45],[1753,94,1237,46],[1754,10,1238,8],[1754,14,1238,12],[1755,12,1239,12],[1755,25,1239,25],[1755,29,1239,29],[1755,30,1239,30,"_useSession"],[1755,41,1239,41],[1756,14,1239,41],[1756,18,1239,41,"_ref15"],[1756,24,1239,41],[1756,27,1239,41,"_asyncToGenerator"],[1756,44,1239,41],[1756,45,1239,42],[1756,56,1239,49,"result"],[1756,62,1239,55],[1756,64,1239,60],[1757,16,1240,16],[1757,20,1240,30,"sessionData"],[1757,31,1240,41],[1757,34,1240,67,"result"],[1757,40,1240,73],[1757,41,1240,24,"data"],[1757,45,1240,28],[1758,18,1240,50,"sessionError"],[1758,30,1240,62],[1758,33,1240,67,"result"],[1758,39,1240,73],[1758,40,1240,43,"error"],[1758,45,1240,48],[1759,16,1241,16],[1759,20,1241,20,"sessionError"],[1759,32,1241,32],[1759,34,1241,34],[1760,18,1242,20],[1760,24,1242,26,"sessionError"],[1760,36,1242,38],[1761,16,1243,16],[1762,16,1244,16],[1762,20,1244,20],[1762,21,1244,21,"sessionData"],[1762,32,1244,32],[1762,33,1244,33,"session"],[1762,40,1244,40],[1762,42,1244,42],[1763,18,1245,20],[1763,24,1245,26],[1763,28,1245,30,"errors_1"],[1763,36,1245,38],[1763,37,1245,39,"AuthSessionMissingError"],[1763,60,1245,62],[1763,61,1245,63],[1763,62,1245,64],[1764,16,1246,16],[1765,16,1247,16],[1765,20,1247,22,"session"],[1765,27,1247,29],[1765,30,1247,32,"sessionData"],[1765,41,1247,43],[1765,42,1247,44,"session"],[1765,49,1247,51],[1766,16,1248,16],[1766,20,1248,20,"codeChallenge"],[1766,33,1248,33],[1766,36,1248,36],[1766,40,1248,40],[1767,16,1249,16],[1767,20,1249,20,"codeChallengeMethod"],[1767,39,1249,39],[1767,42,1249,42],[1767,46,1249,46],[1768,16,1250,16],[1768,20,1250,20,"_this10"],[1768,27,1250,24],[1768,28,1250,25,"flowType"],[1768,36,1250,33],[1768,41,1250,38],[1768,47,1250,44],[1768,51,1250,48,"attributes"],[1768,61,1250,58],[1768,62,1250,59,"email"],[1768,67,1250,64],[1768,71,1250,68],[1768,75,1250,72],[1768,77,1250,74],[1769,18,1251,20],[1770,18,1251,21],[1770,22,1251,21,"_yield14"],[1770,30,1251,21],[1770,39,1252,65],[1770,40,1252,66],[1770,41,1252,67],[1770,43,1252,69,"helpers_1"],[1770,52,1252,78],[1770,53,1252,79,"getCodeChallengeAndMethod"],[1770,78,1252,104],[1770,80,1252,106,"_this10"],[1770,87,1252,110],[1770,88,1252,111,"storage"],[1770,95,1252,118],[1770,97,1252,120,"_this10"],[1770,104,1252,124],[1770,105,1252,125,"storageKey"],[1770,115,1252,135],[1770,116,1252,136],[1771,18,1252,136],[1771,22,1252,136,"_yield15"],[1771,30,1252,136],[1771,33,1252,136,"_slicedToArray"],[1771,47,1252,136],[1771,48,1252,136,"_yield14"],[1771,56,1252,136],[1772,18,1252,21,"codeChallenge"],[1772,31,1252,34],[1772,34,1252,34,"_yield15"],[1772,42,1252,34],[1773,18,1252,36,"codeChallengeMethod"],[1773,37,1252,55],[1773,40,1252,55,"_yield15"],[1773,48,1252,55],[1774,16,1253,16],[1775,16,1254,16],[1775,20,1254,16,"_yield16"],[1775,28,1254,16],[1775,37,1254,57],[1775,38,1254,58],[1775,39,1254,59],[1775,41,1254,61,"fetch_1"],[1775,48,1254,68],[1775,49,1254,69,"_request"],[1775,57,1254,77],[1775,59,1254,79,"_this10"],[1775,66,1254,83],[1775,67,1254,84,"fetch"],[1775,72,1254,89],[1775,74,1254,91],[1775,79,1254,96],[1775,81,1254,98],[1775,84,1254,101,"_this10"],[1775,91,1254,105],[1775,92,1254,106,"url"],[1775,95,1254,109],[1775,102,1254,116],[1775,104,1254,118],[1776,20,1255,20,"headers"],[1776,27,1255,27],[1776,29,1255,29,"_this10"],[1776,36,1255,33],[1776,37,1255,34,"headers"],[1776,44,1255,41],[1777,20,1256,20,"redirectTo"],[1777,30,1256,30],[1777,32,1256,32,"options"],[1777,39,1256,39],[1777,44,1256,44],[1777,48,1256,48],[1777,52,1256,52,"options"],[1777,59,1256,59],[1777,64,1256,64],[1777,69,1256,69],[1777,70,1256,70],[1777,73,1256,73],[1777,78,1256,78],[1777,79,1256,79],[1777,82,1256,82,"options"],[1777,89,1256,89],[1777,90,1256,90,"emailRedirectTo"],[1777,105,1256,105],[1778,20,1257,20,"body"],[1778,24,1257,24],[1778,26,1257,26,"Object"],[1778,32,1257,32],[1778,33,1257,33,"assign"],[1778,39,1257,39],[1778,40,1257,40,"Object"],[1778,46,1257,46],[1778,47,1257,47,"assign"],[1778,53,1257,53],[1778,54,1257,54],[1778,55,1257,55],[1778,56,1257,56],[1778,58,1257,58,"attributes"],[1778,68,1257,68],[1778,69,1257,69],[1778,71,1257,71],[1779,22,1257,73,"code_challenge"],[1779,36,1257,87],[1779,38,1257,89,"codeChallenge"],[1779,51,1257,102],[1780,22,1257,104,"code_challenge_method"],[1780,43,1257,125],[1780,45,1257,127,"codeChallengeMethod"],[1781,20,1257,147],[1781,21,1257,148],[1781,22,1257,149],[1782,20,1258,20,"jwt"],[1782,23,1258,23],[1782,25,1258,25,"session"],[1782,32,1258,32],[1782,33,1258,33,"access_token"],[1782,45,1258,45],[1783,20,1259,20,"xform"],[1783,25,1259,25],[1783,27,1259,27,"fetch_1"],[1783,34,1259,34],[1783,35,1259,35,"_userResponse"],[1784,18,1260,16],[1784,19,1260,17],[1784,20,1260,18],[1785,18,1254,24,"data"],[1785,22,1254,28],[1785,25,1254,28,"_yield16"],[1785,33,1254,28],[1785,34,1254,24,"data"],[1785,38,1254,28],[1786,18,1254,37,"userError"],[1786,27,1254,46],[1786,30,1254,46,"_yield16"],[1786,38,1254,46],[1786,39,1254,30,"error"],[1786,44,1254,35],[1787,16,1261,16],[1787,20,1261,20,"userError"],[1787,29,1261,29],[1787,31,1262,20],[1787,37,1262,26,"userError"],[1787,46,1262,35],[1788,16,1263,16,"session"],[1788,23,1263,23],[1788,24,1263,24,"user"],[1788,28,1263,28],[1788,31,1263,31,"data"],[1788,35,1263,35],[1788,36,1263,36,"user"],[1788,40,1263,40],[1789,16,1264,16],[1789,22,1264,22,"_this10"],[1789,29,1264,26],[1789,30,1264,27,"_saveSession"],[1789,42,1264,39],[1789,43,1264,40,"session"],[1789,50,1264,47],[1789,51,1264,48],[1790,16,1265,16],[1790,22,1265,22,"_this10"],[1790,29,1265,26],[1790,30,1265,27,"_notifyAllSubscribers"],[1790,51,1265,48],[1790,52,1265,49],[1790,66,1265,63],[1790,68,1265,65,"session"],[1790,75,1265,72],[1790,76,1265,73],[1791,16,1266,16],[1791,23,1266,23],[1792,18,1266,25,"data"],[1792,22,1266,29],[1792,24,1266,31],[1793,20,1266,33,"user"],[1793,24,1266,37],[1793,26,1266,39,"session"],[1793,33,1266,46],[1793,34,1266,47,"user"],[1794,18,1266,52],[1794,19,1266,53],[1795,18,1266,55,"error"],[1795,23,1266,60],[1795,25,1266,62],[1796,16,1266,67],[1796,17,1266,68],[1797,14,1267,12],[1797,15,1267,13],[1798,14,1267,13],[1798,31,1267,13,"_x27"],[1798,35,1267,13],[1799,16,1267,13],[1799,23,1267,13,"_ref15"],[1799,29,1267,13],[1799,30,1267,13,"apply"],[1799,35,1267,13],[1799,42,1267,13,"arguments"],[1799,51,1267,13],[1800,14,1267,13],[1801,12,1267,13],[1801,16,1267,14],[1802,10,1268,8],[1802,11,1268,9],[1802,12,1269,8],[1802,19,1269,15,"error"],[1802,24,1269,20],[1802,26,1269,22],[1803,12,1270,12],[1803,16,1270,16],[1803,17,1270,17],[1803,18,1270,18],[1803,20,1270,20,"errors_1"],[1803,28,1270,28],[1803,29,1270,29,"isAuthError"],[1803,40,1270,40],[1803,42,1270,42,"error"],[1803,47,1270,47],[1803,48,1270,48],[1803,50,1270,50],[1804,14,1271,16],[1804,21,1271,23],[1805,16,1271,25,"data"],[1805,20,1271,29],[1805,22,1271,31],[1806,18,1271,33,"user"],[1806,22,1271,37],[1806,24,1271,39],[1807,16,1271,44],[1807,17,1271,45],[1808,16,1271,47,"error"],[1809,14,1271,53],[1809,15,1271,54],[1810,12,1272,12],[1811,12,1273,12],[1811,18,1273,18,"error"],[1811,23,1273,23],[1812,10,1274,8],[1813,8,1275,4],[1813,9,1275,5],[1814,8,1275,5],[1814,17,1237,10,"_updateUser"],[1814,28,1237,21,"_updateUser"],[1814,29,1237,21,"_x26"],[1814,33,1237,21],[1815,10,1237,21],[1815,17,1237,21,"_updateUser3"],[1815,29,1237,21],[1815,30,1237,21,"apply"],[1815,35,1237,21],[1815,42,1237,21,"arguments"],[1815,51,1237,21],[1816,8,1237,21],[1817,8,1237,21],[1817,15,1237,10,"_updateUser"],[1817,26,1237,21],[1818,6,1237,21],[1819,6,1276,4],[1820,0,1277,0],[1821,0,1278,0],[1822,0,1279,0],[1823,0,1280,0],[1824,4,1276,4],[1825,6,1276,4,"key"],[1825,9,1276,4],[1826,6,1276,4,"value"],[1826,11,1276,4],[1827,8,1276,4],[1827,12,1276,4,"_setSession2"],[1827,24,1276,4],[1827,27,1276,4,"_asyncToGenerator"],[1827,44,1276,4],[1827,45,1281,4],[1827,56,1281,21,"currentSession"],[1827,70,1281,35],[1827,72,1281,37],[1828,10,1281,37],[1828,14,1281,37,"_this11"],[1828,21,1281,37],[1829,10,1282,8],[1829,16,1282,14],[1829,20,1282,18],[1829,21,1282,19,"initializePromise"],[1829,38,1282,36],[1830,10,1283,8],[1830,23,1283,21],[1830,27,1283,25],[1830,28,1283,26,"_acquireLock"],[1830,40,1283,38],[1830,41,1283,39],[1830,42,1283,40],[1830,43,1283,41],[1830,58,1283,41,"_asyncToGenerator"],[1830,75,1283,41],[1830,76,1283,43],[1830,89,1283,55],[1831,12,1284,12],[1831,25,1284,25,"_this11"],[1831,32,1284,29],[1831,33,1284,30,"_setSession"],[1831,44,1284,41],[1831,45,1284,42,"currentSession"],[1831,59,1284,56],[1831,60,1284,57],[1832,10,1285,8],[1832,11,1285,9],[1832,13,1285,10],[1833,8,1286,4],[1833,9,1286,5],[1834,8,1286,5],[1834,17,1281,10,"setSession"],[1834,27,1281,20,"setSession"],[1834,28,1281,20,"_x28"],[1834,32,1281,20],[1835,10,1281,20],[1835,17,1281,20,"_setSession2"],[1835,29,1281,20],[1835,30,1281,20,"apply"],[1835,35,1281,20],[1835,42,1281,20,"arguments"],[1835,51,1281,20],[1836,8,1281,20],[1837,8,1281,20],[1837,15,1281,10,"setSession"],[1837,25,1281,20],[1838,6,1281,20],[1839,4,1281,20],[1840,6,1281,20,"key"],[1840,9,1281,20],[1841,6,1281,20,"value"],[1841,11,1281,20],[1842,8,1281,20],[1842,12,1281,20,"_setSession3"],[1842,24,1281,20],[1842,27,1281,20,"_asyncToGenerator"],[1842,44,1281,20],[1842,45,1287,4],[1842,56,1287,22,"currentSession"],[1842,70,1287,36],[1842,72,1287,38],[1843,10,1288,8],[1843,14,1288,12],[1844,12,1289,12],[1844,16,1289,16],[1844,17,1289,17,"currentSession"],[1844,31,1289,31],[1844,32,1289,32,"access_token"],[1844,44,1289,44],[1844,48,1289,48],[1844,49,1289,49,"currentSession"],[1844,63,1289,63],[1844,64,1289,64,"refresh_token"],[1844,77,1289,77],[1844,79,1289,79],[1845,14,1290,16],[1845,20,1290,22],[1845,24,1290,26,"errors_1"],[1845,32,1290,34],[1845,33,1290,35,"AuthSessionMissingError"],[1845,56,1290,58],[1845,57,1290,59],[1845,58,1290,60],[1846,12,1291,12],[1847,12,1292,12],[1847,16,1292,18,"timeNow"],[1847,23,1292,25],[1847,26,1292,28,"Date"],[1847,30,1292,32],[1847,31,1292,33,"now"],[1847,34,1292,36],[1847,35,1292,37],[1847,36,1292,38],[1847,39,1292,41],[1847,43,1292,45],[1848,12,1293,12],[1848,16,1293,16,"expiresAt"],[1848,25,1293,25],[1848,28,1293,28,"timeNow"],[1848,35,1293,35],[1849,12,1294,12],[1849,16,1294,16,"hasExpired"],[1849,26,1294,26],[1849,29,1294,29],[1849,33,1294,33],[1850,12,1295,12],[1850,16,1295,16,"session"],[1850,23,1295,23],[1850,26,1295,26],[1850,30,1295,30],[1851,12,1296,12],[1851,16,1296,12,"_ref17"],[1851,22,1296,12],[1851,25,1296,32],[1851,26,1296,33],[1851,27,1296,34],[1851,29,1296,36,"helpers_1"],[1851,38,1296,45],[1851,39,1296,46,"decodeJWT"],[1851,48,1296,55],[1851,50,1296,57,"currentSession"],[1851,64,1296,71],[1851,65,1296,72,"access_token"],[1851,77,1296,84],[1851,78,1296,85],[1852,14,1296,20,"payload"],[1852,21,1296,27],[1852,24,1296,27,"_ref17"],[1852,30,1296,27],[1852,31,1296,20,"payload"],[1852,38,1296,27],[1853,12,1297,12],[1853,16,1297,16,"payload"],[1853,23,1297,23],[1853,24,1297,24,"exp"],[1853,27,1297,27],[1853,29,1297,29],[1854,14,1298,16,"expiresAt"],[1854,23,1298,25],[1854,26,1298,28,"payload"],[1854,33,1298,35],[1854,34,1298,36,"exp"],[1854,37,1298,39],[1855,14,1299,16,"hasExpired"],[1855,24,1299,26],[1855,27,1299,29,"expiresAt"],[1855,36,1299,38],[1855,40,1299,42,"timeNow"],[1855,47,1299,49],[1856,12,1300,12],[1857,12,1301,12],[1857,16,1301,16,"hasExpired"],[1857,26,1301,26],[1857,28,1301,28],[1858,14,1302,16],[1858,18,1302,16,"_yield$this$_callRefr2"],[1858,40,1302,16],[1858,49,1302,64],[1858,53,1302,68],[1858,54,1302,69,"_callRefreshToken"],[1858,71,1302,86],[1858,72,1302,87,"currentSession"],[1858,86,1302,101],[1858,87,1302,102,"refresh_token"],[1858,100,1302,115],[1858,101,1302,116],[1859,16,1302,30,"refreshedSession"],[1859,32,1302,46],[1859,35,1302,46,"_yield$this$_callRefr2"],[1859,57,1302,46],[1859,58,1302,24,"data"],[1859,62,1302,28],[1860,16,1302,48,"error"],[1860,21,1302,53],[1860,24,1302,53,"_yield$this$_callRefr2"],[1860,46,1302,53],[1860,47,1302,48,"error"],[1860,52,1302,53],[1861,14,1303,16],[1861,18,1303,20,"error"],[1861,23,1303,25],[1861,25,1303,27],[1862,16,1304,20],[1862,23,1304,27],[1863,18,1304,29,"data"],[1863,22,1304,33],[1863,24,1304,35],[1864,20,1304,37,"user"],[1864,24,1304,41],[1864,26,1304,43],[1864,30,1304,47],[1865,20,1304,49,"session"],[1865,27,1304,56],[1865,29,1304,58],[1866,18,1304,63],[1866,19,1304,64],[1867,18,1304,66,"error"],[1867,23,1304,71],[1867,25,1304,73,"error"],[1868,16,1304,79],[1868,17,1304,80],[1869,14,1305,16],[1870,14,1306,16],[1870,18,1306,20],[1870,19,1306,21,"refreshedSession"],[1870,35,1306,37],[1870,37,1306,39],[1871,16,1307,20],[1871,23,1307,27],[1872,18,1307,29,"data"],[1872,22,1307,33],[1872,24,1307,35],[1873,20,1307,37,"user"],[1873,24,1307,41],[1873,26,1307,43],[1873,30,1307,47],[1874,20,1307,49,"session"],[1874,27,1307,56],[1874,29,1307,58],[1875,18,1307,63],[1875,19,1307,64],[1876,18,1307,66,"error"],[1876,23,1307,71],[1876,25,1307,73],[1877,16,1307,78],[1877,17,1307,79],[1878,14,1308,16],[1879,14,1309,16,"session"],[1879,21,1309,23],[1879,24,1309,26,"refreshedSession"],[1879,40,1309,42],[1880,12,1310,12],[1880,13,1310,13],[1880,19,1311,17],[1881,14,1312,16],[1881,18,1312,16,"_yield$this$_getUser"],[1881,38,1312,16],[1881,47,1312,46],[1881,51,1312,50],[1881,52,1312,51,"_getUser"],[1881,60,1312,59],[1881,61,1312,60,"currentSession"],[1881,75,1312,74],[1881,76,1312,75,"access_token"],[1881,88,1312,87],[1881,89,1312,88],[1882,16,1312,24,"data"],[1882,20,1312,28],[1882,23,1312,28,"_yield$this$_getUser"],[1882,43,1312,28],[1882,44,1312,24,"data"],[1882,48,1312,28],[1883,16,1312,30,"error"],[1883,23,1312,35],[1883,26,1312,35,"_yield$this$_getUser"],[1883,46,1312,35],[1883,47,1312,30,"error"],[1883,52,1312,35],[1884,14,1313,16],[1884,18,1313,20,"error"],[1884,25,1313,25],[1884,27,1313,27],[1885,16,1314,20],[1885,22,1314,26,"error"],[1885,29,1314,31],[1886,14,1315,16],[1887,14,1316,16,"session"],[1887,21,1316,23],[1887,24,1316,26],[1888,16,1317,20,"access_token"],[1888,28,1317,32],[1888,30,1317,34,"currentSession"],[1888,44,1317,48],[1888,45,1317,49,"access_token"],[1888,57,1317,61],[1889,16,1318,20,"refresh_token"],[1889,29,1318,33],[1889,31,1318,35,"currentSession"],[1889,45,1318,49],[1889,46,1318,50,"refresh_token"],[1889,59,1318,63],[1890,16,1319,20,"user"],[1890,20,1319,24],[1890,22,1319,26,"data"],[1890,26,1319,30],[1890,27,1319,31,"user"],[1890,31,1319,35],[1891,16,1320,20,"token_type"],[1891,26,1320,30],[1891,28,1320,32],[1891,36,1320,40],[1892,16,1321,20,"expires_in"],[1892,26,1321,30],[1892,28,1321,32,"expiresAt"],[1892,37,1321,41],[1892,40,1321,44,"timeNow"],[1892,47,1321,51],[1893,16,1322,20,"expires_at"],[1893,26,1322,30],[1893,28,1322,32,"expiresAt"],[1894,14,1323,16],[1894,15,1323,17],[1895,14,1324,16],[1895,20,1324,22],[1895,24,1324,26],[1895,25,1324,27,"_saveSession"],[1895,37,1324,39],[1895,38,1324,40,"session"],[1895,45,1324,47],[1895,46,1324,48],[1896,14,1325,16],[1896,20,1325,22],[1896,24,1325,26],[1896,25,1325,27,"_notifyAllSubscribers"],[1896,46,1325,48],[1896,47,1325,49],[1896,58,1325,60],[1896,60,1325,62,"session"],[1896,67,1325,69],[1896,68,1325,70],[1897,12,1326,12],[1898,12,1327,12],[1898,19,1327,19],[1899,14,1327,21,"data"],[1899,18,1327,25],[1899,20,1327,27],[1900,16,1327,29,"user"],[1900,20,1327,33],[1900,22,1327,35,"session"],[1900,29,1327,42],[1900,30,1327,43,"user"],[1900,34,1327,47],[1901,16,1327,49,"session"],[1902,14,1327,57],[1902,15,1327,58],[1903,14,1327,60,"error"],[1903,19,1327,65],[1903,21,1327,67],[1904,12,1327,72],[1904,13,1327,73],[1905,10,1328,8],[1905,11,1328,9],[1905,12,1329,8],[1905,19,1329,15,"error"],[1905,24,1329,20],[1905,26,1329,22],[1906,12,1330,12],[1906,16,1330,16],[1906,17,1330,17],[1906,18,1330,18],[1906,20,1330,20,"errors_1"],[1906,28,1330,28],[1906,29,1330,29,"isAuthError"],[1906,40,1330,40],[1906,42,1330,42,"error"],[1906,47,1330,47],[1906,48,1330,48],[1906,50,1330,50],[1907,14,1331,16],[1907,21,1331,23],[1908,16,1331,25,"data"],[1908,20,1331,29],[1908,22,1331,31],[1909,18,1331,33,"session"],[1909,25,1331,40],[1909,27,1331,42],[1909,31,1331,46],[1910,18,1331,48,"user"],[1910,22,1331,52],[1910,24,1331,54],[1911,16,1331,59],[1911,17,1331,60],[1912,16,1331,62,"error"],[1913,14,1331,68],[1913,15,1331,69],[1914,12,1332,12],[1915,12,1333,12],[1915,18,1333,18,"error"],[1915,23,1333,23],[1916,10,1334,8],[1917,8,1335,4],[1917,9,1335,5],[1918,8,1335,5],[1918,17,1287,10,"_setSession"],[1918,28,1287,21,"_setSession"],[1918,29,1287,21,"_x29"],[1918,33,1287,21],[1919,10,1287,21],[1919,17,1287,21,"_setSession3"],[1919,29,1287,21],[1919,30,1287,21,"apply"],[1919,35,1287,21],[1919,42,1287,21,"arguments"],[1919,51,1287,21],[1920,8,1287,21],[1921,8,1287,21],[1921,15,1287,10,"_setSession"],[1921,26,1287,21],[1922,6,1287,21],[1923,6,1336,4],[1924,0,1337,0],[1925,0,1338,0],[1926,0,1339,0],[1927,0,1340,0],[1928,0,1341,0],[1929,4,1336,4],[1930,6,1336,4,"key"],[1930,9,1336,4],[1931,6,1336,4,"value"],[1931,11,1336,4],[1932,8,1336,4],[1932,12,1336,4,"_refreshSession2"],[1932,28,1336,4],[1932,31,1336,4,"_asyncToGenerator"],[1932,48,1336,4],[1932,49,1342,4],[1932,60,1342,25,"currentSession"],[1932,74,1342,39],[1932,76,1342,41],[1933,10,1342,41],[1933,14,1342,41,"_this12"],[1933,21,1342,41],[1934,10,1343,8],[1934,16,1343,14],[1934,20,1343,18],[1934,21,1343,19,"initializePromise"],[1934,38,1343,36],[1935,10,1344,8],[1935,23,1344,21],[1935,27,1344,25],[1935,28,1344,26,"_acquireLock"],[1935,40,1344,38],[1935,41,1344,39],[1935,42,1344,40],[1935,43,1344,41],[1935,58,1344,41,"_asyncToGenerator"],[1935,75,1344,41],[1935,76,1344,43],[1935,89,1344,55],[1936,12,1345,12],[1936,25,1345,25,"_this12"],[1936,32,1345,29],[1936,33,1345,30,"_refreshSession"],[1936,48,1345,45],[1936,49,1345,46,"currentSession"],[1936,63,1345,60],[1936,64,1345,61],[1937,10,1346,8],[1937,11,1346,9],[1937,13,1346,10],[1938,8,1347,4],[1938,9,1347,5],[1939,8,1347,5],[1939,17,1342,10,"refreshSession"],[1939,31,1342,24,"refreshSession"],[1939,32,1342,24,"_x30"],[1939,36,1342,24],[1940,10,1342,24],[1940,17,1342,24,"_refreshSession2"],[1940,33,1342,24],[1940,34,1342,24,"apply"],[1940,39,1342,24],[1940,46,1342,24,"arguments"],[1940,55,1342,24],[1941,8,1342,24],[1942,8,1342,24],[1942,15,1342,10,"refreshSession"],[1942,29,1342,24],[1943,6,1342,24],[1944,4,1342,24],[1945,6,1342,24,"key"],[1945,9,1342,24],[1946,6,1342,24,"value"],[1946,11,1342,24],[1947,8,1342,24],[1947,12,1342,24,"_refreshSession3"],[1947,28,1342,24],[1947,31,1342,24,"_asyncToGenerator"],[1947,48,1342,24],[1947,49,1348,4],[1947,60,1348,26,"currentSession"],[1947,74,1348,40],[1947,76,1348,42],[1948,10,1348,42],[1948,14,1348,42,"_this13"],[1948,21,1348,42],[1949,10,1349,8],[1949,14,1349,12],[1950,12,1350,12],[1950,25,1350,25],[1950,29,1350,29],[1950,30,1350,30,"_useSession"],[1950,41,1350,41],[1951,14,1350,41],[1951,18,1350,41,"_ref19"],[1951,24,1350,41],[1951,27,1350,41,"_asyncToGenerator"],[1951,44,1350,41],[1951,45,1350,42],[1951,56,1350,49,"result"],[1951,62,1350,55],[1951,64,1350,60],[1952,16,1351,16],[1952,20,1351,20,"_a"],[1952,22,1351,22],[1953,16,1352,16],[1953,20,1352,20],[1953,21,1352,21,"currentSession"],[1953,35,1352,35],[1953,37,1352,37],[1954,18,1353,20],[1954,22,1353,28,"data"],[1954,26,1353,32],[1954,29,1353,44,"result"],[1954,35,1353,50],[1954,36,1353,28,"data"],[1954,40,1353,32],[1955,20,1353,34,"error"],[1955,27,1353,39],[1955,30,1353,44,"result"],[1955,36,1353,50],[1955,37,1353,34,"error"],[1955,42,1353,39],[1956,18,1354,20],[1956,22,1354,24,"error"],[1956,29,1354,29],[1956,31,1354,31],[1957,20,1355,24],[1957,26,1355,30,"error"],[1957,33,1355,35],[1958,18,1356,20],[1959,18,1357,20,"currentSession"],[1959,32,1357,34],[1959,35,1357,37],[1959,36,1357,38,"_a"],[1959,38,1357,40],[1959,41,1357,43,"data"],[1959,45,1357,47],[1959,46,1357,48,"session"],[1959,53,1357,55],[1959,59,1357,61],[1959,63,1357,65],[1959,67,1357,69,"_a"],[1959,69,1357,71],[1959,74,1357,76],[1959,79,1357,81],[1959,80,1357,82],[1959,83,1357,85,"_a"],[1959,85,1357,87],[1959,88,1357,90,"undefined"],[1959,97,1357,99],[1960,16,1358,16],[1961,16,1359,16],[1961,20,1359,20],[1961,22,1359,22,"currentSession"],[1961,36,1359,36],[1961,41,1359,41],[1961,45,1359,45],[1961,49,1359,49,"currentSession"],[1961,63,1359,63],[1961,68,1359,68],[1961,73,1359,73],[1961,74,1359,74],[1961,77,1359,77],[1961,82,1359,82],[1961,83,1359,83],[1961,86,1359,86,"currentSession"],[1961,100,1359,100],[1961,101,1359,101,"refresh_token"],[1961,114,1359,114],[1961,115,1359,115],[1961,117,1359,117],[1962,18,1360,20],[1962,24,1360,26],[1962,28,1360,30,"errors_1"],[1962,36,1360,38],[1962,37,1360,39,"AuthSessionMissingError"],[1962,60,1360,62],[1962,61,1360,63],[1962,62,1360,64],[1963,16,1361,16],[1964,16,1362,16],[1964,20,1362,16,"_yield$_this13$_callR"],[1964,41,1362,16],[1964,50,1362,55,"_this13"],[1964,57,1362,59],[1964,58,1362,60,"_callRefreshToken"],[1964,75,1362,77],[1964,76,1362,78,"currentSession"],[1964,90,1362,92],[1964,91,1362,93,"refresh_token"],[1964,104,1362,106],[1964,105,1362,107],[1965,18,1362,30,"session"],[1965,25,1362,37],[1965,28,1362,37,"_yield$_this13$_callR"],[1965,49,1362,37],[1965,50,1362,24,"data"],[1965,54,1362,28],[1966,18,1362,39,"error"],[1966,23,1362,44],[1966,26,1362,44,"_yield$_this13$_callR"],[1966,47,1362,44],[1966,48,1362,39,"error"],[1966,53,1362,44],[1967,16,1363,16],[1967,20,1363,20,"error"],[1967,25,1363,25],[1967,27,1363,27],[1968,18,1364,20],[1968,25,1364,27],[1969,20,1364,29,"data"],[1969,24,1364,33],[1969,26,1364,35],[1970,22,1364,37,"user"],[1970,26,1364,41],[1970,28,1364,43],[1970,32,1364,47],[1971,22,1364,49,"session"],[1971,29,1364,56],[1971,31,1364,58],[1972,20,1364,63],[1972,21,1364,64],[1973,20,1364,66,"error"],[1973,25,1364,71],[1973,27,1364,73,"error"],[1974,18,1364,79],[1974,19,1364,80],[1975,16,1365,16],[1976,16,1366,16],[1976,20,1366,20],[1976,21,1366,21,"session"],[1976,28,1366,28],[1976,30,1366,30],[1977,18,1367,20],[1977,25,1367,27],[1978,20,1367,29,"data"],[1978,24,1367,33],[1978,26,1367,35],[1979,22,1367,37,"user"],[1979,26,1367,41],[1979,28,1367,43],[1979,32,1367,47],[1980,22,1367,49,"session"],[1980,29,1367,56],[1980,31,1367,58],[1981,20,1367,63],[1981,21,1367,64],[1982,20,1367,66,"error"],[1982,25,1367,71],[1982,27,1367,73],[1983,18,1367,78],[1983,19,1367,79],[1984,16,1368,16],[1985,16,1369,16],[1985,23,1369,23],[1986,18,1369,25,"data"],[1986,22,1369,29],[1986,24,1369,31],[1987,20,1369,33,"user"],[1987,24,1369,37],[1987,26,1369,39,"session"],[1987,33,1369,46],[1987,34,1369,47,"user"],[1987,38,1369,51],[1988,20,1369,53,"session"],[1989,18,1369,61],[1989,19,1369,62],[1990,18,1369,64,"error"],[1990,23,1369,69],[1990,25,1369,71],[1991,16,1369,76],[1991,17,1369,77],[1992,14,1370,12],[1992,15,1370,13],[1993,14,1370,13],[1993,31,1370,13,"_x32"],[1993,35,1370,13],[1994,16,1370,13],[1994,23,1370,13,"_ref19"],[1994,29,1370,13],[1994,30,1370,13,"apply"],[1994,35,1370,13],[1994,42,1370,13,"arguments"],[1994,51,1370,13],[1995,14,1370,13],[1996,12,1370,13],[1996,16,1370,14],[1997,10,1371,8],[1997,11,1371,9],[1997,12,1372,8],[1997,19,1372,15,"error"],[1997,24,1372,20],[1997,26,1372,22],[1998,12,1373,12],[1998,16,1373,16],[1998,17,1373,17],[1998,18,1373,18],[1998,20,1373,20,"errors_1"],[1998,28,1373,28],[1998,29,1373,29,"isAuthError"],[1998,40,1373,40],[1998,42,1373,42,"error"],[1998,47,1373,47],[1998,48,1373,48],[1998,50,1373,50],[1999,14,1374,16],[1999,21,1374,23],[2000,16,1374,25,"data"],[2000,20,1374,29],[2000,22,1374,31],[2001,18,1374,33,"user"],[2001,22,1374,37],[2001,24,1374,39],[2001,28,1374,43],[2002,18,1374,45,"session"],[2002,25,1374,52],[2002,27,1374,54],[2003,16,1374,59],[2003,17,1374,60],[2004,16,1374,62,"error"],[2005,14,1374,68],[2005,15,1374,69],[2006,12,1375,12],[2007,12,1376,12],[2007,18,1376,18,"error"],[2007,23,1376,23],[2008,10,1377,8],[2009,8,1378,4],[2009,9,1378,5],[2010,8,1378,5],[2010,17,1348,10,"_refreshSession"],[2010,32,1348,25,"_refreshSession"],[2010,33,1348,25,"_x31"],[2010,37,1348,25],[2011,10,1348,25],[2011,17,1348,25,"_refreshSession3"],[2011,33,1348,25],[2011,34,1348,25,"apply"],[2011,39,1348,25],[2011,46,1348,25,"arguments"],[2011,55,1348,25],[2012,8,1348,25],[2013,8,1348,25],[2013,15,1348,10,"_refreshSession"],[2013,30,1348,25],[2014,6,1348,25],[2015,6,1379,4],[2016,0,1380,0],[2017,0,1381,0],[2018,4,1379,4],[2019,6,1379,4,"key"],[2019,9,1379,4],[2020,6,1379,4,"value"],[2020,11,1379,4],[2021,8,1379,4],[2021,12,1379,4,"_getSessionFromURL2"],[2021,31,1379,4],[2021,34,1379,4,"_asyncToGenerator"],[2021,51,1379,4],[2021,52,1382,4],[2021,63,1382,29,"params"],[2021,69,1382,35],[2021,71,1382,37,"callbackUrlType"],[2021,86,1382,52],[2021,88,1382,54],[2022,10,1383,8],[2022,14,1383,12],[2023,12,1384,12],[2023,16,1384,16],[2023,17,1384,17],[2023,18,1384,18],[2023,19,1384,19],[2023,21,1384,21,"helpers_1"],[2023,30,1384,30],[2023,31,1384,31,"isBrowser"],[2023,40,1384,40],[2023,42,1384,42],[2023,43,1384,43],[2023,45,1385,16],[2023,51,1385,22],[2023,55,1385,26,"errors_1"],[2023,63,1385,34],[2023,64,1385,35,"AuthImplicitGrantRedirectError"],[2023,94,1385,65],[2023,95,1385,66],[2023,117,1385,88],[2023,118,1385,89],[2024,12,1386,12],[2025,12,1387,12],[2025,16,1387,16,"params"],[2025,22,1387,22],[2025,23,1387,23,"error"],[2025,28,1387,28],[2025,32,1387,32,"params"],[2025,38,1387,38],[2025,39,1387,39,"error_description"],[2025,56,1387,56],[2025,60,1387,60,"params"],[2025,66,1387,66],[2025,67,1387,67,"error_code"],[2025,77,1387,77],[2025,79,1387,79],[2026,14,1388,16],[2027,14,1389,16],[2028,14,1390,16],[2028,20,1390,22],[2028,24,1390,26,"errors_1"],[2028,32,1390,34],[2028,33,1390,35,"AuthImplicitGrantRedirectError"],[2028,63,1390,65],[2028,64,1390,66,"params"],[2028,70,1390,72],[2028,71,1390,73,"error_description"],[2028,88,1390,90],[2028,92,1390,94],[2028,141,1390,143],[2028,143,1390,145],[2029,16,1391,20,"error"],[2029,21,1391,25],[2029,23,1391,27,"params"],[2029,29,1391,33],[2029,30,1391,34,"error"],[2029,35,1391,39],[2029,39,1391,43],[2029,58,1391,62],[2030,16,1392,20,"code"],[2030,20,1392,24],[2030,22,1392,26,"params"],[2030,28,1392,32],[2030,29,1392,33,"error_code"],[2030,39,1392,43],[2030,43,1392,47],[2031,14,1393,16],[2031,15,1393,17],[2031,16,1393,18],[2032,12,1394,12],[2033,12,1395,12],[2034,12,1396,12],[2034,20,1396,20,"callbackUrlType"],[2034,35,1396,35],[2035,14,1397,16],[2035,19,1397,21],[2035,29,1397,31],[2036,16,1398,20],[2036,20,1398,24],[2036,24,1398,28],[2036,25,1398,29,"flowType"],[2036,33,1398,37],[2036,38,1398,42],[2036,44,1398,48],[2036,46,1398,50],[2037,18,1399,24],[2037,24,1399,30],[2037,28,1399,34,"errors_1"],[2037,36,1399,42],[2037,37,1399,43,"AuthPKCEGrantCodeExchangeError"],[2037,67,1399,73],[2037,68,1399,74],[2037,96,1399,102],[2037,97,1399,103],[2038,16,1400,20],[2039,16,1401,20],[2040,14,1402,16],[2040,19,1402,21],[2040,25,1402,27],[2041,16,1403,20],[2041,20,1403,24],[2041,24,1403,28],[2041,25,1403,29,"flowType"],[2041,33,1403,37],[2041,38,1403,42],[2041,48,1403,52],[2041,50,1403,54],[2042,18,1404,24],[2042,24,1404,30],[2042,28,1404,34,"errors_1"],[2042,36,1404,42],[2042,37,1404,43,"AuthImplicitGrantRedirectError"],[2042,67,1404,73],[2042,68,1404,74],[2042,106,1404,112],[2042,107,1404,113],[2043,16,1405,20],[2044,16,1406,20],[2045,14,1407,16],[2046,14,1408,16],[2047,12,1409,12],[2048,12,1410,12],[2049,12,1411,12],[2049,16,1411,16,"callbackUrlType"],[2049,31,1411,31],[2049,36,1411,36],[2049,42,1411,42],[2049,44,1411,44],[2050,14,1412,16],[2050,18,1412,20],[2050,19,1412,21,"_debug"],[2050,25,1412,27],[2050,26,1412,28],[2050,42,1412,44],[2050,44,1412,46],[2050,51,1412,53],[2050,53,1412,55],[2050,67,1412,69],[2050,69,1412,71],[2050,73,1412,75],[2050,74,1412,76],[2051,14,1413,16],[2051,18,1413,20],[2051,19,1413,21,"params"],[2051,25,1413,27],[2051,26,1413,28,"code"],[2051,30,1413,32],[2051,32,1414,20],[2051,38,1414,26],[2051,42,1414,30,"errors_1"],[2051,50,1414,38],[2051,51,1414,39,"AuthPKCEGrantCodeExchangeError"],[2051,81,1414,69],[2051,82,1414,70],[2051,101,1414,89],[2051,102,1414,90],[2052,14,1415,16],[2052,18,1415,16,"_yield$this$_exchange"],[2052,39,1415,16],[2052,48,1415,46],[2052,52,1415,50],[2052,53,1415,51,"_exchangeCodeForSession"],[2052,76,1415,74],[2052,77,1415,75,"params"],[2052,83,1415,81],[2052,84,1415,82,"code"],[2052,88,1415,86],[2052,89,1415,87],[2053,16,1415,24,"data"],[2053,21,1415,28],[2053,24,1415,28,"_yield$this$_exchange"],[2053,45,1415,28],[2053,46,1415,24,"data"],[2053,50,1415,28],[2054,16,1415,30,"error"],[2054,23,1415,35],[2054,26,1415,35,"_yield$this$_exchange"],[2054,47,1415,35],[2054,48,1415,30,"error"],[2054,53,1415,35],[2055,14,1416,16],[2055,18,1416,20,"error"],[2055,25,1416,25],[2055,27,1417,20],[2055,33,1417,26,"error"],[2055,40,1417,31],[2056,14,1418,16],[2056,18,1418,22,"url"],[2056,21,1418,25],[2056,24,1418,28],[2056,28,1418,32,"URL"],[2056,31,1418,35],[2056,32,1418,36,"window"],[2056,38,1418,42],[2056,39,1418,43,"location"],[2056,47,1418,51],[2056,48,1418,52,"href"],[2056,52,1418,56],[2056,53,1418,57],[2057,14,1419,16,"url"],[2057,17,1419,19],[2057,18,1419,20,"searchParams"],[2057,30,1419,32],[2057,31,1419,33,"delete"],[2057,37,1419,39],[2057,38,1419,40],[2057,44,1419,46],[2057,45,1419,47],[2058,14,1420,16,"window"],[2058,20,1420,22],[2058,21,1420,23,"history"],[2058,28,1420,30],[2058,29,1420,31,"replaceState"],[2058,41,1420,43],[2058,42,1420,44,"window"],[2058,48,1420,50],[2058,49,1420,51,"history"],[2058,56,1420,58],[2058,57,1420,59,"state"],[2058,62,1420,64],[2058,64,1420,66],[2058,66,1420,68],[2058,68,1420,70,"url"],[2058,71,1420,73],[2058,72,1420,74,"toString"],[2058,80,1420,82],[2058,81,1420,83],[2058,82,1420,84],[2058,83,1420,85],[2059,14,1421,16],[2059,21,1421,23],[2060,16,1421,25,"data"],[2060,20,1421,29],[2060,22,1421,31],[2061,18,1421,33,"session"],[2061,25,1421,40],[2061,27,1421,42,"data"],[2061,32,1421,46],[2061,33,1421,47,"session"],[2061,40,1421,54],[2062,18,1421,56,"redirectType"],[2062,30,1421,68],[2062,32,1421,70],[2063,16,1421,75],[2063,17,1421,76],[2064,16,1421,78,"error"],[2064,21,1421,83],[2064,23,1421,85],[2065,14,1421,90],[2065,15,1421,91],[2066,12,1422,12],[2067,12,1423,12],[2067,16,1423,20,"provider_token"],[2067,30,1423,34],[2067,33,1423,129,"params"],[2067,39,1423,135],[2067,40,1423,20,"provider_token"],[2067,54,1423,34],[2068,14,1423,36,"provider_refresh_token"],[2068,36,1423,58],[2068,39,1423,129,"params"],[2068,45,1423,135],[2068,46,1423,36,"provider_refresh_token"],[2068,68,1423,58],[2069,14,1423,60,"access_token"],[2069,26,1423,72],[2069,29,1423,129,"params"],[2069,35,1423,135],[2069,36,1423,60,"access_token"],[2069,48,1423,72],[2070,14,1423,74,"refresh_token"],[2070,27,1423,87],[2070,30,1423,129,"params"],[2070,36,1423,135],[2070,37,1423,74,"refresh_token"],[2070,50,1423,87],[2071,14,1423,89,"expires_in"],[2071,24,1423,99],[2071,27,1423,129,"params"],[2071,33,1423,135],[2071,34,1423,89,"expires_in"],[2071,44,1423,99],[2072,14,1423,101,"expires_at"],[2072,24,1423,111],[2072,27,1423,129,"params"],[2072,33,1423,135],[2072,34,1423,101,"expires_at"],[2072,44,1423,111],[2073,14,1423,113,"token_type"],[2073,24,1423,123],[2073,27,1423,129,"params"],[2073,33,1423,135],[2073,34,1423,113,"token_type"],[2073,44,1423,123],[2074,12,1424,12],[2074,16,1424,16],[2074,17,1424,17,"access_token"],[2074,29,1424,29],[2074,33,1424,33],[2074,34,1424,34,"expires_in"],[2074,44,1424,44],[2074,48,1424,48],[2074,49,1424,49,"refresh_token"],[2074,62,1424,62],[2074,66,1424,66],[2074,67,1424,67,"token_type"],[2074,77,1424,77],[2074,79,1424,79],[2075,14,1425,16],[2075,20,1425,22],[2075,24,1425,26,"errors_1"],[2075,32,1425,34],[2075,33,1425,35,"AuthImplicitGrantRedirectError"],[2075,63,1425,65],[2075,64,1425,66],[2075,91,1425,93],[2075,92,1425,94],[2076,12,1426,12],[2077,12,1427,12],[2077,16,1427,18,"timeNow"],[2077,23,1427,25],[2077,26,1427,28,"Math"],[2077,30,1427,32],[2077,31,1427,33,"round"],[2077,36,1427,38],[2077,37,1427,39,"Date"],[2077,41,1427,43],[2077,42,1427,44,"now"],[2077,45,1427,47],[2077,46,1427,48],[2077,47,1427,49],[2077,50,1427,52],[2077,54,1427,56],[2077,55,1427,57],[2078,12,1428,12],[2078,16,1428,18,"expiresIn"],[2078,25,1428,27],[2078,28,1428,30,"parseInt"],[2078,36,1428,38],[2078,37,1428,39,"expires_in"],[2078,47,1428,49],[2078,48,1428,50],[2079,12,1429,12],[2079,16,1429,16,"expiresAt"],[2079,25,1429,25],[2079,28,1429,28,"timeNow"],[2079,35,1429,35],[2079,38,1429,38,"expiresIn"],[2079,47,1429,47],[2080,12,1430,12],[2080,16,1430,16,"expires_at"],[2080,26,1430,26],[2080,28,1430,28],[2081,14,1431,16,"expiresAt"],[2081,23,1431,25],[2081,26,1431,28,"parseInt"],[2081,34,1431,36],[2081,35,1431,37,"expires_at"],[2081,45,1431,47],[2081,46,1431,48],[2082,12,1432,12],[2083,12,1433,12],[2083,16,1433,18,"actuallyExpiresIn"],[2083,33,1433,35],[2083,36,1433,38,"expiresAt"],[2083,45,1433,47],[2083,48,1433,50,"timeNow"],[2083,55,1433,57],[2084,12,1434,12],[2084,16,1434,16,"actuallyExpiresIn"],[2084,33,1434,33],[2084,36,1434,36],[2084,40,1434,40],[2084,44,1434,44,"constants_1"],[2084,55,1434,55],[2084,56,1434,56,"AUTO_REFRESH_TICK_DURATION_MS"],[2084,85,1434,85],[2084,87,1434,87],[2085,14,1435,16,"console"],[2085,21,1435,23],[2085,22,1435,24,"warn"],[2085,26,1435,28],[2085,27,1435,29],[2085,92,1435,94,"actuallyExpiresIn"],[2085,109,1435,111],[2085,142,1435,144,"expiresIn"],[2085,151,1435,153],[2085,154,1435,156],[2085,155,1435,157],[2086,12,1436,12],[2087,12,1437,12],[2087,16,1437,18,"issuedAt"],[2087,24,1437,26],[2087,27,1437,29,"expiresAt"],[2087,36,1437,38],[2087,39,1437,41,"expiresIn"],[2087,48,1437,50],[2088,12,1438,12],[2088,16,1438,16,"timeNow"],[2088,23,1438,23],[2088,26,1438,26,"issuedAt"],[2088,34,1438,34],[2088,38,1438,38],[2088,41,1438,41],[2088,43,1438,43],[2089,14,1439,16,"console"],[2089,21,1439,23],[2089,22,1439,24,"warn"],[2089,26,1439,28],[2089,27,1439,29],[2089,124,1439,126],[2089,126,1439,128,"issuedAt"],[2089,134,1439,136],[2089,136,1439,138,"expiresAt"],[2089,145,1439,147],[2089,147,1439,149,"timeNow"],[2089,154,1439,156],[2089,155,1439,157],[2090,12,1440,12],[2090,13,1440,13],[2090,19,1441,17],[2090,23,1441,21,"timeNow"],[2090,30,1441,28],[2090,33,1441,31,"issuedAt"],[2090,41,1441,39],[2090,44,1441,42],[2090,45,1441,43],[2090,47,1441,45],[2091,14,1442,16,"console"],[2091,21,1442,23],[2091,22,1442,24,"warn"],[2091,26,1442,28],[2091,27,1442,29],[2091,137,1442,139],[2091,139,1442,141,"issuedAt"],[2091,147,1442,149],[2091,149,1442,151,"expiresAt"],[2091,158,1442,160],[2091,160,1442,162,"timeNow"],[2091,167,1442,169],[2091,168,1442,170],[2092,12,1443,12],[2093,12,1444,12],[2093,16,1444,12,"_yield$this$_getUser2"],[2093,37,1444,12],[2093,46,1444,42],[2093,50,1444,46],[2093,51,1444,47,"_getUser"],[2093,59,1444,55],[2093,60,1444,56,"access_token"],[2093,72,1444,68],[2093,73,1444,69],[2094,14,1444,20,"data"],[2094,18,1444,24],[2094,21,1444,24,"_yield$this$_getUser2"],[2094,42,1444,24],[2094,43,1444,20,"data"],[2094,47,1444,24],[2095,14,1444,26,"error"],[2095,19,1444,31],[2095,22,1444,31,"_yield$this$_getUser2"],[2095,43,1444,31],[2095,44,1444,26,"error"],[2095,49,1444,31],[2096,12,1445,12],[2096,16,1445,16,"error"],[2096,21,1445,21],[2096,23,1446,16],[2096,29,1446,22,"error"],[2096,34,1446,27],[2097,12,1447,12],[2097,16,1447,18,"session"],[2097,23,1447,25],[2097,26,1447,28],[2098,14,1448,16,"provider_token"],[2098,28,1448,30],[2099,14,1449,16,"provider_refresh_token"],[2099,36,1449,38],[2100,14,1450,16,"access_token"],[2100,26,1450,28],[2101,14,1451,16,"expires_in"],[2101,24,1451,26],[2101,26,1451,28,"expiresIn"],[2101,35,1451,37],[2102,14,1452,16,"expires_at"],[2102,24,1452,26],[2102,26,1452,28,"expiresAt"],[2102,35,1452,37],[2103,14,1453,16,"refresh_token"],[2103,27,1453,29],[2104,14,1454,16,"token_type"],[2104,24,1454,26],[2104,26,1454,28,"token_type"],[2104,36,1454,38],[2105,14,1455,16,"user"],[2105,18,1455,20],[2105,20,1455,22,"data"],[2105,24,1455,26],[2105,25,1455,27,"user"],[2106,12,1456,12],[2106,13,1456,13],[2107,12,1457,12],[2108,12,1458,12,"window"],[2108,18,1458,18],[2108,19,1458,19,"location"],[2108,27,1458,27],[2108,28,1458,28,"hash"],[2108,32,1458,32],[2108,35,1458,35],[2108,37,1458,37],[2109,12,1459,12],[2109,16,1459,16],[2109,17,1459,17,"_debug"],[2109,23,1459,23],[2109,24,1459,24],[2109,47,1459,47],[2109,49,1459,49],[2109,80,1459,80],[2109,81,1459,81],[2110,12,1460,12],[2110,19,1460,19],[2111,14,1460,21,"data"],[2111,18,1460,25],[2111,20,1460,27],[2112,16,1460,29,"session"],[2112,23,1460,36],[2113,16,1460,38,"redirectType"],[2113,28,1460,50],[2113,30,1460,52,"params"],[2113,36,1460,58],[2113,37,1460,59,"type"],[2114,14,1460,64],[2114,15,1460,65],[2115,14,1460,67,"error"],[2115,19,1460,72],[2115,21,1460,74],[2116,12,1460,79],[2116,13,1460,80],[2117,10,1461,8],[2117,11,1461,9],[2117,12,1462,8],[2117,19,1462,15,"error"],[2117,24,1462,20],[2117,26,1462,22],[2118,12,1463,12],[2118,16,1463,16],[2118,17,1463,17],[2118,18,1463,18],[2118,20,1463,20,"errors_1"],[2118,28,1463,28],[2118,29,1463,29,"isAuthError"],[2118,40,1463,40],[2118,42,1463,42,"error"],[2118,47,1463,47],[2118,48,1463,48],[2118,50,1463,50],[2119,14,1464,16],[2119,21,1464,23],[2120,16,1464,25,"data"],[2120,20,1464,29],[2120,22,1464,31],[2121,18,1464,33,"session"],[2121,25,1464,40],[2121,27,1464,42],[2121,31,1464,46],[2122,18,1464,48,"redirectType"],[2122,30,1464,60],[2122,32,1464,62],[2123,16,1464,67],[2123,17,1464,68],[2124,16,1464,70,"error"],[2125,14,1464,76],[2125,15,1464,77],[2126,12,1465,12],[2127,12,1466,12],[2127,18,1466,18,"error"],[2127,23,1466,23],[2128,10,1467,8],[2129,8,1468,4],[2129,9,1468,5],[2130,8,1468,5],[2130,17,1382,10,"_getSessionFromURL"],[2130,35,1382,28,"_getSessionFromURL"],[2130,36,1382,28,"_x33"],[2130,40,1382,28],[2130,42,1382,28,"_x34"],[2130,46,1382,28],[2131,10,1382,28],[2131,17,1382,28,"_getSessionFromURL2"],[2131,36,1382,28],[2131,37,1382,28,"apply"],[2131,42,1382,28],[2131,49,1382,28,"arguments"],[2131,58,1382,28],[2132,8,1382,28],[2133,8,1382,28],[2133,15,1382,10,"_getSessionFromURL"],[2133,33,1382,28],[2134,6,1382,28],[2135,6,1469,4],[2136,0,1470,0],[2137,0,1471,0],[2138,6,1469,4],[2139,4,1469,4],[2140,6,1469,4,"key"],[2140,9,1469,4],[2141,6,1469,4,"value"],[2141,11,1469,4],[2141,13,1472,4],[2141,22,1472,4,"_isImplicitGrantCallback"],[2141,46,1472,28,"_isImplicitGrantCallback"],[2141,47,1472,29,"params"],[2141,53,1472,35],[2141,55,1472,37],[2142,8,1473,8],[2142,15,1473,15,"Boolean"],[2142,22,1473,22],[2142,23,1473,23,"params"],[2142,29,1473,29],[2142,30,1473,30,"access_token"],[2142,42,1473,42],[2142,46,1473,46,"params"],[2142,52,1473,52],[2142,53,1473,53,"error_description"],[2142,70,1473,70],[2142,71,1473,71],[2143,6,1474,4],[2144,6,1475,4],[2145,0,1476,0],[2146,0,1477,0],[2147,4,1475,4],[2148,6,1475,4,"key"],[2148,9,1475,4],[2149,6,1475,4,"value"],[2149,11,1475,4],[2150,8,1475,4],[2150,12,1475,4,"_isPKCECallback2"],[2150,28,1475,4],[2150,31,1475,4,"_asyncToGenerator"],[2150,48,1475,4],[2150,49,1478,4],[2150,60,1478,26,"params"],[2150,66,1478,32],[2150,68,1478,34],[2151,10,1479,8],[2151,14,1479,14,"currentStorageContent"],[2151,35,1479,35],[2151,44,1479,44],[2151,45,1479,45],[2151,46,1479,46],[2151,48,1479,48,"helpers_1"],[2151,57,1479,57],[2151,58,1479,58,"getItemAsync"],[2151,70,1479,70],[2151,72,1479,72],[2151,76,1479,76],[2151,77,1479,77,"storage"],[2151,84,1479,84],[2151,86,1479,86],[2151,89,1479,89],[2151,93,1479,93],[2151,94,1479,94,"storageKey"],[2151,104,1479,104],[2151,120,1479,120],[2151,121,1479,121],[2152,10,1480,8],[2152,17,1480,15],[2152,18,1480,16],[2152,20,1480,18,"params"],[2152,26,1480,24],[2152,27,1480,25,"code"],[2152,31,1480,29],[2152,35,1480,33,"currentStorageContent"],[2152,56,1480,54],[2152,57,1480,55],[2153,8,1481,4],[2153,9,1481,5],[2154,8,1481,5],[2154,17,1478,10,"_isPKCECallback"],[2154,32,1478,25,"_isPKCECallback"],[2154,33,1478,25,"_x35"],[2154,37,1478,25],[2155,10,1478,25],[2155,17,1478,25,"_isPKCECallback2"],[2155,33,1478,25],[2155,34,1478,25,"apply"],[2155,39,1478,25],[2155,46,1478,25,"arguments"],[2155,55,1478,25],[2156,8,1478,25],[2157,8,1478,25],[2157,15,1478,10,"_isPKCECallback"],[2157,30,1478,25],[2158,6,1478,25],[2159,6,1482,4],[2160,0,1483,0],[2161,0,1484,0],[2162,0,1485,0],[2163,0,1486,0],[2164,0,1487,0],[2165,0,1488,0],[2166,0,1489,0],[2167,6,1482,4],[2168,4,1482,4],[2169,6,1482,4,"key"],[2169,9,1482,4],[2170,6,1482,4,"value"],[2170,11,1482,4],[2171,8,1482,4],[2171,12,1482,4,"_signOut2"],[2171,21,1482,4],[2171,24,1482,4,"_asyncToGenerator"],[2171,41,1482,4],[2171,42,1490,4],[2171,55,1490,49],[2172,10,1490,49],[2172,14,1490,49,"_this14"],[2172,21,1490,49],[2173,10,1490,49],[2173,14,1490,18,"options"],[2173,21,1490,25],[2173,24,1490,25,"arguments"],[2173,33,1490,25],[2173,34,1490,25,"length"],[2173,40,1490,25],[2173,48,1490,25,"arguments"],[2173,57,1490,25],[2173,65,1490,25,"undefined"],[2173,74,1490,25],[2173,77,1490,25,"arguments"],[2173,86,1490,25],[2173,92,1490,28],[2174,12,1490,30,"scope"],[2174,17,1490,35],[2174,19,1490,37],[2175,10,1490,46],[2175,11,1490,47],[2176,10,1491,8],[2176,16,1491,14],[2176,20,1491,18],[2176,21,1491,19,"initializePromise"],[2176,38,1491,36],[2177,10,1492,8],[2177,23,1492,21],[2177,27,1492,25],[2177,28,1492,26,"_acquireLock"],[2177,40,1492,38],[2177,41,1492,39],[2177,42,1492,40],[2177,43,1492,41],[2177,58,1492,41,"_asyncToGenerator"],[2177,75,1492,41],[2177,76,1492,43],[2177,89,1492,55],[2178,12,1493,12],[2178,25,1493,25,"_this14"],[2178,32,1493,29],[2178,33,1493,30,"_signOut"],[2178,41,1493,38],[2178,42,1493,39,"options"],[2178,49,1493,46],[2178,50,1493,47],[2179,10,1494,8],[2179,11,1494,9],[2179,13,1494,10],[2180,8,1495,4],[2180,9,1495,5],[2181,8,1495,5],[2181,17,1490,10,"signOut"],[2181,24,1490,17,"signOut"],[2181,25,1490,17],[2182,10,1490,17],[2182,17,1490,17,"_signOut2"],[2182,26,1490,17],[2182,27,1490,17,"apply"],[2182,32,1490,17],[2182,39,1490,17,"arguments"],[2182,48,1490,17],[2183,8,1490,17],[2184,8,1490,17],[2184,15,1490,10,"signOut"],[2184,22,1490,17],[2185,6,1490,17],[2186,4,1490,17],[2187,6,1490,17,"key"],[2187,9,1490,17],[2188,6,1490,17,"value"],[2188,11,1490,17],[2189,8,1490,17],[2189,12,1490,17,"_signOut3"],[2189,21,1490,17],[2189,24,1490,17,"_asyncToGenerator"],[2189,41,1490,17],[2189,42,1496,4],[2189,55,1496,52],[2190,10,1496,52],[2190,14,1496,52,"_this15"],[2190,21,1496,52],[2191,10,1496,52],[2191,14,1496,52,"_ref21"],[2191,20,1496,52],[2191,23,1496,52,"arguments"],[2191,32,1496,52],[2191,33,1496,52,"length"],[2191,39,1496,52],[2191,47,1496,52,"arguments"],[2191,56,1496,52],[2191,64,1496,52,"undefined"],[2191,73,1496,52],[2191,76,1496,52,"arguments"],[2191,85,1496,52],[2191,91,1496,31],[2192,14,1496,33,"scope"],[2192,19,1496,38],[2192,21,1496,40],[2193,12,1496,49],[2193,13,1496,50],[2194,12,1496,21,"scope"],[2194,17,1496,26],[2194,20,1496,26,"_ref21"],[2194,26,1496,26],[2194,27,1496,21,"scope"],[2194,32,1496,26],[2195,10,1497,8],[2195,23,1497,21],[2195,27,1497,25],[2195,28,1497,26,"_useSession"],[2195,39,1497,37],[2196,12,1497,37],[2196,16,1497,37,"_ref22"],[2196,22,1497,37],[2196,25,1497,37,"_asyncToGenerator"],[2196,42,1497,37],[2196,43,1497,38],[2196,54,1497,45,"result"],[2196,60,1497,51],[2196,62,1497,56],[2197,14,1498,12],[2197,18,1498,16,"_a"],[2197,20,1498,18],[2198,14,1499,12],[2198,18,1499,20,"data"],[2198,22,1499,24],[2198,25,1499,50,"result"],[2198,31,1499,56],[2198,32,1499,20,"data"],[2198,36,1499,24],[2199,16,1499,33,"sessionError"],[2199,28,1499,45],[2199,31,1499,50,"result"],[2199,37,1499,56],[2199,38,1499,26,"error"],[2199,43,1499,31],[2200,14,1500,12],[2200,18,1500,16,"sessionError"],[2200,30,1500,28],[2200,32,1500,30],[2201,16,1501,16],[2201,23,1501,23],[2202,18,1501,25,"error"],[2202,23,1501,30],[2202,25,1501,32,"sessionError"],[2203,16,1501,45],[2203,17,1501,46],[2204,14,1502,12],[2205,14,1503,12],[2205,18,1503,18,"accessToken"],[2205,29,1503,29],[2205,32,1503,32],[2205,33,1503,33,"_a"],[2205,35,1503,35],[2205,38,1503,38,"data"],[2205,42,1503,42],[2205,43,1503,43,"session"],[2205,50,1503,50],[2205,56,1503,56],[2205,60,1503,60],[2205,64,1503,64,"_a"],[2205,66,1503,66],[2205,71,1503,71],[2205,76,1503,76],[2205,77,1503,77],[2205,80,1503,80],[2205,85,1503,85],[2205,86,1503,86],[2205,89,1503,89,"_a"],[2205,91,1503,91],[2205,92,1503,92,"access_token"],[2205,104,1503,104],[2206,14,1504,12],[2206,18,1504,16,"accessToken"],[2206,29,1504,27],[2206,31,1504,29],[2207,16,1505,16],[2207,20,1505,16,"_yield$_this15$admin$"],[2207,41,1505,16],[2207,50,1505,40,"_this15"],[2207,57,1505,44],[2207,58,1505,45,"admin"],[2207,63,1505,50],[2207,64,1505,51,"signOut"],[2207,71,1505,58],[2207,72,1505,59,"accessToken"],[2207,83,1505,70],[2207,85,1505,72,"scope"],[2207,90,1505,77],[2207,91,1505,78],[2208,18,1505,24,"error"],[2208,23,1505,29],[2208,26,1505,29,"_yield$_this15$admin$"],[2208,47,1505,29],[2208,48,1505,24,"error"],[2208,53,1505,29],[2209,16,1506,16],[2209,20,1506,20,"error"],[2209,25,1506,25],[2209,27,1506,27],[2210,18,1507,20],[2211,18,1508,20],[2212,18,1509,20],[2212,22,1509,24],[2212,24,1509,26],[2212,25,1509,27],[2212,26,1509,28],[2212,28,1509,30,"errors_1"],[2212,36,1509,38],[2212,37,1509,39,"isAuthApiError"],[2212,51,1509,53],[2212,53,1509,55,"error"],[2212,58,1509,60],[2212,59,1509,61],[2212,64,1510,25,"error"],[2212,69,1510,30],[2212,70,1510,31,"status"],[2212,76,1510,37],[2212,81,1510,42],[2212,84,1510,45],[2212,88,1510,49,"error"],[2212,93,1510,54],[2212,94,1510,55,"status"],[2212,100,1510,61],[2212,105,1510,66],[2212,108,1510,69],[2212,112,1510,73,"error"],[2212,117,1510,78],[2212,118,1510,79,"status"],[2212,124,1510,85],[2212,129,1510,90],[2212,132,1510,93],[2212,133,1510,94],[2212,134,1510,95],[2212,136,1510,97],[2213,20,1511,24],[2213,27,1511,31],[2214,22,1511,33,"error"],[2215,20,1511,39],[2215,21,1511,40],[2216,18,1512,20],[2217,16,1513,16],[2218,14,1514,12],[2219,14,1515,12],[2219,18,1515,16,"scope"],[2219,23,1515,21],[2219,28,1515,26],[2219,36,1515,34],[2219,38,1515,36],[2220,16,1516,16],[2220,22,1516,22,"_this15"],[2220,29,1516,26],[2220,30,1516,27,"_removeSession"],[2220,44,1516,41],[2220,45,1516,42],[2220,46,1516,43],[2221,16,1517,16],[2221,22,1517,22],[2221,23,1517,23],[2221,24,1517,24],[2221,26,1517,26,"helpers_1"],[2221,35,1517,35],[2221,36,1517,36,"removeItemAsync"],[2221,51,1517,51],[2221,53,1517,53,"_this15"],[2221,60,1517,57],[2221,61,1517,58,"storage"],[2221,68,1517,65],[2221,70,1517,67],[2221,73,1517,70,"_this15"],[2221,80,1517,74],[2221,81,1517,75,"storageKey"],[2221,91,1517,85],[2221,107,1517,101],[2221,108,1517,102],[2222,14,1518,12],[2223,14,1519,12],[2223,21,1519,19],[2224,16,1519,21,"error"],[2224,21,1519,26],[2224,23,1519,28],[2225,14,1519,33],[2225,15,1519,34],[2226,12,1520,8],[2226,13,1520,9],[2227,12,1520,9],[2227,29,1520,9,"_x36"],[2227,33,1520,9],[2228,14,1520,9],[2228,21,1520,9,"_ref22"],[2228,27,1520,9],[2228,28,1520,9,"apply"],[2228,33,1520,9],[2228,40,1520,9,"arguments"],[2228,49,1520,9],[2229,12,1520,9],[2230,10,1520,9],[2230,14,1520,10],[2231,8,1521,4],[2231,9,1521,5],[2232,8,1521,5],[2232,17,1496,10,"_signOut"],[2232,25,1496,18,"_signOut"],[2232,26,1496,18],[2233,10,1496,18],[2233,17,1496,18,"_signOut3"],[2233,26,1496,18],[2233,27,1496,18,"apply"],[2233,32,1496,18],[2233,39,1496,18,"arguments"],[2233,48,1496,18],[2234,8,1496,18],[2235,8,1496,18],[2235,15,1496,10,"_signOut"],[2235,23,1496,18],[2236,6,1496,18],[2237,4,1496,18],[2238,6,1496,18,"key"],[2238,9,1496,18],[2239,6,1496,18,"value"],[2239,11,1496,18],[2239,13,1522,4],[2239,22,1522,4,"onAuthStateChange"],[2239,39,1522,21,"onAuthStateChange"],[2239,40,1522,22,"callback"],[2239,48,1522,30],[2239,50,1522,32],[2240,8,1522,32],[2240,12,1522,32,"_this16"],[2240,19,1522,32],[2241,8,1523,8],[2241,12,1523,14,"id"],[2241,14,1523,16],[2241,17,1523,19],[2241,18,1523,20],[2241,19,1523,21],[2241,21,1523,23,"helpers_1"],[2241,30,1523,32],[2241,31,1523,33,"uuid"],[2241,35,1523,37],[2241,37,1523,39],[2241,38,1523,40],[2242,8,1524,8],[2242,12,1524,14,"subscription"],[2242,24,1524,26],[2242,27,1524,29],[2243,10,1525,12,"id"],[2243,12,1525,14],[2244,10,1526,12,"callback"],[2244,18,1526,20],[2245,10,1527,12,"unsubscribe"],[2245,21,1527,23],[2245,23,1527,25,"unsubscribe"],[2245,24,1527,25],[2245,29,1527,31],[2246,12,1528,16],[2246,16,1528,20],[2246,17,1528,21,"_debug"],[2246,23,1528,27],[2246,24,1528,28],[2246,40,1528,44],[2246,42,1528,46],[2246,81,1528,85],[2246,83,1528,87,"id"],[2246,85,1528,89],[2246,86,1528,90],[2247,12,1529,16],[2247,16,1529,20],[2247,17,1529,21,"stateChangeEmitters"],[2247,36,1529,40],[2247,37,1529,41,"delete"],[2247,43,1529,47],[2247,44,1529,48,"id"],[2247,46,1529,50],[2247,47,1529,51],[2248,10,1530,12],[2249,8,1531,8],[2249,9,1531,9],[2250,8,1532,8],[2250,12,1532,12],[2250,13,1532,13,"_debug"],[2250,19,1532,19],[2250,20,1532,20],[2250,42,1532,42],[2250,44,1532,44],[2250,73,1532,73],[2250,75,1532,75,"id"],[2250,77,1532,77],[2250,78,1532,78],[2251,8,1533,8],[2251,12,1533,12],[2251,13,1533,13,"stateChangeEmitters"],[2251,32,1533,32],[2251,33,1533,33,"set"],[2251,36,1533,36],[2251,37,1533,37,"id"],[2251,39,1533,39],[2251,41,1533,41,"subscription"],[2251,53,1533,53],[2251,54,1533,54],[2252,8,1534,8,"_asyncToGenerator"],[2252,25,1534,8],[2252,26,1534,9],[2252,39,1534,21],[2253,10,1535,12],[2253,16,1535,18,"_this16"],[2253,23,1535,22],[2253,24,1535,23,"initializePromise"],[2253,41,1535,40],[2254,10,1536,12],[2254,16,1536,18,"_this16"],[2254,23,1536,22],[2254,24,1536,23,"_acquireLock"],[2254,36,1536,35],[2254,37,1536,36],[2254,38,1536,37],[2254,39,1536,38],[2254,54,1536,38,"_asyncToGenerator"],[2254,71,1536,38],[2254,72,1536,40],[2254,85,1536,52],[2255,12,1537,16,"_this16"],[2255,19,1537,20],[2255,20,1537,21,"_emitInitialSession"],[2255,39,1537,40],[2255,40,1537,41,"id"],[2255,42,1537,43],[2255,43,1537,44],[2256,10,1538,12],[2256,11,1538,13],[2256,13,1538,14],[2257,8,1539,8],[2257,9,1539,9],[2257,11,1539,11],[2257,12,1539,12],[2258,8,1540,8],[2258,15,1540,15],[2259,10,1540,17,"data"],[2259,14,1540,21],[2259,16,1540,23],[2260,12,1540,25,"subscription"],[2261,10,1540,38],[2262,8,1540,40],[2262,9,1540,41],[2263,6,1541,4],[2264,4,1541,5],[2265,6,1541,5,"key"],[2265,9,1541,5],[2266,6,1541,5,"value"],[2266,11,1541,5],[2267,8,1541,5],[2267,12,1541,5,"_emitInitialSession2"],[2267,32,1541,5],[2267,35,1541,5,"_asyncToGenerator"],[2267,52,1541,5],[2267,53,1542,4],[2267,64,1542,30,"id"],[2267,66,1542,32],[2267,68,1542,34],[2268,10,1542,34],[2268,14,1542,34,"_this17"],[2268,21,1542,34],[2269,10,1543,8],[2269,23,1543,21],[2269,27,1543,25],[2269,28,1543,26,"_useSession"],[2269,39,1543,37],[2270,12,1543,37],[2270,16,1543,37,"_ref25"],[2270,22,1543,37],[2270,25,1543,37,"_asyncToGenerator"],[2270,42,1543,37],[2270,43,1543,38],[2270,54,1543,45,"result"],[2270,60,1543,51],[2270,62,1543,56],[2271,14,1544,12],[2271,18,1544,16,"_a"],[2271,20,1544,18],[2271,22,1544,20,"_b"],[2271,24,1544,22],[2272,14,1545,12],[2272,18,1545,16],[2273,16,1546,16],[2273,20,1546,32,"session"],[2273,27,1546,39],[2273,30,1546,54,"result"],[2273,36,1546,60],[2273,37,1546,24,"data"],[2273,41,1546,28],[2273,42,1546,32,"session"],[2273,49,1546,39],[2274,18,1546,43,"error"],[2274,23,1546,48],[2274,26,1546,54,"result"],[2274,32,1546,60],[2274,33,1546,43,"error"],[2274,38,1546,48],[2275,16,1547,16],[2275,20,1547,20,"error"],[2275,25,1547,25],[2275,27,1548,20],[2275,33,1548,26,"error"],[2275,38,1548,31],[2276,16,1549,16],[2276,22,1549,23],[2276,23,1549,24,"_a"],[2276,25,1549,26],[2276,28,1549,29,"_this17"],[2276,35,1549,33],[2276,36,1549,34,"stateChangeEmitters"],[2276,55,1549,53],[2276,56,1549,54,"get"],[2276,59,1549,57],[2276,60,1549,58,"id"],[2276,62,1549,60],[2276,63,1549,61],[2276,69,1549,67],[2276,73,1549,71],[2276,77,1549,75,"_a"],[2276,79,1549,77],[2276,84,1549,82],[2276,89,1549,87],[2276,90,1549,88],[2276,93,1549,91],[2276,98,1549,96],[2276,99,1549,97],[2276,102,1549,100,"_a"],[2276,104,1549,102],[2276,105,1549,103,"callback"],[2276,113,1549,111],[2276,114,1549,112],[2276,131,1549,129],[2276,133,1549,131,"session"],[2276,140,1549,138],[2276,141,1549,139],[2277,16,1550,16,"_this17"],[2277,23,1550,20],[2277,24,1550,21,"_debug"],[2277,30,1550,27],[2277,31,1550,28],[2277,48,1550,45],[2277,50,1550,47],[2277,63,1550,60],[2277,65,1550,62,"id"],[2277,67,1550,64],[2277,69,1550,66],[2277,78,1550,75],[2277,80,1550,77,"session"],[2277,87,1550,84],[2277,88,1550,85],[2278,14,1551,12],[2278,15,1551,13],[2278,16,1552,12],[2278,23,1552,19,"err"],[2278,26,1552,22],[2278,28,1552,24],[2279,16,1553,16],[2279,22,1553,23],[2279,23,1553,24,"_b"],[2279,25,1553,26],[2279,28,1553,29,"_this17"],[2279,35,1553,33],[2279,36,1553,34,"stateChangeEmitters"],[2279,55,1553,53],[2279,56,1553,54,"get"],[2279,59,1553,57],[2279,60,1553,58,"id"],[2279,62,1553,60],[2279,63,1553,61],[2279,69,1553,67],[2279,73,1553,71],[2279,77,1553,75,"_b"],[2279,79,1553,77],[2279,84,1553,82],[2279,89,1553,87],[2279,90,1553,88],[2279,93,1553,91],[2279,98,1553,96],[2279,99,1553,97],[2279,102,1553,100,"_b"],[2279,104,1553,102],[2279,105,1553,103,"callback"],[2279,113,1553,111],[2279,114,1553,112],[2279,131,1553,129],[2279,133,1553,131],[2279,137,1553,135],[2279,138,1553,136],[2280,16,1554,16,"_this17"],[2280,23,1554,20],[2280,24,1554,21,"_debug"],[2280,30,1554,27],[2280,31,1554,28],[2280,48,1554,45],[2280,50,1554,47],[2280,63,1554,60],[2280,65,1554,62,"id"],[2280,67,1554,64],[2280,69,1554,66],[2280,76,1554,73],[2280,78,1554,75,"err"],[2280,81,1554,78],[2280,82,1554,79],[2281,16,1555,16,"console"],[2281,23,1555,23],[2281,24,1555,24,"error"],[2281,29,1555,29],[2281,30,1555,30,"err"],[2281,33,1555,33],[2281,34,1555,34],[2282,14,1556,12],[2283,12,1557,8],[2283,13,1557,9],[2284,12,1557,9],[2284,29,1557,9,"_x38"],[2284,33,1557,9],[2285,14,1557,9],[2285,21,1557,9,"_ref25"],[2285,27,1557,9],[2285,28,1557,9,"apply"],[2285,33,1557,9],[2285,40,1557,9,"arguments"],[2285,49,1557,9],[2286,12,1557,9],[2287,10,1557,9],[2287,14,1557,10],[2288,8,1558,4],[2288,9,1558,5],[2289,8,1558,5],[2289,17,1542,10,"_emitInitialSession"],[2289,36,1542,29,"_emitInitialSession"],[2289,37,1542,29,"_x37"],[2289,41,1542,29],[2290,10,1542,29],[2290,17,1542,29,"_emitInitialSession2"],[2290,37,1542,29],[2290,38,1542,29,"apply"],[2290,43,1542,29],[2290,50,1542,29,"arguments"],[2290,59,1542,29],[2291,8,1542,29],[2292,8,1542,29],[2292,15,1542,10,"_emitInitialSession"],[2292,34,1542,29],[2293,6,1542,29],[2294,6,1559,4],[2295,0,1560,0],[2296,0,1561,0],[2297,0,1562,0],[2298,0,1563,0],[2299,0,1564,0],[2300,0,1565,0],[2301,4,1559,4],[2302,6,1559,4,"key"],[2302,9,1559,4],[2303,6,1559,4,"value"],[2303,11,1559,4],[2304,8,1559,4],[2304,12,1559,4,"_resetPasswordForEmail"],[2304,34,1559,4],[2304,37,1559,4,"_asyncToGenerator"],[2304,54,1559,4],[2304,55,1566,4],[2304,66,1566,32,"email"],[2304,71,1566,37],[2304,73,1566,53],[2305,10,1566,53],[2305,14,1566,39,"options"],[2305,21,1566,46],[2305,24,1566,46,"arguments"],[2305,33,1566,46],[2305,34,1566,46,"length"],[2305,40,1566,46],[2305,48,1566,46,"arguments"],[2305,57,1566,46],[2305,65,1566,46,"undefined"],[2305,74,1566,46],[2305,77,1566,46,"arguments"],[2305,86,1566,46],[2305,92,1566,49],[2305,93,1566,50],[2305,94,1566,51],[2306,10,1567,8],[2306,14,1567,12,"codeChallenge"],[2306,27,1567,25],[2306,30,1567,28],[2306,34,1567,32],[2307,10,1568,8],[2307,14,1568,12,"codeChallengeMethod"],[2307,33,1568,31],[2307,36,1568,34],[2307,40,1568,38],[2308,10,1569,8],[2308,14,1569,12],[2308,18,1569,16],[2308,19,1569,17,"flowType"],[2308,27,1569,25],[2308,32,1569,30],[2308,38,1569,36],[2308,40,1569,38],[2309,12,1570,12],[2310,12,1570,13],[2310,16,1570,13,"_yield17"],[2310,24,1570,13],[2310,33,1571,57],[2310,34,1571,58],[2310,35,1571,59],[2310,37,1571,61,"helpers_1"],[2310,46,1571,70],[2310,47,1571,71,"getCodeChallengeAndMethod"],[2310,72,1571,96],[2310,74,1571,98],[2310,78,1571,102],[2310,79,1571,103,"storage"],[2310,86,1571,110],[2310,88,1571,112],[2310,92,1571,116],[2310,93,1571,117,"storageKey"],[2310,103,1571,127],[2310,105,1571,129],[2310,109,1571,133],[2310,110,1571,134],[2311,12,1572,12],[2311,13,1572,13],[2312,12,1572,13],[2312,16,1572,13,"_yield18"],[2312,24,1572,13],[2312,27,1572,13,"_slicedToArray"],[2312,41,1572,13],[2312,42,1572,13,"_yield17"],[2312,50,1572,13],[2313,12,1571,13,"codeChallenge"],[2313,25,1571,26],[2313,28,1571,26,"_yield18"],[2313,36,1571,26],[2314,12,1571,28,"codeChallengeMethod"],[2314,31,1571,47],[2314,34,1571,47,"_yield18"],[2314,42,1571,47],[2315,10,1573,8],[2316,10,1574,8],[2316,14,1574,12],[2317,12,1575,12],[2317,25,1575,25],[2317,26,1575,26],[2317,27,1575,27],[2317,29,1575,29,"fetch_1"],[2317,36,1575,36],[2317,37,1575,37,"_request"],[2317,45,1575,45],[2317,47,1575,47],[2317,51,1575,51],[2317,52,1575,52,"fetch"],[2317,57,1575,57],[2317,59,1575,59],[2317,65,1575,65],[2317,67,1575,67],[2317,70,1575,70],[2317,74,1575,74],[2317,75,1575,75,"url"],[2317,78,1575,78],[2317,88,1575,88],[2317,90,1575,90],[2318,14,1576,16,"body"],[2318,18,1576,20],[2318,20,1576,22],[2319,16,1577,20,"email"],[2319,21,1577,25],[2320,16,1578,20,"code_challenge"],[2320,30,1578,34],[2320,32,1578,36,"codeChallenge"],[2320,45,1578,49],[2321,16,1579,20,"code_challenge_method"],[2321,37,1579,41],[2321,39,1579,43,"codeChallengeMethod"],[2321,58,1579,62],[2322,16,1580,20,"gotrue_meta_security"],[2322,36,1580,40],[2322,38,1580,42],[2323,18,1580,44,"captcha_token"],[2323,31,1580,57],[2323,33,1580,59,"options"],[2323,40,1580,66],[2323,41,1580,67,"captchaToken"],[2324,16,1580,80],[2325,14,1581,16],[2325,15,1581,17],[2326,14,1582,16,"headers"],[2326,21,1582,23],[2326,23,1582,25],[2326,27,1582,29],[2326,28,1582,30,"headers"],[2326,35,1582,37],[2327,14,1583,16,"redirectTo"],[2327,24,1583,26],[2327,26,1583,28,"options"],[2327,33,1583,35],[2327,34,1583,36,"redirectTo"],[2328,12,1584,12],[2328,13,1584,13],[2328,14,1584,14],[2329,10,1585,8],[2329,11,1585,9],[2329,12,1586,8],[2329,19,1586,15,"error"],[2329,24,1586,20],[2329,26,1586,22],[2330,12,1587,12],[2330,16,1587,16],[2330,17,1587,17],[2330,18,1587,18],[2330,20,1587,20,"errors_1"],[2330,28,1587,28],[2330,29,1587,29,"isAuthError"],[2330,40,1587,40],[2330,42,1587,42,"error"],[2330,47,1587,47],[2330,48,1587,48],[2330,50,1587,50],[2331,14,1588,16],[2331,21,1588,23],[2332,16,1588,25,"data"],[2332,20,1588,29],[2332,22,1588,31],[2332,26,1588,35],[2333,16,1588,37,"error"],[2334,14,1588,43],[2334,15,1588,44],[2335,12,1589,12],[2336,12,1590,12],[2336,18,1590,18,"error"],[2336,23,1590,23],[2337,10,1591,8],[2338,8,1592,4],[2338,9,1592,5],[2339,8,1592,5],[2339,17,1566,10,"resetPasswordForEmail"],[2339,38,1566,31,"resetPasswordForEmail"],[2339,39,1566,31,"_x39"],[2339,43,1566,31],[2340,10,1566,31],[2340,17,1566,31,"_resetPasswordForEmail"],[2340,39,1566,31],[2340,40,1566,31,"apply"],[2340,45,1566,31],[2340,52,1566,31,"arguments"],[2340,61,1566,31],[2341,8,1566,31],[2342,8,1566,31],[2342,15,1566,10,"resetPasswordForEmail"],[2342,36,1566,31],[2343,6,1566,31],[2344,6,1593,4],[2345,0,1594,0],[2346,0,1595,0],[2347,6,1593,4],[2348,4,1593,4],[2349,6,1593,4,"key"],[2349,9,1593,4],[2350,6,1593,4,"value"],[2350,11,1593,4],[2351,8,1593,4],[2351,12,1593,4,"_getUserIdentities"],[2351,30,1593,4],[2351,33,1593,4,"_asyncToGenerator"],[2351,50,1593,4],[2351,51,1596,4],[2351,64,1596,30],[2352,10,1597,8],[2352,14,1597,12,"_a"],[2352,16,1597,14],[2353,10,1598,8],[2353,14,1598,12],[2354,12,1599,12],[2354,16,1599,12,"_yield$this$getUser"],[2354,35,1599,12],[2354,44,1599,42],[2354,48,1599,46],[2354,49,1599,47,"getUser"],[2354,56,1599,54],[2354,57,1599,55],[2354,58,1599,56],[2355,14,1599,20,"data"],[2355,18,1599,24],[2355,21,1599,24,"_yield$this$getUser"],[2355,40,1599,24],[2355,41,1599,20,"data"],[2355,45,1599,24],[2356,14,1599,26,"error"],[2356,19,1599,31],[2356,22,1599,31,"_yield$this$getUser"],[2356,41,1599,31],[2356,42,1599,26,"error"],[2356,47,1599,31],[2357,12,1600,12],[2357,16,1600,16,"error"],[2357,21,1600,21],[2357,23,1601,16],[2357,29,1601,22,"error"],[2357,34,1601,27],[2358,12,1602,12],[2358,19,1602,19],[2359,14,1602,21,"data"],[2359,18,1602,25],[2359,20,1602,27],[2360,16,1602,29,"identities"],[2360,26,1602,39],[2360,28,1602,41],[2360,29,1602,42,"_a"],[2360,31,1602,44],[2360,34,1602,47,"data"],[2360,38,1602,51],[2360,39,1602,52,"user"],[2360,43,1602,56],[2360,44,1602,57,"identities"],[2360,54,1602,67],[2360,60,1602,73],[2360,64,1602,77],[2360,68,1602,81,"_a"],[2360,70,1602,83],[2360,75,1602,88],[2360,80,1602,93],[2360,81,1602,94],[2360,84,1602,97,"_a"],[2360,86,1602,99],[2360,89,1602,102],[2361,14,1602,105],[2361,15,1602,106],[2362,14,1602,108,"error"],[2362,19,1602,113],[2362,21,1602,115],[2363,12,1602,120],[2363,13,1602,121],[2364,10,1603,8],[2364,11,1603,9],[2364,12,1604,8],[2364,19,1604,15,"error"],[2364,24,1604,20],[2364,26,1604,22],[2365,12,1605,12],[2365,16,1605,16],[2365,17,1605,17],[2365,18,1605,18],[2365,20,1605,20,"errors_1"],[2365,28,1605,28],[2365,29,1605,29,"isAuthError"],[2365,40,1605,40],[2365,42,1605,42,"error"],[2365,47,1605,47],[2365,48,1605,48],[2365,50,1605,50],[2366,14,1606,16],[2366,21,1606,23],[2367,16,1606,25,"data"],[2367,20,1606,29],[2367,22,1606,31],[2367,26,1606,35],[2368,16,1606,37,"error"],[2369,14,1606,43],[2369,15,1606,44],[2370,12,1607,12],[2371,12,1608,12],[2371,18,1608,18,"error"],[2371,23,1608,23],[2372,10,1609,8],[2373,8,1610,4],[2373,9,1610,5],[2374,8,1610,5],[2374,17,1596,10,"getUserIdentities"],[2374,34,1596,27,"getUserIdentities"],[2374,35,1596,27],[2375,10,1596,27],[2375,17,1596,27,"_getUserIdentities"],[2375,35,1596,27],[2375,36,1596,27,"apply"],[2375,41,1596,27],[2375,48,1596,27,"arguments"],[2375,57,1596,27],[2376,8,1596,27],[2377,8,1596,27],[2377,15,1596,10,"getUserIdentities"],[2377,32,1596,27],[2378,6,1596,27],[2379,4,1596,27],[2380,6,1596,27,"key"],[2380,9,1596,27],[2381,6,1596,27,"value"],[2381,11,1596,27],[2382,8,1596,27],[2382,12,1596,27,"_linkIdentity"],[2382,25,1596,27],[2382,28,1596,27,"_asyncToGenerator"],[2382,45,1596,27],[2382,46,1611,4],[2382,57,1611,23,"credentials"],[2382,68,1611,34],[2382,70,1611,36],[2383,10,1612,8],[2383,14,1612,12],[2383,21,1612,19],[2383,25,1612,23,"credentials"],[2383,36,1612,34],[2383,38,1612,36],[2384,12,1613,12],[2384,19,1613,19],[2384,23,1613,23],[2384,24,1613,24,"linkIdentityIdToken"],[2384,43,1613,43],[2384,44,1613,44,"credentials"],[2384,55,1613,55],[2384,56,1613,56],[2385,10,1614,8],[2386,10,1615,8],[2386,17,1615,15],[2386,21,1615,19],[2386,22,1615,20,"linkIdentityOAuth"],[2386,39,1615,37],[2386,40,1615,38,"credentials"],[2386,51,1615,49],[2386,52,1615,50],[2387,8,1616,4],[2387,9,1616,5],[2388,8,1616,5],[2388,17,1611,10,"linkIdentity"],[2388,29,1611,22,"linkIdentity"],[2388,30,1611,22,"_x40"],[2388,34,1611,22],[2389,10,1611,22],[2389,17,1611,22,"_linkIdentity"],[2389,30,1611,22],[2389,31,1611,22,"apply"],[2389,36,1611,22],[2389,43,1611,22,"arguments"],[2389,52,1611,22],[2390,8,1611,22],[2391,8,1611,22],[2391,15,1611,10,"linkIdentity"],[2391,27,1611,22],[2392,6,1611,22],[2393,4,1611,22],[2394,6,1611,22,"key"],[2394,9,1611,22],[2395,6,1611,22,"value"],[2395,11,1611,22],[2396,8,1611,22],[2396,12,1611,22,"_linkIdentityOAuth"],[2396,30,1611,22],[2396,33,1611,22,"_asyncToGenerator"],[2396,50,1611,22],[2396,51,1617,4],[2396,62,1617,28,"credentials"],[2396,73,1617,39],[2396,75,1617,41],[2397,10,1617,41],[2397,14,1617,41,"_this18"],[2397,21,1617,41],[2398,10,1618,8],[2398,14,1618,12,"_a"],[2398,16,1618,14],[2399,10,1619,8],[2399,14,1619,12],[2400,12,1620,12],[2400,16,1620,12,"_yield$this$_useSessi"],[2400,37,1620,12],[2400,46,1620,42],[2400,50,1620,46],[2400,51,1620,47,"_useSession"],[2400,62,1620,58],[2401,16,1620,58],[2401,20,1620,58,"_ref26"],[2401,26,1620,58],[2401,29,1620,58,"_asyncToGenerator"],[2401,46,1620,58],[2401,47,1620,59],[2401,58,1620,66,"result"],[2401,64,1620,72],[2401,66,1620,77],[2402,18,1621,16],[2402,22,1621,20,"_a"],[2402,24,1621,22],[2402,26,1621,24,"_b"],[2402,28,1621,26],[2402,30,1621,28,"_c"],[2402,32,1621,30],[2402,34,1621,32,"_d"],[2402,36,1621,34],[2402,38,1621,36,"_e"],[2402,40,1621,38],[2403,18,1622,16],[2403,22,1622,24,"data"],[2403,26,1622,28],[2403,29,1622,40,"result"],[2403,35,1622,46],[2403,36,1622,24,"data"],[2403,40,1622,28],[2404,20,1622,30,"error"],[2404,25,1622,35],[2404,28,1622,40,"result"],[2404,34,1622,46],[2404,35,1622,30,"error"],[2404,40,1622,35],[2405,18,1623,16],[2405,22,1623,20,"error"],[2405,27,1623,25],[2405,29,1624,20],[2405,35,1624,26,"error"],[2405,40,1624,31],[2406,18,1625,16],[2406,22,1625,22,"url"],[2406,25,1625,25],[2406,34,1625,34,"_this18"],[2406,41,1625,38],[2406,42,1625,39,"_getUrlForProvider"],[2406,60,1625,57],[2406,61,1625,58],[2406,64,1625,61,"_this18"],[2406,71,1625,65],[2406,72,1625,66,"url"],[2406,75,1625,69],[2406,103,1625,97],[2406,105,1625,99,"credentials"],[2406,116,1625,110],[2406,117,1625,111,"provider"],[2406,125,1625,119],[2406,127,1625,121],[2407,20,1626,20,"redirectTo"],[2407,30,1626,30],[2407,32,1626,32],[2407,33,1626,33,"_a"],[2407,35,1626,35],[2407,38,1626,38,"credentials"],[2407,49,1626,49],[2407,50,1626,50,"options"],[2407,57,1626,57],[2407,63,1626,63],[2407,67,1626,67],[2407,71,1626,71,"_a"],[2407,73,1626,73],[2407,78,1626,78],[2407,83,1626,83],[2407,84,1626,84],[2407,87,1626,87],[2407,92,1626,92],[2407,93,1626,93],[2407,96,1626,96,"_a"],[2407,98,1626,98],[2407,99,1626,99,"redirectTo"],[2407,109,1626,109],[2408,20,1627,20,"scopes"],[2408,26,1627,26],[2408,28,1627,28],[2408,29,1627,29,"_b"],[2408,31,1627,31],[2408,34,1627,34,"credentials"],[2408,45,1627,45],[2408,46,1627,46,"options"],[2408,53,1627,53],[2408,59,1627,59],[2408,63,1627,63],[2408,67,1627,67,"_b"],[2408,69,1627,69],[2408,74,1627,74],[2408,79,1627,79],[2408,80,1627,80],[2408,83,1627,83],[2408,88,1627,88],[2408,89,1627,89],[2408,92,1627,92,"_b"],[2408,94,1627,94],[2408,95,1627,95,"scopes"],[2408,101,1627,101],[2409,20,1628,20,"queryParams"],[2409,31,1628,31],[2409,33,1628,33],[2409,34,1628,34,"_c"],[2409,36,1628,36],[2409,39,1628,39,"credentials"],[2409,50,1628,50],[2409,51,1628,51,"options"],[2409,58,1628,58],[2409,64,1628,64],[2409,68,1628,68],[2409,72,1628,72,"_c"],[2409,74,1628,74],[2409,79,1628,79],[2409,84,1628,84],[2409,85,1628,85],[2409,88,1628,88],[2409,93,1628,93],[2409,94,1628,94],[2409,97,1628,97,"_c"],[2409,99,1628,99],[2409,100,1628,100,"queryParams"],[2409,111,1628,111],[2410,20,1629,20,"skipBrowserRedirect"],[2410,39,1629,39],[2410,41,1629,41],[2411,18,1630,16],[2411,19,1630,17],[2411,20,1630,18],[2412,18,1631,16],[2412,31,1631,29],[2412,32,1631,30],[2412,33,1631,31],[2412,35,1631,33,"fetch_1"],[2412,42,1631,40],[2412,43,1631,41,"_request"],[2412,51,1631,49],[2412,53,1631,51,"_this18"],[2412,60,1631,55],[2412,61,1631,56,"fetch"],[2412,66,1631,61],[2412,68,1631,63],[2412,73,1631,68],[2412,75,1631,70,"url"],[2412,78,1631,73],[2412,80,1631,75],[2413,20,1632,20,"headers"],[2413,27,1632,27],[2413,29,1632,29,"_this18"],[2413,36,1632,33],[2413,37,1632,34,"headers"],[2413,44,1632,41],[2414,20,1633,20,"jwt"],[2414,23,1633,23],[2414,25,1633,25],[2414,26,1633,26,"_e"],[2414,28,1633,28],[2414,31,1633,31],[2414,32,1633,32,"_d"],[2414,34,1633,34],[2414,37,1633,37,"data"],[2414,41,1633,41],[2414,42,1633,42,"session"],[2414,49,1633,49],[2414,55,1633,55],[2414,59,1633,59],[2414,63,1633,63,"_d"],[2414,65,1633,65],[2414,70,1633,70],[2414,75,1633,75],[2414,76,1633,76],[2414,79,1633,79],[2414,84,1633,84],[2414,85,1633,85],[2414,88,1633,88,"_d"],[2414,90,1633,90],[2414,91,1633,91,"access_token"],[2414,103,1633,103],[2414,109,1633,109],[2414,113,1633,113],[2414,117,1633,117,"_e"],[2414,119,1633,119],[2414,124,1633,124],[2414,129,1633,129],[2414,130,1633,130],[2414,133,1633,133,"_e"],[2414,135,1633,135],[2414,138,1633,138,"undefined"],[2415,18,1634,16],[2415,19,1634,17],[2415,20,1634,18],[2416,16,1635,12],[2416,17,1635,13],[2417,16,1635,13],[2417,33,1635,13,"_x42"],[2417,37,1635,13],[2418,18,1635,13],[2418,25,1635,13,"_ref26"],[2418,31,1635,13],[2418,32,1635,13,"apply"],[2418,37,1635,13],[2418,44,1635,13,"arguments"],[2418,53,1635,13],[2419,16,1635,13],[2420,14,1635,13],[2420,18,1635,14],[2421,14,1620,20,"data"],[2421,18,1620,24],[2421,21,1620,24,"_yield$this$_useSessi"],[2421,42,1620,24],[2421,43,1620,20,"data"],[2421,47,1620,24],[2422,14,1620,26,"error"],[2422,19,1620,31],[2422,22,1620,31,"_yield$this$_useSessi"],[2422,43,1620,31],[2422,44,1620,26,"error"],[2422,49,1620,31],[2423,12,1636,12],[2423,16,1636,16,"error"],[2423,21,1636,21],[2423,23,1637,16],[2423,29,1637,22,"error"],[2423,34,1637,27],[2424,12,1638,12],[2424,16,1638,16],[2424,17,1638,17],[2424,18,1638,18],[2424,20,1638,20,"helpers_1"],[2424,29,1638,29],[2424,30,1638,30,"isBrowser"],[2424,39,1638,39],[2424,41,1638,41],[2424,42,1638,42],[2424,46,1638,46],[2424,48,1638,48],[2424,49,1638,49,"_a"],[2424,51,1638,51],[2424,54,1638,54,"credentials"],[2424,65,1638,65],[2424,66,1638,66,"options"],[2424,73,1638,73],[2424,79,1638,79],[2424,83,1638,83],[2424,87,1638,87,"_a"],[2424,89,1638,89],[2424,94,1638,94],[2424,99,1638,99],[2424,100,1638,100],[2424,103,1638,103],[2424,108,1638,108],[2424,109,1638,109],[2424,112,1638,112,"_a"],[2424,114,1638,114],[2424,115,1638,115,"skipBrowserRedirect"],[2424,134,1638,134],[2424,135,1638,135],[2424,137,1638,137],[2425,14,1639,16,"window"],[2425,20,1639,22],[2425,21,1639,23,"location"],[2425,29,1639,31],[2425,30,1639,32,"assign"],[2425,36,1639,38],[2425,37,1639,39,"data"],[2425,41,1639,43],[2425,46,1639,48],[2425,50,1639,52],[2425,54,1639,56,"data"],[2425,58,1639,60],[2425,63,1639,65],[2425,68,1639,70],[2425,69,1639,71],[2425,72,1639,74],[2425,77,1639,79],[2425,78,1639,80],[2425,81,1639,83,"data"],[2425,85,1639,87],[2425,86,1639,88,"url"],[2425,89,1639,91],[2425,90,1639,92],[2426,12,1640,12],[2427,12,1641,12],[2427,19,1641,19],[2428,14,1641,21,"data"],[2428,18,1641,25],[2428,20,1641,27],[2429,16,1641,29,"provider"],[2429,24,1641,37],[2429,26,1641,39,"credentials"],[2429,37,1641,50],[2429,38,1641,51,"provider"],[2429,46,1641,59],[2430,16,1641,61,"url"],[2430,19,1641,64],[2430,21,1641,66,"data"],[2430,25,1641,70],[2430,30,1641,75],[2430,34,1641,79],[2430,38,1641,83,"data"],[2430,42,1641,87],[2430,47,1641,92],[2430,52,1641,97],[2430,53,1641,98],[2430,56,1641,101],[2430,61,1641,106],[2430,62,1641,107],[2430,65,1641,110,"data"],[2430,69,1641,114],[2430,70,1641,115,"url"],[2431,14,1641,119],[2431,15,1641,120],[2432,14,1641,122,"error"],[2432,19,1641,127],[2432,21,1641,129],[2433,12,1641,134],[2433,13,1641,135],[2434,10,1642,8],[2434,11,1642,9],[2434,12,1643,8],[2434,19,1643,15,"error"],[2434,24,1643,20],[2434,26,1643,22],[2435,12,1644,12],[2435,16,1644,16],[2435,17,1644,17],[2435,18,1644,18],[2435,20,1644,20,"errors_1"],[2435,28,1644,28],[2435,29,1644,29,"isAuthError"],[2435,40,1644,40],[2435,42,1644,42,"error"],[2435,47,1644,47],[2435,48,1644,48],[2435,50,1644,50],[2436,14,1645,16],[2436,21,1645,23],[2437,16,1645,25,"data"],[2437,20,1645,29],[2437,22,1645,31],[2438,18,1645,33,"provider"],[2438,26,1645,41],[2438,28,1645,43,"credentials"],[2438,39,1645,54],[2438,40,1645,55,"provider"],[2438,48,1645,63],[2439,18,1645,65,"url"],[2439,21,1645,68],[2439,23,1645,70],[2440,16,1645,75],[2440,17,1645,76],[2441,16,1645,78,"error"],[2442,14,1645,84],[2442,15,1645,85],[2443,12,1646,12],[2444,12,1647,12],[2444,18,1647,18,"error"],[2444,23,1647,23],[2445,10,1648,8],[2446,8,1649,4],[2446,9,1649,5],[2447,8,1649,5],[2447,17,1617,10,"linkIdentityOAuth"],[2447,34,1617,27,"linkIdentityOAuth"],[2447,35,1617,27,"_x41"],[2447,39,1617,27],[2448,10,1617,27],[2448,17,1617,27,"_linkIdentityOAuth"],[2448,35,1617,27],[2448,36,1617,27,"apply"],[2448,41,1617,27],[2448,48,1617,27,"arguments"],[2448,57,1617,27],[2449,8,1617,27],[2450,8,1617,27],[2450,15,1617,10,"linkIdentityOAuth"],[2450,32,1617,27],[2451,6,1617,27],[2452,4,1617,27],[2453,6,1617,27,"key"],[2453,9,1617,27],[2454,6,1617,27,"value"],[2454,11,1617,27],[2455,8,1617,27],[2455,12,1617,27,"_linkIdentityIdToken"],[2455,32,1617,27],[2455,35,1617,27,"_asyncToGenerator"],[2455,52,1617,27],[2455,53,1650,4],[2455,64,1650,30,"credentials"],[2455,75,1650,41],[2455,77,1650,43],[2456,10,1650,43],[2456,14,1650,43,"_this19"],[2456,21,1650,43],[2457,10,1651,8],[2457,23,1651,21],[2457,27,1651,25],[2457,28,1651,26,"_useSession"],[2457,39,1651,37],[2458,12,1651,37],[2458,16,1651,37,"_ref27"],[2458,22,1651,37],[2458,25,1651,37,"_asyncToGenerator"],[2458,42,1651,37],[2458,43,1651,38],[2458,54,1651,45,"result"],[2458,60,1651,51],[2458,62,1651,56],[2459,14,1652,12],[2459,18,1652,16,"_a"],[2459,20,1652,18],[2460,14,1653,12],[2460,18,1653,16],[2461,16,1654,16],[2461,20,1654,31,"sessionError"],[2461,32,1654,43],[2461,35,1654,68,"result"],[2461,41,1654,74],[2461,42,1654,24,"error"],[2461,47,1654,29],[2462,18,1654,53,"session"],[2462,25,1654,60],[2462,28,1654,68,"result"],[2462,34,1654,74],[2462,35,1654,45,"data"],[2462,39,1654,49],[2462,40,1654,53,"session"],[2462,47,1654,60],[2463,16,1655,16],[2463,20,1655,20,"sessionError"],[2463,32,1655,32],[2463,34,1656,20],[2463,40,1656,26,"sessionError"],[2463,52,1656,38],[2464,16,1657,16],[2464,20,1657,24,"options"],[2464,27,1657,31],[2464,30,1657,74,"credentials"],[2464,41,1657,85],[2464,42,1657,24,"options"],[2464,49,1657,31],[2465,18,1657,33,"provider"],[2465,26,1657,41],[2465,29,1657,74,"credentials"],[2465,40,1657,85],[2465,41,1657,33,"provider"],[2465,49,1657,41],[2466,18,1657,43,"token"],[2466,23,1657,48],[2466,26,1657,74,"credentials"],[2466,37,1657,85],[2466,38,1657,43,"token"],[2466,43,1657,48],[2467,18,1657,50,"access_token"],[2467,30,1657,62],[2467,33,1657,74,"credentials"],[2467,44,1657,85],[2467,45,1657,50,"access_token"],[2467,57,1657,62],[2468,18,1657,64,"nonce"],[2468,23,1657,69],[2468,26,1657,74,"credentials"],[2468,37,1657,85],[2468,38,1657,64,"nonce"],[2468,43,1657,69],[2469,16,1658,16],[2469,20,1658,22,"res"],[2469,23,1658,25],[2469,32,1658,34],[2469,33,1658,35],[2469,34,1658,36],[2469,36,1658,38,"fetch_1"],[2469,43,1658,45],[2469,44,1658,46,"_request"],[2469,52,1658,54],[2469,54,1658,56,"_this19"],[2469,61,1658,60],[2469,62,1658,61,"fetch"],[2469,67,1658,66],[2469,69,1658,68],[2469,75,1658,74],[2469,77,1658,76],[2469,80,1658,79,"_this19"],[2469,87,1658,83],[2469,88,1658,84,"url"],[2469,91,1658,87],[2469,119,1658,115],[2469,121,1658,117],[2470,18,1659,20,"headers"],[2470,25,1659,27],[2470,27,1659,29,"_this19"],[2470,34,1659,33],[2470,35,1659,34,"headers"],[2470,42,1659,41],[2471,18,1660,20,"jwt"],[2471,21,1660,23],[2471,23,1660,25],[2471,24,1660,26,"_a"],[2471,26,1660,28],[2471,29,1660,31,"session"],[2471,36,1660,38],[2471,41,1660,43],[2471,45,1660,47],[2471,49,1660,51,"session"],[2471,56,1660,58],[2471,61,1660,63],[2471,66,1660,68],[2471,67,1660,69],[2471,70,1660,72],[2471,75,1660,77],[2471,76,1660,78],[2471,79,1660,81,"session"],[2471,86,1660,88],[2471,87,1660,89,"access_token"],[2471,99,1660,101],[2471,105,1660,107],[2471,109,1660,111],[2471,113,1660,115,"_a"],[2471,115,1660,117],[2471,120,1660,122],[2471,125,1660,127],[2471,126,1660,128],[2471,129,1660,131,"_a"],[2471,131,1660,133],[2471,134,1660,136,"undefined"],[2471,143,1660,145],[2472,18,1661,20,"body"],[2472,22,1661,24],[2472,24,1661,26],[2473,20,1662,24,"provider"],[2473,28,1662,32],[2474,20,1663,24,"id_token"],[2474,28,1663,32],[2474,30,1663,34,"token"],[2474,35,1663,39],[2475,20,1664,24,"access_token"],[2475,32,1664,36],[2476,20,1665,24,"nonce"],[2476,25,1665,29],[2477,20,1666,24,"link_identity"],[2477,33,1666,37],[2477,35,1666,39],[2477,39,1666,43],[2478,20,1667,24,"gotrue_meta_security"],[2478,40,1667,44],[2478,42,1667,46],[2479,22,1667,48,"captcha_token"],[2479,35,1667,61],[2479,37,1667,63,"options"],[2479,44,1667,70],[2479,49,1667,75],[2479,53,1667,79],[2479,57,1667,83,"options"],[2479,64,1667,90],[2479,69,1667,95],[2479,74,1667,100],[2479,75,1667,101],[2479,78,1667,104],[2479,83,1667,109],[2479,84,1667,110],[2479,87,1667,113,"options"],[2479,94,1667,120],[2479,95,1667,121,"captchaToken"],[2480,20,1667,134],[2481,18,1668,20],[2481,19,1668,21],[2482,18,1669,20,"xform"],[2482,23,1669,25],[2482,25,1669,27,"fetch_1"],[2482,32,1669,34],[2482,33,1669,35,"_sessionResponse"],[2483,16,1670,16],[2483,17,1670,17],[2483,18,1670,18],[2484,16,1671,16],[2484,20,1671,24,"data"],[2484,24,1671,28],[2484,27,1671,40,"res"],[2484,30,1671,43],[2484,31,1671,24,"data"],[2484,35,1671,28],[2485,18,1671,30,"error"],[2485,23,1671,35],[2485,26,1671,40,"res"],[2485,29,1671,43],[2485,30,1671,30,"error"],[2485,35,1671,35],[2486,16,1672,16],[2486,20,1672,20,"error"],[2486,25,1672,25],[2486,27,1672,27],[2487,18,1673,20],[2487,25,1673,27],[2488,20,1673,29,"data"],[2488,24,1673,33],[2488,26,1673,35],[2489,22,1673,37,"user"],[2489,26,1673,41],[2489,28,1673,43],[2489,32,1673,47],[2490,22,1673,49,"session"],[2490,29,1673,56],[2490,31,1673,58],[2491,20,1673,63],[2491,21,1673,64],[2492,20,1673,66,"error"],[2493,18,1673,72],[2493,19,1673,73],[2494,16,1674,16],[2494,17,1674,17],[2494,23,1675,21],[2494,27,1675,25],[2494,28,1675,26,"data"],[2494,32,1675,30],[2494,36,1675,34],[2494,37,1675,35,"data"],[2494,41,1675,39],[2494,42,1675,40,"session"],[2494,49,1675,47],[2494,53,1675,51],[2494,54,1675,52,"data"],[2494,58,1675,56],[2494,59,1675,57,"user"],[2494,63,1675,61],[2494,65,1675,63],[2495,18,1676,20],[2495,25,1676,27],[2496,20,1677,24,"data"],[2496,24,1677,28],[2496,26,1677,30],[2497,22,1677,32,"user"],[2497,26,1677,36],[2497,28,1677,38],[2497,32,1677,42],[2498,22,1677,44,"session"],[2498,29,1677,51],[2498,31,1677,53],[2499,20,1677,58],[2499,21,1677,59],[2500,20,1678,24,"error"],[2500,25,1678,29],[2500,27,1678,31],[2500,31,1678,35,"errors_1"],[2500,39,1678,43],[2500,40,1678,44,"AuthInvalidTokenResponseError"],[2500,69,1678,73],[2500,70,1678,74],[2501,18,1679,20],[2501,19,1679,21],[2502,16,1680,16],[2503,16,1681,16],[2503,20,1681,20,"data"],[2503,24,1681,24],[2503,25,1681,25,"session"],[2503,32,1681,32],[2503,34,1681,34],[2504,18,1682,20],[2504,24,1682,26,"_this19"],[2504,31,1682,30],[2504,32,1682,31,"_saveSession"],[2504,44,1682,43],[2504,45,1682,44,"data"],[2504,49,1682,48],[2504,50,1682,49,"session"],[2504,57,1682,56],[2504,58,1682,57],[2505,18,1683,20],[2505,24,1683,26,"_this19"],[2505,31,1683,30],[2505,32,1683,31,"_notifyAllSubscribers"],[2505,53,1683,52],[2505,54,1683,53],[2505,68,1683,67],[2505,70,1683,69,"data"],[2505,74,1683,73],[2505,75,1683,74,"session"],[2505,82,1683,81],[2505,83,1683,82],[2506,16,1684,16],[2507,16,1685,16],[2507,23,1685,23],[2508,18,1685,25,"data"],[2508,22,1685,29],[2509,18,1685,31,"error"],[2510,16,1685,37],[2510,17,1685,38],[2511,14,1686,12],[2511,15,1686,13],[2511,16,1687,12],[2511,23,1687,19,"error"],[2511,28,1687,24],[2511,30,1687,26],[2512,16,1688,16],[2512,20,1688,20],[2512,21,1688,21],[2512,22,1688,22],[2512,24,1688,24,"errors_1"],[2512,32,1688,32],[2512,33,1688,33,"isAuthError"],[2512,44,1688,44],[2512,46,1688,46,"error"],[2512,51,1688,51],[2512,52,1688,52],[2512,54,1688,54],[2513,18,1689,20],[2513,25,1689,27],[2514,20,1689,29,"data"],[2514,24,1689,33],[2514,26,1689,35],[2515,22,1689,37,"user"],[2515,26,1689,41],[2515,28,1689,43],[2515,32,1689,47],[2516,22,1689,49,"session"],[2516,29,1689,56],[2516,31,1689,58],[2517,20,1689,63],[2517,21,1689,64],[2518,20,1689,66,"error"],[2519,18,1689,72],[2519,19,1689,73],[2520,16,1690,16],[2521,16,1691,16],[2521,22,1691,22,"error"],[2521,27,1691,27],[2522,14,1692,12],[2523,12,1693,8],[2523,13,1693,9],[2524,12,1693,9],[2524,29,1693,9,"_x44"],[2524,33,1693,9],[2525,14,1693,9],[2525,21,1693,9,"_ref27"],[2525,27,1693,9],[2525,28,1693,9,"apply"],[2525,33,1693,9],[2525,40,1693,9,"arguments"],[2525,49,1693,9],[2526,12,1693,9],[2527,10,1693,9],[2527,14,1693,10],[2528,8,1694,4],[2528,9,1694,5],[2529,8,1694,5],[2529,17,1650,10,"linkIdentityIdToken"],[2529,36,1650,29,"linkIdentityIdToken"],[2529,37,1650,29,"_x43"],[2529,41,1650,29],[2530,10,1650,29],[2530,17,1650,29,"_linkIdentityIdToken"],[2530,37,1650,29],[2530,38,1650,29,"apply"],[2530,43,1650,29],[2530,50,1650,29,"arguments"],[2530,59,1650,29],[2531,8,1650,29],[2532,8,1650,29],[2532,15,1650,10,"linkIdentityIdToken"],[2532,34,1650,29],[2533,6,1650,29],[2534,6,1695,4],[2535,0,1696,0],[2536,0,1697,0],[2537,4,1695,4],[2538,6,1695,4,"key"],[2538,9,1695,4],[2539,6,1695,4,"value"],[2539,11,1695,4],[2540,8,1695,4],[2540,12,1695,4,"_unlinkIdentity"],[2540,27,1695,4],[2540,30,1695,4,"_asyncToGenerator"],[2540,47,1695,4],[2540,48,1698,4],[2540,59,1698,25,"identity"],[2540,67,1698,33],[2540,69,1698,35],[2541,10,1698,35],[2541,14,1698,35,"_this20"],[2541,21,1698,35],[2542,10,1699,8],[2542,14,1699,12],[2543,12,1700,12],[2543,25,1700,25],[2543,29,1700,29],[2543,30,1700,30,"_useSession"],[2543,41,1700,41],[2544,14,1700,41],[2544,18,1700,41,"_ref28"],[2544,24,1700,41],[2544,27,1700,41,"_asyncToGenerator"],[2544,44,1700,41],[2544,45,1700,42],[2544,56,1700,49,"result"],[2544,62,1700,55],[2544,64,1700,60],[2545,16,1701,16],[2545,20,1701,20,"_a"],[2545,22,1701,22],[2545,24,1701,24,"_b"],[2545,26,1701,26],[2546,16,1702,16],[2546,20,1702,24,"data"],[2546,24,1702,28],[2546,27,1702,40,"result"],[2546,33,1702,46],[2546,34,1702,24,"data"],[2546,38,1702,28],[2547,18,1702,30,"error"],[2547,23,1702,35],[2547,26,1702,40,"result"],[2547,32,1702,46],[2547,33,1702,30,"error"],[2547,38,1702,35],[2548,16,1703,16],[2548,20,1703,20,"error"],[2548,25,1703,25],[2548,27,1703,27],[2549,18,1704,20],[2549,24,1704,26,"error"],[2549,29,1704,31],[2550,16,1705,16],[2551,16,1706,16],[2551,29,1706,29],[2551,30,1706,30],[2551,31,1706,31],[2551,33,1706,33,"fetch_1"],[2551,40,1706,40],[2551,41,1706,41,"_request"],[2551,49,1706,49],[2551,51,1706,51,"_this20"],[2551,58,1706,55],[2551,59,1706,56,"fetch"],[2551,64,1706,61],[2551,66,1706,63],[2551,74,1706,71],[2551,76,1706,73],[2551,79,1706,76,"_this20"],[2551,86,1706,80],[2551,87,1706,81,"url"],[2551,90,1706,84],[2551,110,1706,104,"identity"],[2551,118,1706,112],[2551,119,1706,113,"identity_id"],[2551,130,1706,124],[2551,132,1706,126],[2551,134,1706,128],[2552,18,1707,20,"headers"],[2552,25,1707,27],[2552,27,1707,29,"_this20"],[2552,34,1707,33],[2552,35,1707,34,"headers"],[2552,42,1707,41],[2553,18,1708,20,"jwt"],[2553,21,1708,23],[2553,23,1708,25],[2553,24,1708,26,"_b"],[2553,26,1708,28],[2553,29,1708,31],[2553,30,1708,32,"_a"],[2553,32,1708,34],[2553,35,1708,37,"data"],[2553,39,1708,41],[2553,40,1708,42,"session"],[2553,47,1708,49],[2553,53,1708,55],[2553,57,1708,59],[2553,61,1708,63,"_a"],[2553,63,1708,65],[2553,68,1708,70],[2553,73,1708,75],[2553,74,1708,76],[2553,77,1708,79],[2553,82,1708,84],[2553,83,1708,85],[2553,86,1708,88,"_a"],[2553,88,1708,90],[2553,89,1708,91,"access_token"],[2553,101,1708,103],[2553,107,1708,109],[2553,111,1708,113],[2553,115,1708,117,"_b"],[2553,117,1708,119],[2553,122,1708,124],[2553,127,1708,129],[2553,128,1708,130],[2553,131,1708,133,"_b"],[2553,133,1708,135],[2553,136,1708,138,"undefined"],[2554,16,1709,16],[2554,17,1709,17],[2554,18,1709,18],[2555,14,1710,12],[2555,15,1710,13],[2556,14,1710,13],[2556,31,1710,13,"_x46"],[2556,35,1710,13],[2557,16,1710,13],[2557,23,1710,13,"_ref28"],[2557,29,1710,13],[2557,30,1710,13,"apply"],[2557,35,1710,13],[2557,42,1710,13,"arguments"],[2557,51,1710,13],[2558,14,1710,13],[2559,12,1710,13],[2559,16,1710,14],[2560,10,1711,8],[2560,11,1711,9],[2560,12,1712,8],[2560,19,1712,15,"error"],[2560,24,1712,20],[2560,26,1712,22],[2561,12,1713,12],[2561,16,1713,16],[2561,17,1713,17],[2561,18,1713,18],[2561,20,1713,20,"errors_1"],[2561,28,1713,28],[2561,29,1713,29,"isAuthError"],[2561,40,1713,40],[2561,42,1713,42,"error"],[2561,47,1713,47],[2561,48,1713,48],[2561,50,1713,50],[2562,14,1714,16],[2562,21,1714,23],[2563,16,1714,25,"data"],[2563,20,1714,29],[2563,22,1714,31],[2563,26,1714,35],[2564,16,1714,37,"error"],[2565,14,1714,43],[2565,15,1714,44],[2566,12,1715,12],[2567,12,1716,12],[2567,18,1716,18,"error"],[2567,23,1716,23],[2568,10,1717,8],[2569,8,1718,4],[2569,9,1718,5],[2570,8,1718,5],[2570,17,1698,10,"unlinkIdentity"],[2570,31,1698,24,"unlinkIdentity"],[2570,32,1698,24,"_x45"],[2570,36,1698,24],[2571,10,1698,24],[2571,17,1698,24,"_unlinkIdentity"],[2571,32,1698,24],[2571,33,1698,24,"apply"],[2571,38,1698,24],[2571,45,1698,24,"arguments"],[2571,54,1698,24],[2572,8,1698,24],[2573,8,1698,24],[2573,15,1698,10,"unlinkIdentity"],[2573,29,1698,24],[2574,6,1698,24],[2575,6,1719,4],[2576,0,1720,0],[2577,0,1721,0],[2578,0,1722,0],[2579,6,1719,4],[2580,4,1719,4],[2581,6,1719,4,"key"],[2581,9,1719,4],[2582,6,1719,4,"value"],[2582,11,1719,4],[2583,8,1719,4],[2583,12,1719,4,"_refreshAccessToken2"],[2583,32,1719,4],[2583,35,1719,4,"_asyncToGenerator"],[2583,52,1719,4],[2583,53,1723,4],[2583,64,1723,30,"refreshToken"],[2583,76,1723,42],[2583,78,1723,44],[2584,10,1723,44],[2584,14,1723,44,"_this21"],[2584,21,1723,44],[2585,10,1724,8],[2585,14,1724,14,"debugName"],[2585,23,1724,23],[2585,26,1724,26],[2585,50,1724,50,"refreshToken"],[2585,62,1724,62],[2585,63,1724,63,"substring"],[2585,72,1724,72],[2585,73,1724,73],[2585,74,1724,74],[2585,76,1724,76],[2585,77,1724,77],[2585,78,1724,78],[2585,84,1724,84],[2586,10,1725,8],[2586,14,1725,12],[2586,15,1725,13,"_debug"],[2586,21,1725,19],[2586,22,1725,20,"debugName"],[2586,31,1725,29],[2586,33,1725,31],[2586,40,1725,38],[2586,41,1725,39],[2587,10,1726,8],[2587,14,1726,12],[2588,12,1727,12],[2588,16,1727,18,"startedAt"],[2588,25,1727,27],[2588,28,1727,30,"Date"],[2588,32,1727,34],[2588,33,1727,35,"now"],[2588,36,1727,38],[2588,37,1727,39],[2588,38,1727,40],[2589,12,1728,12],[2590,12,1729,12],[2590,25,1729,25],[2590,26,1729,26],[2590,27,1729,27],[2590,29,1729,29,"helpers_1"],[2590,38,1729,38],[2590,39,1729,39,"retryable"],[2590,48,1729,48],[2591,14,1729,48],[2591,18,1729,48,"_ref29"],[2591,24,1729,48],[2591,27,1729,48,"_asyncToGenerator"],[2591,44,1729,48],[2591,45,1729,50],[2591,56,1729,57,"attempt"],[2591,63,1729,64],[2591,65,1729,69],[2592,16,1730,16],[2592,20,1730,20,"attempt"],[2592,27,1730,27],[2592,30,1730,30],[2592,31,1730,31],[2592,33,1730,33],[2593,18,1731,20],[2593,24,1731,26],[2593,25,1731,27],[2593,26,1731,28],[2593,28,1731,30,"helpers_1"],[2593,37,1731,39],[2593,38,1731,40,"sleep"],[2593,43,1731,45],[2593,45,1731,47],[2593,48,1731,50],[2593,51,1731,53,"Math"],[2593,55,1731,57],[2593,56,1731,58,"pow"],[2593,59,1731,61],[2593,60,1731,62],[2593,61,1731,63],[2593,63,1731,65,"attempt"],[2593,70,1731,72],[2593,73,1731,75],[2593,74,1731,76],[2593,75,1731,77],[2593,76,1731,78],[2593,77,1731,79],[2593,78,1731,80],[2594,16,1732,16],[2595,16,1733,16,"_this21"],[2595,23,1733,20],[2595,24,1733,21,"_debug"],[2595,30,1733,27],[2595,31,1733,28,"debugName"],[2595,40,1733,37],[2595,42,1733,39],[2595,62,1733,59],[2595,64,1733,61,"attempt"],[2595,71,1733,68],[2595,72,1733,69],[2596,16,1734,16],[2596,29,1734,29],[2596,30,1734,30],[2596,31,1734,31],[2596,33,1734,33,"fetch_1"],[2596,40,1734,40],[2596,41,1734,41,"_request"],[2596,49,1734,49],[2596,51,1734,51,"_this21"],[2596,58,1734,55],[2596,59,1734,56,"fetch"],[2596,64,1734,61],[2596,66,1734,63],[2596,72,1734,69],[2596,74,1734,71],[2596,77,1734,74,"_this21"],[2596,84,1734,78],[2596,85,1734,79,"url"],[2596,88,1734,82],[2596,121,1734,115],[2596,123,1734,117],[2597,18,1735,20,"body"],[2597,22,1735,24],[2597,24,1735,26],[2598,20,1735,28,"refresh_token"],[2598,33,1735,41],[2598,35,1735,43,"refreshToken"],[2599,18,1735,56],[2599,19,1735,57],[2600,18,1736,20,"headers"],[2600,25,1736,27],[2600,27,1736,29,"_this21"],[2600,34,1736,33],[2600,35,1736,34,"headers"],[2600,42,1736,41],[2601,18,1737,20,"xform"],[2601,23,1737,25],[2601,25,1737,27,"fetch_1"],[2601,32,1737,34],[2601,33,1737,35,"_sessionResponse"],[2602,16,1738,16],[2602,17,1738,17],[2602,18,1738,18],[2603,14,1739,12],[2603,15,1739,13],[2604,14,1739,13],[2604,31,1739,13,"_x48"],[2604,35,1739,13],[2605,16,1739,13],[2605,23,1739,13,"_ref29"],[2605,29,1739,13],[2605,30,1739,13,"apply"],[2605,35,1739,13],[2605,42,1739,13,"arguments"],[2605,51,1739,13],[2606,14,1739,13],[2607,12,1739,13],[2607,17,1739,15],[2607,18,1739,16,"attempt"],[2607,25,1739,23],[2607,27,1739,25,"error"],[2607,32,1739,30],[2607,37,1739,35],[2608,14,1740,16],[2608,18,1740,22,"nextBackOffInterval"],[2608,37,1740,41],[2608,40,1740,44],[2608,43,1740,47],[2608,46,1740,50,"Math"],[2608,50,1740,54],[2608,51,1740,55,"pow"],[2608,54,1740,58],[2608,55,1740,59],[2608,56,1740,60],[2608,58,1740,62,"attempt"],[2608,65,1740,69],[2608,66,1740,70],[2609,14,1741,16],[2609,21,1741,24,"error"],[2609,26,1741,29],[2609,30,1742,20],[2609,31,1742,21],[2609,32,1742,22],[2609,34,1742,24,"errors_1"],[2609,42,1742,32],[2609,43,1742,33,"isAuthRetryableFetchError"],[2609,68,1742,58],[2609,70,1742,60,"error"],[2609,75,1742,65],[2609,76,1742,66],[2610,14,1743,20],[2611,14,1744,20,"Date"],[2611,18,1744,24],[2611,19,1744,25,"now"],[2611,22,1744,28],[2611,23,1744,29],[2611,24,1744,30],[2611,27,1744,33,"nextBackOffInterval"],[2611,46,1744,52],[2611,49,1744,55,"startedAt"],[2611,58,1744,64],[2611,61,1744,67,"constants_1"],[2611,72,1744,78],[2611,73,1744,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2611,102,1744,108],[2612,12,1745,12],[2612,13,1745,13],[2612,14,1745,14],[2613,10,1746,8],[2613,11,1746,9],[2613,12,1747,8],[2613,19,1747,15,"error"],[2613,24,1747,20],[2613,26,1747,22],[2614,12,1748,12],[2614,16,1748,16],[2614,17,1748,17,"_debug"],[2614,23,1748,23],[2614,24,1748,24,"debugName"],[2614,33,1748,33],[2614,35,1748,35],[2614,42,1748,42],[2614,44,1748,44,"error"],[2614,49,1748,49],[2614,50,1748,50],[2615,12,1749,12],[2615,16,1749,16],[2615,17,1749,17],[2615,18,1749,18],[2615,20,1749,20,"errors_1"],[2615,28,1749,28],[2615,29,1749,29,"isAuthError"],[2615,40,1749,40],[2615,42,1749,42,"error"],[2615,47,1749,47],[2615,48,1749,48],[2615,50,1749,50],[2616,14,1750,16],[2616,21,1750,23],[2617,16,1750,25,"data"],[2617,20,1750,29],[2617,22,1750,31],[2618,18,1750,33,"session"],[2618,25,1750,40],[2618,27,1750,42],[2618,31,1750,46],[2619,18,1750,48,"user"],[2619,22,1750,52],[2619,24,1750,54],[2620,16,1750,59],[2620,17,1750,60],[2621,16,1750,62,"error"],[2622,14,1750,68],[2622,15,1750,69],[2623,12,1751,12],[2624,12,1752,12],[2624,18,1752,18,"error"],[2624,23,1752,23],[2625,10,1753,8],[2625,11,1753,9],[2625,20,1754,16],[2626,12,1755,12],[2626,16,1755,16],[2626,17,1755,17,"_debug"],[2626,23,1755,23],[2626,24,1755,24,"debugName"],[2626,33,1755,33],[2626,35,1755,35],[2626,40,1755,40],[2626,41,1755,41],[2627,10,1756,8],[2628,8,1757,4],[2628,9,1757,5],[2629,8,1757,5],[2629,17,1723,10,"_refreshAccessToken"],[2629,36,1723,29,"_refreshAccessToken"],[2629,37,1723,29,"_x47"],[2629,41,1723,29],[2630,10,1723,29],[2630,17,1723,29,"_refreshAccessToken2"],[2630,37,1723,29],[2630,38,1723,29,"apply"],[2630,43,1723,29],[2630,50,1723,29,"arguments"],[2630,59,1723,29],[2631,8,1723,29],[2632,8,1723,29],[2632,15,1723,10,"_refreshAccessToken"],[2632,34,1723,29],[2633,6,1723,29],[2634,4,1723,29],[2635,6,1723,29,"key"],[2635,9,1723,29],[2636,6,1723,29,"value"],[2636,11,1723,29],[2636,13,1758,4],[2636,22,1758,4,"_isValidSession"],[2636,37,1758,19,"_isValidSession"],[2636,38,1758,20,"maybeSession"],[2636,50,1758,32],[2636,52,1758,34],[2637,8,1759,8],[2637,12,1759,14,"isValidSession"],[2637,26,1759,28],[2637,29,1759,31],[2637,36,1759,38,"maybeSession"],[2637,48,1759,50],[2637,53,1759,55],[2637,61,1759,63],[2637,65,1760,12,"maybeSession"],[2637,77,1760,24],[2637,82,1760,29],[2637,86,1760,33],[2637,90,1761,12],[2637,104,1761,26],[2637,108,1761,30,"maybeSession"],[2637,120,1761,42],[2637,124,1762,12],[2637,139,1762,27],[2637,143,1762,31,"maybeSession"],[2637,155,1762,43],[2637,159,1763,12],[2637,171,1763,24],[2637,175,1763,28,"maybeSession"],[2637,187,1763,40],[2638,8,1764,8],[2638,15,1764,15,"isValidSession"],[2638,29,1764,29],[2639,6,1765,4],[2640,4,1765,5],[2641,6,1765,5,"key"],[2641,9,1765,5],[2642,6,1765,5,"value"],[2642,11,1765,5],[2643,8,1765,5],[2643,12,1765,5,"_handleProviderSignIn2"],[2643,34,1765,5],[2643,37,1765,5,"_asyncToGenerator"],[2643,54,1765,5],[2643,55,1766,4],[2643,66,1766,32,"provider"],[2643,74,1766,40],[2643,76,1766,42,"options"],[2643,83,1766,49],[2643,85,1766,51],[2644,10,1767,8],[2644,14,1767,14,"url"],[2644,17,1767,17],[2644,26,1767,26],[2644,30,1767,30],[2644,31,1767,31,"_getUrlForProvider"],[2644,49,1767,49],[2644,50,1767,50],[2644,53,1767,53],[2644,57,1767,57],[2644,58,1767,58,"url"],[2644,61,1767,61],[2644,73,1767,73],[2644,75,1767,75,"provider"],[2644,83,1767,83],[2644,85,1767,85],[2645,12,1768,12,"redirectTo"],[2645,22,1768,22],[2645,24,1768,24,"options"],[2645,31,1768,31],[2645,32,1768,32,"redirectTo"],[2645,42,1768,42],[2646,12,1769,12,"scopes"],[2646,18,1769,18],[2646,20,1769,20,"options"],[2646,27,1769,27],[2646,28,1769,28,"scopes"],[2646,34,1769,34],[2647,12,1770,12,"queryParams"],[2647,23,1770,23],[2647,25,1770,25,"options"],[2647,32,1770,32],[2647,33,1770,33,"queryParams"],[2648,10,1771,8],[2648,11,1771,9],[2648,12,1771,10],[2649,10,1772,8],[2649,14,1772,12],[2649,15,1772,13,"_debug"],[2649,21,1772,19],[2649,22,1772,20],[2649,48,1772,46],[2649,50,1772,48],[2649,60,1772,58],[2649,62,1772,60,"provider"],[2649,70,1772,68],[2649,72,1772,70],[2649,81,1772,79],[2649,83,1772,81,"options"],[2649,90,1772,88],[2649,92,1772,90],[2649,97,1772,95],[2649,99,1772,97,"url"],[2649,102,1772,100],[2649,103,1772,101],[2650,10,1773,8],[2651,10,1774,8],[2651,14,1774,12],[2651,15,1774,13],[2651,16,1774,14],[2651,18,1774,16,"helpers_1"],[2651,27,1774,25],[2651,28,1774,26,"isBrowser"],[2651,37,1774,35],[2651,39,1774,37],[2651,40,1774,38],[2651,44,1774,42],[2651,45,1774,43,"options"],[2651,52,1774,50],[2651,53,1774,51,"skipBrowserRedirect"],[2651,72,1774,70],[2651,74,1774,72],[2652,12,1775,12,"window"],[2652,18,1775,18],[2652,19,1775,19,"location"],[2652,27,1775,27],[2652,28,1775,28,"assign"],[2652,34,1775,34],[2652,35,1775,35,"url"],[2652,38,1775,38],[2652,39,1775,39],[2653,10,1776,8],[2654,10,1777,8],[2654,17,1777,15],[2655,12,1777,17,"data"],[2655,16,1777,21],[2655,18,1777,23],[2656,14,1777,25,"provider"],[2656,22,1777,33],[2657,14,1777,35,"url"],[2658,12,1777,39],[2658,13,1777,40],[2659,12,1777,42,"error"],[2659,17,1777,47],[2659,19,1777,49],[2660,10,1777,54],[2660,11,1777,55],[2661,8,1778,4],[2661,9,1778,5],[2662,8,1778,5],[2662,17,1766,10,"_handleProviderSignIn"],[2662,38,1766,31,"_handleProviderSignIn"],[2662,39,1766,31,"_x49"],[2662,43,1766,31],[2662,45,1766,31,"_x50"],[2662,49,1766,31],[2663,10,1766,31],[2663,17,1766,31,"_handleProviderSignIn2"],[2663,39,1766,31],[2663,40,1766,31,"apply"],[2663,45,1766,31],[2663,52,1766,31,"arguments"],[2663,61,1766,31],[2664,8,1766,31],[2665,8,1766,31],[2665,15,1766,10,"_handleProviderSignIn"],[2665,36,1766,31],[2666,6,1766,31],[2667,6,1779,4],[2668,0,1780,0],[2669,0,1781,0],[2670,0,1782,0],[2671,4,1779,4],[2672,6,1779,4,"key"],[2672,9,1779,4],[2673,6,1779,4,"value"],[2673,11,1779,4],[2674,8,1779,4],[2674,12,1779,4,"_recoverAndRefresh2"],[2674,31,1779,4],[2674,34,1779,4,"_asyncToGenerator"],[2674,51,1779,4],[2674,52,1783,4],[2674,65,1783,31],[2675,10,1784,8],[2675,14,1784,12,"_a"],[2675,16,1784,14],[2675,18,1784,16,"_b"],[2675,20,1784,18],[2676,10,1785,8],[2676,14,1785,14,"debugName"],[2676,23,1785,23],[2676,26,1785,26],[2676,49,1785,49],[2677,10,1786,8],[2677,14,1786,12],[2677,15,1786,13,"_debug"],[2677,21,1786,19],[2677,22,1786,20,"debugName"],[2677,31,1786,29],[2677,33,1786,31],[2677,40,1786,38],[2677,41,1786,39],[2678,10,1787,8],[2678,14,1787,12],[2679,12,1788,12],[2679,16,1788,18,"currentSession"],[2679,30,1788,32],[2679,39,1788,42],[2679,40,1788,43],[2679,41,1788,44],[2679,43,1788,46,"helpers_1"],[2679,52,1788,55],[2679,53,1788,56,"getItemAsync"],[2679,65,1788,68],[2679,67,1788,70],[2679,71,1788,74],[2679,72,1788,75,"storage"],[2679,79,1788,82],[2679,81,1788,84],[2679,85,1788,88],[2679,86,1788,89,"storageKey"],[2679,96,1788,99],[2679,97,1788,101],[2680,12,1789,12],[2680,16,1789,16,"currentSession"],[2680,30,1789,30],[2680,34,1789,34],[2680,38,1789,38],[2680,39,1789,39,"userStorage"],[2680,50,1789,50],[2680,52,1789,52],[2681,14,1790,16],[2681,18,1790,20,"maybeUser"],[2681,27,1790,29],[2681,36,1790,39],[2681,37,1790,40],[2681,38,1790,41],[2681,40,1790,43,"helpers_1"],[2681,49,1790,52],[2681,50,1790,53,"getItemAsync"],[2681,62,1790,65],[2681,64,1790,67],[2681,68,1790,71],[2681,69,1790,72,"userStorage"],[2681,80,1790,83],[2681,82,1790,85],[2681,86,1790,89],[2681,87,1790,90,"storageKey"],[2681,97,1790,100],[2681,100,1790,103],[2681,107,1790,110],[2681,108,1790,112],[2682,14,1791,16],[2682,18,1791,20],[2682,19,1791,21],[2682,23,1791,25],[2682,24,1791,26,"storage"],[2682,31,1791,33],[2682,32,1791,34,"isServer"],[2682,40,1791,42],[2682,44,1791,46,"Object"],[2682,50,1791,52],[2682,51,1791,53,"is"],[2682,53,1791,55],[2682,54,1791,56],[2682,58,1791,60],[2682,59,1791,61,"storage"],[2682,66,1791,68],[2682,68,1791,70],[2682,72,1791,74],[2682,73,1791,75,"userStorage"],[2682,84,1791,86],[2682,85,1791,87],[2682,89,1791,91],[2682,90,1791,92,"maybeUser"],[2682,99,1791,101],[2682,101,1791,103],[2683,16,1792,20],[2684,16,1793,20],[2685,16,1794,20],[2686,16,1795,20],[2687,16,1796,20,"maybeUser"],[2687,25,1796,29],[2687,28,1796,32],[2688,18,1796,34,"user"],[2688,22,1796,38],[2688,24,1796,40,"currentSession"],[2688,38,1796,54],[2688,39,1796,55,"user"],[2689,16,1796,60],[2689,17,1796,61],[2690,16,1797,20],[2690,22,1797,26],[2690,23,1797,27],[2690,24,1797,28],[2690,26,1797,30,"helpers_1"],[2690,35,1797,39],[2690,36,1797,40,"setItemAsync"],[2690,48,1797,52],[2690,50,1797,54],[2690,54,1797,58],[2690,55,1797,59,"userStorage"],[2690,66,1797,70],[2690,68,1797,72],[2690,72,1797,76],[2690,73,1797,77,"storageKey"],[2690,83,1797,87],[2690,86,1797,90],[2690,93,1797,97],[2690,95,1797,99,"maybeUser"],[2690,104,1797,108],[2690,105,1797,109],[2691,14,1798,16],[2692,14,1799,16,"currentSession"],[2692,28,1799,30],[2692,29,1799,31,"user"],[2692,33,1799,35],[2692,36,1799,38],[2692,37,1799,39,"_a"],[2692,39,1799,41],[2692,42,1799,44,"maybeUser"],[2692,51,1799,53],[2692,56,1799,58],[2692,60,1799,62],[2692,64,1799,66,"maybeUser"],[2692,73,1799,75],[2692,78,1799,80],[2692,83,1799,85],[2692,84,1799,86],[2692,87,1799,89],[2692,92,1799,94],[2692,93,1799,95],[2692,96,1799,98,"maybeUser"],[2692,105,1799,107],[2692,106,1799,108,"user"],[2692,110,1799,112],[2692,116,1799,118],[2692,120,1799,122],[2692,124,1799,126,"_a"],[2692,126,1799,128],[2692,131,1799,133],[2692,136,1799,138],[2692,137,1799,139],[2692,140,1799,142,"_a"],[2692,142,1799,144],[2692,145,1799,147],[2692,146,1799,148],[2692,147,1799,149],[2692,149,1799,151,"helpers_1"],[2692,158,1799,160],[2692,159,1799,161,"userNotAvailableProxy"],[2692,180,1799,182],[2692,182,1799,184],[2692,183,1799,185],[2693,12,1800,12],[2693,13,1800,13],[2693,19,1801,17],[2693,23,1801,21,"currentSession"],[2693,37,1801,35],[2693,41,1801,39],[2693,42,1801,40,"currentSession"],[2693,56,1801,54],[2693,57,1801,55,"user"],[2693,61,1801,59],[2693,63,1801,61],[2694,14,1802,16],[2695,14,1803,16],[2696,14,1804,16],[2696,18,1804,20],[2696,19,1804,21,"currentSession"],[2696,33,1804,35],[2696,34,1804,36,"user"],[2696,38,1804,40],[2696,40,1804,42],[2697,16,1805,20],[2698,16,1806,20],[2698,20,1806,26,"separateUser"],[2698,32,1806,38],[2698,41,1806,48],[2698,42,1806,49],[2698,43,1806,50],[2698,45,1806,52,"helpers_1"],[2698,54,1806,61],[2698,55,1806,62,"getItemAsync"],[2698,67,1806,74],[2698,69,1806,76],[2698,73,1806,80],[2698,74,1806,81,"storage"],[2698,81,1806,88],[2698,83,1806,90],[2698,87,1806,94],[2698,88,1806,95,"storageKey"],[2698,98,1806,105],[2698,101,1806,108],[2698,108,1806,115],[2698,109,1806,117],[2699,16,1807,20],[2699,20,1807,24,"separateUser"],[2699,32,1807,36],[2699,37,1807,41,"separateUser"],[2699,49,1807,53],[2699,54,1807,58],[2699,58,1807,62],[2699,62,1807,66,"separateUser"],[2699,74,1807,78],[2699,79,1807,83],[2699,84,1807,88],[2699,85,1807,89],[2699,88,1807,92],[2699,93,1807,97],[2699,94,1807,98],[2699,97,1807,101,"separateUser"],[2699,109,1807,113],[2699,110,1807,114,"user"],[2699,114,1807,118],[2699,115,1807,119],[2699,117,1807,121],[2700,18,1808,24,"currentSession"],[2700,32,1808,38],[2700,33,1808,39,"user"],[2700,37,1808,43],[2700,40,1808,46,"separateUser"],[2700,52,1808,58],[2700,53,1808,59,"user"],[2700,57,1808,63],[2701,18,1809,24],[2701,24,1809,30],[2701,25,1809,31],[2701,26,1809,32],[2701,28,1809,34,"helpers_1"],[2701,37,1809,43],[2701,38,1809,44,"removeItemAsync"],[2701,53,1809,59],[2701,55,1809,61],[2701,59,1809,65],[2701,60,1809,66,"storage"],[2701,67,1809,73],[2701,69,1809,75],[2701,73,1809,79],[2701,74,1809,80,"storageKey"],[2701,84,1809,90],[2701,87,1809,93],[2701,94,1809,100],[2701,95,1809,101],[2702,18,1810,24],[2702,24,1810,30],[2702,25,1810,31],[2702,26,1810,32],[2702,28,1810,34,"helpers_1"],[2702,37,1810,43],[2702,38,1810,44,"setItemAsync"],[2702,50,1810,56],[2702,52,1810,58],[2702,56,1810,62],[2702,57,1810,63,"storage"],[2702,64,1810,70],[2702,66,1810,72],[2702,70,1810,76],[2702,71,1810,77,"storageKey"],[2702,81,1810,87],[2702,83,1810,89,"currentSession"],[2702,97,1810,103],[2702,98,1810,104],[2703,16,1811,20],[2703,17,1811,21],[2703,23,1812,25],[2704,18,1813,24,"currentSession"],[2704,32,1813,38],[2704,33,1813,39,"user"],[2704,37,1813,43],[2704,40,1813,46],[2704,41,1813,47],[2704,42,1813,48],[2704,44,1813,50,"helpers_1"],[2704,53,1813,59],[2704,54,1813,60,"userNotAvailableProxy"],[2704,75,1813,81],[2704,77,1813,83],[2704,78,1813,84],[2705,16,1814,20],[2706,14,1815,16],[2707,12,1816,12],[2708,12,1817,12],[2708,16,1817,16],[2708,17,1817,17,"_debug"],[2708,23,1817,23],[2708,24,1817,24,"debugName"],[2708,33,1817,33],[2708,35,1817,35],[2708,57,1817,57],[2708,59,1817,59,"currentSession"],[2708,73,1817,73],[2708,74,1817,74],[2709,12,1818,12],[2709,16,1818,16],[2709,17,1818,17],[2709,21,1818,21],[2709,22,1818,22,"_isValidSession"],[2709,37,1818,37],[2709,38,1818,38,"currentSession"],[2709,52,1818,52],[2709,53,1818,53],[2709,55,1818,55],[2710,14,1819,16],[2710,18,1819,20],[2710,19,1819,21,"_debug"],[2710,25,1819,27],[2710,26,1819,28,"debugName"],[2710,35,1819,37],[2710,37,1819,39],[2710,59,1819,61],[2710,60,1819,62],[2711,14,1820,16],[2711,18,1820,20,"currentSession"],[2711,32,1820,34],[2711,37,1820,39],[2711,41,1820,43],[2711,43,1820,45],[2712,16,1821,20],[2712,22,1821,26],[2712,26,1821,30],[2712,27,1821,31,"_removeSession"],[2712,41,1821,45],[2712,42,1821,46],[2712,43,1821,47],[2713,14,1822,16],[2714,14,1823,16],[2715,12,1824,12],[2716,12,1825,12],[2716,16,1825,18,"expiresWithMargin"],[2716,33,1825,35],[2716,36,1825,38],[2716,37,1825,39],[2716,38,1825,40,"_b"],[2716,40,1825,42],[2716,43,1825,45,"currentSession"],[2716,57,1825,59],[2716,58,1825,60,"expires_at"],[2716,68,1825,70],[2716,74,1825,76],[2716,78,1825,80],[2716,82,1825,84,"_b"],[2716,84,1825,86],[2716,89,1825,91],[2716,94,1825,96],[2716,95,1825,97],[2716,98,1825,100,"_b"],[2716,100,1825,102],[2716,103,1825,105,"Infinity"],[2716,111,1825,113],[2716,115,1825,117],[2716,119,1825,121],[2716,122,1825,124,"Date"],[2716,126,1825,128],[2716,127,1825,129,"now"],[2716,130,1825,132],[2716,131,1825,133],[2716,132,1825,134],[2716,135,1825,137,"constants_1"],[2716,146,1825,148],[2716,147,1825,149,"EXPIRY_MARGIN_MS"],[2716,163,1825,165],[2717,12,1826,12],[2717,16,1826,16],[2717,17,1826,17,"_debug"],[2717,23,1826,23],[2717,24,1826,24,"debugName"],[2717,33,1826,33],[2717,35,1826,35],[2717,49,1826,49,"expiresWithMargin"],[2717,66,1826,66],[2717,69,1826,69],[2717,71,1826,71],[2717,74,1826,74],[2717,80,1826,80],[2717,107,1826,107,"constants_1"],[2717,118,1826,118],[2717,119,1826,119,"EXPIRY_MARGIN_MS"],[2717,135,1826,135],[2717,138,1826,138],[2717,139,1826,139],[2718,12,1827,12],[2718,16,1827,16,"expiresWithMargin"],[2718,33,1827,33],[2718,35,1827,35],[2719,14,1828,16],[2719,18,1828,20],[2719,22,1828,24],[2719,23,1828,25,"autoRefreshToken"],[2719,39,1828,41],[2719,43,1828,45,"currentSession"],[2719,57,1828,59],[2719,58,1828,60,"refresh_token"],[2719,71,1828,73],[2719,73,1828,75],[2720,16,1829,20],[2720,20,1829,20,"_yield$this$_callRefr3"],[2720,42,1829,20],[2720,51,1829,44],[2720,55,1829,48],[2720,56,1829,49,"_callRefreshToken"],[2720,73,1829,66],[2720,74,1829,67,"currentSession"],[2720,88,1829,81],[2720,89,1829,82,"refresh_token"],[2720,102,1829,95],[2720,103,1829,96],[2721,18,1829,28,"error"],[2721,23,1829,33],[2721,26,1829,33,"_yield$this$_callRefr3"],[2721,48,1829,33],[2721,49,1829,28,"error"],[2721,54,1829,33],[2722,16,1830,20],[2722,20,1830,24,"error"],[2722,25,1830,29],[2722,27,1830,31],[2723,18,1831,24,"console"],[2723,25,1831,31],[2723,26,1831,32,"error"],[2723,31,1831,37],[2723,32,1831,38,"error"],[2723,37,1831,43],[2723,38,1831,44],[2724,18,1832,24],[2724,22,1832,28],[2724,23,1832,29],[2724,24,1832,30],[2724,25,1832,31],[2724,27,1832,33,"errors_1"],[2724,35,1832,41],[2724,36,1832,42,"isAuthRetryableFetchError"],[2724,61,1832,67],[2724,63,1832,69,"error"],[2724,68,1832,74],[2724,69,1832,75],[2724,71,1832,77],[2725,20,1833,28],[2725,24,1833,32],[2725,25,1833,33,"_debug"],[2725,31,1833,39],[2725,32,1833,40,"debugName"],[2725,41,1833,49],[2725,43,1833,51],[2725,108,1833,116],[2725,110,1833,118,"error"],[2725,115,1833,123],[2725,116,1833,124],[2726,20,1834,28],[2726,26,1834,34],[2726,30,1834,38],[2726,31,1834,39,"_removeSession"],[2726,45,1834,53],[2726,46,1834,54],[2726,47,1834,55],[2727,18,1835,24],[2728,16,1836,20],[2729,14,1837,16],[2730,12,1838,12],[2730,13,1838,13],[2730,19,1839,17],[2730,23,1839,21,"currentSession"],[2730,37,1839,35],[2730,38,1839,36,"user"],[2730,42,1839,40],[2730,46,1840,16,"currentSession"],[2730,60,1840,30],[2730,61,1840,31,"user"],[2730,65,1840,35],[2730,66,1840,36,"__isUserNotAvailableProxy"],[2730,91,1840,61],[2730,96,1840,66],[2730,100,1840,70],[2730,102,1840,72],[2731,14,1841,16],[2732,14,1842,16],[2732,18,1842,20],[2733,16,1843,20],[2733,20,1843,20,"_yield$this$_getUser3"],[2733,41,1843,20],[2733,50,1843,61],[2733,54,1843,65],[2733,55,1843,66,"_getUser"],[2733,63,1843,74],[2733,64,1843,75,"currentSession"],[2733,78,1843,89],[2733,79,1843,90,"access_token"],[2733,91,1843,102],[2733,92,1843,103],[2734,18,1843,28,"data"],[2734,22,1843,32],[2734,25,1843,32,"_yield$this$_getUser3"],[2734,46,1843,32],[2734,47,1843,28,"data"],[2734,51,1843,32],[2735,18,1843,41,"userError"],[2735,27,1843,50],[2735,30,1843,50,"_yield$this$_getUser3"],[2735,51,1843,50],[2735,52,1843,34,"error"],[2735,57,1843,39],[2736,16,1844,20],[2736,20,1844,24],[2736,21,1844,25,"userError"],[2736,30,1844,34],[2736,35,1844,39,"data"],[2736,39,1844,43],[2736,44,1844,48],[2736,48,1844,52],[2736,52,1844,56,"data"],[2736,56,1844,60],[2736,61,1844,65],[2736,66,1844,70],[2736,67,1844,71],[2736,70,1844,74],[2736,75,1844,79],[2736,76,1844,80],[2736,79,1844,83,"data"],[2736,83,1844,87],[2736,84,1844,88,"user"],[2736,88,1844,92],[2736,89,1844,93],[2736,91,1844,95],[2737,18,1845,24,"currentSession"],[2737,32,1845,38],[2737,33,1845,39,"user"],[2737,37,1845,43],[2737,40,1845,46,"data"],[2737,44,1845,50],[2737,45,1845,51,"user"],[2737,49,1845,55],[2738,18,1846,24],[2738,24,1846,30],[2738,28,1846,34],[2738,29,1846,35,"_saveSession"],[2738,41,1846,47],[2738,42,1846,48,"currentSession"],[2738,56,1846,62],[2738,57,1846,63],[2739,18,1847,24],[2739,24,1847,30],[2739,28,1847,34],[2739,29,1847,35,"_notifyAllSubscribers"],[2739,50,1847,56],[2739,51,1847,57],[2739,62,1847,68],[2739,64,1847,70,"currentSession"],[2739,78,1847,84],[2739,79,1847,85],[2740,16,1848,20],[2740,17,1848,21],[2740,23,1849,25],[2741,18,1850,24],[2741,22,1850,28],[2741,23,1850,29,"_debug"],[2741,29,1850,35],[2741,30,1850,36,"debugName"],[2741,39,1850,45],[2741,41,1850,47],[2741,99,1850,105],[2741,100,1850,106],[2742,16,1851,20],[2743,14,1852,16],[2743,15,1852,17],[2743,16,1853,16],[2743,23,1853,23,"getUserError"],[2743,35,1853,35],[2743,37,1853,37],[2744,16,1854,20,"console"],[2744,23,1854,27],[2744,24,1854,28,"error"],[2744,29,1854,33],[2744,30,1854,34],[2744,56,1854,60],[2744,58,1854,62,"getUserError"],[2744,70,1854,74],[2744,71,1854,75],[2745,16,1855,20],[2745,20,1855,24],[2745,21,1855,25,"_debug"],[2745,27,1855,31],[2745,28,1855,32,"debugName"],[2745,37,1855,41],[2745,39,1855,43],[2745,97,1855,101],[2745,99,1855,103,"getUserError"],[2745,111,1855,115],[2745,112,1855,116],[2746,14,1856,16],[2747,12,1857,12],[2747,13,1857,13],[2747,19,1858,17],[2748,14,1859,16],[2749,14,1860,16],[2750,14,1861,16],[2751,14,1862,16],[2751,20,1862,22],[2751,24,1862,26],[2751,25,1862,27,"_notifyAllSubscribers"],[2751,46,1862,48],[2751,47,1862,49],[2751,58,1862,60],[2751,60,1862,62,"currentSession"],[2751,74,1862,76],[2751,75,1862,77],[2752,12,1863,12],[2753,10,1864,8],[2753,11,1864,9],[2753,12,1865,8],[2753,19,1865,15,"err"],[2753,22,1865,18],[2753,24,1865,20],[2754,12,1866,12],[2754,16,1866,16],[2754,17,1866,17,"_debug"],[2754,23,1866,23],[2754,24,1866,24,"debugName"],[2754,33,1866,33],[2754,35,1866,35],[2754,42,1866,42],[2754,44,1866,44,"err"],[2754,47,1866,47],[2754,48,1866,48],[2755,12,1867,12,"console"],[2755,19,1867,19],[2755,20,1867,20,"error"],[2755,25,1867,25],[2755,26,1867,26,"err"],[2755,29,1867,29],[2755,30,1867,30],[2756,12,1868,12],[2757,10,1869,8],[2757,11,1869,9],[2757,20,1870,16],[2758,12,1871,12],[2758,16,1871,16],[2758,17,1871,17,"_debug"],[2758,23,1871,23],[2758,24,1871,24,"debugName"],[2758,33,1871,33],[2758,35,1871,35],[2758,40,1871,40],[2758,41,1871,41],[2759,10,1872,8],[2760,8,1873,4],[2760,9,1873,5],[2761,8,1873,5],[2761,17,1783,10,"_recoverAndRefresh"],[2761,35,1783,28,"_recoverAndRefresh"],[2761,36,1783,28],[2762,10,1783,28],[2762,17,1783,28,"_recoverAndRefresh2"],[2762,36,1783,28],[2762,37,1783,28,"apply"],[2762,42,1783,28],[2762,49,1783,28,"arguments"],[2762,58,1783,28],[2763,8,1783,28],[2764,8,1783,28],[2764,15,1783,10,"_recoverAndRefresh"],[2764,33,1783,28],[2765,6,1783,28],[2766,4,1783,28],[2767,6,1783,28,"key"],[2767,9,1783,28],[2768,6,1783,28,"value"],[2768,11,1783,28],[2769,8,1783,28],[2769,12,1783,28,"_callRefreshToken2"],[2769,30,1783,28],[2769,33,1783,28,"_asyncToGenerator"],[2769,50,1783,28],[2769,51,1874,4],[2769,62,1874,28,"refreshToken"],[2769,74,1874,40],[2769,76,1874,42],[2770,10,1875,8],[2770,14,1875,12,"_a"],[2770,16,1875,14],[2770,18,1875,16,"_b"],[2770,20,1875,18],[2771,10,1876,8],[2771,14,1876,12],[2771,15,1876,13,"refreshToken"],[2771,27,1876,25],[2771,29,1876,27],[2772,12,1877,12],[2772,18,1877,18],[2772,22,1877,22,"errors_1"],[2772,30,1877,30],[2772,31,1877,31,"AuthSessionMissingError"],[2772,54,1877,54],[2772,55,1877,55],[2772,56,1877,56],[2773,10,1878,8],[2774,10,1879,8],[2775,10,1880,8],[2775,14,1880,12],[2775,18,1880,16],[2775,19,1880,17,"refreshingDeferred"],[2775,37,1880,35],[2775,39,1880,37],[2776,12,1881,12],[2776,19,1881,19],[2776,23,1881,23],[2776,24,1881,24,"refreshingDeferred"],[2776,42,1881,42],[2776,43,1881,43,"promise"],[2776,50,1881,50],[2777,10,1882,8],[2778,10,1883,8],[2778,14,1883,14,"debugName"],[2778,23,1883,23],[2778,26,1883,26],[2778,48,1883,48,"refreshToken"],[2778,60,1883,60],[2778,61,1883,61,"substring"],[2778,70,1883,70],[2778,71,1883,71],[2778,72,1883,72],[2778,74,1883,74],[2778,75,1883,75],[2778,76,1883,76],[2778,82,1883,82],[2779,10,1884,8],[2779,14,1884,12],[2779,15,1884,13,"_debug"],[2779,21,1884,19],[2779,22,1884,20,"debugName"],[2779,31,1884,29],[2779,33,1884,31],[2779,40,1884,38],[2779,41,1884,39],[2780,10,1885,8],[2780,14,1885,12],[2781,12,1886,12],[2781,16,1886,16],[2781,17,1886,17,"refreshingDeferred"],[2781,35,1886,35],[2781,38,1886,38],[2781,42,1886,42,"helpers_1"],[2781,51,1886,51],[2781,52,1886,52,"Deferred"],[2781,60,1886,60],[2781,61,1886,61],[2781,62,1886,62],[2782,12,1887,12],[2782,16,1887,12,"_yield$this$_refreshA"],[2782,37,1887,12],[2782,46,1887,42],[2782,50,1887,46],[2782,51,1887,47,"_refreshAccessToken"],[2782,70,1887,66],[2782,71,1887,67,"refreshToken"],[2782,83,1887,79],[2782,84,1887,80],[2783,14,1887,20,"data"],[2783,18,1887,24],[2783,21,1887,24,"_yield$this$_refreshA"],[2783,42,1887,24],[2783,43,1887,20,"data"],[2783,47,1887,24],[2784,14,1887,26,"error"],[2784,19,1887,31],[2784,22,1887,31,"_yield$this$_refreshA"],[2784,43,1887,31],[2784,44,1887,26,"error"],[2784,49,1887,31],[2785,12,1888,12],[2785,16,1888,16,"error"],[2785,21,1888,21],[2785,23,1889,16],[2785,29,1889,22,"error"],[2785,34,1889,27],[2786,12,1890,12],[2786,16,1890,16],[2786,17,1890,17,"data"],[2786,21,1890,21],[2786,22,1890,22,"session"],[2786,29,1890,29],[2786,31,1891,16],[2786,37,1891,22],[2786,41,1891,26,"errors_1"],[2786,49,1891,34],[2786,50,1891,35,"AuthSessionMissingError"],[2786,73,1891,58],[2786,74,1891,59],[2786,75,1891,60],[2787,12,1892,12],[2787,18,1892,18],[2787,22,1892,22],[2787,23,1892,23,"_saveSession"],[2787,35,1892,35],[2787,36,1892,36,"data"],[2787,40,1892,40],[2787,41,1892,41,"session"],[2787,48,1892,48],[2787,49,1892,49],[2788,12,1893,12],[2788,18,1893,18],[2788,22,1893,22],[2788,23,1893,23,"_notifyAllSubscribers"],[2788,44,1893,44],[2788,45,1893,45],[2788,62,1893,62],[2788,64,1893,64,"data"],[2788,68,1893,68],[2788,69,1893,69,"session"],[2788,76,1893,76],[2788,77,1893,77],[2789,12,1894,12],[2789,16,1894,18,"result"],[2789,22,1894,24],[2789,25,1894,27],[2790,14,1894,29,"data"],[2790,18,1894,33],[2790,20,1894,35,"data"],[2790,24,1894,39],[2790,25,1894,40,"session"],[2790,32,1894,47],[2791,14,1894,49,"error"],[2791,19,1894,54],[2791,21,1894,56],[2792,12,1894,61],[2792,13,1894,62],[2793,12,1895,12],[2793,16,1895,16],[2793,17,1895,17,"refreshingDeferred"],[2793,35,1895,35],[2793,36,1895,36,"resolve"],[2793,43,1895,43],[2793,44,1895,44,"result"],[2793,50,1895,50],[2793,51,1895,51],[2794,12,1896,12],[2794,19,1896,19,"result"],[2794,25,1896,25],[2795,10,1897,8],[2795,11,1897,9],[2795,12,1898,8],[2795,19,1898,15,"error"],[2795,24,1898,20],[2795,26,1898,22],[2796,12,1899,12],[2796,16,1899,16],[2796,17,1899,17,"_debug"],[2796,23,1899,23],[2796,24,1899,24,"debugName"],[2796,33,1899,33],[2796,35,1899,35],[2796,42,1899,42],[2796,44,1899,44,"error"],[2796,49,1899,49],[2796,50,1899,50],[2797,12,1900,12],[2797,16,1900,16],[2797,17,1900,17],[2797,18,1900,18],[2797,20,1900,20,"errors_1"],[2797,28,1900,28],[2797,29,1900,29,"isAuthError"],[2797,40,1900,40],[2797,42,1900,42,"error"],[2797,47,1900,47],[2797,48,1900,48],[2797,50,1900,50],[2798,14,1901,16],[2798,18,1901,22,"result"],[2798,26,1901,28],[2798,29,1901,31],[2799,16,1901,33,"data"],[2799,20,1901,37],[2799,22,1901,39],[2799,26,1901,43],[2800,16,1901,45,"error"],[2801,14,1901,51],[2801,15,1901,52],[2802,14,1902,16],[2802,18,1902,20],[2802,19,1902,21],[2802,20,1902,22],[2802,21,1902,23],[2802,23,1902,25,"errors_1"],[2802,31,1902,33],[2802,32,1902,34,"isAuthRetryableFetchError"],[2802,57,1902,59],[2802,59,1902,61,"error"],[2802,64,1902,66],[2802,65,1902,67],[2802,67,1902,69],[2803,16,1903,20],[2803,22,1903,26],[2803,26,1903,30],[2803,27,1903,31,"_removeSession"],[2803,41,1903,45],[2803,42,1903,46],[2803,43,1903,47],[2804,14,1904,16],[2805,14,1905,16],[2805,15,1905,17,"_a"],[2805,17,1905,19],[2805,20,1905,22],[2805,24,1905,26],[2805,25,1905,27,"refreshingDeferred"],[2805,43,1905,45],[2805,49,1905,51],[2805,53,1905,55],[2805,57,1905,59,"_a"],[2805,59,1905,61],[2805,64,1905,66],[2805,69,1905,71],[2805,70,1905,72],[2805,73,1905,75],[2805,78,1905,80],[2805,79,1905,81],[2805,82,1905,84,"_a"],[2805,84,1905,86],[2805,85,1905,87,"resolve"],[2805,92,1905,94],[2805,93,1905,95,"result"],[2805,101,1905,101],[2805,102,1905,102],[2806,14,1906,16],[2806,21,1906,23,"result"],[2806,29,1906,29],[2807,12,1907,12],[2808,12,1908,12],[2808,13,1908,13,"_b"],[2808,15,1908,15],[2808,18,1908,18],[2808,22,1908,22],[2808,23,1908,23,"refreshingDeferred"],[2808,41,1908,41],[2808,47,1908,47],[2808,51,1908,51],[2808,55,1908,55,"_b"],[2808,57,1908,57],[2808,62,1908,62],[2808,67,1908,67],[2808,68,1908,68],[2808,71,1908,71],[2808,76,1908,76],[2808,77,1908,77],[2808,80,1908,80,"_b"],[2808,82,1908,82],[2808,83,1908,83,"reject"],[2808,89,1908,89],[2808,90,1908,90,"error"],[2808,95,1908,95],[2808,96,1908,96],[2809,12,1909,12],[2809,18,1909,18,"error"],[2809,23,1909,23],[2810,10,1910,8],[2810,11,1910,9],[2810,20,1911,16],[2811,12,1912,12],[2811,16,1912,16],[2811,17,1912,17,"refreshingDeferred"],[2811,35,1912,35],[2811,38,1912,38],[2811,42,1912,42],[2812,12,1913,12],[2812,16,1913,16],[2812,17,1913,17,"_debug"],[2812,23,1913,23],[2812,24,1913,24,"debugName"],[2812,33,1913,33],[2812,35,1913,35],[2812,40,1913,40],[2812,41,1913,41],[2813,10,1914,8],[2814,8,1915,4],[2814,9,1915,5],[2815,8,1915,5],[2815,17,1874,10,"_callRefreshToken"],[2815,34,1874,27,"_callRefreshToken"],[2815,35,1874,27,"_x51"],[2815,39,1874,27],[2816,10,1874,27],[2816,17,1874,27,"_callRefreshToken2"],[2816,35,1874,27],[2816,36,1874,27,"apply"],[2816,41,1874,27],[2816,48,1874,27,"arguments"],[2816,57,1874,27],[2817,8,1874,27],[2818,8,1874,27],[2818,15,1874,10,"_callRefreshToken"],[2818,32,1874,27],[2819,6,1874,27],[2820,4,1874,27],[2821,6,1874,27,"key"],[2821,9,1874,27],[2822,6,1874,27,"value"],[2822,11,1874,27],[2823,8,1874,27],[2823,12,1874,27,"_notifyAllSubscribers2"],[2823,34,1874,27],[2823,37,1874,27,"_asyncToGenerator"],[2823,54,1874,27],[2823,55,1916,4],[2823,66,1916,32,"event"],[2823,71,1916,37],[2823,73,1916,39,"session"],[2823,80,1916,46],[2823,82,1916,66],[2824,10,1916,66],[2824,14,1916,48,"broadcast"],[2824,23,1916,57],[2824,26,1916,57,"arguments"],[2824,35,1916,57],[2824,36,1916,57,"length"],[2824,42,1916,57],[2824,50,1916,57,"arguments"],[2824,59,1916,57],[2824,67,1916,57,"undefined"],[2824,76,1916,57],[2824,79,1916,57,"arguments"],[2824,88,1916,57],[2824,94,1916,60],[2824,98,1916,64],[2825,10,1917,8],[2825,14,1917,14,"debugName"],[2825,23,1917,23],[2825,26,1917,26],[2825,52,1917,52,"event"],[2825,57,1917,57],[2825,60,1917,60],[2826,10,1918,8],[2826,14,1918,12],[2826,15,1918,13,"_debug"],[2826,21,1918,19],[2826,22,1918,20,"debugName"],[2826,31,1918,29],[2826,33,1918,31],[2826,40,1918,38],[2826,42,1918,40,"session"],[2826,49,1918,47],[2826,51,1918,49],[2826,66,1918,64,"broadcast"],[2826,75,1918,73],[2826,77,1918,75],[2826,78,1918,76],[2827,10,1919,8],[2827,14,1919,12],[2828,12,1920,12],[2828,16,1920,16],[2828,20,1920,20],[2828,21,1920,21,"broadcastChannel"],[2828,37,1920,37],[2828,41,1920,41,"broadcast"],[2828,50,1920,50],[2828,52,1920,52],[2829,14,1921,16],[2829,18,1921,20],[2829,19,1921,21,"broadcastChannel"],[2829,35,1921,37],[2829,36,1921,38,"postMessage"],[2829,47,1921,49],[2829,48,1921,50],[2830,16,1921,52,"event"],[2830,21,1921,57],[2831,16,1921,59,"session"],[2832,14,1921,67],[2832,15,1921,68],[2832,16,1921,69],[2833,12,1922,12],[2834,12,1923,12],[2834,16,1923,18,"errors"],[2834,22,1923,24],[2834,25,1923,27],[2834,27,1923,29],[2835,12,1924,12],[2835,16,1924,18,"promises"],[2835,24,1924,26],[2835,27,1924,29,"Array"],[2835,32,1924,34],[2835,33,1924,35,"from"],[2835,37,1924,39],[2835,38,1924,40],[2835,42,1924,44],[2835,43,1924,45,"stateChangeEmitters"],[2835,62,1924,64],[2835,63,1924,65,"values"],[2835,69,1924,71],[2835,70,1924,72],[2835,71,1924,73],[2835,72,1924,74],[2835,73,1924,75,"map"],[2835,76,1924,78],[2836,14,1924,78],[2836,18,1924,78,"_ref30"],[2836,24,1924,78],[2836,27,1924,78,"_asyncToGenerator"],[2836,44,1924,78],[2836,45,1924,79],[2836,56,1924,86,"x"],[2836,57,1924,87],[2836,59,1924,92],[2837,16,1925,16],[2837,20,1925,20],[2838,18,1926,20],[2838,24,1926,26,"x"],[2838,25,1926,27],[2838,26,1926,28,"callback"],[2838,34,1926,36],[2838,35,1926,37,"event"],[2838,40,1926,42],[2838,42,1926,44,"session"],[2838,49,1926,51],[2838,50,1926,52],[2839,16,1927,16],[2839,17,1927,17],[2839,18,1928,16],[2839,25,1928,23,"e"],[2839,26,1928,24],[2839,28,1928,26],[2840,18,1929,20,"errors"],[2840,24,1929,26],[2840,25,1929,27,"push"],[2840,29,1929,31],[2840,30,1929,32,"e"],[2840,31,1929,33],[2840,32,1929,34],[2841,16,1930,16],[2842,14,1931,12],[2842,15,1931,13],[2843,14,1931,13],[2843,31,1931,13,"_x54"],[2843,35,1931,13],[2844,16,1931,13],[2844,23,1931,13,"_ref30"],[2844,29,1931,13],[2844,30,1931,13,"apply"],[2844,35,1931,13],[2844,42,1931,13,"arguments"],[2844,51,1931,13],[2845,14,1931,13],[2846,12,1931,13],[2846,16,1931,14],[2847,12,1932,12],[2847,18,1932,18,"Promise"],[2847,25,1932,25],[2847,26,1932,26,"all"],[2847,29,1932,29],[2847,30,1932,30,"promises"],[2847,38,1932,38],[2847,39,1932,39],[2848,12,1933,12],[2848,16,1933,16,"errors"],[2848,22,1933,22],[2848,23,1933,23,"length"],[2848,29,1933,29],[2848,32,1933,32],[2848,33,1933,33],[2848,35,1933,35],[2849,14,1934,16],[2849,19,1934,21],[2849,23,1934,25,"i"],[2849,24,1934,26],[2849,27,1934,29],[2849,28,1934,30],[2849,30,1934,32,"i"],[2849,31,1934,33],[2849,34,1934,36,"errors"],[2849,40,1934,42],[2849,41,1934,43,"length"],[2849,47,1934,49],[2849,49,1934,51,"i"],[2849,50,1934,52],[2849,54,1934,56],[2849,55,1934,57],[2849,57,1934,59],[2850,16,1935,20,"console"],[2850,23,1935,27],[2850,24,1935,28,"error"],[2850,29,1935,33],[2850,30,1935,34,"errors"],[2850,36,1935,40],[2850,37,1935,41,"i"],[2850,38,1935,42],[2850,39,1935,43],[2850,40,1935,44],[2851,14,1936,16],[2852,14,1937,16],[2852,20,1937,22,"errors"],[2852,26,1937,28],[2852,27,1937,29],[2852,28,1937,30],[2852,29,1937,31],[2853,12,1938,12],[2854,10,1939,8],[2854,11,1939,9],[2854,20,1940,16],[2855,12,1941,12],[2855,16,1941,16],[2855,17,1941,17,"_debug"],[2855,23,1941,23],[2855,24,1941,24,"debugName"],[2855,33,1941,33],[2855,35,1941,35],[2855,40,1941,40],[2855,41,1941,41],[2856,10,1942,8],[2857,8,1943,4],[2857,9,1943,5],[2858,8,1943,5],[2858,17,1916,10,"_notifyAllSubscribers"],[2858,38,1916,31,"_notifyAllSubscribers"],[2858,39,1916,31,"_x52"],[2858,43,1916,31],[2858,45,1916,31,"_x53"],[2858,49,1916,31],[2859,10,1916,31],[2859,17,1916,31,"_notifyAllSubscribers2"],[2859,39,1916,31],[2859,40,1916,31,"apply"],[2859,45,1916,31],[2859,52,1916,31,"arguments"],[2859,61,1916,31],[2860,8,1916,31],[2861,8,1916,31],[2861,15,1916,10,"_notifyAllSubscribers"],[2861,36,1916,31],[2862,6,1916,31],[2863,6,1944,4],[2864,0,1945,0],[2865,0,1946,0],[2866,0,1947,0],[2867,4,1944,4],[2868,6,1944,4,"key"],[2868,9,1944,4],[2869,6,1944,4,"value"],[2869,11,1944,4],[2870,8,1944,4],[2870,12,1944,4,"_saveSession2"],[2870,25,1944,4],[2870,28,1944,4,"_asyncToGenerator"],[2870,45,1944,4],[2870,46,1948,4],[2870,57,1948,23,"session"],[2870,64,1948,30],[2870,66,1948,32],[2871,10,1949,8],[2871,14,1949,12],[2871,15,1949,13,"_debug"],[2871,21,1949,19],[2871,22,1949,20],[2871,39,1949,37],[2871,41,1949,39,"session"],[2871,48,1949,46],[2871,49,1949,47],[2872,10,1950,8],[2873,10,1951,8],[2874,10,1952,8],[2874,14,1952,12],[2874,15,1952,13,"suppressGetSessionWarning"],[2874,40,1952,38],[2874,43,1952,41],[2874,47,1952,45],[2875,10,1953,8],[2876,10,1954,8],[2876,14,1954,14,"sessionToProcess"],[2876,30,1954,30],[2876,33,1954,33,"Object"],[2876,39,1954,39],[2876,40,1954,40,"assign"],[2876,46,1954,46],[2876,47,1954,47],[2876,48,1954,48],[2876,49,1954,49],[2876,51,1954,51,"session"],[2876,58,1954,58],[2876,59,1954,59],[2877,10,1955,8],[2877,14,1955,14,"userIsProxy"],[2877,25,1955,25],[2877,28,1955,28,"sessionToProcess"],[2877,44,1955,44],[2877,45,1955,45,"user"],[2877,49,1955,49],[2877,53,1955,53,"sessionToProcess"],[2877,69,1955,69],[2877,70,1955,70,"user"],[2877,74,1955,74],[2877,75,1955,75,"__isUserNotAvailableProxy"],[2877,100,1955,100],[2877,105,1955,105],[2877,109,1955,109],[2878,10,1956,8],[2878,14,1956,12],[2878,18,1956,16],[2878,19,1956,17,"userStorage"],[2878,30,1956,28],[2878,32,1956,30],[2879,12,1957,12],[2879,16,1957,16],[2879,17,1957,17,"userIsProxy"],[2879,28,1957,28],[2879,32,1957,32,"sessionToProcess"],[2879,48,1957,48],[2879,49,1957,49,"user"],[2879,53,1957,53],[2879,55,1957,55],[2880,14,1958,16],[2881,14,1959,16],[2881,20,1959,22],[2881,21,1959,23],[2881,22,1959,24],[2881,24,1959,26,"helpers_1"],[2881,33,1959,35],[2881,34,1959,36,"setItemAsync"],[2881,46,1959,48],[2881,48,1959,50],[2881,52,1959,54],[2881,53,1959,55,"userStorage"],[2881,64,1959,66],[2881,66,1959,68],[2881,70,1959,72],[2881,71,1959,73,"storageKey"],[2881,81,1959,83],[2881,84,1959,86],[2881,91,1959,93],[2881,93,1959,95],[2882,16,1960,20,"user"],[2882,20,1960,24],[2882,22,1960,26,"sessionToProcess"],[2882,38,1960,42],[2882,39,1960,43,"user"],[2883,14,1961,16],[2883,15,1961,17],[2883,16,1961,18],[2884,12,1962,12],[2884,13,1962,13],[2884,19,1963,17],[2884,23,1963,21,"userIsProxy"],[2884,34,1963,32],[2884,36,1963,34],[2885,14,1964,16],[2886,14,1965,16],[2887,14,1966,16],[2888,14,1967,16],[2889,12,1967,16],[2890,12,1969,12],[2891,12,1970,12],[2892,12,1971,12],[2892,16,1971,18,"mainSessionData"],[2892,31,1971,33],[2892,34,1971,36,"Object"],[2892,40,1971,42],[2892,41,1971,43,"assign"],[2892,47,1971,49],[2892,48,1971,50],[2892,49,1971,51],[2892,50,1971,52],[2892,52,1971,54,"sessionToProcess"],[2892,68,1971,70],[2892,69,1971,71],[2893,12,1972,12],[2893,19,1972,19,"mainSessionData"],[2893,34,1972,34],[2893,35,1972,35,"user"],[2893,39,1972,39],[2893,40,1972,40],[2893,41,1972,41],[2894,12,1973,12],[2894,16,1973,18,"clonedMainSessionData"],[2894,37,1973,39],[2894,40,1973,42],[2894,41,1973,43],[2894,42,1973,44],[2894,44,1973,46,"helpers_1"],[2894,53,1973,55],[2894,54,1973,56,"deepClone"],[2894,63,1973,65],[2894,65,1973,67,"mainSessionData"],[2894,80,1973,82],[2894,81,1973,83],[2895,12,1974,12],[2895,18,1974,18],[2895,19,1974,19],[2895,20,1974,20],[2895,22,1974,22,"helpers_1"],[2895,31,1974,31],[2895,32,1974,32,"setItemAsync"],[2895,44,1974,44],[2895,46,1974,46],[2895,50,1974,50],[2895,51,1974,51,"storage"],[2895,58,1974,58],[2895,60,1974,60],[2895,64,1974,64],[2895,65,1974,65,"storageKey"],[2895,75,1974,75],[2895,77,1974,77,"clonedMainSessionData"],[2895,98,1974,98],[2895,99,1974,99],[2896,10,1975,8],[2896,11,1975,9],[2896,17,1976,13],[2897,12,1977,12],[2898,12,1978,12],[2899,12,1979,12],[2900,12,1980,12],[2900,16,1980,18,"clonedSession"],[2900,29,1980,31],[2900,32,1980,34],[2900,33,1980,35],[2900,34,1980,36],[2900,36,1980,38,"helpers_1"],[2900,45,1980,47],[2900,46,1980,48,"deepClone"],[2900,55,1980,57],[2900,57,1980,59,"sessionToProcess"],[2900,73,1980,75],[2900,74,1980,76],[2900,75,1980,77],[2900,76,1980,78],[2901,12,1981,12],[2901,18,1981,18],[2901,19,1981,19],[2901,20,1981,20],[2901,22,1981,22,"helpers_1"],[2901,31,1981,31],[2901,32,1981,32,"setItemAsync"],[2901,44,1981,44],[2901,46,1981,46],[2901,50,1981,50],[2901,51,1981,51,"storage"],[2901,58,1981,58],[2901,60,1981,60],[2901,64,1981,64],[2901,65,1981,65,"storageKey"],[2901,75,1981,75],[2901,77,1981,77,"clonedSession"],[2901,90,1981,90],[2901,91,1981,91],[2902,10,1982,8],[2903,8,1983,4],[2903,9,1983,5],[2904,8,1983,5],[2904,17,1948,10,"_saveSession"],[2904,29,1948,22,"_saveSession"],[2904,30,1948,22,"_x55"],[2904,34,1948,22],[2905,10,1948,22],[2905,17,1948,22,"_saveSession2"],[2905,30,1948,22],[2905,31,1948,22,"apply"],[2905,36,1948,22],[2905,43,1948,22,"arguments"],[2905,52,1948,22],[2906,8,1948,22],[2907,8,1948,22],[2907,15,1948,10,"_saveSession"],[2907,27,1948,22],[2908,6,1948,22],[2909,4,1948,22],[2910,6,1948,22,"key"],[2910,9,1948,22],[2911,6,1948,22,"value"],[2911,11,1948,22],[2912,8,1948,22],[2912,12,1948,22,"_removeSession2"],[2912,27,1948,22],[2912,30,1948,22,"_asyncToGenerator"],[2912,47,1948,22],[2912,48,1984,4],[2912,61,1984,27],[2913,10,1985,8],[2913,14,1985,12],[2913,15,1985,13,"_debug"],[2913,21,1985,19],[2913,22,1985,20],[2913,41,1985,39],[2913,42,1985,40],[2914,10,1986,8],[2914,16,1986,14],[2914,17,1986,15],[2914,18,1986,16],[2914,20,1986,18,"helpers_1"],[2914,29,1986,27],[2914,30,1986,28,"removeItemAsync"],[2914,45,1986,43],[2914,47,1986,45],[2914,51,1986,49],[2914,52,1986,50,"storage"],[2914,59,1986,57],[2914,61,1986,59],[2914,65,1986,63],[2914,66,1986,64,"storageKey"],[2914,76,1986,74],[2914,77,1986,75],[2915,10,1987,8],[2915,16,1987,14],[2915,17,1987,15],[2915,18,1987,16],[2915,20,1987,18,"helpers_1"],[2915,29,1987,27],[2915,30,1987,28,"removeItemAsync"],[2915,45,1987,43],[2915,47,1987,45],[2915,51,1987,49],[2915,52,1987,50,"storage"],[2915,59,1987,57],[2915,61,1987,59],[2915,65,1987,63],[2915,66,1987,64,"storageKey"],[2915,76,1987,74],[2915,79,1987,77],[2915,95,1987,93],[2915,96,1987,94],[2916,10,1988,8],[2916,16,1988,14],[2916,17,1988,15],[2916,18,1988,16],[2916,20,1988,18,"helpers_1"],[2916,29,1988,27],[2916,30,1988,28,"removeItemAsync"],[2916,45,1988,43],[2916,47,1988,45],[2916,51,1988,49],[2916,52,1988,50,"storage"],[2916,59,1988,57],[2916,61,1988,59],[2916,65,1988,63],[2916,66,1988,64,"storageKey"],[2916,76,1988,74],[2916,79,1988,77],[2916,86,1988,84],[2916,87,1988,85],[2917,10,1989,8],[2917,14,1989,12],[2917,18,1989,16],[2917,19,1989,17,"userStorage"],[2917,30,1989,28],[2917,32,1989,30],[2918,12,1990,12],[2918,18,1990,18],[2918,19,1990,19],[2918,20,1990,20],[2918,22,1990,22,"helpers_1"],[2918,31,1990,31],[2918,32,1990,32,"removeItemAsync"],[2918,47,1990,47],[2918,49,1990,49],[2918,53,1990,53],[2918,54,1990,54,"userStorage"],[2918,65,1990,65],[2918,67,1990,67],[2918,71,1990,71],[2918,72,1990,72,"storageKey"],[2918,82,1990,82],[2918,85,1990,85],[2918,92,1990,92],[2918,93,1990,93],[2919,10,1991,8],[2920,10,1992,8],[2920,16,1992,14],[2920,20,1992,18],[2920,21,1992,19,"_notifyAllSubscribers"],[2920,42,1992,40],[2920,43,1992,41],[2920,55,1992,53],[2920,57,1992,55],[2920,61,1992,59],[2920,62,1992,60],[2921,8,1993,4],[2921,9,1993,5],[2922,8,1993,5],[2922,17,1984,10,"_removeSession"],[2922,31,1984,24,"_removeSession"],[2922,32,1984,24],[2923,10,1984,24],[2923,17,1984,24,"_removeSession2"],[2923,32,1984,24],[2923,33,1984,24,"apply"],[2923,38,1984,24],[2923,45,1984,24,"arguments"],[2923,54,1984,24],[2924,8,1984,24],[2925,8,1984,24],[2925,15,1984,10,"_removeSession"],[2925,29,1984,24],[2926,6,1984,24],[2927,6,1994,4],[2928,0,1995,0],[2929,0,1996,0],[2930,0,1997,0],[2931,0,1998,0],[2932,0,1999,0],[2933,4,1994,4],[2934,6,1994,4,"key"],[2934,9,1994,4],[2935,6,1994,4,"value"],[2935,11,1994,4],[2935,13,2000,4],[2935,22,2000,4,"_removeVisibilityChangedCallback"],[2935,54,2000,36,"_removeVisibilityChangedCallback"],[2935,55,2000,36],[2935,57,2000,39],[2936,8,2001,8],[2936,12,2001,12],[2936,13,2001,13,"_debug"],[2936,19,2001,19],[2936,20,2001,20],[2936,57,2001,57],[2936,58,2001,58],[2937,8,2002,8],[2937,12,2002,14,"callback"],[2937,20,2002,22],[2937,23,2002,25],[2937,27,2002,29],[2937,28,2002,30,"visibilityChangedCallback"],[2937,53,2002,55],[2938,8,2003,8],[2938,12,2003,12],[2938,13,2003,13,"visibilityChangedCallback"],[2938,38,2003,38],[2938,41,2003,41],[2938,45,2003,45],[2939,8,2004,8],[2939,12,2004,12],[2940,10,2005,12],[2940,14,2005,16,"callback"],[2940,22,2005,24],[2940,26,2005,28],[2940,27,2005,29],[2940,28,2005,30],[2940,30,2005,32,"helpers_1"],[2940,39,2005,41],[2940,40,2005,42,"isBrowser"],[2940,49,2005,51],[2940,51,2005,53],[2940,52,2005,54],[2940,57,2005,59,"window"],[2940,63,2005,65],[2940,68,2005,70],[2940,72,2005,74],[2940,76,2005,78,"window"],[2940,82,2005,84],[2940,87,2005,89],[2940,92,2005,94],[2940,93,2005,95],[2940,96,2005,98],[2940,101,2005,103],[2940,102,2005,104],[2940,105,2005,107,"window"],[2940,111,2005,113],[2940,112,2005,114,"removeEventListener"],[2940,131,2005,133],[2940,132,2005,134],[2940,134,2005,136],[2941,12,2006,16,"window"],[2941,18,2006,22],[2941,19,2006,23,"removeEventListener"],[2941,38,2006,42],[2941,39,2006,43],[2941,57,2006,61],[2941,59,2006,63,"callback"],[2941,67,2006,71],[2941,68,2006,72],[2942,10,2007,12],[2943,8,2008,8],[2943,9,2008,9],[2943,10,2009,8],[2943,17,2009,15,"e"],[2943,18,2009,16],[2943,20,2009,18],[2944,10,2010,12,"console"],[2944,17,2010,19],[2944,18,2010,20,"error"],[2944,23,2010,25],[2944,24,2010,26],[2944,67,2010,69],[2944,69,2010,71,"e"],[2944,70,2010,72],[2944,71,2010,73],[2945,8,2011,8],[2946,6,2012,4],[2947,6,2013,4],[2948,0,2014,0],[2949,0,2015,0],[2950,0,2016,0],[2951,4,2013,4],[2952,6,2013,4,"key"],[2952,9,2013,4],[2953,6,2013,4,"value"],[2953,11,2013,4],[2954,8,2013,4],[2954,12,2013,4,"_startAutoRefresh2"],[2954,30,2013,4],[2954,33,2013,4,"_asyncToGenerator"],[2954,50,2013,4],[2954,51,2017,4],[2954,64,2017,30],[2955,10,2017,30],[2955,14,2017,30,"_this22"],[2955,21,2017,30],[2956,10,2018,8],[2956,16,2018,14],[2956,20,2018,18],[2956,21,2018,19,"_stopAutoRefresh"],[2956,37,2018,35],[2956,38,2018,36],[2956,39,2018,37],[2957,10,2019,8],[2957,14,2019,12],[2957,15,2019,13,"_debug"],[2957,21,2019,19],[2957,22,2019,20],[2957,44,2019,42],[2957,45,2019,43],[2958,10,2020,8],[2958,14,2020,14,"ticker"],[2958,20,2020,20],[2958,23,2020,23,"setInterval"],[2958,34,2020,34],[2958,35,2020,35],[2958,41,2020,41],[2958,45,2020,45],[2958,46,2020,46,"_autoRefreshTokenTick"],[2958,67,2020,67],[2958,68,2020,68],[2958,69,2020,69],[2958,71,2020,71,"constants_1"],[2958,82,2020,82],[2958,83,2020,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2958,112,2020,112],[2958,113,2020,113],[2959,10,2021,8],[2959,14,2021,12],[2959,15,2021,13,"autoRefreshTicker"],[2959,32,2021,30],[2959,35,2021,33,"ticker"],[2959,41,2021,39],[2960,10,2022,8],[2960,14,2022,12,"ticker"],[2960,20,2022,18],[2960,24,2022,22],[2960,31,2022,29,"ticker"],[2960,37,2022,35],[2960,42,2022,40],[2960,50,2022,48],[2960,54,2022,52],[2960,61,2022,59,"ticker"],[2960,67,2022,65],[2960,68,2022,66,"unref"],[2960,73,2022,71],[2960,78,2022,76],[2960,88,2022,86],[2960,90,2022,88],[2961,12,2023,12],[2962,12,2024,12],[2963,12,2025,12],[2964,12,2026,12],[2965,12,2027,12],[2966,12,2028,12],[2967,12,2029,12,"ticker"],[2967,18,2029,18],[2967,19,2029,19,"unref"],[2967,24,2029,24],[2967,25,2029,25],[2967,26,2029,26],[2968,12,2030,12],[2969,10,2031,8],[2969,11,2031,9],[2969,17,2032,13],[2969,21,2032,17],[2969,28,2032,24,"Deno"],[2969,32,2032,28],[2969,37,2032,33],[2969,48,2032,44],[2969,52,2032,48],[2969,59,2032,55,"Deno"],[2969,63,2032,59],[2969,64,2032,60,"unrefTimer"],[2969,74,2032,70],[2969,79,2032,75],[2969,89,2032,85],[2969,91,2032,87],[2970,12,2033,12],[2971,12,2034,12],[2972,12,2035,12],[2973,12,2036,12,"Deno"],[2973,16,2036,16],[2973,17,2036,17,"unrefTimer"],[2973,27,2036,27],[2973,28,2036,28,"ticker"],[2973,34,2036,34],[2973,35,2036,35],[2974,10,2037,8],[2975,10,2038,8],[2976,10,2039,8],[2977,10,2040,8],[2978,10,2041,8,"setTimeout"],[2978,20,2041,18],[2978,34,2041,18,"_asyncToGenerator"],[2978,51,2041,18],[2978,52,2041,19],[2978,65,2041,31],[2979,12,2042,12],[2979,18,2042,18,"_this22"],[2979,25,2042,22],[2979,26,2042,23,"initializePromise"],[2979,43,2042,40],[2980,12,2043,12],[2980,18,2043,18,"_this22"],[2980,25,2043,22],[2980,26,2043,23,"_autoRefreshTokenTick"],[2980,47,2043,44],[2980,48,2043,45],[2980,49,2043,46],[2981,10,2044,8],[2981,11,2044,9],[2981,14,2044,11],[2981,15,2044,12],[2981,16,2044,13],[2982,8,2045,4],[2982,9,2045,5],[2983,8,2045,5],[2983,17,2017,10,"_startAutoRefresh"],[2983,34,2017,27,"_startAutoRefresh"],[2983,35,2017,27],[2984,10,2017,27],[2984,17,2017,27,"_startAutoRefresh2"],[2984,35,2017,27],[2984,36,2017,27,"apply"],[2984,41,2017,27],[2984,48,2017,27,"arguments"],[2984,57,2017,27],[2985,8,2017,27],[2986,8,2017,27],[2986,15,2017,10,"_startAutoRefresh"],[2986,32,2017,27],[2987,6,2017,27],[2988,6,2046,4],[2989,0,2047,0],[2990,0,2048,0],[2991,0,2049,0],[2992,6,2046,4],[2993,4,2046,4],[2994,6,2046,4,"key"],[2994,9,2046,4],[2995,6,2046,4,"value"],[2995,11,2046,4],[2996,8,2046,4],[2996,12,2046,4,"_stopAutoRefresh2"],[2996,29,2046,4],[2996,32,2046,4,"_asyncToGenerator"],[2996,49,2046,4],[2996,50,2050,4],[2996,63,2050,29],[2997,10,2051,8],[2997,14,2051,12],[2997,15,2051,13,"_debug"],[2997,21,2051,19],[2997,22,2051,20],[2997,43,2051,41],[2997,44,2051,42],[2998,10,2052,8],[2998,14,2052,14,"ticker"],[2998,20,2052,20],[2998,23,2052,23],[2998,27,2052,27],[2998,28,2052,28,"autoRefreshTicker"],[2998,45,2052,45],[2999,10,2053,8],[2999,14,2053,12],[2999,15,2053,13,"autoRefreshTicker"],[2999,32,2053,30],[2999,35,2053,33],[2999,39,2053,37],[3000,10,2054,8],[3000,14,2054,12,"ticker"],[3000,20,2054,18],[3000,22,2054,20],[3001,12,2055,12,"clearInterval"],[3001,25,2055,25],[3001,26,2055,26,"ticker"],[3001,32,2055,32],[3001,33,2055,33],[3002,10,2056,8],[3003,8,2057,4],[3003,9,2057,5],[3004,8,2057,5],[3004,17,2050,10,"_stopAutoRefresh"],[3004,33,2050,26,"_stopAutoRefresh"],[3004,34,2050,26],[3005,10,2050,26],[3005,17,2050,26,"_stopAutoRefresh2"],[3005,34,2050,26],[3005,35,2050,26,"apply"],[3005,40,2050,26],[3005,47,2050,26,"arguments"],[3005,56,2050,26],[3006,8,2050,26],[3007,8,2050,26],[3007,15,2050,10,"_stopAutoRefresh"],[3007,31,2050,26],[3008,6,2050,26],[3009,6,2058,4],[3010,0,2059,0],[3011,0,2060,0],[3012,0,2061,0],[3013,0,2062,0],[3014,0,2063,0],[3015,0,2064,0],[3016,0,2065,0],[3017,0,2066,0],[3018,0,2067,0],[3019,0,2068,0],[3020,0,2069,0],[3021,0,2070,0],[3022,0,2071,0],[3023,0,2072,0],[3024,0,2073,0],[3025,0,2074,0],[3026,0,2075,0],[3027,0,2076,0],[3028,0,2077,0],[3029,0,2078,0],[3030,0,2079,0],[3031,6,2058,4],[3032,4,2058,4],[3033,6,2058,4,"key"],[3033,9,2058,4],[3034,6,2058,4,"value"],[3034,11,2058,4],[3035,8,2058,4],[3035,12,2058,4,"_startAutoRefresh3"],[3035,30,2058,4],[3035,33,2058,4,"_asyncToGenerator"],[3035,50,2058,4],[3035,51,2080,4],[3035,64,2080,29],[3036,10,2081,8],[3036,14,2081,12],[3036,15,2081,13,"_removeVisibilityChangedCallback"],[3036,47,2081,45],[3036,48,2081,46],[3036,49,2081,47],[3037,10,2082,8],[3037,16,2082,14],[3037,20,2082,18],[3037,21,2082,19,"_startAutoRefresh"],[3037,38,2082,36],[3037,39,2082,37],[3037,40,2082,38],[3038,8,2083,4],[3038,9,2083,5],[3039,8,2083,5],[3039,17,2080,10,"startAutoRefresh"],[3039,33,2080,26,"startAutoRefresh"],[3039,34,2080,26],[3040,10,2080,26],[3040,17,2080,26,"_startAutoRefresh3"],[3040,35,2080,26],[3040,36,2080,26,"apply"],[3040,41,2080,26],[3040,48,2080,26,"arguments"],[3040,57,2080,26],[3041,8,2080,26],[3042,8,2080,26],[3042,15,2080,10,"startAutoRefresh"],[3042,31,2080,26],[3043,6,2080,26],[3044,6,2084,4],[3045,0,2085,0],[3046,0,2086,0],[3047,0,2087,0],[3048,0,2088,0],[3049,0,2089,0],[3050,0,2090,0],[3051,0,2091,0],[3052,6,2084,4],[3053,4,2084,4],[3054,6,2084,4,"key"],[3054,9,2084,4],[3055,6,2084,4,"value"],[3055,11,2084,4],[3056,8,2084,4],[3056,12,2084,4,"_stopAutoRefresh3"],[3056,29,2084,4],[3056,32,2084,4,"_asyncToGenerator"],[3056,49,2084,4],[3056,50,2092,4],[3056,63,2092,28],[3057,10,2093,8],[3057,14,2093,12],[3057,15,2093,13,"_removeVisibilityChangedCallback"],[3057,47,2093,45],[3057,48,2093,46],[3057,49,2093,47],[3058,10,2094,8],[3058,16,2094,14],[3058,20,2094,18],[3058,21,2094,19,"_stopAutoRefresh"],[3058,37,2094,35],[3058,38,2094,36],[3058,39,2094,37],[3059,8,2095,4],[3059,9,2095,5],[3060,8,2095,5],[3060,17,2092,10,"stopAutoRefresh"],[3060,32,2092,25,"stopAutoRefresh"],[3060,33,2092,25],[3061,10,2092,25],[3061,17,2092,25,"_stopAutoRefresh3"],[3061,34,2092,25],[3061,35,2092,25,"apply"],[3061,40,2092,25],[3061,47,2092,25,"arguments"],[3061,56,2092,25],[3062,8,2092,25],[3063,8,2092,25],[3063,15,2092,10,"stopAutoRefresh"],[3063,30,2092,25],[3064,6,2092,25],[3065,6,2096,4],[3066,0,2097,0],[3067,0,2098,0],[3068,6,2096,4],[3069,4,2096,4],[3070,6,2096,4,"key"],[3070,9,2096,4],[3071,6,2096,4,"value"],[3071,11,2096,4],[3072,8,2096,4],[3072,12,2096,4,"_autoRefreshTokenTick2"],[3072,34,2096,4],[3072,37,2096,4,"_asyncToGenerator"],[3072,54,2096,4],[3072,55,2099,4],[3072,68,2099,34],[3073,10,2099,34],[3073,14,2099,34,"_this23"],[3073,21,2099,34],[3074,10,2100,8],[3074,14,2100,12],[3074,15,2100,13,"_debug"],[3074,21,2100,19],[3074,22,2100,20],[3074,48,2100,46],[3074,50,2100,48],[3074,57,2100,55],[3074,58,2100,56],[3075,10,2101,8],[3075,14,2101,12],[3076,12,2102,12],[3076,18,2102,18],[3076,22,2102,22],[3076,23,2102,23,"_acquireLock"],[3076,35,2102,35],[3076,36,2102,36],[3076,37,2102,37],[3076,52,2102,37,"_asyncToGenerator"],[3076,69,2102,37],[3076,70,2102,39],[3076,83,2102,51],[3077,14,2103,16],[3077,18,2103,20],[3078,16,2104,20],[3078,20,2104,26,"now"],[3078,23,2104,29],[3078,26,2104,32,"Date"],[3078,30,2104,36],[3078,31,2104,37,"now"],[3078,34,2104,40],[3078,35,2104,41],[3078,36,2104,42],[3079,16,2105,20],[3079,20,2105,24],[3080,18,2106,24],[3080,31,2106,37,"_this23"],[3080,38,2106,41],[3080,39,2106,42,"_useSession"],[3080,50,2106,53],[3081,20,2106,53],[3081,24,2106,53,"_ref33"],[3081,30,2106,53],[3081,33,2106,53,"_asyncToGenerator"],[3081,50,2106,53],[3081,51,2106,54],[3081,62,2106,61,"result"],[3081,68,2106,67],[3081,70,2106,72],[3082,22,2107,28],[3082,26,2107,44,"session"],[3082,33,2107,51],[3082,36,2107,59,"result"],[3082,42,2107,65],[3082,43,2107,36,"data"],[3082,47,2107,40],[3082,48,2107,44,"session"],[3082,55,2107,51],[3083,22,2108,28],[3083,26,2108,32],[3083,27,2108,33,"session"],[3083,34,2108,40],[3083,38,2108,44],[3083,39,2108,45,"session"],[3083,46,2108,52],[3083,47,2108,53,"refresh_token"],[3083,60,2108,66],[3083,64,2108,70],[3083,65,2108,71,"session"],[3083,72,2108,78],[3083,73,2108,79,"expires_at"],[3083,83,2108,89],[3083,85,2108,91],[3084,24,2109,32,"_this23"],[3084,31,2109,36],[3084,32,2109,37,"_debug"],[3084,38,2109,43],[3084,39,2109,44],[3084,65,2109,70],[3084,67,2109,72],[3084,79,2109,84],[3084,80,2109,85],[3085,24,2110,32],[3086,22,2111,28],[3087,22,2112,28],[3088,22,2113,28],[3088,26,2113,34,"expiresInTicks"],[3088,40,2113,48],[3088,43,2113,51,"Math"],[3088,47,2113,55],[3088,48,2113,56,"floor"],[3088,53,2113,61],[3088,54,2113,62],[3088,55,2113,63,"session"],[3088,62,2113,70],[3088,63,2113,71,"expires_at"],[3088,73,2113,81],[3088,76,2113,84],[3088,80,2113,88],[3088,83,2113,91,"now"],[3088,86,2113,94],[3088,90,2113,98,"constants_1"],[3088,101,2113,109],[3088,102,2113,110,"AUTO_REFRESH_TICK_DURATION_MS"],[3088,131,2113,139],[3088,132,2113,140],[3089,22,2114,28,"_this23"],[3089,29,2114,32],[3089,30,2114,33,"_debug"],[3089,36,2114,39],[3089,37,2114,40],[3089,63,2114,66],[3089,65,2114,68],[3089,92,2114,95,"expiresInTicks"],[3089,106,2114,109],[3089,130,2114,133,"constants_1"],[3089,141,2114,144],[3089,142,2114,145,"AUTO_REFRESH_TICK_DURATION_MS"],[3089,171,2114,174],[3089,199,2114,202,"constants_1"],[3089,210,2114,213],[3089,211,2114,214,"AUTO_REFRESH_TICK_THRESHOLD"],[3089,238,2114,241],[3089,246,2114,249],[3089,247,2114,250],[3090,22,2115,28],[3090,26,2115,32,"expiresInTicks"],[3090,40,2115,46],[3090,44,2115,50,"constants_1"],[3090,55,2115,61],[3090,56,2115,62,"AUTO_REFRESH_TICK_THRESHOLD"],[3090,83,2115,89],[3090,85,2115,91],[3091,24,2116,32],[3091,30,2116,38,"_this23"],[3091,37,2116,42],[3091,38,2116,43,"_callRefreshToken"],[3091,55,2116,60],[3091,56,2116,61,"session"],[3091,63,2116,68],[3091,64,2116,69,"refresh_token"],[3091,77,2116,82],[3091,78,2116,83],[3092,22,2117,28],[3093,20,2118,24],[3093,21,2118,25],[3094,20,2118,25],[3094,37,2118,25,"_x56"],[3094,41,2118,25],[3095,22,2118,25],[3095,29,2118,25,"_ref33"],[3095,35,2118,25],[3095,36,2118,25,"apply"],[3095,41,2118,25],[3095,48,2118,25,"arguments"],[3095,57,2118,25],[3096,20,2118,25],[3097,18,2118,25],[3097,22,2118,26],[3098,16,2119,20],[3098,17,2119,21],[3098,18,2120,20],[3098,25,2120,27,"e"],[3098,26,2120,28],[3098,28,2120,30],[3099,18,2121,24,"console"],[3099,25,2121,31],[3099,26,2121,32,"error"],[3099,31,2121,37],[3099,32,2121,38],[3099,104,2121,110],[3099,106,2121,112,"e"],[3099,107,2121,113],[3099,108,2121,114],[3100,16,2122,20],[3101,14,2123,16],[3101,15,2123,17],[3101,24,2124,24],[3102,16,2125,20,"_this23"],[3102,23,2125,24],[3102,24,2125,25,"_debug"],[3102,30,2125,31],[3102,31,2125,32],[3102,57,2125,58],[3102,59,2125,60],[3102,64,2125,65],[3102,65,2125,66],[3103,14,2126,16],[3104,12,2127,12],[3104,13,2127,13],[3104,15,2127,14],[3105,10,2128,8],[3105,11,2128,9],[3105,12,2129,8],[3105,19,2129,15,"e"],[3105,20,2129,16],[3105,22,2129,18],[3106,12,2130,12],[3106,16,2130,16,"e"],[3106,17,2130,17],[3106,18,2130,18,"isAcquireTimeout"],[3106,34,2130,34],[3106,38,2130,38,"e"],[3106,39,2130,39],[3106,51,2130,51,"locks_1"],[3106,58,2130,58],[3106,59,2130,59,"LockAcquireTimeoutError"],[3106,82,2130,82],[3106,84,2130,84],[3107,14,2131,16],[3107,18,2131,20],[3107,19,2131,21,"_debug"],[3107,25,2131,27],[3107,26,2131,28],[3107,70,2131,72],[3107,71,2131,73],[3108,12,2132,12],[3108,13,2132,13],[3108,19,2133,17],[3109,14,2134,16],[3109,20,2134,22,"e"],[3109,21,2134,23],[3110,12,2135,12],[3111,10,2136,8],[3112,8,2137,4],[3112,9,2137,5],[3113,8,2137,5],[3113,17,2099,10,"_autoRefreshTokenTick"],[3113,38,2099,31,"_autoRefreshTokenTick"],[3113,39,2099,31],[3114,10,2099,31],[3114,17,2099,31,"_autoRefreshTokenTick2"],[3114,39,2099,31],[3114,40,2099,31,"apply"],[3114,45,2099,31],[3114,52,2099,31,"arguments"],[3114,61,2099,31],[3115,8,2099,31],[3116,8,2099,31],[3116,15,2099,10,"_autoRefreshTokenTick"],[3116,36,2099,31],[3117,6,2099,31],[3118,6,2138,4],[3119,0,2139,0],[3120,0,2140,0],[3121,0,2141,0],[3122,0,2142,0],[3123,6,2138,4],[3124,4,2138,4],[3125,6,2138,4,"key"],[3125,9,2138,4],[3126,6,2138,4,"value"],[3126,11,2138,4],[3127,8,2138,4],[3127,12,2138,4,"_handleVisibilityChange2"],[3127,36,2138,4],[3127,39,2138,4,"_asyncToGenerator"],[3127,56,2138,4],[3127,57,2143,4],[3127,70,2143,36],[3128,10,2143,36],[3128,14,2143,36,"_this24"],[3128,21,2143,36],[3129,10,2144,8],[3129,14,2144,12],[3129,15,2144,13,"_debug"],[3129,21,2144,19],[3129,22,2144,20],[3129,50,2144,48],[3129,51,2144,49],[3130,10,2145,8],[3130,14,2145,12],[3130,15,2145,13],[3130,16,2145,14],[3130,17,2145,15],[3130,19,2145,17,"helpers_1"],[3130,28,2145,26],[3130,29,2145,27,"isBrowser"],[3130,38,2145,36],[3130,40,2145,38],[3130,41,2145,39],[3130,45,2145,43],[3130,47,2145,45,"window"],[3130,53,2145,51],[3130,58,2145,56],[3130,62,2145,60],[3130,66,2145,64,"window"],[3130,72,2145,70],[3130,77,2145,75],[3130,82,2145,80],[3130,83,2145,81],[3130,86,2145,84],[3130,91,2145,89],[3130,92,2145,90],[3130,95,2145,93,"window"],[3130,101,2145,99],[3130,102,2145,100,"addEventListener"],[3130,118,2145,116],[3130,119,2145,117],[3130,121,2145,119],[3131,12,2146,12],[3131,16,2146,16],[3131,20,2146,20],[3131,21,2146,21,"autoRefreshToken"],[3131,37,2146,37],[3131,39,2146,39],[3132,14,2147,16],[3133,14,2148,16],[3133,18,2148,20],[3133,19,2148,21,"startAutoRefresh"],[3133,35,2148,37],[3133,36,2148,38],[3133,37,2148,39],[3134,12,2149,12],[3135,12,2150,12],[3135,19,2150,19],[3135,24,2150,24],[3136,10,2151,8],[3137,10,2152,8],[3137,14,2152,12],[3138,12,2153,12],[3138,16,2153,16],[3138,17,2153,17,"visibilityChangedCallback"],[3138,42,2153,42],[3138,58,2153,42,"_asyncToGenerator"],[3138,75,2153,42],[3138,76,2153,45],[3139,14,2153,45],[3139,27,2153,63,"_this24"],[3139,34,2153,67],[3139,35,2153,68,"_onVisibilityChanged"],[3139,55,2153,88],[3139,56,2153,89],[3139,61,2153,94],[3139,62,2153,95],[3140,12,2153,95],[3141,12,2154,12,"window"],[3141,18,2154,18],[3141,23,2154,23],[3141,27,2154,27],[3141,31,2154,31,"window"],[3141,37,2154,37],[3141,42,2154,42],[3141,47,2154,47],[3141,48,2154,48],[3141,51,2154,51],[3141,56,2154,56],[3141,57,2154,57],[3141,60,2154,60,"window"],[3141,66,2154,66],[3141,67,2154,67,"addEventListener"],[3141,83,2154,83],[3141,84,2154,84],[3141,102,2154,102],[3141,104,2154,104],[3141,108,2154,108],[3141,109,2154,109,"visibilityChangedCallback"],[3141,134,2154,134],[3141,135,2154,135],[3142,12,2155,12],[3143,12,2156,12],[3144,12,2157,12],[3144,18,2157,18],[3144,22,2157,22],[3144,23,2157,23,"_onVisibilityChanged"],[3144,43,2157,43],[3144,44,2157,44],[3144,48,2157,48],[3144,49,2157,49],[3144,50,2157,50],[3144,51,2157,51],[3145,10,2158,8],[3145,11,2158,9],[3145,12,2159,8],[3145,19,2159,15,"error"],[3145,24,2159,20],[3145,26,2159,22],[3146,12,2160,12,"console"],[3146,19,2160,19],[3146,20,2160,20,"error"],[3146,25,2160,25],[3146,26,2160,26],[3146,51,2160,51],[3146,53,2160,53,"error"],[3146,58,2160,58],[3146,59,2160,59],[3147,10,2161,8],[3148,8,2162,4],[3148,9,2162,5],[3149,8,2162,5],[3149,17,2143,10,"_handleVisibilityChange"],[3149,40,2143,33,"_handleVisibilityChange"],[3149,41,2143,33],[3150,10,2143,33],[3150,17,2143,33,"_handleVisibilityChange2"],[3150,41,2143,33],[3150,42,2143,33,"apply"],[3150,47,2143,33],[3150,54,2143,33,"arguments"],[3150,63,2143,33],[3151,8,2143,33],[3152,8,2143,33],[3152,15,2143,10,"_handleVisibilityChange"],[3152,38,2143,33],[3153,6,2143,33],[3154,6,2163,4],[3155,0,2164,0],[3156,0,2165,0],[3157,6,2163,4],[3158,4,2163,4],[3159,6,2163,4,"key"],[3159,9,2163,4],[3160,6,2163,4,"value"],[3160,11,2163,4],[3161,8,2163,4],[3161,12,2163,4,"_onVisibilityChanged2"],[3161,33,2163,4],[3161,36,2163,4,"_asyncToGenerator"],[3161,53,2163,4],[3161,54,2166,4],[3161,65,2166,31,"calledFromInitialize"],[3161,85,2166,51],[3161,87,2166,53],[3162,10,2166,53],[3162,14,2166,53,"_this25"],[3162,21,2166,53],[3163,10,2167,8],[3163,14,2167,14,"methodName"],[3163,24,2167,24],[3163,27,2167,27],[3163,52,2167,52,"calledFromInitialize"],[3163,72,2167,72],[3163,75,2167,75],[3164,10,2168,8],[3164,14,2168,12],[3164,15,2168,13,"_debug"],[3164,21,2168,19],[3164,22,2168,20,"methodName"],[3164,32,2168,30],[3164,34,2168,32],[3164,51,2168,49],[3164,53,2168,51,"document"],[3164,61,2168,59],[3164,62,2168,60,"visibilityState"],[3164,77,2168,75],[3164,78,2168,76],[3165,10,2169,8],[3165,14,2169,12,"document"],[3165,22,2169,20],[3165,23,2169,21,"visibilityState"],[3165,38,2169,36],[3165,43,2169,41],[3165,52,2169,50],[3165,54,2169,52],[3166,12,2170,12],[3166,16,2170,16],[3166,20,2170,20],[3166,21,2170,21,"autoRefreshToken"],[3166,37,2170,37],[3166,39,2170,39],[3167,14,2171,16],[3168,14,2172,16],[3169,14,2173,16],[3169,18,2173,20],[3169,19,2173,21,"_startAutoRefresh"],[3169,36,2173,38],[3169,37,2173,39],[3169,38,2173,40],[3170,12,2174,12],[3171,12,2175,12],[3171,16,2175,16],[3171,17,2175,17,"calledFromInitialize"],[3171,37,2175,37],[3171,39,2175,39],[3172,14,2176,16],[3173,14,2177,16],[3174,14,2178,16],[3175,14,2179,16],[3176,14,2180,16],[3176,20,2180,22],[3176,24,2180,26],[3176,25,2180,27,"initializePromise"],[3176,42,2180,44],[3177,14,2181,16],[3177,20,2181,22],[3177,24,2181,26],[3177,25,2181,27,"_acquireLock"],[3177,37,2181,39],[3177,38,2181,40],[3177,39,2181,41],[3177,40,2181,42],[3177,55,2181,42,"_asyncToGenerator"],[3177,72,2181,42],[3177,73,2181,44],[3177,86,2181,56],[3178,16,2182,20],[3178,20,2182,24,"document"],[3178,28,2182,32],[3178,29,2182,33,"visibilityState"],[3178,44,2182,48],[3178,49,2182,53],[3178,58,2182,62],[3178,60,2182,64],[3179,18,2183,24,"_this25"],[3179,25,2183,28],[3179,26,2183,29,"_debug"],[3179,32,2183,35],[3179,33,2183,36,"methodName"],[3179,43,2183,46],[3179,45,2183,48],[3179,151,2183,154],[3179,152,2183,155],[3180,18,2184,24],[3181,18,2185,24],[3182,16,2186,20],[3183,16,2187,20],[3184,16,2188,20],[3184,22,2188,26,"_this25"],[3184,29,2188,30],[3184,30,2188,31,"_recoverAndRefresh"],[3184,48,2188,49],[3184,49,2188,50],[3184,50,2188,51],[3185,14,2189,16],[3185,15,2189,17],[3185,17,2189,18],[3186,12,2190,12],[3187,10,2191,8],[3187,11,2191,9],[3187,17,2192,13],[3187,21,2192,17,"document"],[3187,29,2192,25],[3187,30,2192,26,"visibilityState"],[3187,45,2192,41],[3187,50,2192,46],[3187,58,2192,54],[3187,60,2192,56],[3188,12,2193,12],[3188,16,2193,16],[3188,20,2193,20],[3188,21,2193,21,"autoRefreshToken"],[3188,37,2193,37],[3188,39,2193,39],[3189,14,2194,16],[3189,18,2194,20],[3189,19,2194,21,"_stopAutoRefresh"],[3189,35,2194,37],[3189,36,2194,38],[3189,37,2194,39],[3190,12,2195,12],[3191,10,2196,8],[3192,8,2197,4],[3192,9,2197,5],[3193,8,2197,5],[3193,17,2166,10,"_onVisibilityChanged"],[3193,37,2166,30,"_onVisibilityChanged"],[3193,38,2166,30,"_x57"],[3193,42,2166,30],[3194,10,2166,30],[3194,17,2166,30,"_onVisibilityChanged2"],[3194,38,2166,30],[3194,39,2166,30,"apply"],[3194,44,2166,30],[3194,51,2166,30,"arguments"],[3194,60,2166,30],[3195,8,2166,30],[3196,8,2166,30],[3196,15,2166,10,"_onVisibilityChanged"],[3196,35,2166,30],[3197,6,2166,30],[3198,6,2198,4],[3199,0,2199,0],[3200,0,2200,0],[3201,0,2201,0],[3202,0,2202,0],[3203,0,2203,0],[3204,6,2198,4],[3205,4,2198,4],[3206,6,2198,4,"key"],[3206,9,2198,4],[3207,6,2198,4,"value"],[3207,11,2198,4],[3208,8,2198,4],[3208,12,2198,4,"_getUrlForProvider2"],[3208,31,2198,4],[3208,34,2198,4,"_asyncToGenerator"],[3208,51,2198,4],[3208,52,2204,4],[3208,63,2204,29,"url"],[3208,66,2204,32],[3208,68,2204,34,"provider"],[3208,76,2204,42],[3208,78,2204,44,"options"],[3208,85,2204,51],[3208,87,2204,53],[3209,10,2205,8],[3209,14,2205,14,"urlParams"],[3209,23,2205,23],[3209,26,2205,26],[3209,27,2205,27],[3209,39,2205,39,"encodeURIComponent"],[3209,57,2205,57],[3209,58,2205,58,"provider"],[3209,66,2205,66],[3209,67,2205,67],[3209,69,2205,69],[3209,70,2205,70],[3210,10,2206,8],[3210,14,2206,12,"options"],[3210,21,2206,19],[3210,26,2206,24],[3210,30,2206,28],[3210,34,2206,32,"options"],[3210,41,2206,39],[3210,46,2206,44],[3210,51,2206,49],[3210,52,2206,50],[3210,55,2206,53],[3210,60,2206,58],[3210,61,2206,59],[3210,64,2206,62,"options"],[3210,71,2206,69],[3210,72,2206,70,"redirectTo"],[3210,82,2206,80],[3210,84,2206,82],[3211,12,2207,12,"urlParams"],[3211,21,2207,21],[3211,22,2207,22,"push"],[3211,26,2207,26],[3211,27,2207,27],[3211,42,2207,42,"encodeURIComponent"],[3211,60,2207,60],[3211,61,2207,61,"options"],[3211,68,2207,68],[3211,69,2207,69,"redirectTo"],[3211,79,2207,79],[3211,80,2207,80],[3211,82,2207,82],[3211,83,2207,83],[3212,10,2208,8],[3213,10,2209,8],[3213,14,2209,12,"options"],[3213,21,2209,19],[3213,26,2209,24],[3213,30,2209,28],[3213,34,2209,32,"options"],[3213,41,2209,39],[3213,46,2209,44],[3213,51,2209,49],[3213,52,2209,50],[3213,55,2209,53],[3213,60,2209,58],[3213,61,2209,59],[3213,64,2209,62,"options"],[3213,71,2209,69],[3213,72,2209,70,"scopes"],[3213,78,2209,76],[3213,80,2209,78],[3214,12,2210,12,"urlParams"],[3214,21,2210,21],[3214,22,2210,22,"push"],[3214,26,2210,26],[3214,27,2210,27],[3214,37,2210,37,"encodeURIComponent"],[3214,55,2210,55],[3214,56,2210,56,"options"],[3214,63,2210,63],[3214,64,2210,64,"scopes"],[3214,70,2210,70],[3214,71,2210,71],[3214,73,2210,73],[3214,74,2210,74],[3215,10,2211,8],[3216,10,2212,8],[3216,14,2212,12],[3216,18,2212,16],[3216,19,2212,17,"flowType"],[3216,27,2212,25],[3216,32,2212,30],[3216,38,2212,36],[3216,40,2212,38],[3217,12,2213,12],[3217,16,2213,12,"_yield19"],[3217,24,2213,12],[3217,33,2213,63],[3217,34,2213,64],[3217,35,2213,65],[3217,37,2213,67,"helpers_1"],[3217,46,2213,76],[3217,47,2213,77,"getCodeChallengeAndMethod"],[3217,72,2213,102],[3217,74,2213,104],[3217,78,2213,108],[3217,79,2213,109,"storage"],[3217,86,2213,116],[3217,88,2213,118],[3217,92,2213,122],[3217,93,2213,123,"storageKey"],[3217,103,2213,133],[3217,104,2213,134],[3218,14,2213,134,"_yield20"],[3218,22,2213,134],[3218,25,2213,134,"_slicedToArray"],[3218,39,2213,134],[3218,40,2213,134,"_yield19"],[3218,48,2213,134],[3219,14,2213,19,"codeChallenge"],[3219,27,2213,32],[3219,30,2213,32,"_yield20"],[3219,38,2213,32],[3220,14,2213,34,"codeChallengeMethod"],[3220,33,2213,53],[3220,36,2213,53,"_yield20"],[3220,44,2213,53],[3221,12,2214,12],[3221,16,2214,18,"flowParams"],[3221,26,2214,28],[3221,29,2214,31],[3221,33,2214,35,"URLSearchParams"],[3221,48,2214,50],[3221,49,2214,51],[3222,14,2215,16,"code_challenge"],[3222,28,2215,30],[3222,30,2215,32],[3222,33,2215,35,"encodeURIComponent"],[3222,51,2215,53],[3222,52,2215,54,"codeChallenge"],[3222,65,2215,67],[3222,66,2215,68],[3222,68,2215,70],[3223,14,2216,16,"code_challenge_method"],[3223,35,2216,37],[3223,37,2216,39],[3223,40,2216,42,"encodeURIComponent"],[3223,58,2216,60],[3223,59,2216,61,"codeChallengeMethod"],[3223,78,2216,80],[3223,79,2216,81],[3224,12,2217,12],[3224,13,2217,13],[3224,14,2217,14],[3225,12,2218,12,"urlParams"],[3225,21,2218,21],[3225,22,2218,22,"push"],[3225,26,2218,26],[3225,27,2218,27,"flowParams"],[3225,37,2218,37],[3225,38,2218,38,"toString"],[3225,46,2218,46],[3225,47,2218,47],[3225,48,2218,48],[3225,49,2218,49],[3226,10,2219,8],[3227,10,2220,8],[3227,14,2220,12,"options"],[3227,21,2220,19],[3227,26,2220,24],[3227,30,2220,28],[3227,34,2220,32,"options"],[3227,41,2220,39],[3227,46,2220,44],[3227,51,2220,49],[3227,52,2220,50],[3227,55,2220,53],[3227,60,2220,58],[3227,61,2220,59],[3227,64,2220,62,"options"],[3227,71,2220,69],[3227,72,2220,70,"queryParams"],[3227,83,2220,81],[3227,85,2220,83],[3228,12,2221,12],[3228,16,2221,18,"query"],[3228,21,2221,23],[3228,24,2221,26],[3228,28,2221,30,"URLSearchParams"],[3228,43,2221,45],[3228,44,2221,46,"options"],[3228,51,2221,53],[3228,52,2221,54,"queryParams"],[3228,63,2221,65],[3228,64,2221,66],[3229,12,2222,12,"urlParams"],[3229,21,2222,21],[3229,22,2222,22,"push"],[3229,26,2222,26],[3229,27,2222,27,"query"],[3229,32,2222,32],[3229,33,2222,33,"toString"],[3229,41,2222,41],[3229,42,2222,42],[3229,43,2222,43],[3229,44,2222,44],[3230,10,2223,8],[3231,10,2224,8],[3231,14,2224,12,"options"],[3231,21,2224,19],[3231,26,2224,24],[3231,30,2224,28],[3231,34,2224,32,"options"],[3231,41,2224,39],[3231,46,2224,44],[3231,51,2224,49],[3231,52,2224,50],[3231,55,2224,53],[3231,60,2224,58],[3231,61,2224,59],[3231,64,2224,62,"options"],[3231,71,2224,69],[3231,72,2224,70,"skipBrowserRedirect"],[3231,91,2224,89],[3231,93,2224,91],[3232,12,2225,12,"urlParams"],[3232,21,2225,21],[3232,22,2225,22,"push"],[3232,26,2225,26],[3232,27,2225,27],[3232,49,2225,49,"options"],[3232,56,2225,56],[3232,57,2225,57,"skipBrowserRedirect"],[3232,76,2225,76],[3232,78,2225,78],[3232,79,2225,79],[3233,10,2226,8],[3234,10,2227,8],[3234,17,2227,15],[3234,20,2227,18,"url"],[3234,23,2227,21],[3234,27,2227,25,"urlParams"],[3234,36,2227,34],[3234,37,2227,35,"join"],[3234,41,2227,39],[3234,42,2227,40],[3234,45,2227,43],[3234,46,2227,44],[3234,48,2227,46],[3235,8,2228,4],[3235,9,2228,5],[3236,8,2228,5],[3236,17,2204,10,"_getUrlForProvider"],[3236,35,2204,28,"_getUrlForProvider"],[3236,36,2204,28,"_x58"],[3236,40,2204,28],[3236,42,2204,28,"_x59"],[3236,46,2204,28],[3236,48,2204,28,"_x60"],[3236,52,2204,28],[3237,10,2204,28],[3237,17,2204,28,"_getUrlForProvider2"],[3237,36,2204,28],[3237,37,2204,28,"apply"],[3237,42,2204,28],[3237,49,2204,28,"arguments"],[3237,58,2204,28],[3238,8,2204,28],[3239,8,2204,28],[3239,15,2204,10,"_getUrlForProvider"],[3239,33,2204,28],[3240,6,2204,28],[3241,4,2204,28],[3242,6,2204,28,"key"],[3242,9,2204,28],[3243,6,2204,28,"value"],[3243,11,2204,28],[3244,8,2204,28],[3244,12,2204,28,"_unenroll2"],[3244,22,2204,28],[3244,25,2204,28,"_asyncToGenerator"],[3244,42,2204,28],[3244,43,2229,4],[3244,54,2229,20,"params"],[3244,60,2229,26],[3244,62,2229,28],[3245,10,2229,28],[3245,14,2229,28,"_this26"],[3245,21,2229,28],[3246,10,2230,8],[3246,14,2230,12],[3247,12,2231,12],[3247,25,2231,25],[3247,29,2231,29],[3247,30,2231,30,"_useSession"],[3247,41,2231,41],[3248,14,2231,41],[3248,18,2231,41,"_ref36"],[3248,24,2231,41],[3248,27,2231,41,"_asyncToGenerator"],[3248,44,2231,41],[3248,45,2231,42],[3248,56,2231,49,"result"],[3248,62,2231,55],[3248,64,2231,60],[3249,16,2232,16],[3249,20,2232,20,"_a"],[3249,22,2232,22],[3250,16,2233,16],[3250,20,2233,30,"sessionData"],[3250,31,2233,41],[3250,34,2233,67,"result"],[3250,40,2233,73],[3250,41,2233,24,"data"],[3250,45,2233,28],[3251,18,2233,50,"sessionError"],[3251,30,2233,62],[3251,33,2233,67,"result"],[3251,39,2233,73],[3251,40,2233,43,"error"],[3251,45,2233,48],[3252,16,2234,16],[3252,20,2234,20,"sessionError"],[3252,32,2234,32],[3252,34,2234,34],[3253,18,2235,20],[3253,25,2235,27],[3254,20,2235,29,"data"],[3254,24,2235,33],[3254,26,2235,35],[3254,30,2235,39],[3255,20,2235,41,"error"],[3255,25,2235,46],[3255,27,2235,48,"sessionError"],[3256,18,2235,61],[3256,19,2235,62],[3257,16,2236,16],[3258,16,2237,16],[3258,29,2237,29],[3258,30,2237,30],[3258,31,2237,31],[3258,33,2237,33,"fetch_1"],[3258,40,2237,40],[3258,41,2237,41,"_request"],[3258,49,2237,49],[3258,51,2237,51,"_this26"],[3258,58,2237,55],[3258,59,2237,56,"fetch"],[3258,64,2237,61],[3258,66,2237,63],[3258,74,2237,71],[3258,76,2237,73],[3258,79,2237,76,"_this26"],[3258,86,2237,80],[3258,87,2237,81,"url"],[3258,90,2237,84],[3258,102,2237,96,"params"],[3258,108,2237,102],[3258,109,2237,103,"factorId"],[3258,117,2237,111],[3258,119,2237,113],[3258,121,2237,115],[3259,18,2238,20,"headers"],[3259,25,2238,27],[3259,27,2238,29,"_this26"],[3259,34,2238,33],[3259,35,2238,34,"headers"],[3259,42,2238,41],[3260,18,2239,20,"jwt"],[3260,21,2239,23],[3260,23,2239,25],[3260,24,2239,26,"_a"],[3260,26,2239,28],[3260,29,2239,31,"sessionData"],[3260,40,2239,42],[3260,45,2239,47],[3260,49,2239,51],[3260,53,2239,55,"sessionData"],[3260,64,2239,66],[3260,69,2239,71],[3260,74,2239,76],[3260,75,2239,77],[3260,78,2239,80],[3260,83,2239,85],[3260,84,2239,86],[3260,87,2239,89,"sessionData"],[3260,98,2239,100],[3260,99,2239,101,"session"],[3260,106,2239,108],[3260,112,2239,114],[3260,116,2239,118],[3260,120,2239,122,"_a"],[3260,122,2239,124],[3260,127,2239,129],[3260,132,2239,134],[3260,133,2239,135],[3260,136,2239,138],[3260,141,2239,143],[3260,142,2239,144],[3260,145,2239,147,"_a"],[3260,147,2239,149],[3260,148,2239,150,"access_token"],[3261,16,2240,16],[3261,17,2240,17],[3261,18,2240,18],[3262,14,2241,12],[3262,15,2241,13],[3263,14,2241,13],[3263,31,2241,13,"_x62"],[3263,35,2241,13],[3264,16,2241,13],[3264,23,2241,13,"_ref36"],[3264,29,2241,13],[3264,30,2241,13,"apply"],[3264,35,2241,13],[3264,42,2241,13,"arguments"],[3264,51,2241,13],[3265,14,2241,13],[3266,12,2241,13],[3266,16,2241,14],[3267,10,2242,8],[3267,11,2242,9],[3267,12,2243,8],[3267,19,2243,15,"error"],[3267,24,2243,20],[3267,26,2243,22],[3268,12,2244,12],[3268,16,2244,16],[3268,17,2244,17],[3268,18,2244,18],[3268,20,2244,20,"errors_1"],[3268,28,2244,28],[3268,29,2244,29,"isAuthError"],[3268,40,2244,40],[3268,42,2244,42,"error"],[3268,47,2244,47],[3268,48,2244,48],[3268,50,2244,50],[3269,14,2245,16],[3269,21,2245,23],[3270,16,2245,25,"data"],[3270,20,2245,29],[3270,22,2245,31],[3270,26,2245,35],[3271,16,2245,37,"error"],[3272,14,2245,43],[3272,15,2245,44],[3273,12,2246,12],[3274,12,2247,12],[3274,18,2247,18,"error"],[3274,23,2247,23],[3275,10,2248,8],[3276,8,2249,4],[3276,9,2249,5],[3277,8,2249,5],[3277,17,2229,10,"_unenroll"],[3277,26,2229,19,"_unenroll"],[3277,27,2229,19,"_x61"],[3277,31,2229,19],[3278,10,2229,19],[3278,17,2229,19,"_unenroll2"],[3278,27,2229,19],[3278,28,2229,19,"apply"],[3278,33,2229,19],[3278,40,2229,19,"arguments"],[3278,49,2229,19],[3279,8,2229,19],[3280,8,2229,19],[3280,15,2229,10,"_unenroll"],[3280,24,2229,19],[3281,6,2229,19],[3282,4,2229,19],[3283,6,2229,19,"key"],[3283,9,2229,19],[3284,6,2229,19,"value"],[3284,11,2229,19],[3285,8,2229,19],[3285,12,2229,19,"_enroll2"],[3285,20,2229,19],[3285,23,2229,19,"_asyncToGenerator"],[3285,40,2229,19],[3285,41,2250,4],[3285,52,2250,18,"params"],[3285,58,2250,24],[3285,60,2250,26],[3286,10,2250,26],[3286,14,2250,26,"_this27"],[3286,21,2250,26],[3287,10,2251,8],[3287,14,2251,12],[3288,12,2252,12],[3288,25,2252,25],[3288,29,2252,29],[3288,30,2252,30,"_useSession"],[3288,41,2252,41],[3289,14,2252,41],[3289,18,2252,41,"_ref37"],[3289,24,2252,41],[3289,27,2252,41,"_asyncToGenerator"],[3289,44,2252,41],[3289,45,2252,42],[3289,56,2252,49,"result"],[3289,62,2252,55],[3289,64,2252,60],[3290,16,2253,16],[3290,20,2253,20,"_a"],[3290,22,2253,22],[3290,24,2253,24,"_b"],[3290,26,2253,26],[3291,16,2254,16],[3291,20,2254,30,"sessionData"],[3291,31,2254,41],[3291,34,2254,67,"result"],[3291,40,2254,73],[3291,41,2254,24,"data"],[3291,45,2254,28],[3292,18,2254,50,"sessionError"],[3292,30,2254,62],[3292,33,2254,67,"result"],[3292,39,2254,73],[3292,40,2254,43,"error"],[3292,45,2254,48],[3293,16,2255,16],[3293,20,2255,20,"sessionError"],[3293,32,2255,32],[3293,34,2255,34],[3294,18,2256,20],[3294,25,2256,27],[3295,20,2256,29,"data"],[3295,24,2256,33],[3295,26,2256,35],[3295,30,2256,39],[3296,20,2256,41,"error"],[3296,25,2256,46],[3296,27,2256,48,"sessionError"],[3297,18,2256,61],[3297,19,2256,62],[3298,16,2257,16],[3299,16,2258,16],[3299,20,2258,22,"body"],[3299,24,2258,26],[3299,27,2258,29,"Object"],[3299,33,2258,35],[3299,34,2258,36,"assign"],[3299,40,2258,42],[3299,41,2258,43],[3300,18,2258,45,"friendly_name"],[3300,31,2258,58],[3300,33,2258,60,"params"],[3300,39,2258,66],[3300,40,2258,67,"friendlyName"],[3300,52,2258,79],[3301,18,2258,81,"factor_type"],[3301,29,2258,92],[3301,31,2258,94,"params"],[3301,37,2258,100],[3301,38,2258,101,"factorType"],[3302,16,2258,112],[3302,17,2258,113],[3302,19,2258,116,"params"],[3302,25,2258,122],[3302,26,2258,123,"factorType"],[3302,36,2258,133],[3302,41,2258,138],[3302,48,2258,145],[3302,51,2259,22],[3303,18,2259,24,"phone"],[3303,23,2259,29],[3303,25,2259,31,"params"],[3303,31,2259,37],[3303,32,2259,38,"phone"],[3304,16,2259,44],[3304,17,2259,45],[3304,20,2260,22,"params"],[3304,26,2260,28],[3304,27,2260,29,"factorType"],[3304,37,2260,39],[3304,42,2260,44],[3304,48,2260,50],[3304,51,2261,26],[3305,18,2261,28,"issuer"],[3305,24,2261,34],[3305,26,2261,36,"params"],[3305,32,2261,42],[3305,33,2261,43,"issuer"],[3306,16,2261,50],[3306,17,2261,51],[3306,20,2262,26],[3306,21,2262,27],[3306,22,2262,29],[3306,23,2262,30],[3307,16,2263,16],[3307,20,2263,16,"_yield21"],[3307,28,2263,16],[3307,37,2263,47],[3307,38,2263,48],[3307,39,2263,49],[3307,41,2263,51,"fetch_1"],[3307,48,2263,58],[3307,49,2263,59,"_request"],[3307,57,2263,67],[3307,59,2263,69,"_this27"],[3307,66,2263,73],[3307,67,2263,74,"fetch"],[3307,72,2263,79],[3307,74,2263,81],[3307,80,2263,87],[3307,82,2263,89],[3307,85,2263,92,"_this27"],[3307,92,2263,96],[3307,93,2263,97,"url"],[3307,96,2263,100],[3307,106,2263,110],[3307,108,2263,112],[3308,20,2264,20,"body"],[3308,24,2264,24],[3309,20,2265,20,"headers"],[3309,27,2265,27],[3309,29,2265,29,"_this27"],[3309,36,2265,33],[3309,37,2265,34,"headers"],[3309,44,2265,41],[3310,20,2266,20,"jwt"],[3310,23,2266,23],[3310,25,2266,25],[3310,26,2266,26,"_a"],[3310,28,2266,28],[3310,31,2266,31,"sessionData"],[3310,42,2266,42],[3310,47,2266,47],[3310,51,2266,51],[3310,55,2266,55,"sessionData"],[3310,66,2266,66],[3310,71,2266,71],[3310,76,2266,76],[3310,77,2266,77],[3310,80,2266,80],[3310,85,2266,85],[3310,86,2266,86],[3310,89,2266,89,"sessionData"],[3310,100,2266,100],[3310,101,2266,101,"session"],[3310,108,2266,108],[3310,114,2266,114],[3310,118,2266,118],[3310,122,2266,122,"_a"],[3310,124,2266,124],[3310,129,2266,129],[3310,134,2266,134],[3310,135,2266,135],[3310,138,2266,138],[3310,143,2266,143],[3310,144,2266,144],[3310,147,2266,147,"_a"],[3310,149,2266,149],[3310,150,2266,150,"access_token"],[3311,18,2267,16],[3311,19,2267,17],[3311,20,2267,18],[3312,18,2263,24,"data"],[3312,22,2263,28],[3312,25,2263,28,"_yield21"],[3312,33,2263,28],[3312,34,2263,24,"data"],[3312,38,2263,28],[3313,18,2263,30,"error"],[3313,23,2263,35],[3313,26,2263,35,"_yield21"],[3313,34,2263,35],[3313,35,2263,30,"error"],[3313,40,2263,35],[3314,16,2268,16],[3314,20,2268,20,"error"],[3314,25,2268,25],[3314,27,2268,27],[3315,18,2269,20],[3315,25,2269,27],[3316,20,2269,29,"data"],[3316,24,2269,33],[3316,26,2269,35],[3316,30,2269,39],[3317,20,2269,41,"error"],[3318,18,2269,47],[3318,19,2269,48],[3319,16,2270,16],[3320,16,2271,16],[3320,20,2271,20,"params"],[3320,26,2271,26],[3320,27,2271,27,"factorType"],[3320,37,2271,37],[3320,42,2271,42],[3320,48,2271,48],[3320,52,2271,52,"data"],[3320,56,2271,56],[3320,57,2271,57,"type"],[3320,61,2271,61],[3320,66,2271,66],[3320,72,2271,72],[3320,77,2271,77],[3320,78,2271,78,"_b"],[3320,80,2271,80],[3320,83,2271,83,"data"],[3320,87,2271,87],[3320,92,2271,92],[3320,96,2271,96],[3320,100,2271,100,"data"],[3320,104,2271,104],[3320,109,2271,109],[3320,114,2271,114],[3320,115,2271,115],[3320,118,2271,118],[3320,123,2271,123],[3320,124,2271,124],[3320,127,2271,127,"data"],[3320,131,2271,131],[3320,132,2271,132,"totp"],[3320,136,2271,136],[3320,142,2271,142],[3320,146,2271,146],[3320,150,2271,150,"_b"],[3320,152,2271,152],[3320,157,2271,157],[3320,162,2271,162],[3320,163,2271,163],[3320,166,2271,166],[3320,171,2271,171],[3320,172,2271,172],[3320,175,2271,175,"_b"],[3320,177,2271,177],[3320,178,2271,178,"qr_code"],[3320,185,2271,185],[3320,186,2271,186],[3320,188,2271,188],[3321,18,2272,20,"data"],[3321,22,2272,24],[3321,23,2272,25,"totp"],[3321,27,2272,29],[3321,28,2272,30,"qr_code"],[3321,35,2272,37],[3321,38,2272,40],[3321,66,2272,68,"data"],[3321,70,2272,72],[3321,71,2272,73,"totp"],[3321,75,2272,77],[3321,76,2272,78,"qr_code"],[3321,83,2272,85],[3321,85,2272,87],[3322,16,2273,16],[3323,16,2274,16],[3323,23,2274,23],[3324,18,2274,25,"data"],[3324,22,2274,29],[3325,18,2274,31,"error"],[3325,23,2274,36],[3325,25,2274,38],[3326,16,2274,43],[3326,17,2274,44],[3327,14,2275,12],[3327,15,2275,13],[3328,14,2275,13],[3328,31,2275,13,"_x64"],[3328,35,2275,13],[3329,16,2275,13],[3329,23,2275,13,"_ref37"],[3329,29,2275,13],[3329,30,2275,13,"apply"],[3329,35,2275,13],[3329,42,2275,13,"arguments"],[3329,51,2275,13],[3330,14,2275,13],[3331,12,2275,13],[3331,16,2275,14],[3332,10,2276,8],[3332,11,2276,9],[3332,12,2277,8],[3332,19,2277,15,"error"],[3332,24,2277,20],[3332,26,2277,22],[3333,12,2278,12],[3333,16,2278,16],[3333,17,2278,17],[3333,18,2278,18],[3333,20,2278,20,"errors_1"],[3333,28,2278,28],[3333,29,2278,29,"isAuthError"],[3333,40,2278,40],[3333,42,2278,42,"error"],[3333,47,2278,47],[3333,48,2278,48],[3333,50,2278,50],[3334,14,2279,16],[3334,21,2279,23],[3335,16,2279,25,"data"],[3335,20,2279,29],[3335,22,2279,31],[3335,26,2279,35],[3336,16,2279,37,"error"],[3337,14,2279,43],[3337,15,2279,44],[3338,12,2280,12],[3339,12,2281,12],[3339,18,2281,18,"error"],[3339,23,2281,23],[3340,10,2282,8],[3341,8,2283,4],[3341,9,2283,5],[3342,8,2283,5],[3342,17,2250,10,"_enroll"],[3342,24,2250,17,"_enroll"],[3342,25,2250,17,"_x63"],[3342,29,2250,17],[3343,10,2250,17],[3343,17,2250,17,"_enroll2"],[3343,25,2250,17],[3343,26,2250,17,"apply"],[3343,31,2250,17],[3343,38,2250,17,"arguments"],[3343,47,2250,17],[3344,8,2250,17],[3345,8,2250,17],[3345,15,2250,10,"_enroll"],[3345,22,2250,17],[3346,6,2250,17],[3347,4,2250,17],[3348,6,2250,17,"key"],[3348,9,2250,17],[3349,6,2250,17,"value"],[3349,11,2250,17],[3350,8,2250,17],[3350,12,2250,17,"_verify2"],[3350,20,2250,17],[3350,23,2250,17,"_asyncToGenerator"],[3350,40,2250,17],[3350,41,2284,4],[3350,52,2284,18,"params"],[3350,58,2284,24],[3350,60,2284,26],[3351,10,2284,26],[3351,14,2284,26,"_this28"],[3351,21,2284,26],[3352,10,2285,8],[3352,17,2285,15],[3352,21,2285,19],[3352,22,2285,20,"_acquireLock"],[3352,34,2285,32],[3352,35,2285,33],[3352,36,2285,34],[3352,37,2285,35],[3352,52,2285,35,"_asyncToGenerator"],[3352,69,2285,35],[3352,70,2285,37],[3352,83,2285,49],[3353,12,2286,12],[3353,16,2286,16],[3354,14,2287,16],[3354,27,2287,29,"_this28"],[3354,34,2287,33],[3354,35,2287,34,"_useSession"],[3354,46,2287,45],[3355,16,2287,45],[3355,20,2287,45,"_ref39"],[3355,26,2287,45],[3355,29,2287,45,"_asyncToGenerator"],[3355,46,2287,45],[3355,47,2287,46],[3355,58,2287,53,"result"],[3355,64,2287,59],[3355,66,2287,64],[3356,18,2288,20],[3356,22,2288,24,"_a"],[3356,24,2288,26],[3357,18,2289,20],[3357,22,2289,34,"sessionData"],[3357,33,2289,45],[3357,36,2289,71,"result"],[3357,42,2289,77],[3357,43,2289,28,"data"],[3357,47,2289,32],[3358,20,2289,54,"sessionError"],[3358,32,2289,66],[3358,35,2289,71,"result"],[3358,41,2289,77],[3358,42,2289,47,"error"],[3358,47,2289,52],[3359,18,2290,20],[3359,22,2290,24,"sessionError"],[3359,34,2290,36],[3359,36,2290,38],[3360,20,2291,24],[3360,27,2291,31],[3361,22,2291,33,"data"],[3361,26,2291,37],[3361,28,2291,39],[3361,32,2291,43],[3362,22,2291,45,"error"],[3362,27,2291,50],[3362,29,2291,52,"sessionError"],[3363,20,2291,65],[3363,21,2291,66],[3364,18,2292,20],[3365,18,2293,20],[3365,22,2293,26,"body"],[3365,26,2293,30],[3365,29,2293,33,"Object"],[3365,35,2293,39],[3365,36,2293,40,"assign"],[3365,42,2293,46],[3365,43,2293,47],[3366,20,2293,49,"challenge_id"],[3366,32,2293,61],[3366,34,2293,63,"params"],[3366,40,2293,69],[3366,41,2293,70,"challengeId"],[3367,18,2293,82],[3367,19,2293,83],[3367,21,2293,86],[3367,31,2293,96],[3367,35,2293,100,"params"],[3367,41,2293,106],[3367,44,2294,26],[3368,20,2295,28,"webauthn"],[3368,28,2295,36],[3368,30,2295,38,"Object"],[3368,36,2295,44],[3368,37,2295,45,"assign"],[3368,43,2295,51],[3368,44,2295,52,"Object"],[3368,50,2295,58],[3368,51,2295,59,"assign"],[3368,57,2295,65],[3368,58,2295,66],[3368,59,2295,67],[3368,60,2295,68],[3368,62,2295,70,"params"],[3368,68,2295,76],[3368,69,2295,77,"webauthn"],[3368,77,2295,85],[3368,78,2295,86],[3368,80,2295,88],[3369,22,2295,90,"credential_response"],[3369,41,2295,109],[3369,43,2295,111,"params"],[3369,49,2295,117],[3369,50,2295,118,"webauthn"],[3369,58,2295,126],[3369,59,2295,127,"type"],[3369,63,2295,131],[3369,68,2295,136],[3369,76,2295,144],[3369,79,2296,38],[3369,80,2296,39],[3369,81,2296,40],[3369,83,2296,42,"webauthn_1"],[3369,93,2296,52],[3369,94,2296,53,"serializeCredentialCreationResponse"],[3369,129,2296,88],[3369,131,2296,90,"params"],[3369,137,2296,96],[3369,138,2296,97,"webauthn"],[3369,146,2296,105],[3369,147,2296,106,"credential_response"],[3369,166,2296,125],[3369,167,2296,126],[3369,170,2297,38],[3369,171,2297,39],[3369,172,2297,40],[3369,174,2297,42,"webauthn_1"],[3369,184,2297,52],[3369,185,2297,53,"serializeCredentialRequestResponse"],[3369,219,2297,87],[3369,221,2297,89,"params"],[3369,227,2297,95],[3369,228,2297,96,"webauthn"],[3369,236,2297,104],[3369,237,2297,105,"credential_response"],[3369,256,2297,124],[3370,20,2297,126],[3370,21,2297,127],[3371,18,2298,24],[3371,19,2298,25],[3371,22,2299,26],[3372,20,2299,28,"code"],[3372,24,2299,32],[3372,26,2299,34,"params"],[3372,32,2299,40],[3372,33,2299,41,"code"],[3373,18,2299,46],[3373,19,2299,48],[3373,20,2299,49],[3374,18,2300,20],[3374,22,2300,20,"_yield22"],[3374,30,2300,20],[3374,39,2300,50],[3374,40,2300,51],[3374,41,2300,52],[3374,43,2300,54,"fetch_1"],[3374,50,2300,61],[3374,51,2300,62,"_request"],[3374,59,2300,70],[3374,61,2300,72,"_this28"],[3374,68,2300,76],[3374,69,2300,77,"fetch"],[3374,74,2300,82],[3374,76,2300,84],[3374,82,2300,90],[3374,84,2300,92],[3374,87,2300,95,"_this28"],[3374,94,2300,99],[3374,95,2300,100,"url"],[3374,98,2300,103],[3374,110,2300,115,"params"],[3374,116,2300,121],[3374,117,2300,122,"factorId"],[3374,125,2300,130],[3374,134,2300,139],[3374,136,2300,141],[3375,22,2301,24,"body"],[3375,26,2301,28],[3376,22,2302,24,"headers"],[3376,29,2302,31],[3376,31,2302,33,"_this28"],[3376,38,2302,37],[3376,39,2302,38,"headers"],[3376,46,2302,45],[3377,22,2303,24,"jwt"],[3377,25,2303,27],[3377,27,2303,29],[3377,28,2303,30,"_a"],[3377,30,2303,32],[3377,33,2303,35,"sessionData"],[3377,44,2303,46],[3377,49,2303,51],[3377,53,2303,55],[3377,57,2303,59,"sessionData"],[3377,68,2303,70],[3377,73,2303,75],[3377,78,2303,80],[3377,79,2303,81],[3377,82,2303,84],[3377,87,2303,89],[3377,88,2303,90],[3377,91,2303,93,"sessionData"],[3377,102,2303,104],[3377,103,2303,105,"session"],[3377,110,2303,112],[3377,116,2303,118],[3377,120,2303,122],[3377,124,2303,126,"_a"],[3377,126,2303,128],[3377,131,2303,133],[3377,136,2303,138],[3377,137,2303,139],[3377,140,2303,142],[3377,145,2303,147],[3377,146,2303,148],[3377,149,2303,151,"_a"],[3377,151,2303,153],[3377,152,2303,154,"access_token"],[3378,20,2304,20],[3378,21,2304,21],[3378,22,2304,22],[3379,20,2300,28,"data"],[3379,24,2300,32],[3379,27,2300,32,"_yield22"],[3379,35,2300,32],[3379,36,2300,28,"data"],[3379,40,2300,32],[3380,20,2300,34,"error"],[3380,25,2300,39],[3380,28,2300,39,"_yield22"],[3380,36,2300,39],[3380,37,2300,34,"error"],[3380,42,2300,39],[3381,18,2305,20],[3381,22,2305,24,"error"],[3381,27,2305,29],[3381,29,2305,31],[3382,20,2306,24],[3382,27,2306,31],[3383,22,2306,33,"data"],[3383,26,2306,37],[3383,28,2306,39],[3383,32,2306,43],[3384,22,2306,45,"error"],[3385,20,2306,51],[3385,21,2306,52],[3386,18,2307,20],[3387,18,2308,20],[3387,24,2308,26,"_this28"],[3387,31,2308,30],[3387,32,2308,31,"_saveSession"],[3387,44,2308,43],[3387,45,2308,44,"Object"],[3387,51,2308,50],[3387,52,2308,51,"assign"],[3387,58,2308,57],[3387,59,2308,58],[3388,20,2308,60,"expires_at"],[3388,30,2308,70],[3388,32,2308,72,"Math"],[3388,36,2308,76],[3388,37,2308,77,"round"],[3388,42,2308,82],[3388,43,2308,83,"Date"],[3388,47,2308,87],[3388,48,2308,88,"now"],[3388,51,2308,91],[3388,52,2308,92],[3388,53,2308,93],[3388,56,2308,96],[3388,60,2308,100],[3388,61,2308,101],[3388,64,2308,104,"data"],[3388,68,2308,108],[3388,69,2308,109,"expires_in"],[3389,18,2308,120],[3389,19,2308,121],[3389,21,2308,123,"data"],[3389,25,2308,127],[3389,26,2308,128],[3389,27,2308,129],[3390,18,2309,20],[3390,24,2309,26,"_this28"],[3390,31,2309,30],[3390,32,2309,31,"_notifyAllSubscribers"],[3390,53,2309,52],[3390,54,2309,53],[3390,78,2309,77],[3390,80,2309,79,"data"],[3390,84,2309,83],[3390,85,2309,84],[3391,18,2310,20],[3391,25,2310,27],[3392,20,2310,29,"data"],[3392,24,2310,33],[3393,20,2310,35,"error"],[3394,18,2310,41],[3394,19,2310,42],[3395,16,2311,16],[3395,17,2311,17],[3396,16,2311,17],[3396,33,2311,17,"_x66"],[3396,37,2311,17],[3397,18,2311,17],[3397,25,2311,17,"_ref39"],[3397,31,2311,17],[3397,32,2311,17,"apply"],[3397,37,2311,17],[3397,44,2311,17,"arguments"],[3397,53,2311,17],[3398,16,2311,17],[3399,14,2311,17],[3399,18,2311,18],[3400,12,2312,12],[3400,13,2312,13],[3400,14,2313,12],[3400,21,2313,19,"error"],[3400,26,2313,24],[3400,28,2313,26],[3401,14,2314,16],[3401,18,2314,20],[3401,19,2314,21],[3401,20,2314,22],[3401,22,2314,24,"errors_1"],[3401,30,2314,32],[3401,31,2314,33,"isAuthError"],[3401,42,2314,44],[3401,44,2314,46,"error"],[3401,49,2314,51],[3401,50,2314,52],[3401,52,2314,54],[3402,16,2315,20],[3402,23,2315,27],[3403,18,2315,29,"data"],[3403,22,2315,33],[3403,24,2315,35],[3403,28,2315,39],[3404,18,2315,41,"error"],[3405,16,2315,47],[3405,17,2315,48],[3406,14,2316,16],[3407,14,2317,16],[3407,20,2317,22,"error"],[3407,25,2317,27],[3408,12,2318,12],[3409,10,2319,8],[3409,11,2319,9],[3409,13,2319,10],[3410,8,2320,4],[3410,9,2320,5],[3411,8,2320,5],[3411,17,2284,10,"_verify"],[3411,24,2284,17,"_verify"],[3411,25,2284,17,"_x65"],[3411,29,2284,17],[3412,10,2284,17],[3412,17,2284,17,"_verify2"],[3412,25,2284,17],[3412,26,2284,17,"apply"],[3412,31,2284,17],[3412,38,2284,17,"arguments"],[3412,47,2284,17],[3413,8,2284,17],[3414,8,2284,17],[3414,15,2284,10,"_verify"],[3414,22,2284,17],[3415,6,2284,17],[3416,4,2284,17],[3417,6,2284,17,"key"],[3417,9,2284,17],[3418,6,2284,17,"value"],[3418,11,2284,17],[3419,8,2284,17],[3419,12,2284,17,"_challenge2"],[3419,23,2284,17],[3419,26,2284,17,"_asyncToGenerator"],[3419,43,2284,17],[3419,44,2321,4],[3419,55,2321,21,"params"],[3419,61,2321,27],[3419,63,2321,29],[3420,10,2321,29],[3420,14,2321,29,"_this29"],[3420,21,2321,29],[3421,10,2322,8],[3421,17,2322,15],[3421,21,2322,19],[3421,22,2322,20,"_acquireLock"],[3421,34,2322,32],[3421,35,2322,33],[3421,36,2322,34],[3421,37,2322,35],[3421,52,2322,35,"_asyncToGenerator"],[3421,69,2322,35],[3421,70,2322,37],[3421,83,2322,49],[3422,12,2323,12],[3422,16,2323,16],[3423,14,2324,16],[3423,27,2324,29,"_this29"],[3423,34,2324,33],[3423,35,2324,34,"_useSession"],[3423,46,2324,45],[3424,16,2324,45],[3424,20,2324,45,"_ref41"],[3424,26,2324,45],[3424,29,2324,45,"_asyncToGenerator"],[3424,46,2324,45],[3424,47,2324,46],[3424,58,2324,53,"result"],[3424,64,2324,59],[3424,66,2324,64],[3425,18,2325,20],[3425,22,2325,24,"_a"],[3425,24,2325,26],[3426,18,2326,20],[3426,22,2326,34,"sessionData"],[3426,33,2326,45],[3426,36,2326,71,"result"],[3426,42,2326,77],[3426,43,2326,28,"data"],[3426,47,2326,32],[3427,20,2326,54,"sessionError"],[3427,32,2326,66],[3427,35,2326,71,"result"],[3427,41,2326,77],[3427,42,2326,47,"error"],[3427,47,2326,52],[3428,18,2327,20],[3428,22,2327,24,"sessionError"],[3428,34,2327,36],[3428,36,2327,38],[3429,20,2328,24],[3429,27,2328,31],[3430,22,2328,33,"data"],[3430,26,2328,37],[3430,28,2328,39],[3430,32,2328,43],[3431,22,2328,45,"error"],[3431,27,2328,50],[3431,29,2328,52,"sessionError"],[3432,20,2328,65],[3432,21,2328,66],[3433,18,2329,20],[3434,18,2330,20],[3434,22,2330,26,"response"],[3434,30,2330,34],[3434,39,2330,44],[3434,40,2330,45],[3434,41,2330,46],[3434,43,2330,48,"fetch_1"],[3434,50,2330,55],[3434,51,2330,56,"_request"],[3434,59,2330,64],[3434,61,2330,66,"_this29"],[3434,68,2330,70],[3434,69,2330,71,"fetch"],[3434,74,2330,76],[3434,76,2330,78],[3434,82,2330,84],[3434,84,2330,86],[3434,87,2330,89,"_this29"],[3434,94,2330,93],[3434,95,2330,94,"url"],[3434,98,2330,97],[3434,110,2330,109,"params"],[3434,116,2330,115],[3434,117,2330,116,"factorId"],[3434,125,2330,124],[3434,137,2330,136],[3434,139,2330,138],[3435,20,2331,24,"body"],[3435,24,2331,28],[3435,26,2331,30,"params"],[3435,32,2331,36],[3436,20,2332,24,"headers"],[3436,27,2332,31],[3436,29,2332,33,"_this29"],[3436,36,2332,37],[3436,37,2332,38,"headers"],[3436,44,2332,45],[3437,20,2333,24,"jwt"],[3437,23,2333,27],[3437,25,2333,29],[3437,26,2333,30,"_a"],[3437,28,2333,32],[3437,31,2333,35,"sessionData"],[3437,42,2333,46],[3437,47,2333,51],[3437,51,2333,55],[3437,55,2333,59,"sessionData"],[3437,66,2333,70],[3437,71,2333,75],[3437,76,2333,80],[3437,77,2333,81],[3437,80,2333,84],[3437,85,2333,89],[3437,86,2333,90],[3437,89,2333,93,"sessionData"],[3437,100,2333,104],[3437,101,2333,105,"session"],[3437,108,2333,112],[3437,114,2333,118],[3437,118,2333,122],[3437,122,2333,126,"_a"],[3437,124,2333,128],[3437,129,2333,133],[3437,134,2333,138],[3437,135,2333,139],[3437,138,2333,142],[3437,143,2333,147],[3437,144,2333,148],[3437,147,2333,151,"_a"],[3437,149,2333,153],[3437,150,2333,154,"access_token"],[3438,18,2334,20],[3438,19,2334,21],[3438,20,2334,23],[3439,18,2335,20],[3439,22,2335,24,"response"],[3439,30,2335,32],[3439,31,2335,33,"error"],[3439,36,2335,38],[3439,38,2335,40],[3440,20,2336,24],[3440,27,2336,31,"response"],[3440,35,2336,39],[3441,18,2337,20],[3442,18,2338,20],[3442,22,2338,28,"data"],[3442,26,2338,32],[3442,29,2338,37,"response"],[3442,37,2338,45],[3442,38,2338,28,"data"],[3442,42,2338,32],[3443,18,2339,20],[3443,22,2339,24,"data"],[3443,26,2339,28],[3443,27,2339,29,"type"],[3443,31,2339,33],[3443,36,2339,38],[3443,46,2339,48],[3443,48,2339,50],[3444,20,2340,24],[3444,27,2340,31],[3445,22,2340,33,"data"],[3445,26,2340,37],[3446,22,2340,39,"error"],[3446,27,2340,44],[3446,29,2340,46],[3447,20,2340,51],[3447,21,2340,52],[3448,18,2341,20],[3449,18,2342,20],[3449,26,2342,28,"data"],[3449,30,2342,32],[3449,31,2342,33,"webauthn"],[3449,39,2342,41],[3449,40,2342,42,"type"],[3449,44,2342,46],[3450,20,2343,24],[3450,25,2343,29],[3450,33,2343,37],[3451,22,2344,28],[3451,29,2344,35],[3452,24,2345,32,"data"],[3452,28,2345,36],[3452,30,2345,38,"Object"],[3452,36,2345,44],[3452,37,2345,45,"assign"],[3452,43,2345,51],[3452,44,2345,52,"Object"],[3452,50,2345,58],[3452,51,2345,59,"assign"],[3452,57,2345,65],[3452,58,2345,66],[3452,59,2345,67],[3452,60,2345,68],[3452,62,2345,70,"data"],[3452,66,2345,74],[3452,67,2345,75],[3452,69,2345,77],[3453,26,2345,79,"webauthn"],[3453,34,2345,87],[3453,36,2345,89,"Object"],[3453,42,2345,95],[3453,43,2345,96,"assign"],[3453,49,2345,102],[3453,50,2345,103,"Object"],[3453,56,2345,109],[3453,57,2345,110,"assign"],[3453,63,2345,116],[3453,64,2345,117],[3453,65,2345,118],[3453,66,2345,119],[3453,68,2345,121,"data"],[3453,72,2345,125],[3453,73,2345,126,"webauthn"],[3453,81,2345,134],[3453,82,2345,135],[3453,84,2345,137],[3454,28,2345,139,"credential_options"],[3454,46,2345,157],[3454,48,2345,159,"Object"],[3454,54,2345,165],[3454,55,2345,166,"assign"],[3454,61,2345,172],[3454,62,2345,173,"Object"],[3454,68,2345,179],[3454,69,2345,180,"assign"],[3454,75,2345,186],[3454,76,2345,187],[3454,77,2345,188],[3454,78,2345,189],[3454,80,2345,191,"data"],[3454,84,2345,195],[3454,85,2345,196,"webauthn"],[3454,93,2345,204],[3454,94,2345,205,"credential_options"],[3454,112,2345,223],[3454,113,2345,224],[3454,115,2345,226],[3455,30,2345,228,"publicKey"],[3455,39,2345,237],[3455,41,2345,239],[3455,42,2345,240],[3455,43,2345,241],[3455,45,2345,243,"webauthn_1"],[3455,55,2345,253],[3455,56,2345,254,"deserializeCredentialCreationOptions"],[3455,92,2345,290],[3455,94,2345,292,"data"],[3455,98,2345,296],[3455,99,2345,297,"webauthn"],[3455,107,2345,305],[3455,108,2345,306,"credential_options"],[3455,126,2345,324],[3455,127,2345,325,"publicKey"],[3455,136,2345,334],[3456,28,2345,336],[3456,29,2345,337],[3457,26,2345,339],[3457,27,2345,340],[3458,24,2345,342],[3458,25,2345,343],[3458,26,2345,344],[3459,24,2346,32,"error"],[3459,29,2346,37],[3459,31,2346,39],[3460,22,2347,28],[3460,23,2347,29],[3461,20,2348,24],[3461,25,2348,29],[3461,34,2348,38],[3462,22,2349,28],[3462,29,2349,35],[3463,24,2350,32,"data"],[3463,28,2350,36],[3463,30,2350,38,"Object"],[3463,36,2350,44],[3463,37,2350,45,"assign"],[3463,43,2350,51],[3463,44,2350,52,"Object"],[3463,50,2350,58],[3463,51,2350,59,"assign"],[3463,57,2350,65],[3463,58,2350,66],[3463,59,2350,67],[3463,60,2350,68],[3463,62,2350,70,"data"],[3463,66,2350,74],[3463,67,2350,75],[3463,69,2350,77],[3464,26,2350,79,"webauthn"],[3464,34,2350,87],[3464,36,2350,89,"Object"],[3464,42,2350,95],[3464,43,2350,96,"assign"],[3464,49,2350,102],[3464,50,2350,103,"Object"],[3464,56,2350,109],[3464,57,2350,110,"assign"],[3464,63,2350,116],[3464,64,2350,117],[3464,65,2350,118],[3464,66,2350,119],[3464,68,2350,121,"data"],[3464,72,2350,125],[3464,73,2350,126,"webauthn"],[3464,81,2350,134],[3464,82,2350,135],[3464,84,2350,137],[3465,28,2350,139,"credential_options"],[3465,46,2350,157],[3465,48,2350,159,"Object"],[3465,54,2350,165],[3465,55,2350,166,"assign"],[3465,61,2350,172],[3465,62,2350,173,"Object"],[3465,68,2350,179],[3465,69,2350,180,"assign"],[3465,75,2350,186],[3465,76,2350,187],[3465,77,2350,188],[3465,78,2350,189],[3465,80,2350,191,"data"],[3465,84,2350,195],[3465,85,2350,196,"webauthn"],[3465,93,2350,204],[3465,94,2350,205,"credential_options"],[3465,112,2350,223],[3465,113,2350,224],[3465,115,2350,226],[3466,30,2350,228,"publicKey"],[3466,39,2350,237],[3466,41,2350,239],[3466,42,2350,240],[3466,43,2350,241],[3466,45,2350,243,"webauthn_1"],[3466,55,2350,253],[3466,56,2350,254,"deserializeCredentialRequestOptions"],[3466,91,2350,289],[3466,93,2350,291,"data"],[3466,97,2350,295],[3466,98,2350,296,"webauthn"],[3466,106,2350,304],[3466,107,2350,305,"credential_options"],[3466,125,2350,323],[3466,126,2350,324,"publicKey"],[3466,135,2350,333],[3467,28,2350,335],[3467,29,2350,336],[3468,26,2350,338],[3468,27,2350,339],[3469,24,2350,341],[3469,25,2350,342],[3469,26,2350,343],[3470,24,2351,32,"error"],[3470,29,2351,37],[3470,31,2351,39],[3471,22,2352,28],[3471,23,2352,29],[3472,18,2353,20],[3473,16,2354,16],[3473,17,2354,17],[3474,16,2354,17],[3474,33,2354,17,"_x68"],[3474,37,2354,17],[3475,18,2354,17],[3475,25,2354,17,"_ref41"],[3475,31,2354,17],[3475,32,2354,17,"apply"],[3475,37,2354,17],[3475,44,2354,17,"arguments"],[3475,53,2354,17],[3476,16,2354,17],[3477,14,2354,17],[3477,18,2354,18],[3478,12,2355,12],[3478,13,2355,13],[3478,14,2356,12],[3478,21,2356,19,"error"],[3478,26,2356,24],[3478,28,2356,26],[3479,14,2357,16],[3479,18,2357,20],[3479,19,2357,21],[3479,20,2357,22],[3479,22,2357,24,"errors_1"],[3479,30,2357,32],[3479,31,2357,33,"isAuthError"],[3479,42,2357,44],[3479,44,2357,46,"error"],[3479,49,2357,51],[3479,50,2357,52],[3479,52,2357,54],[3480,16,2358,20],[3480,23,2358,27],[3481,18,2358,29,"data"],[3481,22,2358,33],[3481,24,2358,35],[3481,28,2358,39],[3482,18,2358,41,"error"],[3483,16,2358,47],[3483,17,2358,48],[3484,14,2359,16],[3485,14,2360,16],[3485,20,2360,22,"error"],[3485,25,2360,27],[3486,12,2361,12],[3487,10,2362,8],[3487,11,2362,9],[3487,13,2362,10],[3488,8,2363,4],[3488,9,2363,5],[3489,8,2363,5],[3489,17,2321,10,"_challenge"],[3489,27,2321,20,"_challenge"],[3489,28,2321,20,"_x67"],[3489,32,2321,20],[3490,10,2321,20],[3490,17,2321,20,"_challenge2"],[3490,28,2321,20],[3490,29,2321,20,"apply"],[3490,34,2321,20],[3490,41,2321,20,"arguments"],[3490,50,2321,20],[3491,8,2321,20],[3492,8,2321,20],[3492,15,2321,10,"_challenge"],[3492,25,2321,20],[3493,6,2321,20],[3494,6,2364,4],[3495,0,2365,0],[3496,0,2366,0],[3497,4,2364,4],[3498,6,2364,4,"key"],[3498,9,2364,4],[3499,6,2364,4,"value"],[3499,11,2364,4],[3500,8,2364,4],[3500,12,2364,4,"_challengeAndVerify2"],[3500,32,2364,4],[3500,35,2364,4,"_asyncToGenerator"],[3500,52,2364,4],[3500,53,2367,4],[3500,64,2367,30,"params"],[3500,70,2367,36],[3500,72,2367,38],[3501,10,2368,8],[3502,10,2369,8],[3503,10,2370,8],[3503,14,2370,8,"_yield$this$_challeng"],[3503,35,2370,8],[3503,44,2370,69],[3503,48,2370,73],[3503,49,2370,74,"_challenge"],[3503,59,2370,84],[3503,60,2370,85],[3504,14,2371,12,"factorId"],[3504,22,2371,20],[3504,24,2371,22,"params"],[3504,30,2371,28],[3504,31,2371,29,"factorId"],[3505,12,2372,8],[3505,13,2372,9],[3505,14,2372,10],[3506,12,2370,22,"challengeData"],[3506,25,2370,35],[3506,28,2370,35,"_yield$this$_challeng"],[3506,49,2370,35],[3506,50,2370,16,"data"],[3506,54,2370,20],[3507,12,2370,44,"challengeError"],[3507,26,2370,58],[3507,29,2370,58,"_yield$this$_challeng"],[3507,50,2370,58],[3507,51,2370,37,"error"],[3507,56,2370,42],[3508,10,2373,8],[3508,14,2373,12,"challengeError"],[3508,28,2373,26],[3508,30,2373,28],[3509,12,2374,12],[3509,19,2374,19],[3510,14,2374,21,"data"],[3510,18,2374,25],[3510,20,2374,27],[3510,24,2374,31],[3511,14,2374,33,"error"],[3511,19,2374,38],[3511,21,2374,40,"challengeError"],[3512,12,2374,55],[3512,13,2374,56],[3513,10,2375,8],[3514,10,2376,8],[3514,23,2376,21],[3514,27,2376,25],[3514,28,2376,26,"_verify"],[3514,35,2376,33],[3514,36,2376,34],[3515,12,2377,12,"factorId"],[3515,20,2377,20],[3515,22,2377,22,"params"],[3515,28,2377,28],[3515,29,2377,29,"factorId"],[3515,37,2377,37],[3516,12,2378,12,"challengeId"],[3516,23,2378,23],[3516,25,2378,25,"challengeData"],[3516,38,2378,38],[3516,39,2378,39,"id"],[3516,41,2378,41],[3517,12,2379,12,"code"],[3517,16,2379,16],[3517,18,2379,18,"params"],[3517,24,2379,24],[3517,25,2379,25,"code"],[3518,10,2380,8],[3518,11,2380,9],[3518,12,2380,10],[3519,8,2381,4],[3519,9,2381,5],[3520,8,2381,5],[3520,17,2367,10,"_challengeAndVerify"],[3520,36,2367,29,"_challengeAndVerify"],[3520,37,2367,29,"_x69"],[3520,41,2367,29],[3521,10,2367,29],[3521,17,2367,29,"_challengeAndVerify2"],[3521,37,2367,29],[3521,38,2367,29,"apply"],[3521,43,2367,29],[3521,50,2367,29,"arguments"],[3521,59,2367,29],[3522,8,2367,29],[3523,8,2367,29],[3523,15,2367,10,"_challengeAndVerify"],[3523,34,2367,29],[3524,6,2367,29],[3525,6,2382,4],[3526,0,2383,0],[3527,0,2384,0],[3528,6,2382,4],[3529,4,2382,4],[3530,6,2382,4,"key"],[3530,9,2382,4],[3531,6,2382,4,"value"],[3531,11,2382,4],[3532,8,2382,4],[3532,12,2382,4,"_listFactors2"],[3532,25,2382,4],[3532,28,2382,4,"_asyncToGenerator"],[3532,45,2382,4],[3532,46,2385,4],[3532,59,2385,25],[3533,10,2386,8],[3533,14,2386,12,"_a"],[3533,16,2386,14],[3534,10,2387,8],[3535,10,2388,8],[3535,14,2388,8,"_yield$this$getUser2"],[3535,34,2388,8],[3535,43,2388,60],[3535,47,2388,64],[3535,48,2388,65,"getUser"],[3535,55,2388,72],[3535,56,2388,73],[3535,57,2388,74],[3536,12,2388,24,"user"],[3536,16,2388,28],[3536,19,2388,28,"_yield$this$getUser2"],[3536,39,2388,28],[3536,40,2388,16,"data"],[3536,44,2388,20],[3536,45,2388,24,"user"],[3536,49,2388,28],[3537,12,2388,39,"userError"],[3537,21,2388,48],[3537,24,2388,48,"_yield$this$getUser2"],[3537,44,2388,48],[3537,45,2388,32,"error"],[3537,50,2388,37],[3538,10,2389,8],[3538,14,2389,12,"userError"],[3538,23,2389,21],[3538,25,2389,23],[3539,12,2390,12],[3539,19,2390,19],[3540,14,2390,21,"data"],[3540,18,2390,25],[3540,20,2390,27],[3540,24,2390,31],[3541,14,2390,33,"error"],[3541,19,2390,38],[3541,21,2390,40,"userError"],[3542,12,2390,50],[3542,13,2390,51],[3543,10,2391,8],[3544,10,2392,8],[3544,14,2392,14,"data"],[3544,18,2392,18],[3544,21,2392,21],[3545,12,2393,12,"all"],[3545,15,2393,15],[3545,17,2393,17],[3545,19,2393,19],[3546,12,2394,12,"phone"],[3546,17,2394,17],[3546,19,2394,19],[3546,21,2394,21],[3547,12,2395,12,"totp"],[3547,16,2395,16],[3547,18,2395,18],[3547,20,2395,20],[3548,12,2396,12,"webauthn"],[3548,20,2396,20],[3548,22,2396,22],[3549,10,2397,8],[3549,11,2397,9],[3550,10,2398,8],[3551,10,2399,8],[3551,15,2399,13],[3551,19,2399,19,"factor"],[3551,25,2399,25],[3551,29,2399,29],[3551,30,2399,30,"_a"],[3551,32,2399,32],[3551,35,2399,35,"user"],[3551,39,2399,39],[3551,44,2399,44],[3551,48,2399,48],[3551,52,2399,52,"user"],[3551,56,2399,56],[3551,61,2399,61],[3551,66,2399,66],[3551,67,2399,67],[3551,70,2399,70],[3551,75,2399,75],[3551,76,2399,76],[3551,79,2399,79,"user"],[3551,83,2399,83],[3551,84,2399,84,"factors"],[3551,91,2399,91],[3551,97,2399,97],[3551,101,2399,101],[3551,105,2399,105,"_a"],[3551,107,2399,107],[3551,112,2399,112],[3551,117,2399,117],[3551,118,2399,118],[3551,121,2399,121,"_a"],[3551,123,2399,123],[3551,126,2399,126],[3551,128,2399,128],[3551,130,2399,130],[3552,12,2400,12,"data"],[3552,16,2400,16],[3552,17,2400,17,"all"],[3552,20,2400,20],[3552,21,2400,21,"push"],[3552,25,2400,25],[3552,26,2400,26,"factor"],[3552,32,2400,32],[3552,33,2400,33],[3553,12,2401,12],[3553,16,2401,16,"factor"],[3553,22,2401,22],[3553,23,2401,23,"status"],[3553,29,2401,29],[3553,34,2401,34],[3553,44,2401,44],[3553,46,2401,46],[3554,14,2402,16],[3555,14,2403,16,"data"],[3555,18,2403,20],[3555,19,2403,21,"factor"],[3555,25,2403,27],[3555,26,2403,28,"factor_type"],[3555,37,2403,39],[3555,38,2403,40],[3555,39,2403,41,"push"],[3555,43,2403,45],[3555,44,2403,46,"factor"],[3555,50,2403,52],[3555,51,2403,53],[3556,12,2404,12],[3557,10,2405,8],[3558,10,2406,8],[3558,17,2406,15],[3559,12,2407,12,"data"],[3559,16,2407,16],[3560,12,2408,12,"error"],[3560,17,2408,17],[3560,19,2408,19],[3561,10,2409,8],[3561,11,2409,9],[3562,8,2410,4],[3562,9,2410,5],[3563,8,2410,5],[3563,17,2385,10,"_listFactors"],[3563,29,2385,22,"_listFactors"],[3563,30,2385,22],[3564,10,2385,22],[3564,17,2385,22,"_listFactors2"],[3564,30,2385,22],[3564,31,2385,22,"apply"],[3564,36,2385,22],[3564,43,2385,22,"arguments"],[3564,52,2385,22],[3565,8,2385,22],[3566,8,2385,22],[3566,15,2385,10,"_listFactors"],[3566,27,2385,22],[3567,6,2385,22],[3568,6,2411,4],[3569,0,2412,0],[3570,0,2413,0],[3571,6,2411,4],[3572,4,2411,4],[3573,6,2411,4,"key"],[3573,9,2411,4],[3574,6,2411,4,"value"],[3574,11,2411,4],[3575,8,2411,4],[3575,12,2411,4,"_getAuthenticatorAssuranceLevel2"],[3575,44,2411,4],[3575,47,2411,4,"_asyncToGenerator"],[3575,64,2411,4],[3575,65,2414,4],[3575,78,2414,44],[3576,10,2414,44],[3576,14,2414,44,"_this30"],[3576,21,2414,44],[3577,10,2415,8],[3577,17,2415,15],[3577,21,2415,19],[3577,22,2415,20,"_acquireLock"],[3577,34,2415,32],[3577,35,2415,33],[3577,36,2415,34],[3577,37,2415,35],[3577,52,2415,35,"_asyncToGenerator"],[3577,69,2415,35],[3577,70,2415,37],[3577,83,2415,49],[3578,12,2416,12],[3578,25,2416,25,"_this30"],[3578,32,2416,29],[3578,33,2416,30,"_useSession"],[3578,44,2416,41],[3579,14,2416,41],[3579,18,2416,41,"_ref43"],[3579,24,2416,41],[3579,27,2416,41,"_asyncToGenerator"],[3579,44,2416,41],[3579,45,2416,42],[3579,56,2416,49,"result"],[3579,62,2416,55],[3579,64,2416,60],[3580,16,2417,16],[3580,20,2417,20,"_a"],[3580,22,2417,22],[3580,24,2417,24,"_b"],[3580,26,2417,26],[3581,16,2418,16],[3581,20,2418,32,"session"],[3581,27,2418,39],[3581,30,2418,68,"result"],[3581,36,2418,74],[3581,37,2418,24,"data"],[3581,41,2418,28],[3581,42,2418,32,"session"],[3581,49,2418,39],[3582,18,2418,50,"sessionError"],[3582,30,2418,62],[3582,33,2418,68,"result"],[3582,39,2418,74],[3582,40,2418,43,"error"],[3582,45,2418,48],[3583,16,2419,16],[3583,20,2419,20,"sessionError"],[3583,32,2419,32],[3583,34,2419,34],[3584,18,2420,20],[3584,25,2420,27],[3585,20,2420,29,"data"],[3585,24,2420,33],[3585,26,2420,35],[3585,30,2420,39],[3586,20,2420,41,"error"],[3586,25,2420,46],[3586,27,2420,48,"sessionError"],[3587,18,2420,61],[3587,19,2420,62],[3588,16,2421,16],[3589,16,2422,16],[3589,20,2422,20],[3589,21,2422,21,"session"],[3589,28,2422,28],[3589,30,2422,30],[3590,18,2423,20],[3590,25,2423,27],[3591,20,2424,24,"data"],[3591,24,2424,28],[3591,26,2424,30],[3592,22,2424,32,"currentLevel"],[3592,34,2424,44],[3592,36,2424,46],[3592,40,2424,50],[3593,22,2424,52,"nextLevel"],[3593,31,2424,61],[3593,33,2424,63],[3593,37,2424,67],[3594,22,2424,69,"currentAuthenticationMethods"],[3594,50,2424,97],[3594,52,2424,99],[3595,20,2424,102],[3595,21,2424,103],[3596,20,2425,24,"error"],[3596,25,2425,29],[3596,27,2425,31],[3597,18,2426,20],[3597,19,2426,21],[3598,16,2427,16],[3599,16,2428,16],[3599,20,2428,16,"_ref44"],[3599,26,2428,16],[3599,29,2428,36],[3599,30,2428,37],[3599,31,2428,38],[3599,33,2428,40,"helpers_1"],[3599,42,2428,49],[3599,43,2428,50,"decodeJWT"],[3599,52,2428,59],[3599,54,2428,61,"session"],[3599,61,2428,68],[3599,62,2428,69,"access_token"],[3599,74,2428,81],[3599,75,2428,82],[3600,18,2428,24,"payload"],[3600,25,2428,31],[3600,28,2428,31,"_ref44"],[3600,34,2428,31],[3600,35,2428,24,"payload"],[3600,42,2428,31],[3601,16,2429,16],[3601,20,2429,20,"currentLevel"],[3601,32,2429,32],[3601,35,2429,35],[3601,39,2429,39],[3602,16,2430,16],[3602,20,2430,20,"payload"],[3602,27,2430,27],[3602,28,2430,28,"aal"],[3602,31,2430,31],[3602,33,2430,33],[3603,18,2431,20,"currentLevel"],[3603,30,2431,32],[3603,33,2431,35,"payload"],[3603,40,2431,42],[3603,41,2431,43,"aal"],[3603,44,2431,46],[3604,16,2432,16],[3605,16,2433,16],[3605,20,2433,20,"nextLevel"],[3605,29,2433,29],[3605,32,2433,32,"currentLevel"],[3605,44,2433,44],[3606,16,2434,16],[3606,20,2434,22,"verifiedFactors"],[3606,35,2434,37],[3606,38,2434,40],[3606,39,2434,41,"_b"],[3606,41,2434,43],[3606,44,2434,46],[3606,45,2434,47,"_a"],[3606,47,2434,49],[3606,50,2434,52,"session"],[3606,57,2434,59],[3606,58,2434,60,"user"],[3606,62,2434,64],[3606,63,2434,65,"factors"],[3606,70,2434,72],[3606,76,2434,78],[3606,80,2434,82],[3606,84,2434,86,"_a"],[3606,86,2434,88],[3606,91,2434,93],[3606,96,2434,98],[3606,97,2434,99],[3606,100,2434,102],[3606,105,2434,107],[3606,106,2434,108],[3606,109,2434,111,"_a"],[3606,111,2434,113],[3606,112,2434,114,"filter"],[3606,118,2434,120],[3606,119,2434,122,"factor"],[3606,125,2434,128],[3606,129,2434,133,"factor"],[3606,135,2434,139],[3606,136,2434,140,"status"],[3606,142,2434,146],[3606,147,2434,151],[3606,157,2434,161],[3606,158,2434,162],[3606,164,2434,168],[3606,168,2434,172],[3606,172,2434,176,"_b"],[3606,174,2434,178],[3606,179,2434,183],[3606,184,2434,188],[3606,185,2434,189],[3606,188,2434,192,"_b"],[3606,190,2434,194],[3606,193,2434,197],[3606,195,2434,199],[3607,16,2435,16],[3607,20,2435,20,"verifiedFactors"],[3607,35,2435,35],[3607,36,2435,36,"length"],[3607,42,2435,42],[3607,45,2435,45],[3607,46,2435,46],[3607,48,2435,48],[3608,18,2436,20,"nextLevel"],[3608,27,2436,29],[3608,30,2436,32],[3608,36,2436,38],[3609,16,2437,16],[3610,16,2438,16],[3610,20,2438,22,"currentAuthenticationMethods"],[3610,48,2438,50],[3610,51,2438,53,"payload"],[3610,58,2438,60],[3610,59,2438,61,"amr"],[3610,62,2438,64],[3610,66,2438,68],[3610,68,2438,70],[3611,16,2439,16],[3611,23,2439,23],[3612,18,2439,25,"data"],[3612,22,2439,29],[3612,24,2439,31],[3613,20,2439,33,"currentLevel"],[3613,32,2439,45],[3614,20,2439,47,"nextLevel"],[3614,29,2439,56],[3615,20,2439,58,"currentAuthenticationMethods"],[3616,18,2439,87],[3616,19,2439,88],[3617,18,2439,90,"error"],[3617,23,2439,95],[3617,25,2439,97],[3618,16,2439,102],[3618,17,2439,103],[3619,14,2440,12],[3619,15,2440,13],[3620,14,2440,13],[3620,31,2440,13,"_x70"],[3620,35,2440,13],[3621,16,2440,13],[3621,23,2440,13,"_ref43"],[3621,29,2440,13],[3621,30,2440,13,"apply"],[3621,35,2440,13],[3621,42,2440,13,"arguments"],[3621,51,2440,13],[3622,14,2440,13],[3623,12,2440,13],[3623,16,2440,14],[3624,10,2441,8],[3624,11,2441,9],[3624,13,2441,10],[3625,8,2442,4],[3625,9,2442,5],[3626,8,2442,5],[3626,17,2414,10,"_getAuthenticatorAssuranceLevel"],[3626,48,2414,41,"_getAuthenticatorAssuranceLevel"],[3626,49,2414,41],[3627,10,2414,41],[3627,17,2414,41,"_getAuthenticatorAssuranceLevel2"],[3627,49,2414,41],[3627,50,2414,41,"apply"],[3627,55,2414,41],[3627,62,2414,41,"arguments"],[3627,71,2414,41],[3628,8,2414,41],[3629,8,2414,41],[3629,15,2414,10,"_getAuthenticatorAssuranceLevel"],[3629,46,2414,41],[3630,6,2414,41],[3631,4,2414,41],[3632,6,2414,41,"key"],[3632,9,2414,41],[3633,6,2414,41,"value"],[3633,11,2414,41],[3634,8,2414,41],[3634,12,2414,41,"_fetchJwk"],[3634,21,2414,41],[3634,24,2414,41,"_asyncToGenerator"],[3634,41,2414,41],[3634,42,2443,4],[3634,53,2443,19,"kid"],[3634,56,2443,22],[3634,58,2443,45],[3635,10,2443,45],[3635,14,2443,24,"jwks"],[3635,18,2443,28],[3635,21,2443,28,"arguments"],[3635,30,2443,28],[3635,31,2443,28,"length"],[3635,37,2443,28],[3635,45,2443,28,"arguments"],[3635,54,2443,28],[3635,62,2443,28,"undefined"],[3635,71,2443,28],[3635,74,2443,28,"arguments"],[3635,83,2443,28],[3635,89,2443,31],[3636,12,2443,33,"keys"],[3636,16,2443,37],[3636,18,2443,39],[3637,10,2443,42],[3637,11,2443,43],[3638,10,2444,8],[3639,10,2445,8],[3639,14,2445,12,"jwk"],[3639,17,2445,15],[3639,20,2445,18,"jwks"],[3639,24,2445,22],[3639,25,2445,23,"keys"],[3639,29,2445,27],[3639,30,2445,28,"find"],[3639,34,2445,32],[3639,35,2445,34,"key"],[3639,38,2445,37],[3639,42,2445,42,"key"],[3639,45,2445,45],[3639,46,2445,46,"kid"],[3639,49,2445,49],[3639,54,2445,54,"kid"],[3639,57,2445,57],[3639,58,2445,58],[3640,10,2446,8],[3640,14,2446,12,"jwk"],[3640,17,2446,15],[3640,19,2446,17],[3641,12,2447,12],[3641,19,2447,19,"jwk"],[3641,22,2447,22],[3642,10,2448,8],[3643,10,2449,8],[3643,14,2449,14,"now"],[3643,17,2449,17],[3643,20,2449,20,"Date"],[3643,24,2449,24],[3643,25,2449,25,"now"],[3643,28,2449,28],[3643,29,2449,29],[3643,30,2449,30],[3644,10,2450,8],[3645,10,2451,8,"jwk"],[3645,13,2451,11],[3645,16,2451,14],[3645,20,2451,18],[3645,21,2451,19,"jwks"],[3645,25,2451,23],[3645,26,2451,24,"keys"],[3645,30,2451,28],[3645,31,2451,29,"find"],[3645,35,2451,33],[3645,36,2451,35,"key"],[3645,39,2451,38],[3645,43,2451,43,"key"],[3645,46,2451,46],[3645,47,2451,47,"kid"],[3645,50,2451,50],[3645,55,2451,55,"kid"],[3645,58,2451,58],[3645,59,2451,59],[3646,10,2452,8],[3647,10,2453,8],[3647,14,2453,12,"jwk"],[3647,17,2453,15],[3647,21,2453,19],[3647,25,2453,23],[3647,26,2453,24,"jwks_cached_at"],[3647,40,2453,38],[3647,43,2453,41,"constants_1"],[3647,54,2453,52],[3647,55,2453,53,"JWKS_TTL"],[3647,63,2453,61],[3647,66,2453,64,"now"],[3647,69,2453,67],[3647,71,2453,69],[3648,12,2454,12],[3648,19,2454,19,"jwk"],[3648,22,2454,22],[3649,10,2455,8],[3650,10,2456,8],[3651,10,2457,8],[3651,14,2457,8,"_yield23"],[3651,22,2457,8],[3651,31,2457,38],[3651,32,2457,39],[3651,33,2457,40],[3651,35,2457,42,"fetch_1"],[3651,42,2457,49],[3651,43,2457,50,"_request"],[3651,51,2457,58],[3651,53,2457,60],[3651,57,2457,64],[3651,58,2457,65,"fetch"],[3651,63,2457,70],[3651,65,2457,72],[3651,70,2457,77],[3651,72,2457,79],[3651,75,2457,82],[3651,79,2457,86],[3651,80,2457,87,"url"],[3651,83,2457,90],[3651,107,2457,114],[3651,109,2457,116],[3652,14,2458,12,"headers"],[3652,21,2458,19],[3652,23,2458,21],[3652,27,2458,25],[3652,28,2458,26,"headers"],[3653,12,2459,8],[3653,13,2459,9],[3653,14,2459,10],[3654,12,2457,16,"data"],[3654,16,2457,20],[3654,19,2457,20,"_yield23"],[3654,27,2457,20],[3654,28,2457,16,"data"],[3654,32,2457,20],[3655,12,2457,22,"error"],[3655,17,2457,27],[3655,20,2457,27,"_yield23"],[3655,28,2457,27],[3655,29,2457,22,"error"],[3655,34,2457,27],[3656,10,2460,8],[3656,14,2460,12,"error"],[3656,19,2460,17],[3656,21,2460,19],[3657,12,2461,12],[3657,18,2461,18,"error"],[3657,23,2461,23],[3658,10,2462,8],[3659,10,2463,8],[3659,14,2463,12],[3659,15,2463,13,"data"],[3659,19,2463,17],[3659,20,2463,18,"keys"],[3659,24,2463,22],[3659,28,2463,26,"data"],[3659,32,2463,30],[3659,33,2463,31,"keys"],[3659,37,2463,35],[3659,38,2463,36,"length"],[3659,44,2463,42],[3659,49,2463,47],[3659,50,2463,48],[3659,52,2463,50],[3660,12,2464,12],[3660,19,2464,19],[3660,23,2464,23],[3661,10,2465,8],[3662,10,2466,8],[3662,14,2466,12],[3662,15,2466,13,"jwks"],[3662,19,2466,17],[3662,22,2466,20,"data"],[3662,26,2466,24],[3663,10,2467,8],[3663,14,2467,12],[3663,15,2467,13,"jwks_cached_at"],[3663,29,2467,27],[3663,32,2467,30,"now"],[3663,35,2467,33],[3664,10,2468,8],[3665,10,2469,8,"jwk"],[3665,13,2469,11],[3665,16,2469,14,"data"],[3665,20,2469,18],[3665,21,2469,19,"keys"],[3665,25,2469,23],[3665,26,2469,24,"find"],[3665,30,2469,28],[3665,31,2469,30,"key"],[3665,34,2469,33],[3665,38,2469,38,"key"],[3665,41,2469,41],[3665,42,2469,42,"kid"],[3665,45,2469,45],[3665,50,2469,50,"kid"],[3665,53,2469,53],[3665,54,2469,54],[3666,10,2470,8],[3666,14,2470,12],[3666,15,2470,13,"jwk"],[3666,18,2470,16],[3666,20,2470,18],[3667,12,2471,12],[3667,19,2471,19],[3667,23,2471,23],[3668,10,2472,8],[3669,10,2473,8],[3669,17,2473,15,"jwk"],[3669,20,2473,18],[3670,8,2474,4],[3670,9,2474,5],[3671,8,2474,5],[3671,17,2443,10,"fetchJwk"],[3671,25,2443,18,"fetchJwk"],[3671,26,2443,18,"_x71"],[3671,30,2443,18],[3672,10,2443,18],[3672,17,2443,18,"_fetchJwk"],[3672,26,2443,18],[3672,27,2443,18,"apply"],[3672,32,2443,18],[3672,39,2443,18,"arguments"],[3672,48,2443,18],[3673,8,2443,18],[3674,8,2443,18],[3674,15,2443,10,"fetchJwk"],[3674,23,2443,18],[3675,6,2443,18],[3676,6,2475,4],[3677,0,2476,0],[3678,0,2477,0],[3679,0,2478,0],[3680,0,2479,0],[3681,0,2480,0],[3682,0,2481,0],[3683,0,2482,0],[3684,0,2483,0],[3685,0,2484,0],[3686,0,2485,0],[3687,0,2486,0],[3688,0,2487,0],[3689,0,2488,0],[3690,0,2489,0],[3691,0,2490,0],[3692,4,2475,4],[3693,6,2475,4,"key"],[3693,9,2475,4],[3694,6,2475,4,"value"],[3694,11,2475,4],[3695,8,2475,4],[3695,12,2475,4,"_getClaims"],[3695,22,2475,4],[3695,25,2475,4,"_asyncToGenerator"],[3695,42,2475,4],[3695,43,2491,4],[3695,54,2491,20,"jwt"],[3695,57,2491,23],[3695,59,2491,39],[3696,10,2491,39],[3696,14,2491,25,"options"],[3696,21,2491,32],[3696,24,2491,32,"arguments"],[3696,33,2491,32],[3696,34,2491,32,"length"],[3696,40,2491,32],[3696,48,2491,32,"arguments"],[3696,57,2491,32],[3696,65,2491,32,"undefined"],[3696,74,2491,32],[3696,77,2491,32,"arguments"],[3696,86,2491,32],[3696,92,2491,35],[3696,93,2491,36],[3696,94,2491,37],[3697,10,2492,8],[3697,14,2492,12],[3698,12,2493,12],[3698,16,2493,16,"token"],[3698,21,2493,21],[3698,24,2493,24,"jwt"],[3698,27,2493,27],[3699,12,2494,12],[3699,16,2494,16],[3699,17,2494,17,"token"],[3699,22,2494,22],[3699,24,2494,24],[3700,14,2495,16],[3700,18,2495,16,"_yield$this$getSessio"],[3700,39,2495,16],[3700,48,2495,46],[3700,52,2495,50],[3700,53,2495,51,"getSession"],[3700,63,2495,61],[3700,64,2495,62],[3700,65,2495,63],[3701,16,2495,24,"data"],[3701,20,2495,28],[3701,23,2495,28,"_yield$this$getSessio"],[3701,44,2495,28],[3701,45,2495,24,"data"],[3701,49,2495,28],[3702,16,2495,30,"error"],[3702,21,2495,35],[3702,24,2495,35,"_yield$this$getSessio"],[3702,45,2495,35],[3702,46,2495,30,"error"],[3702,51,2495,35],[3703,14,2496,16],[3703,18,2496,20,"error"],[3703,23,2496,25],[3703,27,2496,29],[3703,28,2496,30,"data"],[3703,32,2496,34],[3703,33,2496,35,"session"],[3703,40,2496,42],[3703,42,2496,44],[3704,16,2497,20],[3704,23,2497,27],[3705,18,2497,29,"data"],[3705,22,2497,33],[3705,24,2497,35],[3705,28,2497,39],[3706,18,2497,41,"error"],[3707,16,2497,47],[3707,17,2497,48],[3708,14,2498,16],[3709,14,2499,16,"token"],[3709,19,2499,21],[3709,22,2499,24,"data"],[3709,26,2499,28],[3709,27,2499,29,"session"],[3709,34,2499,36],[3709,35,2499,37,"access_token"],[3709,47,2499,49],[3710,12,2500,12],[3711,12,2501,12],[3711,16,2501,12,"_ref45"],[3711,22,2501,12],[3711,25,2501,101],[3711,26,2501,102],[3711,27,2501,103],[3711,29,2501,105,"helpers_1"],[3711,38,2501,114],[3711,39,2501,115,"decodeJWT"],[3711,48,2501,124],[3711,50,2501,126,"token"],[3711,55,2501,131],[3711,56,2501,132],[3712,14,2501,20,"header"],[3712,20,2501,26],[3712,23,2501,26,"_ref45"],[3712,29,2501,26],[3712,30,2501,20,"header"],[3712,36,2501,26],[3713,14,2501,28,"payload"],[3713,21,2501,35],[3713,24,2501,35,"_ref45"],[3713,30,2501,35],[3713,31,2501,28,"payload"],[3713,38,2501,35],[3714,14,2501,37,"signature"],[3714,23,2501,46],[3714,26,2501,46,"_ref45"],[3714,32,2501,46],[3714,33,2501,37,"signature"],[3714,42,2501,46],[3715,14,2501,46,"_ref45$raw"],[3715,24,2501,46],[3715,27,2501,46,"_ref45"],[3715,33,2501,46],[3715,34,2501,48,"raw"],[3715,37,2501,51],[3716,14,2501,63,"rawHeader"],[3716,23,2501,72],[3716,26,2501,72,"_ref45$raw"],[3716,36,2501,72],[3716,37,2501,55,"header"],[3716,43,2501,61],[3717,14,2501,83,"rawPayload"],[3717,24,2501,93],[3717,27,2501,93,"_ref45$raw"],[3717,37,2501,93],[3717,38,2501,74,"payload"],[3717,45,2501,81],[3718,12,2502,12],[3718,16,2502,16],[3718,18,2502,18,"options"],[3718,25,2502,25],[3718,30,2502,30],[3718,34,2502,34],[3718,38,2502,38,"options"],[3718,45,2502,45],[3718,50,2502,50],[3718,55,2502,55],[3718,56,2502,56],[3718,59,2502,59],[3718,64,2502,64],[3718,65,2502,65],[3718,68,2502,68,"options"],[3718,75,2502,75],[3718,76,2502,76,"allowExpired"],[3718,88,2502,88],[3718,89,2502,89],[3718,91,2502,91],[3719,14,2503,16],[3720,14,2504,16],[3720,15,2504,17],[3720,16,2504,18],[3720,18,2504,20,"helpers_1"],[3720,27,2504,29],[3720,28,2504,30,"validateExp"],[3720,39,2504,41],[3720,41,2504,43,"payload"],[3720,48,2504,50],[3720,49,2504,51,"exp"],[3720,52,2504,54],[3720,53,2504,55],[3721,12,2505,12],[3722,12,2506,12],[3722,16,2506,18,"signingKey"],[3722,26,2506,28],[3722,29,2506,31],[3722,30,2506,32,"header"],[3722,36,2506,38],[3722,37,2506,39,"alg"],[3722,40,2506,42],[3722,44,2507,16,"header"],[3722,50,2507,22],[3722,51,2507,23,"alg"],[3722,54,2507,26],[3722,55,2507,27,"startsWith"],[3722,65,2507,37],[3722,66,2507,38],[3722,70,2507,42],[3722,71,2507,43],[3722,75,2508,16],[3722,76,2508,17,"header"],[3722,82,2508,23],[3722,83,2508,24,"kid"],[3722,86,2508,27],[3722,90,2509,16],[3722,92,2509,18],[3722,100,2509,26],[3722,104,2509,30,"globalThis"],[3722,114,2509,40],[3722,118,2509,44],[3722,126,2509,52],[3722,130,2509,56,"globalThis"],[3722,140,2509,66],[3722,141,2509,67,"crypto"],[3722,147,2509,73],[3722,148,2509,74],[3722,151,2510,18],[3722,155,2510,22],[3722,164,2511,24],[3722,168,2511,28],[3722,169,2511,29,"fetchJwk"],[3722,177,2511,37],[3722,178,2511,38,"header"],[3722,184,2511,44],[3722,185,2511,45,"kid"],[3722,188,2511,48],[3722,190,2511,50],[3722,191,2511,51,"options"],[3722,198,2511,58],[3722,203,2511,63],[3722,207,2511,67],[3722,211,2511,71,"options"],[3722,218,2511,78],[3722,223,2511,83],[3722,228,2511,88],[3722,229,2511,89],[3722,232,2511,92],[3722,237,2511,97],[3722,238,2511,98],[3722,241,2511,101,"options"],[3722,248,2511,108],[3722,249,2511,109,"keys"],[3722,253,2511,113],[3722,257,2511,117],[3723,14,2511,119,"keys"],[3723,18,2511,123],[3723,20,2511,125,"options"],[3723,27,2511,132],[3723,28,2511,133,"keys"],[3724,12,2511,138],[3724,13,2511,139],[3724,16,2511,142,"options"],[3724,23,2511,149],[3724,28,2511,154],[3724,32,2511,158],[3724,36,2511,162,"options"],[3724,43,2511,169],[3724,48,2511,174],[3724,53,2511,179],[3724,54,2511,180],[3724,57,2511,183],[3724,62,2511,188],[3724,63,2511,189],[3724,66,2511,192,"options"],[3724,73,2511,199],[3724,74,2511,200,"jwks"],[3724,78,2511,204],[3724,79,2511,205],[3725,12,2512,12],[3726,12,2513,12],[3726,16,2513,16],[3726,17,2513,17,"signingKey"],[3726,27,2513,27],[3726,29,2513,29],[3727,14,2514,16],[3727,18,2514,16,"_yield$this$getUser3"],[3727,38,2514,16],[3727,47,2514,40],[3727,51,2514,44],[3727,52,2514,45,"getUser"],[3727,59,2514,52],[3727,60,2514,53,"token"],[3727,65,2514,58],[3727,66,2514,59],[3728,16,2514,24,"error"],[3728,23,2514,29],[3728,26,2514,29,"_yield$this$getUser3"],[3728,46,2514,29],[3728,47,2514,24,"error"],[3728,52,2514,29],[3729,14,2515,16],[3729,18,2515,20,"error"],[3729,25,2515,25],[3729,27,2515,27],[3730,16,2516,20],[3730,22,2516,26,"error"],[3730,29,2516,31],[3731,14,2517,16],[3732,14,2518,16],[3733,14,2519,16],[3733,21,2519,23],[3734,16,2520,20,"data"],[3734,20,2520,24],[3734,22,2520,26],[3735,18,2521,24,"claims"],[3735,24,2521,30],[3735,26,2521,32,"payload"],[3735,33,2521,39],[3736,18,2522,24,"header"],[3736,24,2522,30],[3737,18,2523,24,"signature"],[3738,16,2524,20],[3738,17,2524,21],[3739,16,2525,20,"error"],[3739,21,2525,25],[3739,23,2525,27],[3740,14,2526,16],[3740,15,2526,17],[3741,12,2527,12],[3742,12,2528,12],[3742,16,2528,18,"algorithm"],[3742,25,2528,27],[3742,28,2528,30],[3742,29,2528,31],[3742,30,2528,32],[3742,32,2528,34,"helpers_1"],[3742,41,2528,43],[3742,42,2528,44,"getAlgorithm"],[3742,54,2528,56],[3742,56,2528,58,"header"],[3742,62,2528,64],[3742,63,2528,65,"alg"],[3742,66,2528,68],[3742,67,2528,69],[3743,12,2529,12],[3744,12,2530,12],[3744,16,2530,18,"publicKey"],[3744,25,2530,27],[3744,34,2530,36,"crypto"],[3744,40,2530,42],[3744,41,2530,43,"subtle"],[3744,47,2530,49],[3744,48,2530,50,"importKey"],[3744,57,2530,59],[3744,58,2530,60],[3744,63,2530,65],[3744,65,2530,67,"signingKey"],[3744,75,2530,77],[3744,77,2530,79,"algorithm"],[3744,86,2530,88],[3744,88,2530,90],[3744,92,2530,94],[3744,94,2530,96],[3744,95,2531,16],[3744,103,2531,24],[3744,104,2532,13],[3744,105,2532,14],[3745,12,2533,12],[3746,12,2534,12],[3746,16,2534,18,"isValid"],[3746,23,2534,25],[3746,32,2534,34,"crypto"],[3746,38,2534,40],[3746,39,2534,41,"subtle"],[3746,45,2534,47],[3746,46,2534,48,"verify"],[3746,52,2534,54],[3746,53,2534,55,"algorithm"],[3746,62,2534,64],[3746,64,2534,66,"publicKey"],[3746,73,2534,75],[3746,75,2534,77,"signature"],[3746,84,2534,86],[3746,86,2534,88],[3746,87,2534,89],[3746,88,2534,90],[3746,90,2534,92,"base64url_1"],[3746,101,2534,103],[3746,102,2534,104,"stringToUint8Array"],[3746,120,2534,122],[3746,122,2534,124],[3746,125,2534,127,"rawHeader"],[3746,134,2534,136],[3746,138,2534,140,"rawPayload"],[3746,148,2534,150],[3746,150,2534,152],[3746,151,2534,153],[3746,152,2534,154],[3747,12,2535,12],[3747,16,2535,16],[3747,17,2535,17,"isValid"],[3747,24,2535,24],[3747,26,2535,26],[3748,14,2536,16],[3748,20,2536,22],[3748,24,2536,26,"errors_1"],[3748,32,2536,34],[3748,33,2536,35,"AuthInvalidJwtError"],[3748,52,2536,54],[3748,53,2536,55],[3748,76,2536,78],[3748,77,2536,79],[3749,12,2537,12],[3750,12,2538,12],[3751,12,2539,12],[3751,19,2539,19],[3752,14,2540,16,"data"],[3752,18,2540,20],[3752,20,2540,22],[3753,16,2541,20,"claims"],[3753,22,2541,26],[3753,24,2541,28,"payload"],[3753,31,2541,35],[3754,16,2542,20,"header"],[3754,22,2542,26],[3755,16,2543,20,"signature"],[3756,14,2544,16],[3756,15,2544,17],[3757,14,2545,16,"error"],[3757,19,2545,21],[3757,21,2545,23],[3758,12,2546,12],[3758,13,2546,13],[3759,10,2547,8],[3759,11,2547,9],[3759,12,2548,8],[3759,19,2548,15,"error"],[3759,24,2548,20],[3759,26,2548,22],[3760,12,2549,12],[3760,16,2549,16],[3760,17,2549,17],[3760,18,2549,18],[3760,20,2549,20,"errors_1"],[3760,28,2549,28],[3760,29,2549,29,"isAuthError"],[3760,40,2549,40],[3760,42,2549,42,"error"],[3760,47,2549,47],[3760,48,2549,48],[3760,50,2549,50],[3761,14,2550,16],[3761,21,2550,23],[3762,16,2550,25,"data"],[3762,20,2550,29],[3762,22,2550,31],[3762,26,2550,35],[3763,16,2550,37,"error"],[3764,14,2550,43],[3764,15,2550,44],[3765,12,2551,12],[3766,12,2552,12],[3766,18,2552,18,"error"],[3766,23,2552,23],[3767,10,2553,8],[3768,8,2554,4],[3768,9,2554,5],[3769,8,2554,5],[3769,17,2491,10,"getClaims"],[3769,26,2491,19,"getClaims"],[3769,27,2491,19,"_x72"],[3769,31,2491,19],[3770,10,2491,19],[3770,17,2491,19,"_getClaims"],[3770,27,2491,19],[3770,28,2491,19,"apply"],[3770,33,2491,19],[3770,40,2491,19,"arguments"],[3770,49,2491,19],[3771,8,2491,19],[3772,8,2491,19],[3772,15,2491,10,"getClaims"],[3772,24,2491,19],[3773,6,2491,19],[3774,4,2491,19],[3775,2,2491,19],[3776,2,2556,0,"GoTrueClient"],[3776,14,2556,12],[3776,15,2556,13,"nextInstanceID"],[3776,29,2556,27],[3776,32,2556,30],[3776,33,2556,31],[3777,2,2557,0,"exports"],[3777,9,2557,7],[3777,10,2557,8,"default"],[3777,17,2557,15],[3777,20,2557,18,"GoTrueClient"],[3777,32,2557,30],[3778,0,2557,31],[3778,3]],"functionMap":{"names":["<global>","lockNoOp","GoTrueClient","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","constructor","_b.addEventListener$argument_1","_debug","initialize","<anonymous>","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","linkIdentityOAuth","linkIdentityIdToken","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;AC2B;CDE;AEU;ICI;KDG;IEC;KFE;IGC;KHG;IIC;KJE;IKI;6GCwG;aDG;KLG;IOC;KPK;IQM;kCCI;+CCC;aDE;SDC;KRE;IWO;2BCqC;iBDO;KXmB;IaM;Kb6B;IcW;Kd6D;IeS;KfoD;IgBK;KhBQ;IiBI;qCPE;SOE;KjBC;IkBQ;KlBU;ImBC;sBCsC,cD;uBEC;aFE;KnB+D;IsBC;sECmG,6BD;KtBwC;IwBC;KxBkC;IyBK;KzBoC;I0BkB;K1B+C;I2BI;K3BmC;I4Be;K5BuB;I6BK;2CnBE;SmBE;K7BC;I8BC;0CCE;aDW;K9BQ;IgCI;KhCoC;IiCY;mDvBE;oCqBC;arBE;SuBC;KjCE;IkCI;gCzBO;iByBG;yCzBC;iByBO;8ECG;6C1BK;qB0BO;aDc;KlCK;IoCO;KpCU;IqCM;6BC2C;yBDQ;KrCe;IuCQ;mD7BK;S6BE;KvCE;IwCC;0CTS;aSe;KxCc;IyCI;2C/BE;S+BE;KzCC;I0CC;0CXE;aW4B;K1CQ;I2CM;2CjCE;SiCE;K3CC;I4CC;K5CgD;I6CO;2CnCE;SmCE;K7CC;I8CC;0CfE;aeoB;K9CQ;I+CI;K/CsF;IgDI;KhDE;IiDI;KjDG;IkDS;2CxCE;SwCE;KlDC;ImDC;sCpBC;SoBuB;KnDC;IoDC;yBCK;aDG;S3CI;wCCE;aDE;S2CC;KpDE;IsDC;sCvBC;SuBc;KtDC;IuDQ;KvD0B;IwDI;KxDc;IyDC;KzDK;I0DC;2D3BG;a2Be;K1Dc;I2DC;sC5BC;S4B0C;K3DC;I4DI;0C7BE;a6BU;K5DQ;I6DK;kDpDM;aoDU,EpD;aoDM;K7DY;I8DC;K9DO;I+DC;K/DY;IgEK;KhE0F;IiEC;KjEyC;IkEC;+ECQ;aDO;KlEY;IoEK;KpEmC;IqEC;KrES;IsEO;KtEY;IuEK;mCCG,kCD;mB3DqB;S2DG;KvEC;IyEK;KzEO;I0EuB;K1EG;I2ES;K3EG;I4EI;uClEG;sDqBI;yBrBY;akES;K5EU;I6EM;6CCU,kDD;K7ES;I+EI;4CrEe;iBqEQ;K/EQ;IgFO;KhFwB;IiFC;0ClDE;akDU;KjFQ;IkFC;0CnDE;amDuB;KlFQ;ImFC;qCzEC;8CqBE;iBrBwB;SyEQ;KnFC;IoFC;qC1EC;8CqBE;iBrB8B;S0EQ;KpFC;IqFI;KrFc;IsFI;KtFyB;IuFI;qC7EC;0CqBC;yHyDkB,wCzD;arBM;S6EC;KvFC;IyFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KzFK;I4FiB;K5F+D;CFC"}},"type":"js/module"}]}