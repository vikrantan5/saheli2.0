{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"ZXJFWHziJpBZf3W7vl00wXf6fd8=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":45,"index":81}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./AV.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":82},"end":{"line":3,"column":53,"index":135}}],"key":"hjl8R0CKmLATYOl9LR8jZWvlf8g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: true,\n    _DEFAULT_INITIAL_PLAYBACK_STATUS: true,\n    getNativeSourceFromSource: true,\n    assertStatusValuesInBounds: true,\n    getNativeSourceAndFullInitialStatusForLoadAsync: true,\n    getUnloadedStatus: true,\n    PlaybackMixin: true\n  };\n  exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = exports.PlaybackMixin = void 0;\n  exports.assertStatusValuesInBounds = assertStatusValuesInBounds;\n  exports.getNativeSourceAndFullInitialStatusForLoadAsync = getNativeSourceAndFullInitialStatusForLoadAsync;\n  exports.getNativeSourceFromSource = getNativeSourceFromSource;\n  exports.getUnloadedStatus = getUnloadedStatus;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoAsset = require(_dependencyMap[2], \"expo-asset\");\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _AV = require(_dependencyMap[4], \"./AV.types\");\n  Object.keys(_AV).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _AV[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _AV[key];\n      }\n    });\n  });\n  // TODO add:\n  //  disableFocusOnAndroid\n  //  audio routes (at least did become noisy on android)\n  //  pan\n  //  pitch\n  //  API to explicitly request audio focus / session\n  //  API to select stream type on Android\n  //  subtitles API\n  /**\n   * @hidden\n   */\n  var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\n  // @needsAudit\n  /**\n   * The default initial `AVPlaybackStatusToSet` of all `Audio.Sound` objects and `Video` components is as follows:\n   *\n   * ```javascript\n   * {\n   *   progressUpdateIntervalMillis: 500,\n   *   positionMillis: 0,\n   *   shouldPlay: false,\n   *   rate: 1.0,\n   *   shouldCorrectPitch: false,\n   *   volume: 1.0,\n   *   isMuted: false,\n   *   isLooping: false,\n   * }\n   * ```\n   *\n   * This default initial status can be overwritten by setting the optional `initialStatus` in `loadAsync()` or `Audio.Sound.createAsync()`.\n   */\n  var _DEFAULT_INITIAL_PLAYBACK_STATUS = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    audioPan: 0,\n    isMuted: false,\n    isLooping: false\n  };\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function getNativeSourceFromSource(source) {\n    var uri = null;\n    var overridingExtension = null;\n    var headers;\n    if (typeof source === 'string' && _expoModulesCore.Platform.OS === 'web') {\n      return {\n        uri: source,\n        overridingExtension,\n        headers\n      };\n    }\n    var asset = _getAssetFromPlaybackSource(source);\n    if (asset != null) {\n      uri = asset.localUri || asset.uri;\n    } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n      uri = source.uri;\n    }\n    if (uri == null) {\n      return null;\n    }\n    if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n      overridingExtension = source.overrideFileExtensionAndroid;\n    }\n    if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n      headers = source.headers;\n    }\n    return {\n      uri,\n      overridingExtension,\n      headers\n    };\n  }\n  function _getAssetFromPlaybackSource(source) {\n    if (source == null) {\n      return null;\n    }\n    var asset = null;\n    if (typeof source === 'number') {\n      asset = _expoAsset.Asset.fromModule(source);\n    } else if (source instanceof _expoAsset.Asset) {\n      asset = source;\n    }\n    return asset;\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function assertStatusValuesInBounds(status) {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n      throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n      throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n    if (typeof status.audioPan === 'number' && (status.audioPan < -1 || status.audioPan > 1)) {\n      throw new RangeError('Pan value must be between -1.0 and 1.0');\n    }\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function getNativeSourceAndFullInitialStatusForLoadAsync(_x, _x2, _x3) {\n    return _getNativeSourceAndFullInitialStatusForLoadAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @hidden\n   */\n  function _getNativeSourceAndFullInitialStatusForLoadAsync() {\n    _getNativeSourceAndFullInitialStatusForLoadAsync = (0, _asyncToGenerator2.default)(function* (source, initialStatus, downloadFirst) {\n      // Get the full initial status\n      var fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : {\n        ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n        ...initialStatus\n      };\n      assertStatusValuesInBounds(fullInitialStatus);\n      if (typeof source === 'string' && _expoModulesCore.Platform.OS === 'web') {\n        return {\n          nativeSource: {\n            uri: source,\n            overridingExtension: null\n          },\n          fullInitialStatus\n        };\n      }\n      // Download first if necessary.\n      var asset = _getAssetFromPlaybackSource(source);\n      if (downloadFirst && asset) {\n        // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n        yield asset.downloadAsync();\n      }\n      // Get the native source\n      var nativeSource = getNativeSourceFromSource(source);\n      if (nativeSource === null) {\n        throw new Error(`Cannot load an AV asset from a null playback source`);\n      }\n      // If asset has been downloaded use the localUri\n      if (asset && asset.localUri) {\n        nativeSource.uri = asset.localUri;\n      }\n      return {\n        nativeSource,\n        fullInitialStatus\n      };\n    });\n    return _getNativeSourceAndFullInitialStatusForLoadAsync.apply(this, arguments);\n  }\n  function getUnloadedStatus() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return {\n      isLoaded: false,\n      ...(error ? {\n        error\n      } : null)\n    };\n  }\n  /**\n   * @hidden\n   * A mixin that defines common playback methods for A/V classes, so they implement the `Playback`\n   * interface.\n   */\n  var PlaybackMixin = exports.PlaybackMixin = {\n    playAsync() {\n      var _this = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this.setStatusAsync({\n          shouldPlay: true\n        });\n      })();\n    },\n    playFromPositionAsync(positionMillis) {\n      var _arguments = arguments,\n        _this2 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        var tolerances = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n        return _this2.setStatusAsync({\n          positionMillis,\n          shouldPlay: true,\n          seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n          seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n        });\n      })();\n    },\n    pauseAsync() {\n      var _this3 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this3.setStatusAsync({\n          shouldPlay: false\n        });\n      })();\n    },\n    stopAsync() {\n      var _this4 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this4.setStatusAsync({\n          positionMillis: 0,\n          shouldPlay: false\n        });\n      })();\n    },\n    setPositionAsync(positionMillis) {\n      var _arguments2 = arguments,\n        _this5 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        var tolerances = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : {};\n        return _this5.setStatusAsync({\n          positionMillis,\n          seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n          seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n        });\n      })();\n    },\n    setRateAsync(rate) {\n      var _arguments3 = arguments,\n        _this6 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        var shouldCorrectPitch = _arguments3.length > 1 && _arguments3[1] !== undefined ? _arguments3[1] : false;\n        var pitchCorrectionQuality = _arguments3.length > 2 && _arguments3[2] !== undefined ? _arguments3[2] : _AV.PitchCorrectionQuality.Medium;\n        return _this6.setStatusAsync({\n          rate,\n          shouldCorrectPitch,\n          pitchCorrectionQuality\n        });\n      })();\n    },\n    setVolumeAsync(volume, audioPan) {\n      var _this7 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this7.setStatusAsync({\n          volume,\n          audioPan\n        });\n      })();\n    },\n    setIsMutedAsync(isMuted) {\n      var _this8 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this8.setStatusAsync({\n          isMuted\n        });\n      })();\n    },\n    setIsLoopingAsync(isLooping) {\n      var _this9 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this9.setStatusAsync({\n          isLooping\n        });\n      })();\n    },\n    setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n      var _this0 = this;\n      return (0, _asyncToGenerator2.default)(function* () {\n        return _this0.setStatusAsync({\n          progressUpdateIntervalMillis\n        });\n      })();\n    }\n  };\n});","lineCount":301,"map":[[21,2,1,0],[21,6,1,0,"_expoAsset"],[21,16,1,0],[21,19,1,0,"require"],[21,26,1,0],[21,27,1,0,"_dependencyMap"],[21,41,1,0],[22,2,2,0],[22,6,2,0,"_expoModulesCore"],[22,22,2,0],[22,25,2,0,"require"],[22,32,2,0],[22,33,2,0,"_dependencyMap"],[22,47,2,0],[23,2,3,0],[23,6,3,0,"_AV"],[23,9,3,0],[23,12,3,0,"require"],[23,19,3,0],[23,20,3,0,"_dependencyMap"],[23,34,3,0],[24,2,215,0,"Object"],[24,8,215,0],[24,9,215,0,"keys"],[24,13,215,0],[24,14,215,0,"_AV"],[24,17,215,0],[24,19,215,0,"forEach"],[24,26,215,0],[24,37,215,0,"key"],[24,40,215,0],[25,4,215,0],[25,8,215,0,"key"],[25,11,215,0],[25,29,215,0,"key"],[25,32,215,0],[26,4,215,0],[26,8,215,0,"Object"],[26,14,215,0],[26,15,215,0,"prototype"],[26,24,215,0],[26,25,215,0,"hasOwnProperty"],[26,39,215,0],[26,40,215,0,"call"],[26,44,215,0],[26,45,215,0,"_exportNames"],[26,57,215,0],[26,59,215,0,"key"],[26,62,215,0],[27,4,215,0],[27,8,215,0,"key"],[27,11,215,0],[27,15,215,0,"exports"],[27,22,215,0],[27,26,215,0,"exports"],[27,33,215,0],[27,34,215,0,"key"],[27,37,215,0],[27,43,215,0,"_AV"],[27,46,215,0],[27,47,215,0,"key"],[27,50,215,0],[28,4,215,0,"Object"],[28,10,215,0],[28,11,215,0,"defineProperty"],[28,25,215,0],[28,26,215,0,"exports"],[28,33,215,0],[28,35,215,0,"key"],[28,38,215,0],[29,6,215,0,"enumerable"],[29,16,215,0],[30,6,215,0,"get"],[30,9,215,0],[30,20,215,0,"get"],[30,21,215,0],[31,8,215,0],[31,15,215,0,"_AV"],[31,18,215,0],[31,19,215,0,"key"],[31,22,215,0],[32,6,215,0],[33,4,215,0],[34,2,215,0],[35,2,4,0],[36,2,5,0],[37,2,6,0],[38,2,7,0],[39,2,8,0],[40,2,9,0],[41,2,10,0],[42,2,11,0],[43,2,12,0],[44,0,13,0],[45,0,14,0],[46,2,15,7],[46,6,15,13,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[46,46,15,53],[46,49,15,53,"exports"],[46,56,15,53],[46,57,15,53,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[46,97,15,53],[46,100,15,56],[46,103,15,59],[47,2,16,0],[48,2,17,0],[49,0,18,0],[50,0,19,0],[51,0,20,0],[52,0,21,0],[53,0,22,0],[54,0,23,0],[55,0,24,0],[56,0,25,0],[57,0,26,0],[58,0,27,0],[59,0,28,0],[60,0,29,0],[61,0,30,0],[62,0,31,0],[63,0,32,0],[64,0,33,0],[65,0,34,0],[66,2,35,7],[66,6,35,13,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[66,38,35,45],[66,41,35,45,"exports"],[66,48,35,45],[66,49,35,45,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[66,81,35,45],[66,84,35,48],[67,4,36,4,"positionMillis"],[67,18,36,18],[67,20,36,20],[67,21,36,21],[68,4,37,4,"progressUpdateIntervalMillis"],[68,32,37,32],[68,34,37,34,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[68,74,37,74],[69,4,38,4,"shouldPlay"],[69,14,38,14],[69,16,38,16],[69,21,38,21],[70,4,39,4,"rate"],[70,8,39,8],[70,10,39,10],[70,13,39,13],[71,4,40,4,"shouldCorrectPitch"],[71,22,40,22],[71,24,40,24],[71,29,40,29],[72,4,41,4,"volume"],[72,10,41,10],[72,12,41,12],[72,15,41,15],[73,4,42,4,"audioPan"],[73,12,42,12],[73,14,42,14],[73,15,42,15],[74,4,43,4,"isMuted"],[74,11,43,11],[74,13,43,13],[74,18,43,18],[75,4,44,4,"isLooping"],[75,13,44,13],[75,15,44,15],[76,2,45,0],[76,3,45,1],[77,2,46,0],[78,2,47,0],[79,0,48,0],[80,0,49,0],[81,2,50,7],[81,11,50,16,"getNativeSourceFromSource"],[81,36,50,41,"getNativeSourceFromSource"],[81,37,50,42,"source"],[81,43,50,48],[81,45,50,50],[82,4,51,4],[82,8,51,8,"uri"],[82,11,51,11],[82,14,51,14],[82,18,51,18],[83,4,52,4],[83,8,52,8,"overridingExtension"],[83,27,52,27],[83,30,52,30],[83,34,52,34],[84,4,53,4],[84,8,53,8,"headers"],[84,15,53,15],[85,4,54,4],[85,8,54,8],[85,15,54,15,"source"],[85,21,54,21],[85,26,54,26],[85,34,54,34],[85,38,54,38,"Platform"],[85,63,54,46],[85,64,54,47,"OS"],[85,66,54,49],[85,71,54,54],[85,76,54,59],[85,78,54,61],[86,6,55,8],[86,13,55,15],[87,8,56,12,"uri"],[87,11,56,15],[87,13,56,17,"source"],[87,19,56,23],[88,8,57,12,"overridingExtension"],[88,27,57,31],[89,8,58,12,"headers"],[90,6,59,8],[90,7,59,9],[91,4,60,4],[92,4,61,4],[92,8,61,10,"asset"],[92,13,61,15],[92,16,61,18,"_getAssetFromPlaybackSource"],[92,43,61,45],[92,44,61,46,"source"],[92,50,61,52],[92,51,61,53],[93,4,62,4],[93,8,62,8,"asset"],[93,13,62,13],[93,17,62,17],[93,21,62,21],[93,23,62,23],[94,6,63,8,"uri"],[94,9,63,11],[94,12,63,14,"asset"],[94,17,63,19],[94,18,63,20,"localUri"],[94,26,63,28],[94,30,63,32,"asset"],[94,35,63,37],[94,36,63,38,"uri"],[94,39,63,41],[95,4,64,4],[95,5,64,5],[95,11,65,9],[95,15,65,13,"source"],[95,21,65,19],[95,25,65,23],[95,29,65,27],[95,33,66,8],[95,40,66,15,"source"],[95,46,66,21],[95,51,66,26],[95,59,66,34],[95,63,67,8],[95,68,67,13],[95,72,67,17,"source"],[95,78,67,23],[95,82,68,8],[95,89,68,15,"source"],[95,95,68,21],[95,96,68,22,"uri"],[95,99,68,25],[95,104,68,30],[95,112,68,38],[95,114,68,40],[96,6,69,8,"uri"],[96,9,69,11],[96,12,69,14,"source"],[96,18,69,20],[96,19,69,21,"uri"],[96,22,69,24],[97,4,70,4],[98,4,71,4],[98,8,71,8,"uri"],[98,11,71,11],[98,15,71,15],[98,19,71,19],[98,21,71,21],[99,6,72,8],[99,13,72,15],[99,17,72,19],[100,4,73,4],[101,4,74,4],[101,8,74,8,"source"],[101,14,74,14],[101,18,74,18],[101,22,74,22],[101,26,75,8],[101,33,75,15,"source"],[101,39,75,21],[101,44,75,26],[101,52,75,34],[101,56,76,8],[101,86,76,38],[101,90,76,42,"source"],[101,96,76,48],[101,100,77,8],[101,107,77,15,"source"],[101,113,77,21],[101,114,77,22,"overrideFileExtensionAndroid"],[101,142,77,50],[101,147,77,55],[101,155,77,63],[101,157,77,65],[102,6,78,8,"overridingExtension"],[102,25,78,27],[102,28,78,30,"source"],[102,34,78,36],[102,35,78,37,"overrideFileExtensionAndroid"],[102,63,78,65],[103,4,79,4],[104,4,80,4],[104,8,80,8,"source"],[104,14,80,14],[104,18,80,18],[104,22,80,22],[104,26,81,8],[104,33,81,15,"source"],[104,39,81,21],[104,44,81,26],[104,52,81,34],[104,56,82,8],[104,65,82,17],[104,69,82,21,"source"],[104,75,82,27],[104,79,83,8],[104,86,83,15,"source"],[104,92,83,21],[104,93,83,22,"headers"],[104,100,83,29],[104,105,83,34],[104,113,83,42],[104,115,83,44],[105,6,84,8,"headers"],[105,13,84,15],[105,16,84,18,"source"],[105,22,84,24],[105,23,84,25,"headers"],[105,30,84,32],[106,4,85,4],[107,4,86,4],[107,11,86,11],[108,6,86,13,"uri"],[108,9,86,16],[109,6,86,18,"overridingExtension"],[109,25,86,37],[110,6,86,39,"headers"],[111,4,86,47],[111,5,86,48],[112,2,87,0],[113,2,88,0],[113,11,88,9,"_getAssetFromPlaybackSource"],[113,38,88,36,"_getAssetFromPlaybackSource"],[113,39,88,37,"source"],[113,45,88,43],[113,47,88,45],[114,4,89,4],[114,8,89,8,"source"],[114,14,89,14],[114,18,89,18],[114,22,89,22],[114,24,89,24],[115,6,90,8],[115,13,90,15],[115,17,90,19],[116,4,91,4],[117,4,92,4],[117,8,92,8,"asset"],[117,13,92,13],[117,16,92,16],[117,20,92,20],[118,4,93,4],[118,8,93,8],[118,15,93,15,"source"],[118,21,93,21],[118,26,93,26],[118,34,93,34],[118,36,93,36],[119,6,94,8,"asset"],[119,11,94,13],[119,14,94,16,"Asset"],[119,30,94,21],[119,31,94,22,"fromModule"],[119,41,94,32],[119,42,94,33,"source"],[119,48,94,39],[119,49,94,40],[120,4,95,4],[120,5,95,5],[120,11,96,9],[120,15,96,13,"source"],[120,21,96,19],[120,33,96,31,"Asset"],[120,49,96,36],[120,51,96,38],[121,6,97,8,"asset"],[121,11,97,13],[121,14,97,16,"source"],[121,20,97,22],[122,4,98,4],[123,4,99,4],[123,11,99,11,"asset"],[123,16,99,16],[124,2,100,0],[125,2,101,0],[126,2,102,0],[127,0,103,0],[128,0,104,0],[129,2,105,7],[129,11,105,16,"assertStatusValuesInBounds"],[129,37,105,42,"assertStatusValuesInBounds"],[129,38,105,43,"status"],[129,44,105,49],[129,46,105,51],[130,4,106,4],[130,8,106,8],[130,15,106,15,"status"],[130,21,106,21],[130,22,106,22,"rate"],[130,26,106,26],[130,31,106,31],[130,39,106,39],[130,44,106,44,"status"],[130,50,106,50],[130,51,106,51,"rate"],[130,55,106,55],[130,58,106,58],[130,59,106,59],[130,63,106,63,"status"],[130,69,106,69],[130,70,106,70,"rate"],[130,74,106,74],[130,77,106,77],[130,79,106,79],[130,80,106,80],[130,82,106,82],[131,6,107,8],[131,12,107,14],[131,16,107,18,"RangeError"],[131,26,107,28],[131,27,107,29],[131,68,107,70],[131,69,107,71],[132,4,108,4],[133,4,109,4],[133,8,109,8],[133,15,109,15,"status"],[133,21,109,21],[133,22,109,22,"volume"],[133,28,109,28],[133,33,109,33],[133,41,109,41],[133,46,109,46,"status"],[133,52,109,52],[133,53,109,53,"volume"],[133,59,109,59],[133,62,109,62],[133,63,109,63],[133,67,109,67,"status"],[133,73,109,73],[133,74,109,74,"volume"],[133,80,109,80],[133,83,109,83],[133,84,109,84],[133,85,109,85],[133,87,109,87],[134,6,110,8],[134,12,110,14],[134,16,110,18,"RangeError"],[134,26,110,28],[134,27,110,29],[134,69,110,71],[134,70,110,72],[135,4,111,4],[136,4,112,4],[136,8,112,8],[136,15,112,15,"status"],[136,21,112,21],[136,22,112,22,"audioPan"],[136,30,112,30],[136,35,112,35],[136,43,112,43],[136,48,112,48,"status"],[136,54,112,54],[136,55,112,55,"audioPan"],[136,63,112,63],[136,66,112,66],[136,67,112,67],[136,68,112,68],[136,72,112,72,"status"],[136,78,112,78],[136,79,112,79,"audioPan"],[136,87,112,87],[136,90,112,90],[136,91,112,91],[136,92,112,92],[136,94,112,94],[137,6,113,8],[137,12,113,14],[137,16,113,18,"RangeError"],[137,26,113,28],[137,27,113,29],[137,67,113,69],[137,68,113,70],[138,4,114,4],[139,2,115,0],[140,2,116,0],[141,2,117,0],[142,0,118,0],[143,0,119,0],[144,2,117,0],[144,11,120,22,"getNativeSourceAndFullInitialStatusForLoadAsync"],[144,58,120,69,"getNativeSourceAndFullInitialStatusForLoadAsync"],[144,59,120,69,"_x"],[144,61,120,69],[144,63,120,69,"_x2"],[144,66,120,69],[144,68,120,69,"_x3"],[144,71,120,69],[145,4,120,69],[145,11,120,69,"_getNativeSourceAndFullInitialStatusForLoadAsync"],[145,59,120,69],[145,60,120,69,"apply"],[145,65,120,69],[145,72,120,69,"arguments"],[145,81,120,69],[146,2,120,69],[146,4,155,0],[147,2,156,0],[148,0,157,0],[149,0,158,0],[150,2,156,0],[150,11,156,0,"_getNativeSourceAndFullInitialStatusForLoadAsync"],[150,60,156,0],[151,4,156,0,"_getNativeSourceAndFullInitialStatusForLoadAsync"],[151,52,156,0],[151,59,156,0,"_asyncToGenerator2"],[151,77,156,0],[151,78,156,0,"default"],[151,85,156,0],[151,87,120,7],[151,98,120,70,"source"],[151,104,120,76],[151,106,120,78,"initialStatus"],[151,119,120,91],[151,121,120,93,"downloadFirst"],[151,134,120,106],[151,136,120,108],[152,6,121,4],[153,6,122,4],[153,10,122,10,"fullInitialStatus"],[153,27,122,27],[153,30,122,30,"initialStatus"],[153,43,122,43],[153,47,122,47],[153,51,122,51],[153,54,123,10,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[153,86,123,42],[153,89,124,10],[154,8,125,12],[154,11,125,15,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[154,43,125,47],[155,8,126,12],[155,11,126,15,"initialStatus"],[156,6,127,8],[156,7,127,9],[157,6,128,4,"assertStatusValuesInBounds"],[157,32,128,30],[157,33,128,31,"fullInitialStatus"],[157,50,128,48],[157,51,128,49],[158,6,129,4],[158,10,129,8],[158,17,129,15,"source"],[158,23,129,21],[158,28,129,26],[158,36,129,34],[158,40,129,38,"Platform"],[158,65,129,46],[158,66,129,47,"OS"],[158,68,129,49],[158,73,129,54],[158,78,129,59],[158,80,129,61],[159,8,130,8],[159,15,130,15],[160,10,131,12,"nativeSource"],[160,22,131,24],[160,24,131,26],[161,12,132,16,"uri"],[161,15,132,19],[161,17,132,21,"source"],[161,23,132,27],[162,12,133,16,"overridingExtension"],[162,31,133,35],[162,33,133,37],[163,10,134,12],[163,11,134,13],[164,10,135,12,"fullInitialStatus"],[165,8,136,8],[165,9,136,9],[166,6,137,4],[167,6,138,4],[168,6,139,4],[168,10,139,10,"asset"],[168,15,139,15],[168,18,139,18,"_getAssetFromPlaybackSource"],[168,45,139,45],[168,46,139,46,"source"],[168,52,139,52],[168,53,139,53],[169,6,140,4],[169,10,140,8,"downloadFirst"],[169,23,140,21],[169,27,140,25,"asset"],[169,32,140,30],[169,34,140,32],[170,8,141,8],[171,8,142,8],[171,14,142,14,"asset"],[171,19,142,19],[171,20,142,20,"downloadAsync"],[171,33,142,33],[171,34,142,34],[171,35,142,35],[172,6,143,4],[173,6,144,4],[174,6,145,4],[174,10,145,10,"nativeSource"],[174,22,145,22],[174,25,145,25,"getNativeSourceFromSource"],[174,50,145,50],[174,51,145,51,"source"],[174,57,145,57],[174,58,145,58],[175,6,146,4],[175,10,146,8,"nativeSource"],[175,22,146,20],[175,27,146,25],[175,31,146,29],[175,33,146,31],[176,8,147,8],[176,14,147,14],[176,18,147,18,"Error"],[176,23,147,23],[176,24,147,24],[176,77,147,77],[176,78,147,78],[177,6,148,4],[178,6,149,4],[179,6,150,4],[179,10,150,8,"asset"],[179,15,150,13],[179,19,150,17,"asset"],[179,24,150,22],[179,25,150,23,"localUri"],[179,33,150,31],[179,35,150,33],[180,8,151,8,"nativeSource"],[180,20,151,20],[180,21,151,21,"uri"],[180,24,151,24],[180,27,151,27,"asset"],[180,32,151,32],[180,33,151,33,"localUri"],[180,41,151,41],[181,6,152,4],[182,6,153,4],[182,13,153,11],[183,8,153,13,"nativeSource"],[183,20,153,25],[184,8,153,27,"fullInitialStatus"],[185,6,153,45],[185,7,153,46],[186,4,154,0],[186,5,154,1],[187,4,154,1],[187,11,154,1,"_getNativeSourceAndFullInitialStatusForLoadAsync"],[187,59,154,1],[187,60,154,1,"apply"],[187,65,154,1],[187,72,154,1,"arguments"],[187,81,154,1],[188,2,154,1],[189,2,159,7],[189,11,159,16,"getUnloadedStatus"],[189,28,159,33,"getUnloadedStatus"],[189,29,159,33],[189,31,159,48],[190,4,159,48],[190,8,159,34,"error"],[190,13,159,39],[190,16,159,39,"arguments"],[190,25,159,39],[190,26,159,39,"length"],[190,32,159,39],[190,40,159,39,"arguments"],[190,49,159,39],[190,57,159,39,"undefined"],[190,66,159,39],[190,69,159,39,"arguments"],[190,78,159,39],[190,84,159,42],[190,88,159,46],[191,4,160,4],[191,11,160,11],[192,6,161,8,"isLoaded"],[192,14,161,16],[192,16,161,18],[192,21,161,23],[193,6,162,8],[193,10,162,12,"error"],[193,15,162,17],[193,18,162,20],[194,8,162,22,"error"],[195,6,162,28],[195,7,162,29],[195,10,162,32],[195,14,162,36],[196,4,163,4],[196,5,163,5],[197,2,164,0],[198,2,165,0],[199,0,166,0],[200,0,167,0],[201,0,168,0],[202,0,169,0],[203,2,170,7],[203,6,170,13,"PlaybackMixin"],[203,19,170,26],[203,22,170,26,"exports"],[203,29,170,26],[203,30,170,26,"PlaybackMixin"],[203,43,170,26],[203,46,170,29],[204,4,171,10,"playAsync"],[204,13,171,19,"playAsync"],[204,14,171,19],[204,16,171,22],[205,6,171,22],[205,10,171,22,"_this"],[205,15,171,22],[206,6,171,22],[206,17,171,22,"_asyncToGenerator2"],[206,35,171,22],[206,36,171,22,"default"],[206,43,171,22],[207,8,172,8],[207,15,172,15,"_this"],[207,20,172,19],[207,21,172,20,"setStatusAsync"],[207,35,172,34],[207,36,172,35],[208,10,172,37,"shouldPlay"],[208,20,172,47],[208,22,172,49],[209,8,172,54],[209,9,172,55],[209,10,172,56],[210,6,172,57],[211,4,173,4],[211,5,173,5],[212,4,174,10,"playFromPositionAsync"],[212,25,174,31,"playFromPositionAsync"],[212,26,174,32,"positionMillis"],[212,40,174,46],[212,42,174,65],[213,6,174,65],[213,10,174,65,"_arguments"],[213,20,174,65],[213,23,174,65,"arguments"],[213,32,174,65],[214,8,174,65,"_this2"],[214,14,174,65],[215,6,174,65],[215,17,174,65,"_asyncToGenerator2"],[215,35,174,65],[215,36,174,65,"default"],[215,43,174,65],[216,8,174,65],[216,12,174,48,"tolerances"],[216,22,174,58],[216,25,174,58,"_arguments"],[216,35,174,58],[216,36,174,58,"length"],[216,42,174,58],[216,50,174,58,"_arguments"],[216,60,174,58],[216,68,174,58,"undefined"],[216,77,174,58],[216,80,174,58,"_arguments"],[216,90,174,58],[216,96,174,61],[216,97,174,62],[216,98,174,63],[217,8,175,8],[217,15,175,15,"_this2"],[217,21,175,19],[217,22,175,20,"setStatusAsync"],[217,36,175,34],[217,37,175,35],[218,10,176,12,"positionMillis"],[218,24,176,26],[219,10,177,12,"shouldPlay"],[219,20,177,22],[219,22,177,24],[219,26,177,28],[220,10,178,12,"seekMillisToleranceAfter"],[220,34,178,36],[220,36,178,38,"tolerances"],[220,46,178,48],[220,47,178,49,"toleranceMillisAfter"],[220,67,178,69],[221,10,179,12,"seekMillisToleranceBefore"],[221,35,179,37],[221,37,179,39,"tolerances"],[221,47,179,49],[221,48,179,50,"toleranceMillisBefore"],[222,8,180,8],[222,9,180,9],[222,10,180,10],[223,6,180,11],[224,4,181,4],[224,5,181,5],[225,4,182,10,"pauseAsync"],[225,14,182,20,"pauseAsync"],[225,15,182,20],[225,17,182,23],[226,6,182,23],[226,10,182,23,"_this3"],[226,16,182,23],[227,6,182,23],[227,17,182,23,"_asyncToGenerator2"],[227,35,182,23],[227,36,182,23,"default"],[227,43,182,23],[228,8,183,8],[228,15,183,15,"_this3"],[228,21,183,19],[228,22,183,20,"setStatusAsync"],[228,36,183,34],[228,37,183,35],[229,10,183,37,"shouldPlay"],[229,20,183,47],[229,22,183,49],[230,8,183,55],[230,9,183,56],[230,10,183,57],[231,6,183,58],[232,4,184,4],[232,5,184,5],[233,4,185,10,"stopAsync"],[233,13,185,19,"stopAsync"],[233,14,185,19],[233,16,185,22],[234,6,185,22],[234,10,185,22,"_this4"],[234,16,185,22],[235,6,185,22],[235,17,185,22,"_asyncToGenerator2"],[235,35,185,22],[235,36,185,22,"default"],[235,43,185,22],[236,8,186,8],[236,15,186,15,"_this4"],[236,21,186,19],[236,22,186,20,"setStatusAsync"],[236,36,186,34],[236,37,186,35],[237,10,186,37,"positionMillis"],[237,24,186,51],[237,26,186,53],[237,27,186,54],[238,10,186,56,"shouldPlay"],[238,20,186,66],[238,22,186,68],[239,8,186,74],[239,9,186,75],[239,10,186,76],[240,6,186,77],[241,4,187,4],[241,5,187,5],[242,4,188,10,"setPositionAsync"],[242,20,188,26,"setPositionAsync"],[242,21,188,27,"positionMillis"],[242,35,188,41],[242,37,188,60],[243,6,188,60],[243,10,188,60,"_arguments2"],[243,21,188,60],[243,24,188,60,"arguments"],[243,33,188,60],[244,8,188,60,"_this5"],[244,14,188,60],[245,6,188,60],[245,17,188,60,"_asyncToGenerator2"],[245,35,188,60],[245,36,188,60,"default"],[245,43,188,60],[246,8,188,60],[246,12,188,43,"tolerances"],[246,22,188,53],[246,25,188,53,"_arguments2"],[246,36,188,53],[246,37,188,53,"length"],[246,43,188,53],[246,51,188,53,"_arguments2"],[246,62,188,53],[246,70,188,53,"undefined"],[246,79,188,53],[246,82,188,53,"_arguments2"],[246,93,188,53],[246,99,188,56],[246,100,188,57],[246,101,188,58],[247,8,189,8],[247,15,189,15,"_this5"],[247,21,189,19],[247,22,189,20,"setStatusAsync"],[247,36,189,34],[247,37,189,35],[248,10,190,12,"positionMillis"],[248,24,190,26],[249,10,191,12,"seekMillisToleranceAfter"],[249,34,191,36],[249,36,191,38,"tolerances"],[249,46,191,48],[249,47,191,49,"toleranceMillisAfter"],[249,67,191,69],[250,10,192,12,"seekMillisToleranceBefore"],[250,35,192,37],[250,37,192,39,"tolerances"],[250,47,192,49],[250,48,192,50,"toleranceMillisBefore"],[251,8,193,8],[251,9,193,9],[251,10,193,10],[252,6,193,11],[253,4,194,4],[253,5,194,5],[254,4,195,10,"setRateAsync"],[254,16,195,22,"setRateAsync"],[254,17,195,23,"rate"],[254,21,195,27],[254,23,195,113],[255,6,195,113],[255,10,195,113,"_arguments3"],[255,21,195,113],[255,24,195,113,"arguments"],[255,33,195,113],[256,8,195,113,"_this6"],[256,14,195,113],[257,6,195,113],[257,17,195,113,"_asyncToGenerator2"],[257,35,195,113],[257,36,195,113,"default"],[257,43,195,113],[258,8,195,113],[258,12,195,29,"shouldCorrectPitch"],[258,30,195,47],[258,33,195,47,"_arguments3"],[258,44,195,47],[258,45,195,47,"length"],[258,51,195,47],[258,59,195,47,"_arguments3"],[258,70,195,47],[258,78,195,47,"undefined"],[258,87,195,47],[258,90,195,47,"_arguments3"],[258,101,195,47],[258,107,195,50],[258,112,195,55],[259,8,195,55],[259,12,195,57,"pitchCorrectionQuality"],[259,34,195,79],[259,37,195,79,"_arguments3"],[259,48,195,79],[259,49,195,79,"length"],[259,55,195,79],[259,63,195,79,"_arguments3"],[259,74,195,79],[259,82,195,79,"undefined"],[259,91,195,79],[259,94,195,79,"_arguments3"],[259,105,195,79],[259,111,195,82,"PitchCorrectionQuality"],[259,137,195,104],[259,138,195,105,"Medium"],[259,144,195,111],[260,8,196,8],[260,15,196,15,"_this6"],[260,21,196,19],[260,22,196,20,"setStatusAsync"],[260,36,196,34],[260,37,196,35],[261,10,197,12,"rate"],[261,14,197,16],[262,10,198,12,"shouldCorrectPitch"],[262,28,198,30],[263,10,199,12,"pitchCorrectionQuality"],[264,8,200,8],[264,9,200,9],[264,10,200,10],[265,6,200,11],[266,4,201,4],[266,5,201,5],[267,4,202,10,"setVolumeAsync"],[267,18,202,24,"setVolumeAsync"],[267,19,202,25,"volume"],[267,25,202,31],[267,27,202,33,"audioPan"],[267,35,202,41],[267,37,202,43],[268,6,202,43],[268,10,202,43,"_this7"],[268,16,202,43],[269,6,202,43],[269,17,202,43,"_asyncToGenerator2"],[269,35,202,43],[269,36,202,43,"default"],[269,43,202,43],[270,8,203,8],[270,15,203,15,"_this7"],[270,21,203,19],[270,22,203,20,"setStatusAsync"],[270,36,203,34],[270,37,203,35],[271,10,203,37,"volume"],[271,16,203,43],[272,10,203,45,"audioPan"],[273,8,203,54],[273,9,203,55],[273,10,203,56],[274,6,203,57],[275,4,204,4],[275,5,204,5],[276,4,205,10,"setIsMutedAsync"],[276,19,205,25,"setIsMutedAsync"],[276,20,205,26,"isMuted"],[276,27,205,33],[276,29,205,35],[277,6,205,35],[277,10,205,35,"_this8"],[277,16,205,35],[278,6,205,35],[278,17,205,35,"_asyncToGenerator2"],[278,35,205,35],[278,36,205,35,"default"],[278,43,205,35],[279,8,206,8],[279,15,206,15,"_this8"],[279,21,206,19],[279,22,206,20,"setStatusAsync"],[279,36,206,34],[279,37,206,35],[280,10,206,37,"isMuted"],[281,8,206,45],[281,9,206,46],[281,10,206,47],[282,6,206,48],[283,4,207,4],[283,5,207,5],[284,4,208,10,"setIsLoopingAsync"],[284,21,208,27,"setIsLoopingAsync"],[284,22,208,28,"isLooping"],[284,31,208,37],[284,33,208,39],[285,6,208,39],[285,10,208,39,"_this9"],[285,16,208,39],[286,6,208,39],[286,17,208,39,"_asyncToGenerator2"],[286,35,208,39],[286,36,208,39,"default"],[286,43,208,39],[287,8,209,8],[287,15,209,15,"_this9"],[287,21,209,19],[287,22,209,20,"setStatusAsync"],[287,36,209,34],[287,37,209,35],[288,10,209,37,"isLooping"],[289,8,209,47],[289,9,209,48],[289,10,209,49],[290,6,209,50],[291,4,210,4],[291,5,210,5],[292,4,211,10,"setProgressUpdateIntervalAsync"],[292,34,211,40,"setProgressUpdateIntervalAsync"],[292,35,211,41,"progressUpdateIntervalMillis"],[292,63,211,69],[292,65,211,71],[293,6,211,71],[293,10,211,71,"_this0"],[293,16,211,71],[294,6,211,71],[294,17,211,71,"_asyncToGenerator2"],[294,35,211,71],[294,36,211,71,"default"],[294,43,211,71],[295,8,212,8],[295,15,212,15,"_this0"],[295,21,212,19],[295,22,212,20,"setStatusAsync"],[295,36,212,34],[295,37,212,35],[296,10,212,37,"progressUpdateIntervalMillis"],[297,8,212,66],[297,9,212,67],[297,10,212,68],[298,6,212,69],[299,4,213,4],[300,2,214,0],[300,3,214,1],[301,0,214,2],[301,3]],"functionMap":{"names":["<global>","getNativeSourceFromSource","_getAssetFromPlaybackSource","assertStatusValuesInBounds","getNativeSourceAndFullInitialStatusForLoadAsync","getUnloadedStatus","PlaybackMixin.playAsync","PlaybackMixin.playFromPositionAsync","PlaybackMixin.pauseAsync","PlaybackMixin.stopAsync","PlaybackMixin.setPositionAsync","PlaybackMixin.setRateAsync","PlaybackMixin.setVolumeAsync","PlaybackMixin.setIsMutedAsync","PlaybackMixin.setIsLoopingAsync","PlaybackMixin.setProgressUpdateIntervalAsync"],"mappings":"AAA;OCiD;CDqC;AEC;CFY;OGK;CHU;OIK;CJkC;OKK;CLK;IMO;KNE;IOC;KPO;IQC;KRE;ISC;KTE;IUC;KVM;IWC;KXM;IYC;KZE;IaC;KbE;IcC;KdE;IeC;KfE"}},"type":"js/module"}]}