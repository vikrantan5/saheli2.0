{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;\n  /*\n    This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n    License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n  */\n  var REALTIME_PRESENCE_LISTEN_EVENTS;\n  (function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n  })(REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = REALTIME_PRESENCE_LISTEN_EVENTS = {}));\n  class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n      this.channel = channel;\n      this.state = {};\n      this.pendingDiffs = [];\n      this.joinRef = null;\n      this.enabled = false;\n      this.caller = {\n        onJoin: () => {},\n        onLeave: () => {},\n        onSync: () => {}\n      };\n      const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n        state: 'presence_state',\n        diff: 'presence_diff'\n      };\n      this.channel._on(events.state, {}, newState => {\n        const {\n          onJoin,\n          onLeave,\n          onSync\n        } = this.caller;\n        this.joinRef = this.channel._joinRef();\n        this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n        this.pendingDiffs.forEach(diff => {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n        });\n        this.pendingDiffs = [];\n        onSync();\n      });\n      this.channel._on(events.diff, {}, diff => {\n        const {\n          onJoin,\n          onLeave,\n          onSync\n        } = this.caller;\n        if (this.inPendingSyncState()) {\n          this.pendingDiffs.push(diff);\n        } else {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n          onSync();\n        }\n      });\n      this.onJoin((key, currentPresences, newPresences) => {\n        this.channel._trigger('presence', {\n          event: 'join',\n          key,\n          currentPresences,\n          newPresences\n        });\n      });\n      this.onLeave((key, currentPresences, leftPresences) => {\n        this.channel._trigger('presence', {\n          event: 'leave',\n          key,\n          currentPresences,\n          leftPresences\n        });\n      });\n      this.onSync(() => {\n        this.channel._trigger('presence', {\n          event: 'sync'\n        });\n      });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n      const state = this.cloneDeep(currentState);\n      const transformedState = this.transformState(newState);\n      const joins = {};\n      const leaves = {};\n      this.map(state, (key, presences) => {\n        if (!transformedState[key]) {\n          leaves[key] = presences;\n        }\n      });\n      this.map(transformedState, (key, newPresences) => {\n        const currentPresences = state[key];\n        if (currentPresences) {\n          const newPresenceRefs = newPresences.map(m => m.presence_ref);\n          const curPresenceRefs = currentPresences.map(m => m.presence_ref);\n          const joinedPresences = newPresences.filter(m => curPresenceRefs.indexOf(m.presence_ref) < 0);\n          const leftPresences = currentPresences.filter(m => newPresenceRefs.indexOf(m.presence_ref) < 0);\n          if (joinedPresences.length > 0) {\n            joins[key] = joinedPresences;\n          }\n          if (leftPresences.length > 0) {\n            leaves[key] = leftPresences;\n          }\n        } else {\n          joins[key] = newPresences;\n        }\n      });\n      return this.syncDiff(state, {\n        joins,\n        leaves\n      }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n      const {\n        joins,\n        leaves\n      } = {\n        joins: this.transformState(diff.joins),\n        leaves: this.transformState(diff.leaves)\n      };\n      if (!onJoin) {\n        onJoin = () => {};\n      }\n      if (!onLeave) {\n        onLeave = () => {};\n      }\n      this.map(joins, (key, newPresences) => {\n        var _a;\n        const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n        state[key] = this.cloneDeep(newPresences);\n        if (currentPresences.length > 0) {\n          const joinedPresenceRefs = state[key].map(m => m.presence_ref);\n          const curPresences = currentPresences.filter(m => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n          state[key].unshift(...curPresences);\n        }\n        onJoin(key, currentPresences, newPresences);\n      });\n      this.map(leaves, (key, leftPresences) => {\n        let currentPresences = state[key];\n        if (!currentPresences) return;\n        const presenceRefsToRemove = leftPresences.map(m => m.presence_ref);\n        currentPresences = currentPresences.filter(m => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n        state[key] = currentPresences;\n        onLeave(key, currentPresences, leftPresences);\n        if (currentPresences.length === 0) delete state[key];\n      });\n      return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n      return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n      state = this.cloneDeep(state);\n      return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n        const presences = state[key];\n        if ('metas' in presences) {\n          newState[key] = presences.metas.map(presence => {\n            presence['presence_ref'] = presence['phx_ref'];\n            delete presence['phx_ref'];\n            delete presence['phx_ref_prev'];\n            return presence;\n          });\n        } else {\n          newState[key] = presences;\n        }\n        return newState;\n      }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n      this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n      this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n      this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n      return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n  }\n  exports.default = RealtimePresence;\n});","lineCount":242,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,2,5,7],[10,6,5,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[10,37,5,42],[11,2,6,0],[11,3,6,1],[11,13,6,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[11,44,6,42],[11,46,6,44],[12,4,7,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[12,35,7,35],[12,36,7,36],[12,42,7,42],[12,43,7,43],[12,46,7,46],[12,52,7,52],[13,4,8,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[13,35,8,35],[13,36,8,36],[13,42,8,42],[13,43,8,43],[13,46,8,46],[13,52,8,52],[14,4,9,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[14,35,9,35],[14,36,9,36],[14,43,9,43],[14,44,9,44],[14,47,9,47],[14,54,9,54],[15,2,10,0],[15,3,10,1],[15,5,10,3,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,36,10,34],[15,41,10,34,"exports"],[15,48,10,34],[15,49,10,34,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,80,10,34],[15,83,10,39,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,114,10,70],[15,117,10,73],[15,118,10,74],[15,119,10,75],[15,120,10,76],[15,121,10,77],[16,2,11,15],[16,8,11,21,"RealtimePresence"],[16,24,11,37],[16,25,11,38],[17,4,12,4],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,4,19,4,"constructor"],[24,15,19,15,"constructor"],[24,16,19,16,"channel"],[24,23,19,23],[24,25,19,25,"opts"],[24,29,19,29],[24,31,19,31],[25,6,20,8],[25,10,20,12],[25,11,20,13,"channel"],[25,18,20,20],[25,21,20,23,"channel"],[25,28,20,30],[26,6,21,8],[26,10,21,12],[26,11,21,13,"state"],[26,16,21,18],[26,19,21,21],[26,20,21,22],[26,21,21,23],[27,6,22,8],[27,10,22,12],[27,11,22,13,"pendingDiffs"],[27,23,22,25],[27,26,22,28],[27,28,22,30],[28,6,23,8],[28,10,23,12],[28,11,23,13,"joinRef"],[28,18,23,20],[28,21,23,23],[28,25,23,27],[29,6,24,8],[29,10,24,12],[29,11,24,13,"enabled"],[29,18,24,20],[29,21,24,23],[29,26,24,28],[30,6,25,8],[30,10,25,12],[30,11,25,13,"caller"],[30,17,25,19],[30,20,25,22],[31,8,26,12,"onJoin"],[31,14,26,18],[31,16,26,20,"onJoin"],[31,17,26,20],[31,22,26,26],[31,23,26,28],[31,24,26,29],[32,8,27,12,"onLeave"],[32,15,27,19],[32,17,27,21,"onLeave"],[32,18,27,21],[32,23,27,27],[32,24,27,29],[32,25,27,30],[33,8,28,12,"onSync"],[33,14,28,18],[33,16,28,20,"onSync"],[33,17,28,20],[33,22,28,26],[33,23,28,28],[34,6,29,8],[34,7,29,9],[35,6,30,8],[35,12,30,14,"events"],[35,18,30,20],[35,21,30,23],[35,22,30,24,"opts"],[35,26,30,28],[35,31,30,33],[35,35,30,37],[35,39,30,41,"opts"],[35,43,30,45],[35,48,30,50],[35,53,30,55],[35,54,30,56],[35,57,30,59],[35,62,30,64],[35,63,30,65],[35,66,30,68,"opts"],[35,70,30,72],[35,71,30,73,"events"],[35,77,30,79],[35,82,30,84],[36,8,31,12,"state"],[36,13,31,17],[36,15,31,19],[36,31,31,35],[37,8,32,12,"diff"],[37,12,32,16],[37,14,32,18],[38,6,33,8],[38,7,33,9],[39,6,34,8],[39,10,34,12],[39,11,34,13,"channel"],[39,18,34,20],[39,19,34,21,"_on"],[39,22,34,24],[39,23,34,25,"events"],[39,29,34,31],[39,30,34,32,"state"],[39,35,34,37],[39,37,34,39],[39,38,34,40],[39,39,34,41],[39,41,34,44,"newState"],[39,49,34,52],[39,53,34,57],[40,8,35,12],[40,14,35,18],[41,10,35,20,"onJoin"],[41,16,35,26],[42,10,35,28,"onLeave"],[42,17,35,35],[43,10,35,37,"onSync"],[44,8,35,44],[44,9,35,45],[44,12,35,48],[44,16,35,52],[44,17,35,53,"caller"],[44,23,35,59],[45,8,36,12],[45,12,36,16],[45,13,36,17,"joinRef"],[45,20,36,24],[45,23,36,27],[45,27,36,31],[45,28,36,32,"channel"],[45,35,36,39],[45,36,36,40,"_joinRef"],[45,44,36,48],[45,45,36,49],[45,46,36,50],[46,8,37,12],[46,12,37,16],[46,13,37,17,"state"],[46,18,37,22],[46,21,37,25,"RealtimePresence"],[46,37,37,41],[46,38,37,42,"syncState"],[46,47,37,51],[46,48,37,52],[46,52,37,56],[46,53,37,57,"state"],[46,58,37,62],[46,60,37,64,"newState"],[46,68,37,72],[46,70,37,74,"onJoin"],[46,76,37,80],[46,78,37,82,"onLeave"],[46,85,37,89],[46,86,37,90],[47,8,38,12],[47,12,38,16],[47,13,38,17,"pendingDiffs"],[47,25,38,29],[47,26,38,30,"forEach"],[47,33,38,37],[47,34,38,39,"diff"],[47,38,38,43],[47,42,38,48],[48,10,39,16],[48,14,39,20],[48,15,39,21,"state"],[48,20,39,26],[48,23,39,29,"RealtimePresence"],[48,39,39,45],[48,40,39,46,"syncDiff"],[48,48,39,54],[48,49,39,55],[48,53,39,59],[48,54,39,60,"state"],[48,59,39,65],[48,61,39,67,"diff"],[48,65,39,71],[48,67,39,73,"onJoin"],[48,73,39,79],[48,75,39,81,"onLeave"],[48,82,39,88],[48,83,39,89],[49,8,40,12],[49,9,40,13],[49,10,40,14],[50,8,41,12],[50,12,41,16],[50,13,41,17,"pendingDiffs"],[50,25,41,29],[50,28,41,32],[50,30,41,34],[51,8,42,12,"onSync"],[51,14,42,18],[51,15,42,19],[51,16,42,20],[52,6,43,8],[52,7,43,9],[52,8,43,10],[53,6,44,8],[53,10,44,12],[53,11,44,13,"channel"],[53,18,44,20],[53,19,44,21,"_on"],[53,22,44,24],[53,23,44,25,"events"],[53,29,44,31],[53,30,44,32,"diff"],[53,34,44,36],[53,36,44,38],[53,37,44,39],[53,38,44,40],[53,40,44,43,"diff"],[53,44,44,47],[53,48,44,52],[54,8,45,12],[54,14,45,18],[55,10,45,20,"onJoin"],[55,16,45,26],[56,10,45,28,"onLeave"],[56,17,45,35],[57,10,45,37,"onSync"],[58,8,45,44],[58,9,45,45],[58,12,45,48],[58,16,45,52],[58,17,45,53,"caller"],[58,23,45,59],[59,8,46,12],[59,12,46,16],[59,16,46,20],[59,17,46,21,"inPendingSyncState"],[59,35,46,39],[59,36,46,40],[59,37,46,41],[59,39,46,43],[60,10,47,16],[60,14,47,20],[60,15,47,21,"pendingDiffs"],[60,27,47,33],[60,28,47,34,"push"],[60,32,47,38],[60,33,47,39,"diff"],[60,37,47,43],[60,38,47,44],[61,8,48,12],[61,9,48,13],[61,15,49,17],[62,10,50,16],[62,14,50,20],[62,15,50,21,"state"],[62,20,50,26],[62,23,50,29,"RealtimePresence"],[62,39,50,45],[62,40,50,46,"syncDiff"],[62,48,50,54],[62,49,50,55],[62,53,50,59],[62,54,50,60,"state"],[62,59,50,65],[62,61,50,67,"diff"],[62,65,50,71],[62,67,50,73,"onJoin"],[62,73,50,79],[62,75,50,81,"onLeave"],[62,82,50,88],[62,83,50,89],[63,10,51,16,"onSync"],[63,16,51,22],[63,17,51,23],[63,18,51,24],[64,8,52,12],[65,6,53,8],[65,7,53,9],[65,8,53,10],[66,6,54,8],[66,10,54,12],[66,11,54,13,"onJoin"],[66,17,54,19],[66,18,54,20],[66,19,54,21,"key"],[66,22,54,24],[66,24,54,26,"currentPresences"],[66,40,54,42],[66,42,54,44,"newPresences"],[66,54,54,56],[66,59,54,61],[67,8,55,12],[67,12,55,16],[67,13,55,17,"channel"],[67,20,55,24],[67,21,55,25,"_trigger"],[67,29,55,33],[67,30,55,34],[67,40,55,44],[67,42,55,46],[68,10,56,16,"event"],[68,15,56,21],[68,17,56,23],[68,23,56,29],[69,10,57,16,"key"],[69,13,57,19],[70,10,58,16,"currentPresences"],[70,26,58,32],[71,10,59,16,"newPresences"],[72,8,60,12],[72,9,60,13],[72,10,60,14],[73,6,61,8],[73,7,61,9],[73,8,61,10],[74,6,62,8],[74,10,62,12],[74,11,62,13,"onLeave"],[74,18,62,20],[74,19,62,21],[74,20,62,22,"key"],[74,23,62,25],[74,25,62,27,"currentPresences"],[74,41,62,43],[74,43,62,45,"leftPresences"],[74,56,62,58],[74,61,62,63],[75,8,63,12],[75,12,63,16],[75,13,63,17,"channel"],[75,20,63,24],[75,21,63,25,"_trigger"],[75,29,63,33],[75,30,63,34],[75,40,63,44],[75,42,63,46],[76,10,64,16,"event"],[76,15,64,21],[76,17,64,23],[76,24,64,30],[77,10,65,16,"key"],[77,13,65,19],[78,10,66,16,"currentPresences"],[78,26,66,32],[79,10,67,16,"leftPresences"],[80,8,68,12],[80,9,68,13],[80,10,68,14],[81,6,69,8],[81,7,69,9],[81,8,69,10],[82,6,70,8],[82,10,70,12],[82,11,70,13,"onSync"],[82,17,70,19],[82,18,70,20],[82,24,70,26],[83,8,71,12],[83,12,71,16],[83,13,71,17,"channel"],[83,20,71,24],[83,21,71,25,"_trigger"],[83,29,71,33],[83,30,71,34],[83,40,71,44],[83,42,71,46],[84,10,71,48,"event"],[84,15,71,53],[84,17,71,55],[85,8,71,62],[85,9,71,63],[85,10,71,64],[86,6,72,8],[86,7,72,9],[86,8,72,10],[87,4,73,4],[88,4,74,4],[89,0,75,0],[90,0,76,0],[91,0,77,0],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,4,84,4],[98,11,84,11,"syncState"],[98,20,84,20,"syncState"],[98,21,84,21,"currentState"],[98,33,84,33],[98,35,84,35,"newState"],[98,43,84,43],[98,45,84,45,"onJoin"],[98,51,84,51],[98,53,84,53,"onLeave"],[98,60,84,60],[98,62,84,62],[99,6,85,8],[99,12,85,14,"state"],[99,17,85,19],[99,20,85,22],[99,24,85,26],[99,25,85,27,"cloneDeep"],[99,34,85,36],[99,35,85,37,"currentState"],[99,47,85,49],[99,48,85,50],[100,6,86,8],[100,12,86,14,"transformedState"],[100,28,86,30],[100,31,86,33],[100,35,86,37],[100,36,86,38,"transformState"],[100,50,86,52],[100,51,86,53,"newState"],[100,59,86,61],[100,60,86,62],[101,6,87,8],[101,12,87,14,"joins"],[101,17,87,19],[101,20,87,22],[101,21,87,23],[101,22,87,24],[102,6,88,8],[102,12,88,14,"leaves"],[102,18,88,20],[102,21,88,23],[102,22,88,24],[102,23,88,25],[103,6,89,8],[103,10,89,12],[103,11,89,13,"map"],[103,14,89,16],[103,15,89,17,"state"],[103,20,89,22],[103,22,89,24],[103,23,89,25,"key"],[103,26,89,28],[103,28,89,30,"presences"],[103,37,89,39],[103,42,89,44],[104,8,90,12],[104,12,90,16],[104,13,90,17,"transformedState"],[104,29,90,33],[104,30,90,34,"key"],[104,33,90,37],[104,34,90,38],[104,36,90,40],[105,10,91,16,"leaves"],[105,16,91,22],[105,17,91,23,"key"],[105,20,91,26],[105,21,91,27],[105,24,91,30,"presences"],[105,33,91,39],[106,8,92,12],[107,6,93,8],[107,7,93,9],[107,8,93,10],[108,6,94,8],[108,10,94,12],[108,11,94,13,"map"],[108,14,94,16],[108,15,94,17,"transformedState"],[108,31,94,33],[108,33,94,35],[108,34,94,36,"key"],[108,37,94,39],[108,39,94,41,"newPresences"],[108,51,94,53],[108,56,94,58],[109,8,95,12],[109,14,95,18,"currentPresences"],[109,30,95,34],[109,33,95,37,"state"],[109,38,95,42],[109,39,95,43,"key"],[109,42,95,46],[109,43,95,47],[110,8,96,12],[110,12,96,16,"currentPresences"],[110,28,96,32],[110,30,96,34],[111,10,97,16],[111,16,97,22,"newPresenceRefs"],[111,31,97,37],[111,34,97,40,"newPresences"],[111,46,97,52],[111,47,97,53,"map"],[111,50,97,56],[111,51,97,58,"m"],[111,52,97,59],[111,56,97,64,"m"],[111,57,97,65],[111,58,97,66,"presence_ref"],[111,70,97,78],[111,71,97,79],[112,10,98,16],[112,16,98,22,"curPresenceRefs"],[112,31,98,37],[112,34,98,40,"currentPresences"],[112,50,98,56],[112,51,98,57,"map"],[112,54,98,60],[112,55,98,62,"m"],[112,56,98,63],[112,60,98,68,"m"],[112,61,98,69],[112,62,98,70,"presence_ref"],[112,74,98,82],[112,75,98,83],[113,10,99,16],[113,16,99,22,"joinedPresences"],[113,31,99,37],[113,34,99,40,"newPresences"],[113,46,99,52],[113,47,99,53,"filter"],[113,53,99,59],[113,54,99,61,"m"],[113,55,99,62],[113,59,99,67,"curPresenceRefs"],[113,74,99,82],[113,75,99,83,"indexOf"],[113,82,99,90],[113,83,99,91,"m"],[113,84,99,92],[113,85,99,93,"presence_ref"],[113,97,99,105],[113,98,99,106],[113,101,99,109],[113,102,99,110],[113,103,99,111],[114,10,100,16],[114,16,100,22,"leftPresences"],[114,29,100,35],[114,32,100,38,"currentPresences"],[114,48,100,54],[114,49,100,55,"filter"],[114,55,100,61],[114,56,100,63,"m"],[114,57,100,64],[114,61,100,69,"newPresenceRefs"],[114,76,100,84],[114,77,100,85,"indexOf"],[114,84,100,92],[114,85,100,93,"m"],[114,86,100,94],[114,87,100,95,"presence_ref"],[114,99,100,107],[114,100,100,108],[114,103,100,111],[114,104,100,112],[114,105,100,113],[115,10,101,16],[115,14,101,20,"joinedPresences"],[115,29,101,35],[115,30,101,36,"length"],[115,36,101,42],[115,39,101,45],[115,40,101,46],[115,42,101,48],[116,12,102,20,"joins"],[116,17,102,25],[116,18,102,26,"key"],[116,21,102,29],[116,22,102,30],[116,25,102,33,"joinedPresences"],[116,40,102,48],[117,10,103,16],[118,10,104,16],[118,14,104,20,"leftPresences"],[118,27,104,33],[118,28,104,34,"length"],[118,34,104,40],[118,37,104,43],[118,38,104,44],[118,40,104,46],[119,12,105,20,"leaves"],[119,18,105,26],[119,19,105,27,"key"],[119,22,105,30],[119,23,105,31],[119,26,105,34,"leftPresences"],[119,39,105,47],[120,10,106,16],[121,8,107,12],[121,9,107,13],[121,15,108,17],[122,10,109,16,"joins"],[122,15,109,21],[122,16,109,22,"key"],[122,19,109,25],[122,20,109,26],[122,23,109,29,"newPresences"],[122,35,109,41],[123,8,110,12],[124,6,111,8],[124,7,111,9],[124,8,111,10],[125,6,112,8],[125,13,112,15],[125,17,112,19],[125,18,112,20,"syncDiff"],[125,26,112,28],[125,27,112,29,"state"],[125,32,112,34],[125,34,112,36],[126,8,112,38,"joins"],[126,13,112,43],[127,8,112,45,"leaves"],[128,6,112,52],[128,7,112,53],[128,9,112,55,"onJoin"],[128,15,112,61],[128,17,112,63,"onLeave"],[128,24,112,70],[128,25,112,71],[129,4,113,4],[130,4,114,4],[131,0,115,0],[132,0,116,0],[133,0,117,0],[134,0,118,0],[135,0,119,0],[136,0,120,0],[137,0,121,0],[138,0,122,0],[139,0,123,0],[140,4,124,4],[140,11,124,11,"syncDiff"],[140,19,124,19,"syncDiff"],[140,20,124,20,"state"],[140,25,124,25],[140,27,124,27,"diff"],[140,31,124,31],[140,33,124,33,"onJoin"],[140,39,124,39],[140,41,124,41,"onLeave"],[140,48,124,48],[140,50,124,50],[141,6,125,8],[141,12,125,14],[142,8,125,16,"joins"],[142,13,125,21],[143,8,125,23,"leaves"],[144,6,125,30],[144,7,125,31],[144,10,125,34],[145,8,126,12,"joins"],[145,13,126,17],[145,15,126,19],[145,19,126,23],[145,20,126,24,"transformState"],[145,34,126,38],[145,35,126,39,"diff"],[145,39,126,43],[145,40,126,44,"joins"],[145,45,126,49],[145,46,126,50],[146,8,127,12,"leaves"],[146,14,127,18],[146,16,127,20],[146,20,127,24],[146,21,127,25,"transformState"],[146,35,127,39],[146,36,127,40,"diff"],[146,40,127,44],[146,41,127,45,"leaves"],[146,47,127,51],[147,6,128,8],[147,7,128,9],[148,6,129,8],[148,10,129,12],[148,11,129,13,"onJoin"],[148,17,129,19],[148,19,129,21],[149,8,130,12,"onJoin"],[149,14,130,18],[149,17,130,21,"onJoin"],[149,18,130,21],[149,23,130,27],[149,24,130,29],[149,25,130,30],[150,6,131,8],[151,6,132,8],[151,10,132,12],[151,11,132,13,"onLeave"],[151,18,132,20],[151,20,132,22],[152,8,133,12,"onLeave"],[152,15,133,19],[152,18,133,22,"onLeave"],[152,19,133,22],[152,24,133,28],[152,25,133,30],[152,26,133,31],[153,6,134,8],[154,6,135,8],[154,10,135,12],[154,11,135,13,"map"],[154,14,135,16],[154,15,135,17,"joins"],[154,20,135,22],[154,22,135,24],[154,23,135,25,"key"],[154,26,135,28],[154,28,135,30,"newPresences"],[154,40,135,42],[154,45,135,47],[155,8,136,12],[155,12,136,16,"_a"],[155,14,136,18],[156,8,137,12],[156,14,137,18,"currentPresences"],[156,30,137,34],[156,33,137,37],[156,34,137,38,"_a"],[156,36,137,40],[156,39,137,43,"state"],[156,44,137,48],[156,45,137,49,"key"],[156,48,137,52],[156,49,137,53],[156,55,137,59],[156,59,137,63],[156,63,137,67,"_a"],[156,65,137,69],[156,70,137,74],[156,75,137,79],[156,76,137,80],[156,79,137,83,"_a"],[156,81,137,85],[156,84,137,88],[156,86,137,90],[157,8,138,12,"state"],[157,13,138,17],[157,14,138,18,"key"],[157,17,138,21],[157,18,138,22],[157,21,138,25],[157,25,138,29],[157,26,138,30,"cloneDeep"],[157,35,138,39],[157,36,138,40,"newPresences"],[157,48,138,52],[157,49,138,53],[158,8,139,12],[158,12,139,16,"currentPresences"],[158,28,139,32],[158,29,139,33,"length"],[158,35,139,39],[158,38,139,42],[158,39,139,43],[158,41,139,45],[159,10,140,16],[159,16,140,22,"joinedPresenceRefs"],[159,34,140,40],[159,37,140,43,"state"],[159,42,140,48],[159,43,140,49,"key"],[159,46,140,52],[159,47,140,53],[159,48,140,54,"map"],[159,51,140,57],[159,52,140,59,"m"],[159,53,140,60],[159,57,140,65,"m"],[159,58,140,66],[159,59,140,67,"presence_ref"],[159,71,140,79],[159,72,140,80],[160,10,141,16],[160,16,141,22,"curPresences"],[160,28,141,34],[160,31,141,37,"currentPresences"],[160,47,141,53],[160,48,141,54,"filter"],[160,54,141,60],[160,55,141,62,"m"],[160,56,141,63],[160,60,141,68,"joinedPresenceRefs"],[160,78,141,86],[160,79,141,87,"indexOf"],[160,86,141,94],[160,87,141,95,"m"],[160,88,141,96],[160,89,141,97,"presence_ref"],[160,101,141,109],[160,102,141,110],[160,105,141,113],[160,106,141,114],[160,107,141,115],[161,10,142,16,"state"],[161,15,142,21],[161,16,142,22,"key"],[161,19,142,25],[161,20,142,26],[161,21,142,27,"unshift"],[161,28,142,34],[161,29,142,35],[161,32,142,38,"curPresences"],[161,44,142,50],[161,45,142,51],[162,8,143,12],[163,8,144,12,"onJoin"],[163,14,144,18],[163,15,144,19,"key"],[163,18,144,22],[163,20,144,24,"currentPresences"],[163,36,144,40],[163,38,144,42,"newPresences"],[163,50,144,54],[163,51,144,55],[164,6,145,8],[164,7,145,9],[164,8,145,10],[165,6,146,8],[165,10,146,12],[165,11,146,13,"map"],[165,14,146,16],[165,15,146,17,"leaves"],[165,21,146,23],[165,23,146,25],[165,24,146,26,"key"],[165,27,146,29],[165,29,146,31,"leftPresences"],[165,42,146,44],[165,47,146,49],[166,8,147,12],[166,12,147,16,"currentPresences"],[166,28,147,32],[166,31,147,35,"state"],[166,36,147,40],[166,37,147,41,"key"],[166,40,147,44],[166,41,147,45],[167,8,148,12],[167,12,148,16],[167,13,148,17,"currentPresences"],[167,29,148,33],[167,31,149,16],[168,8,150,12],[168,14,150,18,"presenceRefsToRemove"],[168,34,150,38],[168,37,150,41,"leftPresences"],[168,50,150,54],[168,51,150,55,"map"],[168,54,150,58],[168,55,150,60,"m"],[168,56,150,61],[168,60,150,66,"m"],[168,61,150,67],[168,62,150,68,"presence_ref"],[168,74,150,80],[168,75,150,81],[169,8,151,12,"currentPresences"],[169,24,151,28],[169,27,151,31,"currentPresences"],[169,43,151,47],[169,44,151,48,"filter"],[169,50,151,54],[169,51,151,56,"m"],[169,52,151,57],[169,56,151,62,"presenceRefsToRemove"],[169,76,151,82],[169,77,151,83,"indexOf"],[169,84,151,90],[169,85,151,91,"m"],[169,86,151,92],[169,87,151,93,"presence_ref"],[169,99,151,105],[169,100,151,106],[169,103,151,109],[169,104,151,110],[169,105,151,111],[170,8,152,12,"state"],[170,13,152,17],[170,14,152,18,"key"],[170,17,152,21],[170,18,152,22],[170,21,152,25,"currentPresences"],[170,37,152,41],[171,8,153,12,"onLeave"],[171,15,153,19],[171,16,153,20,"key"],[171,19,153,23],[171,21,153,25,"currentPresences"],[171,37,153,41],[171,39,153,43,"leftPresences"],[171,52,153,56],[171,53,153,57],[172,8,154,12],[172,12,154,16,"currentPresences"],[172,28,154,32],[172,29,154,33,"length"],[172,35,154,39],[172,40,154,44],[172,41,154,45],[172,43,155,16],[172,50,155,23,"state"],[172,55,155,28],[172,56,155,29,"key"],[172,59,155,32],[172,60,155,33],[173,6,156,8],[173,7,156,9],[173,8,156,10],[174,6,157,8],[174,13,157,15,"state"],[174,18,157,20],[175,4,158,4],[176,4,159,4],[177,4,160,4],[177,11,160,11,"map"],[177,14,160,14,"map"],[177,15,160,15,"obj"],[177,18,160,18],[177,20,160,20,"func"],[177,24,160,24],[177,26,160,26],[178,6,161,8],[178,13,161,15,"Object"],[178,19,161,21],[178,20,161,22,"getOwnPropertyNames"],[178,39,161,41],[178,40,161,42,"obj"],[178,43,161,45],[178,44,161,46],[178,45,161,47,"map"],[178,48,161,50],[178,49,161,52,"key"],[178,52,161,55],[178,56,161,60,"func"],[178,60,161,64],[178,61,161,65,"key"],[178,64,161,68],[178,66,161,70,"obj"],[178,69,161,73],[178,70,161,74,"key"],[178,73,161,77],[178,74,161,78],[178,75,161,79],[178,76,161,80],[179,4,162,4],[180,4,163,4],[181,0,164,0],[182,0,165,0],[183,0,166,0],[184,0,167,0],[185,0,168,0],[186,0,169,0],[187,0,170,0],[188,0,171,0],[189,0,172,0],[190,0,173,0],[191,0,174,0],[192,0,175,0],[193,0,176,0],[194,0,177,0],[195,0,178,0],[196,0,179,0],[197,0,180,0],[198,0,181,0],[199,0,182,0],[200,0,183,0],[201,0,184,0],[202,0,185,0],[203,4,186,4],[203,11,186,11,"transformState"],[203,25,186,25,"transformState"],[203,26,186,26,"state"],[203,31,186,31],[203,33,186,33],[204,6,187,8,"state"],[204,11,187,13],[204,14,187,16],[204,18,187,20],[204,19,187,21,"cloneDeep"],[204,28,187,30],[204,29,187,31,"state"],[204,34,187,36],[204,35,187,37],[205,6,188,8],[205,13,188,15,"Object"],[205,19,188,21],[205,20,188,22,"getOwnPropertyNames"],[205,39,188,41],[205,40,188,42,"state"],[205,45,188,47],[205,46,188,48],[205,47,188,49,"reduce"],[205,53,188,55],[205,54,188,56],[205,55,188,57,"newState"],[205,63,188,65],[205,65,188,67,"key"],[205,68,188,70],[205,73,188,75],[206,8,189,12],[206,14,189,18,"presences"],[206,23,189,27],[206,26,189,30,"state"],[206,31,189,35],[206,32,189,36,"key"],[206,35,189,39],[206,36,189,40],[207,8,190,12],[207,12,190,16],[207,19,190,23],[207,23,190,27,"presences"],[207,32,190,36],[207,34,190,38],[208,10,191,16,"newState"],[208,18,191,24],[208,19,191,25,"key"],[208,22,191,28],[208,23,191,29],[208,26,191,32,"presences"],[208,35,191,41],[208,36,191,42,"metas"],[208,41,191,47],[208,42,191,48,"map"],[208,45,191,51],[208,46,191,53,"presence"],[208,54,191,61],[208,58,191,66],[209,12,192,20,"presence"],[209,20,192,28],[209,21,192,29],[209,35,192,43],[209,36,192,44],[209,39,192,47,"presence"],[209,47,192,55],[209,48,192,56],[209,57,192,65],[209,58,192,66],[210,12,193,20],[210,19,193,27,"presence"],[210,27,193,35],[210,28,193,36],[210,37,193,45],[210,38,193,46],[211,12,194,20],[211,19,194,27,"presence"],[211,27,194,35],[211,28,194,36],[211,42,194,50],[211,43,194,51],[212,12,195,20],[212,19,195,27,"presence"],[212,27,195,35],[213,10,196,16],[213,11,196,17],[213,12,196,18],[214,8,197,12],[214,9,197,13],[214,15,198,17],[215,10,199,16,"newState"],[215,18,199,24],[215,19,199,25,"key"],[215,22,199,28],[215,23,199,29],[215,26,199,32,"presences"],[215,35,199,41],[216,8,200,12],[217,8,201,12],[217,15,201,19,"newState"],[217,23,201,27],[218,6,202,8],[218,7,202,9],[218,9,202,11],[218,10,202,12],[218,11,202,13],[218,12,202,14],[219,4,203,4],[220,4,204,4],[221,4,205,4],[221,11,205,11,"cloneDeep"],[221,20,205,20,"cloneDeep"],[221,21,205,21,"obj"],[221,24,205,24],[221,26,205,26],[222,6,206,8],[222,13,206,15,"JSON"],[222,17,206,19],[222,18,206,20,"parse"],[222,23,206,25],[222,24,206,26,"JSON"],[222,28,206,30],[222,29,206,31,"stringify"],[222,38,206,40],[222,39,206,41,"obj"],[222,42,206,44],[222,43,206,45],[222,44,206,46],[223,4,207,4],[224,4,208,4],[225,4,209,4,"onJoin"],[225,10,209,10,"onJoin"],[225,11,209,11,"callback"],[225,19,209,19],[225,21,209,21],[226,6,210,8],[226,10,210,12],[226,11,210,13,"caller"],[226,17,210,19],[226,18,210,20,"onJoin"],[226,24,210,26],[226,27,210,29,"callback"],[226,35,210,37],[227,4,211,4],[228,4,212,4],[229,4,213,4,"onLeave"],[229,11,213,11,"onLeave"],[229,12,213,12,"callback"],[229,20,213,20],[229,22,213,22],[230,6,214,8],[230,10,214,12],[230,11,214,13,"caller"],[230,17,214,19],[230,18,214,20,"onLeave"],[230,25,214,27],[230,28,214,30,"callback"],[230,36,214,38],[231,4,215,4],[232,4,216,4],[233,4,217,4,"onSync"],[233,10,217,10,"onSync"],[233,11,217,11,"callback"],[233,19,217,19],[233,21,217,21],[234,6,218,8],[234,10,218,12],[234,11,218,13,"caller"],[234,17,218,19],[234,18,218,20,"onSync"],[234,24,218,26],[234,27,218,29,"callback"],[234,35,218,37],[235,4,219,4],[236,4,220,4],[237,4,221,4,"inPendingSyncState"],[237,22,221,22,"inPendingSyncState"],[237,23,221,22],[237,25,221,25],[238,6,222,8],[238,13,222,15],[238,14,222,16],[238,18,222,20],[238,19,222,21,"joinRef"],[238,26,222,28],[238,30,222,32],[238,34,222,36],[238,35,222,37,"joinRef"],[238,42,222,44],[238,47,222,49],[238,51,222,53],[238,52,222,54,"channel"],[238,59,222,61],[238,60,222,62,"_joinRef"],[238,68,222,70],[238,69,222,71],[238,70,222,72],[239,4,223,4],[240,2,224,0],[241,2,224,1,"exports"],[241,9,224,1],[241,10,224,1,"default"],[241,17,224,1],[241,20,224,1,"RealtimePresence"],[241,36,224,1],[242,0,224,1],[242,3]],"functionMap":{"names":["<global>","<anonymous>","RealtimePresence","constructor","caller.onJoin","caller.onLeave","caller.onSync","channel._on$argument_2","pendingDiffs.forEach$argument_0","onJoin$argument_0","onLeave$argument_0","onSync$argument_0","syncState","map$argument_1","newPresences.map$argument_0","currentPresences.map$argument_0","newPresences.filter$argument_0","currentPresences.filter$argument_0","syncDiff","onJoin","onLeave","state.key.map$argument_0","leftPresences.map$argument_0","map","Object.getOwnPropertyNames.map$argument_0","transformState","Object.getOwnPropertyNames.reduce$argument_0","presences.metas.map$argument_0","cloneDeep","onSync","inPendingSyncState"],"mappings":"AAA;CCK;CDI;eEC;ICQ;oBCO,SD;qBEC,SF;oBGC,SH;2CIM;sCCI;aDE;SJG;0CIC;SJS;oBMC;SNO;qBOC;SPO;oBQC;SRE;KDC;IUW;wBCK;SDI;mCCC;yDCG,qBD;6DEC,qBF;4DGC,kDH;8DIC,kDJ;SDW;KVE;IgBW;qBCM,SD;sBEG,SF;wBLE;0DQK,qBR;6DIC,qDJ;SKI;yBLC;2DSI,qBT;uDIC,uDJ;SKK;KhBE;IqBE;mDCC,4BD;KrBC;IuBwB;wDCE;oDCG;iBDK;SDM;KvBC;I0BE;K1BE;IiBE;KjBE;IkBE;KlBE;I2BE;K3BE;I4BE;K5BE;CFC"}},"type":"js/module"}]}