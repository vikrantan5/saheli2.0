{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.INT32_MAX = void 0;\n  exports.deepEqual = deepEqual;\n  exports.hasProperty = hasProperty;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    var previousArr = [null];\n    var currentArr = [...array];\n    var transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      var previous = previousArr[i];\n      var transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isReact19() {\n    return _react.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    var localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    var keys1 = Object.keys(obj1);\n    var keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (var key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  var INT32_MAX = exports.INT32_MAX = 2 ** 31 - 1;\n});","lineCount":96,"map":[[16,2,1,0],[16,6,1,0,"_react"],[16,12,1,0],[16,15,1,0,"_interopRequireDefault"],[16,37,1,0],[16,38,1,0,"require"],[16,45,1,0],[16,46,1,0,"_dependencyMap"],[16,60,1,0],[17,2,3,7],[17,11,3,16,"toArray"],[17,18,3,23,"toArray"],[17,19,3,27,"object"],[17,25,3,42],[17,27,3,49],[18,4,4,2],[18,8,4,6],[18,9,4,7,"Array"],[18,14,4,12],[18,15,4,13,"isArray"],[18,22,4,20],[18,23,4,21,"object"],[18,29,4,27],[18,30,4,28],[18,32,4,30],[19,6,5,4],[19,13,5,11],[19,14,5,12,"object"],[19,20,5,18],[19,21,5,19],[20,4,6,2],[21,4,8,2],[21,11,8,9,"object"],[21,17,8,15],[22,2,9,0],[23,2,15,7],[23,11,15,16,"withPrevAndCurrent"],[23,29,15,34,"withPrevAndCurrent"],[23,30,16,2,"array"],[23,35,16,12],[23,37,17,2,"mapFn"],[23,42,17,48],[23,44,18,17],[24,4,19,2],[24,8,19,8,"previousArr"],[24,19,19,43],[24,22,19,46],[24,23,19,47],[24,27,19,51],[24,28,19,52],[25,4,20,2],[25,8,20,8,"currentArr"],[25,18,20,18],[25,21,20,21],[25,22,20,22],[25,25,20,25,"array"],[25,30,20,30],[25,31,20,31],[26,4,21,2],[26,8,21,8,"transformedArr"],[26,22,21,37],[26,25,21,40],[26,27,21,42],[27,4,22,2,"currentArr"],[27,14,22,12],[27,15,22,13,"forEach"],[27,22,22,20],[27,23,22,21],[27,24,22,22,"current"],[27,31,22,29],[27,33,22,31,"i"],[27,34,22,32],[27,39,22,37],[28,6,23,4],[29,6,24,4],[30,6,25,4],[31,6,26,4],[31,10,26,10,"previous"],[31,18,26,18],[31,21,26,21,"previousArr"],[31,32,26,32],[31,33,26,33,"i"],[31,34,26,34],[31,35,26,57],[32,6,27,4],[32,10,27,10,"transformed"],[32,21,27,21],[32,24,27,24,"mapFn"],[32,29,27,29],[32,30,27,30,"previous"],[32,38,27,38],[32,40,27,40,"current"],[32,47,27,47],[32,48,27,48],[33,6,28,4,"previousArr"],[33,17,28,15],[33,18,28,16,"push"],[33,22,28,20],[33,23,28,21,"transformed"],[33,34,28,32],[33,35,28,33],[34,6,29,4,"transformedArr"],[34,20,29,18],[34,21,29,19,"push"],[34,25,29,23],[34,26,29,24,"transformed"],[34,37,29,35],[34,38,29,36],[35,4,30,2],[35,5,30,3],[35,6,30,4],[36,4,31,2],[36,11,31,9,"transformedArr"],[36,25,31,23],[37,2,32,0],[39,2,34,0],[40,2,35,7],[40,11,35,16,"hasProperty"],[40,22,35,27,"hasProperty"],[40,23,35,28,"object"],[40,29,35,42],[40,31,35,44,"key"],[40,34,35,55],[40,36,35,57],[41,4,36,2],[41,11,36,9,"Object"],[41,17,36,15],[41,18,36,16,"prototype"],[41,27,36,25],[41,28,36,26,"hasOwnProperty"],[41,42,36,40],[41,43,36,41,"call"],[41,47,36,45],[41,48,36,46,"object"],[41,54,36,52],[41,56,36,54,"key"],[41,59,36,57],[41,60,36,58],[42,2,37,0],[43,2,39,7],[43,11,39,16,"isTestEnv"],[43,20,39,25,"isTestEnv"],[43,21,39,25],[43,23,39,37],[44,4,40,2],[45,4,41,2],[45,11,41,9,"hasProperty"],[45,22,41,20],[45,23,41,21,"global"],[45,29,41,27],[45,31,41,29],[45,40,41,38],[45,41,41,39],[45,45,41,43,"process"],[45,52,41,50],[45,53,41,51,"env"],[45,56,41,54],[45,57,41,55,"NODE_ENV"],[45,65,41,63],[45,70,41,68],[45,76,41,74],[46,2,42,0],[47,2,44,7],[47,11,44,16,"tagMessage"],[47,21,44,26,"tagMessage"],[47,22,44,27,"msg"],[47,25,44,38],[47,27,44,40],[48,4,45,2],[48,11,45,9],[48,45,45,43,"msg"],[48,48,45,46],[48,50,45,48],[49,2,46,0],[51,2,48,0],[52,2,49,0],[53,2,50,7],[53,11,50,16,"isFabric"],[53,19,50,24,"isFabric"],[53,20,50,24],[53,22,50,36],[54,4,51,2],[55,4,52,2],[55,11,52,9],[55,12,52,10],[55,13,52,11,"global"],[55,19,52,17],[55,21,52,19,"nativeFabricUIManager"],[55,42,52,40],[56,2,53,0],[57,2,55,7],[57,11,55,16,"isReact19"],[57,20,55,25,"isReact19"],[57,21,55,25],[57,23,55,28],[58,4,56,2],[58,11,56,9,"React"],[58,25,56,14],[58,26,56,15,"version"],[58,33,56,22],[58,34,56,23,"startsWith"],[58,44,56,33],[58,45,56,34],[58,50,56,39],[58,51,56,40],[59,2,57,0],[60,2,59,7],[60,11,59,16,"isRemoteDebuggingEnabled"],[60,35,59,40,"isRemoteDebuggingEnabled"],[60,36,59,40],[60,38,59,52],[61,4,60,2],[62,4,61,2],[63,4,62,2],[63,8,62,8,"localGlobal"],[63,19,62,19],[63,22,62,22,"global"],[63,28,62,35],[64,4,63,2],[64,11,64,4],[64,12,64,5],[64,13,64,6,"localGlobal"],[64,24,64,17],[64,25,64,18,"nativeCallSyncHook"],[64,43,64,36],[64,47,64,40],[64,48,64,41],[64,49,64,42,"localGlobal"],[64,60,64,53],[64,61,64,54,"__REMOTEDEV__"],[64,74,64,67],[64,79,65,4],[64,80,65,5,"localGlobal"],[64,91,65,16],[64,92,65,17,"RN$Bridgeless"],[64,105,65,30],[65,2,67,0],[67,2,69,0],[68,0,70,0],[69,0,71,0],[70,0,72,0],[71,0,73,0],[72,0,74,0],[73,0,75,0],[74,0,76,0],[75,0,77,0],[76,2,78,7],[76,11,78,16,"deepEqual"],[76,20,78,25,"deepEqual"],[76,21,78,26,"obj1"],[76,25,78,35],[76,27,78,37,"obj2"],[76,31,78,46],[76,33,78,48],[77,4,79,2],[77,8,79,6,"obj1"],[77,12,79,10],[77,17,79,15,"obj2"],[77,21,79,19],[77,23,79,21],[78,6,80,4],[78,13,80,11],[78,17,80,15],[79,4,81,2],[80,4,83,2],[80,8,84,4],[80,15,84,11,"obj1"],[80,19,84,15],[80,24,84,20],[80,32,84,28],[80,36,85,4],[80,43,85,11,"obj2"],[80,47,85,15],[80,52,85,20],[80,60,85,28],[80,64,86,4,"obj1"],[80,68,86,8],[80,73,86,13],[80,77,86,17],[80,81,87,4,"obj2"],[80,85,87,8],[80,90,87,13],[80,94,87,17],[80,96,88,4],[81,6,89,4],[81,13,89,11],[81,18,89,16],[82,4,90,2],[83,4,92,2],[83,8,92,8,"keys1"],[83,13,92,13],[83,16,92,16,"Object"],[83,22,92,22],[83,23,92,23,"keys"],[83,27,92,27],[83,28,92,28,"obj1"],[83,32,92,32],[83,33,92,33],[84,4,93,2],[84,8,93,8,"keys2"],[84,13,93,13],[84,16,93,16,"Object"],[84,22,93,22],[84,23,93,23,"keys"],[84,27,93,27],[84,28,93,28,"obj2"],[84,32,93,32],[84,33,93,33],[85,4,95,2],[85,8,95,6,"keys1"],[85,13,95,11],[85,14,95,12,"length"],[85,20,95,18],[85,25,95,23,"keys2"],[85,30,95,28],[85,31,95,29,"length"],[85,37,95,35],[85,39,95,37],[86,6,96,4],[86,13,96,11],[86,18,96,16],[87,4,97,2],[88,4,99,2],[88,9,99,7],[88,13,99,13,"key"],[88,16,99,16],[88,20,99,20,"keys1"],[88,25,99,25],[88,27,99,27],[89,6,100,4],[89,10,100,8],[89,11,100,9,"keys2"],[89,16,100,14],[89,17,100,15,"includes"],[89,25,100,23],[89,26,100,24,"key"],[89,29,100,27],[89,30,100,28],[89,34,100,32],[89,35,100,33,"deepEqual"],[89,44,100,42],[89,45,100,43,"obj1"],[89,49,100,47],[89,50,100,48,"key"],[89,53,100,51],[89,54,100,52],[89,56,100,54,"obj2"],[89,60,100,58],[89,61,100,59,"key"],[89,64,100,62],[89,65,100,63],[89,66,100,64],[89,68,100,66],[90,8,101,6],[90,15,101,13],[90,20,101,18],[91,6,102,4],[92,4,103,2],[93,4,105,2],[93,11,105,9],[93,15,105,13],[94,2,106,0],[95,2,108,7],[95,6,108,13,"INT32_MAX"],[95,15,108,22],[95,18,108,22,"exports"],[95,25,108,22],[95,26,108,22,"INT32_MAX"],[95,35,108,22],[95,38,108,25],[95,39,108,26],[95,43,108,30],[95,45,108,32],[95,48,108,35],[95,49,108,36],[96,0,108,37],[96,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCE;CDM;OEM;qBCO;GDQ;CFE;OIG;CJE;OKE;CLG;OME;CNE;OOI;CPG;OQE;CRE;OSE;CTQ;OUW;CV4B"}},"type":"js/module"}]}