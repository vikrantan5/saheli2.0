{"dependencies":[{"name":"./notifyManager.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":51,"index":75}}],"key":"sE8Jk2BSATSKXEwal1fu77sfV3E=","exportNames":["*"]}},{"name":"./mutation.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":41,"index":117}}],"key":"DEeb5DG8JiSOn+k43YR2tCf/fEk=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":118},"end":{"line":4,"column":49,"index":167}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}},{"name":"./subscribable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":168},"end":{"line":5,"column":49,"index":217}}],"key":"f0fxTGZggQRtb//cHMvH9AHIWOw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MutationCache = void 0;\n  var _notifyManager = require(_dependencyMap[0], \"./notifyManager.js\");\n  var _mutation = require(_dependencyMap[1], \"./mutation.js\");\n  var _utils = require(_dependencyMap[2], \"./utils.js\");\n  var _subscribable = require(_dependencyMap[3], \"./subscribable.js\");\n  // src/mutationCache.ts\n\n  var MutationCache = class extends _subscribable.Subscribable {\n    constructor(config = {}) {\n      super();\n      this.config = config;\n      this.#mutations = /* @__PURE__ */new Set();\n      this.#scopes = /* @__PURE__ */new Map();\n      this.#mutationId = 0;\n    }\n    #mutations;\n    #scopes;\n    #mutationId;\n    build(client, options, state) {\n      const mutation = new _mutation.Mutation({\n        mutationCache: this,\n        mutationId: ++this.#mutationId,\n        options: client.defaultMutationOptions(options),\n        state\n      });\n      this.add(mutation);\n      return mutation;\n    }\n    add(mutation) {\n      this.#mutations.add(mutation);\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          scopedMutations.push(mutation);\n        } else {\n          this.#scopes.set(scope, [mutation]);\n        }\n      }\n      this.notify({\n        type: \"added\",\n        mutation\n      });\n    }\n    remove(mutation) {\n      if (this.#mutations.delete(mutation)) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          const scopedMutations = this.#scopes.get(scope);\n          if (scopedMutations) {\n            if (scopedMutations.length > 1) {\n              const index = scopedMutations.indexOf(mutation);\n              if (index !== -1) {\n                scopedMutations.splice(index, 1);\n              }\n            } else if (scopedMutations[0] === mutation) {\n              this.#scopes.delete(scope);\n            }\n          }\n        }\n      }\n      this.notify({\n        type: \"removed\",\n        mutation\n      });\n    }\n    canRun(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const mutationsWithSameScope = this.#scopes.get(scope);\n        const firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n        return !firstPendingMutation || firstPendingMutation === mutation;\n      } else {\n        return true;\n      }\n    }\n    runNext(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const foundMutation = this.#scopes.get(scope)?.find(m => m !== mutation && m.state.isPaused);\n        return foundMutation?.continue() ?? Promise.resolve();\n      } else {\n        return Promise.resolve();\n      }\n    }\n    clear() {\n      _notifyManager.notifyManager.batch(() => {\n        this.#mutations.forEach(mutation => {\n          this.notify({\n            type: \"removed\",\n            mutation\n          });\n        });\n        this.#mutations.clear();\n        this.#scopes.clear();\n      });\n    }\n    getAll() {\n      return Array.from(this.#mutations);\n    }\n    find(filters) {\n      const defaultedFilters = {\n        exact: true,\n        ...filters\n      };\n      return this.getAll().find(mutation => (0, _utils.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n      return this.getAll().filter(mutation => (0, _utils.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n      _notifyManager.notifyManager.batch(() => {\n        this.listeners.forEach(listener => {\n          listener(event);\n        });\n      });\n    }\n    resumePausedMutations() {\n      const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n      return _notifyManager.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utils.noop))));\n    }\n  };\n  exports.MutationCache = MutationCache;\n  function scopeFor(mutation) {\n    return mutation.options.scope?.id;\n  }\n});","lineCount":131,"map":[[6,2,2,0],[6,6,2,0,"_notifyManager"],[6,20,2,0],[6,23,2,0,"require"],[6,30,2,0],[6,31,2,0,"_dependencyMap"],[6,45,2,0],[7,2,3,0],[7,6,3,0,"_mutation"],[7,15,3,0],[7,18,3,0,"require"],[7,25,3,0],[7,26,3,0,"_dependencyMap"],[7,40,3,0],[8,2,4,0],[8,6,4,0,"_utils"],[8,12,4,0],[8,15,4,0,"require"],[8,22,4,0],[8,23,4,0,"_dependencyMap"],[8,37,4,0],[9,2,5,0],[9,6,5,0,"_subscribable"],[9,19,5,0],[9,22,5,0,"require"],[9,29,5,0],[9,30,5,0,"_dependencyMap"],[9,44,5,0],[10,2,1,0],[12,2,6,0],[12,6,6,4,"MutationCache"],[12,19,6,17],[12,22,6,20],[12,36,6,34,"Subscribable"],[12,62,6,46],[12,63,6,47],[13,4,7,2,"constructor"],[13,15,7,13,"constructor"],[13,16,7,14,"config"],[13,22,7,20],[13,25,7,23],[13,26,7,24],[13,27,7,25],[13,29,7,27],[14,6,8,4],[14,11,8,9],[14,12,8,10],[14,13,8,11],[15,6,9,4],[15,10,9,8],[15,11,9,9,"config"],[15,17,9,15],[15,20,9,18,"config"],[15,26,9,24],[16,6,10,4],[16,10,10,8],[16,11,10,9],[16,12,10,10,"mutations"],[16,21,10,19],[16,24,10,22],[16,39,10,38],[16,43,10,42,"Set"],[16,46,10,45],[16,47,10,46],[16,48,10,47],[17,6,11,4],[17,10,11,8],[17,11,11,9],[17,12,11,10,"scopes"],[17,18,11,16],[17,21,11,19],[17,36,11,35],[17,40,11,39,"Map"],[17,43,11,42],[17,44,11,43],[17,45,11,44],[18,6,12,4],[18,10,12,8],[18,11,12,9],[18,12,12,10,"mutationId"],[18,22,12,20],[18,25,12,23],[18,26,12,24],[19,4,13,2],[20,4,14,2],[20,5,14,3,"mutations"],[20,14,14,12],[21,4,15,2],[21,5,15,3,"scopes"],[21,11,15,9],[22,4,16,2],[22,5,16,3,"mutationId"],[22,15,16,13],[23,4,17,2,"build"],[23,9,17,7,"build"],[23,10,17,8,"client"],[23,16,17,14],[23,18,17,16,"options"],[23,25,17,23],[23,27,17,25,"state"],[23,32,17,30],[23,34,17,32],[24,6,18,4],[24,12,18,10,"mutation"],[24,20,18,18],[24,23,18,21],[24,27,18,25,"Mutation"],[24,45,18,33],[24,46,18,34],[25,8,19,6,"mutationCache"],[25,21,19,19],[25,23,19,21],[25,27,19,25],[26,8,20,6,"mutationId"],[26,18,20,16],[26,20,20,18],[26,22,20,20],[26,26,20,24],[26,27,20,25],[26,28,20,26,"mutationId"],[26,38,20,36],[27,8,21,6,"options"],[27,15,21,13],[27,17,21,15,"client"],[27,23,21,21],[27,24,21,22,"defaultMutationOptions"],[27,46,21,44],[27,47,21,45,"options"],[27,54,21,52],[27,55,21,53],[28,8,22,6,"state"],[29,6,23,4],[29,7,23,5],[29,8,23,6],[30,6,24,4],[30,10,24,8],[30,11,24,9,"add"],[30,14,24,12],[30,15,24,13,"mutation"],[30,23,24,21],[30,24,24,22],[31,6,25,4],[31,13,25,11,"mutation"],[31,21,25,19],[32,4,26,2],[33,4,27,2,"add"],[33,7,27,5,"add"],[33,8,27,6,"mutation"],[33,16,27,14],[33,18,27,16],[34,6,28,4],[34,10,28,8],[34,11,28,9],[34,12,28,10,"mutations"],[34,21,28,19],[34,22,28,20,"add"],[34,25,28,23],[34,26,28,24,"mutation"],[34,34,28,32],[34,35,28,33],[35,6,29,4],[35,12,29,10,"scope"],[35,17,29,15],[35,20,29,18,"scopeFor"],[35,28,29,26],[35,29,29,27,"mutation"],[35,37,29,35],[35,38,29,36],[36,6,30,4],[36,10,30,8],[36,17,30,15,"scope"],[36,22,30,20],[36,27,30,25],[36,35,30,33],[36,37,30,35],[37,8,31,6],[37,14,31,12,"scopedMutations"],[37,29,31,27],[37,32,31,30],[37,36,31,34],[37,37,31,35],[37,38,31,36,"scopes"],[37,44,31,42],[37,45,31,43,"get"],[37,48,31,46],[37,49,31,47,"scope"],[37,54,31,52],[37,55,31,53],[38,8,32,6],[38,12,32,10,"scopedMutations"],[38,27,32,25],[38,29,32,27],[39,10,33,8,"scopedMutations"],[39,25,33,23],[39,26,33,24,"push"],[39,30,33,28],[39,31,33,29,"mutation"],[39,39,33,37],[39,40,33,38],[40,8,34,6],[40,9,34,7],[40,15,34,13],[41,10,35,8],[41,14,35,12],[41,15,35,13],[41,16,35,14,"scopes"],[41,22,35,20],[41,23,35,21,"set"],[41,26,35,24],[41,27,35,25,"scope"],[41,32,35,30],[41,34,35,32],[41,35,35,33,"mutation"],[41,43,35,41],[41,44,35,42],[41,45,35,43],[42,8,36,6],[43,6,37,4],[44,6,38,4],[44,10,38,8],[44,11,38,9,"notify"],[44,17,38,15],[44,18,38,16],[45,8,38,18,"type"],[45,12,38,22],[45,14,38,24],[45,21,38,31],[46,8,38,33,"mutation"],[47,6,38,42],[47,7,38,43],[47,8,38,44],[48,4,39,2],[49,4,40,2,"remove"],[49,10,40,8,"remove"],[49,11,40,9,"mutation"],[49,19,40,17],[49,21,40,19],[50,6,41,4],[50,10,41,8],[50,14,41,12],[50,15,41,13],[50,16,41,14,"mutations"],[50,25,41,23],[50,26,41,24,"delete"],[50,32,41,30],[50,33,41,31,"mutation"],[50,41,41,39],[50,42,41,40],[50,44,41,42],[51,8,42,6],[51,14,42,12,"scope"],[51,19,42,17],[51,22,42,20,"scopeFor"],[51,30,42,28],[51,31,42,29,"mutation"],[51,39,42,37],[51,40,42,38],[52,8,43,6],[52,12,43,10],[52,19,43,17,"scope"],[52,24,43,22],[52,29,43,27],[52,37,43,35],[52,39,43,37],[53,10,44,8],[53,16,44,14,"scopedMutations"],[53,31,44,29],[53,34,44,32],[53,38,44,36],[53,39,44,37],[53,40,44,38,"scopes"],[53,46,44,44],[53,47,44,45,"get"],[53,50,44,48],[53,51,44,49,"scope"],[53,56,44,54],[53,57,44,55],[54,10,45,8],[54,14,45,12,"scopedMutations"],[54,29,45,27],[54,31,45,29],[55,12,46,10],[55,16,46,14,"scopedMutations"],[55,31,46,29],[55,32,46,30,"length"],[55,38,46,36],[55,41,46,39],[55,42,46,40],[55,44,46,42],[56,14,47,12],[56,20,47,18,"index"],[56,25,47,23],[56,28,47,26,"scopedMutations"],[56,43,47,41],[56,44,47,42,"indexOf"],[56,51,47,49],[56,52,47,50,"mutation"],[56,60,47,58],[56,61,47,59],[57,14,48,12],[57,18,48,16,"index"],[57,23,48,21],[57,28,48,26],[57,29,48,27],[57,30,48,28],[57,32,48,30],[58,16,49,14,"scopedMutations"],[58,31,49,29],[58,32,49,30,"splice"],[58,38,49,36],[58,39,49,37,"index"],[58,44,49,42],[58,46,49,44],[58,47,49,45],[58,48,49,46],[59,14,50,12],[60,12,51,10],[60,13,51,11],[60,19,51,17],[60,23,51,21,"scopedMutations"],[60,38,51,36],[60,39,51,37],[60,40,51,38],[60,41,51,39],[60,46,51,44,"mutation"],[60,54,51,52],[60,56,51,54],[61,14,52,12],[61,18,52,16],[61,19,52,17],[61,20,52,18,"scopes"],[61,26,52,24],[61,27,52,25,"delete"],[61,33,52,31],[61,34,52,32,"scope"],[61,39,52,37],[61,40,52,38],[62,12,53,10],[63,10,54,8],[64,8,55,6],[65,6,56,4],[66,6,57,4],[66,10,57,8],[66,11,57,9,"notify"],[66,17,57,15],[66,18,57,16],[67,8,57,18,"type"],[67,12,57,22],[67,14,57,24],[67,23,57,33],[68,8,57,35,"mutation"],[69,6,57,44],[69,7,57,45],[69,8,57,46],[70,4,58,2],[71,4,59,2,"canRun"],[71,10,59,8,"canRun"],[71,11,59,9,"mutation"],[71,19,59,17],[71,21,59,19],[72,6,60,4],[72,12,60,10,"scope"],[72,17,60,15],[72,20,60,18,"scopeFor"],[72,28,60,26],[72,29,60,27,"mutation"],[72,37,60,35],[72,38,60,36],[73,6,61,4],[73,10,61,8],[73,17,61,15,"scope"],[73,22,61,20],[73,27,61,25],[73,35,61,33],[73,37,61,35],[74,8,62,6],[74,14,62,12,"mutationsWithSameScope"],[74,36,62,34],[74,39,62,37],[74,43,62,41],[74,44,62,42],[74,45,62,43,"scopes"],[74,51,62,49],[74,52,62,50,"get"],[74,55,62,53],[74,56,62,54,"scope"],[74,61,62,59],[74,62,62,60],[75,8,63,6],[75,14,63,12,"firstPendingMutation"],[75,34,63,32],[75,37,63,35,"mutationsWithSameScope"],[75,59,63,57],[75,61,63,59,"find"],[75,65,63,63],[75,66,64,9,"m"],[75,67,64,10],[75,71,64,15,"m"],[75,72,64,16],[75,73,64,17,"state"],[75,78,64,22],[75,79,64,23,"status"],[75,85,64,29],[75,90,64,34],[75,99,65,6],[75,100,65,7],[76,8,66,6],[76,15,66,13],[76,16,66,14,"firstPendingMutation"],[76,36,66,34],[76,40,66,38,"firstPendingMutation"],[76,60,66,58],[76,65,66,63,"mutation"],[76,73,66,71],[77,6,67,4],[77,7,67,5],[77,13,67,11],[78,8,68,6],[78,15,68,13],[78,19,68,17],[79,6,69,4],[80,4,70,2],[81,4,71,2,"runNext"],[81,11,71,9,"runNext"],[81,12,71,10,"mutation"],[81,20,71,18],[81,22,71,20],[82,6,72,4],[82,12,72,10,"scope"],[82,17,72,15],[82,20,72,18,"scopeFor"],[82,28,72,26],[82,29,72,27,"mutation"],[82,37,72,35],[82,38,72,36],[83,6,73,4],[83,10,73,8],[83,17,73,15,"scope"],[83,22,73,20],[83,27,73,25],[83,35,73,33],[83,37,73,35],[84,8,74,6],[84,14,74,12,"foundMutation"],[84,27,74,25],[84,30,74,28],[84,34,74,32],[84,35,74,33],[84,36,74,34,"scopes"],[84,42,74,40],[84,43,74,41,"get"],[84,46,74,44],[84,47,74,45,"scope"],[84,52,74,50],[84,53,74,51],[84,55,74,53,"find"],[84,59,74,57],[84,60,74,59,"m"],[84,61,74,60],[84,65,74,65,"m"],[84,66,74,66],[84,71,74,71,"mutation"],[84,79,74,79],[84,83,74,83,"m"],[84,84,74,84],[84,85,74,85,"state"],[84,90,74,90],[84,91,74,91,"isPaused"],[84,99,74,99],[84,100,74,100],[85,8,75,6],[85,15,75,13,"foundMutation"],[85,28,75,26],[85,30,75,28,"continue"],[85,38,75,36],[85,39,75,37],[85,40,75,38],[85,44,75,42,"Promise"],[85,51,75,49],[85,52,75,50,"resolve"],[85,59,75,57],[85,60,75,58],[85,61,75,59],[86,6,76,4],[86,7,76,5],[86,13,76,11],[87,8,77,6],[87,15,77,13,"Promise"],[87,22,77,20],[87,23,77,21,"resolve"],[87,30,77,28],[87,31,77,29],[87,32,77,30],[88,6,78,4],[89,4,79,2],[90,4,80,2,"clear"],[90,9,80,7,"clear"],[90,10,80,7],[90,12,80,10],[91,6,81,4,"notifyManager"],[91,34,81,17],[91,35,81,18,"batch"],[91,40,81,23],[91,41,81,24],[91,47,81,30],[92,8,82,6],[92,12,82,10],[92,13,82,11],[92,14,82,12,"mutations"],[92,23,82,21],[92,24,82,22,"forEach"],[92,31,82,29],[92,32,82,31,"mutation"],[92,40,82,39],[92,44,82,44],[93,10,83,8],[93,14,83,12],[93,15,83,13,"notify"],[93,21,83,19],[93,22,83,20],[94,12,83,22,"type"],[94,16,83,26],[94,18,83,28],[94,27,83,37],[95,12,83,39,"mutation"],[96,10,83,48],[96,11,83,49],[96,12,83,50],[97,8,84,6],[97,9,84,7],[97,10,84,8],[98,8,85,6],[98,12,85,10],[98,13,85,11],[98,14,85,12,"mutations"],[98,23,85,21],[98,24,85,22,"clear"],[98,29,85,27],[98,30,85,28],[98,31,85,29],[99,8,86,6],[99,12,86,10],[99,13,86,11],[99,14,86,12,"scopes"],[99,20,86,18],[99,21,86,19,"clear"],[99,26,86,24],[99,27,86,25],[99,28,86,26],[100,6,87,4],[100,7,87,5],[100,8,87,6],[101,4,88,2],[102,4,89,2,"getAll"],[102,10,89,8,"getAll"],[102,11,89,8],[102,13,89,11],[103,6,90,4],[103,13,90,11,"Array"],[103,18,90,16],[103,19,90,17,"from"],[103,23,90,21],[103,24,90,22],[103,28,90,26],[103,29,90,27],[103,30,90,28,"mutations"],[103,39,90,37],[103,40,90,38],[104,4,91,2],[105,4,92,2,"find"],[105,8,92,6,"find"],[105,9,92,7,"filters"],[105,16,92,14],[105,18,92,16],[106,6,93,4],[106,12,93,10,"defaultedFilters"],[106,28,93,26],[106,31,93,29],[107,8,93,31,"exact"],[107,13,93,36],[107,15,93,38],[107,19,93,42],[108,8,93,44],[108,11,93,47,"filters"],[109,6,93,55],[109,7,93,56],[110,6,94,4],[110,13,94,11],[110,17,94,15],[110,18,94,16,"getAll"],[110,24,94,22],[110,25,94,23],[110,26,94,24],[110,27,94,25,"find"],[110,31,94,29],[110,32,95,7,"mutation"],[110,40,95,15],[110,44,95,20],[110,48,95,20,"matchMutation"],[110,68,95,33],[110,70,95,34,"defaultedFilters"],[110,86,95,50],[110,88,95,52,"mutation"],[110,96,95,60],[110,97,96,4],[110,98,96,5],[111,4,97,2],[112,4,98,2,"findAll"],[112,11,98,9,"findAll"],[112,12,98,10,"filters"],[112,19,98,17],[112,22,98,20],[112,23,98,21],[112,24,98,22],[112,26,98,24],[113,6,99,4],[113,13,99,11],[113,17,99,15],[113,18,99,16,"getAll"],[113,24,99,22],[113,25,99,23],[113,26,99,24],[113,27,99,25,"filter"],[113,33,99,31],[113,34,99,33,"mutation"],[113,42,99,41],[113,46,99,46],[113,50,99,46,"matchMutation"],[113,70,99,59],[113,72,99,60,"filters"],[113,79,99,67],[113,81,99,69,"mutation"],[113,89,99,77],[113,90,99,78],[113,91,99,79],[114,4,100,2],[115,4,101,2,"notify"],[115,10,101,8,"notify"],[115,11,101,9,"event"],[115,16,101,14],[115,18,101,16],[116,6,102,4,"notifyManager"],[116,34,102,17],[116,35,102,18,"batch"],[116,40,102,23],[116,41,102,24],[116,47,102,30],[117,8,103,6],[117,12,103,10],[117,13,103,11,"listeners"],[117,22,103,20],[117,23,103,21,"forEach"],[117,30,103,28],[117,31,103,30,"listener"],[117,39,103,38],[117,43,103,43],[118,10,104,8,"listener"],[118,18,104,16],[118,19,104,17,"event"],[118,24,104,22],[118,25,104,23],[119,8,105,6],[119,9,105,7],[119,10,105,8],[120,6,106,4],[120,7,106,5],[120,8,106,6],[121,4,107,2],[122,4,108,2,"resumePausedMutations"],[122,25,108,23,"resumePausedMutations"],[122,26,108,23],[122,28,108,26],[123,6,109,4],[123,12,109,10,"pausedMutations"],[123,27,109,25],[123,30,109,28],[123,34,109,32],[123,35,109,33,"getAll"],[123,41,109,39],[123,42,109,40],[123,43,109,41],[123,44,109,42,"filter"],[123,50,109,48],[123,51,109,50,"x"],[123,52,109,51],[123,56,109,56,"x"],[123,57,109,57],[123,58,109,58,"state"],[123,63,109,63],[123,64,109,64,"isPaused"],[123,72,109,72],[123,73,109,73],[124,6,110,4],[124,13,110,11,"notifyManager"],[124,41,110,24],[124,42,110,25,"batch"],[124,47,110,30],[124,48,111,6],[124,54,111,12,"Promise"],[124,61,111,19],[124,62,111,20,"all"],[124,65,111,23],[124,66,112,8,"pausedMutations"],[124,81,112,23],[124,82,112,24,"map"],[124,85,112,27],[124,86,112,29,"mutation"],[124,94,112,37],[124,98,112,42,"mutation"],[124,106,112,50],[124,107,112,51,"continue"],[124,115,112,59],[124,116,112,60],[124,117,112,61],[124,118,112,62,"catch"],[124,123,112,67],[124,124,112,68,"noop"],[124,135,112,72],[124,136,112,73],[124,137,113,6],[124,138,114,4],[124,139,114,5],[125,4,115,2],[126,2,116,0],[126,3,116,1],[127,2,116,2,"exports"],[127,9,116,2],[127,10,116,2,"MutationCache"],[127,23,116,2],[127,26,116,2,"MutationCache"],[127,39,116,2],[128,2,117,0],[128,11,117,9,"scopeFor"],[128,19,117,17,"scopeFor"],[128,20,117,18,"mutation"],[128,28,117,26],[128,30,117,28],[129,4,118,2],[129,11,118,9,"mutation"],[129,19,118,17],[129,20,118,18,"options"],[129,27,118,25],[129,28,118,26,"scope"],[129,33,118,31],[129,35,118,33,"id"],[129,37,118,35],[130,2,119,0],[131,0,119,1],[131,3]],"functionMap":{"names":["<global>","MutationCache","MutationCache#constructor","MutationCache#build","MutationCache#add","MutationCache#remove","MutationCache#canRun","mutationsWithSameScope.find$argument_0","MutationCache#runNext","get.find$argument_0","MutationCache#clear","notifyManager.batch$argument_0","forEach$argument_0","MutationCache#getAll","MutationCache#find","getAll.find$argument_0","MutationCache#findAll","getAll.filter$argument_0","MutationCache#notify","listeners.forEach$argument_0","MutationCache#resumePausedMutations","pausedMutations.map$argument_0","scopeFor"],"mappings":"AAA;oBCK;ECC;GDM;EEI;GFS;EGC;GHY;EIC;GJkB;EKC;QCK,mCD;GLM;EOC;0DCG,yCD;GPK;ESC;wBCC;8BCC;ODE;KDG;GTC;EYC;GZE;EaC;MCG,uDD;GbE;EeC;gCCC,8CD;GfC;EiBC;wBPC;6BQC;ORE;KOC;GjBC;EmBC;iDHC,uBG;MTE;4BUC,6CV;OSC;GnBE;CDC;AsBC;CtBE"}},"type":"js/module"}]}