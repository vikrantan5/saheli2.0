{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"./thenable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":20},"end":{"line":2,"column":47,"index":67}}],"key":"kKA5IQ5mf6XoWFagMsmQasyMyhE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.defaultShouldDehydrateMutation = defaultShouldDehydrateMutation;\n  exports.defaultShouldDehydrateQuery = defaultShouldDehydrateQuery;\n  exports.dehydrate = dehydrate;\n  exports.hydrate = hydrate;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _thenable = require(_dependencyMap[2], \"./thenable.js\");\n  var _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"]; // src/hydration.ts\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return {\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state,\n      ...(mutation.options.scope && {\n        scope: mutation.options.scope\n      }),\n      ...(mutation.meta && {\n        meta: mutation.meta\n      })\n    };\n  }\n  function dehydrateQuery(query, serializeData, shouldRedactErrors) {\n    return {\n      dehydratedAt: Date.now(),\n      state: {\n        ...query.state,\n        ...(query.state.data !== void 0 && {\n          data: serializeData(query.state.data)\n        })\n      },\n      queryKey: query.queryKey,\n      queryHash: query.queryHash,\n      ...(query.state.status === \"pending\" && {\n        promise: query.promise?.then(serializeData).catch(error => {\n          if (!shouldRedactErrors(error)) {\n            return Promise.reject(error);\n          }\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n          }\n          return Promise.reject(new Error(\"redacted\"));\n        })\n      }),\n      ...(query.meta && {\n        meta: query.meta\n      })\n    };\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function defaultShouldRedactErrors(_) {\n    return true;\n  }\n  function dehydrate(client) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    var mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    var filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    var shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n    var serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    var queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    var mutationCache = client.getMutationCache();\n    var queryCache = client.getQueryCache();\n    var deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    var mutations = dehydratedState.mutations || [];\n    var queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      var state = _ref.state,\n        mutationOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      mutationCache.build(client, {\n        ...client.getDefaultOptions().hydrate?.mutations,\n        ...options?.defaultOptions?.mutations,\n        ...mutationOptions\n      }, state);\n    });\n    queries.forEach(_ref2 => {\n      var queryKey = _ref2.queryKey,\n        state = _ref2.state,\n        queryHash = _ref2.queryHash,\n        meta = _ref2.meta,\n        promise = _ref2.promise,\n        dehydratedAt = _ref2.dehydratedAt;\n      var syncData = promise ? (0, _thenable.tryResolveSync)(promise) : void 0;\n      var rawData = state.data === void 0 ? syncData?.data : state.data;\n      var data = rawData === void 0 ? rawData : deserializeData(rawData);\n      var query = queryCache.get(queryHash);\n      var existingQueryIsPending = query?.state.status === \"pending\";\n      var existingQueryIsFetching = query?.state.fetchStatus === \"fetching\";\n      if (query) {\n        var hasNewerSyncData = syncData &&\n        // We only need this undefined check to handle older dehydration\n        // payloads that might not have dehydratedAt\n        dehydratedAt !== void 0 && dehydratedAt > query.state.dataUpdatedAt;\n        if (state.dataUpdatedAt > query.state.dataUpdatedAt || hasNewerSyncData) {\n          var _ignored = state.fetchStatus,\n            serializedState = (0, _objectWithoutProperties2.default)(state, _excluded2);\n          query.setState({\n            ...serializedState,\n            data\n          });\n        }\n      } else {\n        query = queryCache.build(client, {\n          ...client.getDefaultOptions().hydrate?.queries,\n          ...options?.defaultOptions?.queries,\n          queryKey,\n          queryHash,\n          meta\n        },\n        // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        {\n          ...state,\n          data,\n          fetchStatus: \"idle\",\n          status: data !== void 0 ? \"success\" : state.status\n        });\n      }\n      if (promise && !existingQueryIsPending && !existingQueryIsFetching && (\n      // Only hydrate if dehydration is newer than any existing data,\n      // this is always true for new queries\n      dehydratedAt === void 0 || dehydratedAt > query.state.dataUpdatedAt)) {\n        void query.fetch(void 0, {\n          // RSC transformed promises are not thenable\n          initialPromise: Promise.resolve(promise).then(deserializeData)\n        });\n      }\n    });\n  }\n});","lineCount":150,"map":[[11,2,2,0],[11,6,2,0,"_thenable"],[11,15,2,0],[11,18,2,0,"require"],[11,25,2,0],[11,26,2,0,"_dependencyMap"],[11,40,2,0],[12,2,2,47],[12,6,2,47,"_excluded"],[12,15,2,47],[13,4,2,47,"_excluded2"],[13,14,2,47],[13,34,1,0],[14,2,3,0],[14,11,3,9,"defaultTransformerFn"],[14,31,3,29,"defaultTransformerFn"],[14,32,3,30,"data"],[14,36,3,34],[14,38,3,36],[15,4,4,2],[15,11,4,9,"data"],[15,15,4,13],[16,2,5,0],[17,2,6,0],[17,11,6,9,"dehydrateMutation"],[17,28,6,26,"dehydrateMutation"],[17,29,6,27,"mutation"],[17,37,6,35],[17,39,6,37],[18,4,7,2],[18,11,7,9],[19,6,8,4,"mutationKey"],[19,17,8,15],[19,19,8,17,"mutation"],[19,27,8,25],[19,28,8,26,"options"],[19,35,8,33],[19,36,8,34,"mutationKey"],[19,47,8,45],[20,6,9,4,"state"],[20,11,9,9],[20,13,9,11,"mutation"],[20,21,9,19],[20,22,9,20,"state"],[20,27,9,25],[21,6,10,4],[21,10,10,7,"mutation"],[21,18,10,15],[21,19,10,16,"options"],[21,26,10,23],[21,27,10,24,"scope"],[21,32,10,29],[21,36,10,33],[22,8,10,35,"scope"],[22,13,10,40],[22,15,10,42,"mutation"],[22,23,10,50],[22,24,10,51,"options"],[22,31,10,58],[22,32,10,59,"scope"],[23,6,10,65],[23,7,10,66],[24,6,11,4],[24,10,11,7,"mutation"],[24,18,11,15],[24,19,11,16,"meta"],[24,23,11,20],[24,27,11,24],[25,8,11,26,"meta"],[25,12,11,30],[25,14,11,32,"mutation"],[25,22,11,40],[25,23,11,41,"meta"],[26,6,11,46],[26,7,11,47],[27,4,12,2],[27,5,12,3],[28,2,13,0],[29,2,14,0],[29,11,14,9,"dehydrateQuery"],[29,25,14,23,"dehydrateQuery"],[29,26,14,24,"query"],[29,31,14,29],[29,33,14,31,"serializeData"],[29,46,14,44],[29,48,14,46,"shouldRedactErrors"],[29,66,14,64],[29,68,14,66],[30,4,15,2],[30,11,15,9],[31,6,16,4,"dehydratedAt"],[31,18,16,16],[31,20,16,18,"Date"],[31,24,16,22],[31,25,16,23,"now"],[31,28,16,26],[31,29,16,27],[31,30,16,28],[32,6,17,4,"state"],[32,11,17,9],[32,13,17,11],[33,8,18,6],[33,11,18,9,"query"],[33,16,18,14],[33,17,18,15,"state"],[33,22,18,20],[34,8,19,6],[34,12,19,9,"query"],[34,17,19,14],[34,18,19,15,"state"],[34,23,19,20],[34,24,19,21,"data"],[34,28,19,25],[34,33,19,30],[34,38,19,35],[34,39,19,36],[34,43,19,40],[35,10,20,8,"data"],[35,14,20,12],[35,16,20,14,"serializeData"],[35,29,20,27],[35,30,20,28,"query"],[35,35,20,33],[35,36,20,34,"state"],[35,41,20,39],[35,42,20,40,"data"],[35,46,20,44],[36,8,21,6],[36,9,21,7],[37,6,22,4],[37,7,22,5],[38,6,23,4,"queryKey"],[38,14,23,12],[38,16,23,14,"query"],[38,21,23,19],[38,22,23,20,"queryKey"],[38,30,23,28],[39,6,24,4,"queryHash"],[39,15,24,13],[39,17,24,15,"query"],[39,22,24,20],[39,23,24,21,"queryHash"],[39,32,24,30],[40,6,25,4],[40,10,25,7,"query"],[40,15,25,12],[40,16,25,13,"state"],[40,21,25,18],[40,22,25,19,"status"],[40,28,25,25],[40,33,25,30],[40,42,25,39],[40,46,25,43],[41,8,26,6,"promise"],[41,15,26,13],[41,17,26,15,"query"],[41,22,26,20],[41,23,26,21,"promise"],[41,30,26,28],[41,32,26,30,"then"],[41,36,26,34],[41,37,26,35,"serializeData"],[41,50,26,48],[41,51,26,49],[41,52,26,50,"catch"],[41,57,26,55],[41,58,26,57,"error"],[41,63,26,62],[41,67,26,67],[42,10,27,8],[42,14,27,12],[42,15,27,13,"shouldRedactErrors"],[42,33,27,31],[42,34,27,32,"error"],[42,39,27,37],[42,40,27,38],[42,42,27,40],[43,12,28,10],[43,19,28,17,"Promise"],[43,26,28,24],[43,27,28,25,"reject"],[43,33,28,31],[43,34,28,32,"error"],[43,39,28,37],[43,40,28,38],[44,10,29,8],[45,10,30,8],[45,14,30,12,"process"],[45,21,30,19],[45,22,30,20,"env"],[45,25,30,23],[45,26,30,24,"NODE_ENV"],[45,34,30,32],[45,39,30,37],[45,51,30,49],[45,53,30,51],[46,12,31,10,"console"],[46,19,31,17],[46,20,31,18,"error"],[46,25,31,23],[46,26,32,12],[46,89,32,75,"query"],[46,94,32,80],[46,95,32,81,"queryHash"],[46,104,32,90],[46,110,32,96,"error"],[46,115,32,101],[46,166,33,10],[46,167,33,11],[47,10,34,8],[48,10,35,8],[48,17,35,15,"Promise"],[48,24,35,22],[48,25,35,23,"reject"],[48,31,35,29],[48,32,35,30],[48,36,35,34,"Error"],[48,41,35,39],[48,42,35,40],[48,52,35,50],[48,53,35,51],[48,54,35,52],[49,8,36,6],[49,9,36,7],[50,6,37,4],[50,7,37,5],[51,6,38,4],[51,10,38,7,"query"],[51,15,38,12],[51,16,38,13,"meta"],[51,20,38,17],[51,24,38,21],[52,8,38,23,"meta"],[52,12,38,27],[52,14,38,29,"query"],[52,19,38,34],[52,20,38,35,"meta"],[53,6,38,40],[53,7,38,41],[54,4,39,2],[54,5,39,3],[55,2,40,0],[56,2,41,0],[56,11,41,9,"defaultShouldDehydrateMutation"],[56,41,41,39,"defaultShouldDehydrateMutation"],[56,42,41,40,"mutation"],[56,50,41,48],[56,52,41,50],[57,4,42,2],[57,11,42,9,"mutation"],[57,19,42,17],[57,20,42,18,"state"],[57,25,42,23],[57,26,42,24,"isPaused"],[57,34,42,32],[58,2,43,0],[59,2,44,0],[59,11,44,9,"defaultShouldDehydrateQuery"],[59,38,44,36,"defaultShouldDehydrateQuery"],[59,39,44,37,"query"],[59,44,44,42],[59,46,44,44],[60,4,45,2],[60,11,45,9,"query"],[60,16,45,14],[60,17,45,15,"state"],[60,22,45,20],[60,23,45,21,"status"],[60,29,45,27],[60,34,45,32],[60,43,45,41],[61,2,46,0],[62,2,47,0],[62,11,47,9,"defaultShouldRedactErrors"],[62,36,47,34,"defaultShouldRedactErrors"],[62,37,47,35,"_"],[62,38,47,36],[62,40,47,38],[63,4,48,2],[63,11,48,9],[63,15,48,13],[64,2,49,0],[65,2,50,0],[65,11,50,9,"dehydrate"],[65,20,50,18,"dehydrate"],[65,21,50,19,"client"],[65,27,50,25],[65,29,50,41],[66,4,50,41],[66,8,50,27,"options"],[66,15,50,34],[66,18,50,34,"arguments"],[66,27,50,34],[66,28,50,34,"length"],[66,34,50,34],[66,42,50,34,"arguments"],[66,51,50,34],[66,59,50,34,"undefined"],[66,68,50,34],[66,71,50,34,"arguments"],[66,80,50,34],[66,86,50,37],[66,87,50,38],[66,88,50,39],[67,4,51,2],[67,8,51,8,"filterMutation"],[67,22,51,22],[67,25,51,25,"options"],[67,32,51,32],[67,33,51,33,"shouldDehydrateMutation"],[67,56,51,56],[67,60,51,60,"client"],[67,66,51,66],[67,67,51,67,"getDefaultOptions"],[67,84,51,84],[67,85,51,85],[67,86,51,86],[67,87,51,87,"dehydrate"],[67,96,51,96],[67,98,51,98,"shouldDehydrateMutation"],[67,121,51,121],[67,125,51,125,"defaultShouldDehydrateMutation"],[67,155,51,155],[68,4,52,2],[68,8,52,8,"mutations"],[68,17,52,17],[68,20,52,20,"client"],[68,26,52,26],[68,27,52,27,"getMutationCache"],[68,43,52,43],[68,44,52,44],[68,45,52,45],[68,46,52,46,"getAll"],[68,52,52,52],[68,53,52,53],[68,54,52,54],[68,55,52,55,"flatMap"],[68,62,52,62],[68,63,53,5,"mutation"],[68,71,53,13],[68,75,53,18,"filterMutation"],[68,89,53,32],[68,90,53,33,"mutation"],[68,98,53,41],[68,99,53,42],[68,102,53,45],[68,103,53,46,"dehydrateMutation"],[68,120,53,63],[68,121,53,64,"mutation"],[68,129,53,72],[68,130,53,73],[68,131,53,74],[68,134,53,77],[68,136,54,2],[68,137,54,3],[69,4,55,2],[69,8,55,8,"filterQuery"],[69,19,55,19],[69,22,55,22,"options"],[69,29,55,29],[69,30,55,30,"shouldDehydrateQuery"],[69,50,55,50],[69,54,55,54,"client"],[69,60,55,60],[69,61,55,61,"getDefaultOptions"],[69,78,55,78],[69,79,55,79],[69,80,55,80],[69,81,55,81,"dehydrate"],[69,90,55,90],[69,92,55,92,"shouldDehydrateQuery"],[69,112,55,112],[69,116,55,116,"defaultShouldDehydrateQuery"],[69,143,55,143],[70,4,56,2],[70,8,56,8,"shouldRedactErrors"],[70,26,56,26],[70,29,56,29,"options"],[70,36,56,36],[70,37,56,37,"shouldRedactErrors"],[70,55,56,55],[70,59,56,59,"client"],[70,65,56,65],[70,66,56,66,"getDefaultOptions"],[70,83,56,83],[70,84,56,84],[70,85,56,85],[70,86,56,86,"dehydrate"],[70,95,56,95],[70,97,56,97,"shouldRedactErrors"],[70,115,56,115],[70,119,56,119,"defaultShouldRedactErrors"],[70,144,56,144],[71,4,57,2],[71,8,57,8,"serializeData"],[71,21,57,21],[71,24,57,24,"options"],[71,31,57,31],[71,32,57,32,"serializeData"],[71,45,57,45],[71,49,57,49,"client"],[71,55,57,55],[71,56,57,56,"getDefaultOptions"],[71,73,57,73],[71,74,57,74],[71,75,57,75],[71,76,57,76,"dehydrate"],[71,85,57,85],[71,87,57,87,"serializeData"],[71,100,57,100],[71,104,57,104,"defaultTransformerFn"],[71,124,57,124],[72,4,58,2],[72,8,58,8,"queries"],[72,15,58,15],[72,18,58,18,"client"],[72,24,58,24],[72,25,58,25,"getQueryCache"],[72,38,58,38],[72,39,58,39],[72,40,58,40],[72,41,58,41,"getAll"],[72,47,58,47],[72,48,58,48],[72,49,58,49],[72,50,58,50,"flatMap"],[72,57,58,57],[72,58,59,5,"query"],[72,63,59,10],[72,67,59,15,"filterQuery"],[72,78,59,26],[72,79,59,27,"query"],[72,84,59,32],[72,85,59,33],[72,88,59,36],[72,89,59,37,"dehydrateQuery"],[72,103,59,51],[72,104,59,52,"query"],[72,109,59,57],[72,111,59,59,"serializeData"],[72,124,59,72],[72,126,59,74,"shouldRedactErrors"],[72,144,59,92],[72,145,59,93],[72,146,59,94],[72,149,59,97],[72,151,60,2],[72,152,60,3],[73,4,61,2],[73,11,61,9],[74,6,61,11,"mutations"],[74,15,61,20],[75,6,61,22,"queries"],[76,4,61,30],[76,5,61,31],[77,2,62,0],[78,2,63,0],[78,11,63,9,"hydrate"],[78,18,63,16,"hydrate"],[78,19,63,17,"client"],[78,25,63,23],[78,27,63,25,"dehydratedState"],[78,42,63,40],[78,44,63,42,"options"],[78,51,63,49],[78,53,63,51],[79,4,64,2],[79,8,64,6],[79,15,64,13,"dehydratedState"],[79,30,64,28],[79,35,64,33],[79,43,64,41],[79,47,64,45,"dehydratedState"],[79,62,64,60],[79,67,64,65],[79,71,64,69],[79,73,64,71],[80,6,65,4],[81,4,66,2],[82,4,67,2],[82,8,67,8,"mutationCache"],[82,21,67,21],[82,24,67,24,"client"],[82,30,67,30],[82,31,67,31,"getMutationCache"],[82,47,67,47],[82,48,67,48],[82,49,67,49],[83,4,68,2],[83,8,68,8,"queryCache"],[83,18,68,18],[83,21,68,21,"client"],[83,27,68,27],[83,28,68,28,"getQueryCache"],[83,41,68,41],[83,42,68,42],[83,43,68,43],[84,4,69,2],[84,8,69,8,"deserializeData"],[84,23,69,23],[84,26,69,26,"options"],[84,33,69,33],[84,35,69,35,"defaultOptions"],[84,49,69,49],[84,51,69,51,"deserializeData"],[84,66,69,66],[84,70,69,70,"client"],[84,76,69,76],[84,77,69,77,"getDefaultOptions"],[84,94,69,94],[84,95,69,95],[84,96,69,96],[84,97,69,97,"hydrate"],[84,104,69,104],[84,106,69,106,"deserializeData"],[84,121,69,121],[84,125,69,125,"defaultTransformerFn"],[84,145,69,145],[85,4,70,2],[85,8,70,8,"mutations"],[85,17,70,17],[85,20,70,20,"dehydratedState"],[85,35,70,35],[85,36,70,36,"mutations"],[85,45,70,45],[85,49,70,49],[85,51,70,51],[86,4,71,2],[86,8,71,8,"queries"],[86,15,71,15],[86,18,71,18,"dehydratedState"],[86,33,71,33],[86,34,71,34,"queries"],[86,41,71,41],[86,45,71,45],[86,47,71,47],[87,4,72,2,"mutations"],[87,13,72,11],[87,14,72,12,"forEach"],[87,21,72,19],[87,22,72,20,"_ref"],[87,26,72,20],[87,30,72,55],[88,6,72,55],[88,10,72,23,"state"],[88,15,72,28],[88,18,72,28,"_ref"],[88,22,72,28],[88,23,72,23,"state"],[88,28,72,28],[89,8,72,33,"mutationOptions"],[89,23,72,48],[89,30,72,48,"_objectWithoutProperties2"],[89,55,72,48],[89,56,72,48,"default"],[89,63,72,48],[89,65,72,48,"_ref"],[89,69,72,48],[89,71,72,48,"_excluded"],[89,80,72,48],[90,6,73,4,"mutationCache"],[90,19,73,17],[90,20,73,18,"build"],[90,25,73,23],[90,26,74,6,"client"],[90,32,74,12],[90,34,75,6],[91,8,76,8],[91,11,76,11,"client"],[91,17,76,17],[91,18,76,18,"getDefaultOptions"],[91,35,76,35],[91,36,76,36],[91,37,76,37],[91,38,76,38,"hydrate"],[91,45,76,45],[91,47,76,47,"mutations"],[91,56,76,56],[92,8,77,8],[92,11,77,11,"options"],[92,18,77,18],[92,20,77,20,"defaultOptions"],[92,34,77,34],[92,36,77,36,"mutations"],[92,45,77,45],[93,8,78,8],[93,11,78,11,"mutationOptions"],[94,6,79,6],[94,7,79,7],[94,9,80,6,"state"],[94,14,81,4],[94,15,81,5],[95,4,82,2],[95,5,82,3],[95,6,82,4],[96,4,83,2,"queries"],[96,11,83,9],[96,12,83,10,"forEach"],[96,19,83,17],[96,20,84,4,"_ref2"],[96,25,84,4],[96,29,84,69],[97,6,84,69],[97,10,84,7,"queryKey"],[97,18,84,15],[97,21,84,15,"_ref2"],[97,26,84,15],[97,27,84,7,"queryKey"],[97,35,84,15],[98,8,84,17,"state"],[98,13,84,22],[98,16,84,22,"_ref2"],[98,21,84,22],[98,22,84,17,"state"],[98,27,84,22],[99,8,84,24,"queryHash"],[99,17,84,33],[99,20,84,33,"_ref2"],[99,25,84,33],[99,26,84,24,"queryHash"],[99,35,84,33],[100,8,84,35,"meta"],[100,12,84,39],[100,15,84,39,"_ref2"],[100,20,84,39],[100,21,84,35,"meta"],[100,25,84,39],[101,8,84,41,"promise"],[101,15,84,48],[101,18,84,48,"_ref2"],[101,23,84,48],[101,24,84,41,"promise"],[101,31,84,48],[102,8,84,50,"dehydratedAt"],[102,20,84,62],[102,23,84,62,"_ref2"],[102,28,84,62],[102,29,84,50,"dehydratedAt"],[102,41,84,62],[103,6,85,6],[103,10,85,12,"syncData"],[103,18,85,20],[103,21,85,23,"promise"],[103,28,85,30],[103,31,85,33],[103,35,85,33,"tryResolveSync"],[103,59,85,47],[103,61,85,48,"promise"],[103,68,85,55],[103,69,85,56],[103,72,85,59],[103,77,85,64],[103,78,85,65],[104,6,86,6],[104,10,86,12,"rawData"],[104,17,86,19],[104,20,86,22,"state"],[104,25,86,27],[104,26,86,28,"data"],[104,30,86,32],[104,35,86,37],[104,40,86,42],[104,41,86,43],[104,44,86,46,"syncData"],[104,52,86,54],[104,54,86,56,"data"],[104,58,86,60],[104,61,86,63,"state"],[104,66,86,68],[104,67,86,69,"data"],[104,71,86,73],[105,6,87,6],[105,10,87,12,"data"],[105,14,87,16],[105,17,87,19,"rawData"],[105,24,87,26],[105,29,87,31],[105,34,87,36],[105,35,87,37],[105,38,87,40,"rawData"],[105,45,87,47],[105,48,87,50,"deserializeData"],[105,63,87,65],[105,64,87,66,"rawData"],[105,71,87,73],[105,72,87,74],[106,6,88,6],[106,10,88,10,"query"],[106,15,88,15],[106,18,88,18,"queryCache"],[106,28,88,28],[106,29,88,29,"get"],[106,32,88,32],[106,33,88,33,"queryHash"],[106,42,88,42],[106,43,88,43],[107,6,89,6],[107,10,89,12,"existingQueryIsPending"],[107,32,89,34],[107,35,89,37,"query"],[107,40,89,42],[107,42,89,44,"state"],[107,47,89,49],[107,48,89,50,"status"],[107,54,89,56],[107,59,89,61],[107,68,89,70],[108,6,90,6],[108,10,90,12,"existingQueryIsFetching"],[108,33,90,35],[108,36,90,38,"query"],[108,41,90,43],[108,43,90,45,"state"],[108,48,90,50],[108,49,90,51,"fetchStatus"],[108,60,90,62],[108,65,90,67],[108,75,90,77],[109,6,91,6],[109,10,91,10,"query"],[109,15,91,15],[109,17,91,17],[110,8,92,8],[110,12,92,14,"hasNewerSyncData"],[110,28,92,30],[110,31,92,33,"syncData"],[110,39,92,41],[111,8,92,45],[112,8,93,8],[113,8,94,8,"dehydratedAt"],[113,20,94,20],[113,25,94,25],[113,30,94,30],[113,31,94,31],[113,35,94,35,"dehydratedAt"],[113,47,94,47],[113,50,94,50,"query"],[113,55,94,55],[113,56,94,56,"state"],[113,61,94,61],[113,62,94,62,"dataUpdatedAt"],[113,75,94,75],[114,8,95,8],[114,12,95,12,"state"],[114,17,95,17],[114,18,95,18,"dataUpdatedAt"],[114,31,95,31],[114,34,95,34,"query"],[114,39,95,39],[114,40,95,40,"state"],[114,45,95,45],[114,46,95,46,"dataUpdatedAt"],[114,59,95,59],[114,63,95,63,"hasNewerSyncData"],[114,79,95,79],[114,81,95,81],[115,10,96,10],[115,14,96,31,"_ignored"],[115,22,96,39],[115,25,96,64,"state"],[115,30,96,69],[115,31,96,18,"fetchStatus"],[115,42,96,29],[116,12,96,44,"serializedState"],[116,27,96,59],[116,34,96,59,"_objectWithoutProperties2"],[116,59,96,59],[116,60,96,59,"default"],[116,67,96,59],[116,69,96,64,"state"],[116,74,96,69],[116,76,96,69,"_excluded2"],[116,86,96,69],[117,10,97,10,"query"],[117,15,97,15],[117,16,97,16,"setState"],[117,24,97,24],[117,25,97,25],[118,12,98,12],[118,15,98,15,"serializedState"],[118,30,98,30],[119,12,99,12,"data"],[120,10,100,10],[120,11,100,11],[120,12,100,12],[121,8,101,8],[122,6,102,6],[122,7,102,7],[122,13,102,13],[123,8,103,8,"query"],[123,13,103,13],[123,16,103,16,"queryCache"],[123,26,103,26],[123,27,103,27,"build"],[123,32,103,32],[123,33,104,10,"client"],[123,39,104,16],[123,41,105,10],[124,10,106,12],[124,13,106,15,"client"],[124,19,106,21],[124,20,106,22,"getDefaultOptions"],[124,37,106,39],[124,38,106,40],[124,39,106,41],[124,40,106,42,"hydrate"],[124,47,106,49],[124,49,106,51,"queries"],[124,56,106,58],[125,10,107,12],[125,13,107,15,"options"],[125,20,107,22],[125,22,107,24,"defaultOptions"],[125,36,107,38],[125,38,107,40,"queries"],[125,45,107,47],[126,10,108,12,"queryKey"],[126,18,108,20],[127,10,109,12,"queryHash"],[127,19,109,21],[128,10,110,12,"meta"],[129,8,111,10],[129,9,111,11],[130,8,112,10],[131,8,113,10],[132,8,114,10],[133,10,115,12],[133,13,115,15,"state"],[133,18,115,20],[134,10,116,12,"data"],[134,14,116,16],[135,10,117,12,"fetchStatus"],[135,21,117,23],[135,23,117,25],[135,29,117,31],[136,10,118,12,"status"],[136,16,118,18],[136,18,118,20,"data"],[136,22,118,24],[136,27,118,29],[136,32,118,34],[136,33,118,35],[136,36,118,38],[136,45,118,47],[136,48,118,50,"state"],[136,53,118,55],[136,54,118,56,"status"],[137,8,119,10],[137,9,120,8],[137,10,120,9],[138,6,121,6],[139,6,122,6],[139,10,122,10,"promise"],[139,17,122,17],[139,21,122,21],[139,22,122,22,"existingQueryIsPending"],[139,44,122,44],[139,48,122,48],[139,49,122,49,"existingQueryIsFetching"],[139,72,122,72],[140,6,122,76],[141,6,123,6],[142,6,124,7,"dehydratedAt"],[142,18,124,19],[142,23,124,24],[142,28,124,29],[142,29,124,30],[142,33,124,34,"dehydratedAt"],[142,45,124,46],[142,48,124,49,"query"],[142,53,124,54],[142,54,124,55,"state"],[142,59,124,60],[142,60,124,61,"dataUpdatedAt"],[142,73,124,74],[142,74,124,75],[142,76,124,77],[143,8,125,8],[143,13,125,13,"query"],[143,18,125,18],[143,19,125,19,"fetch"],[143,24,125,24],[143,25,125,25],[143,30,125,30],[143,31,125,31],[143,33,125,33],[144,10,126,10],[145,10,127,10,"initialPromise"],[145,24,127,24],[145,26,127,26,"Promise"],[145,33,127,33],[145,34,127,34,"resolve"],[145,41,127,41],[145,42,127,42,"promise"],[145,49,127,49],[145,50,127,50],[145,51,127,51,"then"],[145,55,127,55],[145,56,127,56,"deserializeData"],[145,71,127,71],[146,8,128,8],[146,9,128,9],[146,10,128,10],[147,6,129,6],[148,4,130,4],[148,5,131,2],[148,6,131,3],[149,2,132,0],[150,0,132,1],[150,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","defaultShouldRedactErrors","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACE;CDE;AEC;CFO;AGC;wDCY;ODU;CHI;AKC;CLE;AMC;CNE;AOC;CPE;AQC;ICG,2ED;IEM,+FF;CRG;AWC;oBCS;GDU;IEE;KF8C;CXE"}},"type":"js/module"}]}