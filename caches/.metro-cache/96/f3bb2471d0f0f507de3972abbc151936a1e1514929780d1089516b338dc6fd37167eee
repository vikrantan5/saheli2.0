{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":38},"end":{"line":4,"column":31,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":69,"index":139}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"]}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":140},"end":{"line":6,"column":58,"index":198}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"]}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":199},"end":{"line":7,"column":74,"index":273}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"]}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":274},"end":{"line":12,"column":33,"index":395}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"]}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":396},"end":{"line":13,"column":58,"index":454}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"]}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":455},"end":{"line":19,"column":23,"index":559}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useBaseQuery.ts\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useBaseQuery = useBaseQuery;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _queryCore = require(_dependencyMap[3], \"@tanstack/query-core\");\n  var _QueryClientProvider = require(_dependencyMap[4], \"./QueryClientProvider.js\");\n  var _QueryErrorResetBoundary = require(_dependencyMap[5], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtils = require(_dependencyMap[6], \"./errorBoundaryUtils.js\");\n  var _IsRestoringProvider = require(_dependencyMap[7], \"./IsRestoringProvider.js\");\n  var _suspense = require(_dependencyMap[8], \"./suspense.js\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function useBaseQuery(options, Observer, queryClient) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n      }\n    }\n    var isRestoring = (0, _IsRestoringProvider.useIsRestoring)();\n    var errorResetBoundary = (0, _QueryErrorResetBoundary.useQueryErrorResetBoundary)();\n    var client = (0, _QueryClientProvider.useQueryClient)(queryClient);\n    var defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!defaultedOptions.queryFn) {\n        console.error(`[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`);\n      }\n    }\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0, _suspense.ensureSuspenseTimers)(defaultedOptions);\n    (0, _errorBoundaryUtils.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0, _errorBoundaryUtils.useClearResetErrorBoundary)(errorResetBoundary);\n    var isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    var _React$useState = React.useState(() => new Observer(client, defaultedOptions)),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      observer = _React$useState2[0];\n    var result = observer.getOptimisticResult(defaultedOptions);\n    var shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => {\n      var unsubscribe = shouldSubscribe ? observer.subscribe(_queryCore.notifyManager.batchCalls(onStoreChange)) : _queryCore.noop;\n      observer.updateResult();\n      return unsubscribe;\n    }, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setOptions(defaultedOptions);\n    }, [defaultedOptions, observer]);\n    if ((0, _suspense.shouldSuspend)(defaultedOptions, result)) {\n      throw (0, _suspense.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0, _errorBoundaryUtils.getHasError)({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client.getQueryCache().get(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense\n    })) {\n      throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_queryCore.isServer && (0, _suspense.willFetch)(result, isRestoring)) {\n      var promise = isNewCacheEntry ?\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      (0, _suspense.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) :\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n      promise?.catch(_queryCore.noop).finally(() => {\n        observer.updateResult();\n      });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n  }\n});","lineCount":79,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[5,6,3,0,"_interopRequireDefault"],[5,28,3,0],[5,31,3,0,"require"],[5,38,3,0],[5,39,3,0,"_dependencyMap"],[5,53,3,0],[6,2,3,0,"Object"],[6,8,3,0],[6,9,3,0,"defineProperty"],[6,23,3,0],[6,24,3,0,"exports"],[6,31,3,0],[7,4,3,0,"value"],[7,9,3,0],[8,2,3,0],[9,2,3,0,"exports"],[9,9,3,0],[9,10,3,0,"useBaseQuery"],[9,22,3,0],[9,25,3,0,"useBaseQuery"],[9,37,3,0],[10,2,3,0],[10,6,3,0,"_slicedToArray2"],[10,21,3,0],[10,24,3,0,"_interopRequireDefault"],[10,46,3,0],[10,47,3,0,"require"],[10,54,3,0],[10,55,3,0,"_dependencyMap"],[10,69,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,5,0],[12,6,5,0,"_queryCore"],[12,16,5,0],[12,19,5,0,"require"],[12,26,5,0],[12,27,5,0,"_dependencyMap"],[12,41,5,0],[13,2,6,0],[13,6,6,0,"_QueryClientProvider"],[13,26,6,0],[13,29,6,0,"require"],[13,36,6,0],[13,37,6,0,"_dependencyMap"],[13,51,6,0],[14,2,7,0],[14,6,7,0,"_QueryErrorResetBoundary"],[14,30,7,0],[14,33,7,0,"require"],[14,40,7,0],[14,41,7,0,"_dependencyMap"],[14,55,7,0],[15,2,8,0],[15,6,8,0,"_errorBoundaryUtils"],[15,25,8,0],[15,28,8,0,"require"],[15,35,8,0],[15,36,8,0,"_dependencyMap"],[15,50,8,0],[16,2,13,0],[16,6,13,0,"_IsRestoringProvider"],[16,26,13,0],[16,29,13,0,"require"],[16,36,13,0],[16,37,13,0,"_dependencyMap"],[16,51,13,0],[17,2,14,0],[17,6,14,0,"_suspense"],[17,15,14,0],[17,18,14,0,"require"],[17,25,14,0],[17,26,14,0,"_dependencyMap"],[17,40,14,0],[18,2,19,23],[18,11,19,23,"_interopRequireWildcard"],[18,35,19,23,"e"],[18,36,19,23],[18,38,19,23,"t"],[18,39,19,23],[18,68,19,23,"WeakMap"],[18,75,19,23],[18,81,19,23,"r"],[18,82,19,23],[18,89,19,23,"WeakMap"],[18,96,19,23],[18,100,19,23,"n"],[18,101,19,23],[18,108,19,23,"WeakMap"],[18,115,19,23],[18,127,19,23,"_interopRequireWildcard"],[18,150,19,23],[18,162,19,23,"_interopRequireWildcard"],[18,163,19,23,"e"],[18,164,19,23],[18,166,19,23,"t"],[18,167,19,23],[18,176,19,23,"t"],[18,177,19,23],[18,181,19,23,"e"],[18,182,19,23],[18,186,19,23,"e"],[18,187,19,23],[18,188,19,23,"__esModule"],[18,198,19,23],[18,207,19,23,"e"],[18,208,19,23],[18,214,19,23,"o"],[18,215,19,23],[18,217,19,23,"i"],[18,218,19,23],[18,220,19,23,"f"],[18,221,19,23],[18,226,19,23,"__proto__"],[18,235,19,23],[18,243,19,23,"default"],[18,250,19,23],[18,252,19,23,"e"],[18,253,19,23],[18,270,19,23,"e"],[18,271,19,23],[18,294,19,23,"e"],[18,295,19,23],[18,320,19,23,"e"],[18,321,19,23],[18,330,19,23,"f"],[18,331,19,23],[18,337,19,23,"o"],[18,338,19,23],[18,341,19,23,"t"],[18,342,19,23],[18,345,19,23,"n"],[18,346,19,23],[18,349,19,23,"r"],[18,350,19,23],[18,358,19,23,"o"],[18,359,19,23],[18,360,19,23,"has"],[18,363,19,23],[18,364,19,23,"e"],[18,365,19,23],[18,375,19,23,"o"],[18,376,19,23],[18,377,19,23,"get"],[18,380,19,23],[18,381,19,23,"e"],[18,382,19,23],[18,385,19,23,"o"],[18,386,19,23],[18,387,19,23,"set"],[18,390,19,23],[18,391,19,23,"e"],[18,392,19,23],[18,394,19,23,"f"],[18,395,19,23],[18,409,19,23,"_t"],[18,411,19,23],[18,415,19,23,"e"],[18,416,19,23],[18,432,19,23,"_t"],[18,434,19,23],[18,441,19,23,"hasOwnProperty"],[18,455,19,23],[18,456,19,23,"call"],[18,460,19,23],[18,461,19,23,"e"],[18,462,19,23],[18,464,19,23,"_t"],[18,466,19,23],[18,473,19,23,"i"],[18,474,19,23],[18,478,19,23,"o"],[18,479,19,23],[18,482,19,23,"Object"],[18,488,19,23],[18,489,19,23,"defineProperty"],[18,503,19,23],[18,508,19,23,"Object"],[18,514,19,23],[18,515,19,23,"getOwnPropertyDescriptor"],[18,539,19,23],[18,540,19,23,"e"],[18,541,19,23],[18,543,19,23,"_t"],[18,545,19,23],[18,552,19,23,"i"],[18,553,19,23],[18,554,19,23,"get"],[18,557,19,23],[18,561,19,23,"i"],[18,562,19,23],[18,563,19,23,"set"],[18,566,19,23],[18,570,19,23,"o"],[18,571,19,23],[18,572,19,23,"f"],[18,573,19,23],[18,575,19,23,"_t"],[18,577,19,23],[18,579,19,23,"i"],[18,580,19,23],[18,584,19,23,"f"],[18,585,19,23],[18,586,19,23,"_t"],[18,588,19,23],[18,592,19,23,"e"],[18,593,19,23],[18,594,19,23,"_t"],[18,596,19,23],[18,607,19,23,"f"],[18,608,19,23],[18,613,19,23,"e"],[18,614,19,23],[18,616,19,23,"t"],[18,617,19,23],[19,2,20,0],[19,11,20,9,"useBaseQuery"],[19,23,20,21,"useBaseQuery"],[19,24,20,22,"options"],[19,31,20,29],[19,33,20,31,"Observer"],[19,41,20,39],[19,43,20,41,"queryClient"],[19,54,20,52],[19,56,20,54],[20,4,21,2],[20,8,21,6,"process"],[20,15,21,13],[20,16,21,14,"env"],[20,19,21,17],[20,20,21,18,"NODE_ENV"],[20,28,21,26],[20,33,21,31],[20,45,21,43],[20,47,21,45],[21,6,22,4],[21,10,22,8],[21,17,22,15,"options"],[21,24,22,22],[21,29,22,27],[21,37,22,35],[21,41,22,39,"Array"],[21,46,22,44],[21,47,22,45,"isArray"],[21,54,22,52],[21,55,22,53,"options"],[21,62,22,60],[21,63,22,61],[21,65,22,63],[22,8,23,6],[22,14,23,12],[22,18,23,16,"Error"],[22,23,23,21],[22,24,24,8],[22,310,25,6],[22,311,25,7],[23,6,26,4],[24,4,27,2],[25,4,28,2],[25,8,28,8,"isRestoring"],[25,19,28,19],[25,22,28,22],[25,26,28,22,"useIsRestoring"],[25,61,28,36],[25,63,28,37],[25,64,28,38],[26,4,29,2],[26,8,29,8,"errorResetBoundary"],[26,26,29,26],[26,29,29,29],[26,33,29,29,"useQueryErrorResetBoundary"],[26,84,29,55],[26,86,29,56],[26,87,29,57],[27,4,30,2],[27,8,30,8,"client"],[27,14,30,14],[27,17,30,17],[27,21,30,17,"useQueryClient"],[27,56,30,31],[27,58,30,32,"queryClient"],[27,69,30,43],[27,70,30,44],[28,4,31,2],[28,8,31,8,"defaultedOptions"],[28,24,31,24],[28,27,31,27,"client"],[28,33,31,33],[28,34,31,34,"defaultQueryOptions"],[28,53,31,53],[28,54,31,54,"options"],[28,61,31,61],[28,62,31,62],[29,4,32,2,"client"],[29,10,32,8],[29,11,32,9,"getDefaultOptions"],[29,28,32,26],[29,29,32,27],[29,30,32,28],[29,31,32,29,"queries"],[29,38,32,36],[29,40,32,38,"_experimental_beforeQuery"],[29,65,32,63],[29,68,33,4,"defaultedOptions"],[29,84,34,2],[29,85,34,3],[30,4,35,2],[30,8,35,6,"process"],[30,15,35,13],[30,16,35,14,"env"],[30,19,35,17],[30,20,35,18,"NODE_ENV"],[30,28,35,26],[30,33,35,31],[30,45,35,43],[30,47,35,45],[31,6,36,4],[31,10,36,8],[31,11,36,9,"defaultedOptions"],[31,27,36,25],[31,28,36,26,"queryFn"],[31,35,36,33],[31,37,36,35],[32,8,37,6,"console"],[32,15,37,13],[32,16,37,14,"error"],[32,21,37,19],[32,22,38,8],[32,26,38,12,"defaultedOptions"],[32,42,38,28],[32,43,38,29,"queryHash"],[32,52,38,38],[32,296,39,6],[32,297,39,7],[33,6,40,4],[34,4,41,2],[35,4,42,2,"defaultedOptions"],[35,20,42,18],[35,21,42,19,"_optimisticResults"],[35,39,42,37],[35,42,42,40,"isRestoring"],[35,53,42,51],[35,56,42,54],[35,69,42,67],[35,72,42,70],[35,84,42,82],[36,4,43,2],[36,8,43,2,"ensureSuspenseTimers"],[36,38,43,22],[36,40,43,23,"defaultedOptions"],[36,56,43,39],[36,57,43,40],[37,4,44,2],[37,8,44,2,"ensurePreventErrorBoundaryRetry"],[37,59,44,33],[37,61,44,34,"defaultedOptions"],[37,77,44,50],[37,79,44,52,"errorResetBoundary"],[37,97,44,70],[37,98,44,71],[38,4,45,2],[38,8,45,2,"useClearResetErrorBoundary"],[38,54,45,28],[38,56,45,29,"errorResetBoundary"],[38,74,45,47],[38,75,45,48],[39,4,46,2],[39,8,46,8,"isNewCacheEntry"],[39,23,46,23],[39,26,46,26],[39,27,46,27,"client"],[39,33,46,33],[39,34,46,34,"getQueryCache"],[39,47,46,47],[39,48,46,48],[39,49,46,49],[39,50,46,50,"get"],[39,53,46,53],[39,54,46,54,"defaultedOptions"],[39,70,46,70],[39,71,46,71,"queryHash"],[39,80,46,80],[39,81,46,81],[40,4,47,2],[40,8,47,2,"_React$useState"],[40,23,47,2],[40,26,47,21,"React"],[40,31,47,26],[40,32,47,27,"useState"],[40,40,47,35],[40,41,48,4],[40,47,48,10],[40,51,48,14,"Observer"],[40,59,48,22],[40,60,49,6,"client"],[40,66,49,12],[40,68,50,6,"defaultedOptions"],[40,84,51,4],[40,85,52,2],[40,86,52,3],[41,6,52,3,"_React$useState2"],[41,22,52,3],[41,29,52,3,"_slicedToArray2"],[41,44,52,3],[41,45,52,3,"default"],[41,52,52,3],[41,54,52,3,"_React$useState"],[41,69,52,3],[42,6,47,9,"observer"],[42,14,47,17],[42,17,47,17,"_React$useState2"],[42,33,47,17],[43,4,53,2],[43,8,53,8,"result"],[43,14,53,14],[43,17,53,17,"observer"],[43,25,53,25],[43,26,53,26,"getOptimisticResult"],[43,45,53,45],[43,46,53,46,"defaultedOptions"],[43,62,53,62],[43,63,53,63],[44,4,54,2],[44,8,54,8,"shouldSubscribe"],[44,23,54,23],[44,26,54,26],[44,27,54,27,"isRestoring"],[44,38,54,38],[44,42,54,42,"options"],[44,49,54,49],[44,50,54,50,"subscribed"],[44,60,54,60],[44,65,54,65],[44,70,54,70],[45,4,55,2,"React"],[45,9,55,7],[45,10,55,8,"useSyncExternalStore"],[45,30,55,28],[45,31,56,4,"React"],[45,36,56,9],[45,37,56,10,"useCallback"],[45,48,56,21],[45,49,57,7,"onStoreChange"],[45,62,57,20],[45,66,57,25],[46,6,58,8],[46,10,58,14,"unsubscribe"],[46,21,58,25],[46,24,58,28,"shouldSubscribe"],[46,39,58,43],[46,42,58,46,"observer"],[46,50,58,54],[46,51,58,55,"subscribe"],[46,60,58,64],[46,61,58,65,"notifyManager"],[46,85,58,78],[46,86,58,79,"batchCalls"],[46,96,58,89],[46,97,58,90,"onStoreChange"],[46,110,58,103],[46,111,58,104],[46,112,58,105],[46,115,58,108,"noop"],[46,130,58,112],[47,6,59,8,"observer"],[47,14,59,16],[47,15,59,17,"updateResult"],[47,27,59,29],[47,28,59,30],[47,29,59,31],[48,6,60,8],[48,13,60,15,"unsubscribe"],[48,24,60,26],[49,4,61,6],[49,5,61,7],[49,7,62,6],[49,8,62,7,"observer"],[49,16,62,15],[49,18,62,17,"shouldSubscribe"],[49,33,62,32],[49,34,63,4],[49,35,63,5],[49,37,64,4],[49,43,64,10,"observer"],[49,51,64,18],[49,52,64,19,"getCurrentResult"],[49,68,64,35],[49,69,64,36],[49,70,64,37],[49,72,65,4],[49,78,65,10,"observer"],[49,86,65,18],[49,87,65,19,"getCurrentResult"],[49,103,65,35],[49,104,65,36],[49,105,66,2],[49,106,66,3],[50,4,67,2,"React"],[50,9,67,7],[50,10,67,8,"useEffect"],[50,19,67,17],[50,20,67,18],[50,26,67,24],[51,6,68,4,"observer"],[51,14,68,12],[51,15,68,13,"setOptions"],[51,25,68,23],[51,26,68,24,"defaultedOptions"],[51,42,68,40],[51,43,68,41],[52,4,69,2],[52,5,69,3],[52,7,69,5],[52,8,69,6,"defaultedOptions"],[52,24,69,22],[52,26,69,24,"observer"],[52,34,69,32],[52,35,69,33],[52,36,69,34],[53,4,70,2],[53,8,70,6],[53,12,70,6,"shouldSuspend"],[53,35,70,19],[53,37,70,20,"defaultedOptions"],[53,53,70,36],[53,55,70,38,"result"],[53,61,70,44],[53,62,70,45],[53,64,70,47],[54,6,71,4],[54,12,71,10],[54,16,71,10,"fetchOptimistic"],[54,41,71,25],[54,43,71,26,"defaultedOptions"],[54,59,71,42],[54,61,71,44,"observer"],[54,69,71,52],[54,71,71,54,"errorResetBoundary"],[54,89,71,72],[54,90,71,73],[55,4,72,2],[56,4,73,2],[56,8,73,6],[56,12,73,6,"getHasError"],[56,43,73,17],[56,45,73,18],[57,6,74,4,"result"],[57,12,74,10],[58,6,75,4,"errorResetBoundary"],[58,24,75,22],[59,6,76,4,"throwOnError"],[59,18,76,16],[59,20,76,18,"defaultedOptions"],[59,36,76,34],[59,37,76,35,"throwOnError"],[59,49,76,47],[60,6,77,4,"query"],[60,11,77,9],[60,13,77,11,"client"],[60,19,77,17],[60,20,77,18,"getQueryCache"],[60,33,77,31],[60,34,77,32],[60,35,77,33],[60,36,77,34,"get"],[60,39,77,37],[60,40,77,38,"defaultedOptions"],[60,56,77,54],[60,57,77,55,"queryHash"],[60,66,77,64],[60,67,77,65],[61,6,78,4,"suspense"],[61,14,78,12],[61,16,78,14,"defaultedOptions"],[61,32,78,30],[61,33,78,31,"suspense"],[62,4,79,2],[62,5,79,3],[62,6,79,4],[62,8,79,6],[63,6,80,4],[63,12,80,10,"result"],[63,18,80,16],[63,19,80,17,"error"],[63,24,80,22],[64,4,81,2],[65,4,82,2],[66,4,83,2,"client"],[66,10,83,8],[66,11,83,9,"getDefaultOptions"],[66,28,83,26],[66,29,83,27],[66,30,83,28],[66,31,83,29,"queries"],[66,38,83,36],[66,40,83,38,"_experimental_afterQuery"],[66,64,83,62],[66,67,84,4,"defaultedOptions"],[66,83,84,20],[66,85,85,4,"result"],[66,91,86,2],[66,92,86,3],[67,4,87,2],[67,8,87,6,"defaultedOptions"],[67,24,87,22],[67,25,87,23,"experimental_prefetchInRender"],[67,54,87,52],[67,58,87,56],[67,59,87,57,"isServer"],[67,78,87,65],[67,82,87,69],[67,86,87,69,"willFetch"],[67,105,87,78],[67,107,87,79,"result"],[67,113,87,85],[67,115,87,87,"isRestoring"],[67,126,87,98],[67,127,87,99],[67,129,87,101],[68,6,88,4],[68,10,88,10,"promise"],[68,17,88,17],[68,20,88,20,"isNewCacheEntry"],[68,35,88,35],[69,6,89,6],[70,6,90,6],[70,10,90,6,"fetchOptimistic"],[70,35,90,21],[70,37,90,22,"defaultedOptions"],[70,53,90,38],[70,55,90,40,"observer"],[70,63,90,48],[70,65,90,50,"errorResetBoundary"],[70,83,90,68],[70,84,90,69],[71,6,92,6],[72,6,93,6,"client"],[72,12,93,12],[72,13,93,13,"getQueryCache"],[72,26,93,26],[72,27,93,27],[72,28,93,28],[72,29,93,29,"get"],[72,32,93,32],[72,33,93,33,"defaultedOptions"],[72,49,93,49],[72,50,93,50,"queryHash"],[72,59,93,59],[72,60,93,60],[72,62,93,62,"promise"],[72,69,94,5],[73,6,95,4,"promise"],[73,13,95,11],[73,15,95,13,"catch"],[73,20,95,18],[73,21,95,19,"noop"],[73,36,95,23],[73,37,95,24],[73,38,95,25,"finally"],[73,45,95,32],[73,46,95,33],[73,52,95,39],[74,8,96,6,"observer"],[74,16,96,14],[74,17,96,15,"updateResult"],[74,29,96,27],[74,30,96,28],[74,31,96,29],[75,6,97,4],[75,7,97,5],[75,8,97,6],[76,4,98,2],[77,4,99,2],[77,11,99,9],[77,12,99,10,"defaultedOptions"],[77,28,99,26],[77,29,99,27,"notifyOnChangeProps"],[77,48,99,46],[77,51,99,49,"observer"],[77,59,99,57],[77,60,99,58,"trackResult"],[77,71,99,69],[77,72,99,70,"result"],[77,78,99,76],[77,79,99,77],[77,82,99,80,"result"],[77,88,99,86],[78,2,100,0],[79,0,100,1],[79,3]],"functionMap":{"names":["<global>","useBaseQuery","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","promise._catch._finally$argument_0"],"mappings":"AAA;ACmB;IC4B;KDG;MEM;OFI;IGG,iCH;IIC,iCJ;kBKE;GLE;iCM0B;KNE;CDG"}},"type":"js/module"}]}