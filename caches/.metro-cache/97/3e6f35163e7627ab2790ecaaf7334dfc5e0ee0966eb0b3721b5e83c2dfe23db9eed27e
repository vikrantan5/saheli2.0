{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":32,"index":109}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":20,"index":131},"end":{"line":4,"column":42,"index":153}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}},{"name":"./errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":172},"end":{"line":5,"column":36,"index":191}}],"key":"GlkDztMSsNRYmp31iO+V/Albin8=","exportNames":["*"]}},{"name":"./fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":16,"index":209},"end":{"line":6,"column":34,"index":227}}],"key":"UJFbF+6y+lyz6VIB1bRQXGi9Ndw=","exportNames":["*"]}},{"name":"./helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":247},"end":{"line":7,"column":38,"index":267}}],"key":"f1qS3jT0PALHpwfgOy1Ia0GaJzk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var tslib_1 = require(_dependencyMap[2], \"tslib\");\n  var constants_1 = require(_dependencyMap[3], \"./constants\");\n  var errors_1 = require(_dependencyMap[4], \"./errors\");\n  var fetch_1 = require(_dependencyMap[5], \"./fetch\");\n  var helpers_1 = require(_dependencyMap[6], \"./helpers\");\n  /**\n   * API class for managing Vector Indexes within Vector Buckets\n   * Provides methods for creating, reading, listing, and deleting vector indexes\n   */\n  var VectorIndexApi = /*#__PURE__*/function () {\n    function VectorIndexApi(url) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fetch = arguments.length > 2 ? arguments[2] : undefined;\n      _classCallCheck(this, VectorIndexApi);\n      this.shouldThrowOnError = false;\n      this.url = url.replace(/\\/$/, '');\n      this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them in the response\n     * When enabled, failed operations will throw instead of returning { data: null, error }\n     *\n     * @returns This instance for method chaining\n     * @example\n     * ```typescript\n     * const client = new VectorIndexApi(url, headers)\n     * client.throwOnError()\n     * const { data } = await client.createIndex(options) // throws on error\n     * ```\n     */\n    return _createClass(VectorIndexApi, [{\n      key: \"throwOnError\",\n      value: function throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n      }\n      /**\n       * Creates a new vector index within a bucket\n       * Defines the schema for vectors including dimensionality, distance metric, and metadata config\n       *\n       * @param options - Index configuration\n       * @param options.vectorBucketName - Name of the parent vector bucket\n       * @param options.indexName - Unique name for the index within the bucket\n       * @param options.dataType - Data type for vector components (currently only 'float32')\n       * @param options.dimension - Dimensionality of vectors (e.g., 384, 768, 1536)\n       * @param options.distanceMetric - Similarity metric ('cosine', 'euclidean', 'dotproduct')\n       * @param options.metadataConfiguration - Optional config for non-filterable metadata keys\n       * @returns Promise with empty response on success or error\n       *\n       * @throws {StorageVectorsApiError} With code:\n       * - `S3VectorConflictException` if index already exists (HTTP 409)\n       * - `S3VectorMaxIndexesExceeded` if quota exceeded (HTTP 400)\n       * - `S3VectorNotFoundException` if bucket doesn't exist (HTTP 404)\n       * - `InternalError` for server errors (HTTP 500)\n       *\n       * @example\n       * ```typescript\n       * const { data, error } = await client.createIndex({\n       *   vectorBucketName: 'embeddings-prod',\n       *   indexName: 'documents-openai-small',\n       *   dataType: 'float32',\n       *   dimension: 1536,\n       *   distanceMetric: 'cosine',\n       *   metadataConfiguration: {\n       *     nonFilterableMetadataKeys: ['raw_text', 'internal_id']\n       *   }\n       * })\n       * ```\n       */\n    }, {\n      key: \"createIndex\",\n      value: function createIndex(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/CreateIndex`, options, {\n              headers: this.headers\n            });\n            return {\n              data: data || {},\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageVectorsError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Retrieves metadata for a specific vector index\n       * Returns index configuration including dimension, distance metric, and metadata settings\n       *\n       * @param vectorBucketName - Name of the parent vector bucket\n       * @param indexName - Name of the index to retrieve\n       * @returns Promise with index metadata or error\n       *\n       * @throws {StorageVectorsApiError} With code:\n       * - `S3VectorNotFoundException` if index or bucket doesn't exist (HTTP 404)\n       * - `InternalError` for server errors (HTTP 500)\n       *\n       * @example\n       * ```typescript\n       * const { data, error } = await client.getIndex('embeddings-prod', 'documents-openai-small')\n       * if (data) {\n       *   console.log('Index dimension:', data.index.dimension)\n       *   console.log('Distance metric:', data.index.distanceMetric)\n       * }\n       * ```\n       */\n    }, {\n      key: \"getIndex\",\n      value: function getIndex(vectorBucketName, indexName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/GetIndex`, {\n              vectorBucketName,\n              indexName\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageVectorsError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Lists vector indexes within a bucket with optional filtering and pagination\n       * Supports prefix-based filtering and paginated results\n       *\n       * @param options - Listing options\n       * @param options.vectorBucketName - Name of the parent vector bucket\n       * @param options.prefix - Filter indexes by name prefix\n       * @param options.maxResults - Maximum results per page (default: 100)\n       * @param options.nextToken - Pagination token from previous response\n       * @returns Promise with list of indexes and pagination token\n       *\n       * @throws {StorageVectorsApiError} With code:\n       * - `S3VectorNotFoundException` if bucket doesn't exist (HTTP 404)\n       * - `InternalError` for server errors (HTTP 500)\n       *\n       * @example\n       * ```typescript\n       * // List all indexes in a bucket\n       * const { data, error } = await client.listIndexes({\n       *   vectorBucketName: 'embeddings-prod',\n       *   prefix: 'documents-'\n       * })\n       * if (data) {\n       *   console.log('Found indexes:', data.indexes.map(i => i.indexName))\n       *   // Fetch next page if available\n       *   if (data.nextToken) {\n       *     const next = await client.listIndexes({\n       *       vectorBucketName: 'embeddings-prod',\n       *       nextToken: data.nextToken\n       *     })\n       *   }\n       * }\n       * ```\n       */\n    }, {\n      key: \"listIndexes\",\n      value: function listIndexes(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/ListIndexes`, options, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageVectorsError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Deletes a vector index and all its data\n       * This operation removes the index schema and all vectors stored in the index\n       *\n       * @param vectorBucketName - Name of the parent vector bucket\n       * @param indexName - Name of the index to delete\n       * @returns Promise with empty response on success or error\n       *\n       * @throws {StorageVectorsApiError} With code:\n       * - `S3VectorNotFoundException` if index or bucket doesn't exist (HTTP 404)\n       * - `InternalError` for server errors (HTTP 500)\n       *\n       * @example\n       * ```typescript\n       * // Delete an index and all its vectors\n       * const { error } = await client.deleteIndex('embeddings-prod', 'old-index')\n       * if (!error) {\n       *   console.log('Index deleted successfully')\n       * }\n       * ```\n       */\n    }, {\n      key: \"deleteIndex\",\n      value: function deleteIndex(vectorBucketName, indexName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/DeleteIndex`, {\n              vectorBucketName,\n              indexName\n            }, {\n              headers: this.headers\n            });\n            return {\n              data: data || {},\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageVectorsError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n    }]);\n  }();\n  exports.default = VectorIndexApi;\n});","lineCount":268,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0],[9,6,3,6,"tslib_1"],[9,13,3,13],[9,16,3,16,"require"],[9,23,3,23],[9,24,3,23,"_dependencyMap"],[9,38,3,23],[9,50,3,31],[9,51,3,32],[10,2,4,0],[10,6,4,6,"constants_1"],[10,17,4,17],[10,20,4,20,"require"],[10,27,4,27],[10,28,4,27,"_dependencyMap"],[10,42,4,27],[10,60,4,41],[10,61,4,42],[11,2,5,0],[11,6,5,6,"errors_1"],[11,14,5,14],[11,17,5,17,"require"],[11,24,5,24],[11,25,5,24,"_dependencyMap"],[11,39,5,24],[11,54,5,35],[11,55,5,36],[12,2,6,0],[12,6,6,6,"fetch_1"],[12,13,6,13],[12,16,6,16,"require"],[12,23,6,23],[12,24,6,23,"_dependencyMap"],[12,38,6,23],[12,52,6,33],[12,53,6,34],[13,2,7,0],[13,6,7,6,"helpers_1"],[13,15,7,15],[13,18,7,18,"require"],[13,25,7,25],[13,26,7,25,"_dependencyMap"],[13,40,7,25],[13,56,7,37],[13,57,7,38],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,2,8,0],[18,6,12,6,"VectorIndexApi"],[18,20,12,20],[19,4,13,4],[19,13,13,4,"VectorIndexApi"],[19,28,13,16,"url"],[19,31,13,19],[19,33,13,42],[20,6,13,42],[20,10,13,21,"headers"],[20,17,13,28],[20,20,13,28,"arguments"],[20,29,13,28],[20,30,13,28,"length"],[20,36,13,28],[20,44,13,28,"arguments"],[20,53,13,28],[20,61,13,28,"undefined"],[20,70,13,28],[20,73,13,28,"arguments"],[20,82,13,28],[20,88,13,31],[20,89,13,32],[20,90,13,33],[21,6,13,33],[21,10,13,35,"fetch"],[21,15,13,40],[21,18,13,40,"arguments"],[21,27,13,40],[21,28,13,40,"length"],[21,34,13,40],[21,41,13,40,"arguments"],[21,50,13,40],[21,56,13,40,"undefined"],[21,65,13,40],[22,6,13,40,"_classCallCheck"],[22,21,13,40],[22,28,13,40,"VectorIndexApi"],[22,42,13,40],[23,6,14,8],[23,10,14,12],[23,11,14,13,"shouldThrowOnError"],[23,29,14,31],[23,32,14,34],[23,37,14,39],[24,6,15,8],[24,10,15,12],[24,11,15,13,"url"],[24,14,15,16],[24,17,15,19,"url"],[24,20,15,22],[24,21,15,23,"replace"],[24,28,15,30],[24,29,15,31],[24,34,15,36],[24,36,15,38],[24,38,15,40],[24,39,15,41],[25,6,16,8],[25,10,16,12],[25,11,16,13,"headers"],[25,18,16,20],[25,21,16,23,"Object"],[25,27,16,29],[25,28,16,30,"assign"],[25,34,16,36],[25,35,16,37,"Object"],[25,41,16,43],[25,42,16,44,"assign"],[25,48,16,50],[25,49,16,51],[25,50,16,52],[25,51,16,53],[25,53,16,55,"constants_1"],[25,64,16,66],[25,65,16,67,"DEFAULT_HEADERS"],[25,80,16,82],[25,81,16,83],[25,83,16,85,"headers"],[25,90,16,92],[25,91,16,93],[26,6,17,8],[26,10,17,12],[26,11,17,13,"fetch"],[26,16,17,18],[26,19,17,21],[26,20,17,22],[26,21,17,23],[26,23,17,25,"helpers_1"],[26,32,17,34],[26,33,17,35,"resolveFetch"],[26,45,17,47],[26,47,17,49,"fetch"],[26,52,17,54],[26,53,17,55],[27,4,18,4],[28,4,19,4],[29,0,20,0],[30,0,21,0],[31,0,22,0],[32,0,23,0],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,4,19,4],[40,11,19,4,"_createClass"],[40,23,19,4],[40,24,19,4,"VectorIndexApi"],[40,38,19,4],[41,6,19,4,"key"],[41,9,19,4],[42,6,19,4,"value"],[42,11,19,4],[42,13,31,4],[42,22,31,4,"throwOnError"],[42,34,31,16,"throwOnError"],[42,35,31,16],[42,37,31,19],[43,8,32,8],[43,12,32,12],[43,13,32,13,"shouldThrowOnError"],[43,31,32,31],[43,34,32,34],[43,38,32,38],[44,8,33,8],[44,15,33,15],[44,19,33,19],[45,6,34,4],[46,6,35,4],[47,0,36,0],[48,0,37,0],[49,0,38,0],[50,0,39,0],[51,0,40,0],[52,0,41,0],[53,0,42,0],[54,0,43,0],[55,0,44,0],[56,0,45,0],[57,0,46,0],[58,0,47,0],[59,0,48,0],[60,0,49,0],[61,0,50,0],[62,0,51,0],[63,0,52,0],[64,0,53,0],[65,0,54,0],[66,0,55,0],[67,0,56,0],[68,0,57,0],[69,0,58,0],[70,0,59,0],[71,0,60,0],[72,0,61,0],[73,0,62,0],[74,0,63,0],[75,0,64,0],[76,0,65,0],[77,0,66,0],[78,0,67,0],[79,4,35,4],[80,6,35,4,"key"],[80,9,35,4],[81,6,35,4,"value"],[81,11,35,4],[81,13,68,4],[81,22,68,4,"createIndex"],[81,33,68,15,"createIndex"],[81,34,68,16,"options"],[81,41,68,23],[81,43,68,25],[82,8,69,8],[82,15,69,15,"tslib_1"],[82,22,69,22],[82,23,69,23,"__awaiter"],[82,32,69,32],[82,33,69,33],[82,37,69,37],[82,39,69,39],[82,44,69,44],[82,45,69,45],[82,47,69,47],[82,52,69,52],[82,53,69,53],[82,55,69,55],[82,68,69,68],[83,10,70,12],[83,14,70,16],[84,12,71,16],[84,16,71,22,"data"],[84,20,71,26],[84,23,71,29],[84,29,71,35],[84,30,71,36],[84,31,71,37],[84,33,71,39,"fetch_1"],[84,40,71,46],[84,41,71,47,"post"],[84,45,71,51],[84,47,71,53],[84,51,71,57],[84,52,71,58,"fetch"],[84,57,71,63],[84,59,71,65],[84,62,71,68],[84,66,71,72],[84,67,71,73,"url"],[84,70,71,76],[84,84,71,90],[84,86,71,92,"options"],[84,93,71,99],[84,95,71,101],[85,14,72,20,"headers"],[85,21,72,27],[85,23,72,29],[85,27,72,33],[85,28,72,34,"headers"],[86,12,73,16],[86,13,73,17],[86,14,73,18],[87,12,74,16],[87,19,74,23],[88,14,74,25,"data"],[88,18,74,29],[88,20,74,31,"data"],[88,24,74,35],[88,28,74,39],[88,29,74,40],[88,30,74,41],[89,14,74,43,"error"],[89,19,74,48],[89,21,74,50],[90,12,74,55],[90,13,74,56],[91,10,75,12],[91,11,75,13],[91,12,76,12],[91,19,76,19,"error"],[91,24,76,24],[91,26,76,26],[92,12,77,16],[92,16,77,20],[92,20,77,24],[92,21,77,25,"shouldThrowOnError"],[92,39,77,43],[92,41,77,45],[93,14,78,20],[93,20,78,26,"error"],[93,25,78,31],[94,12,79,16],[95,12,80,16],[95,16,80,20],[95,17,80,21],[95,18,80,22],[95,20,80,24,"errors_1"],[95,28,80,32],[95,29,80,33,"isStorageVectorsError"],[95,50,80,54],[95,52,80,56,"error"],[95,57,80,61],[95,58,80,62],[95,60,80,64],[96,14,81,20],[96,21,81,27],[97,16,81,29,"data"],[97,20,81,33],[97,22,81,35],[97,26,81,39],[98,16,81,41,"error"],[99,14,81,47],[99,15,81,48],[100,12,82,16],[101,12,83,16],[101,18,83,22,"error"],[101,23,83,27],[102,10,84,12],[103,8,85,8],[103,9,85,9],[103,10,85,10],[104,6,86,4],[105,6,87,4],[106,0,88,0],[107,0,89,0],[108,0,90,0],[109,0,91,0],[110,0,92,0],[111,0,93,0],[112,0,94,0],[113,0,95,0],[114,0,96,0],[115,0,97,0],[116,0,98,0],[117,0,99,0],[118,0,100,0],[119,0,101,0],[120,0,102,0],[121,0,103,0],[122,0,104,0],[123,0,105,0],[124,0,106,0],[125,0,107,0],[126,4,87,4],[127,6,87,4,"key"],[127,9,87,4],[128,6,87,4,"value"],[128,11,87,4],[128,13,108,4],[128,22,108,4,"getIndex"],[128,30,108,12,"getIndex"],[128,31,108,13,"vectorBucketName"],[128,47,108,29],[128,49,108,31,"indexName"],[128,58,108,40],[128,60,108,42],[129,8,109,8],[129,15,109,15,"tslib_1"],[129,22,109,22],[129,23,109,23,"__awaiter"],[129,32,109,32],[129,33,109,33],[129,37,109,37],[129,39,109,39],[129,44,109,44],[129,45,109,45],[129,47,109,47],[129,52,109,52],[129,53,109,53],[129,55,109,55],[129,68,109,68],[130,10,110,12],[130,14,110,16],[131,12,111,16],[131,16,111,22,"data"],[131,20,111,26],[131,23,111,29],[131,29,111,35],[131,30,111,36],[131,31,111,37],[131,33,111,39,"fetch_1"],[131,40,111,46],[131,41,111,47,"post"],[131,45,111,51],[131,47,111,53],[131,51,111,57],[131,52,111,58,"fetch"],[131,57,111,63],[131,59,111,65],[131,62,111,68],[131,66,111,72],[131,67,111,73,"url"],[131,70,111,76],[131,81,111,87],[131,83,111,89],[132,14,111,91,"vectorBucketName"],[132,30,111,107],[133,14,111,109,"indexName"],[134,12,111,119],[134,13,111,120],[134,15,111,122],[135,14,111,124,"headers"],[135,21,111,131],[135,23,111,133],[135,27,111,137],[135,28,111,138,"headers"],[136,12,111,146],[136,13,111,147],[136,14,111,148],[137,12,112,16],[137,19,112,23],[138,14,112,25,"data"],[138,18,112,29],[139,14,112,31,"error"],[139,19,112,36],[139,21,112,38],[140,12,112,43],[140,13,112,44],[141,10,113,12],[141,11,113,13],[141,12,114,12],[141,19,114,19,"error"],[141,24,114,24],[141,26,114,26],[142,12,115,16],[142,16,115,20],[142,20,115,24],[142,21,115,25,"shouldThrowOnError"],[142,39,115,43],[142,41,115,45],[143,14,116,20],[143,20,116,26,"error"],[143,25,116,31],[144,12,117,16],[145,12,118,16],[145,16,118,20],[145,17,118,21],[145,18,118,22],[145,20,118,24,"errors_1"],[145,28,118,32],[145,29,118,33,"isStorageVectorsError"],[145,50,118,54],[145,52,118,56,"error"],[145,57,118,61],[145,58,118,62],[145,60,118,64],[146,14,119,20],[146,21,119,27],[147,16,119,29,"data"],[147,20,119,33],[147,22,119,35],[147,26,119,39],[148,16,119,41,"error"],[149,14,119,47],[149,15,119,48],[150,12,120,16],[151,12,121,16],[151,18,121,22,"error"],[151,23,121,27],[152,10,122,12],[153,8,123,8],[153,9,123,9],[153,10,123,10],[154,6,124,4],[155,6,125,4],[156,0,126,0],[157,0,127,0],[158,0,128,0],[159,0,129,0],[160,0,130,0],[161,0,131,0],[162,0,132,0],[163,0,133,0],[164,0,134,0],[165,0,135,0],[166,0,136,0],[167,0,137,0],[168,0,138,0],[169,0,139,0],[170,0,140,0],[171,0,141,0],[172,0,142,0],[173,0,143,0],[174,0,144,0],[175,0,145,0],[176,0,146,0],[177,0,147,0],[178,0,148,0],[179,0,149,0],[180,0,150,0],[181,0,151,0],[182,0,152,0],[183,0,153,0],[184,0,154,0],[185,0,155,0],[186,0,156,0],[187,0,157,0],[188,0,158,0],[189,4,125,4],[190,6,125,4,"key"],[190,9,125,4],[191,6,125,4,"value"],[191,11,125,4],[191,13,159,4],[191,22,159,4,"listIndexes"],[191,33,159,15,"listIndexes"],[191,34,159,16,"options"],[191,41,159,23],[191,43,159,25],[192,8,160,8],[192,15,160,15,"tslib_1"],[192,22,160,22],[192,23,160,23,"__awaiter"],[192,32,160,32],[192,33,160,33],[192,37,160,37],[192,39,160,39],[192,44,160,44],[192,45,160,45],[192,47,160,47],[192,52,160,52],[192,53,160,53],[192,55,160,55],[192,68,160,68],[193,10,161,12],[193,14,161,16],[194,12,162,16],[194,16,162,22,"data"],[194,20,162,26],[194,23,162,29],[194,29,162,35],[194,30,162,36],[194,31,162,37],[194,33,162,39,"fetch_1"],[194,40,162,46],[194,41,162,47,"post"],[194,45,162,51],[194,47,162,53],[194,51,162,57],[194,52,162,58,"fetch"],[194,57,162,63],[194,59,162,65],[194,62,162,68],[194,66,162,72],[194,67,162,73,"url"],[194,70,162,76],[194,84,162,90],[194,86,162,92,"options"],[194,93,162,99],[194,95,162,101],[195,14,163,20,"headers"],[195,21,163,27],[195,23,163,29],[195,27,163,33],[195,28,163,34,"headers"],[196,12,164,16],[196,13,164,17],[196,14,164,18],[197,12,165,16],[197,19,165,23],[198,14,165,25,"data"],[198,18,165,29],[199,14,165,31,"error"],[199,19,165,36],[199,21,165,38],[200,12,165,43],[200,13,165,44],[201,10,166,12],[201,11,166,13],[201,12,167,12],[201,19,167,19,"error"],[201,24,167,24],[201,26,167,26],[202,12,168,16],[202,16,168,20],[202,20,168,24],[202,21,168,25,"shouldThrowOnError"],[202,39,168,43],[202,41,168,45],[203,14,169,20],[203,20,169,26,"error"],[203,25,169,31],[204,12,170,16],[205,12,171,16],[205,16,171,20],[205,17,171,21],[205,18,171,22],[205,20,171,24,"errors_1"],[205,28,171,32],[205,29,171,33,"isStorageVectorsError"],[205,50,171,54],[205,52,171,56,"error"],[205,57,171,61],[205,58,171,62],[205,60,171,64],[206,14,172,20],[206,21,172,27],[207,16,172,29,"data"],[207,20,172,33],[207,22,172,35],[207,26,172,39],[208,16,172,41,"error"],[209,14,172,47],[209,15,172,48],[210,12,173,16],[211,12,174,16],[211,18,174,22,"error"],[211,23,174,27],[212,10,175,12],[213,8,176,8],[213,9,176,9],[213,10,176,10],[214,6,177,4],[215,6,178,4],[216,0,179,0],[217,0,180,0],[218,0,181,0],[219,0,182,0],[220,0,183,0],[221,0,184,0],[222,0,185,0],[223,0,186,0],[224,0,187,0],[225,0,188,0],[226,0,189,0],[227,0,190,0],[228,0,191,0],[229,0,192,0],[230,0,193,0],[231,0,194,0],[232,0,195,0],[233,0,196,0],[234,0,197,0],[235,0,198,0],[236,4,178,4],[237,6,178,4,"key"],[237,9,178,4],[238,6,178,4,"value"],[238,11,178,4],[238,13,199,4],[238,22,199,4,"deleteIndex"],[238,33,199,15,"deleteIndex"],[238,34,199,16,"vectorBucketName"],[238,50,199,32],[238,52,199,34,"indexName"],[238,61,199,43],[238,63,199,45],[239,8,200,8],[239,15,200,15,"tslib_1"],[239,22,200,22],[239,23,200,23,"__awaiter"],[239,32,200,32],[239,33,200,33],[239,37,200,37],[239,39,200,39],[239,44,200,44],[239,45,200,45],[239,47,200,47],[239,52,200,52],[239,53,200,53],[239,55,200,55],[239,68,200,68],[240,10,201,12],[240,14,201,16],[241,12,202,16],[241,16,202,22,"data"],[241,20,202,26],[241,23,202,29],[241,29,202,35],[241,30,202,36],[241,31,202,37],[241,33,202,39,"fetch_1"],[241,40,202,46],[241,41,202,47,"post"],[241,45,202,51],[241,47,202,53],[241,51,202,57],[241,52,202,58,"fetch"],[241,57,202,63],[241,59,202,65],[241,62,202,68],[241,66,202,72],[241,67,202,73,"url"],[241,70,202,76],[241,84,202,90],[241,86,202,92],[242,14,202,94,"vectorBucketName"],[242,30,202,110],[243,14,202,112,"indexName"],[244,12,202,122],[244,13,202,123],[244,15,202,125],[245,14,202,127,"headers"],[245,21,202,134],[245,23,202,136],[245,27,202,140],[245,28,202,141,"headers"],[246,12,202,149],[246,13,202,150],[246,14,202,151],[247,12,203,16],[247,19,203,23],[248,14,203,25,"data"],[248,18,203,29],[248,20,203,31,"data"],[248,24,203,35],[248,28,203,39],[248,29,203,40],[248,30,203,41],[249,14,203,43,"error"],[249,19,203,48],[249,21,203,50],[250,12,203,55],[250,13,203,56],[251,10,204,12],[251,11,204,13],[251,12,205,12],[251,19,205,19,"error"],[251,24,205,24],[251,26,205,26],[252,12,206,16],[252,16,206,20],[252,20,206,24],[252,21,206,25,"shouldThrowOnError"],[252,39,206,43],[252,41,206,45],[253,14,207,20],[253,20,207,26,"error"],[253,25,207,31],[254,12,208,16],[255,12,209,16],[255,16,209,20],[255,17,209,21],[255,18,209,22],[255,20,209,24,"errors_1"],[255,28,209,32],[255,29,209,33,"isStorageVectorsError"],[255,50,209,54],[255,52,209,56,"error"],[255,57,209,61],[255,58,209,62],[255,60,209,64],[256,14,210,20],[256,21,210,27],[257,16,210,29,"data"],[257,20,210,33],[257,22,210,35],[257,26,210,39],[258,16,210,41,"error"],[259,14,210,47],[259,15,210,48],[260,12,211,16],[261,12,212,16],[261,18,212,22,"error"],[261,23,212,27],[262,10,213,12],[263,8,214,8],[263,9,214,9],[263,10,214,10],[264,6,215,4],[265,4,215,5],[266,2,215,5],[267,2,217,0,"exports"],[267,9,217,7],[267,10,217,8,"default"],[267,17,217,15],[267,20,217,18,"VectorIndexApi"],[267,34,217,32],[268,0,217,33],[268,3]],"functionMap":{"names":["<global>","VectorIndexApi","constructor","throwOnError","createIndex","tslib_1.__awaiter$argument_3","getIndex","listIndexes","deleteIndex"],"mappings":"AAA;ACW;ICC;KDK;IEa;KFG;IGkC;uDCC;SDgB;KHC;IKsB;uDDC;SCc;KLC;IMmC;uDFC;SEgB;KNC;IOsB;uDHC;SGc;KPC;CDC"}},"type":"js/module"}]}