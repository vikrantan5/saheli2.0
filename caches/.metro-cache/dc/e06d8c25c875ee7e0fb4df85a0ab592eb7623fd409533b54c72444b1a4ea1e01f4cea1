{"dependencies":[{"name":"./helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"kg0rJsyHf+Iyf4Z1AFOYGhKLkW4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.internals = exports.ProcessLockAcquireTimeoutError = exports.NavigatorLockAcquireTimeoutError = exports.LockAcquireTimeoutError = void 0;\n  exports.navigatorLock = navigatorLock;\n  exports.processLock = processLock;\n  var _helpers = require(_dependencyMap[0], \"./helpers\");\n  /**\n   * @experimental\n   */\n  const internals = exports.internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis && (0, _helpers.supportsLocalStorage)() && globalThis.localStorage && globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true')\n  };\n  /**\n   * An error thrown when a lock cannot be acquired after some amount of time.\n   *\n   * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n   */\n  class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n      super(message);\n      this.isAcquireTimeout = true;\n    }\n  }\n  exports.LockAcquireTimeoutError = LockAcquireTimeoutError;\n  class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  exports.NavigatorLockAcquireTimeoutError = NavigatorLockAcquireTimeoutError;\n  class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  /**\n   * Implements a global exclusive lock using the Navigator LockManager API. It\n   * is available on all browsers released after 2022-03-15 with Safari being the\n   * last one to release support. If the API is not available, this function will\n   * throw. Make sure you check availablility before configuring {@link\n   * GoTrueClient}.\n   *\n   * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n   * local storage item to `true`.\n   *\n   * Internals:\n   *\n   * Since the LockManager API does not preserve stack traces for the async\n   * function passed in the `request` method, a trick is used where acquiring the\n   * lock releases a previously started promise to run the operation in the `fn`\n   * function. The lock waits for that promise to finish (with or without error),\n   * while the function will finally wait for the result anyway.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  exports.ProcessLockAcquireTimeoutError = ProcessLockAcquireTimeoutError;\n  async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n      console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n      setTimeout(() => {\n        abortController.abort();\n        if (internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n        }\n      }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0 ? {\n      mode: 'exclusive',\n      ifAvailable: true\n    } : {\n      mode: 'exclusive',\n      signal: abortController.signal\n    }, async lock => {\n      if (lock) {\n        if (internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n        }\n        try {\n          return await fn();\n        } finally {\n          if (internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n          }\n        }\n      } else {\n        if (acquireTimeout === 0) {\n          if (internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n          }\n          throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n        } else {\n          if (internals.debug) {\n            try {\n              const result = await globalThis.navigator.locks.query();\n              console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n            } catch (e) {\n              console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n            }\n          }\n          // Browser is not following the Navigator LockManager spec, it\n          // returned a null lock when we didn't use ifAvailable. So we can\n          // pretend the lock is acquired in the name of backward compatibility\n          // and user experience and just run the function.\n          console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n          return await fn();\n        }\n      }\n    }));\n  }\n  const PROCESS_LOCKS = {};\n  /**\n   * Implements a global exclusive lock that works only in the current process.\n   * Useful for environments like React Native or other non-browser\n   * single-process (i.e. no concept of \"tabs\") environments.\n   *\n   * Use {@link #navigatorLock} in browser environments.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([previousOperation.catch(() => {\n      // ignore error of previous operation that we're waiting to finish\n      return null;\n    }), acquireTimeout >= 0 ? new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n      }, acquireTimeout);\n    }) : null].filter(x => x)).catch(e => {\n      if (e && e.isAcquireTimeout) {\n        throw e;\n      }\n      return null;\n    }).then(async () => {\n      // previous operations finished and we didn't get a race on the acquire\n      // timeout, so the current operation can finally start\n      return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async e => {\n      if (e && e.isAcquireTimeout) {\n        // if the current operation timed out, it doesn't mean that the previous\n        // operation finished, so we need contnue waiting for it to finish\n        await previousOperation;\n        return null;\n      }\n      throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n  }\n});","lineCount":171,"map":[[8,2,1,0],[8,6,1,0,"_helpers"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,2,0],[10,0,3,0],[11,0,4,0],[12,2,5,7],[12,8,5,13,"internals"],[12,17,5,22],[12,20,5,22,"exports"],[12,27,5,22],[12,28,5,22,"internals"],[12,37,5,22],[12,40,5,25],[13,4,6,4],[14,0,7,0],[15,0,8,0],[16,4,9,4,"debug"],[16,9,9,9],[16,11,9,11],[16,12,9,12],[16,14,9,14,"globalThis"],[16,24,9,24],[16,28,10,8],[16,32,10,8,"supportsLocalStorage"],[16,61,10,28],[16,63,10,29],[16,64,10,30],[16,68,11,8,"globalThis"],[16,78,11,18],[16,79,11,19,"localStorage"],[16,91,11,31],[16,95,12,8,"globalThis"],[16,105,12,18],[16,106,12,19,"localStorage"],[16,118,12,31],[16,119,12,32,"getItem"],[16,126,12,39],[16,127,12,40],[16,159,12,72],[16,160,12,73],[16,165,12,78],[16,171,12,84],[17,2,13,0],[17,3,13,1],[18,2,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,2,19,7],[23,8,19,13,"LockAcquireTimeoutError"],[23,31,19,36],[23,40,19,45,"Error"],[23,45,19,50],[23,46,19,51],[24,4,20,4,"constructor"],[24,15,20,15,"constructor"],[24,16,20,16,"message"],[24,23,20,23],[24,25,20,25],[25,6,21,8],[25,11,21,13],[25,12,21,14,"message"],[25,19,21,21],[25,20,21,22],[26,6,22,8],[26,10,22,12],[26,11,22,13,"isAcquireTimeout"],[26,27,22,29],[26,30,22,32],[26,34,22,36],[27,4,23,4],[28,2,24,0],[29,2,24,1,"exports"],[29,9,24,1],[29,10,24,1,"LockAcquireTimeoutError"],[29,33,24,1],[29,36,24,1,"LockAcquireTimeoutError"],[29,59,24,1],[30,2,25,7],[30,8,25,13,"NavigatorLockAcquireTimeoutError"],[30,40,25,45],[30,49,25,54,"LockAcquireTimeoutError"],[30,72,25,77],[30,73,25,78],[31,2,26,1,"exports"],[31,9,26,1],[31,10,26,1,"NavigatorLockAcquireTimeoutError"],[31,42,26,1],[31,45,26,1,"NavigatorLockAcquireTimeoutError"],[31,77,26,1],[32,2,27,7],[32,8,27,13,"ProcessLockAcquireTimeoutError"],[32,38,27,43],[32,47,27,52,"LockAcquireTimeoutError"],[32,70,27,75],[32,71,27,76],[33,2,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,2,29,0,"exports"],[58,9,29,0],[58,10,29,0,"ProcessLockAcquireTimeoutError"],[58,40,29,0],[58,43,29,0,"ProcessLockAcquireTimeoutError"],[58,73,29,0],[59,2,54,7],[59,17,54,22,"navigatorLock"],[59,30,54,35,"navigatorLock"],[59,31,54,36,"name"],[59,35,54,40],[59,37,54,42,"acquireTimeout"],[59,51,54,56],[59,53,54,58,"fn"],[59,55,54,60],[59,57,54,62],[60,4,55,4],[60,8,55,8,"internals"],[60,17,55,17],[60,18,55,18,"debug"],[60,23,55,23],[60,25,55,25],[61,6,56,8,"console"],[61,13,56,15],[61,14,56,16,"log"],[61,17,56,19],[61,18,56,20],[61,68,56,70],[61,70,56,72,"name"],[61,74,56,76],[61,76,56,78,"acquireTimeout"],[61,90,56,92],[61,91,56,93],[62,4,57,4],[63,4,58,4],[63,10,58,10,"abortController"],[63,25,58,25],[63,28,58,28],[63,32,58,32,"globalThis"],[63,42,58,42],[63,43,58,43,"AbortController"],[63,58,58,58],[63,59,58,59],[63,60,58,60],[64,4,59,4],[64,8,59,8,"acquireTimeout"],[64,22,59,22],[64,25,59,25],[64,26,59,26],[64,28,59,28],[65,6,60,8,"setTimeout"],[65,16,60,18],[65,17,60,19],[65,23,60,25],[66,8,61,12,"abortController"],[66,23,61,27],[66,24,61,28,"abort"],[66,29,61,33],[66,30,61,34],[66,31,61,35],[67,8,62,12],[67,12,62,16,"internals"],[67,21,62,25],[67,22,62,26,"debug"],[67,27,62,31],[67,29,62,33],[68,10,63,16,"console"],[68,17,63,23],[68,18,63,24,"log"],[68,21,63,27],[68,22,63,28],[68,76,63,82],[68,78,63,84,"name"],[68,82,63,88],[68,83,63,89],[69,8,64,12],[70,6,65,8],[70,7,65,9],[70,9,65,11,"acquireTimeout"],[70,23,65,25],[70,24,65,26],[71,4,66,4],[72,4,67,4],[73,4,68,4],[74,4,69,4],[75,4,70,4],[76,4,71,4],[77,4,72,4],[78,4,73,4],[79,4,74,4],[80,4,75,4],[80,11,75,11],[80,17,75,17,"Promise"],[80,24,75,24],[80,25,75,25,"resolve"],[80,32,75,32],[80,33,75,33],[80,34,75,34],[80,35,75,35,"then"],[80,39,75,39],[80,40,75,40],[80,46,75,46,"globalThis"],[80,56,75,56],[80,57,75,57,"navigator"],[80,66,75,66],[80,67,75,67,"locks"],[80,72,75,72],[80,73,75,73,"request"],[80,80,75,80],[80,81,75,81,"name"],[80,85,75,85],[80,87,75,87,"acquireTimeout"],[80,101,75,101],[80,106,75,106],[80,107,75,107],[80,110,76,10],[81,6,77,12,"mode"],[81,10,77,16],[81,12,77,18],[81,23,77,29],[82,6,78,12,"ifAvailable"],[82,17,78,23],[82,19,78,25],[83,4,79,8],[83,5,79,9],[83,8,80,10],[84,6,81,12,"mode"],[84,10,81,16],[84,12,81,18],[84,23,81,29],[85,6,82,12,"signal"],[85,12,82,18],[85,14,82,20,"abortController"],[85,29,82,35],[85,30,82,36,"signal"],[86,4,83,8],[86,5,83,9],[86,7,83,11],[86,13,83,18,"lock"],[86,17,83,22],[86,21,83,27],[87,6,84,8],[87,10,84,12,"lock"],[87,14,84,16],[87,16,84,18],[88,8,85,12],[88,12,85,16,"internals"],[88,21,85,25],[88,22,85,26,"debug"],[88,27,85,31],[88,29,85,33],[89,10,86,16,"console"],[89,17,86,23],[89,18,86,24,"log"],[89,21,86,27],[89,22,86,28],[89,68,86,74],[89,70,86,76,"name"],[89,74,86,80],[89,76,86,82,"lock"],[89,80,86,86],[89,81,86,87,"name"],[89,85,86,91],[89,86,86,92],[90,8,87,12],[91,8,88,12],[91,12,88,16],[92,10,89,16],[92,17,89,23],[92,23,89,29,"fn"],[92,25,89,31],[92,26,89,32],[92,27,89,33],[93,8,90,12],[93,9,90,13],[93,18,91,20],[94,10,92,16],[94,14,92,20,"internals"],[94,23,92,29],[94,24,92,30,"debug"],[94,29,92,35],[94,31,92,37],[95,12,93,20,"console"],[95,19,93,27],[95,20,93,28,"log"],[95,23,93,31],[95,24,93,32],[95,70,93,78],[95,72,93,80,"name"],[95,76,93,84],[95,78,93,86,"lock"],[95,82,93,90],[95,83,93,91,"name"],[95,87,93,95],[95,88,93,96],[96,10,94,16],[97,8,95,12],[98,6,96,8],[98,7,96,9],[98,13,97,13],[99,8,98,12],[99,12,98,16,"acquireTimeout"],[99,26,98,30],[99,31,98,35],[99,32,98,36],[99,34,98,38],[100,10,99,16],[100,14,99,20,"internals"],[100,23,99,29],[100,24,99,30,"debug"],[100,29,99,35],[100,31,99,37],[101,12,100,20,"console"],[101,19,100,27],[101,20,100,28,"log"],[101,23,100,31],[101,24,100,32],[101,87,100,95],[101,89,100,97,"name"],[101,93,100,101],[101,94,100,102],[102,10,101,16],[103,10,102,16],[103,16,102,22],[103,20,102,26,"NavigatorLockAcquireTimeoutError"],[103,52,102,58],[103,53,102,59],[103,107,102,113,"name"],[103,111,102,117],[103,133,102,139],[103,134,102,140],[104,8,103,12],[104,9,103,13],[104,15,104,17],[105,10,105,16],[105,14,105,20,"internals"],[105,23,105,29],[105,24,105,30,"debug"],[105,29,105,35],[105,31,105,37],[106,12,106,20],[106,16,106,24],[107,14,107,24],[107,20,107,30,"result"],[107,26,107,36],[107,29,107,39],[107,35,107,45,"globalThis"],[107,45,107,55],[107,46,107,56,"navigator"],[107,55,107,65],[107,56,107,66,"locks"],[107,61,107,71],[107,62,107,72,"query"],[107,67,107,77],[107,68,107,78],[107,69,107,79],[108,14,108,24,"console"],[108,21,108,31],[108,22,108,32,"log"],[108,25,108,35],[108,26,108,36],[108,76,108,86],[108,78,108,88,"JSON"],[108,82,108,92],[108,83,108,93,"stringify"],[108,92,108,102],[108,93,108,103,"result"],[108,99,108,109],[108,101,108,111],[108,105,108,115],[108,107,108,117],[108,111,108,121],[108,112,108,122],[108,113,108,123],[109,12,109,20],[109,13,109,21],[109,14,110,20],[109,21,110,27,"e"],[109,22,110,28],[109,24,110,30],[110,14,111,24,"console"],[110,21,111,31],[110,22,111,32,"warn"],[110,26,111,36],[110,27,111,37],[110,97,111,107],[110,99,111,109,"e"],[110,100,111,110],[110,101,111,111],[111,12,112,20],[112,10,113,16],[113,10,114,16],[114,10,115,16],[115,10,116,16],[116,10,117,16],[117,10,118,16,"console"],[117,17,118,23],[117,18,118,24,"warn"],[117,22,118,28],[117,23,118,29],[117,272,118,278],[117,273,118,279],[118,10,119,16],[118,17,119,23],[118,23,119,29,"fn"],[118,25,119,31],[118,26,119,32],[118,27,119,33],[119,8,120,12],[120,6,121,8],[121,4,122,4],[121,5,122,5],[121,6,122,6],[121,7,122,7],[122,2,123,0],[123,2,124,0],[123,8,124,6,"PROCESS_LOCKS"],[123,21,124,19],[123,24,124,22],[123,25,124,23],[123,26,124,24],[124,2,125,0],[125,0,126,0],[126,0,127,0],[127,0,128,0],[128,0,129,0],[129,0,130,0],[130,0,131,0],[131,0,132,0],[132,0,133,0],[133,0,134,0],[134,0,135,0],[135,0,136,0],[136,0,137,0],[137,0,138,0],[138,2,139,7],[138,17,139,22,"processLock"],[138,28,139,33,"processLock"],[138,29,139,34,"name"],[138,33,139,38],[138,35,139,40,"acquireTimeout"],[138,49,139,54],[138,51,139,56,"fn"],[138,53,139,58],[138,55,139,60],[139,4,140,4],[139,8,140,8,"_a"],[139,10,140,10],[140,4,141,4],[140,10,141,10,"previousOperation"],[140,27,141,27],[140,30,141,30],[140,31,141,31,"_a"],[140,33,141,33],[140,36,141,36,"PROCESS_LOCKS"],[140,49,141,49],[140,50,141,50,"name"],[140,54,141,54],[140,55,141,55],[140,61,141,61],[140,65,141,65],[140,69,141,69,"_a"],[140,71,141,71],[140,76,141,76],[140,81,141,81],[140,82,141,82],[140,85,141,85,"_a"],[140,87,141,87],[140,90,141,90,"Promise"],[140,97,141,97],[140,98,141,98,"resolve"],[140,105,141,105],[140,106,141,106],[140,107,141,107],[141,4,142,4],[141,10,142,10,"currentOperation"],[141,26,142,26],[141,29,142,29,"Promise"],[141,36,142,36],[141,37,142,37,"race"],[141,41,142,41],[141,42,142,42],[141,43,143,8,"previousOperation"],[141,60,143,25],[141,61,143,26,"catch"],[141,66,143,31],[141,67,143,32],[141,73,143,38],[142,6,144,12],[143,6,145,12],[143,13,145,19],[143,17,145,23],[144,4,146,8],[144,5,146,9],[144,6,146,10],[144,8,147,8,"acquireTimeout"],[144,22,147,22],[144,26,147,26],[144,27,147,27],[144,30,148,14],[144,34,148,18,"Promise"],[144,41,148,25],[144,42,148,26],[144,43,148,27,"_"],[144,44,148,28],[144,46,148,30,"reject"],[144,52,148,36],[144,57,148,41],[145,6,149,16,"setTimeout"],[145,16,149,26],[145,17,149,27],[145,23,149,33],[146,8,150,20,"reject"],[146,14,150,26],[146,15,150,27],[146,19,150,31,"ProcessLockAcquireTimeoutError"],[146,49,150,61],[146,50,150,62],[146,86,150,98,"name"],[146,90,150,102],[146,103,150,115],[146,104,150,116],[146,105,150,117],[147,6,151,16],[147,7,151,17],[147,9,151,19,"acquireTimeout"],[147,23,151,33],[147,24,151,34],[148,4,152,12],[148,5,152,13],[148,6,152,14],[148,9,153,14],[148,13,153,18],[148,14,154,5],[148,15,154,6,"filter"],[148,21,154,12],[148,22,154,14,"x"],[148,23,154,15],[148,27,154,20,"x"],[148,28,154,21],[148,29,154,22],[148,30,154,23],[148,31,155,9,"catch"],[148,36,155,14],[148,37,155,16,"e"],[148,38,155,17],[148,42,155,22],[149,6,156,8],[149,10,156,12,"e"],[149,11,156,13],[149,15,156,17,"e"],[149,16,156,18],[149,17,156,19,"isAcquireTimeout"],[149,33,156,35],[149,35,156,37],[150,8,157,12],[150,14,157,18,"e"],[150,15,157,19],[151,6,158,8],[152,6,159,8],[152,13,159,15],[152,17,159,19],[153,4,160,4],[153,5,160,5],[153,6,160,6],[153,7,161,9,"then"],[153,11,161,13],[153,12,161,14],[153,24,161,26],[154,6,162,8],[155,6,163,8],[156,6,164,8],[156,13,164,15],[156,19,164,21,"fn"],[156,21,164,23],[156,22,164,24],[156,23,164,25],[157,4,165,4],[157,5,165,5],[157,6,165,6],[158,4,166,4,"PROCESS_LOCKS"],[158,17,166,17],[158,18,166,18,"name"],[158,22,166,22],[158,23,166,23],[158,26,166,26,"currentOperation"],[158,42,166,42],[158,43,166,43,"catch"],[158,48,166,48],[158,49,166,49],[158,55,166,56,"e"],[158,56,166,57],[158,60,166,62],[159,6,167,8],[159,10,167,12,"e"],[159,11,167,13],[159,15,167,17,"e"],[159,16,167,18],[159,17,167,19,"isAcquireTimeout"],[159,33,167,35],[159,35,167,37],[160,8,168,12],[161,8,169,12],[162,8,170,12],[162,14,170,18,"previousOperation"],[162,31,170,35],[163,8,171,12],[163,15,171,19],[163,19,171,23],[164,6,172,8],[165,6,173,8],[165,12,173,14,"e"],[165,13,173,15],[166,4,174,4],[166,5,174,5],[166,6,174,6],[167,4,175,4],[168,4,176,4],[169,4,177,4],[169,11,177,11],[169,17,177,17,"currentOperation"],[169,33,177,33],[170,2,178,0],[171,0,178,1],[171,3]],"functionMap":{"names":["<global>","LockAcquireTimeoutError","LockAcquireTimeoutError#constructor","NavigatorLockAcquireTimeoutError","ProcessLockAcquireTimeoutError","navigatorLock","setTimeout$argument_0","Promise.resolve.then$argument_0","globalThis.navigator.locks.request$argument_2","processLock","previousOperation._catch$argument_0","Promise$argument_0","filter$argument_0","Promise.race._catch$argument_0","Promise.race._catch.then$argument_0","currentOperation._catch$argument_0"],"mappings":"AAA;OCkB;ICC;KDG;CDC;OGC;CHC;OIC;CJC;OK0B;mBCM;SDK;wCEU;WCQ;KDuC,CF;CLC;OSgB;gCCI;SDG;0BEE;2BLC;iBKE;aFC;aGE,QH;eIC;KJK;cKC;KLI;iDMC;KNQ;CTI"}},"type":"js/module"}]}