{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":11,"index":90},"end":{"line":5,"column":36,"index":115}}],"key":"R3im+0n/eSh8gKTMLLPoTxcvyH0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _slicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var util = require(_dependencyMap[4], \"@firebase/util\");\n\n  /**\n   * Component for service name T, e.g. `auth`, `auth-internal`\n   */\n  var Component = /*#__PURE__*/function () {\n    /**\n     *\n     * @param name The public service name, e.g. app, auth, firestore, database\n     * @param instanceFactory Service factory responsible for creating the public interface\n     * @param type whether the service provided by the component is public or private\n     */\n    function Component(name, instanceFactory, type) {\n      _classCallCheck(this, Component);\n      this.name = name;\n      this.instanceFactory = instanceFactory;\n      this.type = type;\n      this.multipleInstances = false;\n      /**\n       * Properties to be added to the service namespace\n       */\n      this.serviceProps = {};\n      this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\n      this.onInstanceCreated = null;\n    }\n    return _createClass(Component, [{\n      key: \"setInstantiationMode\",\n      value: function setInstantiationMode(mode) {\n        this.instantiationMode = mode;\n        return this;\n      }\n    }, {\n      key: \"setMultipleInstances\",\n      value: function setMultipleInstances(multipleInstances) {\n        this.multipleInstances = multipleInstances;\n        return this;\n      }\n    }, {\n      key: \"setServiceProps\",\n      value: function setServiceProps(props) {\n        this.serviceProps = props;\n        return this;\n      }\n    }, {\n      key: \"setInstanceCreatedCallback\",\n      value: function setInstanceCreatedCallback(callback) {\n        this.onInstanceCreated = callback;\n        return this;\n      }\n    }]);\n  }();\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n   * NameServiceMapping[T] is an alias for the type of the instance\n   */\n  var Provider = /*#__PURE__*/function () {\n    function Provider(name, container) {\n      _classCallCheck(this, Provider);\n      this.name = name;\n      this.container = container;\n      this.component = null;\n      this.instances = new Map();\n      this.instancesDeferred = new Map();\n      this.instancesOptions = new Map();\n      this.onInitCallbacks = new Map();\n    }\n    /**\n     * @param identifier A provider can provide multiple instances of a service\n     * if this.component.multipleInstances is true.\n     */\n    return _createClass(Provider, [{\n      key: \"get\",\n      value: function get(identifier) {\n        // if multipleInstances is not supported, use the default name\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\n          var deferred = new util.Deferred();\n          this.instancesDeferred.set(normalizedIdentifier, deferred);\n          if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n            // initialize the service if it can be auto-initialized\n            try {\n              var instance = this.getOrInitializeService({\n                instanceIdentifier: normalizedIdentifier\n              });\n              if (instance) {\n                deferred.resolve(instance);\n              }\n            } catch (e) {\n              // when the instance factory throws an exception during get(), it should not cause\n              // a fatal error. We just return the unresolved promise in this case.\n            }\n          }\n        }\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\n      }\n    }, {\n      key: \"getImmediate\",\n      value: function getImmediate(options) {\n        // if multipleInstances is not supported, use the default name\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(options?.identifier);\n        var optional = options?.optional ?? false;\n        if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n          try {\n            return this.getOrInitializeService({\n              instanceIdentifier: normalizedIdentifier\n            });\n          } catch (e) {\n            if (optional) {\n              return null;\n            } else {\n              throw e;\n            }\n          }\n        } else {\n          // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n          if (optional) {\n            return null;\n          } else {\n            throw Error(`Service ${this.name} is not available`);\n          }\n        }\n      }\n    }, {\n      key: \"getComponent\",\n      value: function getComponent() {\n        return this.component;\n      }\n    }, {\n      key: \"setComponent\",\n      value: function setComponent(component) {\n        if (component.name !== this.name) {\n          throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\n        }\n        if (this.component) {\n          throw Error(`Component for ${this.name} has already been provided`);\n        }\n        this.component = component;\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n        if (!this.shouldAutoInitialize()) {\n          return;\n        }\n        // if the service is eager, initialize the default instance\n        if (isComponentEager(component)) {\n          try {\n            this.getOrInitializeService({\n              instanceIdentifier: DEFAULT_ENTRY_NAME\n            });\n          } catch (e) {\n            // when the instance factory for an eager Component throws an exception during the eager\n            // initialization, it should not cause a fatal error.\n            // TODO: Investigate if we need to make it configurable, because some component may want to cause\n            // a fatal error in this case?\n          }\n        }\n        // Create service instances for the pending promises and resolve them\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\n        // and all promises with resolve with it regardless of the identifier.\n        for (var _ref of this.instancesDeferred.entries()) {\n          var _ref2 = _slicedToArray(_ref, 2);\n          var instanceIdentifier = _ref2[0];\n          var instanceDeferred = _ref2[1];\n          var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n          try {\n            // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n            var instance = this.getOrInitializeService({\n              instanceIdentifier: normalizedIdentifier\n            });\n            instanceDeferred.resolve(instance);\n          } catch (e) {\n            // when the instance factory throws an exception, it should not cause\n            // a fatal error. We just leave the promise unresolved.\n          }\n        }\n      }\n    }, {\n      key: \"clearInstance\",\n      value: function clearInstance() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        this.instancesDeferred.delete(identifier);\n        this.instancesOptions.delete(identifier);\n        this.instances.delete(identifier);\n      }\n      // app.delete() will call this method on every provider to delete the services\n      // TODO: should we mark the provider as deleted?\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = _asyncToGenerator(function* () {\n          var services = Array.from(this.instances.values());\n          yield Promise.all([...services.filter(service => 'INTERNAL' in service) // legacy services\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .map(service => service.INTERNAL.delete()), ...services.filter(service => '_delete' in service) // modularized services\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .map(service => service._delete())]);\n        });\n        function _delete() {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"isComponentSet\",\n      value: function isComponentSet() {\n        return this.component != null;\n      }\n    }, {\n      key: \"isInitialized\",\n      value: function isInitialized() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        return this.instances.has(identifier);\n      }\n    }, {\n      key: \"getOptions\",\n      value: function getOptions() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        return this.instancesOptions.get(identifier) || {};\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var _opts$options = opts.options,\n          options = _opts$options === void 0 ? {} : _opts$options;\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n        if (this.isInitialized(normalizedIdentifier)) {\n          throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\n        }\n        if (!this.isComponentSet()) {\n          throw Error(`Component ${this.name} has not been registered yet`);\n        }\n        var instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier,\n          options\n        });\n        // resolve any pending promise waiting for the service instance\n        for (var _ref3 of this.instancesDeferred.entries()) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n          var instanceIdentifier = _ref4[0];\n          var instanceDeferred = _ref4[1];\n          var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n          if (normalizedIdentifier === normalizedDeferredIdentifier) {\n            instanceDeferred.resolve(instance);\n          }\n        }\n        return instance;\n      }\n      /**\n       *\n       * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n       * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n       *\n       * @param identifier An optional instance identifier\n       * @returns a function to unregister the callback\n       */\n    }, {\n      key: \"onInit\",\n      value: function onInit(callback, identifier) {\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        var existingCallbacks = this.onInitCallbacks.get(normalizedIdentifier) ?? new Set();\n        existingCallbacks.add(callback);\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n        var existingInstance = this.instances.get(normalizedIdentifier);\n        if (existingInstance) {\n          callback(existingInstance, normalizedIdentifier);\n        }\n        return () => {\n          existingCallbacks.delete(callback);\n        };\n      }\n      /**\n       * Invoke onInit callbacks synchronously\n       * @param instance the service instance`\n       */\n    }, {\n      key: \"invokeOnInitCallbacks\",\n      value: function invokeOnInitCallbacks(instance, identifier) {\n        var callbacks = this.onInitCallbacks.get(identifier);\n        if (!callbacks) {\n          return;\n        }\n        for (var callback of callbacks) {\n          try {\n            callback(instance, identifier);\n          } catch {\n            // ignore errors in the onInit callback\n          }\n        }\n      }\n    }, {\n      key: \"getOrInitializeService\",\n      value: function getOrInitializeService(_ref5) {\n        var instanceIdentifier = _ref5.instanceIdentifier,\n          _ref5$options = _ref5.options,\n          options = _ref5$options === void 0 ? {} : _ref5$options;\n        var instance = this.instances.get(instanceIdentifier);\n        if (!instance && this.component) {\n          instance = this.component.instanceFactory(this.container, {\n            instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n            options\n          });\n          this.instances.set(instanceIdentifier, instance);\n          this.instancesOptions.set(instanceIdentifier, options);\n          /**\n           * Invoke onInit listeners.\n           * Note this.component.onInstanceCreated is different, which is used by the component creator,\n           * while onInit listeners are registered by consumers of the provider.\n           */\n          this.invokeOnInitCallbacks(instance, instanceIdentifier);\n          /**\n           * Order is important\n           * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n           * makes `isInitialized()` return true.\n           */\n          if (this.component.onInstanceCreated) {\n            try {\n              this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n            } catch {\n              // ignore errors in the onInstanceCreatedCallback\n            }\n          }\n        }\n        return instance || null;\n      }\n    }, {\n      key: \"normalizeInstanceIdentifier\",\n      value: function normalizeInstanceIdentifier() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        if (this.component) {\n          return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n        } else {\n          return identifier; // assume multiple instances are supported before the component is provided.\n        }\n      }\n    }, {\n      key: \"shouldAutoInitialize\",\n      value: function shouldAutoInitialize() {\n        return !!this.component && this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */;\n      }\n    }]);\n  }(); // undefined should be passed to the service factory for the default instance\n  function normalizeIdentifierForFactory(identifier) {\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n  }\n  function isComponentEager(component) {\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n   */\n  var ComponentContainer = /*#__PURE__*/function () {\n    function ComponentContainer(name) {\n      _classCallCheck(this, ComponentContainer);\n      this.name = name;\n      this.providers = new Map();\n    }\n    /**\n     *\n     * @param component Component being added\n     * @param overwrite When a component with the same name has already been registered,\n     * if overwrite is true: overwrite the existing component with the new component and create a new\n     * provider with the new component. It can be useful in tests where you want to use different mocks\n     * for different tests.\n     * if overwrite is false: throw an exception\n     */\n    return _createClass(ComponentContainer, [{\n      key: \"addComponent\",\n      value: function addComponent(component) {\n        var provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n          throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\n        }\n        provider.setComponent(component);\n      }\n    }, {\n      key: \"addOrOverwriteComponent\",\n      value: function addOrOverwriteComponent(component) {\n        var provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n          // delete the existing provider from the container, so we can register the new component\n          this.providers.delete(component.name);\n        }\n        this.addComponent(component);\n      }\n      /**\n       * getProvider provides a type safe interface where it can only be called with a field name\n       * present in NameServiceMapping interface.\n       *\n       * Firebase SDKs providing services should extend NameServiceMapping interface to register\n       * themselves.\n       */\n    }, {\n      key: \"getProvider\",\n      value: function getProvider(name) {\n        if (this.providers.has(name)) {\n          return this.providers.get(name);\n        }\n        // create a Provider for a service that hasn't registered with Firebase\n        var provider = new Provider(name, this);\n        this.providers.set(name, provider);\n        return provider;\n      }\n    }, {\n      key: \"getProviders\",\n      value: function getProviders() {\n        return Array.from(this.providers.values());\n      }\n    }]);\n  }();\n  exports.Component = Component;\n  exports.ComponentContainer = ComponentContainer;\n  exports.Provider = Provider;\n});","lineCount":473,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,1,13],[5,6,1,13,"_slicedToArray"],[5,20,1,13],[5,23,1,13,"require"],[5,30,1,13],[5,31,1,13,"_dependencyMap"],[5,45,1,13],[6,2,1,13],[6,6,1,13,"_classCallCheck"],[6,21,1,13],[6,24,1,13,"require"],[6,31,1,13],[6,32,1,13,"_dependencyMap"],[6,46,1,13],[7,2,1,13],[7,6,1,13,"_createClass"],[7,18,1,13],[7,21,1,13,"require"],[7,28,1,13],[7,29,1,13,"_dependencyMap"],[7,43,1,13],[8,2,3,0,"Object"],[8,8,3,6],[8,9,3,7,"defineProperty"],[8,23,3,21],[8,24,3,22,"exports"],[8,31,3,29],[8,33,3,31],[8,45,3,43],[8,47,3,45],[9,4,3,47,"value"],[9,9,3,52],[9,11,3,54],[10,2,3,59],[10,3,3,60],[10,4,3,61],[11,2,5,0],[11,6,5,4,"util"],[11,10,5,8],[11,13,5,11,"require"],[11,20,5,18],[11,21,5,18,"_dependencyMap"],[11,35,5,18],[11,56,5,35],[11,57,5,36],[13,2,7,0],[14,0,8,0],[15,0,9,0],[16,2,7,0],[16,6,10,6,"Component"],[16,15,10,15],[17,4,11,4],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,4,17,4],[23,13,17,4,"Component"],[23,23,17,16,"name"],[23,27,17,20],[23,29,17,22,"instanceFactory"],[23,44,17,37],[23,46,17,39,"type"],[23,50,17,43],[23,52,17,45],[24,6,17,45,"_classCallCheck"],[24,21,17,45],[24,28,17,45,"Component"],[24,37,17,45],[25,6,18,8],[25,10,18,12],[25,11,18,13,"name"],[25,15,18,17],[25,18,18,20,"name"],[25,22,18,24],[26,6,19,8],[26,10,19,12],[26,11,19,13,"instanceFactory"],[26,26,19,28],[26,29,19,31,"instanceFactory"],[26,44,19,46],[27,6,20,8],[27,10,20,12],[27,11,20,13,"type"],[27,15,20,17],[27,18,20,20,"type"],[27,22,20,24],[28,6,21,8],[28,10,21,12],[28,11,21,13,"multipleInstances"],[28,28,21,30],[28,31,21,33],[28,36,21,38],[29,6,22,8],[30,0,23,0],[31,0,24,0],[32,6,25,8],[32,10,25,12],[32,11,25,13,"serviceProps"],[32,23,25,25],[32,26,25,28],[32,27,25,29],[32,28,25,30],[33,6,26,8],[33,10,26,12],[33,11,26,13,"instantiationMode"],[33,28,26,30],[33,31,26,33],[33,37,26,39],[33,38,26,40],[34,6,27,8],[34,10,27,12],[34,11,27,13,"onInstanceCreated"],[34,28,27,30],[34,31,27,33],[34,35,27,37],[35,4,28,4],[36,4,28,5],[36,11,28,5,"_createClass"],[36,23,28,5],[36,24,28,5,"Component"],[36,33,28,5],[37,6,28,5,"key"],[37,9,28,5],[38,6,28,5,"value"],[38,11,28,5],[38,13,29,4],[38,22,29,4,"setInstantiationMode"],[38,42,29,24,"setInstantiationMode"],[38,43,29,25,"mode"],[38,47,29,29],[38,49,29,31],[39,8,30,8],[39,12,30,12],[39,13,30,13,"instantiationMode"],[39,30,30,30],[39,33,30,33,"mode"],[39,37,30,37],[40,8,31,8],[40,15,31,15],[40,19,31,19],[41,6,32,4],[42,4,32,5],[43,6,32,5,"key"],[43,9,32,5],[44,6,32,5,"value"],[44,11,32,5],[44,13,33,4],[44,22,33,4,"setMultipleInstances"],[44,42,33,24,"setMultipleInstances"],[44,43,33,25,"multipleInstances"],[44,60,33,42],[44,62,33,44],[45,8,34,8],[45,12,34,12],[45,13,34,13,"multipleInstances"],[45,30,34,30],[45,33,34,33,"multipleInstances"],[45,50,34,50],[46,8,35,8],[46,15,35,15],[46,19,35,19],[47,6,36,4],[48,4,36,5],[49,6,36,5,"key"],[49,9,36,5],[50,6,36,5,"value"],[50,11,36,5],[50,13,37,4],[50,22,37,4,"setServiceProps"],[50,37,37,19,"setServiceProps"],[50,38,37,20,"props"],[50,43,37,25],[50,45,37,27],[51,8,38,8],[51,12,38,12],[51,13,38,13,"serviceProps"],[51,25,38,25],[51,28,38,28,"props"],[51,33,38,33],[52,8,39,8],[52,15,39,15],[52,19,39,19],[53,6,40,4],[54,4,40,5],[55,6,40,5,"key"],[55,9,40,5],[56,6,40,5,"value"],[56,11,40,5],[56,13,41,4],[56,22,41,4,"setInstanceCreatedCallback"],[56,48,41,30,"setInstanceCreatedCallback"],[56,49,41,31,"callback"],[56,57,41,39],[56,59,41,41],[57,8,42,8],[57,12,42,12],[57,13,42,13,"onInstanceCreated"],[57,30,42,30],[57,33,42,33,"callback"],[57,41,42,41],[58,8,43,8],[58,15,43,15],[58,19,43,19],[59,6,44,4],[60,4,44,5],[61,2,44,5],[62,2,47,0],[63,0,48,0],[64,0,49,0],[65,0,50,0],[66,0,51,0],[67,0,52,0],[68,0,53,0],[69,0,54,0],[70,0,55,0],[71,0,56,0],[72,0,57,0],[73,0,58,0],[74,0,59,0],[75,0,60,0],[76,0,61,0],[77,0,62,0],[78,2,63,0],[78,6,63,6,"DEFAULT_ENTRY_NAME"],[78,24,63,24],[78,27,63,27],[78,38,63,38],[80,2,65,0],[81,0,66,0],[82,0,67,0],[83,0,68,0],[84,0,69,0],[85,0,70,0],[86,0,71,0],[87,0,72,0],[88,0,73,0],[89,0,74,0],[90,0,75,0],[91,0,76,0],[92,0,77,0],[93,0,78,0],[94,0,79,0],[95,0,80,0],[96,2,81,0],[97,0,82,0],[98,0,83,0],[99,0,84,0],[100,2,81,0],[100,6,85,6,"Provider"],[100,14,85,14],[101,4,86,4],[101,13,86,4,"Provider"],[101,22,86,16,"name"],[101,26,86,20],[101,28,86,22,"container"],[101,37,86,31],[101,39,86,33],[102,6,86,33,"_classCallCheck"],[102,21,86,33],[102,28,86,33,"Provider"],[102,36,86,33],[103,6,87,8],[103,10,87,12],[103,11,87,13,"name"],[103,15,87,17],[103,18,87,20,"name"],[103,22,87,24],[104,6,88,8],[104,10,88,12],[104,11,88,13,"container"],[104,20,88,22],[104,23,88,25,"container"],[104,32,88,34],[105,6,89,8],[105,10,89,12],[105,11,89,13,"component"],[105,20,89,22],[105,23,89,25],[105,27,89,29],[106,6,90,8],[106,10,90,12],[106,11,90,13,"instances"],[106,20,90,22],[106,23,90,25],[106,27,90,29,"Map"],[106,30,90,32],[106,31,90,33],[106,32,90,34],[107,6,91,8],[107,10,91,12],[107,11,91,13,"instancesDeferred"],[107,28,91,30],[107,31,91,33],[107,35,91,37,"Map"],[107,38,91,40],[107,39,91,41],[107,40,91,42],[108,6,92,8],[108,10,92,12],[108,11,92,13,"instancesOptions"],[108,27,92,29],[108,30,92,32],[108,34,92,36,"Map"],[108,37,92,39],[108,38,92,40],[108,39,92,41],[109,6,93,8],[109,10,93,12],[109,11,93,13,"onInitCallbacks"],[109,26,93,28],[109,29,93,31],[109,33,93,35,"Map"],[109,36,93,38],[109,37,93,39],[109,38,93,40],[110,4,94,4],[111,4,95,4],[112,0,96,0],[113,0,97,0],[114,0,98,0],[115,4,95,4],[115,11,95,4,"_createClass"],[115,23,95,4],[115,24,95,4,"Provider"],[115,32,95,4],[116,6,95,4,"key"],[116,9,95,4],[117,6,95,4,"value"],[117,11,95,4],[117,13,99,4],[117,22,99,4,"get"],[117,25,99,7,"get"],[117,26,99,8,"identifier"],[117,36,99,18],[117,38,99,20],[118,8,100,8],[119,8,101,8],[119,12,101,14,"normalizedIdentifier"],[119,32,101,34],[119,35,101,37],[119,39,101,41],[119,40,101,42,"normalizeInstanceIdentifier"],[119,67,101,69],[119,68,101,70,"identifier"],[119,78,101,80],[119,79,101,81],[120,8,102,8],[120,12,102,12],[120,13,102,13],[120,17,102,17],[120,18,102,18,"instancesDeferred"],[120,35,102,35],[120,36,102,36,"has"],[120,39,102,39],[120,40,102,40,"normalizedIdentifier"],[120,60,102,60],[120,61,102,61],[120,63,102,63],[121,10,103,12],[121,14,103,18,"deferred"],[121,22,103,26],[121,25,103,29],[121,29,103,33,"util"],[121,33,103,37],[121,34,103,38,"Deferred"],[121,42,103,46],[121,43,103,47],[121,44,103,48],[122,10,104,12],[122,14,104,16],[122,15,104,17,"instancesDeferred"],[122,32,104,34],[122,33,104,35,"set"],[122,36,104,38],[122,37,104,39,"normalizedIdentifier"],[122,57,104,59],[122,59,104,61,"deferred"],[122,67,104,69],[122,68,104,70],[123,10,105,12],[123,14,105,16],[123,18,105,20],[123,19,105,21,"isInitialized"],[123,32,105,34],[123,33,105,35,"normalizedIdentifier"],[123,53,105,55],[123,54,105,56],[123,58,106,16],[123,62,106,20],[123,63,106,21,"shouldAutoInitialize"],[123,83,106,41],[123,84,106,42],[123,85,106,43],[123,87,106,45],[124,12,107,16],[125,12,108,16],[125,16,108,20],[126,14,109,20],[126,18,109,26,"instance"],[126,26,109,34],[126,29,109,37],[126,33,109,41],[126,34,109,42,"getOrInitializeService"],[126,56,109,64],[126,57,109,65],[127,16,110,24,"instanceIdentifier"],[127,34,110,42],[127,36,110,44,"normalizedIdentifier"],[128,14,111,20],[128,15,111,21],[128,16,111,22],[129,14,112,20],[129,18,112,24,"instance"],[129,26,112,32],[129,28,112,34],[130,16,113,24,"deferred"],[130,24,113,32],[130,25,113,33,"resolve"],[130,32,113,40],[130,33,113,41,"instance"],[130,41,113,49],[130,42,113,50],[131,14,114,20],[132,12,115,16],[132,13,115,17],[132,14,116,16],[132,21,116,23,"e"],[132,22,116,24],[132,24,116,26],[133,14,117,20],[134,14,118,20],[135,12,118,20],[136,10,120,12],[137,8,121,8],[138,8,122,8],[138,15,122,15],[138,19,122,19],[138,20,122,20,"instancesDeferred"],[138,37,122,37],[138,38,122,38,"get"],[138,41,122,41],[138,42,122,42,"normalizedIdentifier"],[138,62,122,62],[138,63,122,63],[138,64,122,64,"promise"],[138,71,122,71],[139,6,123,4],[140,4,123,5],[141,6,123,5,"key"],[141,9,123,5],[142,6,123,5,"value"],[142,11,123,5],[142,13,124,4],[142,22,124,4,"getImmediate"],[142,34,124,16,"getImmediate"],[142,35,124,17,"options"],[142,42,124,24],[142,44,124,26],[143,8,125,8],[144,8,126,8],[144,12,126,14,"normalizedIdentifier"],[144,32,126,34],[144,35,126,37],[144,39,126,41],[144,40,126,42,"normalizeInstanceIdentifier"],[144,67,126,69],[144,68,126,70,"options"],[144,75,126,77],[144,77,126,79,"identifier"],[144,87,126,89],[144,88,126,90],[145,8,127,8],[145,12,127,14,"optional"],[145,20,127,22],[145,23,127,25,"options"],[145,30,127,32],[145,32,127,34,"optional"],[145,40,127,42],[145,44,127,46],[145,49,127,51],[146,8,128,8],[146,12,128,12],[146,16,128,16],[146,17,128,17,"isInitialized"],[146,30,128,30],[146,31,128,31,"normalizedIdentifier"],[146,51,128,51],[146,52,128,52],[146,56,129,12],[146,60,129,16],[146,61,129,17,"shouldAutoInitialize"],[146,81,129,37],[146,82,129,38],[146,83,129,39],[146,85,129,41],[147,10,130,12],[147,14,130,16],[148,12,131,16],[148,19,131,23],[148,23,131,27],[148,24,131,28,"getOrInitializeService"],[148,46,131,50],[148,47,131,51],[149,14,132,20,"instanceIdentifier"],[149,32,132,38],[149,34,132,40,"normalizedIdentifier"],[150,12,133,16],[150,13,133,17],[150,14,133,18],[151,10,134,12],[151,11,134,13],[151,12,135,12],[151,19,135,19,"e"],[151,20,135,20],[151,22,135,22],[152,12,136,16],[152,16,136,20,"optional"],[152,24,136,28],[152,26,136,30],[153,14,137,20],[153,21,137,27],[153,25,137,31],[154,12,138,16],[154,13,138,17],[154,19,139,21],[155,14,140,20],[155,20,140,26,"e"],[155,21,140,27],[156,12,141,16],[157,10,142,12],[158,8,143,8],[158,9,143,9],[158,15,144,13],[159,10,145,12],[160,10,146,12],[160,14,146,16,"optional"],[160,22,146,24],[160,24,146,26],[161,12,147,16],[161,19,147,23],[161,23,147,27],[162,10,148,12],[162,11,148,13],[162,17,149,17],[163,12,150,16],[163,18,150,22,"Error"],[163,23,150,27],[163,24,150,28],[163,35,150,39],[163,39,150,43],[163,40,150,44,"name"],[163,44,150,48],[163,63,150,67],[163,64,150,68],[164,10,151,12],[165,8,152,8],[166,6,153,4],[167,4,153,5],[168,6,153,5,"key"],[168,9,153,5],[169,6,153,5,"value"],[169,11,153,5],[169,13,154,4],[169,22,154,4,"getComponent"],[169,34,154,16,"getComponent"],[169,35,154,16],[169,37,154,19],[170,8,155,8],[170,15,155,15],[170,19,155,19],[170,20,155,20,"component"],[170,29,155,29],[171,6,156,4],[172,4,156,5],[173,6,156,5,"key"],[173,9,156,5],[174,6,156,5,"value"],[174,11,156,5],[174,13,157,4],[174,22,157,4,"setComponent"],[174,34,157,16,"setComponent"],[174,35,157,17,"component"],[174,44,157,26],[174,46,157,28],[175,8,158,8],[175,12,158,12,"component"],[175,21,158,21],[175,22,158,22,"name"],[175,26,158,26],[175,31,158,31],[175,35,158,35],[175,36,158,36,"name"],[175,40,158,40],[175,42,158,42],[176,10,159,12],[176,16,159,18,"Error"],[176,21,159,23],[176,22,159,24],[176,47,159,49,"component"],[176,56,159,58],[176,57,159,59,"name"],[176,61,159,63],[176,78,159,80],[176,82,159,84],[176,83,159,85,"name"],[176,87,159,89],[176,90,159,92],[176,91,159,93],[177,8,160,8],[178,8,161,8],[178,12,161,12],[178,16,161,16],[178,17,161,17,"component"],[178,26,161,26],[178,28,161,28],[179,10,162,12],[179,16,162,18,"Error"],[179,21,162,23],[179,22,162,24],[179,39,162,41],[179,43,162,45],[179,44,162,46,"name"],[179,48,162,50],[179,76,162,78],[179,77,162,79],[180,8,163,8],[181,8,164,8],[181,12,164,12],[181,13,164,13,"component"],[181,22,164,22],[181,25,164,25,"component"],[181,34,164,34],[182,8,165,8],[183,8,166,8],[183,12,166,12],[183,13,166,13],[183,17,166,17],[183,18,166,18,"shouldAutoInitialize"],[183,38,166,38],[183,39,166,39],[183,40,166,40],[183,42,166,42],[184,10,167,12],[185,8,168,8],[186,8,169,8],[187,8,170,8],[187,12,170,12,"isComponentEager"],[187,28,170,28],[187,29,170,29,"component"],[187,38,170,38],[187,39,170,39],[187,41,170,41],[188,10,171,12],[188,14,171,16],[189,12,172,16],[189,16,172,20],[189,17,172,21,"getOrInitializeService"],[189,39,172,43],[189,40,172,44],[190,14,172,46,"instanceIdentifier"],[190,32,172,64],[190,34,172,66,"DEFAULT_ENTRY_NAME"],[191,12,172,85],[191,13,172,86],[191,14,172,87],[192,10,173,12],[192,11,173,13],[192,12,174,12],[192,19,174,19,"e"],[192,20,174,20],[192,22,174,22],[193,12,175,16],[194,12,176,16],[195,12,177,16],[196,12,178,16],[197,10,178,16],[198,8,180,8],[199,8,181,8],[200,8,182,8],[201,8,183,8],[202,8,184,8],[202,17,184,8,"_ref"],[202,21,184,8],[202,25,184,61],[202,29,184,65],[202,30,184,66,"instancesDeferred"],[202,47,184,83],[202,48,184,84,"entries"],[202,55,184,91],[202,56,184,92],[202,57,184,93],[202,59,184,95],[203,10,184,95],[203,14,184,95,"_ref2"],[203,19,184,95],[203,22,184,95,"_slicedToArray"],[203,36,184,95],[203,37,184,95,"_ref"],[203,41,184,95],[204,10,184,95],[204,14,184,20,"instanceIdentifier"],[204,32,184,38],[204,35,184,38,"_ref2"],[204,40,184,38],[205,10,184,38],[205,14,184,40,"instanceDeferred"],[205,30,184,56],[205,33,184,56,"_ref2"],[205,38,184,56],[206,10,185,12],[206,14,185,18,"normalizedIdentifier"],[206,34,185,38],[206,37,185,41],[206,41,185,45],[206,42,185,46,"normalizeInstanceIdentifier"],[206,69,185,73],[206,70,185,74,"instanceIdentifier"],[206,88,185,92],[206,89,185,93],[207,10,186,12],[207,14,186,16],[208,12,187,16],[209,12,188,16],[209,16,188,22,"instance"],[209,24,188,30],[209,27,188,33],[209,31,188,37],[209,32,188,38,"getOrInitializeService"],[209,54,188,60],[209,55,188,61],[210,14,189,20,"instanceIdentifier"],[210,32,189,38],[210,34,189,40,"normalizedIdentifier"],[211,12,190,16],[211,13,190,17],[211,14,190,18],[212,12,191,16,"instanceDeferred"],[212,28,191,32],[212,29,191,33,"resolve"],[212,36,191,40],[212,37,191,41,"instance"],[212,45,191,49],[212,46,191,50],[213,10,192,12],[213,11,192,13],[213,12,193,12],[213,19,193,19,"e"],[213,20,193,20],[213,22,193,22],[214,12,194,16],[215,12,195,16],[216,10,195,16],[217,8,197,8],[218,6,198,4],[219,4,198,5],[220,6,198,5,"key"],[220,9,198,5],[221,6,198,5,"value"],[221,11,198,5],[221,13,199,4],[221,22,199,4,"clearInstance"],[221,35,199,17,"clearInstance"],[221,36,199,17],[221,38,199,51],[222,8,199,51],[222,12,199,18,"identifier"],[222,22,199,28],[222,25,199,28,"arguments"],[222,34,199,28],[222,35,199,28,"length"],[222,41,199,28],[222,49,199,28,"arguments"],[222,58,199,28],[222,66,199,28,"undefined"],[222,75,199,28],[222,78,199,28,"arguments"],[222,87,199,28],[222,93,199,31,"DEFAULT_ENTRY_NAME"],[222,111,199,49],[223,8,200,8],[223,12,200,12],[223,13,200,13,"instancesDeferred"],[223,30,200,30],[223,31,200,31,"delete"],[223,37,200,37],[223,38,200,38,"identifier"],[223,48,200,48],[223,49,200,49],[224,8,201,8],[224,12,201,12],[224,13,201,13,"instancesOptions"],[224,29,201,29],[224,30,201,30,"delete"],[224,36,201,36],[224,37,201,37,"identifier"],[224,47,201,47],[224,48,201,48],[225,8,202,8],[225,12,202,12],[225,13,202,13,"instances"],[225,22,202,22],[225,23,202,23,"delete"],[225,29,202,29],[225,30,202,30,"identifier"],[225,40,202,40],[225,41,202,41],[226,6,203,4],[227,6,204,4],[228,6,205,4],[229,4,205,4],[230,6,205,4,"key"],[230,9,205,4],[231,6,205,4,"value"],[231,11,205,4],[232,8,205,4],[232,12,205,4,"_delete2"],[232,20,205,4],[232,23,205,4,"_asyncToGenerator"],[232,40,205,4],[232,41,206,4],[232,54,206,19],[233,10,207,8],[233,14,207,14,"services"],[233,22,207,22],[233,25,207,25,"Array"],[233,30,207,30],[233,31,207,31,"from"],[233,35,207,35],[233,36,207,36],[233,40,207,40],[233,41,207,41,"instances"],[233,50,207,50],[233,51,207,51,"values"],[233,57,207,57],[233,58,207,58],[233,59,207,59],[233,60,207,60],[234,10,208,8],[234,16,208,14,"Promise"],[234,23,208,21],[234,24,208,22,"all"],[234,27,208,25],[234,28,208,26],[234,29,209,12],[234,32,209,15,"services"],[234,40,209,23],[234,41,210,17,"filter"],[234,47,210,23],[234,48,210,24,"service"],[234,55,210,31],[234,59,210,35],[234,69,210,45],[234,73,210,49,"service"],[234,80,210,56],[234,81,210,57],[234,82,210,58],[235,10,211,16],[236,10,211,16],[236,11,212,17,"map"],[236,14,212,20],[236,15,212,21,"service"],[236,22,212,28],[236,26,212,32,"service"],[236,33,212,39],[236,34,212,40,"INTERNAL"],[236,42,212,48],[236,43,212,49,"delete"],[236,49,212,55],[236,50,212,56],[236,51,212,57],[236,52,212,58],[236,54,213,12],[236,57,213,15,"services"],[236,65,213,23],[236,66,214,17,"filter"],[236,72,214,23],[236,73,214,24,"service"],[236,80,214,31],[236,84,214,35],[236,93,214,44],[236,97,214,48,"service"],[236,104,214,55],[236,105,214,56],[236,106,214,57],[237,10,215,16],[238,10,215,16],[238,11,216,17,"map"],[238,14,216,20],[238,15,216,21,"service"],[238,22,216,28],[238,26,216,32,"service"],[238,33,216,39],[238,34,216,40,"_delete"],[238,41,216,47],[238,42,216,48],[238,43,216,49],[238,44,216,50],[238,45,217,9],[238,46,217,10],[239,8,218,4],[239,9,218,5],[240,8,218,5],[240,17,206,10,"delete"],[240,24,206,16,"delete"],[240,25,206,16],[241,10,206,16],[241,17,206,16,"_delete2"],[241,25,206,16],[241,26,206,16,"apply"],[241,31,206,16],[241,38,206,16,"arguments"],[241,47,206,16],[242,8,206,16],[243,8,206,16],[243,15,206,10,"delete"],[243,22,206,16],[244,6,206,16],[245,4,206,16],[246,6,206,16,"key"],[246,9,206,16],[247,6,206,16,"value"],[247,11,206,16],[247,13,219,4],[247,22,219,4,"isComponentSet"],[247,36,219,18,"isComponentSet"],[247,37,219,18],[247,39,219,21],[248,8,220,8],[248,15,220,15],[248,19,220,19],[248,20,220,20,"component"],[248,29,220,29],[248,33,220,33],[248,37,220,37],[249,6,221,4],[250,4,221,5],[251,6,221,5,"key"],[251,9,221,5],[252,6,221,5,"value"],[252,11,221,5],[252,13,222,4],[252,22,222,4,"isInitialized"],[252,35,222,17,"isInitialized"],[252,36,222,17],[252,38,222,51],[253,8,222,51],[253,12,222,18,"identifier"],[253,22,222,28],[253,25,222,28,"arguments"],[253,34,222,28],[253,35,222,28,"length"],[253,41,222,28],[253,49,222,28,"arguments"],[253,58,222,28],[253,66,222,28,"undefined"],[253,75,222,28],[253,78,222,28,"arguments"],[253,87,222,28],[253,93,222,31,"DEFAULT_ENTRY_NAME"],[253,111,222,49],[254,8,223,8],[254,15,223,15],[254,19,223,19],[254,20,223,20,"instances"],[254,29,223,29],[254,30,223,30,"has"],[254,33,223,33],[254,34,223,34,"identifier"],[254,44,223,44],[254,45,223,45],[255,6,224,4],[256,4,224,5],[257,6,224,5,"key"],[257,9,224,5],[258,6,224,5,"value"],[258,11,224,5],[258,13,225,4],[258,22,225,4,"getOptions"],[258,32,225,14,"getOptions"],[258,33,225,14],[258,35,225,48],[259,8,225,48],[259,12,225,15,"identifier"],[259,22,225,25],[259,25,225,25,"arguments"],[259,34,225,25],[259,35,225,25,"length"],[259,41,225,25],[259,49,225,25,"arguments"],[259,58,225,25],[259,66,225,25,"undefined"],[259,75,225,25],[259,78,225,25,"arguments"],[259,87,225,25],[259,93,225,28,"DEFAULT_ENTRY_NAME"],[259,111,225,46],[260,8,226,8],[260,15,226,15],[260,19,226,19],[260,20,226,20,"instancesOptions"],[260,36,226,36],[260,37,226,37,"get"],[260,40,226,40],[260,41,226,41,"identifier"],[260,51,226,51],[260,52,226,52],[260,56,226,56],[260,57,226,57],[260,58,226,58],[261,6,227,4],[262,4,227,5],[263,6,227,5,"key"],[263,9,227,5],[264,6,227,5,"value"],[264,11,227,5],[264,13,228,4],[264,22,228,4,"initialize"],[264,32,228,14,"initialize"],[264,33,228,14],[264,35,228,26],[265,8,228,26],[265,12,228,15,"opts"],[265,16,228,19],[265,19,228,19,"arguments"],[265,28,228,19],[265,29,228,19,"length"],[265,35,228,19],[265,43,228,19,"arguments"],[265,52,228,19],[265,60,228,19,"undefined"],[265,69,228,19],[265,72,228,19,"arguments"],[265,81,228,19],[265,87,228,22],[265,88,228,23],[265,89,228,24],[266,8,229,8],[266,12,229,8,"_opts$options"],[266,25,229,8],[266,28,229,33,"opts"],[266,32,229,37],[266,33,229,16,"options"],[266,40,229,23],[267,10,229,16,"options"],[267,17,229,23],[267,20,229,23,"_opts$options"],[267,33,229,23],[267,47,229,26],[267,48,229,27],[267,49,229,28],[267,52,229,28,"_opts$options"],[267,65,229,28],[268,8,230,8],[268,12,230,14,"normalizedIdentifier"],[268,32,230,34],[268,35,230,37],[268,39,230,41],[268,40,230,42,"normalizeInstanceIdentifier"],[268,67,230,69],[268,68,230,70,"opts"],[268,72,230,74],[268,73,230,75,"instanceIdentifier"],[268,91,230,93],[268,92,230,94],[269,8,231,8],[269,12,231,12],[269,16,231,16],[269,17,231,17,"isInitialized"],[269,30,231,30],[269,31,231,31,"normalizedIdentifier"],[269,51,231,51],[269,52,231,52],[269,54,231,54],[270,10,232,12],[270,16,232,18,"Error"],[270,21,232,23],[270,22,232,24],[270,25,232,27],[270,29,232,31],[270,30,232,32,"name"],[270,34,232,36],[270,38,232,40,"normalizedIdentifier"],[270,58,232,60],[270,90,232,92],[270,91,232,93],[271,8,233,8],[272,8,234,8],[272,12,234,12],[272,13,234,13],[272,17,234,17],[272,18,234,18,"isComponentSet"],[272,32,234,32],[272,33,234,33],[272,34,234,34],[272,36,234,36],[273,10,235,12],[273,16,235,18,"Error"],[273,21,235,23],[273,22,235,24],[273,35,235,37],[273,39,235,41],[273,40,235,42,"name"],[273,44,235,46],[273,74,235,76],[273,75,235,77],[274,8,236,8],[275,8,237,8],[275,12,237,14,"instance"],[275,20,237,22],[275,23,237,25],[275,27,237,29],[275,28,237,30,"getOrInitializeService"],[275,50,237,52],[275,51,237,53],[276,10,238,12,"instanceIdentifier"],[276,28,238,30],[276,30,238,32,"normalizedIdentifier"],[276,50,238,52],[277,10,239,12,"options"],[278,8,240,8],[278,9,240,9],[278,10,240,10],[279,8,241,8],[280,8,242,8],[280,17,242,8,"_ref3"],[280,22,242,8],[280,26,242,61],[280,30,242,65],[280,31,242,66,"instancesDeferred"],[280,48,242,83],[280,49,242,84,"entries"],[280,56,242,91],[280,57,242,92],[280,58,242,93],[280,60,242,95],[281,10,242,95],[281,14,242,95,"_ref4"],[281,19,242,95],[281,22,242,95,"_slicedToArray"],[281,36,242,95],[281,37,242,95,"_ref3"],[281,42,242,95],[282,10,242,95],[282,14,242,20,"instanceIdentifier"],[282,32,242,38],[282,35,242,38,"_ref4"],[282,40,242,38],[283,10,242,38],[283,14,242,40,"instanceDeferred"],[283,30,242,56],[283,33,242,56,"_ref4"],[283,38,242,56],[284,10,243,12],[284,14,243,18,"normalizedDeferredIdentifier"],[284,42,243,46],[284,45,243,49],[284,49,243,53],[284,50,243,54,"normalizeInstanceIdentifier"],[284,77,243,81],[284,78,243,82,"instanceIdentifier"],[284,96,243,100],[284,97,243,101],[285,10,244,12],[285,14,244,16,"normalizedIdentifier"],[285,34,244,36],[285,39,244,41,"normalizedDeferredIdentifier"],[285,67,244,69],[285,69,244,71],[286,12,245,16,"instanceDeferred"],[286,28,245,32],[286,29,245,33,"resolve"],[286,36,245,40],[286,37,245,41,"instance"],[286,45,245,49],[286,46,245,50],[287,10,246,12],[288,8,247,8],[289,8,248,8],[289,15,248,15,"instance"],[289,23,248,23],[290,6,249,4],[291,6,250,4],[292,0,251,0],[293,0,252,0],[294,0,253,0],[295,0,254,0],[296,0,255,0],[297,0,256,0],[298,0,257,0],[299,4,250,4],[300,6,250,4,"key"],[300,9,250,4],[301,6,250,4,"value"],[301,11,250,4],[301,13,258,4],[301,22,258,4,"onInit"],[301,28,258,10,"onInit"],[301,29,258,11,"callback"],[301,37,258,19],[301,39,258,21,"identifier"],[301,49,258,31],[301,51,258,33],[302,8,259,8],[302,12,259,14,"normalizedIdentifier"],[302,32,259,34],[302,35,259,37],[302,39,259,41],[302,40,259,42,"normalizeInstanceIdentifier"],[302,67,259,69],[302,68,259,70,"identifier"],[302,78,259,80],[302,79,259,81],[303,8,260,8],[303,12,260,14,"existingCallbacks"],[303,29,260,31],[303,32,260,34],[303,36,260,38],[303,37,260,39,"onInitCallbacks"],[303,52,260,54],[303,53,260,55,"get"],[303,56,260,58],[303,57,260,59,"normalizedIdentifier"],[303,77,260,79],[303,78,260,80],[303,82,261,12],[303,86,261,16,"Set"],[303,89,261,19],[303,90,261,20],[303,91,261,21],[304,8,262,8,"existingCallbacks"],[304,25,262,25],[304,26,262,26,"add"],[304,29,262,29],[304,30,262,30,"callback"],[304,38,262,38],[304,39,262,39],[305,8,263,8],[305,12,263,12],[305,13,263,13,"onInitCallbacks"],[305,28,263,28],[305,29,263,29,"set"],[305,32,263,32],[305,33,263,33,"normalizedIdentifier"],[305,53,263,53],[305,55,263,55,"existingCallbacks"],[305,72,263,72],[305,73,263,73],[306,8,264,8],[306,12,264,14,"existingInstance"],[306,28,264,30],[306,31,264,33],[306,35,264,37],[306,36,264,38,"instances"],[306,45,264,47],[306,46,264,48,"get"],[306,49,264,51],[306,50,264,52,"normalizedIdentifier"],[306,70,264,72],[306,71,264,73],[307,8,265,8],[307,12,265,12,"existingInstance"],[307,28,265,28],[307,30,265,30],[308,10,266,12,"callback"],[308,18,266,20],[308,19,266,21,"existingInstance"],[308,35,266,37],[308,37,266,39,"normalizedIdentifier"],[308,57,266,59],[308,58,266,60],[309,8,267,8],[310,8,268,8],[310,15,268,15],[310,21,268,21],[311,10,269,12,"existingCallbacks"],[311,27,269,29],[311,28,269,30,"delete"],[311,34,269,36],[311,35,269,37,"callback"],[311,43,269,45],[311,44,269,46],[312,8,270,8],[312,9,270,9],[313,6,271,4],[314,6,272,4],[315,0,273,0],[316,0,274,0],[317,0,275,0],[318,4,272,4],[319,6,272,4,"key"],[319,9,272,4],[320,6,272,4,"value"],[320,11,272,4],[320,13,276,4],[320,22,276,4,"invokeOnInitCallbacks"],[320,43,276,25,"invokeOnInitCallbacks"],[320,44,276,26,"instance"],[320,52,276,34],[320,54,276,36,"identifier"],[320,64,276,46],[320,66,276,48],[321,8,277,8],[321,12,277,14,"callbacks"],[321,21,277,23],[321,24,277,26],[321,28,277,30],[321,29,277,31,"onInitCallbacks"],[321,44,277,46],[321,45,277,47,"get"],[321,48,277,50],[321,49,277,51,"identifier"],[321,59,277,61],[321,60,277,62],[322,8,278,8],[322,12,278,12],[322,13,278,13,"callbacks"],[322,22,278,22],[322,24,278,24],[323,10,279,12],[324,8,280,8],[325,8,281,8],[325,13,281,13],[325,17,281,19,"callback"],[325,25,281,27],[325,29,281,31,"callbacks"],[325,38,281,40],[325,40,281,42],[326,10,282,12],[326,14,282,16],[327,12,283,16,"callback"],[327,20,283,24],[327,21,283,25,"instance"],[327,29,283,33],[327,31,283,35,"identifier"],[327,41,283,45],[327,42,283,46],[328,10,284,12],[328,11,284,13],[328,12,285,12],[328,18,285,18],[329,12,286,16],[330,10,286,16],[331,8,288,8],[332,6,289,4],[333,4,289,5],[334,6,289,5,"key"],[334,9,289,5],[335,6,289,5,"value"],[335,11,289,5],[335,13,290,4],[335,22,290,4,"getOrInitializeService"],[335,44,290,26,"getOrInitializeService"],[335,45,290,26,"_ref5"],[335,50,290,26],[335,52,290,65],[336,8,290,65],[336,12,290,29,"instanceIdentifier"],[336,30,290,47],[336,33,290,47,"_ref5"],[336,38,290,47],[336,39,290,29,"instanceIdentifier"],[336,57,290,47],[337,10,290,47,"_ref5$options"],[337,23,290,47],[337,26,290,47,"_ref5"],[337,31,290,47],[337,32,290,49,"options"],[337,39,290,56],[338,10,290,49,"options"],[338,17,290,56],[338,20,290,56,"_ref5$options"],[338,33,290,56],[338,47,290,59],[338,48,290,60],[338,49,290,61],[338,52,290,61,"_ref5$options"],[338,65,290,61],[339,8,291,8],[339,12,291,12,"instance"],[339,20,291,20],[339,23,291,23],[339,27,291,27],[339,28,291,28,"instances"],[339,37,291,37],[339,38,291,38,"get"],[339,41,291,41],[339,42,291,42,"instanceIdentifier"],[339,60,291,60],[339,61,291,61],[340,8,292,8],[340,12,292,12],[340,13,292,13,"instance"],[340,21,292,21],[340,25,292,25],[340,29,292,29],[340,30,292,30,"component"],[340,39,292,39],[340,41,292,41],[341,10,293,12,"instance"],[341,18,293,20],[341,21,293,23],[341,25,293,27],[341,26,293,28,"component"],[341,35,293,37],[341,36,293,38,"instanceFactory"],[341,51,293,53],[341,52,293,54],[341,56,293,58],[341,57,293,59,"container"],[341,66,293,68],[341,68,293,70],[342,12,294,16,"instanceIdentifier"],[342,30,294,34],[342,32,294,36,"normalizeIdentifierForFactory"],[342,61,294,65],[342,62,294,66,"instanceIdentifier"],[342,80,294,84],[342,81,294,85],[343,12,295,16,"options"],[344,10,296,12],[344,11,296,13],[344,12,296,14],[345,10,297,12],[345,14,297,16],[345,15,297,17,"instances"],[345,24,297,26],[345,25,297,27,"set"],[345,28,297,30],[345,29,297,31,"instanceIdentifier"],[345,47,297,49],[345,49,297,51,"instance"],[345,57,297,59],[345,58,297,60],[346,10,298,12],[346,14,298,16],[346,15,298,17,"instancesOptions"],[346,31,298,33],[346,32,298,34,"set"],[346,35,298,37],[346,36,298,38,"instanceIdentifier"],[346,54,298,56],[346,56,298,58,"options"],[346,63,298,65],[346,64,298,66],[347,10,299,12],[348,0,300,0],[349,0,301,0],[350,0,302,0],[351,0,303,0],[352,10,304,12],[352,14,304,16],[352,15,304,17,"invokeOnInitCallbacks"],[352,36,304,38],[352,37,304,39,"instance"],[352,45,304,47],[352,47,304,49,"instanceIdentifier"],[352,65,304,67],[352,66,304,68],[353,10,305,12],[354,0,306,0],[355,0,307,0],[356,0,308,0],[357,0,309,0],[358,10,310,12],[358,14,310,16],[358,18,310,20],[358,19,310,21,"component"],[358,28,310,30],[358,29,310,31,"onInstanceCreated"],[358,46,310,48],[358,48,310,50],[359,12,311,16],[359,16,311,20],[360,14,312,20],[360,18,312,24],[360,19,312,25,"component"],[360,28,312,34],[360,29,312,35,"onInstanceCreated"],[360,46,312,52],[360,47,312,53],[360,51,312,57],[360,52,312,58,"container"],[360,61,312,67],[360,63,312,69,"instanceIdentifier"],[360,81,312,87],[360,83,312,89,"instance"],[360,91,312,97],[360,92,312,98],[361,12,313,16],[361,13,313,17],[361,14,314,16],[361,20,314,22],[362,14,315,20],[363,12,315,20],[364,10,317,12],[365,8,318,8],[366,8,319,8],[366,15,319,15,"instance"],[366,23,319,23],[366,27,319,27],[366,31,319,31],[367,6,320,4],[368,4,320,5],[369,6,320,5,"key"],[369,9,320,5],[370,6,320,5,"value"],[370,11,320,5],[370,13,321,4],[370,22,321,4,"normalizeInstanceIdentifier"],[370,49,321,31,"normalizeInstanceIdentifier"],[370,50,321,31],[370,52,321,65],[371,8,321,65],[371,12,321,32,"identifier"],[371,22,321,42],[371,25,321,42,"arguments"],[371,34,321,42],[371,35,321,42,"length"],[371,41,321,42],[371,49,321,42,"arguments"],[371,58,321,42],[371,66,321,42,"undefined"],[371,75,321,42],[371,78,321,42,"arguments"],[371,87,321,42],[371,93,321,45,"DEFAULT_ENTRY_NAME"],[371,111,321,63],[372,8,322,8],[372,12,322,12],[372,16,322,16],[372,17,322,17,"component"],[372,26,322,26],[372,28,322,28],[373,10,323,12],[373,17,323,19],[373,21,323,23],[373,22,323,24,"component"],[373,31,323,33],[373,32,323,34,"multipleInstances"],[373,49,323,51],[373,52,323,54,"identifier"],[373,62,323,64],[373,65,323,67,"DEFAULT_ENTRY_NAME"],[373,83,323,85],[374,8,324,8],[374,9,324,9],[374,15,325,13],[375,10,326,12],[375,17,326,19,"identifier"],[375,27,326,29],[375,28,326,30],[375,29,326,31],[376,8,327,8],[377,6,328,4],[378,4,328,5],[379,6,328,5,"key"],[379,9,328,5],[380,6,328,5,"value"],[380,11,328,5],[380,13,329,4],[380,22,329,4,"shouldAutoInitialize"],[380,42,329,24,"shouldAutoInitialize"],[380,43,329,24],[380,45,329,27],[381,8,330,8],[381,15,330,16],[381,16,330,17],[381,17,330,18],[381,21,330,22],[381,22,330,23,"component"],[381,31,330,32],[381,35,331,12],[381,39,331,16],[381,40,331,17,"component"],[381,49,331,26],[381,50,331,27,"instantiationMode"],[381,67,331,44],[381,72,331,49],[381,82,331,59],[381,83,331,60],[382,6,332,4],[383,4,332,5],[384,2,332,5],[384,7,334,0],[385,2,335,0],[385,11,335,9,"normalizeIdentifierForFactory"],[385,40,335,38,"normalizeIdentifierForFactory"],[385,41,335,39,"identifier"],[385,51,335,49],[385,53,335,51],[386,4,336,4],[386,11,336,11,"identifier"],[386,21,336,21],[386,26,336,26,"DEFAULT_ENTRY_NAME"],[386,44,336,44],[386,47,336,47,"undefined"],[386,56,336,56],[386,59,336,59,"identifier"],[386,69,336,69],[387,2,337,0],[388,2,338,0],[388,11,338,9,"isComponentEager"],[388,27,338,25,"isComponentEager"],[388,28,338,26,"component"],[388,37,338,35],[388,39,338,37],[389,4,339,4],[389,11,339,11,"component"],[389,20,339,20],[389,21,339,21,"instantiationMode"],[389,38,339,38],[389,43,339,43],[389,50,339,50],[389,51,339,51],[390,2,340,0],[392,2,342,0],[393,0,343,0],[394,0,344,0],[395,0,345,0],[396,0,346,0],[397,0,347,0],[398,0,348,0],[399,0,349,0],[400,0,350,0],[401,0,351,0],[402,0,352,0],[403,0,353,0],[404,0,354,0],[405,0,355,0],[406,0,356,0],[407,0,357,0],[408,2,358,0],[409,0,359,0],[410,0,360,0],[411,2,358,0],[411,6,361,6,"ComponentContainer"],[411,24,361,24],[412,4,362,4],[412,13,362,4,"ComponentContainer"],[412,32,362,16,"name"],[412,36,362,20],[412,38,362,22],[413,6,362,22,"_classCallCheck"],[413,21,362,22],[413,28,362,22,"ComponentContainer"],[413,46,362,22],[414,6,363,8],[414,10,363,12],[414,11,363,13,"name"],[414,15,363,17],[414,18,363,20,"name"],[414,22,363,24],[415,6,364,8],[415,10,364,12],[415,11,364,13,"providers"],[415,20,364,22],[415,23,364,25],[415,27,364,29,"Map"],[415,30,364,32],[415,31,364,33],[415,32,364,34],[416,4,365,4],[417,4,366,4],[418,0,367,0],[419,0,368,0],[420,0,369,0],[421,0,370,0],[422,0,371,0],[423,0,372,0],[424,0,373,0],[425,0,374,0],[426,4,366,4],[426,11,366,4,"_createClass"],[426,23,366,4],[426,24,366,4,"ComponentContainer"],[426,42,366,4],[427,6,366,4,"key"],[427,9,366,4],[428,6,366,4,"value"],[428,11,366,4],[428,13,375,4],[428,22,375,4,"addComponent"],[428,34,375,16,"addComponent"],[428,35,375,17,"component"],[428,44,375,26],[428,46,375,28],[429,8,376,8],[429,12,376,14,"provider"],[429,20,376,22],[429,23,376,25],[429,27,376,29],[429,28,376,30,"getProvider"],[429,39,376,41],[429,40,376,42,"component"],[429,49,376,51],[429,50,376,52,"name"],[429,54,376,56],[429,55,376,57],[430,8,377,8],[430,12,377,12,"provider"],[430,20,377,20],[430,21,377,21,"isComponentSet"],[430,35,377,35],[430,36,377,36],[430,37,377,37],[430,39,377,39],[431,10,378,12],[431,16,378,18],[431,20,378,22,"Error"],[431,25,378,27],[431,26,378,28],[431,39,378,41,"component"],[431,48,378,50],[431,49,378,51,"name"],[431,53,378,55],[431,90,378,92],[431,94,378,96],[431,95,378,97,"name"],[431,99,378,101],[431,101,378,103],[431,102,378,104],[432,8,379,8],[433,8,380,8,"provider"],[433,16,380,16],[433,17,380,17,"setComponent"],[433,29,380,29],[433,30,380,30,"component"],[433,39,380,39],[433,40,380,40],[434,6,381,4],[435,4,381,5],[436,6,381,5,"key"],[436,9,381,5],[437,6,381,5,"value"],[437,11,381,5],[437,13,382,4],[437,22,382,4,"addOrOverwriteComponent"],[437,45,382,27,"addOrOverwriteComponent"],[437,46,382,28,"component"],[437,55,382,37],[437,57,382,39],[438,8,383,8],[438,12,383,14,"provider"],[438,20,383,22],[438,23,383,25],[438,27,383,29],[438,28,383,30,"getProvider"],[438,39,383,41],[438,40,383,42,"component"],[438,49,383,51],[438,50,383,52,"name"],[438,54,383,56],[438,55,383,57],[439,8,384,8],[439,12,384,12,"provider"],[439,20,384,20],[439,21,384,21,"isComponentSet"],[439,35,384,35],[439,36,384,36],[439,37,384,37],[439,39,384,39],[440,10,385,12],[441,10,386,12],[441,14,386,16],[441,15,386,17,"providers"],[441,24,386,26],[441,25,386,27,"delete"],[441,31,386,33],[441,32,386,34,"component"],[441,41,386,43],[441,42,386,44,"name"],[441,46,386,48],[441,47,386,49],[442,8,387,8],[443,8,388,8],[443,12,388,12],[443,13,388,13,"addComponent"],[443,25,388,25],[443,26,388,26,"component"],[443,35,388,35],[443,36,388,36],[444,6,389,4],[445,6,390,4],[446,0,391,0],[447,0,392,0],[448,0,393,0],[449,0,394,0],[450,0,395,0],[451,0,396,0],[452,4,390,4],[453,6,390,4,"key"],[453,9,390,4],[454,6,390,4,"value"],[454,11,390,4],[454,13,397,4],[454,22,397,4,"getProvider"],[454,33,397,15,"getProvider"],[454,34,397,16,"name"],[454,38,397,20],[454,40,397,22],[455,8,398,8],[455,12,398,12],[455,16,398,16],[455,17,398,17,"providers"],[455,26,398,26],[455,27,398,27,"has"],[455,30,398,30],[455,31,398,31,"name"],[455,35,398,35],[455,36,398,36],[455,38,398,38],[456,10,399,12],[456,17,399,19],[456,21,399,23],[456,22,399,24,"providers"],[456,31,399,33],[456,32,399,34,"get"],[456,35,399,37],[456,36,399,38,"name"],[456,40,399,42],[456,41,399,43],[457,8,400,8],[458,8,401,8],[459,8,402,8],[459,12,402,14,"provider"],[459,20,402,22],[459,23,402,25],[459,27,402,29,"Provider"],[459,35,402,37],[459,36,402,38,"name"],[459,40,402,42],[459,42,402,44],[459,46,402,48],[459,47,402,49],[460,8,403,8],[460,12,403,12],[460,13,403,13,"providers"],[460,22,403,22],[460,23,403,23,"set"],[460,26,403,26],[460,27,403,27,"name"],[460,31,403,31],[460,33,403,33,"provider"],[460,41,403,41],[460,42,403,42],[461,8,404,8],[461,15,404,15,"provider"],[461,23,404,23],[462,6,405,4],[463,4,405,5],[464,6,405,5,"key"],[464,9,405,5],[465,6,405,5,"value"],[465,11,405,5],[465,13,406,4],[465,22,406,4,"getProviders"],[465,34,406,16,"getProviders"],[465,35,406,16],[465,37,406,19],[466,8,407,8],[466,15,407,15,"Array"],[466,20,407,20],[466,21,407,21,"from"],[466,25,407,25],[466,26,407,26],[466,30,407,30],[466,31,407,31,"providers"],[466,40,407,40],[466,41,407,41,"values"],[466,47,407,47],[466,48,407,48],[466,49,407,49],[466,50,407,50],[467,6,408,4],[468,4,408,5],[469,2,408,5],[470,2,411,0,"exports"],[470,9,411,7],[470,10,411,8,"Component"],[470,19,411,17],[470,22,411,20,"Component"],[470,31,411,29],[471,2,412,0,"exports"],[471,9,412,7],[471,10,412,8,"ComponentContainer"],[471,28,412,26],[471,31,412,29,"ComponentContainer"],[471,49,412,47],[472,2,413,0,"exports"],[472,9,413,7],[472,10,413,8,"Provider"],[472,18,413,16],[472,21,413,19,"Provider"],[472,29,413,27],[473,0,413,28],[473,3]],"functionMap":{"names":["<global>","Component","Component#constructor","Component#setInstantiationMode","Component#setMultipleInstances","Component#setServiceProps","Component#setInstanceCreatedCallback","Provider","Provider#constructor","Provider#get","Provider#getImmediate","Provider#getComponent","Provider#setComponent","Provider#clearInstance","Provider#_delete","services.filter$argument_0","services.filter.map$argument_0","Provider#isComponentSet","Provider#isInitialized","Provider#getOptions","Provider#initialize","Provider#onInit","<anonymous>","Provider#invokeOnInitCallbacks","Provider#getOrInitializeService","Provider#normalizeInstanceIdentifier","Provider#shouldAutoInitialize","normalizeIdentifierForFactory","isComponentEager","ComponentContainer","ComponentContainer#constructor","ComponentContainer#addComponent","ComponentContainer#addOrOverwriteComponent","ComponentContainer#getProvider","ComponentContainer#getProviders"],"mappings":"AAA;ACS;ICO;KDW;IEC;KFG;IGC;KHG;IIC;KJG;IKC;KLG;CDC;AOwC;ICC;KDQ;IEK;KFwB;IGC;KH6B;IIC;KJE;IKC;KLyC;IMC;KNI;IOG;wBCI,gCD;qBEE,oCF;wBCE,+BD;qBEE,4BF;KPE;IUC;KVE;IWC;KXE;IYC;KZE;IaC;KbqB;IcS;eCU;SDE;KdC;IgBK;KhBa;IiBC;KjB8B;IkBC;KlBO;ImBC;KnBG;CPC;A2BE;C3BE;A4BC;C5BE;A6BqB;ICC;KDG;IEU;KFM;IGC;KHO;IIQ;KJQ;IKC;KLE;C7BC"}},"type":"js/module"}]}