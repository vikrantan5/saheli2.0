{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":38},"end":{"line":4,"column":31,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":69,"index":139}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"]}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":140},"end":{"line":6,"column":58,"index":198}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"]}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":199},"end":{"line":7,"column":74,"index":273}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"]}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":274},"end":{"line":12,"column":33,"index":395}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"]}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":396},"end":{"line":13,"column":58,"index":454}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"]}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":455},"end":{"line":19,"column":23,"index":559}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useBaseQuery.ts\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useBaseQuery = useBaseQuery;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _queryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProvider = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _QueryErrorResetBoundary = require(_dependencyMap[3], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtils = require(_dependencyMap[4], \"./errorBoundaryUtils.js\");\n  var _IsRestoringProvider = require(_dependencyMap[5], \"./IsRestoringProvider.js\");\n  var _suspense = require(_dependencyMap[6], \"./suspense.js\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function useBaseQuery(options, Observer, queryClient) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n      }\n    }\n    const isRestoring = (0, _IsRestoringProvider.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundary.useQueryErrorResetBoundary)();\n    const client = (0, _QueryClientProvider.useQueryClient)(queryClient);\n    const defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!defaultedOptions.queryFn) {\n        console.error(`[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`);\n      }\n    }\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0, _suspense.ensureSuspenseTimers)(defaultedOptions);\n    (0, _errorBoundaryUtils.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0, _errorBoundaryUtils.useClearResetErrorBoundary)(errorResetBoundary);\n    const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    const [observer] = React.useState(() => new Observer(client, defaultedOptions));\n    const result = observer.getOptimisticResult(defaultedOptions);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => {\n      const unsubscribe = shouldSubscribe ? observer.subscribe(_queryCore.notifyManager.batchCalls(onStoreChange)) : _queryCore.noop;\n      observer.updateResult();\n      return unsubscribe;\n    }, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setOptions(defaultedOptions);\n    }, [defaultedOptions, observer]);\n    if ((0, _suspense.shouldSuspend)(defaultedOptions, result)) {\n      throw (0, _suspense.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0, _errorBoundaryUtils.getHasError)({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client.getQueryCache().get(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense\n    })) {\n      throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_queryCore.isServer && (0, _suspense.willFetch)(result, isRestoring)) {\n      const promise = isNewCacheEntry ?\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      (0, _suspense.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) :\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n      promise?.catch(_queryCore.noop).finally(() => {\n        observer.updateResult();\n      });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n  }\n});","lineCount":75,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,3,0,"exports"],[8,9,3,0],[8,10,3,0,"useBaseQuery"],[8,22,3,0],[8,25,3,0,"useBaseQuery"],[8,37,3,0],[9,2,4,0],[9,6,4,0,"React"],[9,11,4,0],[9,14,4,0,"_interopRequireWildcard"],[9,37,4,0],[9,38,4,0,"require"],[9,45,4,0],[9,46,4,0,"_dependencyMap"],[9,60,4,0],[10,2,5,0],[10,6,5,0,"_queryCore"],[10,16,5,0],[10,19,5,0,"require"],[10,26,5,0],[10,27,5,0,"_dependencyMap"],[10,41,5,0],[11,2,6,0],[11,6,6,0,"_QueryClientProvider"],[11,26,6,0],[11,29,6,0,"require"],[11,36,6,0],[11,37,6,0,"_dependencyMap"],[11,51,6,0],[12,2,7,0],[12,6,7,0,"_QueryErrorResetBoundary"],[12,30,7,0],[12,33,7,0,"require"],[12,40,7,0],[12,41,7,0,"_dependencyMap"],[12,55,7,0],[13,2,8,0],[13,6,8,0,"_errorBoundaryUtils"],[13,25,8,0],[13,28,8,0,"require"],[13,35,8,0],[13,36,8,0,"_dependencyMap"],[13,50,8,0],[14,2,13,0],[14,6,13,0,"_IsRestoringProvider"],[14,26,13,0],[14,29,13,0,"require"],[14,36,13,0],[14,37,13,0,"_dependencyMap"],[14,51,13,0],[15,2,14,0],[15,6,14,0,"_suspense"],[15,15,14,0],[15,18,14,0,"require"],[15,25,14,0],[15,26,14,0,"_dependencyMap"],[15,40,14,0],[16,2,19,23],[16,11,19,23,"_interopRequireWildcard"],[16,35,19,23,"e"],[16,36,19,23],[16,38,19,23,"t"],[16,39,19,23],[16,68,19,23,"WeakMap"],[16,75,19,23],[16,81,19,23,"r"],[16,82,19,23],[16,89,19,23,"WeakMap"],[16,96,19,23],[16,100,19,23,"n"],[16,101,19,23],[16,108,19,23,"WeakMap"],[16,115,19,23],[16,127,19,23,"_interopRequireWildcard"],[16,150,19,23],[16,162,19,23,"_interopRequireWildcard"],[16,163,19,23,"e"],[16,164,19,23],[16,166,19,23,"t"],[16,167,19,23],[16,176,19,23,"t"],[16,177,19,23],[16,181,19,23,"e"],[16,182,19,23],[16,186,19,23,"e"],[16,187,19,23],[16,188,19,23,"__esModule"],[16,198,19,23],[16,207,19,23,"e"],[16,208,19,23],[16,214,19,23,"o"],[16,215,19,23],[16,217,19,23,"i"],[16,218,19,23],[16,220,19,23,"f"],[16,221,19,23],[16,226,19,23,"__proto__"],[16,235,19,23],[16,243,19,23,"default"],[16,250,19,23],[16,252,19,23,"e"],[16,253,19,23],[16,270,19,23,"e"],[16,271,19,23],[16,294,19,23,"e"],[16,295,19,23],[16,320,19,23,"e"],[16,321,19,23],[16,330,19,23,"f"],[16,331,19,23],[16,337,19,23,"o"],[16,338,19,23],[16,341,19,23,"t"],[16,342,19,23],[16,345,19,23,"n"],[16,346,19,23],[16,349,19,23,"r"],[16,350,19,23],[16,358,19,23,"o"],[16,359,19,23],[16,360,19,23,"has"],[16,363,19,23],[16,364,19,23,"e"],[16,365,19,23],[16,375,19,23,"o"],[16,376,19,23],[16,377,19,23,"get"],[16,380,19,23],[16,381,19,23,"e"],[16,382,19,23],[16,385,19,23,"o"],[16,386,19,23],[16,387,19,23,"set"],[16,390,19,23],[16,391,19,23,"e"],[16,392,19,23],[16,394,19,23,"f"],[16,395,19,23],[16,411,19,23,"t"],[16,412,19,23],[16,416,19,23,"e"],[16,417,19,23],[16,433,19,23,"t"],[16,434,19,23],[16,441,19,23,"hasOwnProperty"],[16,455,19,23],[16,456,19,23,"call"],[16,460,19,23],[16,461,19,23,"e"],[16,462,19,23],[16,464,19,23,"t"],[16,465,19,23],[16,472,19,23,"i"],[16,473,19,23],[16,477,19,23,"o"],[16,478,19,23],[16,481,19,23,"Object"],[16,487,19,23],[16,488,19,23,"defineProperty"],[16,502,19,23],[16,507,19,23,"Object"],[16,513,19,23],[16,514,19,23,"getOwnPropertyDescriptor"],[16,538,19,23],[16,539,19,23,"e"],[16,540,19,23],[16,542,19,23,"t"],[16,543,19,23],[16,550,19,23,"i"],[16,551,19,23],[16,552,19,23,"get"],[16,555,19,23],[16,559,19,23,"i"],[16,560,19,23],[16,561,19,23,"set"],[16,564,19,23],[16,568,19,23,"o"],[16,569,19,23],[16,570,19,23,"f"],[16,571,19,23],[16,573,19,23,"t"],[16,574,19,23],[16,576,19,23,"i"],[16,577,19,23],[16,581,19,23,"f"],[16,582,19,23],[16,583,19,23,"t"],[16,584,19,23],[16,588,19,23,"e"],[16,589,19,23],[16,590,19,23,"t"],[16,591,19,23],[16,602,19,23,"f"],[16,603,19,23],[16,608,19,23,"e"],[16,609,19,23],[16,611,19,23,"t"],[16,612,19,23],[17,2,20,0],[17,11,20,9,"useBaseQuery"],[17,23,20,21,"useBaseQuery"],[17,24,20,22,"options"],[17,31,20,29],[17,33,20,31,"Observer"],[17,41,20,39],[17,43,20,41,"queryClient"],[17,54,20,52],[17,56,20,54],[18,4,21,2],[18,8,21,6,"process"],[18,15,21,13],[18,16,21,14,"env"],[18,19,21,17],[18,20,21,18,"NODE_ENV"],[18,28,21,26],[18,33,21,31],[18,45,21,43],[18,47,21,45],[19,6,22,4],[19,10,22,8],[19,17,22,15,"options"],[19,24,22,22],[19,29,22,27],[19,37,22,35],[19,41,22,39,"Array"],[19,46,22,44],[19,47,22,45,"isArray"],[19,54,22,52],[19,55,22,53,"options"],[19,62,22,60],[19,63,22,61],[19,65,22,63],[20,8,23,6],[20,14,23,12],[20,18,23,16,"Error"],[20,23,23,21],[20,24,24,8],[20,310,25,6],[20,311,25,7],[21,6,26,4],[22,4,27,2],[23,4,28,2],[23,10,28,8,"isRestoring"],[23,21,28,19],[23,24,28,22],[23,28,28,22,"useIsRestoring"],[23,63,28,36],[23,65,28,37],[23,66,28,38],[24,4,29,2],[24,10,29,8,"errorResetBoundary"],[24,28,29,26],[24,31,29,29],[24,35,29,29,"useQueryErrorResetBoundary"],[24,86,29,55],[24,88,29,56],[24,89,29,57],[25,4,30,2],[25,10,30,8,"client"],[25,16,30,14],[25,19,30,17],[25,23,30,17,"useQueryClient"],[25,58,30,31],[25,60,30,32,"queryClient"],[25,71,30,43],[25,72,30,44],[26,4,31,2],[26,10,31,8,"defaultedOptions"],[26,26,31,24],[26,29,31,27,"client"],[26,35,31,33],[26,36,31,34,"defaultQueryOptions"],[26,55,31,53],[26,56,31,54,"options"],[26,63,31,61],[26,64,31,62],[27,4,32,2,"client"],[27,10,32,8],[27,11,32,9,"getDefaultOptions"],[27,28,32,26],[27,29,32,27],[27,30,32,28],[27,31,32,29,"queries"],[27,38,32,36],[27,40,32,38,"_experimental_beforeQuery"],[27,65,32,63],[27,68,33,4,"defaultedOptions"],[27,84,34,2],[27,85,34,3],[28,4,35,2],[28,8,35,6,"process"],[28,15,35,13],[28,16,35,14,"env"],[28,19,35,17],[28,20,35,18,"NODE_ENV"],[28,28,35,26],[28,33,35,31],[28,45,35,43],[28,47,35,45],[29,6,36,4],[29,10,36,8],[29,11,36,9,"defaultedOptions"],[29,27,36,25],[29,28,36,26,"queryFn"],[29,35,36,33],[29,37,36,35],[30,8,37,6,"console"],[30,15,37,13],[30,16,37,14,"error"],[30,21,37,19],[30,22,38,8],[30,26,38,12,"defaultedOptions"],[30,42,38,28],[30,43,38,29,"queryHash"],[30,52,38,38],[30,296,39,6],[30,297,39,7],[31,6,40,4],[32,4,41,2],[33,4,42,2,"defaultedOptions"],[33,20,42,18],[33,21,42,19,"_optimisticResults"],[33,39,42,37],[33,42,42,40,"isRestoring"],[33,53,42,51],[33,56,42,54],[33,69,42,67],[33,72,42,70],[33,84,42,82],[34,4,43,2],[34,8,43,2,"ensureSuspenseTimers"],[34,38,43,22],[34,40,43,23,"defaultedOptions"],[34,56,43,39],[34,57,43,40],[35,4,44,2],[35,8,44,2,"ensurePreventErrorBoundaryRetry"],[35,59,44,33],[35,61,44,34,"defaultedOptions"],[35,77,44,50],[35,79,44,52,"errorResetBoundary"],[35,97,44,70],[35,98,44,71],[36,4,45,2],[36,8,45,2,"useClearResetErrorBoundary"],[36,54,45,28],[36,56,45,29,"errorResetBoundary"],[36,74,45,47],[36,75,45,48],[37,4,46,2],[37,10,46,8,"isNewCacheEntry"],[37,25,46,23],[37,28,46,26],[37,29,46,27,"client"],[37,35,46,33],[37,36,46,34,"getQueryCache"],[37,49,46,47],[37,50,46,48],[37,51,46,49],[37,52,46,50,"get"],[37,55,46,53],[37,56,46,54,"defaultedOptions"],[37,72,46,70],[37,73,46,71,"queryHash"],[37,82,46,80],[37,83,46,81],[38,4,47,2],[38,10,47,8],[38,11,47,9,"observer"],[38,19,47,17],[38,20,47,18],[38,23,47,21,"React"],[38,28,47,26],[38,29,47,27,"useState"],[38,37,47,35],[38,38,48,4],[38,44,48,10],[38,48,48,14,"Observer"],[38,56,48,22],[38,57,49,6,"client"],[38,63,49,12],[38,65,50,6,"defaultedOptions"],[38,81,51,4],[38,82,52,2],[38,83,52,3],[39,4,53,2],[39,10,53,8,"result"],[39,16,53,14],[39,19,53,17,"observer"],[39,27,53,25],[39,28,53,26,"getOptimisticResult"],[39,47,53,45],[39,48,53,46,"defaultedOptions"],[39,64,53,62],[39,65,53,63],[40,4,54,2],[40,10,54,8,"shouldSubscribe"],[40,25,54,23],[40,28,54,26],[40,29,54,27,"isRestoring"],[40,40,54,38],[40,44,54,42,"options"],[40,51,54,49],[40,52,54,50,"subscribed"],[40,62,54,60],[40,67,54,65],[40,72,54,70],[41,4,55,2,"React"],[41,9,55,7],[41,10,55,8,"useSyncExternalStore"],[41,30,55,28],[41,31,56,4,"React"],[41,36,56,9],[41,37,56,10,"useCallback"],[41,48,56,21],[41,49,57,7,"onStoreChange"],[41,62,57,20],[41,66,57,25],[42,6,58,8],[42,12,58,14,"unsubscribe"],[42,23,58,25],[42,26,58,28,"shouldSubscribe"],[42,41,58,43],[42,44,58,46,"observer"],[42,52,58,54],[42,53,58,55,"subscribe"],[42,62,58,64],[42,63,58,65,"notifyManager"],[42,87,58,78],[42,88,58,79,"batchCalls"],[42,98,58,89],[42,99,58,90,"onStoreChange"],[42,112,58,103],[42,113,58,104],[42,114,58,105],[42,117,58,108,"noop"],[42,132,58,112],[43,6,59,8,"observer"],[43,14,59,16],[43,15,59,17,"updateResult"],[43,27,59,29],[43,28,59,30],[43,29,59,31],[44,6,60,8],[44,13,60,15,"unsubscribe"],[44,24,60,26],[45,4,61,6],[45,5,61,7],[45,7,62,6],[45,8,62,7,"observer"],[45,16,62,15],[45,18,62,17,"shouldSubscribe"],[45,33,62,32],[45,34,63,4],[45,35,63,5],[45,37,64,4],[45,43,64,10,"observer"],[45,51,64,18],[45,52,64,19,"getCurrentResult"],[45,68,64,35],[45,69,64,36],[45,70,64,37],[45,72,65,4],[45,78,65,10,"observer"],[45,86,65,18],[45,87,65,19,"getCurrentResult"],[45,103,65,35],[45,104,65,36],[45,105,66,2],[45,106,66,3],[46,4,67,2,"React"],[46,9,67,7],[46,10,67,8,"useEffect"],[46,19,67,17],[46,20,67,18],[46,26,67,24],[47,6,68,4,"observer"],[47,14,68,12],[47,15,68,13,"setOptions"],[47,25,68,23],[47,26,68,24,"defaultedOptions"],[47,42,68,40],[47,43,68,41],[48,4,69,2],[48,5,69,3],[48,7,69,5],[48,8,69,6,"defaultedOptions"],[48,24,69,22],[48,26,69,24,"observer"],[48,34,69,32],[48,35,69,33],[48,36,69,34],[49,4,70,2],[49,8,70,6],[49,12,70,6,"shouldSuspend"],[49,35,70,19],[49,37,70,20,"defaultedOptions"],[49,53,70,36],[49,55,70,38,"result"],[49,61,70,44],[49,62,70,45],[49,64,70,47],[50,6,71,4],[50,12,71,10],[50,16,71,10,"fetchOptimistic"],[50,41,71,25],[50,43,71,26,"defaultedOptions"],[50,59,71,42],[50,61,71,44,"observer"],[50,69,71,52],[50,71,71,54,"errorResetBoundary"],[50,89,71,72],[50,90,71,73],[51,4,72,2],[52,4,73,2],[52,8,73,6],[52,12,73,6,"getHasError"],[52,43,73,17],[52,45,73,18],[53,6,74,4,"result"],[53,12,74,10],[54,6,75,4,"errorResetBoundary"],[54,24,75,22],[55,6,76,4,"throwOnError"],[55,18,76,16],[55,20,76,18,"defaultedOptions"],[55,36,76,34],[55,37,76,35,"throwOnError"],[55,49,76,47],[56,6,77,4,"query"],[56,11,77,9],[56,13,77,11,"client"],[56,19,77,17],[56,20,77,18,"getQueryCache"],[56,33,77,31],[56,34,77,32],[56,35,77,33],[56,36,77,34,"get"],[56,39,77,37],[56,40,77,38,"defaultedOptions"],[56,56,77,54],[56,57,77,55,"queryHash"],[56,66,77,64],[56,67,77,65],[57,6,78,4,"suspense"],[57,14,78,12],[57,16,78,14,"defaultedOptions"],[57,32,78,30],[57,33,78,31,"suspense"],[58,4,79,2],[58,5,79,3],[58,6,79,4],[58,8,79,6],[59,6,80,4],[59,12,80,10,"result"],[59,18,80,16],[59,19,80,17,"error"],[59,24,80,22],[60,4,81,2],[61,4,82,2],[62,4,83,2,"client"],[62,10,83,8],[62,11,83,9,"getDefaultOptions"],[62,28,83,26],[62,29,83,27],[62,30,83,28],[62,31,83,29,"queries"],[62,38,83,36],[62,40,83,38,"_experimental_afterQuery"],[62,64,83,62],[62,67,84,4,"defaultedOptions"],[62,83,84,20],[62,85,85,4,"result"],[62,91,86,2],[62,92,86,3],[63,4,87,2],[63,8,87,6,"defaultedOptions"],[63,24,87,22],[63,25,87,23,"experimental_prefetchInRender"],[63,54,87,52],[63,58,87,56],[63,59,87,57,"isServer"],[63,78,87,65],[63,82,87,69],[63,86,87,69,"willFetch"],[63,105,87,78],[63,107,87,79,"result"],[63,113,87,85],[63,115,87,87,"isRestoring"],[63,126,87,98],[63,127,87,99],[63,129,87,101],[64,6,88,4],[64,12,88,10,"promise"],[64,19,88,17],[64,22,88,20,"isNewCacheEntry"],[64,37,88,35],[65,6,89,6],[66,6,90,6],[66,10,90,6,"fetchOptimistic"],[66,35,90,21],[66,37,90,22,"defaultedOptions"],[66,53,90,38],[66,55,90,40,"observer"],[66,63,90,48],[66,65,90,50,"errorResetBoundary"],[66,83,90,68],[66,84,90,69],[67,6,92,6],[68,6,93,6,"client"],[68,12,93,12],[68,13,93,13,"getQueryCache"],[68,26,93,26],[68,27,93,27],[68,28,93,28],[68,29,93,29,"get"],[68,32,93,32],[68,33,93,33,"defaultedOptions"],[68,49,93,49],[68,50,93,50,"queryHash"],[68,59,93,59],[68,60,93,60],[68,62,93,62,"promise"],[68,69,94,5],[69,6,95,4,"promise"],[69,13,95,11],[69,15,95,13,"catch"],[69,20,95,18],[69,21,95,19,"noop"],[69,36,95,23],[69,37,95,24],[69,38,95,25,"finally"],[69,45,95,32],[69,46,95,33],[69,52,95,39],[70,8,96,6,"observer"],[70,16,96,14],[70,17,96,15,"updateResult"],[70,29,96,27],[70,30,96,28],[70,31,96,29],[71,6,97,4],[71,7,97,5],[71,8,97,6],[72,4,98,2],[73,4,99,2],[73,11,99,9],[73,12,99,10,"defaultedOptions"],[73,28,99,26],[73,29,99,27,"notifyOnChangeProps"],[73,48,99,46],[73,51,99,49,"observer"],[73,59,99,57],[73,60,99,58,"trackResult"],[73,71,99,69],[73,72,99,70,"result"],[73,78,99,76],[73,79,99,77],[73,82,99,80,"result"],[73,88,99,86],[74,2,100,0],[75,0,100,1],[75,3]],"functionMap":{"names":["<global>","useBaseQuery","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","promise._catch._finally$argument_0"],"mappings":"AAA;ACmB;IC4B;KDG;MEM;OFI;IGG,iCH;IIC,iCJ;kBKE;GLE;iCM0B;KNE;CDG"}},"type":"js/module"}]}