{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":286},"end":{"line":5,"column":31,"index":317}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":390},"end":{"line":7,"column":66,"index":456}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":457},"end":{"line":8,"column":63,"index":520}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":521},"end":{"line":9,"column":33,"index":554}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":555},"end":{"line":10,"column":108,"index":663}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":664},"end":{"line":11,"column":56,"index":720}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":721},"end":{"line":12,"column":64,"index":785}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":786},"end":{"line":13,"column":47,"index":833}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":834},"end":{"line":14,"column":81,"index":915}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":916},"end":{"line":15,"column":43,"index":959}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":960},"end":{"line":16,"column":64,"index":1024}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1025},"end":{"line":17,"column":77,"index":1102}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1103},"end":{"line":18,"column":55,"index":1158}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1159},"end":{"line":19,"column":49,"index":1208}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/UIManager\"));\n  var _DeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/DeviceEventEmitter\"));\n  var _customDirectEventTypes = require(_dependencyMap[5], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[6], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[7], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[8], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[9], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[10], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[11], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[12], \"../utils\");\n  var _ActionType = require(_dependencyMap[13], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[14], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[15], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[16], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[17], \"../mountRegistry\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  var _UIManagerAny$getView, _UIManagerAny$getView2, _UIManagerAny$getCons;\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const UIManagerAny = _UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid)\n  }; // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  }; // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n\n  const UIManagerConstants = (_UIManagerAny$getView = (_UIManagerAny$getView2 = UIManagerAny.getViewManagerConfig) === null || _UIManagerAny$getView2 === void 0 ? void 0 : _UIManagerAny$getView2.call(UIManagerAny, 'getConstants')) !== null && _UIManagerAny$getView !== void 0 ? _UIManagerAny$getView : (_UIManagerAny$getCons = UIManagerAny.getConstants) === null || _UIManagerAny$getCons === void 0 ? void 0 : _UIManagerAny$getCons.call(UIManagerAny);\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  } // Wrap JS responder calls and notify gesture handler manager\n\n  const {\n    setJSResponder: oldSetJSResponder = () => {// no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {// no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && _Platform.default.OS === 'android'; // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  if (DEV_ON_ANDROID) {\n    _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1; // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      constructor(props) {\n        super(props);\n        _defineProperty(this, \"handlerTag\", void 0);\n        _defineProperty(this, \"config\", void 0);\n        _defineProperty(this, \"propsRef\", void 0);\n        _defineProperty(this, \"isMountedRef\", void 0);\n        _defineProperty(this, \"viewNode\", void 0);\n        _defineProperty(this, \"viewTag\", void 0);\n        _defineProperty(this, \"inspectorToggleListener\", void 0);\n        _defineProperty(this, \"onGestureHandlerEvent\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onGestureEvent === 'function') {\n              var _this$props$onGesture, _this$props;\n              (_this$props$onGesture = (_this$props = this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props, event);\n            }\n          } else {\n            var _this$props$onGesture2, _this$props2;\n            (_this$props$onGesture2 = (_this$props2 = this.props).onGestureHandlerEvent) === null || _this$props$onGesture2 === void 0 ? void 0 : _this$props$onGesture2.call(_this$props2, event);\n          }\n        });\n        _defineProperty(this, \"onGestureHandlerStateChange\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onHandlerStateChange === 'function') {\n              var _this$props$onHandler, _this$props3;\n              (_this$props$onHandler = (_this$props3 = this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props3, event);\n            }\n            const state = event.nativeEvent.state;\n            const stateEventName = stateToPropMappings[state];\n            const eventHandler = stateEventName && this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            var _this$props$onGesture3, _this$props4;\n            (_this$props$onGesture3 = (_this$props4 = this.props).onGestureHandlerStateChange) === null || _this$props$onGesture3 === void 0 ? void 0 : _this$props$onGesture3.call(_this$props4, event);\n          }\n        });\n        _defineProperty(this, \"refHandler\", node => {\n          var _props;\n          this.viewNode = node;\n          const child = React.Children.only(this.props.children); // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n\n          const ref = (0, _utils2.isReact19)() ? (_props = child.props) === null || _props === void 0 ? void 0 : _props.ref : child === null || child === void 0 ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        });\n        _defineProperty(this, \"createGestureHandler\", newConfig => {\n          this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n        });\n        _defineProperty(this, \"attachGestureHandler\", newViewTag => {\n          this.viewTag = newViewTag;\n          if (_Platform.default.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n              onGestureEvent: this.onGestureHandlerEvent,\n              onGestureStateChange: this.onGestureHandlerStateChange\n            });\n            const actionType = (() => {\n              var _this$props5, _this$props6;\n              const onGestureEvent = (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.onGestureEvent;\n              const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              const onHandlerStateChange = (_this$props6 = this.props) === null || _this$props6 === void 0 ? void 0 : _this$props6.onHandlerStateChange;\n              const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n          });\n        });\n        _defineProperty(this, \"updateGestureHandler\", newConfig => {\n          this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        });\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, _findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        var _this$inspectorToggle;\n        (_this$inspectorToggle = this.inspectorToggleListener) === null || _this$inspectorToggle === void 0 ? void 0 : _this$inspectorToggle.remove();\n        this.isMountedRef.current = false;\n        if (_Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)(); // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props; // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        var _this$props$testID;\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/React.createElement(_PressabilityDebugView.PressabilityDebugView, {\n            key: \"pressabilityDebugView\",\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: (_this$props$testID = this.props.testID) !== null && _this$props$testID !== void 0 ? _this$props$testID : child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    _defineProperty(Handler, \"displayName\", name);\n    _defineProperty(Handler, \"contextType\", _GestureHandlerRootViewContext.default);\n    return Handler;\n  }\n});","lineCount":410,"map":[[7,2,5,0],[7,6,5,0,"React"],[7,11,5,0],[7,14,5,0,"_interopRequireWildcard"],[7,37,5,0],[7,38,5,0,"require"],[7,45,5,0],[7,46,5,0,"_dependencyMap"],[7,60,5,0],[8,2,5,31],[8,6,5,31,"_Platform"],[8,15,5,31],[8,18,5,31,"_interopRequireDefault"],[8,40,5,31],[8,41,5,31,"require"],[8,48,5,31],[8,49,5,31,"_dependencyMap"],[8,63,5,31],[9,2,5,31],[9,6,5,31,"_UIManager"],[9,16,5,31],[9,19,5,31,"_interopRequireDefault"],[9,41,5,31],[9,42,5,31,"require"],[9,49,5,31],[9,50,5,31,"_dependencyMap"],[9,64,5,31],[10,2,5,31],[10,6,5,31,"_DeviceEventEmitter"],[10,25,5,31],[10,28,5,31,"_interopRequireDefault"],[10,50,5,31],[10,51,5,31,"require"],[10,58,5,31],[10,59,5,31,"_dependencyMap"],[10,73,5,31],[11,2,7,0],[11,6,7,0,"_customDirectEventTypes"],[11,29,7,0],[11,32,7,0,"require"],[11,39,7,0],[11,40,7,0,"_dependencyMap"],[11,54,7,0],[12,2,8,0],[12,6,8,0,"_RNGestureHandlerModule"],[12,29,8,0],[12,32,8,0,"_interopRequireDefault"],[12,54,8,0],[12,55,8,0,"require"],[12,62,8,0],[12,63,8,0,"_dependencyMap"],[12,77,8,0],[13,2,9,0],[13,6,9,0,"_State"],[13,12,9,0],[13,15,9,0,"require"],[13,22,9,0],[13,23,9,0,"_dependencyMap"],[13,37,9,0],[14,2,10,0],[14,6,10,0,"_handlersRegistry"],[14,23,10,0],[14,26,10,0,"require"],[14,33,10,0],[14,34,10,0,"_dependencyMap"],[14,48,10,0],[15,2,11,0],[15,6,11,0,"_getNextHandlerTag"],[15,24,11,0],[15,27,11,0,"require"],[15,34,11,0],[15,35,11,0,"_dependencyMap"],[15,49,11,0],[16,2,12,0],[16,6,12,0,"_utils"],[16,12,12,0],[16,15,12,0,"require"],[16,22,12,0],[16,23,12,0,"_dependencyMap"],[16,37,12,0],[17,2,13,0],[17,6,13,0,"_findNodeHandle"],[17,21,13,0],[17,24,13,0,"_interopRequireDefault"],[17,46,13,0],[17,47,13,0,"require"],[17,54,13,0],[17,55,13,0,"_dependencyMap"],[17,69,13,0],[18,2,14,0],[18,6,14,0,"_utils2"],[18,13,14,0],[18,16,14,0,"require"],[18,23,14,0],[18,24,14,0,"_dependencyMap"],[18,38,14,0],[19,2,15,0],[19,6,15,0,"_ActionType"],[19,17,15,0],[19,20,15,0,"require"],[19,27,15,0],[19,28,15,0,"_dependencyMap"],[19,42,15,0],[20,2,16,0],[20,6,16,0,"_PressabilityDebugView"],[20,28,16,0],[20,31,16,0,"require"],[20,38,16,0],[20,39,16,0,"_dependencyMap"],[20,53,16,0],[21,2,17,0],[21,6,17,0,"_GestureHandlerRootViewContext"],[21,36,17,0],[21,39,17,0,"_interopRequireDefault"],[21,61,17,0],[21,62,17,0,"require"],[21,69,17,0],[21,70,17,0,"_dependencyMap"],[21,84,17,0],[22,2,18,0],[22,6,18,0,"_ghQueueMicrotask"],[22,23,18,0],[22,26,18,0,"require"],[22,33,18,0],[22,34,18,0,"_dependencyMap"],[22,48,18,0],[23,2,19,0],[23,6,19,0,"_mountRegistry"],[23,20,19,0],[23,23,19,0,"require"],[23,30,19,0],[23,31,19,0,"_dependencyMap"],[23,45,19,0],[24,2,19,49],[24,11,19,49,"_interopRequireWildcard"],[24,35,19,49,"e"],[24,36,19,49],[24,38,19,49,"t"],[24,39,19,49],[24,68,19,49,"WeakMap"],[24,75,19,49],[24,81,19,49,"r"],[24,82,19,49],[24,89,19,49,"WeakMap"],[24,96,19,49],[24,100,19,49,"n"],[24,101,19,49],[24,108,19,49,"WeakMap"],[24,115,19,49],[24,127,19,49,"_interopRequireWildcard"],[24,150,19,49],[24,162,19,49,"_interopRequireWildcard"],[24,163,19,49,"e"],[24,164,19,49],[24,166,19,49,"t"],[24,167,19,49],[24,176,19,49,"t"],[24,177,19,49],[24,181,19,49,"e"],[24,182,19,49],[24,186,19,49,"e"],[24,187,19,49],[24,188,19,49,"__esModule"],[24,198,19,49],[24,207,19,49,"e"],[24,208,19,49],[24,214,19,49,"o"],[24,215,19,49],[24,217,19,49,"i"],[24,218,19,49],[24,220,19,49,"f"],[24,221,19,49],[24,226,19,49,"__proto__"],[24,235,19,49],[24,243,19,49,"default"],[24,250,19,49],[24,252,19,49,"e"],[24,253,19,49],[24,270,19,49,"e"],[24,271,19,49],[24,294,19,49,"e"],[24,295,19,49],[24,320,19,49,"e"],[24,321,19,49],[24,330,19,49,"f"],[24,331,19,49],[24,337,19,49,"o"],[24,338,19,49],[24,341,19,49,"t"],[24,342,19,49],[24,345,19,49,"n"],[24,346,19,49],[24,349,19,49,"r"],[24,350,19,49],[24,358,19,49,"o"],[24,359,19,49],[24,360,19,49,"has"],[24,363,19,49],[24,364,19,49,"e"],[24,365,19,49],[24,375,19,49,"o"],[24,376,19,49],[24,377,19,49,"get"],[24,380,19,49],[24,381,19,49,"e"],[24,382,19,49],[24,385,19,49,"o"],[24,386,19,49],[24,387,19,49,"set"],[24,390,19,49],[24,391,19,49,"e"],[24,392,19,49],[24,394,19,49,"f"],[24,395,19,49],[24,411,19,49,"t"],[24,412,19,49],[24,416,19,49,"e"],[24,417,19,49],[24,433,19,49,"t"],[24,434,19,49],[24,441,19,49,"hasOwnProperty"],[24,455,19,49],[24,456,19,49,"call"],[24,460,19,49],[24,461,19,49,"e"],[24,462,19,49],[24,464,19,49,"t"],[24,465,19,49],[24,472,19,49,"i"],[24,473,19,49],[24,477,19,49,"o"],[24,478,19,49],[24,481,19,49,"Object"],[24,487,19,49],[24,488,19,49,"defineProperty"],[24,502,19,49],[24,507,19,49,"Object"],[24,513,19,49],[24,514,19,49,"getOwnPropertyDescriptor"],[24,538,19,49],[24,539,19,49,"e"],[24,540,19,49],[24,542,19,49,"t"],[24,543,19,49],[24,550,19,49,"i"],[24,551,19,49],[24,552,19,49,"get"],[24,555,19,49],[24,559,19,49,"i"],[24,560,19,49],[24,561,19,49,"set"],[24,564,19,49],[24,568,19,49,"o"],[24,569,19,49],[24,570,19,49,"f"],[24,571,19,49],[24,573,19,49,"t"],[24,574,19,49],[24,576,19,49,"i"],[24,577,19,49],[24,581,19,49,"f"],[24,582,19,49],[24,583,19,49,"t"],[24,584,19,49],[24,588,19,49,"e"],[24,589,19,49],[24,590,19,49,"t"],[24,591,19,49],[24,602,19,49,"f"],[24,603,19,49],[24,608,19,49,"e"],[24,609,19,49],[24,611,19,49,"t"],[24,612,19,49],[25,2,1,0],[25,6,1,4,"_UIManagerAny$getView"],[25,27,1,25],[25,29,1,27,"_UIManagerAny$getView2"],[25,51,1,49],[25,53,1,51,"_UIManagerAny$getCons"],[25,74,1,72],[26,2,3,0],[26,11,3,9,"_defineProperty"],[26,26,3,24,"_defineProperty"],[26,27,3,25,"obj"],[26,30,3,28],[26,32,3,30,"key"],[26,35,3,33],[26,37,3,35,"value"],[26,42,3,40],[26,44,3,42],[27,4,3,44],[27,8,3,48,"key"],[27,11,3,51],[27,15,3,55,"obj"],[27,18,3,58],[27,20,3,60],[28,6,3,62,"Object"],[28,12,3,68],[28,13,3,69,"defineProperty"],[28,27,3,83],[28,28,3,84,"obj"],[28,31,3,87],[28,33,3,89,"key"],[28,36,3,92],[28,38,3,94],[29,8,3,96,"value"],[29,13,3,101],[29,15,3,103,"value"],[29,20,3,108],[30,8,3,110,"enumerable"],[30,18,3,120],[30,20,3,122],[30,24,3,126],[31,8,3,128,"configurable"],[31,20,3,140],[31,22,3,142],[31,26,3,146],[32,8,3,148,"writable"],[32,16,3,156],[32,18,3,158],[33,6,3,163],[33,7,3,164],[33,8,3,165],[34,4,3,167],[34,5,3,168],[34,11,3,174],[35,6,3,176,"obj"],[35,9,3,179],[35,10,3,180,"key"],[35,13,3,183],[35,14,3,184],[35,17,3,187,"value"],[35,22,3,192],[36,4,3,194],[37,4,3,196],[37,11,3,203,"obj"],[37,14,3,206],[38,2,3,208],[39,2,20,0],[39,8,20,6,"UIManagerAny"],[39,20,20,18],[39,23,20,21,"UIManager"],[39,41,20,30],[40,2,21,0,"customDirectEventTypes"],[40,48,21,22],[40,49,21,23,"topGestureHandlerEvent"],[40,71,21,45],[40,74,21,48],[41,4,22,2,"registrationName"],[41,20,22,18],[41,22,22,20],[42,2,23,0],[42,3,23,1],[43,2,24,0],[43,8,24,6,"customGHEventsConfigFabricAndroid"],[43,41,24,39],[43,44,24,42],[44,4,25,2,"topOnGestureHandlerEvent"],[44,28,25,26],[44,30,25,28],[45,6,26,4,"registrationName"],[45,22,26,20],[45,24,26,22],[46,4,27,2],[46,5,27,3],[47,4,28,2,"topOnGestureHandlerStateChange"],[47,34,28,32],[47,36,28,34],[48,6,29,4,"registrationName"],[48,22,29,20],[48,24,29,22],[49,4,30,2],[50,2,31,0],[50,3,31,1],[51,2,32,0],[51,8,32,6,"customGHEventsConfig"],[51,28,32,26],[51,31,32,29],[52,4,33,2,"onGestureHandlerEvent"],[52,25,33,23],[52,27,33,25],[53,6,34,4,"registrationName"],[53,22,34,20],[53,24,34,22],[54,4,35,2],[54,5,35,3],[55,4,36,2,"onGestureHandlerStateChange"],[55,31,36,29],[55,33,36,31],[56,6,37,4,"registrationName"],[56,22,37,20],[56,24,37,22],[57,4,38,2],[57,5,38,3],[58,4,39,2],[59,4,40,2],[60,4,41,2],[61,4,42,2],[62,4,43,2],[63,4,44,2],[64,4,45,2],[65,4,46,2],[66,4,47,2],[66,8,47,6],[66,12,47,6,"isFabric"],[66,28,47,14],[66,30,47,15],[66,31,47,16],[66,35,47,20,"Platform"],[66,52,47,28],[66,53,47,29,"OS"],[66,55,47,31],[66,60,47,36],[66,69,47,45],[66,73,47,49,"customGHEventsConfigFabricAndroid"],[66,106,47,82],[67,2,48,0],[67,3,48,1],[67,4,48,2],[67,5,48,3],[68,2,49,0],[69,2,50,0],[70,2,51,0],[72,2,53,0,"UIManagerAny"],[72,14,53,12],[72,15,53,13,"genericDirectEventTypes"],[72,38,53,36],[72,41,53,39],[73,4,53,41],[73,7,53,44,"UIManagerAny"],[73,19,53,56],[73,20,53,57,"genericDirectEventTypes"],[73,43,53,80],[74,4,54,2],[74,7,54,5,"customGHEventsConfig"],[75,2,55,0],[75,3,55,1],[75,4,55,2],[75,5,55,3],[76,2,56,0],[77,2,57,0],[79,2,59,0],[79,8,59,6,"UIManagerConstants"],[79,26,59,24],[79,29,59,27],[79,30,59,28,"_UIManagerAny$getView"],[79,51,59,49],[79,54,59,52],[79,55,59,53,"_UIManagerAny$getView2"],[79,77,59,75],[79,80,59,78,"UIManagerAny"],[79,92,59,90],[79,93,59,91,"getViewManagerConfig"],[79,113,59,111],[79,119,59,117],[79,123,59,121],[79,127,59,125,"_UIManagerAny$getView2"],[79,149,59,147],[79,154,59,152],[79,159,59,157],[79,160,59,158],[79,163,59,161],[79,168,59,166],[79,169,59,167],[79,172,59,170,"_UIManagerAny$getView2"],[79,194,59,192],[79,195,59,193,"call"],[79,199,59,197],[79,200,59,198,"UIManagerAny"],[79,212,59,210],[79,214,59,212],[79,228,59,226],[79,229,59,227],[79,235,59,233],[79,239,59,237],[79,243,59,241,"_UIManagerAny$getView"],[79,264,59,262],[79,269,59,267],[79,274,59,272],[79,275,59,273],[79,278,59,276,"_UIManagerAny$getView"],[79,299,59,297],[79,302,59,300],[79,303,59,301,"_UIManagerAny$getCons"],[79,324,59,322],[79,327,59,325,"UIManagerAny"],[79,339,59,337],[79,340,59,338,"getConstants"],[79,352,59,350],[79,358,59,356],[79,362,59,360],[79,366,59,364,"_UIManagerAny$getCons"],[79,387,59,385],[79,392,59,390],[79,397,59,395],[79,398,59,396],[79,401,59,399],[79,406,59,404],[79,407,59,405],[79,410,59,408,"_UIManagerAny$getCons"],[79,431,59,429],[79,432,59,430,"call"],[79,436,59,434],[79,437,59,435,"UIManagerAny"],[79,449,59,447],[79,450,59,448],[80,2,61,0],[80,6,61,4,"UIManagerConstants"],[80,24,61,22],[80,26,61,24],[81,4,62,2,"UIManagerConstants"],[81,22,62,20],[81,23,62,21,"genericDirectEventTypes"],[81,46,62,44],[81,49,62,47],[82,6,62,49],[82,9,62,52,"UIManagerConstants"],[82,27,62,70],[82,28,62,71,"genericDirectEventTypes"],[82,51,62,94],[83,6,63,4],[83,9,63,7,"customGHEventsConfig"],[84,4,64,2],[84,5,64,3],[85,2,65,0],[85,3,65,1],[85,4,65,2],[87,2,68,0],[87,8,68,6],[88,4,69,2,"setJSResponder"],[88,18,69,16],[88,20,69,18,"oldSetJSResponder"],[88,37,69,35],[88,40,69,38,"oldSetJSResponder"],[88,41,69,38],[88,46,69,44],[88,47,69,45],[89,4,69,45],[89,5,70,3],[90,4,71,2,"clearJSResponder"],[90,20,71,18],[90,22,71,20,"oldClearJSResponder"],[90,41,71,39],[90,44,71,42,"oldClearJSResponder"],[90,45,71,42],[90,50,71,48],[90,51,71,49],[91,4,71,49],[92,2,73,0],[92,3,73,1],[92,6,73,4,"UIManagerAny"],[92,18,73,16],[93,2,75,0,"UIManagerAny"],[93,14,75,12],[93,15,75,13,"setJSResponder"],[93,29,75,27],[93,32,75,30],[93,33,75,31,"tag"],[93,36,75,34],[93,38,75,36,"blockNativeResponder"],[93,58,75,56],[93,63,75,61],[94,4,76,2,"RNGestureHandlerModule"],[94,35,76,24],[94,36,76,25,"handleSetJSResponder"],[94,56,76,45],[94,57,76,46,"tag"],[94,60,76,49],[94,62,76,51,"blockNativeResponder"],[94,82,76,71],[94,83,76,72],[95,4,77,2,"oldSetJSResponder"],[95,21,77,19],[95,22,77,20,"tag"],[95,25,77,23],[95,27,77,25,"blockNativeResponder"],[95,47,77,45],[95,48,77,46],[96,2,78,0],[96,3,78,1],[97,2,80,0,"UIManagerAny"],[97,14,80,12],[97,15,80,13,"clearJSResponder"],[97,31,80,29],[97,34,80,32],[97,40,80,38],[98,4,81,2,"RNGestureHandlerModule"],[98,35,81,24],[98,36,81,25,"handleClearJSResponder"],[98,58,81,47],[98,59,81,48],[98,60,81,49],[99,4,82,2,"oldClearJSResponder"],[99,23,82,21],[99,24,82,22],[99,25,82,23],[100,2,83,0],[100,3,83,1],[101,2,85,0],[101,6,85,4,"allowTouches"],[101,18,85,16],[101,21,85,19],[101,25,85,23],[102,2,86,0],[102,8,86,6,"DEV_ON_ANDROID"],[102,22,86,20],[102,25,86,23,"__DEV__"],[102,32,86,30],[102,36,86,34,"Platform"],[102,53,86,42],[102,54,86,43,"OS"],[102,56,86,45],[102,61,86,50],[102,70,86,59],[102,71,86,60],[102,72,86,61],[103,2,87,0],[105,2,89,0],[105,6,89,4,"DEV_ON_ANDROID"],[105,20,89,18],[105,22,89,20],[106,4,90,2,"DeviceEventEmitter"],[106,31,90,20],[106,32,90,21,"addListener"],[106,43,90,32],[106,44,90,33],[106,68,90,57],[106,70,90,59],[106,76,90,65],[107,6,91,4,"allowTouches"],[107,18,91,16],[107,21,91,19],[107,22,91,20,"allowTouches"],[107,34,91,32],[108,4,92,2],[108,5,92,3],[108,6,92,4],[109,2,93,0],[110,2,95,0],[110,11,95,9,"hasUnresolvedRefs"],[110,28,95,26,"hasUnresolvedRefs"],[110,29,95,27,"props"],[110,34,95,32],[110,36,95,34],[111,4,96,2],[112,4,97,2],[112,10,97,8,"extract"],[112,17,97,15],[112,20,97,18,"refs"],[112,24,97,22],[112,28,97,26],[113,6,98,4],[113,10,98,8],[113,11,98,9,"Array"],[113,16,98,14],[113,17,98,15,"isArray"],[113,24,98,22],[113,25,98,23,"refs"],[113,29,98,27],[113,30,98,28],[113,32,98,30],[114,8,99,6],[114,15,99,13,"refs"],[114,19,99,17],[114,23,99,21,"refs"],[114,27,99,25],[114,28,99,26,"current"],[114,35,99,33],[114,40,99,38],[114,44,99,42],[115,6,100,4],[116,6,102,4],[116,13,102,11,"refs"],[116,17,102,15],[116,18,102,16,"some"],[116,22,102,20],[116,23,102,21,"r"],[116,24,102,22],[116,28,102,26,"r"],[116,29,102,27],[116,33,102,31,"r"],[116,34,102,32],[116,35,102,33,"current"],[116,42,102,40],[116,47,102,45],[116,51,102,49],[116,52,102,50],[117,4,103,2],[117,5,103,3],[118,4,105,2],[118,11,105,9,"extract"],[118,18,105,16],[118,19,105,17,"props"],[118,24,105,22],[118,25,105,23],[118,47,105,45],[118,48,105,46],[118,49,105,47],[118,53,105,51,"extract"],[118,60,105,58],[118,61,105,59,"props"],[118,66,105,64],[118,67,105,65],[118,76,105,74],[118,77,105,75],[118,78,105,76],[119,2,106,0],[120,2,108,0],[120,8,108,6,"stateToPropMappings"],[120,27,108,25],[120,30,108,28],[121,4,109,2],[121,5,109,3,"State"],[121,17,109,8],[121,18,109,9,"UNDETERMINED"],[121,30,109,21],[121,33,109,24,"undefined"],[121,42,109,33],[122,4,110,2],[122,5,110,3,"State"],[122,17,110,8],[122,18,110,9,"BEGAN"],[122,23,110,14],[122,26,110,17],[122,35,110,26],[123,4,111,2],[123,5,111,3,"State"],[123,17,111,8],[123,18,111,9,"FAILED"],[123,24,111,15],[123,27,111,18],[123,37,111,28],[124,4,112,2],[124,5,112,3,"State"],[124,17,112,8],[124,18,112,9,"CANCELLED"],[124,27,112,18],[124,30,112,21],[124,43,112,34],[125,4,113,2],[125,5,113,3,"State"],[125,17,113,8],[125,18,113,9,"ACTIVE"],[125,24,113,15],[125,27,113,18],[125,40,113,31],[126,4,114,2],[126,5,114,3,"State"],[126,17,114,8],[126,18,114,9,"END"],[126,21,114,12],[126,24,114,15],[127,2,115,0],[127,3,115,1],[128,2,116,0],[128,8,116,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[128,35,116,33],[128,38,116,36],[128,39,116,37],[128,40,116,38],[128,41,116,39],[130,2,118,15],[130,11,118,24,"createHandler"],[130,24,118,37,"createHandler"],[130,25,118,38],[131,4,119,2,"name"],[131,8,119,6],[132,4,120,2,"allowedProps"],[132,16,120,14],[132,19,120,17],[132,21,120,19],[133,4,121,2,"config"],[133,10,121,8],[133,13,121,11],[133,14,121,12],[133,15,121,13],[134,4,122,2,"transformProps"],[134,18,122,16],[135,4,123,2,"customNativeProps"],[135,21,123,19],[135,24,123,22],[136,2,124,0],[136,3,124,1],[136,5,124,3],[137,4,125,2],[137,10,125,8,"Handler"],[137,17,125,15],[137,26,125,24,"React"],[137,31,125,29],[137,32,125,30,"Component"],[137,41,125,39],[137,42,125,40],[138,6,126,4,"constructor"],[138,17,126,15,"constructor"],[138,18,126,16,"props"],[138,23,126,21],[138,25,126,23],[139,8,127,6],[139,13,127,11],[139,14,127,12,"props"],[139,19,127,17],[139,20,127,18],[140,8,129,6,"_defineProperty"],[140,23,129,21],[140,24,129,22],[140,28,129,26],[140,30,129,28],[140,42,129,40],[140,44,129,42],[140,49,129,47],[140,50,129,48],[140,51,129,49],[141,8,131,6,"_defineProperty"],[141,23,131,21],[141,24,131,22],[141,28,131,26],[141,30,131,28],[141,38,131,36],[141,40,131,38],[141,45,131,43],[141,46,131,44],[141,47,131,45],[142,8,133,6,"_defineProperty"],[142,23,133,21],[142,24,133,22],[142,28,133,26],[142,30,133,28],[142,40,133,38],[142,42,133,40],[142,47,133,45],[142,48,133,46],[142,49,133,47],[143,8,135,6,"_defineProperty"],[143,23,135,21],[143,24,135,22],[143,28,135,26],[143,30,135,28],[143,44,135,42],[143,46,135,44],[143,51,135,49],[143,52,135,50],[143,53,135,51],[144,8,137,6,"_defineProperty"],[144,23,137,21],[144,24,137,22],[144,28,137,26],[144,30,137,28],[144,40,137,38],[144,42,137,40],[144,47,137,45],[144,48,137,46],[144,49,137,47],[145,8,139,6,"_defineProperty"],[145,23,139,21],[145,24,139,22],[145,28,139,26],[145,30,139,28],[145,39,139,37],[145,41,139,39],[145,46,139,44],[145,47,139,45],[145,48,139,46],[146,8,141,6,"_defineProperty"],[146,23,141,21],[146,24,141,22],[146,28,141,26],[146,30,141,28],[146,55,141,53],[146,57,141,55],[146,62,141,60],[146,63,141,61],[146,64,141,62],[147,8,143,6,"_defineProperty"],[147,23,143,21],[147,24,143,22],[147,28,143,26],[147,30,143,28],[147,53,143,51],[147,55,143,53,"event"],[147,60,143,58],[147,64,143,62],[148,10,144,8],[148,14,144,12,"event"],[148,19,144,17],[148,20,144,18,"nativeEvent"],[148,31,144,29],[148,32,144,30,"handlerTag"],[148,42,144,40],[148,47,144,45],[148,51,144,49],[148,52,144,50,"handlerTag"],[148,62,144,60],[148,64,144,62],[149,12,145,10],[149,16,145,14],[149,23,145,21],[149,27,145,25],[149,28,145,26,"props"],[149,33,145,31],[149,34,145,32,"onGestureEvent"],[149,48,145,46],[149,53,145,51],[149,63,145,61],[149,65,145,63],[150,14,146,12],[150,18,146,16,"_this$props$onGesture"],[150,39,146,37],[150,41,146,39,"_this$props"],[150,52,146,50],[151,14,148,12],[151,15,148,13,"_this$props$onGesture"],[151,36,148,34],[151,39,148,37],[151,40,148,38,"_this$props"],[151,51,148,49],[151,54,148,52],[151,58,148,56],[151,59,148,57,"props"],[151,64,148,62],[151,66,148,64,"onGestureEvent"],[151,80,148,78],[151,86,148,84],[151,90,148,88],[151,94,148,92,"_this$props$onGesture"],[151,115,148,113],[151,120,148,118],[151,125,148,123],[151,126,148,124],[151,129,148,127],[151,134,148,132],[151,135,148,133],[151,138,148,136,"_this$props$onGesture"],[151,159,148,157],[151,160,148,158,"call"],[151,164,148,162],[151,165,148,163,"_this$props"],[151,176,148,174],[151,178,148,176,"event"],[151,183,148,181],[151,184,148,182],[152,12,149,10],[153,10,150,8],[153,11,150,9],[153,17,150,15],[154,12,151,10],[154,16,151,14,"_this$props$onGesture2"],[154,38,151,36],[154,40,151,38,"_this$props2"],[154,52,151,50],[155,12,153,10],[155,13,153,11,"_this$props$onGesture2"],[155,35,153,33],[155,38,153,36],[155,39,153,37,"_this$props2"],[155,51,153,49],[155,54,153,52],[155,58,153,56],[155,59,153,57,"props"],[155,64,153,62],[155,66,153,64,"onGestureHandlerEvent"],[155,87,153,85],[155,93,153,91],[155,97,153,95],[155,101,153,99,"_this$props$onGesture2"],[155,123,153,121],[155,128,153,126],[155,133,153,131],[155,134,153,132],[155,137,153,135],[155,142,153,140],[155,143,153,141],[155,146,153,144,"_this$props$onGesture2"],[155,168,153,166],[155,169,153,167,"call"],[155,173,153,171],[155,174,153,172,"_this$props2"],[155,186,153,184],[155,188,153,186,"event"],[155,193,153,191],[155,194,153,192],[156,10,154,8],[157,8,155,6],[157,9,155,7],[157,10,155,8],[158,8,157,6,"_defineProperty"],[158,23,157,21],[158,24,157,22],[158,28,157,26],[158,30,157,28],[158,59,157,57],[158,61,157,59,"event"],[158,66,157,64],[158,70,157,68],[159,10,158,8],[159,14,158,12,"event"],[159,19,158,17],[159,20,158,18,"nativeEvent"],[159,31,158,29],[159,32,158,30,"handlerTag"],[159,42,158,40],[159,47,158,45],[159,51,158,49],[159,52,158,50,"handlerTag"],[159,62,158,60],[159,64,158,62],[160,12,159,10],[160,16,159,14],[160,23,159,21],[160,27,159,25],[160,28,159,26,"props"],[160,33,159,31],[160,34,159,32,"onHandlerStateChange"],[160,54,159,52],[160,59,159,57],[160,69,159,67],[160,71,159,69],[161,14,160,12],[161,18,160,16,"_this$props$onHandler"],[161,39,160,37],[161,41,160,39,"_this$props3"],[161,53,160,51],[162,14,162,12],[162,15,162,13,"_this$props$onHandler"],[162,36,162,34],[162,39,162,37],[162,40,162,38,"_this$props3"],[162,52,162,50],[162,55,162,53],[162,59,162,57],[162,60,162,58,"props"],[162,65,162,63],[162,67,162,65,"onHandlerStateChange"],[162,87,162,85],[162,93,162,91],[162,97,162,95],[162,101,162,99,"_this$props$onHandler"],[162,122,162,120],[162,127,162,125],[162,132,162,130],[162,133,162,131],[162,136,162,134],[162,141,162,139],[162,142,162,140],[162,145,162,143,"_this$props$onHandler"],[162,166,162,164],[162,167,162,165,"call"],[162,171,162,169],[162,172,162,170,"_this$props3"],[162,184,162,182],[162,186,162,184,"event"],[162,191,162,189],[162,192,162,190],[163,12,163,10],[164,12,165,10],[164,18,165,16,"state"],[164,23,165,21],[164,26,165,24,"event"],[164,31,165,29],[164,32,165,30,"nativeEvent"],[164,43,165,41],[164,44,165,42,"state"],[164,49,165,47],[165,12,166,10],[165,18,166,16,"stateEventName"],[165,32,166,30],[165,35,166,33,"stateToPropMappings"],[165,54,166,52],[165,55,166,53,"state"],[165,60,166,58],[165,61,166,59],[166,12,167,10],[166,18,167,16,"eventHandler"],[166,30,167,28],[166,33,167,31,"stateEventName"],[166,47,167,45],[166,51,167,49],[166,55,167,53],[166,56,167,54,"props"],[166,61,167,59],[166,62,167,60,"stateEventName"],[166,76,167,74],[166,77,167,75],[167,12,169,10],[167,16,169,14,"eventHandler"],[167,28,169,26],[167,32,169,30],[167,39,169,37,"eventHandler"],[167,51,169,49],[167,56,169,54],[167,66,169,64],[167,68,169,66],[168,14,170,12,"eventHandler"],[168,26,170,24],[168,27,170,25,"event"],[168,32,170,30],[168,33,170,31],[169,12,171,10],[170,10,172,8],[170,11,172,9],[170,17,172,15],[171,12,173,10],[171,16,173,14,"_this$props$onGesture3"],[171,38,173,36],[171,40,173,38,"_this$props4"],[171,52,173,50],[172,12,175,10],[172,13,175,11,"_this$props$onGesture3"],[172,35,175,33],[172,38,175,36],[172,39,175,37,"_this$props4"],[172,51,175,49],[172,54,175,52],[172,58,175,56],[172,59,175,57,"props"],[172,64,175,62],[172,66,175,64,"onGestureHandlerStateChange"],[172,93,175,91],[172,99,175,97],[172,103,175,101],[172,107,175,105,"_this$props$onGesture3"],[172,129,175,127],[172,134,175,132],[172,139,175,137],[172,140,175,138],[172,143,175,141],[172,148,175,146],[172,149,175,147],[172,152,175,150,"_this$props$onGesture3"],[172,174,175,172],[172,175,175,173,"call"],[172,179,175,177],[172,180,175,178,"_this$props4"],[172,192,175,190],[172,194,175,192,"event"],[172,199,175,197],[172,200,175,198],[173,10,176,8],[174,8,177,6],[174,9,177,7],[174,10,177,8],[175,8,179,6,"_defineProperty"],[175,23,179,21],[175,24,179,22],[175,28,179,26],[175,30,179,28],[175,42,179,40],[175,44,179,42,"node"],[175,48,179,46],[175,52,179,50],[176,10,180,8],[176,14,180,12,"_props"],[176,20,180,18],[177,10,182,8],[177,14,182,12],[177,15,182,13,"viewNode"],[177,23,182,21],[177,26,182,24,"node"],[177,30,182,28],[178,10,183,8],[178,16,183,14,"child"],[178,21,183,19],[178,24,183,22,"React"],[178,29,183,27],[178,30,183,28,"Children"],[178,38,183,36],[178,39,183,37,"only"],[178,43,183,41],[178,44,183,42],[178,48,183,46],[178,49,183,47,"props"],[178,54,183,52],[178,55,183,53,"children"],[178,63,183,61],[178,64,183,62],[178,65,183,63],[178,66,183,64],[179,10,184,8],[181,10,186,8],[181,16,186,14,"ref"],[181,19,186,17],[181,22,186,20],[181,26,186,20,"isReact19"],[181,43,186,29],[181,45,186,30],[181,46,186,31],[181,49,186,34],[181,50,186,35,"_props"],[181,56,186,41],[181,59,186,44,"child"],[181,64,186,49],[181,65,186,50,"props"],[181,70,186,55],[181,76,186,61],[181,80,186,65],[181,84,186,69,"_props"],[181,90,186,75],[181,95,186,80],[181,100,186,85],[181,101,186,86],[181,104,186,89],[181,109,186,94],[181,110,186,95],[181,113,186,98,"_props"],[181,119,186,104],[181,120,186,105,"ref"],[181,123,186,108],[181,126,186,111,"child"],[181,131,186,116],[181,136,186,121],[181,140,186,125],[181,144,186,129,"child"],[181,149,186,134],[181,154,186,139],[181,159,186,144],[181,160,186,145],[181,163,186,148],[181,168,186,153],[181,169,186,154],[181,172,186,157,"child"],[181,177,186,162],[181,178,186,163,"ref"],[181,181,186,166],[182,10,188,8],[182,14,188,12],[182,15,188,13,"ref"],[182,18,188,16],[182,20,188,18],[183,12,189,10],[184,10,190,8],[185,10,192,8],[185,14,192,12],[185,21,192,19,"ref"],[185,24,192,22],[185,29,192,27],[185,39,192,37],[185,41,192,39],[186,12,193,10,"ref"],[186,15,193,13],[186,16,193,14,"node"],[186,20,193,18],[186,21,193,19],[187,10,194,8],[187,11,194,9],[187,17,194,15],[188,12,195,10,"ref"],[188,15,195,13],[188,16,195,14,"current"],[188,23,195,21],[188,26,195,24,"node"],[188,30,195,28],[189,10,196,8],[190,8,197,6],[190,9,197,7],[190,10,197,8],[191,8,199,6,"_defineProperty"],[191,23,199,21],[191,24,199,22],[191,28,199,26],[191,30,199,28],[191,52,199,50],[191,54,199,52,"newConfig"],[191,63,199,61],[191,67,199,65],[192,10,200,8],[192,14,200,12],[192,15,200,13,"config"],[192,21,200,19],[192,24,200,22,"newConfig"],[192,33,200,31],[193,10,201,8,"RNGestureHandlerModule"],[193,41,201,30],[193,42,201,31,"createGestureHandler"],[193,62,201,51],[193,63,201,52,"name"],[193,67,201,56],[193,69,201,58],[193,73,201,62],[193,74,201,63,"handlerTag"],[193,84,201,73],[193,86,201,75,"newConfig"],[193,95,201,84],[193,96,201,85],[194,8,202,6],[194,9,202,7],[194,10,202,8],[195,8,204,6,"_defineProperty"],[195,23,204,21],[195,24,204,22],[195,28,204,26],[195,30,204,28],[195,52,204,50],[195,54,204,52,"newViewTag"],[195,64,204,62],[195,68,204,66],[196,10,205,8],[196,14,205,12],[196,15,205,13,"viewTag"],[196,22,205,20],[196,25,205,23,"newViewTag"],[196,35,205,33],[197,10,207,8],[197,14,207,12,"Platform"],[197,31,207,20],[197,32,207,21,"OS"],[197,34,207,23],[197,39,207,28],[197,44,207,33],[197,46,207,35],[198,12,208,10],[199,12,209,10,"RNGestureHandlerModule"],[199,43,209,32],[199,44,209,33,"attachGestureHandler"],[199,64,209,53],[199,65,209,54],[199,69,209,58],[199,70,209,59,"handlerTag"],[199,80,209,69],[199,82,209,71,"newViewTag"],[199,92,209,81],[199,94,209,83,"ActionType"],[199,116,209,93],[199,117,209,94,"JS_FUNCTION_OLD_API"],[199,136,209,113],[200,12,209,115],[201,12,210,10],[201,16,210,14],[201,17,210,15,"propsRef"],[201,25,210,23],[201,26,210,24],[202,10,211,8],[202,11,211,9],[202,17,211,15],[203,12,212,10],[203,16,212,10,"registerOldGestureHandler"],[203,59,212,35],[203,61,212,36],[203,65,212,40],[203,66,212,41,"handlerTag"],[203,76,212,51],[203,78,212,53],[204,14,213,12,"onGestureEvent"],[204,28,213,26],[204,30,213,28],[204,34,213,32],[204,35,213,33,"onGestureHandlerEvent"],[204,56,213,54],[205,14,214,12,"onGestureStateChange"],[205,34,214,32],[205,36,214,34],[205,40,214,38],[205,41,214,39,"onGestureHandlerStateChange"],[206,12,215,10],[206,13,215,11],[206,14,215,12],[207,12,217,10],[207,18,217,16,"actionType"],[207,28,217,26],[207,31,217,29],[207,32,217,30],[207,38,217,36],[208,14,218,12],[208,18,218,16,"_this$props5"],[208,30,218,28],[208,32,218,30,"_this$props6"],[208,44,218,42],[209,14,220,12],[209,20,220,18,"onGestureEvent"],[209,34,220,32],[209,37,220,35],[209,38,220,36,"_this$props5"],[209,50,220,48],[209,53,220,51],[209,57,220,55],[209,58,220,56,"props"],[209,63,220,61],[209,69,220,67],[209,73,220,71],[209,77,220,75,"_this$props5"],[209,89,220,87],[209,94,220,92],[209,99,220,97],[209,100,220,98],[209,103,220,101],[209,108,220,106],[209,109,220,107],[209,112,220,110,"_this$props5"],[209,124,220,122],[209,125,220,123,"onGestureEvent"],[209,139,220,137],[210,14,221,12],[210,20,221,18,"isGestureHandlerWorklet"],[210,43,221,41],[210,46,221,44,"onGestureEvent"],[210,60,221,58],[210,65,221,63],[210,74,221,72],[210,78,221,76,"onGestureEvent"],[210,92,221,90],[210,96,221,94],[210,117,221,115],[210,121,221,119,"onGestureEvent"],[210,135,221,133],[210,136,221,134],[211,14,222,12],[211,20,222,18,"onHandlerStateChange"],[211,40,222,38],[211,43,222,41],[211,44,222,42,"_this$props6"],[211,56,222,54],[211,59,222,57],[211,63,222,61],[211,64,222,62,"props"],[211,69,222,67],[211,75,222,73],[211,79,222,77],[211,83,222,81,"_this$props6"],[211,95,222,93],[211,100,222,98],[211,105,222,103],[211,106,222,104],[211,109,222,107],[211,114,222,112],[211,115,222,113],[211,118,222,116,"_this$props6"],[211,130,222,128],[211,131,222,129,"onHandlerStateChange"],[211,151,222,149],[212,14,223,12],[212,20,223,18,"isStateChangeHandlerWorklet"],[212,47,223,45],[212,50,223,48,"onHandlerStateChange"],[212,70,223,68],[212,75,223,73],[212,84,223,82],[212,88,223,86,"onHandlerStateChange"],[212,108,223,106],[212,112,223,110],[212,133,223,131],[212,137,223,135,"onHandlerStateChange"],[212,157,223,155],[212,158,223,156],[213,14,224,12],[213,20,224,18,"isReanimatedHandler"],[213,39,224,37],[213,42,224,40,"isGestureHandlerWorklet"],[213,65,224,63],[213,69,224,67,"isStateChangeHandlerWorklet"],[213,96,224,94],[214,14,226,12],[214,18,226,16,"isReanimatedHandler"],[214,37,226,35],[214,39,226,37],[215,16,227,14],[216,16,228,14],[216,23,228,21,"ActionType"],[216,45,228,31],[216,46,228,32,"REANIMATED_WORKLET"],[216,64,228,50],[217,14,229,12],[217,15,229,13],[217,21,229,19],[217,25,229,23,"onGestureEvent"],[217,39,229,37],[217,43,229,41],[217,55,229,53],[217,59,229,57,"onGestureEvent"],[217,73,229,71],[217,75,229,73],[218,16,230,14],[219,16,231,14],[219,23,231,21,"ActionType"],[219,45,231,31],[219,46,231,32,"NATIVE_ANIMATED_EVENT"],[219,67,231,53],[220,14,232,12],[220,15,232,13],[220,21,232,19],[221,16,233,14],[222,16,234,14],[222,23,234,21,"ActionType"],[222,45,234,31],[222,46,234,32,"JS_FUNCTION_OLD_API"],[222,65,234,51],[223,14,235,12],[224,12,236,10],[224,13,236,11],[224,15,236,13],[224,16,236,14],[225,12,238,10,"RNGestureHandlerModule"],[225,43,238,32],[225,44,238,33,"attachGestureHandler"],[225,64,238,53],[225,65,238,54],[225,69,238,58],[225,70,238,59,"handlerTag"],[225,80,238,69],[225,82,238,71,"newViewTag"],[225,92,238,81],[225,94,238,83,"actionType"],[225,104,238,93],[225,105,238,94],[226,10,239,8],[227,10,241,8],[227,14,241,8,"scheduleFlushOperations"],[227,44,241,31],[227,46,241,32],[227,47,241,33],[228,10,242,8],[228,14,242,8,"ghQueueMicrotask"],[228,48,242,24],[228,50,242,25],[228,56,242,31],[229,12,243,10,"MountRegistry"],[229,40,243,23],[229,41,243,24,"gestureHandlerWillMount"],[229,64,243,47],[229,65,243,48],[229,69,243,52],[229,70,243,53],[230,10,244,8],[230,11,244,9],[230,12,244,10],[231,8,245,6],[231,9,245,7],[231,10,245,8],[232,8,247,6,"_defineProperty"],[232,23,247,21],[232,24,247,22],[232,28,247,26],[232,30,247,28],[232,52,247,50],[232,54,247,52,"newConfig"],[232,63,247,61],[232,67,247,65],[233,10,248,8],[233,14,248,12],[233,15,248,13,"config"],[233,21,248,19],[233,24,248,22,"newConfig"],[233,33,248,31],[234,10,249,8,"RNGestureHandlerModule"],[234,41,249,30],[234,42,249,31,"updateGestureHandler"],[234,62,249,51],[234,63,249,52],[234,67,249,56],[234,68,249,57,"handlerTag"],[234,78,249,67],[234,80,249,69,"newConfig"],[234,89,249,78],[234,90,249,79],[235,10,250,8],[235,14,250,8,"scheduleFlushOperations"],[235,44,250,31],[235,46,250,32],[235,47,250,33],[236,8,251,6],[236,9,251,7],[236,10,251,8],[237,8,253,6],[237,12,253,10],[237,13,253,11,"handlerTag"],[237,23,253,21],[237,26,253,24],[237,30,253,24,"getNextHandlerTag"],[237,66,253,41],[237,68,253,42],[237,69,253,43],[238,8,254,6],[238,12,254,10],[238,13,254,11,"config"],[238,19,254,17],[238,22,254,20],[238,23,254,21],[238,24,254,22],[239,8,255,6],[239,12,255,10],[239,13,255,11,"propsRef"],[239,21,255,19],[239,24,255,22],[239,37,255,35,"React"],[239,42,255,40],[239,43,255,41,"createRef"],[239,52,255,50],[239,53,255,51],[239,54,255,52],[240,8,256,6],[240,12,256,10],[240,13,256,11,"isMountedRef"],[240,25,256,23],[240,28,256,26],[240,41,256,39,"React"],[240,46,256,44],[240,47,256,45,"createRef"],[240,56,256,54],[240,57,256,55],[240,58,256,56],[241,8,257,6],[241,12,257,10],[241,13,257,11,"state"],[241,18,257,16],[241,21,257,19],[242,10,258,8,"allowTouches"],[243,8,259,6],[243,9,259,7],[244,8,261,6],[244,12,261,10,"props"],[244,17,261,15],[244,18,261,16,"id"],[244,20,261,18],[244,22,261,20],[245,10,262,8],[245,14,262,12,"handlerIDToTag"],[245,46,262,26],[245,47,262,27,"props"],[245,52,262,32],[245,53,262,33,"id"],[245,55,262,35],[245,56,262,36],[245,61,262,41,"undefined"],[245,70,262,50],[245,72,262,52],[246,12,263,10],[246,18,263,16],[246,22,263,20,"Error"],[246,27,263,25],[246,28,263,26],[246,48,263,46,"props"],[246,53,263,51],[246,54,263,52,"id"],[246,56,263,54],[246,78,263,76],[246,79,263,77],[247,10,264,8],[248,10,266,8,"handlerIDToTag"],[248,42,266,22],[248,43,266,23,"props"],[248,48,266,28],[248,49,266,29,"id"],[248,51,266,31],[248,52,266,32],[248,55,266,35],[248,59,266,39],[248,60,266,40,"handlerTag"],[248,70,266,50],[249,8,267,6],[250,6,268,4],[251,6,270,4,"componentDidMount"],[251,23,270,21,"componentDidMount"],[251,24,270,21],[251,26,270,24],[252,8,271,6],[252,14,271,12,"props"],[252,19,271,17],[252,22,271,20],[252,26,271,24],[252,27,271,25,"props"],[252,32,271,30],[253,8,272,6],[253,12,272,10],[253,13,272,11,"isMountedRef"],[253,25,272,23],[253,26,272,24,"current"],[253,33,272,31],[253,36,272,34],[253,40,272,38],[254,8,274,6],[254,12,274,10,"DEV_ON_ANDROID"],[254,26,274,24],[254,28,274,26],[255,10,275,8],[255,14,275,12],[255,15,275,13,"inspectorToggleListener"],[255,38,275,36],[255,41,275,39,"DeviceEventEmitter"],[255,68,275,57],[255,69,275,58,"addListener"],[255,80,275,69],[255,81,275,70],[255,105,275,94],[255,107,275,96],[255,113,275,102],[256,12,276,10],[256,16,276,14],[256,17,276,15,"setState"],[256,25,276,23],[256,26,276,24,"_"],[256,27,276,25],[256,32,276,30],[257,14,277,12,"allowTouches"],[258,12,278,10],[258,13,278,11],[258,14,278,12],[258,15,278,13],[259,12,279,10],[259,16,279,14],[259,17,279,15,"update"],[259,23,279,21],[259,24,279,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[259,51,279,49],[259,52,279,50],[260,10,280,8],[260,11,280,9],[260,12,280,10],[261,8,281,6],[262,8,283,6],[262,12,283,10,"hasUnresolvedRefs"],[262,29,283,27],[262,30,283,28,"props"],[262,35,283,33],[262,36,283,34],[262,38,283,36],[263,10,284,8],[264,10,285,8],[265,10,286,8],[266,10,287,8],[267,10,288,8],[268,10,289,8],[269,10,290,8],[269,14,290,8,"ghQueueMicrotask"],[269,48,290,24],[269,50,290,25],[269,56,290,31],[270,12,291,10],[270,16,291,14],[270,17,291,15,"update"],[270,23,291,21],[270,24,291,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[270,51,291,49],[270,52,291,50],[271,10,292,8],[271,11,292,9],[271,12,292,10],[272,8,293,6],[273,8,295,6],[273,12,295,10],[273,13,295,11,"createGestureHandler"],[273,33,295,31],[273,34,295,32],[273,38,295,32,"filterConfig"],[273,57,295,44],[273,59,295,45,"transformProps"],[273,73,295,59],[273,76,295,62,"transformProps"],[273,90,295,76],[273,91,295,77],[273,95,295,81],[273,96,295,82,"props"],[273,101,295,87],[273,102,295,88],[273,105,295,91],[273,109,295,95],[273,110,295,96,"props"],[273,115,295,101],[273,117,295,103],[273,118,295,104],[273,121,295,107,"allowedProps"],[273,133,295,119],[273,135,295,121],[273,138,295,124,"customNativeProps"],[273,155,295,141],[273,156,295,142],[273,158,295,144,"config"],[273,164,295,150],[273,165,295,151],[273,166,295,152],[274,8,297,6],[274,12,297,10],[274,13,297,11],[274,17,297,15],[274,18,297,16,"viewNode"],[274,26,297,24],[274,28,297,26],[275,10,298,8],[275,16,298,14],[275,20,298,18,"Error"],[275,25,298,23],[275,26,298,24],[275,73,298,71,"Handler"],[275,80,298,78],[275,81,298,79,"displayName"],[275,92,298,90],[275,152,298,150],[275,153,298,151],[276,8,299,6],[277,8,301,6],[277,12,301,10],[277,13,301,11,"attachGestureHandler"],[277,33,301,31],[277,34,301,32],[277,38,301,32,"findNodeHandle"],[277,61,301,46],[277,63,301,47],[277,67,301,51],[277,68,301,52,"viewNode"],[277,76,301,60],[277,77,301,61],[277,78,301,62],[277,79,301,63],[277,80,301,64],[278,6,302,4],[279,6,304,4,"componentDidUpdate"],[279,24,304,22,"componentDidUpdate"],[279,25,304,22],[279,27,304,25],[280,8,305,6],[280,14,305,12,"viewTag"],[280,21,305,19],[280,24,305,22],[280,28,305,22,"findNodeHandle"],[280,51,305,36],[280,53,305,37],[280,57,305,41],[280,58,305,42,"viewNode"],[280,66,305,50],[280,67,305,51],[281,8,307,6],[281,12,307,10],[281,16,307,14],[281,17,307,15,"viewTag"],[281,24,307,22],[281,29,307,27,"viewTag"],[281,36,307,34],[281,38,307,36],[282,10,308,8],[282,14,308,12],[282,15,308,13,"attachGestureHandler"],[282,35,308,33],[282,36,308,34,"viewTag"],[282,43,308,41],[282,44,308,42],[282,45,308,43],[282,46,308,44],[283,8,309,6],[284,8,311,6],[284,12,311,10],[284,13,311,11,"update"],[284,19,311,17],[284,20,311,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[284,47,311,45],[284,48,311,46],[285,6,312,4],[286,6,314,4,"componentWillUnmount"],[286,26,314,24,"componentWillUnmount"],[286,27,314,24],[286,29,314,27],[287,8,315,6],[287,12,315,10,"_this$inspectorToggle"],[287,33,315,31],[288,8,317,6],[288,9,317,7,"_this$inspectorToggle"],[288,30,317,28],[288,33,317,31],[288,37,317,35],[288,38,317,36,"inspectorToggleListener"],[288,61,317,59],[288,67,317,65],[288,71,317,69],[288,75,317,73,"_this$inspectorToggle"],[288,96,317,94],[288,101,317,99],[288,106,317,104],[288,107,317,105],[288,110,317,108],[288,115,317,113],[288,116,317,114],[288,119,317,117,"_this$inspectorToggle"],[288,140,317,138],[288,141,317,139,"remove"],[288,147,317,145],[288,148,317,146],[288,149,317,147],[289,8,318,6],[289,12,318,10],[289,13,318,11,"isMountedRef"],[289,25,318,23],[289,26,318,24,"current"],[289,33,318,31],[289,36,318,34],[289,41,318,39],[290,8,320,6],[290,12,320,10,"Platform"],[290,29,320,18],[290,30,320,19,"OS"],[290,32,320,21],[290,37,320,26],[290,42,320,31],[290,44,320,33],[291,10,321,8],[291,14,321,8,"unregisterOldGestureHandler"],[291,59,321,35],[291,61,321,36],[291,65,321,40],[291,66,321,41,"handlerTag"],[291,76,321,51],[291,77,321,52],[292,8,322,6],[293,8,324,6,"RNGestureHandlerModule"],[293,39,324,28],[293,40,324,29,"dropGestureHandler"],[293,58,324,47],[293,59,324,48],[293,63,324,52],[293,64,324,53,"handlerTag"],[293,74,324,63],[293,75,324,64],[294,8,325,6],[294,12,325,6,"scheduleFlushOperations"],[294,42,325,29],[294,44,325,30],[294,45,325,31],[294,46,325,32],[294,47,325,33],[296,8,327,6],[296,14,327,12,"handlerID"],[296,23,327,21],[296,26,327,24],[296,30,327,28],[296,31,327,29,"props"],[296,36,327,34],[296,37,327,35,"id"],[296,39,327,37],[297,8,329,6],[297,12,329,10,"handlerID"],[297,21,329,19],[297,23,329,21],[298,10,330,8],[299,10,331,8],[299,17,331,15,"handlerIDToTag"],[299,49,331,29],[299,50,331,30,"handlerID"],[299,59,331,39],[299,60,331,40],[300,8,332,6],[301,8,334,6,"MountRegistry"],[301,36,334,19],[301,37,334,20,"gestureHandlerWillUnmount"],[301,62,334,45],[301,63,334,46],[301,67,334,50],[301,68,334,51],[302,6,335,4],[303,6,337,4,"update"],[303,12,337,10,"update"],[303,13,337,11,"remainingTries"],[303,27,337,25],[303,29,337,27],[304,8,338,6],[304,12,338,10],[304,13,338,11],[304,17,338,15],[304,18,338,16,"isMountedRef"],[304,30,338,28],[304,31,338,29,"current"],[304,38,338,36],[304,40,338,38],[305,10,339,8],[306,8,340,6],[307,8,342,6],[307,14,342,12,"props"],[307,19,342,17],[307,22,342,20],[307,26,342,24],[307,27,342,25,"props"],[307,32,342,30],[307,33,342,31],[307,34,342,32],[308,8,343,6],[309,8,344,6],[311,8,346,6],[311,12,346,10,"hasUnresolvedRefs"],[311,29,346,27],[311,30,346,28,"props"],[311,35,346,33],[311,36,346,34],[311,40,346,38,"remainingTries"],[311,54,346,52],[311,57,346,55],[311,58,346,56],[311,60,346,58],[312,10,347,8],[312,14,347,8,"ghQueueMicrotask"],[312,48,347,24],[312,50,347,25],[312,56,347,31],[313,12,348,10],[313,16,348,14],[313,17,348,15,"update"],[313,23,348,21],[313,24,348,22,"remainingTries"],[313,38,348,36],[313,41,348,39],[313,42,348,40],[313,43,348,41],[314,10,349,8],[314,11,349,9],[314,12,349,10],[315,8,350,6],[315,9,350,7],[315,15,350,13],[316,10,351,8],[316,16,351,14,"newConfig"],[316,25,351,23],[316,28,351,26],[316,32,351,26,"filterConfig"],[316,51,351,38],[316,53,351,39,"transformProps"],[316,67,351,53],[316,70,351,56,"transformProps"],[316,84,351,70],[316,85,351,71],[316,89,351,75],[316,90,351,76,"props"],[316,95,351,81],[316,96,351,82],[316,99,351,85],[316,103,351,89],[316,104,351,90,"props"],[316,109,351,95],[316,111,351,97],[316,112,351,98],[316,115,351,101,"allowedProps"],[316,127,351,113],[316,129,351,115],[316,132,351,118,"customNativeProps"],[316,149,351,135],[316,150,351,136],[316,152,351,138,"config"],[316,158,351,144],[316,159,351,145],[317,10,353,8],[317,14,353,12],[317,15,353,13],[317,19,353,13,"deepEqual"],[317,36,353,22],[317,38,353,23],[317,42,353,27],[317,43,353,28,"config"],[317,49,353,34],[317,51,353,36,"newConfig"],[317,60,353,45],[317,61,353,46],[317,63,353,48],[318,12,354,10],[318,16,354,14],[318,17,354,15,"updateGestureHandler"],[318,37,354,35],[318,38,354,36,"newConfig"],[318,47,354,45],[318,48,354,46],[319,10,355,8],[320,8,356,6],[321,6,357,4],[322,6,359,4,"setNativeProps"],[322,20,359,18,"setNativeProps"],[322,21,359,19,"updates"],[322,28,359,26],[322,30,359,28],[323,8,360,6],[323,14,360,12,"mergedProps"],[323,25,360,23],[323,28,360,26],[324,10,360,28],[324,13,360,31],[324,17,360,35],[324,18,360,36,"props"],[324,23,360,41],[325,10,361,8],[325,13,361,11,"updates"],[326,8,362,6],[326,9,362,7],[327,8,363,6],[327,14,363,12,"newConfig"],[327,23,363,21],[327,26,363,24],[327,30,363,24,"filterConfig"],[327,49,363,36],[327,51,363,37,"transformProps"],[327,65,363,51],[327,68,363,54,"transformProps"],[327,82,363,68],[327,83,363,69,"mergedProps"],[327,94,363,80],[327,95,363,81],[327,98,363,84,"mergedProps"],[327,109,363,95],[327,111,363,97],[327,112,363,98],[327,115,363,101,"allowedProps"],[327,127,363,113],[327,129,363,115],[327,132,363,118,"customNativeProps"],[327,149,363,135],[327,150,363,136],[327,152,363,138,"config"],[327,158,363,144],[327,159,363,145],[328,8,364,6],[328,12,364,10],[328,13,364,11,"updateGestureHandler"],[328,33,364,31],[328,34,364,32,"newConfig"],[328,43,364,41],[328,44,364,42],[329,6,365,4],[330,6,367,4,"render"],[330,12,367,10,"render"],[330,13,367,10],[330,15,367,13],[331,8,368,6],[331,12,368,10,"_this$props$testID"],[331,30,368,28],[332,8,370,6],[332,12,370,10,"__DEV__"],[332,19,370,17],[332,23,370,21],[332,24,370,22],[332,28,370,26],[332,29,370,27,"context"],[332,36,370,34],[332,40,370,38],[332,41,370,39],[332,45,370,39,"isTestEnv"],[332,62,370,48],[332,64,370,49],[332,65,370,50],[332,69,370,54,"Platform"],[332,86,370,62],[332,87,370,63,"OS"],[332,89,370,65],[332,94,370,70],[332,99,370,75],[332,101,370,77],[333,10,371,8],[333,16,371,14],[333,20,371,18,"Error"],[333,25,371,23],[333,26,371,24,"name"],[333,30,371,28],[333,33,371,31],[333,234,371,232],[333,235,371,233],[334,8,372,6],[335,8,374,6],[335,12,374,10,"gestureEventHandler"],[335,31,374,29],[335,34,374,32],[335,38,374,36],[335,39,374,37,"onGestureHandlerEvent"],[335,60,374,58],[335,61,374,59],[335,62,374,60],[337,8,376,6],[337,14,376,12],[338,10,377,8,"onGestureEvent"],[338,24,377,22],[339,10,378,8,"onGestureHandlerEvent"],[340,8,379,6],[340,9,379,7],[340,12,379,10],[340,16,379,14],[340,17,379,15,"props"],[340,22,379,20],[341,8,381,6],[341,12,381,10,"onGestureEvent"],[341,26,381,24],[341,30,381,28],[341,37,381,35,"onGestureEvent"],[341,51,381,49],[341,56,381,54],[341,66,381,64],[341,68,381,66],[342,10,382,8],[343,10,383,8],[344,10,384,8],[345,10,385,8],[345,14,385,12,"onGestureHandlerEvent"],[345,35,385,33],[345,37,385,35],[346,12,386,10],[346,18,386,16],[346,22,386,20,"Error"],[346,27,386,25],[346,28,386,26],[346,101,386,99],[346,102,386,100],[347,10,387,8],[348,10,389,8,"gestureEventHandler"],[348,29,389,27],[348,32,389,30,"onGestureEvent"],[348,46,389,44],[349,8,390,6],[349,9,390,7],[349,15,390,13],[350,10,391,8],[350,14,391,12,"onGestureHandlerEvent"],[350,35,391,33],[350,39,391,37],[350,46,391,44,"onGestureHandlerEvent"],[350,67,391,65],[350,72,391,70],[350,82,391,80],[350,84,391,82],[351,12,392,10],[351,18,392,16],[351,22,392,20,"Error"],[351,27,392,25],[351,28,392,26],[351,101,392,99],[351,102,392,100],[352,10,393,8],[353,8,394,6],[354,8,396,6],[354,12,396,10,"gestureStateEventHandler"],[354,36,396,34],[354,39,396,37],[354,43,396,41],[354,44,396,42,"onGestureHandlerStateChange"],[354,71,396,69],[354,72,396,70],[354,73,396,71],[356,8,398,6],[356,14,398,12],[357,10,399,8,"onHandlerStateChange"],[357,30,399,28],[358,10,400,8,"onGestureHandlerStateChange"],[359,8,401,6],[359,9,401,7],[359,12,401,10],[359,16,401,14],[359,17,401,15,"props"],[359,22,401,20],[360,8,403,6],[360,12,403,10,"onHandlerStateChange"],[360,32,403,30],[360,36,403,34],[360,43,403,41,"onHandlerStateChange"],[360,63,403,61],[360,68,403,66],[360,78,403,76],[360,80,403,78],[361,10,404,8],[362,10,405,8],[363,10,406,8],[364,10,407,8],[364,14,407,12,"onGestureHandlerStateChange"],[364,41,407,39],[364,43,407,41],[365,12,408,10],[365,18,408,16],[365,22,408,20,"Error"],[365,27,408,25],[365,28,408,26],[365,101,408,99],[365,102,408,100],[366,10,409,8],[367,10,411,8,"gestureStateEventHandler"],[367,34,411,32],[367,37,411,35,"onHandlerStateChange"],[367,57,411,55],[368,8,412,6],[368,9,412,7],[368,15,412,13],[369,10,413,8],[369,14,413,12,"onGestureHandlerStateChange"],[369,41,413,39],[369,45,413,43],[369,52,413,50,"onGestureHandlerStateChange"],[369,79,413,77],[369,84,413,82],[369,94,413,92],[369,96,413,94],[370,12,414,10],[370,18,414,16],[370,22,414,20,"Error"],[370,27,414,25],[370,28,414,26],[370,101,414,99],[370,102,414,100],[371,10,415,8],[372,8,416,6],[373,8,418,6],[373,14,418,12,"events"],[373,20,418,18],[373,23,418,21],[374,10,419,8,"onGestureHandlerEvent"],[374,31,419,29],[374,33,419,31],[374,37,419,35],[374,38,419,36,"state"],[374,43,419,41],[374,44,419,42,"allowTouches"],[374,56,419,54],[374,59,419,57,"gestureEventHandler"],[374,78,419,76],[374,81,419,79,"undefined"],[374,90,419,88],[375,10,420,8,"onGestureHandlerStateChange"],[375,37,420,35],[375,39,420,37],[375,43,420,41],[375,44,420,42,"state"],[375,49,420,47],[375,50,420,48,"allowTouches"],[375,62,420,60],[375,65,420,63,"gestureStateEventHandler"],[375,89,420,87],[375,92,420,90,"undefined"],[376,8,421,6],[376,9,421,7],[377,8,422,6],[377,12,422,10],[377,13,422,11,"propsRef"],[377,21,422,19],[377,22,422,20,"current"],[377,29,422,27],[377,32,422,30,"events"],[377,38,422,36],[378,8,423,6],[378,12,423,10,"child"],[378,17,423,15],[378,20,423,18],[378,24,423,22],[379,8,425,6],[379,12,425,10],[380,10,426,8,"child"],[380,15,426,13],[380,18,426,16,"React"],[380,23,426,21],[380,24,426,22,"Children"],[380,32,426,30],[380,33,426,31,"only"],[380,37,426,35],[380,38,426,36],[380,42,426,40],[380,43,426,41,"props"],[380,48,426,46],[380,49,426,47,"children"],[380,57,426,55],[380,58,426,56],[381,8,427,6],[381,9,427,7],[381,10,427,8],[381,17,427,15,"e"],[381,18,427,16],[381,20,427,18],[382,10,428,8],[382,16,428,14],[382,20,428,18,"Error"],[382,25,428,23],[382,26,428,24],[382,30,428,24,"tagMessage"],[382,48,428,34],[382,50,428,35],[382,53,428,38,"name"],[382,57,428,42],[382,213,428,198],[382,214,428,199],[382,215,428,200],[383,8,429,6],[384,8,431,6],[384,12,431,10,"grandChildren"],[384,25,431,23],[384,28,431,26,"child"],[384,33,431,31],[384,34,431,32,"props"],[384,39,431,37],[384,40,431,38,"children"],[384,48,431,46],[385,8,433,6],[385,12,433,10,"__DEV__"],[385,19,433,17],[385,23,433,21,"child"],[385,28,433,26],[385,29,433,27,"type"],[385,33,433,31],[385,38,433,36,"child"],[385,43,433,41],[385,44,433,42,"type"],[385,48,433,46],[385,53,433,51],[385,77,433,75],[385,81,433,79,"child"],[385,86,433,84],[385,87,433,85,"type"],[385,91,433,89],[385,92,433,90,"name"],[385,96,433,94],[385,101,433,99],[385,107,433,105],[385,111,433,109,"child"],[385,116,433,114],[385,117,433,115,"type"],[385,121,433,119],[385,122,433,120,"displayName"],[385,133,433,131],[385,138,433,136],[385,144,433,142],[385,145,433,143],[385,147,433,145],[386,10,434,8,"grandChildren"],[386,23,434,21],[386,26,434,24,"React"],[386,31,434,29],[386,32,434,30,"Children"],[386,40,434,38],[386,41,434,39,"toArray"],[386,48,434,46],[386,49,434,47,"grandChildren"],[386,62,434,60],[386,63,434,61],[387,10,435,8,"grandChildren"],[387,23,435,21],[387,24,435,22,"push"],[387,28,435,26],[387,29,435,28],[387,42,435,41,"React"],[387,47,435,46],[387,48,435,47,"createElement"],[387,61,435,60],[387,62,435,61,"PressabilityDebugView"],[387,106,435,82],[387,108,435,84],[388,12,436,10,"key"],[388,15,436,13],[388,17,436,15],[388,40,436,38],[389,12,437,10,"color"],[389,17,437,15],[389,19,437,17],[389,38,437,36],[390,12,438,10,"hitSlop"],[390,19,438,17],[390,21,438,19,"child"],[390,26,438,24],[390,27,438,25,"props"],[390,32,438,30],[390,33,438,31,"hitSlop"],[391,10,439,8],[391,11,439,9],[391,12,439,10],[391,13,439,11],[392,8,440,6],[393,8,442,6],[393,15,442,13],[393,28,442,26,"React"],[393,33,442,31],[393,34,442,32,"cloneElement"],[393,46,442,44],[393,47,442,45,"child"],[393,52,442,50],[393,54,442,52],[394,10,443,8,"ref"],[394,13,443,11],[394,15,443,13],[394,19,443,17],[394,20,443,18,"refHandler"],[394,30,443,28],[395,10,444,8,"collapsable"],[395,21,444,19],[395,23,444,21],[395,28,444,26],[396,10,445,8],[396,14,445,12],[396,18,445,12,"isTestEnv"],[396,35,445,21],[396,37,445,22],[396,38,445,23],[396,41,445,26],[397,12,446,10,"handlerType"],[397,23,446,21],[397,25,446,23,"name"],[397,29,446,27],[398,12,447,10,"handlerTag"],[398,22,447,20],[398,24,447,22],[398,28,447,26],[398,29,447,27,"handlerTag"],[398,39,447,37],[399,12,448,10,"enabled"],[399,19,448,17],[399,21,448,19],[399,25,448,23],[399,26,448,24,"props"],[399,31,448,29],[399,32,448,30,"enabled"],[400,10,449,8],[400,11,449,9],[400,14,449,12],[400,15,449,13],[400,16,449,14],[400,17,449,15],[401,10,450,8,"testID"],[401,16,450,14],[401,18,450,16],[401,19,450,17,"_this$props$testID"],[401,37,450,35],[401,40,450,38],[401,44,450,42],[401,45,450,43,"props"],[401,50,450,48],[401,51,450,49,"testID"],[401,57,450,55],[401,63,450,61],[401,67,450,65],[401,71,450,69,"_this$props$testID"],[401,89,450,87],[401,94,450,92],[401,99,450,97],[401,100,450,98],[401,103,450,101,"_this$props$testID"],[401,121,450,119],[401,124,450,122,"child"],[401,129,450,127],[401,130,450,128,"props"],[401,135,450,133],[401,136,450,134,"testID"],[401,142,450,140],[402,10,451,8],[402,13,451,11,"events"],[403,8,452,6],[403,9,452,7],[403,11,452,9,"grandChildren"],[403,24,452,22],[403,25,452,23],[404,6,453,4],[405,4,455,2],[406,4,457,2,"_defineProperty"],[406,19,457,17],[406,20,457,18,"Handler"],[406,27,457,25],[406,29,457,27],[406,42,457,40],[406,44,457,42,"name"],[406,48,457,46],[406,49,457,47],[407,4,459,2,"_defineProperty"],[407,19,459,17],[407,20,459,18,"Handler"],[407,27,459,25],[407,29,459,27],[407,42,459,40],[407,44,459,42,"GestureHandlerRootViewContext"],[407,82,459,71],[407,83,459,72],[408,4,461,2],[408,11,461,9,"Handler"],[408,18,461,16],[409,2,462,0],[410,0,462,1],[410,3]],"functionMap":{"names":["<global>","_defineProperty","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","_defineProperty$argument_2","ghQueueMicrotask$argument_0","Handler#componentDidMount","setState$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACE,iND;sCEkE;GFC;0CEC;GFC;8BGG;CHG;gCIE;CJG;2DKO;GLE;AMG;kBCE;qBCK,4BD;GDC;CNG;eSY;ECO;ICC;qDCiB;ODY;2DCE;ODoB;0CCE;ODkB;oDCE;ODG;oDCE;8BVa;WUmB;yBCM;SDE;ODC;oDCE;ODI;KDiB;IIE;gGTK;wBUC;YVE;SSE;yBDU;SCE;KJU;IME;KNQ;IOE;KPqB;IQE;yBLU;SKE;KRQ;ISE;KTM;IUE;KVsF;GDE;CTO"}},"type":"js/module"}]}