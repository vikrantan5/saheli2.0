{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/createElement","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"hwcMDuX6ahNKBi9GfK6FsxxQxmE=","exportNames":["*"]}},{"name":"./utils/prepare","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":139},"end":{"line":5,"column":42,"index":181}}],"key":"GqKeXJqqPYJpnsdyEb9nkUiDDgY=","exportNames":["*"]}},{"name":"./utils/convertInt32Color","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":182},"end":{"line":6,"column":68,"index":250}}],"key":"BBCuFwBQZ9vIYDW2b41WTu9wn0A=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":251},"end":{"line":7,"column":77,"index":328}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../lib/SvgTouchableMixin","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":329},"end":{"line":8,"column":57,"index":386}}],"key":"G7na4RkwGgEaBeNbn5G/gGt/5KE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WebShape = void 0;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _createElement = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/createElement\"));\n  var _prepare = require(_dependencyMap[3], \"./utils/prepare\");\n  var _convertInt32Color = require(_dependencyMap[4], \"./utils/convertInt32Color\");\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  var _SvgTouchableMixin = _interopRequireDefault(require(_dependencyMap[6], \"../lib/SvgTouchableMixin\"));\n  class WebShape extends _react.default.Component {\n    prepareProps(props) {\n      return props;\n    }\n    elementRef = /*#__PURE__*/_react.default.createRef();\n    lastMergedProps = {};\n\n    /**\n     * disclaimer: I am not sure why the props are wrapped in a `style` attribute here, but that's how reanimated calls it\n     */\n    setNativeProps(props) {\n      const merged = Object.assign({}, this.props, this.lastMergedProps, props.style);\n      this.lastMergedProps = merged;\n      const clean = (0, _prepare.prepare)(this, this.prepareProps(merged));\n      const current = this.elementRef.current;\n      if (current) {\n        for (const cleanAttribute of Object.keys(clean)) {\n          const cleanValue = clean[cleanAttribute];\n          switch (cleanAttribute) {\n            case 'ref':\n            case 'children':\n              break;\n            case 'style':\n              // style can be an object here or an array, so we convert it to an array and assign each element\n              for (const partialStyle of [].concat(clean.style ?? [])) {\n                Object.assign(current.style, partialStyle);\n              }\n              break;\n            case 'fill':\n              if (cleanValue && typeof cleanValue === 'object') {\n                const value = cleanValue;\n                current.setAttribute('fill', (0, _convertInt32Color.convertInt32ColorToRGBA)(value.payload));\n              }\n              break;\n            case 'stroke':\n              if (cleanValue && typeof cleanValue === 'object') {\n                const value = cleanValue;\n                current.setAttribute('stroke', (0, _convertInt32Color.convertInt32ColorToRGBA)(value.payload));\n              }\n              break;\n            default:\n              // apply all other incoming prop updates as attributes on the node\n              // same logic as in https://github.com/software-mansion/react-native-reanimated/blob/d04720c82f5941532991b235787285d36d717247/src/reanimated2/js-reanimated/index.ts#L38-L39\n              // @ts-expect-error TODO: fix this\n              current.setAttribute((0, _utils.camelCaseToDashed)(cleanAttribute), cleanValue);\n              break;\n          }\n        }\n      }\n    }\n    constructor(props) {\n      super(props);\n\n      // Do not attach touchable mixin handlers if SVG element doesn't have a touchable prop\n      if ((0, _utils.hasTouchableProperty)(props)) {\n        (0, _SvgTouchableMixin.default)(this);\n      }\n      this._remeasureMetricsOnActivation = _utils.remeasure.bind(this);\n    }\n    render() {\n      if (!this.tag) {\n        throw new Error('When extending `WebShape` you need to overwrite either `tag` or `render`!');\n      }\n      this.lastMergedProps = {};\n      return (0, _createElement.default)(this.tag, (0, _prepare.prepare)(this, this.prepareProps(this.props)));\n    }\n  }\n  exports.WebShape = WebShape;\n});","lineCount":81,"map":[[7,2,1,0],[7,6,1,0,"_react"],[7,12,1,0],[7,15,1,0,"_interopRequireDefault"],[7,37,1,0],[7,38,1,0,"require"],[7,45,1,0],[7,46,1,0,"_dependencyMap"],[7,60,1,0],[8,2,1,26],[8,6,1,26,"_createElement"],[8,20,1,26],[8,23,1,26,"_interopRequireDefault"],[8,45,1,26],[8,46,1,26,"require"],[8,53,1,26],[8,54,1,26,"_dependencyMap"],[8,68,1,26],[9,2,5,0],[9,6,5,0,"_prepare"],[9,14,5,0],[9,17,5,0,"require"],[9,24,5,0],[9,25,5,0,"_dependencyMap"],[9,39,5,0],[10,2,6,0],[10,6,6,0,"_convertInt32Color"],[10,24,6,0],[10,27,6,0,"require"],[10,34,6,0],[10,35,6,0,"_dependencyMap"],[10,49,6,0],[11,2,7,0],[11,6,7,0,"_utils"],[11,12,7,0],[11,15,7,0,"require"],[11,22,7,0],[11,23,7,0,"_dependencyMap"],[11,37,7,0],[12,2,8,0],[12,6,8,0,"_SvgTouchableMixin"],[12,24,8,0],[12,27,8,0,"_interopRequireDefault"],[12,49,8,0],[12,50,8,0,"require"],[12,57,8,0],[12,58,8,0,"_dependencyMap"],[12,72,8,0],[13,2,9,7],[13,8,9,13,"WebShape"],[13,16,9,21],[13,25,9,30,"React"],[13,39,9,35],[13,40,9,36,"Component"],[13,49,9,45],[13,50,9,46],[14,4,10,2,"prepareProps"],[14,16,10,14,"prepareProps"],[14,17,10,15,"props"],[14,22,10,20],[14,24,10,22],[15,6,11,4],[15,13,11,11,"props"],[15,18,11,16],[16,4,12,2],[17,4,13,2,"elementRef"],[17,14,13,12],[17,17,13,15],[17,30,13,28,"React"],[17,44,13,33],[17,45,13,34,"createRef"],[17,54,13,43],[17,55,13,44],[17,56,13,45],[18,4,14,2,"lastMergedProps"],[18,19,14,17],[18,22,14,20],[18,23,14,21],[18,24,14,22],[20,4,16,2],[21,0,17,0],[22,0,18,0],[23,4,19,2,"setNativeProps"],[23,18,19,16,"setNativeProps"],[23,19,19,17,"props"],[23,24,19,22],[23,26,19,24],[24,6,20,4],[24,12,20,10,"merged"],[24,18,20,16],[24,21,20,19,"Object"],[24,27,20,25],[24,28,20,26,"assign"],[24,34,20,32],[24,35,20,33],[24,36,20,34],[24,37,20,35],[24,39,20,37],[24,43,20,41],[24,44,20,42,"props"],[24,49,20,47],[24,51,20,49],[24,55,20,53],[24,56,20,54,"lastMergedProps"],[24,71,20,69],[24,73,20,71,"props"],[24,78,20,76],[24,79,20,77,"style"],[24,84,20,82],[24,85,20,83],[25,6,21,4],[25,10,21,8],[25,11,21,9,"lastMergedProps"],[25,26,21,24],[25,29,21,27,"merged"],[25,35,21,33],[26,6,22,4],[26,12,22,10,"clean"],[26,17,22,15],[26,20,22,18],[26,24,22,18,"prepare"],[26,40,22,25],[26,42,22,26],[26,46,22,30],[26,48,22,32],[26,52,22,36],[26,53,22,37,"prepareProps"],[26,65,22,49],[26,66,22,50,"merged"],[26,72,22,56],[26,73,22,57],[26,74,22,58],[27,6,23,4],[27,12,23,10,"current"],[27,19,23,17],[27,22,23,20],[27,26,23,24],[27,27,23,25,"elementRef"],[27,37,23,35],[27,38,23,36,"current"],[27,45,23,43],[28,6,24,4],[28,10,24,8,"current"],[28,17,24,15],[28,19,24,17],[29,8,25,6],[29,13,25,11],[29,19,25,17,"cleanAttribute"],[29,33,25,31],[29,37,25,35,"Object"],[29,43,25,41],[29,44,25,42,"keys"],[29,48,25,46],[29,49,25,47,"clean"],[29,54,25,52],[29,55,25,53],[29,57,25,55],[30,10,26,8],[30,16,26,14,"cleanValue"],[30,26,26,24],[30,29,26,27,"clean"],[30,34,26,32],[30,35,26,33,"cleanAttribute"],[30,49,26,47],[30,50,26,48],[31,10,27,8],[31,18,27,16,"cleanAttribute"],[31,32,27,30],[32,12,28,10],[32,17,28,15],[32,22,28,20],[33,12,29,10],[33,17,29,15],[33,27,29,25],[34,14,30,12],[35,12,31,10],[35,17,31,15],[35,24,31,22],[36,14,32,12],[37,14,33,12],[37,19,33,17],[37,25,33,23,"partialStyle"],[37,37,33,35],[37,41,33,39],[37,43,33,41],[37,44,33,42,"concat"],[37,50,33,48],[37,51,33,49,"clean"],[37,56,33,54],[37,57,33,55,"style"],[37,62,33,60],[37,66,33,64],[37,68,33,66],[37,69,33,67],[37,71,33,69],[38,16,34,14,"Object"],[38,22,34,20],[38,23,34,21,"assign"],[38,29,34,27],[38,30,34,28,"current"],[38,37,34,35],[38,38,34,36,"style"],[38,43,34,41],[38,45,34,43,"partialStyle"],[38,57,34,55],[38,58,34,56],[39,14,35,12],[40,14,36,12],[41,12,37,10],[41,17,37,15],[41,23,37,21],[42,14,38,12],[42,18,38,16,"cleanValue"],[42,28,38,26],[42,32,38,30],[42,39,38,37,"cleanValue"],[42,49,38,47],[42,54,38,52],[42,62,38,60],[42,64,38,62],[43,16,39,14],[43,22,39,20,"value"],[43,27,39,25],[43,30,39,28,"cleanValue"],[43,40,39,38],[44,16,40,14,"current"],[44,23,40,21],[44,24,40,22,"setAttribute"],[44,36,40,34],[44,37,40,35],[44,43,40,41],[44,45,40,43],[44,49,40,43,"convertInt32ColorToRGBA"],[44,91,40,66],[44,93,40,67,"value"],[44,98,40,72],[44,99,40,73,"payload"],[44,106,40,80],[44,107,40,81],[44,108,40,82],[45,14,41,12],[46,14,42,12],[47,12,43,10],[47,17,43,15],[47,25,43,23],[48,14,44,12],[48,18,44,16,"cleanValue"],[48,28,44,26],[48,32,44,30],[48,39,44,37,"cleanValue"],[48,49,44,47],[48,54,44,52],[48,62,44,60],[48,64,44,62],[49,16,45,14],[49,22,45,20,"value"],[49,27,45,25],[49,30,45,28,"cleanValue"],[49,40,45,38],[50,16,46,14,"current"],[50,23,46,21],[50,24,46,22,"setAttribute"],[50,36,46,34],[50,37,46,35],[50,45,46,43],[50,47,46,45],[50,51,46,45,"convertInt32ColorToRGBA"],[50,93,46,68],[50,95,46,69,"value"],[50,100,46,74],[50,101,46,75,"payload"],[50,108,46,82],[50,109,46,83],[50,110,46,84],[51,14,47,12],[52,14,48,12],[53,12,49,10],[54,14,50,12],[55,14,51,12],[56,14,52,12],[57,14,53,12,"current"],[57,21,53,19],[57,22,53,20,"setAttribute"],[57,34,53,32],[57,35,53,33],[57,39,53,33,"camelCaseToDashed"],[57,63,53,50],[57,65,53,51,"cleanAttribute"],[57,79,53,65],[57,80,53,66],[57,82,53,68,"cleanValue"],[57,92,53,78],[57,93,53,79],[58,14,54,12],[59,10,55,8],[60,8,56,6],[61,6,57,4],[62,4,58,2],[63,4,59,2,"constructor"],[63,15,59,13,"constructor"],[63,16,59,14,"props"],[63,21,59,19],[63,23,59,21],[64,6,60,4],[64,11,60,9],[64,12,60,10,"props"],[64,17,60,15],[64,18,60,16],[66,6,62,4],[67,6,63,4],[67,10,63,8],[67,14,63,8,"hasTouchableProperty"],[67,41,63,28],[67,43,63,29,"props"],[67,48,63,34],[67,49,63,35],[67,51,63,37],[68,8,64,6],[68,12,64,6,"SvgTouchableMixin"],[68,38,64,23],[68,40,64,24],[68,44,64,28],[68,45,64,29],[69,6,65,4],[70,6,66,4],[70,10,66,8],[70,11,66,9,"_remeasureMetricsOnActivation"],[70,40,66,38],[70,43,66,41,"remeasure"],[70,59,66,50],[70,60,66,51,"bind"],[70,64,66,55],[70,65,66,56],[70,69,66,60],[70,70,66,61],[71,4,67,2],[72,4,68,2,"render"],[72,10,68,8,"render"],[72,11,68,8],[72,13,68,11],[73,6,69,4],[73,10,69,8],[73,11,69,9],[73,15,69,13],[73,16,69,14,"tag"],[73,19,69,17],[73,21,69,19],[74,8,70,6],[74,14,70,12],[74,18,70,16,"Error"],[74,23,70,21],[74,24,70,22],[74,99,70,97],[74,100,70,98],[75,6,71,4],[76,6,72,4],[76,10,72,8],[76,11,72,9,"lastMergedProps"],[76,26,72,24],[76,29,72,27],[76,30,72,28],[76,31,72,29],[77,6,73,4],[77,13,73,11],[77,17,73,11,"createElement"],[77,39,73,24],[77,41,73,25],[77,45,73,29],[77,46,73,30,"tag"],[77,49,73,33],[77,51,73,35],[77,55,73,35,"prepare"],[77,71,73,42],[77,73,73,43],[77,77,73,47],[77,79,73,49],[77,83,73,53],[77,84,73,54,"prepareProps"],[77,96,73,66],[77,97,73,67],[77,101,73,71],[77,102,73,72,"props"],[77,107,73,77],[77,108,73,78],[77,109,73,79],[77,110,73,80],[78,4,74,2],[79,2,75,0],[80,2,75,1,"exports"],[80,9,75,1],[80,10,75,1,"WebShape"],[80,18,75,1],[80,21,75,1,"WebShape"],[80,29,75,1],[81,0,75,1],[81,3]],"functionMap":{"names":["<global>","WebShape","prepareProps","setNativeProps","constructor","render"],"mappings":"AAA;OCQ;ECC;GDE;EEO;GFuC;EGC;GHQ;EIC;GJM;CDC"}},"type":"js/module"}]}