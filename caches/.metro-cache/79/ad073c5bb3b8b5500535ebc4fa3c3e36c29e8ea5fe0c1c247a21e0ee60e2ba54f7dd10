{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n    This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n    License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n  */\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;\n  var REALTIME_PRESENCE_LISTEN_EVENTS;\n  (function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n  })(REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = REALTIME_PRESENCE_LISTEN_EVENTS = {}));\n  var RealtimePresence = /*#__PURE__*/function () {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    function RealtimePresence(channel, opts) {\n      _classCallCheck(this, RealtimePresence);\n      this.channel = channel;\n      this.state = {};\n      this.pendingDiffs = [];\n      this.joinRef = null;\n      this.enabled = false;\n      this.caller = {\n        onJoin: () => {},\n        onLeave: () => {},\n        onSync: () => {}\n      };\n      var events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n        state: 'presence_state',\n        diff: 'presence_diff'\n      };\n      this.channel._on(events.state, {}, newState => {\n        var _this$caller = this.caller,\n          onJoin = _this$caller.onJoin,\n          onLeave = _this$caller.onLeave,\n          onSync = _this$caller.onSync;\n        this.joinRef = this.channel._joinRef();\n        this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n        this.pendingDiffs.forEach(diff => {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n        });\n        this.pendingDiffs = [];\n        onSync();\n      });\n      this.channel._on(events.diff, {}, diff => {\n        var _this$caller2 = this.caller,\n          onJoin = _this$caller2.onJoin,\n          onLeave = _this$caller2.onLeave,\n          onSync = _this$caller2.onSync;\n        if (this.inPendingSyncState()) {\n          this.pendingDiffs.push(diff);\n        } else {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n          onSync();\n        }\n      });\n      this.onJoin((key, currentPresences, newPresences) => {\n        this.channel._trigger('presence', {\n          event: 'join',\n          key,\n          currentPresences,\n          newPresences\n        });\n      });\n      this.onLeave((key, currentPresences, leftPresences) => {\n        this.channel._trigger('presence', {\n          event: 'leave',\n          key,\n          currentPresences,\n          leftPresences\n        });\n      });\n      this.onSync(() => {\n        this.channel._trigger('presence', {\n          event: 'sync'\n        });\n      });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    return _createClass(RealtimePresence, [{\n      key: \"onJoin\",\n      value: /** @internal */\n      function onJoin(callback) {\n        this.caller.onJoin = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"onLeave\",\n      value: function onLeave(callback) {\n        this.caller.onLeave = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"onSync\",\n      value: function onSync(callback) {\n        this.caller.onSync = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"inPendingSyncState\",\n      value: function inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n      }\n    }], [{\n      key: \"syncState\",\n      value: function syncState(currentState, newState, onJoin, onLeave) {\n        var state = this.cloneDeep(currentState);\n        var transformedState = this.transformState(newState);\n        var joins = {};\n        var leaves = {};\n        this.map(state, (key, presences) => {\n          if (!transformedState[key]) {\n            leaves[key] = presences;\n          }\n        });\n        this.map(transformedState, (key, newPresences) => {\n          var currentPresences = state[key];\n          if (currentPresences) {\n            var newPresenceRefs = newPresences.map(m => m.presence_ref);\n            var curPresenceRefs = currentPresences.map(m => m.presence_ref);\n            var joinedPresences = newPresences.filter(m => curPresenceRefs.indexOf(m.presence_ref) < 0);\n            var leftPresences = currentPresences.filter(m => newPresenceRefs.indexOf(m.presence_ref) < 0);\n            if (joinedPresences.length > 0) {\n              joins[key] = joinedPresences;\n            }\n            if (leftPresences.length > 0) {\n              leaves[key] = leftPresences;\n            }\n          } else {\n            joins[key] = newPresences;\n          }\n        });\n        return this.syncDiff(state, {\n          joins,\n          leaves\n        }, onJoin, onLeave);\n      }\n      /**\n       * Used to sync a diff of presence join and leave events from the\n       * server, as they happen.\n       *\n       * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n       * `onLeave` callbacks to react to a user joining or leaving from a\n       * device.\n       *\n       * @internal\n       */\n    }, {\n      key: \"syncDiff\",\n      value: function syncDiff(state, diff, onJoin, onLeave) {\n        var _joins$leaves = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves)\n          },\n          joins = _joins$leaves.joins,\n          leaves = _joins$leaves.leaves;\n        if (!onJoin) {\n          onJoin = () => {};\n        }\n        if (!onLeave) {\n          onLeave = () => {};\n        }\n        this.map(joins, (key, newPresences) => {\n          var _a;\n          var currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n          state[key] = this.cloneDeep(newPresences);\n          if (currentPresences.length > 0) {\n            var joinedPresenceRefs = state[key].map(m => m.presence_ref);\n            var curPresences = currentPresences.filter(m => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n            state[key].unshift(...curPresences);\n          }\n          onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n          var currentPresences = state[key];\n          if (!currentPresences) return;\n          var presenceRefsToRemove = leftPresences.map(m => m.presence_ref);\n          currentPresences = currentPresences.filter(m => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n          state[key] = currentPresences;\n          onLeave(key, currentPresences, leftPresences);\n          if (currentPresences.length === 0) delete state[key];\n        });\n        return state;\n      }\n      /** @internal */\n    }, {\n      key: \"map\",\n      value: function map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]));\n      }\n      /**\n       * Remove 'metas' key\n       * Change 'phx_ref' to 'presence_ref'\n       * Remove 'phx_ref' and 'phx_ref_prev'\n       *\n       * @example\n       * // returns {\n       *  abc123: [\n       *    { presence_ref: '2', user_id: 1 },\n       *    { presence_ref: '3', user_id: 2 }\n       *  ]\n       * }\n       * RealtimePresence.transformState({\n       *  abc123: {\n       *    metas: [\n       *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n       *      { phx_ref: '3', user_id: 2 }\n       *    ]\n       *  }\n       * })\n       *\n       * @internal\n       */\n    }, {\n      key: \"transformState\",\n      value: function transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n          var presences = state[key];\n          if ('metas' in presences) {\n            newState[key] = presences.metas.map(presence => {\n              presence['presence_ref'] = presence['phx_ref'];\n              delete presence['phx_ref'];\n              delete presence['phx_ref_prev'];\n              return presence;\n            });\n          } else {\n            newState[key] = presences;\n          }\n          return newState;\n        }, {});\n      }\n      /** @internal */\n    }, {\n      key: \"cloneDeep\",\n      value: function cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n      }\n    }]);\n  }();\n  exports.default = RealtimePresence;\n});","lineCount":263,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,2,2,0],[8,6,2,0,"_classCallCheck"],[8,21,2,0],[8,24,2,0,"require"],[8,31,2,0],[8,32,2,0,"_dependencyMap"],[8,46,2,0],[9,2,2,0],[9,6,2,0,"_createClass"],[9,18,2,0],[9,21,2,0,"require"],[9,28,2,0],[9,29,2,0,"_dependencyMap"],[9,43,2,0],[10,2,6,0,"Object"],[10,8,6,6],[10,9,6,7,"defineProperty"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,45,6,43],[10,47,6,45],[11,4,6,47,"value"],[11,9,6,52],[11,11,6,54],[12,2,6,59],[12,3,6,60],[12,4,6,61],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"REALTIME_PRESENCE_LISTEN_EVENTS"],[13,41,7,39],[13,44,7,42],[13,49,7,47],[13,50,7,48],[14,2,8,0],[14,6,8,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[14,37,8,35],[15,2,9,0],[15,3,9,1],[15,13,9,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,44,9,42],[15,46,9,44],[16,4,10,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[16,35,10,35],[16,36,10,36],[16,42,10,42],[16,43,10,43],[16,46,10,46],[16,52,10,52],[17,4,11,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[17,35,11,35],[17,36,11,36],[17,42,11,42],[17,43,11,43],[17,46,11,46],[17,52,11,52],[18,4,12,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[18,35,12,35],[18,36,12,36],[18,43,12,43],[18,44,12,44],[18,47,12,47],[18,54,12,54],[19,2,13,0],[19,3,13,1],[19,5,13,3,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,36,13,34],[19,41,13,39,"exports"],[19,48,13,46],[19,49,13,47,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,80,13,78],[19,83,13,81,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,114,13,112],[19,117,13,115],[19,118,13,116],[19,119,13,117],[19,120,13,118],[19,121,13,119],[20,2,13,120],[20,6,14,6,"RealtimePresence"],[20,22,14,22],[21,4,15,4],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,4,22,4],[28,13,22,4,"RealtimePresence"],[28,30,22,16,"channel"],[28,37,22,23],[28,39,22,25,"opts"],[28,43,22,29],[28,45,22,31],[29,6,22,31,"_classCallCheck"],[29,21,22,31],[29,28,22,31,"RealtimePresence"],[29,44,22,31],[30,6,23,8],[30,10,23,12],[30,11,23,13,"channel"],[30,18,23,20],[30,21,23,23,"channel"],[30,28,23,30],[31,6,24,8],[31,10,24,12],[31,11,24,13,"state"],[31,16,24,18],[31,19,24,21],[31,20,24,22],[31,21,24,23],[32,6,25,8],[32,10,25,12],[32,11,25,13,"pendingDiffs"],[32,23,25,25],[32,26,25,28],[32,28,25,30],[33,6,26,8],[33,10,26,12],[33,11,26,13,"joinRef"],[33,18,26,20],[33,21,26,23],[33,25,26,27],[34,6,27,8],[34,10,27,12],[34,11,27,13,"enabled"],[34,18,27,20],[34,21,27,23],[34,26,27,28],[35,6,28,8],[35,10,28,12],[35,11,28,13,"caller"],[35,17,28,19],[35,20,28,22],[36,8,29,12,"onJoin"],[36,14,29,18],[36,16,29,20,"onJoin"],[36,17,29,20],[36,22,29,26],[36,23,29,28],[36,24,29,29],[37,8,30,12,"onLeave"],[37,15,30,19],[37,17,30,21,"onLeave"],[37,18,30,21],[37,23,30,27],[37,24,30,29],[37,25,30,30],[38,8,31,12,"onSync"],[38,14,31,18],[38,16,31,20,"onSync"],[38,17,31,20],[38,22,31,26],[38,23,31,28],[39,6,32,8],[39,7,32,9],[40,6,33,8],[40,10,33,14,"events"],[40,16,33,20],[40,19,33,23],[40,20,33,24,"opts"],[40,24,33,28],[40,29,33,33],[40,33,33,37],[40,37,33,41,"opts"],[40,41,33,45],[40,46,33,50],[40,51,33,55],[40,52,33,56],[40,55,33,59],[40,60,33,64],[40,61,33,65],[40,64,33,68,"opts"],[40,68,33,72],[40,69,33,73,"events"],[40,75,33,79],[40,80,33,84],[41,8,34,12,"state"],[41,13,34,17],[41,15,34,19],[41,31,34,35],[42,8,35,12,"diff"],[42,12,35,16],[42,14,35,18],[43,6,36,8],[43,7,36,9],[44,6,37,8],[44,10,37,12],[44,11,37,13,"channel"],[44,18,37,20],[44,19,37,21,"_on"],[44,22,37,24],[44,23,37,25,"events"],[44,29,37,31],[44,30,37,32,"state"],[44,35,37,37],[44,37,37,39],[44,38,37,40],[44,39,37,41],[44,41,37,44,"newState"],[44,49,37,52],[44,53,37,57],[45,8,38,12],[45,12,38,12,"_this$caller"],[45,24,38,12],[45,27,38,48],[45,31,38,52],[45,32,38,53,"caller"],[45,38,38,59],[46,10,38,20,"onJoin"],[46,16,38,26],[46,19,38,26,"_this$caller"],[46,31,38,26],[46,32,38,20,"onJoin"],[46,38,38,26],[47,10,38,28,"onLeave"],[47,17,38,35],[47,20,38,35,"_this$caller"],[47,32,38,35],[47,33,38,28,"onLeave"],[47,40,38,35],[48,10,38,37,"onSync"],[48,16,38,43],[48,19,38,43,"_this$caller"],[48,31,38,43],[48,32,38,37,"onSync"],[48,38,38,43],[49,8,39,12],[49,12,39,16],[49,13,39,17,"joinRef"],[49,20,39,24],[49,23,39,27],[49,27,39,31],[49,28,39,32,"channel"],[49,35,39,39],[49,36,39,40,"_joinRef"],[49,44,39,48],[49,45,39,49],[49,46,39,50],[50,8,40,12],[50,12,40,16],[50,13,40,17,"state"],[50,18,40,22],[50,21,40,25,"RealtimePresence"],[50,37,40,41],[50,38,40,42,"syncState"],[50,47,40,51],[50,48,40,52],[50,52,40,56],[50,53,40,57,"state"],[50,58,40,62],[50,60,40,64,"newState"],[50,68,40,72],[50,70,40,74,"onJoin"],[50,76,40,80],[50,78,40,82,"onLeave"],[50,85,40,89],[50,86,40,90],[51,8,41,12],[51,12,41,16],[51,13,41,17,"pendingDiffs"],[51,25,41,29],[51,26,41,30,"forEach"],[51,33,41,37],[51,34,41,39,"diff"],[51,38,41,43],[51,42,41,48],[52,10,42,16],[52,14,42,20],[52,15,42,21,"state"],[52,20,42,26],[52,23,42,29,"RealtimePresence"],[52,39,42,45],[52,40,42,46,"syncDiff"],[52,48,42,54],[52,49,42,55],[52,53,42,59],[52,54,42,60,"state"],[52,59,42,65],[52,61,42,67,"diff"],[52,65,42,71],[52,67,42,73,"onJoin"],[52,73,42,79],[52,75,42,81,"onLeave"],[52,82,42,88],[52,83,42,89],[53,8,43,12],[53,9,43,13],[53,10,43,14],[54,8,44,12],[54,12,44,16],[54,13,44,17,"pendingDiffs"],[54,25,44,29],[54,28,44,32],[54,30,44,34],[55,8,45,12,"onSync"],[55,14,45,18],[55,15,45,19],[55,16,45,20],[56,6,46,8],[56,7,46,9],[56,8,46,10],[57,6,47,8],[57,10,47,12],[57,11,47,13,"channel"],[57,18,47,20],[57,19,47,21,"_on"],[57,22,47,24],[57,23,47,25,"events"],[57,29,47,31],[57,30,47,32,"diff"],[57,34,47,36],[57,36,47,38],[57,37,47,39],[57,38,47,40],[57,40,47,43,"diff"],[57,44,47,47],[57,48,47,52],[58,8,48,12],[58,12,48,12,"_this$caller2"],[58,25,48,12],[58,28,48,48],[58,32,48,52],[58,33,48,53,"caller"],[58,39,48,59],[59,10,48,20,"onJoin"],[59,16,48,26],[59,19,48,26,"_this$caller2"],[59,32,48,26],[59,33,48,20,"onJoin"],[59,39,48,26],[60,10,48,28,"onLeave"],[60,17,48,35],[60,20,48,35,"_this$caller2"],[60,33,48,35],[60,34,48,28,"onLeave"],[60,41,48,35],[61,10,48,37,"onSync"],[61,16,48,43],[61,19,48,43,"_this$caller2"],[61,32,48,43],[61,33,48,37,"onSync"],[61,39,48,43],[62,8,49,12],[62,12,49,16],[62,16,49,20],[62,17,49,21,"inPendingSyncState"],[62,35,49,39],[62,36,49,40],[62,37,49,41],[62,39,49,43],[63,10,50,16],[63,14,50,20],[63,15,50,21,"pendingDiffs"],[63,27,50,33],[63,28,50,34,"push"],[63,32,50,38],[63,33,50,39,"diff"],[63,37,50,43],[63,38,50,44],[64,8,51,12],[64,9,51,13],[64,15,52,17],[65,10,53,16],[65,14,53,20],[65,15,53,21,"state"],[65,20,53,26],[65,23,53,29,"RealtimePresence"],[65,39,53,45],[65,40,53,46,"syncDiff"],[65,48,53,54],[65,49,53,55],[65,53,53,59],[65,54,53,60,"state"],[65,59,53,65],[65,61,53,67,"diff"],[65,65,53,71],[65,67,53,73,"onJoin"],[65,73,53,79],[65,75,53,81,"onLeave"],[65,82,53,88],[65,83,53,89],[66,10,54,16,"onSync"],[66,16,54,22],[66,17,54,23],[66,18,54,24],[67,8,55,12],[68,6,56,8],[68,7,56,9],[68,8,56,10],[69,6,57,8],[69,10,57,12],[69,11,57,13,"onJoin"],[69,17,57,19],[69,18,57,20],[69,19,57,21,"key"],[69,22,57,24],[69,24,57,26,"currentPresences"],[69,40,57,42],[69,42,57,44,"newPresences"],[69,54,57,56],[69,59,57,61],[70,8,58,12],[70,12,58,16],[70,13,58,17,"channel"],[70,20,58,24],[70,21,58,25,"_trigger"],[70,29,58,33],[70,30,58,34],[70,40,58,44],[70,42,58,46],[71,10,59,16,"event"],[71,15,59,21],[71,17,59,23],[71,23,59,29],[72,10,60,16,"key"],[72,13,60,19],[73,10,61,16,"currentPresences"],[73,26,61,32],[74,10,62,16,"newPresences"],[75,8,63,12],[75,9,63,13],[75,10,63,14],[76,6,64,8],[76,7,64,9],[76,8,64,10],[77,6,65,8],[77,10,65,12],[77,11,65,13,"onLeave"],[77,18,65,20],[77,19,65,21],[77,20,65,22,"key"],[77,23,65,25],[77,25,65,27,"currentPresences"],[77,41,65,43],[77,43,65,45,"leftPresences"],[77,56,65,58],[77,61,65,63],[78,8,66,12],[78,12,66,16],[78,13,66,17,"channel"],[78,20,66,24],[78,21,66,25,"_trigger"],[78,29,66,33],[78,30,66,34],[78,40,66,44],[78,42,66,46],[79,10,67,16,"event"],[79,15,67,21],[79,17,67,23],[79,24,67,30],[80,10,68,16,"key"],[80,13,68,19],[81,10,69,16,"currentPresences"],[81,26,69,32],[82,10,70,16,"leftPresences"],[83,8,71,12],[83,9,71,13],[83,10,71,14],[84,6,72,8],[84,7,72,9],[84,8,72,10],[85,6,73,8],[85,10,73,12],[85,11,73,13,"onSync"],[85,17,73,19],[85,18,73,20],[85,24,73,26],[86,8,74,12],[86,12,74,16],[86,13,74,17,"channel"],[86,20,74,24],[86,21,74,25,"_trigger"],[86,29,74,33],[86,30,74,34],[86,40,74,44],[86,42,74,46],[87,10,74,48,"event"],[87,15,74,53],[87,17,74,55],[88,8,74,62],[88,9,74,63],[88,10,74,64],[89,6,75,8],[89,7,75,9],[89,8,75,10],[90,4,76,4],[91,4,77,4],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,0,84,0],[99,0,85,0],[100,0,86,0],[101,4,77,4],[101,11,77,4,"_createClass"],[101,23,77,4],[101,24,77,4,"RealtimePresence"],[101,40,77,4],[102,6,77,4,"key"],[102,9,77,4],[103,6,77,4,"value"],[103,11,77,4],[103,13,211,4],[104,6,212,4],[104,15,212,4,"onJoin"],[104,21,212,10,"onJoin"],[104,22,212,11,"callback"],[104,30,212,19],[104,32,212,21],[105,8,213,8],[105,12,213,12],[105,13,213,13,"caller"],[105,19,213,19],[105,20,213,20,"onJoin"],[105,26,213,26],[105,29,213,29,"callback"],[105,37,213,37],[106,6,214,4],[107,6,215,4],[108,4,215,4],[109,6,215,4,"key"],[109,9,215,4],[110,6,215,4,"value"],[110,11,215,4],[110,13,216,4],[110,22,216,4,"onLeave"],[110,29,216,11,"onLeave"],[110,30,216,12,"callback"],[110,38,216,20],[110,40,216,22],[111,8,217,8],[111,12,217,12],[111,13,217,13,"caller"],[111,19,217,19],[111,20,217,20,"onLeave"],[111,27,217,27],[111,30,217,30,"callback"],[111,38,217,38],[112,6,218,4],[113,6,219,4],[114,4,219,4],[115,6,219,4,"key"],[115,9,219,4],[116,6,219,4,"value"],[116,11,219,4],[116,13,220,4],[116,22,220,4,"onSync"],[116,28,220,10,"onSync"],[116,29,220,11,"callback"],[116,37,220,19],[116,39,220,21],[117,8,221,8],[117,12,221,12],[117,13,221,13,"caller"],[117,19,221,19],[117,20,221,20,"onSync"],[117,26,221,26],[117,29,221,29,"callback"],[117,37,221,37],[118,6,222,4],[119,6,223,4],[120,4,223,4],[121,6,223,4,"key"],[121,9,223,4],[122,6,223,4,"value"],[122,11,223,4],[122,13,224,4],[122,22,224,4,"inPendingSyncState"],[122,40,224,22,"inPendingSyncState"],[122,41,224,22],[122,43,224,25],[123,8,225,8],[123,15,225,15],[123,16,225,16],[123,20,225,20],[123,21,225,21,"joinRef"],[123,28,225,28],[123,32,225,32],[123,36,225,36],[123,37,225,37,"joinRef"],[123,44,225,44],[123,49,225,49],[123,53,225,53],[123,54,225,54,"channel"],[123,61,225,61],[123,62,225,62,"_joinRef"],[123,70,225,70],[123,71,225,71],[123,72,225,72],[124,6,226,4],[125,4,226,5],[126,6,226,5,"key"],[126,9,226,5],[127,6,226,5,"value"],[127,11,226,5],[127,13,87,4],[127,22,87,11,"syncState"],[127,31,87,20,"syncState"],[127,32,87,21,"currentState"],[127,44,87,33],[127,46,87,35,"newState"],[127,54,87,43],[127,56,87,45,"onJoin"],[127,62,87,51],[127,64,87,53,"onLeave"],[127,71,87,60],[127,73,87,62],[128,8,88,8],[128,12,88,14,"state"],[128,17,88,19],[128,20,88,22],[128,24,88,26],[128,25,88,27,"cloneDeep"],[128,34,88,36],[128,35,88,37,"currentState"],[128,47,88,49],[128,48,88,50],[129,8,89,8],[129,12,89,14,"transformedState"],[129,28,89,30],[129,31,89,33],[129,35,89,37],[129,36,89,38,"transformState"],[129,50,89,52],[129,51,89,53,"newState"],[129,59,89,61],[129,60,89,62],[130,8,90,8],[130,12,90,14,"joins"],[130,17,90,19],[130,20,90,22],[130,21,90,23],[130,22,90,24],[131,8,91,8],[131,12,91,14,"leaves"],[131,18,91,20],[131,21,91,23],[131,22,91,24],[131,23,91,25],[132,8,92,8],[132,12,92,12],[132,13,92,13,"map"],[132,16,92,16],[132,17,92,17,"state"],[132,22,92,22],[132,24,92,24],[132,25,92,25,"key"],[132,28,92,28],[132,30,92,30,"presences"],[132,39,92,39],[132,44,92,44],[133,10,93,12],[133,14,93,16],[133,15,93,17,"transformedState"],[133,31,93,33],[133,32,93,34,"key"],[133,35,93,37],[133,36,93,38],[133,38,93,40],[134,12,94,16,"leaves"],[134,18,94,22],[134,19,94,23,"key"],[134,22,94,26],[134,23,94,27],[134,26,94,30,"presences"],[134,35,94,39],[135,10,95,12],[136,8,96,8],[136,9,96,9],[136,10,96,10],[137,8,97,8],[137,12,97,12],[137,13,97,13,"map"],[137,16,97,16],[137,17,97,17,"transformedState"],[137,33,97,33],[137,35,97,35],[137,36,97,36,"key"],[137,39,97,39],[137,41,97,41,"newPresences"],[137,53,97,53],[137,58,97,58],[138,10,98,12],[138,14,98,18,"currentPresences"],[138,30,98,34],[138,33,98,37,"state"],[138,38,98,42],[138,39,98,43,"key"],[138,42,98,46],[138,43,98,47],[139,10,99,12],[139,14,99,16,"currentPresences"],[139,30,99,32],[139,32,99,34],[140,12,100,16],[140,16,100,22,"newPresenceRefs"],[140,31,100,37],[140,34,100,40,"newPresences"],[140,46,100,52],[140,47,100,53,"map"],[140,50,100,56],[140,51,100,58,"m"],[140,52,100,59],[140,56,100,64,"m"],[140,57,100,65],[140,58,100,66,"presence_ref"],[140,70,100,78],[140,71,100,79],[141,12,101,16],[141,16,101,22,"curPresenceRefs"],[141,31,101,37],[141,34,101,40,"currentPresences"],[141,50,101,56],[141,51,101,57,"map"],[141,54,101,60],[141,55,101,62,"m"],[141,56,101,63],[141,60,101,68,"m"],[141,61,101,69],[141,62,101,70,"presence_ref"],[141,74,101,82],[141,75,101,83],[142,12,102,16],[142,16,102,22,"joinedPresences"],[142,31,102,37],[142,34,102,40,"newPresences"],[142,46,102,52],[142,47,102,53,"filter"],[142,53,102,59],[142,54,102,61,"m"],[142,55,102,62],[142,59,102,67,"curPresenceRefs"],[142,74,102,82],[142,75,102,83,"indexOf"],[142,82,102,90],[142,83,102,91,"m"],[142,84,102,92],[142,85,102,93,"presence_ref"],[142,97,102,105],[142,98,102,106],[142,101,102,109],[142,102,102,110],[142,103,102,111],[143,12,103,16],[143,16,103,22,"leftPresences"],[143,29,103,35],[143,32,103,38,"currentPresences"],[143,48,103,54],[143,49,103,55,"filter"],[143,55,103,61],[143,56,103,63,"m"],[143,57,103,64],[143,61,103,69,"newPresenceRefs"],[143,76,103,84],[143,77,103,85,"indexOf"],[143,84,103,92],[143,85,103,93,"m"],[143,86,103,94],[143,87,103,95,"presence_ref"],[143,99,103,107],[143,100,103,108],[143,103,103,111],[143,104,103,112],[143,105,103,113],[144,12,104,16],[144,16,104,20,"joinedPresences"],[144,31,104,35],[144,32,104,36,"length"],[144,38,104,42],[144,41,104,45],[144,42,104,46],[144,44,104,48],[145,14,105,20,"joins"],[145,19,105,25],[145,20,105,26,"key"],[145,23,105,29],[145,24,105,30],[145,27,105,33,"joinedPresences"],[145,42,105,48],[146,12,106,16],[147,12,107,16],[147,16,107,20,"leftPresences"],[147,29,107,33],[147,30,107,34,"length"],[147,36,107,40],[147,39,107,43],[147,40,107,44],[147,42,107,46],[148,14,108,20,"leaves"],[148,20,108,26],[148,21,108,27,"key"],[148,24,108,30],[148,25,108,31],[148,28,108,34,"leftPresences"],[148,41,108,47],[149,12,109,16],[150,10,110,12],[150,11,110,13],[150,17,111,17],[151,12,112,16,"joins"],[151,17,112,21],[151,18,112,22,"key"],[151,21,112,25],[151,22,112,26],[151,25,112,29,"newPresences"],[151,37,112,41],[152,10,113,12],[153,8,114,8],[153,9,114,9],[153,10,114,10],[154,8,115,8],[154,15,115,15],[154,19,115,19],[154,20,115,20,"syncDiff"],[154,28,115,28],[154,29,115,29,"state"],[154,34,115,34],[154,36,115,36],[155,10,115,38,"joins"],[155,15,115,43],[156,10,115,45,"leaves"],[157,8,115,52],[157,9,115,53],[157,11,115,55,"onJoin"],[157,17,115,61],[157,19,115,63,"onLeave"],[157,26,115,70],[157,27,115,71],[158,6,116,4],[159,6,117,4],[160,0,118,0],[161,0,119,0],[162,0,120,0],[163,0,121,0],[164,0,122,0],[165,0,123,0],[166,0,124,0],[167,0,125,0],[168,0,126,0],[169,4,117,4],[170,6,117,4,"key"],[170,9,117,4],[171,6,117,4,"value"],[171,11,117,4],[171,13,127,4],[171,22,127,11,"syncDiff"],[171,30,127,19,"syncDiff"],[171,31,127,20,"state"],[171,36,127,25],[171,38,127,27,"diff"],[171,42,127,31],[171,44,127,33,"onJoin"],[171,50,127,39],[171,52,127,41,"onLeave"],[171,59,127,48],[171,61,127,50],[172,8,128,8],[172,12,128,8,"_joins$leaves"],[172,25,128,8],[172,28,128,34],[173,12,129,12,"joins"],[173,17,129,17],[173,19,129,19],[173,23,129,23],[173,24,129,24,"transformState"],[173,38,129,38],[173,39,129,39,"diff"],[173,43,129,43],[173,44,129,44,"joins"],[173,49,129,49],[173,50,129,50],[174,12,130,12,"leaves"],[174,18,130,18],[174,20,130,20],[174,24,130,24],[174,25,130,25,"transformState"],[174,39,130,39],[174,40,130,40,"diff"],[174,44,130,44],[174,45,130,45,"leaves"],[174,51,130,51],[175,10,131,8],[175,11,131,9],[176,10,128,16,"joins"],[176,15,128,21],[176,18,128,21,"_joins$leaves"],[176,31,128,21],[176,32,128,16,"joins"],[176,37,128,21],[177,10,128,23,"leaves"],[177,16,128,29],[177,19,128,29,"_joins$leaves"],[177,32,128,29],[177,33,128,23,"leaves"],[177,39,128,29],[178,8,132,8],[178,12,132,12],[178,13,132,13,"onJoin"],[178,19,132,19],[178,21,132,21],[179,10,133,12,"onJoin"],[179,16,133,18],[179,19,133,21,"onJoin"],[179,20,133,21],[179,25,133,27],[179,26,133,29],[179,27,133,30],[180,8,134,8],[181,8,135,8],[181,12,135,12],[181,13,135,13,"onLeave"],[181,20,135,20],[181,22,135,22],[182,10,136,12,"onLeave"],[182,17,136,19],[182,20,136,22,"onLeave"],[182,21,136,22],[182,26,136,28],[182,27,136,30],[182,28,136,31],[183,8,137,8],[184,8,138,8],[184,12,138,12],[184,13,138,13,"map"],[184,16,138,16],[184,17,138,17,"joins"],[184,22,138,22],[184,24,138,24],[184,25,138,25,"key"],[184,28,138,28],[184,30,138,30,"newPresences"],[184,42,138,42],[184,47,138,47],[185,10,139,12],[185,14,139,16,"_a"],[185,16,139,18],[186,10,140,12],[186,14,140,18,"currentPresences"],[186,30,140,34],[186,33,140,37],[186,34,140,38,"_a"],[186,36,140,40],[186,39,140,43,"state"],[186,44,140,48],[186,45,140,49,"key"],[186,48,140,52],[186,49,140,53],[186,55,140,59],[186,59,140,63],[186,63,140,67,"_a"],[186,65,140,69],[186,70,140,74],[186,75,140,79],[186,76,140,80],[186,79,140,83,"_a"],[186,81,140,85],[186,84,140,88],[186,86,140,90],[187,10,141,12,"state"],[187,15,141,17],[187,16,141,18,"key"],[187,19,141,21],[187,20,141,22],[187,23,141,25],[187,27,141,29],[187,28,141,30,"cloneDeep"],[187,37,141,39],[187,38,141,40,"newPresences"],[187,50,141,52],[187,51,141,53],[188,10,142,12],[188,14,142,16,"currentPresences"],[188,30,142,32],[188,31,142,33,"length"],[188,37,142,39],[188,40,142,42],[188,41,142,43],[188,43,142,45],[189,12,143,16],[189,16,143,22,"joinedPresenceRefs"],[189,34,143,40],[189,37,143,43,"state"],[189,42,143,48],[189,43,143,49,"key"],[189,46,143,52],[189,47,143,53],[189,48,143,54,"map"],[189,51,143,57],[189,52,143,59,"m"],[189,53,143,60],[189,57,143,65,"m"],[189,58,143,66],[189,59,143,67,"presence_ref"],[189,71,143,79],[189,72,143,80],[190,12,144,16],[190,16,144,22,"curPresences"],[190,28,144,34],[190,31,144,37,"currentPresences"],[190,47,144,53],[190,48,144,54,"filter"],[190,54,144,60],[190,55,144,62,"m"],[190,56,144,63],[190,60,144,68,"joinedPresenceRefs"],[190,78,144,86],[190,79,144,87,"indexOf"],[190,86,144,94],[190,87,144,95,"m"],[190,88,144,96],[190,89,144,97,"presence_ref"],[190,101,144,109],[190,102,144,110],[190,105,144,113],[190,106,144,114],[190,107,144,115],[191,12,145,16,"state"],[191,17,145,21],[191,18,145,22,"key"],[191,21,145,25],[191,22,145,26],[191,23,145,27,"unshift"],[191,30,145,34],[191,31,145,35],[191,34,145,38,"curPresences"],[191,46,145,50],[191,47,145,51],[192,10,146,12],[193,10,147,12,"onJoin"],[193,16,147,18],[193,17,147,19,"key"],[193,20,147,22],[193,22,147,24,"currentPresences"],[193,38,147,40],[193,40,147,42,"newPresences"],[193,52,147,54],[193,53,147,55],[194,8,148,8],[194,9,148,9],[194,10,148,10],[195,8,149,8],[195,12,149,12],[195,13,149,13,"map"],[195,16,149,16],[195,17,149,17,"leaves"],[195,23,149,23],[195,25,149,25],[195,26,149,26,"key"],[195,29,149,29],[195,31,149,31,"leftPresences"],[195,44,149,44],[195,49,149,49],[196,10,150,12],[196,14,150,16,"currentPresences"],[196,30,150,32],[196,33,150,35,"state"],[196,38,150,40],[196,39,150,41,"key"],[196,42,150,44],[196,43,150,45],[197,10,151,12],[197,14,151,16],[197,15,151,17,"currentPresences"],[197,31,151,33],[197,33,152,16],[198,10,153,12],[198,14,153,18,"presenceRefsToRemove"],[198,34,153,38],[198,37,153,41,"leftPresences"],[198,50,153,54],[198,51,153,55,"map"],[198,54,153,58],[198,55,153,60,"m"],[198,56,153,61],[198,60,153,66,"m"],[198,61,153,67],[198,62,153,68,"presence_ref"],[198,74,153,80],[198,75,153,81],[199,10,154,12,"currentPresences"],[199,26,154,28],[199,29,154,31,"currentPresences"],[199,45,154,47],[199,46,154,48,"filter"],[199,52,154,54],[199,53,154,56,"m"],[199,54,154,57],[199,58,154,62,"presenceRefsToRemove"],[199,78,154,82],[199,79,154,83,"indexOf"],[199,86,154,90],[199,87,154,91,"m"],[199,88,154,92],[199,89,154,93,"presence_ref"],[199,101,154,105],[199,102,154,106],[199,105,154,109],[199,106,154,110],[199,107,154,111],[200,10,155,12,"state"],[200,15,155,17],[200,16,155,18,"key"],[200,19,155,21],[200,20,155,22],[200,23,155,25,"currentPresences"],[200,39,155,41],[201,10,156,12,"onLeave"],[201,17,156,19],[201,18,156,20,"key"],[201,21,156,23],[201,23,156,25,"currentPresences"],[201,39,156,41],[201,41,156,43,"leftPresences"],[201,54,156,56],[201,55,156,57],[202,10,157,12],[202,14,157,16,"currentPresences"],[202,30,157,32],[202,31,157,33,"length"],[202,37,157,39],[202,42,157,44],[202,43,157,45],[202,45,158,16],[202,52,158,23,"state"],[202,57,158,28],[202,58,158,29,"key"],[202,61,158,32],[202,62,158,33],[203,8,159,8],[203,9,159,9],[203,10,159,10],[204,8,160,8],[204,15,160,15,"state"],[204,20,160,20],[205,6,161,4],[206,6,162,4],[207,4,162,4],[208,6,162,4,"key"],[208,9,162,4],[209,6,162,4,"value"],[209,11,162,4],[209,13,163,4],[209,22,163,11,"map"],[209,25,163,14,"map"],[209,26,163,15,"obj"],[209,29,163,18],[209,31,163,20,"func"],[209,35,163,24],[209,37,163,26],[210,8,164,8],[210,15,164,15,"Object"],[210,21,164,21],[210,22,164,22,"getOwnPropertyNames"],[210,41,164,41],[210,42,164,42,"obj"],[210,45,164,45],[210,46,164,46],[210,47,164,47,"map"],[210,50,164,50],[210,51,164,52,"key"],[210,54,164,55],[210,58,164,60,"func"],[210,62,164,64],[210,63,164,65,"key"],[210,66,164,68],[210,68,164,70,"obj"],[210,71,164,73],[210,72,164,74,"key"],[210,75,164,77],[210,76,164,78],[210,77,164,79],[210,78,164,80],[211,6,165,4],[212,6,166,4],[213,0,167,0],[214,0,168,0],[215,0,169,0],[216,0,170,0],[217,0,171,0],[218,0,172,0],[219,0,173,0],[220,0,174,0],[221,0,175,0],[222,0,176,0],[223,0,177,0],[224,0,178,0],[225,0,179,0],[226,0,180,0],[227,0,181,0],[228,0,182,0],[229,0,183,0],[230,0,184,0],[231,0,185,0],[232,0,186,0],[233,0,187,0],[234,0,188,0],[235,4,166,4],[236,6,166,4,"key"],[236,9,166,4],[237,6,166,4,"value"],[237,11,166,4],[237,13,189,4],[237,22,189,11,"transformState"],[237,36,189,25,"transformState"],[237,37,189,26,"state"],[237,42,189,31],[237,44,189,33],[238,8,190,8,"state"],[238,13,190,13],[238,16,190,16],[238,20,190,20],[238,21,190,21,"cloneDeep"],[238,30,190,30],[238,31,190,31,"state"],[238,36,190,36],[238,37,190,37],[239,8,191,8],[239,15,191,15,"Object"],[239,21,191,21],[239,22,191,22,"getOwnPropertyNames"],[239,41,191,41],[239,42,191,42,"state"],[239,47,191,47],[239,48,191,48],[239,49,191,49,"reduce"],[239,55,191,55],[239,56,191,56],[239,57,191,57,"newState"],[239,65,191,65],[239,67,191,67,"key"],[239,70,191,70],[239,75,191,75],[240,10,192,12],[240,14,192,18,"presences"],[240,23,192,27],[240,26,192,30,"state"],[240,31,192,35],[240,32,192,36,"key"],[240,35,192,39],[240,36,192,40],[241,10,193,12],[241,14,193,16],[241,21,193,23],[241,25,193,27,"presences"],[241,34,193,36],[241,36,193,38],[242,12,194,16,"newState"],[242,20,194,24],[242,21,194,25,"key"],[242,24,194,28],[242,25,194,29],[242,28,194,32,"presences"],[242,37,194,41],[242,38,194,42,"metas"],[242,43,194,47],[242,44,194,48,"map"],[242,47,194,51],[242,48,194,53,"presence"],[242,56,194,61],[242,60,194,66],[243,14,195,20,"presence"],[243,22,195,28],[243,23,195,29],[243,37,195,43],[243,38,195,44],[243,41,195,47,"presence"],[243,49,195,55],[243,50,195,56],[243,59,195,65],[243,60,195,66],[244,14,196,20],[244,21,196,27,"presence"],[244,29,196,35],[244,30,196,36],[244,39,196,45],[244,40,196,46],[245,14,197,20],[245,21,197,27,"presence"],[245,29,197,35],[245,30,197,36],[245,44,197,50],[245,45,197,51],[246,14,198,20],[246,21,198,27,"presence"],[246,29,198,35],[247,12,199,16],[247,13,199,17],[247,14,199,18],[248,10,200,12],[248,11,200,13],[248,17,201,17],[249,12,202,16,"newState"],[249,20,202,24],[249,21,202,25,"key"],[249,24,202,28],[249,25,202,29],[249,28,202,32,"presences"],[249,37,202,41],[250,10,203,12],[251,10,204,12],[251,17,204,19,"newState"],[251,25,204,27],[252,8,205,8],[252,9,205,9],[252,11,205,11],[252,12,205,12],[252,13,205,13],[252,14,205,14],[253,6,206,4],[254,6,207,4],[255,4,207,4],[256,6,207,4,"key"],[256,9,207,4],[257,6,207,4,"value"],[257,11,207,4],[257,13,208,4],[257,22,208,11,"cloneDeep"],[257,31,208,20,"cloneDeep"],[257,32,208,21,"obj"],[257,35,208,24],[257,37,208,26],[258,8,209,8],[258,15,209,15,"JSON"],[258,19,209,19],[258,20,209,20,"parse"],[258,25,209,25],[258,26,209,26,"JSON"],[258,30,209,30],[258,31,209,31,"stringify"],[258,40,209,40],[258,41,209,41,"obj"],[258,44,209,44],[258,45,209,45],[258,46,209,46],[259,6,210,4],[260,4,210,5],[261,2,210,5],[262,2,228,0,"exports"],[262,9,228,7],[262,10,228,8,"default"],[262,17,228,15],[262,20,228,18,"RealtimePresence"],[262,36,228,34],[263,0,228,35],[263,3]],"functionMap":{"names":["<global>","<anonymous>","RealtimePresence","constructor","caller.onJoin","caller.onLeave","caller.onSync","channel._on$argument_2","pendingDiffs.forEach$argument_0","onJoin$argument_0","onLeave$argument_0","onSync$argument_0","syncState","map$argument_1","newPresences.map$argument_0","currentPresences.map$argument_0","newPresences.filter$argument_0","currentPresences.filter$argument_0","syncDiff","onJoin","onLeave","state.key.map$argument_0","leftPresences.map$argument_0","map","Object.getOwnPropertyNames.map$argument_0","transformState","Object.getOwnPropertyNames.reduce$argument_0","presences.metas.map$argument_0","cloneDeep","onSync","inPendingSyncState"],"mappings":"AAA;CCQ;CDI;AEC;ICQ;oBCO,SD;qBEC,SF;oBGC,SH;2CIM;sCCI;aDE;SJG;0CIC;SJS;oBMC;SNO;qBOC;SPO;oBQC;SRE;KDC;IUW;wBCK;SDI;mCCC;yDCG,qBD;6DEC,qBF;4DGC,kDH;8DIC,kDJ;SDW;KVE;IgBW;qBCM,SD;sBEG,SF;wBLE;0DQK,qBR;6DIC,qDJ;SKI;yBLC;2DSI,qBT;uDIC,uDJ;SKK;KhBE;IqBE;mDCC,4BD;KrBC;IuBwB;wDCE;oDCG;iBDK;SDM;KvBC;I0BE;K1BE;IiBE;KjBE;IkBE;KlBE;I2BE;K3BE;I4BE;K5BE;CFC"}},"type":"js/module"}]}