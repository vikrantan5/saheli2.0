{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":31,"index":308}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./utils/fetchData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":374},"end":{"line":4,"column":46,"index":420}}],"key":"bvuZtUrCBORS7e0mnZMXcup8nyI=","exportNames":["*"]}},{"name":"./xmlTags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":33,"index":454}}],"key":"UjGGlBNdDx1pDIGgBuGLg90Be9Q=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgFromXml = exports.SvgFromUri = void 0;\n  exports.SvgUri = SvgUri;\n  exports.SvgXml = SvgXml;\n  exports.astToReact = astToReact;\n  exports.camelCase = void 0;\n  exports.getStyle = getStyle;\n  exports.parse = parse;\n  Object.defineProperty(exports, \"tags\", {\n    enumerable: true,\n    get: function () {\n      return _xmlTags.tags;\n    }\n  });\n  var _react = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var React = _react;\n  var _fetchData = require(_dependencyMap[1], \"./utils/fetchData\");\n  var _xmlTags = require(_dependencyMap[2], \"./xmlTags\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function missingTag() {\n    return null;\n  }\n  function SvgAst({\n    ast,\n    override\n  }) {\n    if (!ast) {\n      return null;\n    }\n    const {\n      props,\n      children\n    } = ast;\n    const Svg = _xmlTags.tags.svg;\n    return /*#__PURE__*/React.createElement(Svg, _extends({}, props, override), children);\n  }\n  const err = console.error.bind(console);\n  function SvgXml(props) {\n    const {\n      onError = err,\n      xml,\n      override,\n      fallback\n    } = props;\n    try {\n      const ast = (0, _react.useMemo)(() => xml !== null ? parse(xml) : null, [xml]);\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: override || props\n      });\n    } catch (error) {\n      onError(error);\n      return fallback ?? null;\n    }\n  }\n  function SvgUri(props) {\n    const {\n      onError = err,\n      uri,\n      onLoad,\n      fallback\n    } = props;\n    const [xml, setXml] = (0, _react.useState)(null);\n    const [isError, setIsError] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      uri ? (0, _fetchData.fetchText)(uri).then(data => {\n        setXml(data);\n        isError && setIsError(false);\n        onLoad === null || onLoad === void 0 || onLoad();\n      }).catch(e => {\n        onError(e);\n        setIsError(true);\n      }) : setXml(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onError, uri, onLoad]);\n    if (isError) {\n      return fallback ?? null;\n    }\n    return /*#__PURE__*/React.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      fallback: fallback\n    });\n  }\n\n  // Extending Component is required for Animated support.\n\n  class SvgFromXml extends _react.Component {\n    state = {\n      ast: null\n    };\n    componentDidMount() {\n      this.parse(this.props.xml);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        xml\n      } = this.props;\n      if (xml !== prevProps.xml) {\n        this.parse(xml);\n      }\n    }\n    parse(xml) {\n      const {\n        onError = err\n      } = this.props;\n      try {\n        this.setState({\n          ast: xml ? parse(xml) : null\n        });\n      } catch (e) {\n        const error = e;\n        onError({\n          ...error,\n          message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n        });\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          ast\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: props.override || props\n      });\n    }\n  }\n  exports.SvgFromXml = SvgFromXml;\n  class SvgFromUri extends _react.Component {\n    state = {\n      xml: null\n    };\n    componentDidMount() {\n      this.fetch(this.props.uri);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        uri\n      } = this.props;\n      if (uri !== prevProps.uri) {\n        this.fetch(uri);\n      }\n    }\n    async fetch(uri) {\n      try {\n        this.setState({\n          xml: uri ? await (0, _fetchData.fetchText)(uri) : null\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          xml\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgFromXml, {\n        xml: xml,\n        override: props,\n        onError: props.onError\n      });\n    }\n  }\n  exports.SvgFromUri = SvgFromUri;\n  const upperCase = (_match, letter) => letter.toUpperCase();\n  const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\n  exports.camelCase = camelCase;\n  function getStyle(string) {\n    const style = {};\n    const declarations = string.split(';').filter(v => v.trim());\n    const {\n      length\n    } = declarations;\n    for (let i = 0; i < length; i++) {\n      const declaration = declarations[i];\n      if (declaration.length !== 0) {\n        const split = declaration.split(':');\n        const property = split[0];\n        const value = split[1];\n        style[camelCase(property.trim())] = value.trim();\n      }\n    }\n    return style;\n  }\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      const {\n        Tag,\n        props,\n        children\n      } = value;\n      if (props !== null && props !== void 0 && props.class) {\n        props.className = props.class;\n        delete props.class;\n      }\n      return /*#__PURE__*/React.createElement(Tag, _extends({\n        key: index\n      }, props), children.map(astToReact));\n    }\n    return value;\n  }\n\n  // slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\n  function repeat(str, i) {\n    let result = '';\n    while (i--) {\n      result += str;\n    }\n    return result;\n  }\n  const toSpaces = tabs => repeat('  ', tabs.length);\n  function locate(source, i) {\n    const lines = source.split('\\n');\n    const nLines = lines.length;\n    let column = i;\n    let line = 0;\n    for (; line < nLines; line++) {\n      const {\n        length\n      } = lines[line];\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n    const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    const beforeExec = /(^|\\n).*$/.exec(before);\n    const beforeLine = beforeExec && beforeExec[0] || '';\n    const after = source.slice(i);\n    const afterExec = /.*(\\n|$)/.exec(after);\n    const afterLine = afterExec && afterExec[0];\n    const pad = repeat(' ', beforeLine.length);\n    const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n    return {\n      line,\n      column,\n      snippet\n    };\n  }\n  const validNameCharacters = /[a-zA-Z0-9:_-]/;\n  const commentStart = /<!--/;\n  const whitespace = /[\\s\\t\\r\\n]/;\n  const quotemarks = /['\"]/;\n  function parse(source, middleware) {\n    const length = source.length;\n    let currentElement = null;\n    let state = metadata;\n    let children = null;\n    let root;\n    const stack = [];\n    function error(message) {\n      const {\n        line,\n        column,\n        snippet\n      } = locate(source, i);\n      throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n    }\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n        i++;\n      }\n      return neutral();\n    }\n    function neutral() {\n      let text = '';\n      let char;\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n      if (source[i] === '<') {\n        return openingTag;\n      }\n      return neutral;\n    }\n    function openingTag() {\n      const char = source[i];\n      if (char === '?') {\n        return neutral;\n      } // <?xml...\n\n      if (char === '!') {\n        const start = i + 1;\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n        const end = i + 8;\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n      if (char === '/') {\n        return closingTag;\n      }\n      const tag = getName();\n      const props = {};\n      const element = {\n        tag,\n        props,\n        children: [],\n        parent: currentElement,\n        Tag: _xmlTags.tags[tag] || missingTag\n      };\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n      getAttributes(props);\n      const {\n        style\n      } = props;\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n      let selfClosing = false;\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      if (!selfClosing) {\n        currentElement = element;\n        ({\n          children\n        } = element);\n        stack.push(element);\n      }\n      return neutral;\n    }\n    function comment() {\n      const index = source.indexOf('-->', i);\n      if (!~index) {\n        error('expected -->');\n      }\n      i = index + 2;\n      return neutral;\n    }\n    function cdata() {\n      const index = source.indexOf(']]>', i);\n      if (!~index) {\n        error('expected ]]>');\n      }\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n    function closingTag() {\n      const tag = getName();\n      if (!tag) {\n        error('Expected tag name');\n      }\n      if (currentElement && tag !== currentElement.tag) {\n        error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n      }\n      allowSpaces();\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n      if (currentElement) {\n        ({\n          children\n        } = currentElement);\n      }\n      return neutral;\n    }\n    function getName() {\n      let name = '';\n      let char;\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n      return name;\n    }\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n        allowSpaces();\n        const name = getName();\n        if (!name) {\n          return;\n        }\n        let value = true;\n        allowSpaces();\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n          if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n        props[camelCase(name)] = value;\n      }\n    }\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n    function getUnquotedAttributeValue() {\n      let value = '';\n      do {\n        const char = source[i];\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n        value += char;\n        i += 1;\n      } while (i < length);\n      return value;\n    }\n    function getQuotedAttributeValue() {\n      const quotemark = source[i++];\n      let value = '';\n      let escaped = false;\n      while (i < length) {\n        const char = source[i++];\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n        value += escaped ? `\\\\${char}` : char;\n        escaped = false;\n      }\n      return value;\n    }\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n    let i = 0;\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n      state = state();\n      i += 1;\n    }\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n    if (root) {\n      const xml = (middleware ? middleware(root) : root) || root;\n      const ast = xml.children.map(astToReact);\n      const jsx = xml;\n      jsx.children = ast;\n      return jsx;\n    }\n    return null;\n  }\n});","lineCount":490,"map":[[19,2,2,0],[19,6,2,0,"_react"],[19,12,2,0],[19,15,2,0,"_interopRequireWildcard"],[19,38,2,0],[19,39,2,0,"require"],[19,46,2,0],[19,47,2,0,"_dependencyMap"],[19,61,2,0],[20,2,2,31],[20,6,2,31,"React"],[20,11,2,31],[20,14,2,31,"_react"],[20,20,2,31],[21,2,4,0],[21,6,4,0,"_fetchData"],[21,16,4,0],[21,19,4,0,"require"],[21,26,4,0],[21,27,4,0,"_dependencyMap"],[21,41,4,0],[22,2,5,0],[22,6,5,0,"_xmlTags"],[22,14,5,0],[22,17,5,0,"require"],[22,24,5,0],[22,25,5,0,"_dependencyMap"],[22,39,5,0],[23,2,5,33],[23,11,5,33,"_interopRequireWildcard"],[23,35,5,33,"e"],[23,36,5,33],[23,38,5,33,"t"],[23,39,5,33],[23,68,5,33,"WeakMap"],[23,75,5,33],[23,81,5,33,"r"],[23,82,5,33],[23,89,5,33,"WeakMap"],[23,96,5,33],[23,100,5,33,"n"],[23,101,5,33],[23,108,5,33,"WeakMap"],[23,115,5,33],[23,127,5,33,"_interopRequireWildcard"],[23,150,5,33],[23,162,5,33,"_interopRequireWildcard"],[23,163,5,33,"e"],[23,164,5,33],[23,166,5,33,"t"],[23,167,5,33],[23,176,5,33,"t"],[23,177,5,33],[23,181,5,33,"e"],[23,182,5,33],[23,186,5,33,"e"],[23,187,5,33],[23,188,5,33,"__esModule"],[23,198,5,33],[23,207,5,33,"e"],[23,208,5,33],[23,214,5,33,"o"],[23,215,5,33],[23,217,5,33,"i"],[23,218,5,33],[23,220,5,33,"f"],[23,221,5,33],[23,226,5,33,"__proto__"],[23,235,5,33],[23,243,5,33,"default"],[23,250,5,33],[23,252,5,33,"e"],[23,253,5,33],[23,270,5,33,"e"],[23,271,5,33],[23,294,5,33,"e"],[23,295,5,33],[23,320,5,33,"e"],[23,321,5,33],[23,330,5,33,"f"],[23,331,5,33],[23,337,5,33,"o"],[23,338,5,33],[23,341,5,33,"t"],[23,342,5,33],[23,345,5,33,"n"],[23,346,5,33],[23,349,5,33,"r"],[23,350,5,33],[23,358,5,33,"o"],[23,359,5,33],[23,360,5,33,"has"],[23,363,5,33],[23,364,5,33,"e"],[23,365,5,33],[23,375,5,33,"o"],[23,376,5,33],[23,377,5,33,"get"],[23,380,5,33],[23,381,5,33,"e"],[23,382,5,33],[23,385,5,33,"o"],[23,386,5,33],[23,387,5,33,"set"],[23,390,5,33],[23,391,5,33,"e"],[23,392,5,33],[23,394,5,33,"f"],[23,395,5,33],[23,411,5,33,"t"],[23,412,5,33],[23,416,5,33,"e"],[23,417,5,33],[23,433,5,33,"t"],[23,434,5,33],[23,441,5,33,"hasOwnProperty"],[23,455,5,33],[23,456,5,33,"call"],[23,460,5,33],[23,461,5,33,"e"],[23,462,5,33],[23,464,5,33,"t"],[23,465,5,33],[23,472,5,33,"i"],[23,473,5,33],[23,477,5,33,"o"],[23,478,5,33],[23,481,5,33,"Object"],[23,487,5,33],[23,488,5,33,"defineProperty"],[23,502,5,33],[23,507,5,33,"Object"],[23,513,5,33],[23,514,5,33,"getOwnPropertyDescriptor"],[23,538,5,33],[23,539,5,33,"e"],[23,540,5,33],[23,542,5,33,"t"],[23,543,5,33],[23,550,5,33,"i"],[23,551,5,33],[23,552,5,33,"get"],[23,555,5,33],[23,559,5,33,"i"],[23,560,5,33],[23,561,5,33,"set"],[23,564,5,33],[23,568,5,33,"o"],[23,569,5,33],[23,570,5,33,"f"],[23,571,5,33],[23,573,5,33,"t"],[23,574,5,33],[23,576,5,33,"i"],[23,577,5,33],[23,581,5,33,"f"],[23,582,5,33],[23,583,5,33,"t"],[23,584,5,33],[23,588,5,33,"e"],[23,589,5,33],[23,590,5,33,"t"],[23,591,5,33],[23,602,5,33,"f"],[23,603,5,33],[23,608,5,33,"e"],[23,609,5,33],[23,611,5,33,"t"],[23,612,5,33],[24,2,1,0],[24,11,1,9,"_extends"],[24,19,1,17,"_extends"],[24,20,1,17],[24,22,1,20],[25,4,1,22],[25,11,1,29,"_extends"],[25,19,1,37],[25,22,1,40,"Object"],[25,28,1,46],[25,29,1,47,"assign"],[25,35,1,53],[25,38,1,56,"Object"],[25,44,1,62],[25,45,1,63,"assign"],[25,51,1,69],[25,52,1,70,"bind"],[25,56,1,74],[25,57,1,75],[25,58,1,76],[25,61,1,79],[25,71,1,89,"n"],[25,72,1,90],[25,74,1,92],[26,6,1,94],[26,11,1,99],[26,15,1,103,"e"],[26,16,1,104],[26,19,1,107],[26,20,1,108],[26,22,1,110,"e"],[26,23,1,111],[26,26,1,114,"arguments"],[26,35,1,123],[26,36,1,124,"length"],[26,42,1,130],[26,44,1,132,"e"],[26,45,1,133],[26,47,1,135],[26,49,1,137],[27,8,1,139],[27,12,1,143,"t"],[27,13,1,144],[27,16,1,147,"arguments"],[27,25,1,156],[27,26,1,157,"e"],[27,27,1,158],[27,28,1,159],[28,8,1,161],[28,13,1,166],[28,17,1,170,"r"],[28,18,1,171],[28,22,1,175,"t"],[28,23,1,176],[28,25,1,178],[28,26,1,179],[28,27,1,180],[28,28,1,181],[28,30,1,183,"hasOwnProperty"],[28,44,1,197],[28,45,1,198,"call"],[28,49,1,202],[28,50,1,203,"t"],[28,51,1,204],[28,53,1,206,"r"],[28,54,1,207],[28,55,1,208],[28,60,1,213,"n"],[28,61,1,214],[28,62,1,215,"r"],[28,63,1,216],[28,64,1,217],[28,67,1,220,"t"],[28,68,1,221],[28,69,1,222,"r"],[28,70,1,223],[28,71,1,224],[28,72,1,225],[29,6,1,227],[30,6,1,229],[30,13,1,236,"n"],[30,14,1,237],[31,4,1,239],[31,5,1,240],[31,7,1,242,"_extends"],[31,15,1,250],[31,16,1,251,"apply"],[31,21,1,256],[31,22,1,257],[31,26,1,261],[31,28,1,263,"arguments"],[31,37,1,272],[31,38,1,273],[32,2,1,275],[33,2,6,0],[33,11,6,9,"missingTag"],[33,21,6,19,"missingTag"],[33,22,6,19],[33,24,6,22],[34,4,7,2],[34,11,7,9],[34,15,7,13],[35,2,8,0],[36,2,9,7],[36,11,9,16,"SvgAst"],[36,17,9,22,"SvgAst"],[36,18,9,23],[37,4,10,2,"ast"],[37,7,10,5],[38,4,11,2,"override"],[39,2,12,0],[39,3,12,1],[39,5,12,3],[40,4,13,2],[40,8,13,6],[40,9,13,7,"ast"],[40,12,13,10],[40,14,13,12],[41,6,14,4],[41,13,14,11],[41,17,14,15],[42,4,15,2],[43,4,16,2],[43,10,16,8],[44,6,17,4,"props"],[44,11,17,9],[45,6,18,4,"children"],[46,4,19,2],[46,5,19,3],[46,8,19,6,"ast"],[46,11,19,9],[47,4,20,2],[47,10,20,8,"Svg"],[47,13,20,11],[47,16,20,14,"tags"],[47,29,20,18],[47,30,20,19,"svg"],[47,33,20,22],[48,4,21,2],[48,11,21,9],[48,24,21,22,"React"],[48,29,21,27],[48,30,21,28,"createElement"],[48,43,21,41],[48,44,21,42,"Svg"],[48,47,21,45],[48,49,21,47,"_extends"],[48,57,21,55],[48,58,21,56],[48,59,21,57],[48,60,21,58],[48,62,21,60,"props"],[48,67,21,65],[48,69,21,67,"override"],[48,77,21,75],[48,78,21,76],[48,80,21,78,"children"],[48,88,21,86],[48,89,21,87],[49,2,22,0],[50,2,23,0],[50,8,23,6,"err"],[50,11,23,9],[50,14,23,12,"console"],[50,21,23,19],[50,22,23,20,"error"],[50,27,23,25],[50,28,23,26,"bind"],[50,32,23,30],[50,33,23,31,"console"],[50,40,23,38],[50,41,23,39],[51,2,24,7],[51,11,24,16,"SvgXml"],[51,17,24,22,"SvgXml"],[51,18,24,23,"props"],[51,23,24,28],[51,25,24,30],[52,4,25,2],[52,10,25,8],[53,6,26,4,"onError"],[53,13,26,11],[53,16,26,14,"err"],[53,19,26,17],[54,6,27,4,"xml"],[54,9,27,7],[55,6,28,4,"override"],[55,14,28,12],[56,6,29,4,"fallback"],[57,4,30,2],[57,5,30,3],[57,8,30,6,"props"],[57,13,30,11],[58,4,31,2],[58,8,31,6],[59,6,32,4],[59,12,32,10,"ast"],[59,15,32,13],[59,18,32,16],[59,22,32,16,"useMemo"],[59,36,32,23],[59,38,32,24],[59,44,32,30,"xml"],[59,47,32,33],[59,52,32,38],[59,56,32,42],[59,59,32,45,"parse"],[59,64,32,50],[59,65,32,51,"xml"],[59,68,32,54],[59,69,32,55],[59,72,32,58],[59,76,32,62],[59,78,32,64],[59,79,32,65,"xml"],[59,82,32,68],[59,83,32,69],[59,84,32,70],[60,6,33,4],[60,13,33,11],[60,26,33,24,"React"],[60,31,33,29],[60,32,33,30,"createElement"],[60,45,33,43],[60,46,33,44,"SvgAst"],[60,52,33,50],[60,54,33,52],[61,8,34,6,"ast"],[61,11,34,9],[61,13,34,11,"ast"],[61,16,34,14],[62,8,35,6,"override"],[62,16,35,14],[62,18,35,16,"override"],[62,26,35,24],[62,30,35,28,"props"],[63,6,36,4],[63,7,36,5],[63,8,36,6],[64,4,37,2],[64,5,37,3],[64,6,37,4],[64,13,37,11,"error"],[64,18,37,16],[64,20,37,18],[65,6,38,4,"onError"],[65,13,38,11],[65,14,38,12,"error"],[65,19,38,17],[65,20,38,18],[66,6,39,4],[66,13,39,11,"fallback"],[66,21,39,19],[66,25,39,23],[66,29,39,27],[67,4,40,2],[68,2,41,0],[69,2,42,7],[69,11,42,16,"SvgUri"],[69,17,42,22,"SvgUri"],[69,18,42,23,"props"],[69,23,42,28],[69,25,42,30],[70,4,43,2],[70,10,43,8],[71,6,44,4,"onError"],[71,13,44,11],[71,16,44,14,"err"],[71,19,44,17],[72,6,45,4,"uri"],[72,9,45,7],[73,6,46,4,"onLoad"],[73,12,46,10],[74,6,47,4,"fallback"],[75,4,48,2],[75,5,48,3],[75,8,48,6,"props"],[75,13,48,11],[76,4,49,2],[76,10,49,8],[76,11,49,9,"xml"],[76,14,49,12],[76,16,49,14,"setXml"],[76,22,49,20],[76,23,49,21],[76,26,49,24],[76,30,49,24,"useState"],[76,45,49,32],[76,47,49,33],[76,51,49,37],[76,52,49,38],[77,4,50,2],[77,10,50,8],[77,11,50,9,"isError"],[77,18,50,16],[77,20,50,18,"setIsError"],[77,30,50,28],[77,31,50,29],[77,34,50,32],[77,38,50,32,"useState"],[77,53,50,40],[77,55,50,41],[77,60,50,46],[77,61,50,47],[78,4,51,2],[78,8,51,2,"useEffect"],[78,24,51,11],[78,26,51,12],[78,32,51,18],[79,6,52,4,"uri"],[79,9,52,7],[79,12,52,10],[79,16,52,10,"fetchText"],[79,36,52,19],[79,38,52,20,"uri"],[79,41,52,23],[79,42,52,24],[79,43,52,25,"then"],[79,47,52,29],[79,48,52,30,"data"],[79,52,52,34],[79,56,52,38],[80,8,53,6,"setXml"],[80,14,53,12],[80,15,53,13,"data"],[80,19,53,17],[80,20,53,18],[81,8,54,6,"isError"],[81,15,54,13],[81,19,54,17,"setIsError"],[81,29,54,27],[81,30,54,28],[81,35,54,33],[81,36,54,34],[82,8,55,6,"onLoad"],[82,14,55,12],[82,19,55,17],[82,23,55,21],[82,27,55,25,"onLoad"],[82,33,55,31],[82,38,55,36],[82,43,55,41],[82,44,55,42],[82,48,55,46,"onLoad"],[82,54,55,52],[82,55,55,53],[82,56,55,54],[83,6,56,4],[83,7,56,5],[83,8,56,6],[83,9,56,7,"catch"],[83,14,56,12],[83,15,56,13,"e"],[83,16,56,14],[83,20,56,18],[84,8,57,6,"onError"],[84,15,57,13],[84,16,57,14,"e"],[84,17,57,15],[84,18,57,16],[85,8,58,6,"setIsError"],[85,18,58,16],[85,19,58,17],[85,23,58,21],[85,24,58,22],[86,6,59,4],[86,7,59,5],[86,8,59,6],[86,11,59,9,"setXml"],[86,17,59,15],[86,18,59,16],[86,22,59,20],[86,23,59,21],[87,6,60,4],[88,4,61,2],[88,5,61,3],[88,7,61,5],[88,8,61,6,"onError"],[88,15,61,13],[88,17,61,15,"uri"],[88,20,61,18],[88,22,61,20,"onLoad"],[88,28,61,26],[88,29,61,27],[88,30,61,28],[89,4,62,2],[89,8,62,6,"isError"],[89,15,62,13],[89,17,62,15],[90,6,63,4],[90,13,63,11,"fallback"],[90,21,63,19],[90,25,63,23],[90,29,63,27],[91,4,64,2],[92,4,65,2],[92,11,65,9],[92,24,65,22,"React"],[92,29,65,27],[92,30,65,28,"createElement"],[92,43,65,41],[92,44,65,42,"SvgXml"],[92,50,65,48],[92,52,65,50],[93,6,66,4,"xml"],[93,9,66,7],[93,11,66,9,"xml"],[93,14,66,12],[94,6,67,4,"override"],[94,14,67,12],[94,16,67,14,"props"],[94,21,67,19],[95,6,68,4,"fallback"],[95,14,68,12],[95,16,68,14,"fallback"],[96,4,69,2],[96,5,69,3],[96,6,69,4],[97,2,70,0],[99,2,72,0],[101,2,74,7],[101,8,74,13,"SvgFromXml"],[101,18,74,23],[101,27,74,32,"Component"],[101,43,74,41],[101,44,74,42],[102,4,75,2,"state"],[102,9,75,7],[102,12,75,10],[103,6,76,4,"ast"],[103,9,76,7],[103,11,76,9],[104,4,77,2],[104,5,77,3],[105,4,78,2,"componentDidMount"],[105,21,78,19,"componentDidMount"],[105,22,78,19],[105,24,78,22],[106,6,79,4],[106,10,79,8],[106,11,79,9,"parse"],[106,16,79,14],[106,17,79,15],[106,21,79,19],[106,22,79,20,"props"],[106,27,79,25],[106,28,79,26,"xml"],[106,31,79,29],[106,32,79,30],[107,4,80,2],[108,4,81,2,"componentDidUpdate"],[108,22,81,20,"componentDidUpdate"],[108,23,81,21,"prevProps"],[108,32,81,30],[108,34,81,32],[109,6,82,4],[109,12,82,10],[110,8,83,6,"xml"],[111,6,84,4],[111,7,84,5],[111,10,84,8],[111,14,84,12],[111,15,84,13,"props"],[111,20,84,18],[112,6,85,4],[112,10,85,8,"xml"],[112,13,85,11],[112,18,85,16,"prevProps"],[112,27,85,25],[112,28,85,26,"xml"],[112,31,85,29],[112,33,85,31],[113,8,86,6],[113,12,86,10],[113,13,86,11,"parse"],[113,18,86,16],[113,19,86,17,"xml"],[113,22,86,20],[113,23,86,21],[114,6,87,4],[115,4,88,2],[116,4,89,2,"parse"],[116,9,89,7,"parse"],[116,10,89,8,"xml"],[116,13,89,11],[116,15,89,13],[117,6,90,4],[117,12,90,10],[118,8,91,6,"onError"],[118,15,91,13],[118,18,91,16,"err"],[119,6,92,4],[119,7,92,5],[119,10,92,8],[119,14,92,12],[119,15,92,13,"props"],[119,20,92,18],[120,6,93,4],[120,10,93,8],[121,8,94,6],[121,12,94,10],[121,13,94,11,"setState"],[121,21,94,19],[121,22,94,20],[122,10,95,8,"ast"],[122,13,95,11],[122,15,95,13,"xml"],[122,18,95,16],[122,21,95,19,"parse"],[122,26,95,24],[122,27,95,25,"xml"],[122,30,95,28],[122,31,95,29],[122,34,95,32],[123,8,96,6],[123,9,96,7],[123,10,96,8],[124,6,97,4],[124,7,97,5],[124,8,97,6],[124,15,97,13,"e"],[124,16,97,14],[124,18,97,16],[125,8,98,6],[125,14,98,12,"error"],[125,19,98,17],[125,22,98,20,"e"],[125,23,98,21],[126,8,99,6,"onError"],[126,15,99,13],[126,16,99,14],[127,10,100,8],[127,13,100,11,"error"],[127,18,100,16],[128,10,101,8,"message"],[128,17,101,15],[128,19,101,17],[128,58,101,56,"error"],[128,63,101,61],[128,64,101,62,"message"],[128,71,101,69],[129,8,102,6],[129,9,102,7],[129,10,102,8],[130,6,103,4],[131,4,104,2],[132,4,105,2,"render"],[132,10,105,8,"render"],[132,11,105,8],[132,13,105,11],[133,6,106,4],[133,12,106,10],[134,8,107,6,"props"],[134,13,107,11],[135,8,108,6,"state"],[135,13,108,11],[135,15,108,13],[136,10,109,8,"ast"],[137,8,110,6],[138,6,111,4],[138,7,111,5],[138,10,111,8],[138,14,111,12],[139,6,112,4],[139,13,112,11],[139,26,112,24,"React"],[139,31,112,29],[139,32,112,30,"createElement"],[139,45,112,43],[139,46,112,44,"SvgAst"],[139,52,112,50],[139,54,112,52],[140,8,113,6,"ast"],[140,11,113,9],[140,13,113,11,"ast"],[140,16,113,14],[141,8,114,6,"override"],[141,16,114,14],[141,18,114,16,"props"],[141,23,114,21],[141,24,114,22,"override"],[141,32,114,30],[141,36,114,34,"props"],[142,6,115,4],[142,7,115,5],[142,8,115,6],[143,4,116,2],[144,2,117,0],[145,2,117,1,"exports"],[145,9,117,1],[145,10,117,1,"SvgFromXml"],[145,20,117,1],[145,23,117,1,"SvgFromXml"],[145,33,117,1],[146,2,118,7],[146,8,118,13,"SvgFromUri"],[146,18,118,23],[146,27,118,32,"Component"],[146,43,118,41],[146,44,118,42],[147,4,119,2,"state"],[147,9,119,7],[147,12,119,10],[148,6,120,4,"xml"],[148,9,120,7],[148,11,120,9],[149,4,121,2],[149,5,121,3],[150,4,122,2,"componentDidMount"],[150,21,122,19,"componentDidMount"],[150,22,122,19],[150,24,122,22],[151,6,123,4],[151,10,123,8],[151,11,123,9,"fetch"],[151,16,123,14],[151,17,123,15],[151,21,123,19],[151,22,123,20,"props"],[151,27,123,25],[151,28,123,26,"uri"],[151,31,123,29],[151,32,123,30],[152,4,124,2],[153,4,125,2,"componentDidUpdate"],[153,22,125,20,"componentDidUpdate"],[153,23,125,21,"prevProps"],[153,32,125,30],[153,34,125,32],[154,6,126,4],[154,12,126,10],[155,8,127,6,"uri"],[156,6,128,4],[156,7,128,5],[156,10,128,8],[156,14,128,12],[156,15,128,13,"props"],[156,20,128,18],[157,6,129,4],[157,10,129,8,"uri"],[157,13,129,11],[157,18,129,16,"prevProps"],[157,27,129,25],[157,28,129,26,"uri"],[157,31,129,29],[157,33,129,31],[158,8,130,6],[158,12,130,10],[158,13,130,11,"fetch"],[158,18,130,16],[158,19,130,17,"uri"],[158,22,130,20],[158,23,130,21],[159,6,131,4],[160,4,132,2],[161,4,133,2],[161,10,133,8,"fetch"],[161,15,133,13,"fetch"],[161,16,133,14,"uri"],[161,19,133,17],[161,21,133,19],[162,6,134,4],[162,10,134,8],[163,8,135,6],[163,12,135,10],[163,13,135,11,"setState"],[163,21,135,19],[163,22,135,20],[164,10,136,8,"xml"],[164,13,136,11],[164,15,136,13,"uri"],[164,18,136,16],[164,21,136,19],[164,27,136,25],[164,31,136,25,"fetchText"],[164,51,136,34],[164,53,136,35,"uri"],[164,56,136,38],[164,57,136,39],[164,60,136,42],[165,8,137,6],[165,9,137,7],[165,10,137,8],[166,6,138,4],[166,7,138,5],[166,8,138,6],[166,15,138,13,"e"],[166,16,138,14],[166,18,138,16],[167,8,139,6,"console"],[167,15,139,13],[167,16,139,14,"error"],[167,21,139,19],[167,22,139,20,"e"],[167,23,139,21],[167,24,139,22],[168,6,140,4],[169,4,141,2],[170,4,142,2,"render"],[170,10,142,8,"render"],[170,11,142,8],[170,13,142,11],[171,6,143,4],[171,12,143,10],[172,8,144,6,"props"],[172,13,144,11],[173,8,145,6,"state"],[173,13,145,11],[173,15,145,13],[174,10,146,8,"xml"],[175,8,147,6],[176,6,148,4],[176,7,148,5],[176,10,148,8],[176,14,148,12],[177,6,149,4],[177,13,149,11],[177,26,149,24,"React"],[177,31,149,29],[177,32,149,30,"createElement"],[177,45,149,43],[177,46,149,44,"SvgFromXml"],[177,56,149,54],[177,58,149,56],[178,8,150,6,"xml"],[178,11,150,9],[178,13,150,11,"xml"],[178,16,150,14],[179,8,151,6,"override"],[179,16,151,14],[179,18,151,16,"props"],[179,23,151,21],[180,8,152,6,"onError"],[180,15,152,13],[180,17,152,15,"props"],[180,22,152,20],[180,23,152,21,"onError"],[181,6,153,4],[181,7,153,5],[181,8,153,6],[182,4,154,2],[183,2,155,0],[184,2,155,1,"exports"],[184,9,155,1],[184,10,155,1,"SvgFromUri"],[184,20,155,1],[184,23,155,1,"SvgFromUri"],[184,33,155,1],[185,2,156,0],[185,8,156,6,"upperCase"],[185,17,156,15],[185,20,156,18,"upperCase"],[185,21,156,19,"_match"],[185,27,156,25],[185,29,156,27,"letter"],[185,35,156,33],[185,40,156,38,"letter"],[185,46,156,44],[185,47,156,45,"toUpperCase"],[185,58,156,56],[185,59,156,57],[185,60,156,58],[186,2,157,7],[186,8,157,13,"camelCase"],[186,17,157,22],[186,20,157,25,"phrase"],[186,26,157,31],[186,30,157,35,"phrase"],[186,36,157,41],[186,37,157,42,"replace"],[186,44,157,49],[186,45,157,50],[186,59,157,64],[186,61,157,66,"upperCase"],[186,70,157,75],[186,71,157,76],[187,2,157,77,"exports"],[187,9,157,77],[187,10,157,77,"camelCase"],[187,19,157,77],[187,22,157,77,"camelCase"],[187,31,157,77],[188,2,158,7],[188,11,158,16,"getStyle"],[188,19,158,24,"getStyle"],[188,20,158,25,"string"],[188,26,158,31],[188,28,158,33],[189,4,159,2],[189,10,159,8,"style"],[189,15,159,13],[189,18,159,16],[189,19,159,17],[189,20,159,18],[190,4,160,2],[190,10,160,8,"declarations"],[190,22,160,20],[190,25,160,23,"string"],[190,31,160,29],[190,32,160,30,"split"],[190,37,160,35],[190,38,160,36],[190,41,160,39],[190,42,160,40],[190,43,160,41,"filter"],[190,49,160,47],[190,50,160,48,"v"],[190,51,160,49],[190,55,160,53,"v"],[190,56,160,54],[190,57,160,55,"trim"],[190,61,160,59],[190,62,160,60],[190,63,160,61],[190,64,160,62],[191,4,161,2],[191,10,161,8],[192,6,162,4,"length"],[193,4,163,2],[193,5,163,3],[193,8,163,6,"declarations"],[193,20,163,18],[194,4,164,2],[194,9,164,7],[194,13,164,11,"i"],[194,14,164,12],[194,17,164,15],[194,18,164,16],[194,20,164,18,"i"],[194,21,164,19],[194,24,164,22,"length"],[194,30,164,28],[194,32,164,30,"i"],[194,33,164,31],[194,35,164,33],[194,37,164,35],[195,6,165,4],[195,12,165,10,"declaration"],[195,23,165,21],[195,26,165,24,"declarations"],[195,38,165,36],[195,39,165,37,"i"],[195,40,165,38],[195,41,165,39],[196,6,166,4],[196,10,166,8,"declaration"],[196,21,166,19],[196,22,166,20,"length"],[196,28,166,26],[196,33,166,31],[196,34,166,32],[196,36,166,34],[197,8,167,6],[197,14,167,12,"split"],[197,19,167,17],[197,22,167,20,"declaration"],[197,33,167,31],[197,34,167,32,"split"],[197,39,167,37],[197,40,167,38],[197,43,167,41],[197,44,167,42],[198,8,168,6],[198,14,168,12,"property"],[198,22,168,20],[198,25,168,23,"split"],[198,30,168,28],[198,31,168,29],[198,32,168,30],[198,33,168,31],[199,8,169,6],[199,14,169,12,"value"],[199,19,169,17],[199,22,169,20,"split"],[199,27,169,25],[199,28,169,26],[199,29,169,27],[199,30,169,28],[200,8,170,6,"style"],[200,13,170,11],[200,14,170,12,"camelCase"],[200,23,170,21],[200,24,170,22,"property"],[200,32,170,30],[200,33,170,31,"trim"],[200,37,170,35],[200,38,170,36],[200,39,170,37],[200,40,170,38],[200,41,170,39],[200,44,170,42,"value"],[200,49,170,47],[200,50,170,48,"trim"],[200,54,170,52],[200,55,170,53],[200,56,170,54],[201,6,171,4],[202,4,172,2],[203,4,173,2],[203,11,173,9,"style"],[203,16,173,14],[204,2,174,0],[205,2,175,7],[205,11,175,16,"astToReact"],[205,21,175,26,"astToReact"],[205,22,175,27,"value"],[205,27,175,32],[205,29,175,34,"index"],[205,34,175,39],[205,36,175,41],[206,4,176,2],[206,8,176,6],[206,15,176,13,"value"],[206,20,176,18],[206,25,176,23],[206,33,176,31],[206,35,176,33],[207,6,177,4],[207,12,177,10],[208,8,178,6,"Tag"],[208,11,178,9],[209,8,179,6,"props"],[209,13,179,11],[210,8,180,6,"children"],[211,6,181,4],[211,7,181,5],[211,10,181,8,"value"],[211,15,181,13],[212,6,182,4],[212,10,182,8,"props"],[212,15,182,13],[212,20,182,18],[212,24,182,22],[212,28,182,26,"props"],[212,33,182,31],[212,38,182,36],[212,43,182,41],[212,44,182,42],[212,48,182,46,"props"],[212,53,182,51],[212,54,182,52,"class"],[212,59,182,57],[212,61,182,59],[213,8,183,6,"props"],[213,13,183,11],[213,14,183,12,"className"],[213,23,183,21],[213,26,183,24,"props"],[213,31,183,29],[213,32,183,30,"class"],[213,37,183,35],[214,8,184,6],[214,15,184,13,"props"],[214,20,184,18],[214,21,184,19,"class"],[214,26,184,24],[215,6,185,4],[216,6,186,4],[216,13,186,11],[216,26,186,24,"React"],[216,31,186,29],[216,32,186,30,"createElement"],[216,45,186,43],[216,46,186,44,"Tag"],[216,49,186,47],[216,51,186,49,"_extends"],[216,59,186,57],[216,60,186,58],[217,8,187,6,"key"],[217,11,187,9],[217,13,187,11,"index"],[218,6,188,4],[218,7,188,5],[218,9,188,7,"props"],[218,14,188,12],[218,15,188,13],[218,17,188,15,"children"],[218,25,188,23],[218,26,188,24,"map"],[218,29,188,27],[218,30,188,28,"astToReact"],[218,40,188,38],[218,41,188,39],[218,42,188,40],[219,4,189,2],[220,4,190,2],[220,11,190,9,"value"],[220,16,190,14],[221,2,191,0],[223,2,193,0],[225,2,195,0],[225,11,195,9,"repeat"],[225,17,195,15,"repeat"],[225,18,195,16,"str"],[225,21,195,19],[225,23,195,21,"i"],[225,24,195,22],[225,26,195,24],[226,4,196,2],[226,8,196,6,"result"],[226,14,196,12],[226,17,196,15],[226,19,196,17],[227,4,197,2],[227,11,197,9,"i"],[227,12,197,10],[227,14,197,12],[227,16,197,14],[228,6,198,4,"result"],[228,12,198,10],[228,16,198,14,"str"],[228,19,198,17],[229,4,199,2],[230,4,200,2],[230,11,200,9,"result"],[230,17,200,15],[231,2,201,0],[232,2,202,0],[232,8,202,6,"toSpaces"],[232,16,202,14],[232,19,202,17,"tabs"],[232,23,202,21],[232,27,202,25,"repeat"],[232,33,202,31],[232,34,202,32],[232,38,202,36],[232,40,202,38,"tabs"],[232,44,202,42],[232,45,202,43,"length"],[232,51,202,49],[232,52,202,50],[233,2,203,0],[233,11,203,9,"locate"],[233,17,203,15,"locate"],[233,18,203,16,"source"],[233,24,203,22],[233,26,203,24,"i"],[233,27,203,25],[233,29,203,27],[234,4,204,2],[234,10,204,8,"lines"],[234,15,204,13],[234,18,204,16,"source"],[234,24,204,22],[234,25,204,23,"split"],[234,30,204,28],[234,31,204,29],[234,35,204,33],[234,36,204,34],[235,4,205,2],[235,10,205,8,"nLines"],[235,16,205,14],[235,19,205,17,"lines"],[235,24,205,22],[235,25,205,23,"length"],[235,31,205,29],[236,4,206,2],[236,8,206,6,"column"],[236,14,206,12],[236,17,206,15,"i"],[236,18,206,16],[237,4,207,2],[237,8,207,6,"line"],[237,12,207,10],[237,15,207,13],[237,16,207,14],[238,4,208,2],[238,11,208,9,"line"],[238,15,208,13],[238,18,208,16,"nLines"],[238,24,208,22],[238,26,208,24,"line"],[238,30,208,28],[238,32,208,30],[238,34,208,32],[239,6,209,4],[239,12,209,10],[240,8,210,6,"length"],[241,6,211,4],[241,7,211,5],[241,10,211,8,"lines"],[241,15,211,13],[241,16,211,14,"line"],[241,20,211,18],[241,21,211,19],[242,6,212,4],[242,10,212,8,"column"],[242,16,212,14],[242,20,212,18,"length"],[242,26,212,24],[242,28,212,26],[243,8,213,6,"column"],[243,14,213,12],[243,18,213,16,"length"],[243,24,213,22],[244,6,214,4],[244,7,214,5],[244,13,214,11],[245,8,215,6],[246,6,216,4],[247,4,217,2],[248,4,218,2],[248,10,218,8,"before"],[248,16,218,14],[248,19,218,17,"source"],[248,25,218,23],[248,26,218,24,"slice"],[248,31,218,29],[248,32,218,30],[248,33,218,31],[248,35,218,33,"i"],[248,36,218,34],[248,37,218,35],[248,38,218,36,"replace"],[248,45,218,43],[248,46,218,44],[248,52,218,50],[248,54,218,52,"toSpaces"],[248,62,218,60],[248,63,218,61],[249,4,219,2],[249,10,219,8,"beforeExec"],[249,20,219,18],[249,23,219,21],[249,34,219,32],[249,35,219,33,"exec"],[249,39,219,37],[249,40,219,38,"before"],[249,46,219,44],[249,47,219,45],[250,4,220,2],[250,10,220,8,"beforeLine"],[250,20,220,18],[250,23,220,21,"beforeExec"],[250,33,220,31],[250,37,220,35,"beforeExec"],[250,47,220,45],[250,48,220,46],[250,49,220,47],[250,50,220,48],[250,54,220,52],[250,56,220,54],[251,4,221,2],[251,10,221,8,"after"],[251,15,221,13],[251,18,221,16,"source"],[251,24,221,22],[251,25,221,23,"slice"],[251,30,221,28],[251,31,221,29,"i"],[251,32,221,30],[251,33,221,31],[252,4,222,2],[252,10,222,8,"afterExec"],[252,19,222,17],[252,22,222,20],[252,32,222,30],[252,33,222,31,"exec"],[252,37,222,35],[252,38,222,36,"after"],[252,43,222,41],[252,44,222,42],[253,4,223,2],[253,10,223,8,"afterLine"],[253,19,223,17],[253,22,223,20,"afterExec"],[253,31,223,29],[253,35,223,33,"afterExec"],[253,44,223,42],[253,45,223,43],[253,46,223,44],[253,47,223,45],[254,4,224,2],[254,10,224,8,"pad"],[254,13,224,11],[254,16,224,14,"repeat"],[254,22,224,20],[254,23,224,21],[254,26,224,24],[254,28,224,26,"beforeLine"],[254,38,224,36],[254,39,224,37,"length"],[254,45,224,43],[254,46,224,44],[255,4,225,2],[255,10,225,8,"snippet"],[255,17,225,15],[255,20,225,18],[255,23,225,21,"beforeLine"],[255,33,225,31],[255,36,225,34,"afterLine"],[255,45,225,43],[255,50,225,48,"pad"],[255,53,225,51],[255,56,225,54],[256,4,226,2],[256,11,226,9],[257,6,227,4,"line"],[257,10,227,8],[258,6,228,4,"column"],[258,12,228,10],[259,6,229,4,"snippet"],[260,4,230,2],[260,5,230,3],[261,2,231,0],[262,2,232,0],[262,8,232,6,"validNameCharacters"],[262,27,232,25],[262,30,232,28],[262,46,232,44],[263,2,233,0],[263,8,233,6,"commentStart"],[263,20,233,18],[263,23,233,21],[263,29,233,27],[264,2,234,0],[264,8,234,6,"whitespace"],[264,18,234,16],[264,21,234,19],[264,33,234,31],[265,2,235,0],[265,8,235,6,"quotemarks"],[265,18,235,16],[265,21,235,19],[265,27,235,25],[266,2,236,7],[266,11,236,16,"parse"],[266,16,236,21,"parse"],[266,17,236,22,"source"],[266,23,236,28],[266,25,236,30,"middleware"],[266,35,236,40],[266,37,236,42],[267,4,237,2],[267,10,237,8,"length"],[267,16,237,14],[267,19,237,17,"source"],[267,25,237,23],[267,26,237,24,"length"],[267,32,237,30],[268,4,238,2],[268,8,238,6,"currentElement"],[268,22,238,20],[268,25,238,23],[268,29,238,27],[269,4,239,2],[269,8,239,6,"state"],[269,13,239,11],[269,16,239,14,"metadata"],[269,24,239,22],[270,4,240,2],[270,8,240,6,"children"],[270,16,240,14],[270,19,240,17],[270,23,240,21],[271,4,241,2],[271,8,241,6,"root"],[271,12,241,10],[272,4,242,2],[272,10,242,8,"stack"],[272,15,242,13],[272,18,242,16],[272,20,242,18],[273,4,243,2],[273,13,243,11,"error"],[273,18,243,16,"error"],[273,19,243,17,"message"],[273,26,243,24],[273,28,243,26],[274,6,244,4],[274,12,244,10],[275,8,245,6,"line"],[275,12,245,10],[276,8,246,6,"column"],[276,14,246,12],[277,8,247,6,"snippet"],[278,6,248,4],[278,7,248,5],[278,10,248,8,"locate"],[278,16,248,14],[278,17,248,15,"source"],[278,23,248,21],[278,25,248,23,"i"],[278,26,248,24],[278,27,248,25],[279,6,249,4],[279,12,249,10],[279,16,249,14,"Error"],[279,21,249,19],[279,22,249,20],[279,25,249,23,"message"],[279,32,249,30],[279,37,249,35,"line"],[279,41,249,39],[279,45,249,43,"column"],[279,51,249,49],[279,125,249,123,"snippet"],[279,132,249,130],[279,134,249,132],[279,135,249,133],[280,4,250,2],[281,4,251,2],[281,13,251,11,"metadata"],[281,21,251,19,"metadata"],[281,22,251,19],[281,24,251,22],[282,6,252,4],[282,13,252,11,"i"],[282,14,252,12],[282,17,252,15],[282,18,252,16],[282,21,252,19,"length"],[282,27,252,25],[282,32,252,30,"source"],[282,38,252,36],[282,39,252,37,"i"],[282,40,252,38],[282,41,252,39],[282,46,252,44],[282,49,252,47],[282,53,252,51],[282,55,252,53,"validNameCharacters"],[282,74,252,72],[282,75,252,73,"test"],[282,79,252,77],[282,80,252,78,"source"],[282,86,252,84],[282,87,252,85,"i"],[282,88,252,86],[282,91,252,89],[282,92,252,90],[282,93,252,91],[282,94,252,92],[282,98,252,96,"commentStart"],[282,110,252,108],[282,111,252,109,"test"],[282,115,252,113],[282,116,252,114,"source"],[282,122,252,120],[282,123,252,121,"slice"],[282,128,252,126],[282,129,252,127,"i"],[282,130,252,128],[282,132,252,130,"i"],[282,133,252,131],[282,136,252,134],[282,137,252,135],[282,138,252,136],[282,139,252,137],[282,140,252,138],[282,141,252,139],[282,143,252,141],[283,8,253,6,"i"],[283,9,253,7],[283,11,253,9],[284,6,254,4],[285,6,255,4],[285,13,255,11,"neutral"],[285,20,255,18],[285,21,255,19],[285,22,255,20],[286,4,256,2],[287,4,257,2],[287,13,257,11,"neutral"],[287,20,257,18,"neutral"],[287,21,257,18],[287,23,257,21],[288,6,258,4],[288,10,258,8,"text"],[288,14,258,12],[288,17,258,15],[288,19,258,17],[289,6,259,4],[289,10,259,8,"char"],[289,14,259,12],[290,6,260,4],[290,13,260,11,"i"],[290,14,260,12],[290,17,260,15,"length"],[290,23,260,21],[290,27,260,25],[290,28,260,26,"char"],[290,32,260,30],[290,35,260,33,"source"],[290,41,260,39],[290,42,260,40,"i"],[290,43,260,41],[290,44,260,42],[290,50,260,48],[290,53,260,51],[290,55,260,53],[291,8,261,6,"text"],[291,12,261,10],[291,16,261,14,"char"],[291,20,261,18],[292,8,262,6,"i"],[292,9,262,7],[292,13,262,11],[292,14,262,12],[293,6,263,4],[294,6,264,4],[294,10,264,8],[294,14,264,12],[294,15,264,13,"test"],[294,19,264,17],[294,20,264,18,"text"],[294,24,264,22],[294,25,264,23],[294,27,264,25],[295,8,265,6,"children"],[295,16,265,14],[295,17,265,15,"push"],[295,21,265,19],[295,22,265,20,"text"],[295,26,265,24],[295,27,265,25],[296,6,266,4],[297,6,267,4],[297,10,267,8,"source"],[297,16,267,14],[297,17,267,15,"i"],[297,18,267,16],[297,19,267,17],[297,24,267,22],[297,27,267,25],[297,29,267,27],[298,8,268,6],[298,15,268,13,"openingTag"],[298,25,268,23],[299,6,269,4],[300,6,270,4],[300,13,270,11,"neutral"],[300,20,270,18],[301,4,271,2],[302,4,272,2],[302,13,272,11,"openingTag"],[302,23,272,21,"openingTag"],[302,24,272,21],[302,26,272,24],[303,6,273,4],[303,12,273,10,"char"],[303,16,273,14],[303,19,273,17,"source"],[303,25,273,23],[303,26,273,24,"i"],[303,27,273,25],[303,28,273,26],[304,6,274,4],[304,10,274,8,"char"],[304,14,274,12],[304,19,274,17],[304,22,274,20],[304,24,274,22],[305,8,275,6],[305,15,275,13,"neutral"],[305,22,275,20],[306,6,276,4],[306,7,276,5],[306,8,276,6],[308,6,278,4],[308,10,278,8,"char"],[308,14,278,12],[308,19,278,17],[308,22,278,20],[308,24,278,22],[309,8,279,6],[309,14,279,12,"start"],[309,19,279,17],[309,22,279,20,"i"],[309,23,279,21],[309,26,279,24],[309,27,279,25],[310,8,280,6],[310,12,280,10,"source"],[310,18,280,16],[310,19,280,17,"slice"],[310,24,280,22],[310,25,280,23,"start"],[310,30,280,28],[310,32,280,30,"i"],[310,33,280,31],[310,36,280,34],[310,37,280,35],[310,38,280,36],[310,43,280,41],[310,47,280,45],[310,49,280,47],[311,10,281,8],[311,17,281,15,"comment"],[311,24,281,22],[312,8,282,6],[313,8,283,6],[313,14,283,12,"end"],[313,17,283,15],[313,20,283,18,"i"],[313,21,283,19],[313,24,283,22],[313,25,283,23],[314,8,284,6],[314,12,284,10,"source"],[314,18,284,16],[314,19,284,17,"slice"],[314,24,284,22],[314,25,284,23,"start"],[314,30,284,28],[314,32,284,30,"end"],[314,35,284,33],[314,36,284,34],[314,41,284,39],[314,50,284,48],[314,52,284,50],[315,10,285,8],[315,17,285,15,"cdata"],[315,22,285,20],[316,8,286,6],[317,8,287,6],[317,12,287,10],[317,22,287,20],[317,23,287,21,"test"],[317,27,287,25],[317,28,287,26,"source"],[317,34,287,32],[317,35,287,33,"slice"],[317,40,287,38],[317,41,287,39,"start"],[317,46,287,44],[317,48,287,46,"end"],[317,51,287,49],[317,52,287,50],[317,53,287,51],[317,55,287,53],[318,10,288,8],[318,17,288,15,"neutral"],[318,24,288,22],[319,8,289,6],[320,6,290,4],[321,6,291,4],[321,10,291,8,"char"],[321,14,291,12],[321,19,291,17],[321,22,291,20],[321,24,291,22],[322,8,292,6],[322,15,292,13,"closingTag"],[322,25,292,23],[323,6,293,4],[324,6,294,4],[324,12,294,10,"tag"],[324,15,294,13],[324,18,294,16,"getName"],[324,25,294,23],[324,26,294,24],[324,27,294,25],[325,6,295,4],[325,12,295,10,"props"],[325,17,295,15],[325,20,295,18],[325,21,295,19],[325,22,295,20],[326,6,296,4],[326,12,296,10,"element"],[326,19,296,17],[326,22,296,20],[327,8,297,6,"tag"],[327,11,297,9],[328,8,298,6,"props"],[328,13,298,11],[329,8,299,6,"children"],[329,16,299,14],[329,18,299,16],[329,20,299,18],[330,8,300,6,"parent"],[330,14,300,12],[330,16,300,14,"currentElement"],[330,30,300,28],[331,8,301,6,"Tag"],[331,11,301,9],[331,13,301,11,"tags"],[331,26,301,15],[331,27,301,16,"tag"],[331,30,301,19],[331,31,301,20],[331,35,301,24,"missingTag"],[332,6,302,4],[332,7,302,5],[333,6,303,4],[333,10,303,8,"currentElement"],[333,24,303,22],[333,26,303,24],[334,8,304,6,"children"],[334,16,304,14],[334,17,304,15,"push"],[334,21,304,19],[334,22,304,20,"element"],[334,29,304,27],[334,30,304,28],[335,6,305,4],[335,7,305,5],[335,13,305,11],[336,8,306,6,"root"],[336,12,306,10],[336,15,306,13,"element"],[336,22,306,20],[337,6,307,4],[338,6,308,4,"getAttributes"],[338,19,308,17],[338,20,308,18,"props"],[338,25,308,23],[338,26,308,24],[339,6,309,4],[339,12,309,10],[340,8,310,6,"style"],[341,6,311,4],[341,7,311,5],[341,10,311,8,"props"],[341,15,311,13],[342,6,312,4],[342,10,312,8],[342,17,312,15,"style"],[342,22,312,20],[342,27,312,25],[342,35,312,33],[342,37,312,35],[343,8,313,6,"element"],[343,15,313,13],[343,16,313,14,"styles"],[343,22,313,20],[343,25,313,23,"style"],[343,30,313,28],[344,8,314,6,"props"],[344,13,314,11],[344,14,314,12,"style"],[344,19,314,17],[344,22,314,20,"getStyle"],[344,30,314,28],[344,31,314,29,"style"],[344,36,314,34],[344,37,314,35],[345,6,315,4],[346,6,316,4],[346,10,316,8,"selfClosing"],[346,21,316,19],[346,24,316,22],[346,29,316,27],[347,6,317,4],[347,10,317,8,"source"],[347,16,317,14],[347,17,317,15,"i"],[347,18,317,16],[347,19,317,17],[347,24,317,22],[347,27,317,25],[347,29,317,27],[348,8,318,6,"i"],[348,9,318,7],[348,13,318,11],[348,14,318,12],[349,8,319,6,"selfClosing"],[349,19,319,17],[349,22,319,20],[349,26,319,24],[350,6,320,4],[351,6,321,4],[351,10,321,8,"source"],[351,16,321,14],[351,17,321,15,"i"],[351,18,321,16],[351,19,321,17],[351,24,321,22],[351,27,321,25],[351,29,321,27],[352,8,322,6,"error"],[352,13,322,11],[352,14,322,12],[352,26,322,24],[352,27,322,25],[353,6,323,4],[354,6,324,4],[354,10,324,8],[354,11,324,9,"selfClosing"],[354,22,324,20],[354,24,324,22],[355,8,325,6,"currentElement"],[355,22,325,20],[355,25,325,23,"element"],[355,32,325,30],[356,8,326,6],[356,9,326,7],[357,10,327,8,"children"],[358,8,328,6],[358,9,328,7],[358,12,328,10,"element"],[358,19,328,17],[359,8,329,6,"stack"],[359,13,329,11],[359,14,329,12,"push"],[359,18,329,16],[359,19,329,17,"element"],[359,26,329,24],[359,27,329,25],[360,6,330,4],[361,6,331,4],[361,13,331,11,"neutral"],[361,20,331,18],[362,4,332,2],[363,4,333,2],[363,13,333,11,"comment"],[363,20,333,18,"comment"],[363,21,333,18],[363,23,333,21],[364,6,334,4],[364,12,334,10,"index"],[364,17,334,15],[364,20,334,18,"source"],[364,26,334,24],[364,27,334,25,"indexOf"],[364,34,334,32],[364,35,334,33],[364,40,334,38],[364,42,334,40,"i"],[364,43,334,41],[364,44,334,42],[365,6,335,4],[365,10,335,8],[365,11,335,9],[365,12,335,10,"index"],[365,17,335,15],[365,19,335,17],[366,8,336,6,"error"],[366,13,336,11],[366,14,336,12],[366,28,336,26],[366,29,336,27],[367,6,337,4],[368,6,338,4,"i"],[368,7,338,5],[368,10,338,8,"index"],[368,15,338,13],[368,18,338,16],[368,19,338,17],[369,6,339,4],[369,13,339,11,"neutral"],[369,20,339,18],[370,4,340,2],[371,4,341,2],[371,13,341,11,"cdata"],[371,18,341,16,"cdata"],[371,19,341,16],[371,21,341,19],[372,6,342,4],[372,12,342,10,"index"],[372,17,342,15],[372,20,342,18,"source"],[372,26,342,24],[372,27,342,25,"indexOf"],[372,34,342,32],[372,35,342,33],[372,40,342,38],[372,42,342,40,"i"],[372,43,342,41],[372,44,342,42],[373,6,343,4],[373,10,343,8],[373,11,343,9],[373,12,343,10,"index"],[373,17,343,15],[373,19,343,17],[374,8,344,6,"error"],[374,13,344,11],[374,14,344,12],[374,28,344,26],[374,29,344,27],[375,6,345,4],[376,6,346,4,"children"],[376,14,346,12],[376,15,346,13,"push"],[376,19,346,17],[376,20,346,18,"source"],[376,26,346,24],[376,27,346,25,"slice"],[376,32,346,30],[376,33,346,31,"i"],[376,34,346,32],[376,37,346,35],[376,38,346,36],[376,40,346,38,"index"],[376,45,346,43],[376,46,346,44],[376,47,346,45],[377,6,347,4,"i"],[377,7,347,5],[377,10,347,8,"index"],[377,15,347,13],[377,18,347,16],[377,19,347,17],[378,6,348,4],[378,13,348,11,"neutral"],[378,20,348,18],[379,4,349,2],[380,4,350,2],[380,13,350,11,"closingTag"],[380,23,350,21,"closingTag"],[380,24,350,21],[380,26,350,24],[381,6,351,4],[381,12,351,10,"tag"],[381,15,351,13],[381,18,351,16,"getName"],[381,25,351,23],[381,26,351,24],[381,27,351,25],[382,6,352,4],[382,10,352,8],[382,11,352,9,"tag"],[382,14,352,12],[382,16,352,14],[383,8,353,6,"error"],[383,13,353,11],[383,14,353,12],[383,33,353,31],[383,34,353,32],[384,6,354,4],[385,6,355,4],[385,10,355,8,"currentElement"],[385,24,355,22],[385,28,355,26,"tag"],[385,31,355,29],[385,36,355,34,"currentElement"],[385,50,355,48],[385,51,355,49,"tag"],[385,54,355,52],[385,56,355,54],[386,8,356,6,"error"],[386,13,356,11],[386,14,356,12],[386,40,356,38,"tag"],[386,43,356,41],[386,70,356,68,"currentElement"],[386,84,356,82],[386,85,356,83,"tag"],[386,88,356,86],[386,91,356,89],[386,92,356,90],[387,6,357,4],[388,6,358,4,"allowSpaces"],[388,17,358,15],[388,18,358,16],[388,19,358,17],[389,6,359,4],[389,10,359,8,"source"],[389,16,359,14],[389,17,359,15,"i"],[389,18,359,16],[389,19,359,17],[389,24,359,22],[389,27,359,25],[389,29,359,27],[390,8,360,6,"error"],[390,13,360,11],[390,14,360,12],[390,26,360,24],[390,27,360,25],[391,6,361,4],[392,6,362,4,"stack"],[392,11,362,9],[392,12,362,10,"pop"],[392,15,362,13],[392,16,362,14],[392,17,362,15],[393,6,363,4,"currentElement"],[393,20,363,18],[393,23,363,21,"stack"],[393,28,363,26],[393,29,363,27,"stack"],[393,34,363,32],[393,35,363,33,"length"],[393,41,363,39],[393,44,363,42],[393,45,363,43],[393,46,363,44],[394,6,364,4],[394,10,364,8,"currentElement"],[394,24,364,22],[394,26,364,24],[395,8,365,6],[395,9,365,7],[396,10,366,8,"children"],[397,8,367,6],[397,9,367,7],[397,12,367,10,"currentElement"],[397,26,367,24],[398,6,368,4],[399,6,369,4],[399,13,369,11,"neutral"],[399,20,369,18],[400,4,370,2],[401,4,371,2],[401,13,371,11,"getName"],[401,20,371,18,"getName"],[401,21,371,18],[401,23,371,21],[402,6,372,4],[402,10,372,8,"name"],[402,14,372,12],[402,17,372,15],[402,19,372,17],[403,6,373,4],[403,10,373,8,"char"],[403,14,373,12],[404,6,374,4],[404,13,374,11,"i"],[404,14,374,12],[404,17,374,15,"length"],[404,23,374,21],[404,27,374,25,"validNameCharacters"],[404,46,374,44],[404,47,374,45,"test"],[404,51,374,49],[404,52,374,50,"char"],[404,56,374,54],[404,59,374,57,"source"],[404,65,374,63],[404,66,374,64,"i"],[404,67,374,65],[404,68,374,66],[404,69,374,67],[404,71,374,69],[405,8,375,6,"name"],[405,12,375,10],[405,16,375,14,"char"],[405,20,375,18],[406,8,376,6,"i"],[406,9,376,7],[406,13,376,11],[406,14,376,12],[407,6,377,4],[408,6,378,4],[408,13,378,11,"name"],[408,17,378,15],[409,4,379,2],[410,4,380,2],[410,13,380,11,"getAttributes"],[410,26,380,24,"getAttributes"],[410,27,380,25,"props"],[410,32,380,30],[410,34,380,32],[411,6,381,4],[411,13,381,11,"i"],[411,14,381,12],[411,17,381,15,"length"],[411,23,381,21],[411,25,381,23],[412,8,382,6],[412,12,382,10],[412,13,382,11,"whitespace"],[412,23,382,21],[412,24,382,22,"test"],[412,28,382,26],[412,29,382,27,"source"],[412,35,382,33],[412,36,382,34,"i"],[412,37,382,35],[412,38,382,36],[412,39,382,37],[412,41,382,39],[413,10,383,8],[414,8,384,6],[415,8,385,6,"allowSpaces"],[415,19,385,17],[415,20,385,18],[415,21,385,19],[416,8,386,6],[416,14,386,12,"name"],[416,18,386,16],[416,21,386,19,"getName"],[416,28,386,26],[416,29,386,27],[416,30,386,28],[417,8,387,6],[417,12,387,10],[417,13,387,11,"name"],[417,17,387,15],[417,19,387,17],[418,10,388,8],[419,8,389,6],[420,8,390,6],[420,12,390,10,"value"],[420,17,390,15],[420,20,390,18],[420,24,390,22],[421,8,391,6,"allowSpaces"],[421,19,391,17],[421,20,391,18],[421,21,391,19],[422,8,392,6],[422,12,392,10,"source"],[422,18,392,16],[422,19,392,17,"i"],[422,20,392,18],[422,21,392,19],[422,26,392,24],[422,29,392,27],[422,31,392,29],[423,10,393,8,"i"],[423,11,393,9],[423,15,393,13],[423,16,393,14],[424,10,394,8,"allowSpaces"],[424,21,394,19],[424,22,394,20],[424,23,394,21],[425,10,395,8,"value"],[425,15,395,13],[425,18,395,16,"getAttributeValue"],[425,35,395,33],[425,36,395,34],[425,37,395,35],[426,10,396,8],[426,14,396,12,"name"],[426,18,396,16],[426,23,396,21],[426,27,396,25],[426,31,396,29],[426,32,396,30,"isNaN"],[426,37,396,35],[426,38,396,36],[426,39,396,37,"value"],[426,44,396,42],[426,45,396,43],[426,49,396,47,"value"],[426,54,396,52],[426,55,396,53,"trim"],[426,59,396,57],[426,60,396,58],[426,61,396,59],[426,66,396,64],[426,68,396,66],[426,70,396,68],[427,12,397,10,"value"],[427,17,397,15],[427,20,397,18],[427,21,397,19,"value"],[427,26,397,24],[428,10,398,8],[429,8,399,6],[430,8,400,6,"props"],[430,13,400,11],[430,14,400,12,"camelCase"],[430,23,400,21],[430,24,400,22,"name"],[430,28,400,26],[430,29,400,27],[430,30,400,28],[430,33,400,31,"value"],[430,38,400,36],[431,6,401,4],[432,4,402,2],[433,4,403,2],[433,13,403,11,"getAttributeValue"],[433,30,403,28,"getAttributeValue"],[433,31,403,28],[433,33,403,31],[434,6,404,4],[434,13,404,11,"quotemarks"],[434,23,404,21],[434,24,404,22,"test"],[434,28,404,26],[434,29,404,27,"source"],[434,35,404,33],[434,36,404,34,"i"],[434,37,404,35],[434,38,404,36],[434,39,404,37],[434,42,404,40,"getQuotedAttributeValue"],[434,65,404,63],[434,66,404,64],[434,67,404,65],[434,70,404,68,"getUnquotedAttributeValue"],[434,95,404,93],[434,96,404,94],[434,97,404,95],[435,4,405,2],[436,4,406,2],[436,13,406,11,"getUnquotedAttributeValue"],[436,38,406,36,"getUnquotedAttributeValue"],[436,39,406,36],[436,41,406,39],[437,6,407,4],[437,10,407,8,"value"],[437,15,407,13],[437,18,407,16],[437,20,407,18],[438,6,408,4],[438,9,408,7],[439,8,409,6],[439,14,409,12,"char"],[439,18,409,16],[439,21,409,19,"source"],[439,27,409,25],[439,28,409,26,"i"],[439,29,409,27],[439,30,409,28],[440,8,410,6],[440,12,410,10,"char"],[440,16,410,14],[440,21,410,19],[440,24,410,22],[440,28,410,26,"char"],[440,32,410,30],[440,37,410,35],[440,40,410,38],[440,44,410,42,"char"],[440,48,410,46],[440,53,410,51],[440,56,410,54],[440,58,410,56],[441,10,411,8],[441,17,411,15,"value"],[441,22,411,20],[442,8,412,6],[443,8,413,6,"value"],[443,13,413,11],[443,17,413,15,"char"],[443,21,413,19],[444,8,414,6,"i"],[444,9,414,7],[444,13,414,11],[444,14,414,12],[445,6,415,4],[445,7,415,5],[445,15,415,13,"i"],[445,16,415,14],[445,19,415,17,"length"],[445,25,415,23],[446,6,416,4],[446,13,416,11,"value"],[446,18,416,16],[447,4,417,2],[448,4,418,2],[448,13,418,11,"getQuotedAttributeValue"],[448,36,418,34,"getQuotedAttributeValue"],[448,37,418,34],[448,39,418,37],[449,6,419,4],[449,12,419,10,"quotemark"],[449,21,419,19],[449,24,419,22,"source"],[449,30,419,28],[449,31,419,29,"i"],[449,32,419,30],[449,34,419,32],[449,35,419,33],[450,6,420,4],[450,10,420,8,"value"],[450,15,420,13],[450,18,420,16],[450,20,420,18],[451,6,421,4],[451,10,421,8,"escaped"],[451,17,421,15],[451,20,421,18],[451,25,421,23],[452,6,422,4],[452,13,422,11,"i"],[452,14,422,12],[452,17,422,15,"length"],[452,23,422,21],[452,25,422,23],[453,8,423,6],[453,14,423,12,"char"],[453,18,423,16],[453,21,423,19,"source"],[453,27,423,25],[453,28,423,26,"i"],[453,29,423,27],[453,31,423,29],[453,32,423,30],[454,8,424,6],[454,12,424,10,"char"],[454,16,424,14],[454,21,424,19,"quotemark"],[454,30,424,28],[454,34,424,32],[454,35,424,33,"escaped"],[454,42,424,40],[454,44,424,42],[455,10,425,8],[455,17,425,15,"value"],[455,22,425,20],[456,8,426,6],[457,8,427,6],[457,12,427,10,"char"],[457,16,427,14],[457,21,427,19],[457,25,427,23],[457,29,427,27],[457,30,427,28,"escaped"],[457,37,427,35],[457,39,427,37],[458,10,428,8,"escaped"],[458,17,428,15],[458,20,428,18],[458,24,428,22],[459,8,429,6],[460,8,430,6,"value"],[460,13,430,11],[460,17,430,15,"escaped"],[460,24,430,22],[460,27,430,25],[460,32,430,30,"char"],[460,36,430,34],[460,38,430,36],[460,41,430,39,"char"],[460,45,430,43],[461,8,431,6,"escaped"],[461,15,431,13],[461,18,431,16],[461,23,431,21],[462,6,432,4],[463,6,433,4],[463,13,433,11,"value"],[463,18,433,16],[464,4,434,2],[465,4,435,2],[465,13,435,11,"allowSpaces"],[465,24,435,22,"allowSpaces"],[465,25,435,22],[465,27,435,25],[466,6,436,4],[466,13,436,11,"i"],[466,14,436,12],[466,17,436,15,"length"],[466,23,436,21],[466,27,436,25,"whitespace"],[466,37,436,35],[466,38,436,36,"test"],[466,42,436,40],[466,43,436,41,"source"],[466,49,436,47],[466,50,436,48,"i"],[466,51,436,49],[466,52,436,50],[466,53,436,51],[466,55,436,53],[467,8,437,6,"i"],[467,9,437,7],[467,13,437,11],[467,14,437,12],[468,6,438,4],[469,4,439,2],[470,4,440,2],[470,8,440,6,"i"],[470,9,440,7],[470,12,440,10],[470,13,440,11],[471,4,441,2],[471,11,441,9,"i"],[471,12,441,10],[471,15,441,13,"length"],[471,21,441,19],[471,23,441,21],[472,6,442,4],[472,10,442,8],[472,11,442,9,"state"],[472,16,442,14],[472,18,442,16],[473,8,443,6,"error"],[473,13,443,11],[473,14,443,12],[473,36,443,34],[473,37,443,35],[474,6,444,4],[475,6,445,4,"state"],[475,11,445,9],[475,14,445,12,"state"],[475,19,445,17],[475,20,445,18],[475,21,445,19],[476,6,446,4,"i"],[476,7,446,5],[476,11,446,9],[476,12,446,10],[477,4,447,2],[478,4,448,2],[478,8,448,6,"state"],[478,13,448,11],[478,18,448,16,"neutral"],[478,25,448,23],[478,27,448,25],[479,6,449,4,"error"],[479,11,449,9],[479,12,449,10],[479,37,449,35],[479,38,449,36],[480,4,450,2],[481,4,451,2],[481,8,451,6,"root"],[481,12,451,10],[481,14,451,12],[482,6,452,4],[482,12,452,10,"xml"],[482,15,452,13],[482,18,452,16],[482,19,452,17,"middleware"],[482,29,452,27],[482,32,452,30,"middleware"],[482,42,452,40],[482,43,452,41,"root"],[482,47,452,45],[482,48,452,46],[482,51,452,49,"root"],[482,55,452,53],[482,60,452,58,"root"],[482,64,452,62],[483,6,453,4],[483,12,453,10,"ast"],[483,15,453,13],[483,18,453,16,"xml"],[483,21,453,19],[483,22,453,20,"children"],[483,30,453,28],[483,31,453,29,"map"],[483,34,453,32],[483,35,453,33,"astToReact"],[483,45,453,43],[483,46,453,44],[484,6,454,4],[484,12,454,10,"jsx"],[484,15,454,13],[484,18,454,16,"xml"],[484,21,454,19],[485,6,455,4,"jsx"],[485,9,455,7],[485,10,455,8,"children"],[485,18,455,16],[485,21,455,19,"ast"],[485,24,455,22],[486,6,456,4],[486,13,456,11,"jsx"],[486,16,456,14],[487,4,457,2],[488,4,458,2],[488,11,458,9],[488,15,458,13],[489,2,459,0],[490,0,459,1],[490,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","SvgUri","useEffect$argument_0","fetchText.then$argument_0","fetchText.then._catch$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","string.split.filter$argument_0","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA,+EC,iKD,oCE;ACK;CDE;OEC;CFa;OGE;wBCQ,sCD;CHS;OKC;YCS;8BCC;KDI,QE;KFG;GDE;CLS;OSI;ECI;GDE;EEC;GFO;EGC;GHe;EIC;GJW;CTC;OcC;ECI;GDE;EEC;GFO;EGC;GHQ;EIC;GJY;CdC;kBmBC,wCnB;yBoBC,mDpB;OqBC;gDCE,aD;CrBc;OuBC;CvBgB;AwBI;CxBM;iByBC,iCzB;A0BC;C1B4B;O2BK;ECO;GDO;EEC;GFK;EGC;GHc;EIC;GJ4D;EKC;GLO;EMC;GNQ;EOC;GPoB;EQC;GRQ;ESC;GTsB;EUC;GVE;EWC;GXW;EYC;GZgB;EaC;GbI;C3BoB"}},"type":"js/module"}]}