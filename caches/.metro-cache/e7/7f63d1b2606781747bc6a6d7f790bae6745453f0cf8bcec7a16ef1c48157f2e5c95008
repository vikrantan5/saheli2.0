{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":74,"index":74}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./Location.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":75},"end":{"line":2,"column":53,"index":128}}],"key":"QoIrjHWCWA2K0AZhEI/d0eITBhA=","exportNames":["*"]}},{"name":"./LocationEventEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":129},"end":{"line":3,"column":62,"index":191}}],"key":"38XLRnQdDBx35ZID4eB8duhAnLg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _Location = require(_dependencyMap[1], \"./Location.types\");\n  var _LocationEventEmitter = require(_dependencyMap[2], \"./LocationEventEmitter\");\n  class GeocoderError extends Error {\n    constructor() {\n      super('Geocoder service is not available for this device.');\n      this.code = 'E_NO_GEOCODER';\n    }\n  }\n  /**\n   * Converts `GeolocationPosition` to JavaScript object.\n   */\n  function geolocationPositionToJSON(position) {\n    const {\n      coords,\n      timestamp\n    } = position;\n    return {\n      coords: {\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed\n      },\n      timestamp\n    };\n  }\n  /**\n   * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n   */\n  function isLocationValid(location, options) {\n    const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n    const requiredAccuracy = typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n    const locationAccuracy = location.coords.accuracy ?? Infinity;\n    return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n  }\n  /**\n   * Gets the permission details. The implementation is not very good as it's not\n   * possible to query for permission on all browsers, apparently only the\n   * latest versions will support this.\n   */\n  async function getPermissionsAsync(shouldAsk = false) {\n    if (!navigator?.permissions?.query) {\n      throw new _expoModulesCore.UnavailabilityError('expo-location', 'navigator.permissions API is not available');\n    }\n    const permission = await navigator.permissions.query({\n      name: 'geolocation'\n    });\n    if (permission.state === 'granted') {\n      return {\n        status: _expoModulesCore.PermissionStatus.GRANTED,\n        granted: true,\n        canAskAgain: true,\n        expires: 0\n      };\n    }\n    if (permission.state === 'denied') {\n      return {\n        status: _expoModulesCore.PermissionStatus.DENIED,\n        granted: false,\n        canAskAgain: true,\n        expires: 0\n      };\n    }\n    if (shouldAsk) {\n      return new Promise(resolve => {\n        navigator.geolocation.getCurrentPosition(() => {\n          resolve({\n            status: _expoModulesCore.PermissionStatus.GRANTED,\n            granted: true,\n            canAskAgain: true,\n            expires: 0\n          });\n        }, positionError => {\n          if (positionError.code === positionError.PERMISSION_DENIED) {\n            resolve({\n              status: _expoModulesCore.PermissionStatus.DENIED,\n              granted: false,\n              canAskAgain: true,\n              expires: 0\n            });\n            return;\n          }\n          resolve({\n            status: _expoModulesCore.PermissionStatus.GRANTED,\n            granted: false,\n            canAskAgain: true,\n            expires: 0\n          });\n        });\n      });\n    }\n    // The permission state is 'prompt' when the permission has not been requested\n    // yet, tested on Chrome.\n    return {\n      status: _expoModulesCore.PermissionStatus.UNDETERMINED,\n      granted: false,\n      canAskAgain: true,\n      expires: 0\n    };\n  }\n  let lastKnownPosition = null;\n  var _default = exports.default = {\n    async getProviderStatusAsync() {\n      return {\n        locationServicesEnabled: 'geolocation' in navigator\n      };\n    },\n    async getLastKnownPositionAsync(options = {}) {\n      if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n        return lastKnownPosition;\n      }\n      return null;\n    },\n    async getCurrentPositionAsync(options) {\n      return new Promise((resolve, reject) => {\n        const resolver = position => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          resolve(lastKnownPosition);\n        };\n        navigator.geolocation.getCurrentPosition(resolver, reject, {\n          maximumAge: Infinity,\n          enableHighAccuracy: (options.accuracy ?? 0) > _Location.LocationAccuracy.Balanced,\n          ...options\n        });\n      });\n    },\n    async removeWatchAsync(watchId) {\n      navigator.geolocation.clearWatch(watchId);\n    },\n    async watchDeviceHeading(_headingId) {\n      console.warn('Location.watchDeviceHeading: is not supported on web');\n    },\n    async hasServicesEnabledAsync() {\n      return 'geolocation' in navigator;\n    },\n    async geocodeAsync() {\n      throw new GeocoderError();\n    },\n    async reverseGeocodeAsync() {\n      throw new GeocoderError();\n    },\n    async watchPositionImplAsync(watchId, options) {\n      return new Promise(resolve => {\n        watchId = navigator.geolocation.watchPosition(position => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          _LocationEventEmitter.LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition\n          });\n        }, undefined, options);\n        resolve(watchId);\n      });\n    },\n    async requestForegroundPermissionsAsync() {\n      return getPermissionsAsync(true);\n    },\n    async requestBackgroundPermissionsAsync() {\n      return getPermissionsAsync(true);\n    },\n    async getForegroundPermissionsAsync() {\n      return getPermissionsAsync();\n    },\n    async getBackgroundPermissionsAsync() {\n      return getPermissionsAsync();\n    }\n  };\n});","lineCount":176,"map":[[6,2,1,0],[6,6,1,0,"_expoModulesCore"],[6,22,1,0],[6,25,1,0,"require"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,2,0],[7,6,2,0,"_Location"],[7,15,2,0],[7,18,2,0,"require"],[7,25,2,0],[7,26,2,0,"_dependencyMap"],[7,40,2,0],[8,2,3,0],[8,6,3,0,"_LocationEventEmitter"],[8,27,3,0],[8,30,3,0,"require"],[8,37,3,0],[8,38,3,0,"_dependencyMap"],[8,52,3,0],[9,2,4,0],[9,8,4,6,"GeocoderError"],[9,21,4,19],[9,30,4,28,"Error"],[9,35,4,33],[9,36,4,34],[10,4,6,4,"constructor"],[10,15,6,15,"constructor"],[10,16,6,15],[10,18,6,18],[11,6,7,8],[11,11,7,13],[11,12,7,14],[11,64,7,66],[11,65,7,67],[12,6,8,8],[12,10,8,12],[12,11,8,13,"code"],[12,15,8,17],[12,18,8,20],[12,33,8,35],[13,4,9,4],[14,2,10,0],[15,2,11,0],[16,0,12,0],[17,0,13,0],[18,2,14,0],[18,11,14,9,"geolocationPositionToJSON"],[18,36,14,34,"geolocationPositionToJSON"],[18,37,14,35,"position"],[18,45,14,43],[18,47,14,45],[19,4,15,4],[19,10,15,10],[20,6,15,12,"coords"],[20,12,15,18],[21,6,15,20,"timestamp"],[22,4,15,30],[22,5,15,31],[22,8,15,34,"position"],[22,16,15,42],[23,4,16,4],[23,11,16,11],[24,6,17,8,"coords"],[24,12,17,14],[24,14,17,16],[25,8,18,12,"latitude"],[25,16,18,20],[25,18,18,22,"coords"],[25,24,18,28],[25,25,18,29,"latitude"],[25,33,18,37],[26,8,19,12,"longitude"],[26,17,19,21],[26,19,19,23,"coords"],[26,25,19,29],[26,26,19,30,"longitude"],[26,35,19,39],[27,8,20,12,"altitude"],[27,16,20,20],[27,18,20,22,"coords"],[27,24,20,28],[27,25,20,29,"altitude"],[27,33,20,37],[28,8,21,12,"accuracy"],[28,16,21,20],[28,18,21,22,"coords"],[28,24,21,28],[28,25,21,29,"accuracy"],[28,33,21,37],[29,8,22,12,"altitudeAccuracy"],[29,24,22,28],[29,26,22,30,"coords"],[29,32,22,36],[29,33,22,37,"altitudeAccuracy"],[29,49,22,53],[30,8,23,12,"heading"],[30,15,23,19],[30,17,23,21,"coords"],[30,23,23,27],[30,24,23,28,"heading"],[30,31,23,35],[31,8,24,12,"speed"],[31,13,24,17],[31,15,24,19,"coords"],[31,21,24,25],[31,22,24,26,"speed"],[32,6,25,8],[32,7,25,9],[33,6,26,8,"timestamp"],[34,4,27,4],[34,5,27,5],[35,2,28,0],[36,2,29,0],[37,0,30,0],[38,0,31,0],[39,2,32,0],[39,11,32,9,"isLocationValid"],[39,26,32,24,"isLocationValid"],[39,27,32,25,"location"],[39,35,32,33],[39,37,32,35,"options"],[39,44,32,42],[39,46,32,44],[40,4,33,4],[40,10,33,10,"maxAge"],[40,16,33,16],[40,19,33,19],[40,26,33,26,"options"],[40,33,33,33],[40,34,33,34,"maxAge"],[40,40,33,40],[40,45,33,45],[40,53,33,53],[40,56,33,56,"options"],[40,63,33,63],[40,64,33,64,"maxAge"],[40,70,33,70],[40,73,33,73,"Infinity"],[40,81,33,81],[41,4,34,4],[41,10,34,10,"requiredAccuracy"],[41,26,34,26],[41,29,34,29],[41,36,34,36,"options"],[41,43,34,43],[41,44,34,44,"requiredAccuracy"],[41,60,34,60],[41,65,34,65],[41,73,34,73],[41,76,34,76,"options"],[41,83,34,83],[41,84,34,84,"requiredAccuracy"],[41,100,34,100],[41,103,34,103,"Infinity"],[41,111,34,111],[42,4,35,4],[42,10,35,10,"locationAccuracy"],[42,26,35,26],[42,29,35,29,"location"],[42,37,35,37],[42,38,35,38,"coords"],[42,44,35,44],[42,45,35,45,"accuracy"],[42,53,35,53],[42,57,35,57,"Infinity"],[42,65,35,65],[43,4,36,4],[43,11,36,11,"Date"],[43,15,36,15],[43,16,36,16,"now"],[43,19,36,19],[43,20,36,20],[43,21,36,21],[43,24,36,24,"location"],[43,32,36,32],[43,33,36,33,"timestamp"],[43,42,36,42],[43,46,36,46,"maxAge"],[43,52,36,52],[43,56,36,56,"locationAccuracy"],[43,72,36,72],[43,76,36,76,"requiredAccuracy"],[43,92,36,92],[44,2,37,0],[45,2,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,2,43,0],[50,17,43,15,"getPermissionsAsync"],[50,36,43,34,"getPermissionsAsync"],[50,37,43,35,"shouldAsk"],[50,46,43,44],[50,49,43,47],[50,54,43,52],[50,56,43,54],[51,4,44,4],[51,8,44,8],[51,9,44,9,"navigator"],[51,18,44,18],[51,20,44,20,"permissions"],[51,31,44,31],[51,33,44,33,"query"],[51,38,44,38],[51,40,44,40],[52,6,45,8],[52,12,45,14],[52,16,45,18,"UnavailabilityError"],[52,52,45,37],[52,53,45,38],[52,68,45,53],[52,70,45,55],[52,114,45,99],[52,115,45,100],[53,4,46,4],[54,4,47,4],[54,10,47,10,"permission"],[54,20,47,20],[54,23,47,23],[54,29,47,29,"navigator"],[54,38,47,38],[54,39,47,39,"permissions"],[54,50,47,50],[54,51,47,51,"query"],[54,56,47,56],[54,57,47,57],[55,6,47,59,"name"],[55,10,47,63],[55,12,47,65],[56,4,47,79],[56,5,47,80],[56,6,47,81],[57,4,48,4],[57,8,48,8,"permission"],[57,18,48,18],[57,19,48,19,"state"],[57,24,48,24],[57,29,48,29],[57,38,48,38],[57,40,48,40],[58,6,49,8],[58,13,49,15],[59,8,50,12,"status"],[59,14,50,18],[59,16,50,20,"PermissionStatus"],[59,49,50,36],[59,50,50,37,"GRANTED"],[59,57,50,44],[60,8,51,12,"granted"],[60,15,51,19],[60,17,51,21],[60,21,51,25],[61,8,52,12,"canAskAgain"],[61,19,52,23],[61,21,52,25],[61,25,52,29],[62,8,53,12,"expires"],[62,15,53,19],[62,17,53,21],[63,6,54,8],[63,7,54,9],[64,4,55,4],[65,4,56,4],[65,8,56,8,"permission"],[65,18,56,18],[65,19,56,19,"state"],[65,24,56,24],[65,29,56,29],[65,37,56,37],[65,39,56,39],[66,6,57,8],[66,13,57,15],[67,8,58,12,"status"],[67,14,58,18],[67,16,58,20,"PermissionStatus"],[67,49,58,36],[67,50,58,37,"DENIED"],[67,56,58,43],[68,8,59,12,"granted"],[68,15,59,19],[68,17,59,21],[68,22,59,26],[69,8,60,12,"canAskAgain"],[69,19,60,23],[69,21,60,25],[69,25,60,29],[70,8,61,12,"expires"],[70,15,61,19],[70,17,61,21],[71,6,62,8],[71,7,62,9],[72,4,63,4],[73,4,64,4],[73,8,64,8,"shouldAsk"],[73,17,64,17],[73,19,64,19],[74,6,65,8],[74,13,65,15],[74,17,65,19,"Promise"],[74,24,65,26],[74,25,65,28,"resolve"],[74,32,65,35],[74,36,65,40],[75,8,66,12,"navigator"],[75,17,66,21],[75,18,66,22,"geolocation"],[75,29,66,33],[75,30,66,34,"getCurrentPosition"],[75,48,66,52],[75,49,66,53],[75,55,66,59],[76,10,67,16,"resolve"],[76,17,67,23],[76,18,67,24],[77,12,68,20,"status"],[77,18,68,26],[77,20,68,28,"PermissionStatus"],[77,53,68,44],[77,54,68,45,"GRANTED"],[77,61,68,52],[78,12,69,20,"granted"],[78,19,69,27],[78,21,69,29],[78,25,69,33],[79,12,70,20,"canAskAgain"],[79,23,70,31],[79,25,70,33],[79,29,70,37],[80,12,71,20,"expires"],[80,19,71,27],[80,21,71,29],[81,10,72,16],[81,11,72,17],[81,12,72,18],[82,8,73,12],[82,9,73,13],[82,11,73,16,"positionError"],[82,24,73,29],[82,28,73,34],[83,10,74,16],[83,14,74,20,"positionError"],[83,27,74,33],[83,28,74,34,"code"],[83,32,74,38],[83,37,74,43,"positionError"],[83,50,74,56],[83,51,74,57,"PERMISSION_DENIED"],[83,68,74,74],[83,70,74,76],[84,12,75,20,"resolve"],[84,19,75,27],[84,20,75,28],[85,14,76,24,"status"],[85,20,76,30],[85,22,76,32,"PermissionStatus"],[85,55,76,48],[85,56,76,49,"DENIED"],[85,62,76,55],[86,14,77,24,"granted"],[86,21,77,31],[86,23,77,33],[86,28,77,38],[87,14,78,24,"canAskAgain"],[87,25,78,35],[87,27,78,37],[87,31,78,41],[88,14,79,24,"expires"],[88,21,79,31],[88,23,79,33],[89,12,80,20],[89,13,80,21],[89,14,80,22],[90,12,81,20],[91,10,82,16],[92,10,83,16,"resolve"],[92,17,83,23],[92,18,83,24],[93,12,84,20,"status"],[93,18,84,26],[93,20,84,28,"PermissionStatus"],[93,53,84,44],[93,54,84,45,"GRANTED"],[93,61,84,52],[94,12,85,20,"granted"],[94,19,85,27],[94,21,85,29],[94,26,85,34],[95,12,86,20,"canAskAgain"],[95,23,86,31],[95,25,86,33],[95,29,86,37],[96,12,87,20,"expires"],[96,19,87,27],[96,21,87,29],[97,10,88,16],[97,11,88,17],[97,12,88,18],[98,8,89,12],[98,9,89,13],[98,10,89,14],[99,6,90,8],[99,7,90,9],[99,8,90,10],[100,4,91,4],[101,4,92,4],[102,4,93,4],[103,4,94,4],[103,11,94,11],[104,6,95,8,"status"],[104,12,95,14],[104,14,95,16,"PermissionStatus"],[104,47,95,32],[104,48,95,33,"UNDETERMINED"],[104,60,95,45],[105,6,96,8,"granted"],[105,13,96,15],[105,15,96,17],[105,20,96,22],[106,6,97,8,"canAskAgain"],[106,17,97,19],[106,19,97,21],[106,23,97,25],[107,6,98,8,"expires"],[107,13,98,15],[107,15,98,17],[108,4,99,4],[108,5,99,5],[109,2,100,0],[110,2,101,0],[110,6,101,4,"lastKnownPosition"],[110,23,101,21],[110,26,101,24],[110,30,101,28],[111,2,101,29],[111,6,101,29,"_default"],[111,14,101,29],[111,17,101,29,"exports"],[111,24,101,29],[111,25,101,29,"default"],[111,32,101,29],[111,35,102,15],[112,4,103,4],[112,10,103,10,"getProviderStatusAsync"],[112,32,103,32,"getProviderStatusAsync"],[112,33,103,32],[112,35,103,35],[113,6,104,8],[113,13,104,15],[114,8,105,12,"locationServicesEnabled"],[114,31,105,35],[114,33,105,37],[114,46,105,50],[114,50,105,54,"navigator"],[115,6,106,8],[115,7,106,9],[116,4,107,4],[116,5,107,5],[117,4,108,4],[117,10,108,10,"getLastKnownPositionAsync"],[117,35,108,35,"getLastKnownPositionAsync"],[117,36,108,36,"options"],[117,43,108,43],[117,46,108,46],[117,47,108,47],[117,48,108,48],[117,50,108,50],[118,6,109,8],[118,10,109,12,"lastKnownPosition"],[118,27,109,29],[118,31,109,33,"isLocationValid"],[118,46,109,48],[118,47,109,49,"lastKnownPosition"],[118,64,109,66],[118,66,109,68,"options"],[118,73,109,75],[118,74,109,76],[118,76,109,78],[119,8,110,12],[119,15,110,19,"lastKnownPosition"],[119,32,110,36],[120,6,111,8],[121,6,112,8],[121,13,112,15],[121,17,112,19],[122,4,113,4],[122,5,113,5],[123,4,114,4],[123,10,114,10,"getCurrentPositionAsync"],[123,33,114,33,"getCurrentPositionAsync"],[123,34,114,34,"options"],[123,41,114,41],[123,43,114,43],[124,6,115,8],[124,13,115,15],[124,17,115,19,"Promise"],[124,24,115,26],[124,25,115,27],[124,26,115,28,"resolve"],[124,33,115,35],[124,35,115,37,"reject"],[124,41,115,43],[124,46,115,48],[125,8,116,12],[125,14,116,18,"resolver"],[125,22,116,26],[125,25,116,30,"position"],[125,33,116,38],[125,37,116,43],[126,10,117,16,"lastKnownPosition"],[126,27,117,33],[126,30,117,36,"geolocationPositionToJSON"],[126,55,117,61],[126,56,117,62,"position"],[126,64,117,70],[126,65,117,71],[127,10,118,16,"resolve"],[127,17,118,23],[127,18,118,24,"lastKnownPosition"],[127,35,118,41],[127,36,118,42],[128,8,119,12],[128,9,119,13],[129,8,120,12,"navigator"],[129,17,120,21],[129,18,120,22,"geolocation"],[129,29,120,33],[129,30,120,34,"getCurrentPosition"],[129,48,120,52],[129,49,120,53,"resolver"],[129,57,120,61],[129,59,120,63,"reject"],[129,65,120,69],[129,67,120,71],[130,10,121,16,"maximumAge"],[130,20,121,26],[130,22,121,28,"Infinity"],[130,30,121,36],[131,10,122,16,"enableHighAccuracy"],[131,28,122,34],[131,30,122,36],[131,31,122,37,"options"],[131,38,122,44],[131,39,122,45,"accuracy"],[131,47,122,53],[131,51,122,57],[131,52,122,58],[131,56,122,62,"LocationAccuracy"],[131,82,122,78],[131,83,122,79,"Balanced"],[131,91,122,87],[132,10,123,16],[132,13,123,19,"options"],[133,8,124,12],[133,9,124,13],[133,10,124,14],[134,6,125,8],[134,7,125,9],[134,8,125,10],[135,4,126,4],[135,5,126,5],[136,4,127,4],[136,10,127,10,"removeWatchAsync"],[136,26,127,26,"removeWatchAsync"],[136,27,127,27,"watchId"],[136,34,127,34],[136,36,127,36],[137,6,128,8,"navigator"],[137,15,128,17],[137,16,128,18,"geolocation"],[137,27,128,29],[137,28,128,30,"clearWatch"],[137,38,128,40],[137,39,128,41,"watchId"],[137,46,128,48],[137,47,128,49],[138,4,129,4],[138,5,129,5],[139,4,130,4],[139,10,130,10,"watchDeviceHeading"],[139,28,130,28,"watchDeviceHeading"],[139,29,130,29,"_headingId"],[139,39,130,39],[139,41,130,41],[140,6,131,8,"console"],[140,13,131,15],[140,14,131,16,"warn"],[140,18,131,20],[140,19,131,21],[140,73,131,75],[140,74,131,76],[141,4,132,4],[141,5,132,5],[142,4,133,4],[142,10,133,10,"hasServicesEnabledAsync"],[142,33,133,33,"hasServicesEnabledAsync"],[142,34,133,33],[142,36,133,36],[143,6,134,8],[143,13,134,15],[143,26,134,28],[143,30,134,32,"navigator"],[143,39,134,41],[144,4,135,4],[144,5,135,5],[145,4,136,4],[145,10,136,10,"geocodeAsync"],[145,22,136,22,"geocodeAsync"],[145,23,136,22],[145,25,136,25],[146,6,137,8],[146,12,137,14],[146,16,137,18,"GeocoderError"],[146,29,137,31],[146,30,137,32],[146,31,137,33],[147,4,138,4],[147,5,138,5],[148,4,139,4],[148,10,139,10,"reverseGeocodeAsync"],[148,29,139,29,"reverseGeocodeAsync"],[148,30,139,29],[148,32,139,32],[149,6,140,8],[149,12,140,14],[149,16,140,18,"GeocoderError"],[149,29,140,31],[149,30,140,32],[149,31,140,33],[150,4,141,4],[150,5,141,5],[151,4,142,4],[151,10,142,10,"watchPositionImplAsync"],[151,32,142,32,"watchPositionImplAsync"],[151,33,142,33,"watchId"],[151,40,142,40],[151,42,142,42,"options"],[151,49,142,49],[151,51,142,51],[152,6,143,8],[152,13,143,15],[152,17,143,19,"Promise"],[152,24,143,26],[152,25,143,28,"resolve"],[152,32,143,35],[152,36,143,40],[153,8,144,12,"watchId"],[153,15,144,19],[153,18,144,22,"navigator"],[153,27,144,31],[153,28,144,32,"geolocation"],[153,39,144,43],[153,40,144,44,"watchPosition"],[153,53,144,57],[153,54,144,59,"position"],[153,62,144,67],[153,66,144,72],[154,10,145,16,"lastKnownPosition"],[154,27,145,33],[154,30,145,36,"geolocationPositionToJSON"],[154,55,145,61],[154,56,145,62,"position"],[154,64,145,70],[154,65,145,71],[155,10,146,16,"LocationEventEmitter"],[155,52,146,36],[155,53,146,37,"emit"],[155,57,146,41],[155,58,146,42],[155,80,146,64],[155,82,146,66],[156,12,147,20,"watchId"],[156,19,147,27],[157,12,148,20,"location"],[157,20,148,28],[157,22,148,30,"lastKnownPosition"],[158,10,149,16],[158,11,149,17],[158,12,149,18],[159,8,150,12],[159,9,150,13],[159,11,150,15,"undefined"],[159,20,150,24],[159,22,150,26,"options"],[159,29,150,33],[159,30,150,34],[160,8,151,12,"resolve"],[160,15,151,19],[160,16,151,20,"watchId"],[160,23,151,27],[160,24,151,28],[161,6,152,8],[161,7,152,9],[161,8,152,10],[162,4,153,4],[162,5,153,5],[163,4,154,4],[163,10,154,10,"requestForegroundPermissionsAsync"],[163,43,154,43,"requestForegroundPermissionsAsync"],[163,44,154,43],[163,46,154,46],[164,6,155,8],[164,13,155,15,"getPermissionsAsync"],[164,32,155,34],[164,33,155,35],[164,37,155,39],[164,38,155,40],[165,4,156,4],[165,5,156,5],[166,4,157,4],[166,10,157,10,"requestBackgroundPermissionsAsync"],[166,43,157,43,"requestBackgroundPermissionsAsync"],[166,44,157,43],[166,46,157,46],[167,6,158,8],[167,13,158,15,"getPermissionsAsync"],[167,32,158,34],[167,33,158,35],[167,37,158,39],[167,38,158,40],[168,4,159,4],[168,5,159,5],[169,4,160,4],[169,10,160,10,"getForegroundPermissionsAsync"],[169,39,160,39,"getForegroundPermissionsAsync"],[169,40,160,39],[169,42,160,42],[170,6,161,8],[170,13,161,15,"getPermissionsAsync"],[170,32,161,34],[170,33,161,35],[170,34,161,36],[171,4,162,4],[171,5,162,5],[172,4,163,4],[172,10,163,10,"getBackgroundPermissionsAsync"],[172,39,163,39,"getBackgroundPermissionsAsync"],[172,40,163,39],[172,42,163,42],[173,6,164,8],[173,13,164,15,"getPermissionsAsync"],[173,32,164,34],[173,33,164,35],[173,34,164,36],[174,4,165,4],[175,2,166,0],[175,3,166,1],[176,0,166,1],[176,3]],"functionMap":{"names":["<global>","GeocoderError","GeocoderError#constructor","geolocationPositionToJSON","isLocationValid","getPermissionsAsync","Promise$argument_0","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","default.getProviderStatusAsync","default.getLastKnownPositionAsync","default.getCurrentPositionAsync","resolver","default.removeWatchAsync","default.watchDeviceHeading","default.hasServicesEnabledAsync","default.geocodeAsync","default.reverseGeocodeAsync","default.watchPositionImplAsync","navigator.geolocation.watchPosition$argument_0","default.requestForegroundPermissionsAsync","default.requestBackgroundPermissionsAsync","default.getForegroundPermissionsAsync","default.getBackgroundPermissionsAsync"],"mappings":"AAA;ACG;ICE;KDG;CDC;AGI;CHc;AII;CJK;AKM;2BCsB;qDCC;aDO,EE;aFgB;SDC;CLU;ISG;KTI;IUC;KVK;IWC;2BLC;6BMC;aNG;SKM;KXC;IaC;KbE;IcC;KdE;IeC;KfE;IgBC;KhBE;IiBC;KjBE;IkBC;2BZC;0DaC;abM;SYE;KlBC;IoBC;KpBE;IqBC;KrBE;IsBC;KtBE;IuBC;KvBE"}},"type":"js/module"}]}