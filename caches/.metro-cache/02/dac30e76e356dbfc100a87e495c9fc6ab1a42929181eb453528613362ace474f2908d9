{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":102,"index":134}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":135},"end":{"line":3,"column":59,"index":194}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"]}},{"name":"./lib/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":195},"end":{"line":4,"column":47,"index":242}}],"key":"/AcZmnf3UE0mJ4XdwdiNNzammrg=","exportNames":["*"]}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":243},"end":{"line":5,"column":43,"index":286}}],"key":"NUE3c/K+JVzkrn4COE7BqSQ6w3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _fetch = require(_dependencyMap[1], \"./lib/fetch\");\n  var _helpers = require(_dependencyMap[2], \"./lib/helpers\");\n  var _types = require(_dependencyMap[3], \"./lib/types\");\n  var _errors = require(_dependencyMap[4], \"./lib/errors\");\n  class GoTrueAdminApi {\n    constructor({\n      url = '',\n      headers = {},\n      fetch\n    }) {\n      this.url = url;\n      this.headers = headers;\n      this.fetch = (0, _helpers.resolveFetch)(fetch);\n      this.mfa = {\n        listFactors: this._listFactors.bind(this),\n        deleteFactor: this._deleteFactor.bind(this)\n      };\n      this.oauth = {\n        listClients: this._listOAuthClients.bind(this),\n        createClient: this._createOAuthClient.bind(this),\n        getClient: this._getOAuthClient.bind(this),\n        deleteClient: this._deleteOAuthClient.bind(this),\n        regenerateClientSecret: this._regenerateOAuthClientSecret.bind(this)\n      };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = _types.SIGN_OUT_SCOPES[0]) {\n      if (_types.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n        throw new Error(`@supabase/auth-js: Parameter scope must be one of ${_types.SIGN_OUT_SCOPES.join(', ')}`);\n      }\n      try {\n        await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          data: null,\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n      try {\n        const {\n            options\n          } = params,\n          rest = (0, _tslib.__rest)(params, [\"options\"]);\n        const body = Object.assign(Object.assign({}, rest), options);\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: _fetch._generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: _fetch._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const users = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, users), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n      (0, _helpers.validateUUID)(uid);\n      try {\n        return await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n      (0, _helpers.validateUUID)(uid);\n      try {\n        return await (0, _fetch._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n      (0, _helpers.validateUUID)(id);\n      try {\n        return await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          body: {\n            should_soft_delete: shouldSoftDelete\n          },\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _listFactors(params) {\n      (0, _helpers.validateUUID)(params.userId);\n      try {\n        const {\n          data,\n          error\n        } = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n          headers: this.headers,\n          xform: factors => {\n            return {\n              data: {\n                factors\n              },\n              error: null\n            };\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _deleteFactor(params) {\n      (0, _helpers.validateUUID)(params.userId);\n      (0, _helpers.validateUUID)(params.id);\n      try {\n        const data = await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Lists all OAuth clients with optional pagination.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _listOAuthClients(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/oauth/clients`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: _fetch._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const clients = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, clients), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              clients: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _createOAuthClient(params) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/admin/oauth/clients`, {\n          body: params,\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets details of a specific OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _getOAuthClient(clientId) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/oauth/clients/${clientId}`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Deletes an OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _deleteOAuthClient(clientId) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/admin/oauth/clients/${clientId}`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Regenerates the secret for an OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _regenerateOAuthClientSecret(clientId) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/admin/oauth/clients/${clientId}/regenerate_secret`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  exports.default = GoTrueAdminApi;\n});","lineCount":500,"map":[[6,2,1,0],[6,6,1,0,"_tslib"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_fetch"],[7,12,2,0],[7,15,2,0,"require"],[7,22,2,0],[7,23,2,0,"_dependencyMap"],[7,37,2,0],[8,2,3,0],[8,6,3,0,"_helpers"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,6,4,0,"_types"],[9,12,4,0],[9,15,4,0,"require"],[9,22,4,0],[9,23,4,0,"_dependencyMap"],[9,37,4,0],[10,2,5,0],[10,6,5,0,"_errors"],[10,13,5,0],[10,16,5,0,"require"],[10,23,5,0],[10,24,5,0,"_dependencyMap"],[10,38,5,0],[11,2,6,15],[11,8,6,21,"GoTrueAdminApi"],[11,22,6,35],[11,23,6,36],[12,4,7,4,"constructor"],[12,15,7,15,"constructor"],[12,16,7,16],[13,6,7,18,"url"],[13,9,7,21],[13,12,7,24],[13,14,7,26],[14,6,7,28,"headers"],[14,13,7,35],[14,16,7,38],[14,17,7,39],[14,18,7,40],[15,6,7,42,"fetch"],[16,4,7,49],[16,5,7,50],[16,7,7,52],[17,6,8,8],[17,10,8,12],[17,11,8,13,"url"],[17,14,8,16],[17,17,8,19,"url"],[17,20,8,22],[18,6,9,8],[18,10,9,12],[18,11,9,13,"headers"],[18,18,9,20],[18,21,9,23,"headers"],[18,28,9,30],[19,6,10,8],[19,10,10,12],[19,11,10,13,"fetch"],[19,16,10,18],[19,19,10,21],[19,23,10,21,"resolveFetch"],[19,44,10,33],[19,46,10,34,"fetch"],[19,51,10,39],[19,52,10,40],[20,6,11,8],[20,10,11,12],[20,11,11,13,"mfa"],[20,14,11,16],[20,17,11,19],[21,8,12,12,"listFactors"],[21,19,12,23],[21,21,12,25],[21,25,12,29],[21,26,12,30,"_listFactors"],[21,38,12,42],[21,39,12,43,"bind"],[21,43,12,47],[21,44,12,48],[21,48,12,52],[21,49,12,53],[22,8,13,12,"deleteFactor"],[22,20,13,24],[22,22,13,26],[22,26,13,30],[22,27,13,31,"_deleteFactor"],[22,40,13,44],[22,41,13,45,"bind"],[22,45,13,49],[22,46,13,50],[22,50,13,54],[23,6,14,8],[23,7,14,9],[24,6,15,8],[24,10,15,12],[24,11,15,13,"oauth"],[24,16,15,18],[24,19,15,21],[25,8,16,12,"listClients"],[25,19,16,23],[25,21,16,25],[25,25,16,29],[25,26,16,30,"_listOAuthClients"],[25,43,16,47],[25,44,16,48,"bind"],[25,48,16,52],[25,49,16,53],[25,53,16,57],[25,54,16,58],[26,8,17,12,"createClient"],[26,20,17,24],[26,22,17,26],[26,26,17,30],[26,27,17,31,"_createOAuthClient"],[26,45,17,49],[26,46,17,50,"bind"],[26,50,17,54],[26,51,17,55],[26,55,17,59],[26,56,17,60],[27,8,18,12,"getClient"],[27,17,18,21],[27,19,18,23],[27,23,18,27],[27,24,18,28,"_getOAuthClient"],[27,39,18,43],[27,40,18,44,"bind"],[27,44,18,48],[27,45,18,49],[27,49,18,53],[27,50,18,54],[28,8,19,12,"deleteClient"],[28,20,19,24],[28,22,19,26],[28,26,19,30],[28,27,19,31,"_deleteOAuthClient"],[28,45,19,49],[28,46,19,50,"bind"],[28,50,19,54],[28,51,19,55],[28,55,19,59],[28,56,19,60],[29,8,20,12,"regenerateClientSecret"],[29,30,20,34],[29,32,20,36],[29,36,20,40],[29,37,20,41,"_regenerateOAuthClientSecret"],[29,65,20,69],[29,66,20,70,"bind"],[29,70,20,74],[29,71,20,75],[29,75,20,79],[30,6,21,8],[30,7,21,9],[31,4,22,4],[32,4,23,4],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,4,28,4],[37,10,28,10,"signOut"],[37,17,28,17,"signOut"],[37,18,28,18,"jwt"],[37,21,28,21],[37,23,28,23,"scope"],[37,28,28,28],[37,31,28,31,"SIGN_OUT_SCOPES"],[37,53,28,46],[37,54,28,47],[37,55,28,48],[37,56,28,49],[37,58,28,51],[38,6,29,8],[38,10,29,12,"SIGN_OUT_SCOPES"],[38,32,29,27],[38,33,29,28,"indexOf"],[38,40,29,35],[38,41,29,36,"scope"],[38,46,29,41],[38,47,29,42],[38,50,29,45],[38,51,29,46],[38,53,29,48],[39,8,30,12],[39,14,30,18],[39,18,30,22,"Error"],[39,23,30,27],[39,24,30,28],[39,77,30,81,"SIGN_OUT_SCOPES"],[39,99,30,96],[39,100,30,97,"join"],[39,104,30,101],[39,105,30,102],[39,109,30,106],[39,110,30,107],[39,112,30,109],[39,113,30,110],[40,6,31,8],[41,6,32,8],[41,10,32,12],[42,8,33,12],[42,14,33,18],[42,18,33,18,"_request"],[42,33,33,26],[42,35,33,27],[42,39,33,31],[42,40,33,32,"fetch"],[42,45,33,37],[42,47,33,39],[42,53,33,45],[42,55,33,47],[42,58,33,50],[42,62,33,54],[42,63,33,55,"url"],[42,66,33,58],[42,83,33,75,"scope"],[42,88,33,80],[42,90,33,82],[42,92,33,84],[43,10,34,16,"headers"],[43,17,34,23],[43,19,34,25],[43,23,34,29],[43,24,34,30,"headers"],[43,31,34,37],[44,10,35,16,"jwt"],[44,13,35,19],[45,10,36,16,"noResolveJson"],[45,23,36,29],[45,25,36,31],[46,8,37,12],[46,9,37,13],[46,10,37,14],[47,8,38,12],[47,15,38,19],[48,10,38,21,"data"],[48,14,38,25],[48,16,38,27],[48,20,38,31],[49,10,38,33,"error"],[49,15,38,38],[49,17,38,40],[50,8,38,45],[50,9,38,46],[51,6,39,8],[51,7,39,9],[51,8,40,8],[51,15,40,15,"error"],[51,20,40,20],[51,22,40,22],[52,8,41,12],[52,12,41,16],[52,16,41,16,"isAuthError"],[52,35,41,27],[52,37,41,28,"error"],[52,42,41,33],[52,43,41,34],[52,45,41,36],[53,10,42,16],[53,17,42,23],[54,12,42,25,"data"],[54,16,42,29],[54,18,42,31],[54,22,42,35],[55,12,42,37,"error"],[56,10,42,43],[56,11,42,44],[57,8,43,12],[58,8,44,12],[58,14,44,18,"error"],[58,19,44,23],[59,6,45,8],[60,4,46,4],[61,4,47,4],[62,0,48,0],[63,0,49,0],[64,0,50,0],[65,0,51,0],[66,4,52,4],[66,10,52,10,"inviteUserByEmail"],[66,27,52,27,"inviteUserByEmail"],[66,28,52,28,"email"],[66,33,52,33],[66,35,52,35,"options"],[66,42,52,42],[66,45,52,45],[66,46,52,46],[66,47,52,47],[66,49,52,49],[67,6,53,8],[67,10,53,12],[68,8,54,12],[68,15,54,19],[68,21,54,25],[68,25,54,25,"_request"],[68,40,54,33],[68,42,54,34],[68,46,54,38],[68,47,54,39,"fetch"],[68,52,54,44],[68,54,54,46],[68,60,54,52],[68,62,54,54],[68,65,54,57],[68,69,54,61],[68,70,54,62,"url"],[68,73,54,65],[68,82,54,74],[68,84,54,76],[69,10,55,16,"body"],[69,14,55,20],[69,16,55,22],[70,12,55,24,"email"],[70,17,55,29],[71,12,55,31,"data"],[71,16,55,35],[71,18,55,37,"options"],[71,25,55,44],[71,26,55,45,"data"],[72,10,55,50],[72,11,55,51],[73,10,56,16,"headers"],[73,17,56,23],[73,19,56,25],[73,23,56,29],[73,24,56,30,"headers"],[73,31,56,37],[74,10,57,16,"redirectTo"],[74,20,57,26],[74,22,57,28,"options"],[74,29,57,35],[74,30,57,36,"redirectTo"],[74,40,57,46],[75,10,58,16,"xform"],[75,15,58,21],[75,17,58,23,"_userResponse"],[76,8,59,12],[76,9,59,13],[76,10,59,14],[77,6,60,8],[77,7,60,9],[77,8,61,8],[77,15,61,15,"error"],[77,20,61,20],[77,22,61,22],[78,8,62,12],[78,12,62,16],[78,16,62,16,"isAuthError"],[78,35,62,27],[78,37,62,28,"error"],[78,42,62,33],[78,43,62,34],[78,45,62,36],[79,10,63,16],[79,17,63,23],[80,12,63,25,"data"],[80,16,63,29],[80,18,63,31],[81,14,63,33,"user"],[81,18,63,37],[81,20,63,39],[82,12,63,44],[82,13,63,45],[83,12,63,47,"error"],[84,10,63,53],[84,11,63,54],[85,8,64,12],[86,8,65,12],[86,14,65,18,"error"],[86,19,65,23],[87,6,66,8],[88,4,67,4],[89,4,68,4],[90,0,69,0],[91,0,70,0],[92,0,71,0],[93,0,72,0],[94,0,73,0],[95,0,74,0],[96,4,75,4],[96,10,75,10,"generateLink"],[96,22,75,22,"generateLink"],[96,23,75,23,"params"],[96,29,75,29],[96,31,75,31],[97,6,76,8],[97,10,76,12],[98,8,77,12],[98,14,77,18],[99,12,77,20,"options"],[100,10,77,28],[100,11,77,29],[100,14,77,32,"params"],[100,20,77,38],[101,10,77,40,"rest"],[101,14,77,44],[101,17,77,47],[101,21,77,47,"__rest"],[101,34,77,53],[101,36,77,54,"params"],[101,42,77,60],[101,44,77,62],[101,45,77,63],[101,54,77,72],[101,55,77,73],[101,56,77,74],[102,8,78,12],[102,14,78,18,"body"],[102,18,78,22],[102,21,78,25,"Object"],[102,27,78,31],[102,28,78,32,"assign"],[102,34,78,38],[102,35,78,39,"Object"],[102,41,78,45],[102,42,78,46,"assign"],[102,48,78,52],[102,49,78,53],[102,50,78,54],[102,51,78,55],[102,53,78,57,"rest"],[102,57,78,61],[102,58,78,62],[102,60,78,64,"options"],[102,67,78,71],[102,68,78,72],[103,8,79,12],[103,12,79,16],[103,22,79,26],[103,26,79,30,"rest"],[103,30,79,34],[103,32,79,36],[104,10,80,16],[105,10,81,16,"body"],[105,14,81,20],[105,15,81,21,"new_email"],[105,24,81,30],[105,27,81,33,"rest"],[105,31,81,37],[105,36,81,42],[105,40,81,46],[105,44,81,50,"rest"],[105,48,81,54],[105,53,81,59],[105,58,81,64],[105,59,81,65],[105,62,81,68],[105,67,81,73],[105,68,81,74],[105,71,81,77,"rest"],[105,75,81,81],[105,76,81,82,"newEmail"],[105,84,81,90],[106,10,82,16],[106,17,82,23,"body"],[106,21,82,27],[106,22,82,28],[106,32,82,38],[106,33,82,39],[107,8,83,12],[108,8,84,12],[108,15,84,19],[108,21,84,25],[108,25,84,25,"_request"],[108,40,84,33],[108,42,84,34],[108,46,84,38],[108,47,84,39,"fetch"],[108,52,84,44],[108,54,84,46],[108,60,84,52],[108,62,84,54],[108,65,84,57],[108,69,84,61],[108,70,84,62,"url"],[108,73,84,65],[108,95,84,87],[108,97,84,89],[109,10,85,16,"body"],[109,14,85,20],[109,16,85,22,"body"],[109,20,85,26],[110,10,86,16,"headers"],[110,17,86,23],[110,19,86,25],[110,23,86,29],[110,24,86,30,"headers"],[110,31,86,37],[111,10,87,16,"xform"],[111,15,87,21],[111,17,87,23,"_generateLinkResponse"],[111,45,87,44],[112,10,88,16,"redirectTo"],[112,20,88,26],[112,22,88,28,"options"],[112,29,88,35],[112,34,88,40],[112,38,88,44],[112,42,88,48,"options"],[112,49,88,55],[112,54,88,60],[112,59,88,65],[112,60,88,66],[112,63,88,69],[112,68,88,74],[112,69,88,75],[112,72,88,78,"options"],[112,79,88,85],[112,80,88,86,"redirectTo"],[113,8,89,12],[113,9,89,13],[113,10,89,14],[114,6,90,8],[114,7,90,9],[114,8,91,8],[114,15,91,15,"error"],[114,20,91,20],[114,22,91,22],[115,8,92,12],[115,12,92,16],[115,16,92,16,"isAuthError"],[115,35,92,27],[115,37,92,28,"error"],[115,42,92,33],[115,43,92,34],[115,45,92,36],[116,10,93,16],[116,17,93,23],[117,12,94,20,"data"],[117,16,94,24],[117,18,94,26],[118,14,95,24,"properties"],[118,24,95,34],[118,26,95,36],[118,30,95,40],[119,14,96,24,"user"],[119,18,96,28],[119,20,96,30],[120,12,97,20],[120,13,97,21],[121,12,98,20,"error"],[122,10,99,16],[122,11,99,17],[123,8,100,12],[124,8,101,12],[124,14,101,18,"error"],[124,19,101,23],[125,6,102,8],[126,4,103,4],[127,4,104,4],[128,4,105,4],[129,0,106,0],[130,0,107,0],[131,0,108,0],[132,4,109,4],[132,10,109,10,"createUser"],[132,20,109,20,"createUser"],[132,21,109,21,"attributes"],[132,31,109,31],[132,33,109,33],[133,6,110,8],[133,10,110,12],[134,8,111,12],[134,15,111,19],[134,21,111,25],[134,25,111,25,"_request"],[134,40,111,33],[134,42,111,34],[134,46,111,38],[134,47,111,39,"fetch"],[134,52,111,44],[134,54,111,46],[134,60,111,52],[134,62,111,54],[134,65,111,57],[134,69,111,61],[134,70,111,62,"url"],[134,73,111,65],[134,87,111,79],[134,89,111,81],[135,10,112,16,"body"],[135,14,112,20],[135,16,112,22,"attributes"],[135,26,112,32],[136,10,113,16,"headers"],[136,17,113,23],[136,19,113,25],[136,23,113,29],[136,24,113,30,"headers"],[136,31,113,37],[137,10,114,16,"xform"],[137,15,114,21],[137,17,114,23,"_userResponse"],[138,8,115,12],[138,9,115,13],[138,10,115,14],[139,6,116,8],[139,7,116,9],[139,8,117,8],[139,15,117,15,"error"],[139,20,117,20],[139,22,117,22],[140,8,118,12],[140,12,118,16],[140,16,118,16,"isAuthError"],[140,35,118,27],[140,37,118,28,"error"],[140,42,118,33],[140,43,118,34],[140,45,118,36],[141,10,119,16],[141,17,119,23],[142,12,119,25,"data"],[142,16,119,29],[142,18,119,31],[143,14,119,33,"user"],[143,18,119,37],[143,20,119,39],[144,12,119,44],[144,13,119,45],[145,12,119,47,"error"],[146,10,119,53],[146,11,119,54],[147,8,120,12],[148,8,121,12],[148,14,121,18,"error"],[148,19,121,23],[149,6,122,8],[150,4,123,4],[151,4,124,4],[152,0,125,0],[153,0,126,0],[154,0,127,0],[155,0,128,0],[156,0,129,0],[157,4,130,4],[157,10,130,10,"listUsers"],[157,19,130,19,"listUsers"],[157,20,130,20,"params"],[157,26,130,26],[157,28,130,28],[158,6,131,8],[158,10,131,12,"_a"],[158,12,131,14],[158,14,131,16,"_b"],[158,16,131,18],[158,18,131,20,"_c"],[158,20,131,22],[158,22,131,24,"_d"],[158,24,131,26],[158,26,131,28,"_e"],[158,28,131,30],[158,30,131,32,"_f"],[158,32,131,34],[158,34,131,36,"_g"],[158,36,131,38],[159,6,132,8],[159,10,132,12],[160,8,133,12],[160,14,133,18,"pagination"],[160,24,133,28],[160,27,133,31],[161,10,133,33,"nextPage"],[161,18,133,41],[161,20,133,43],[161,24,133,47],[162,10,133,49,"lastPage"],[162,18,133,57],[162,20,133,59],[162,21,133,60],[163,10,133,62,"total"],[163,15,133,67],[163,17,133,69],[164,8,133,71],[164,9,133,72],[165,8,134,12],[165,14,134,18,"response"],[165,22,134,26],[165,25,134,29],[165,31,134,35],[165,35,134,35,"_request"],[165,50,134,43],[165,52,134,44],[165,56,134,48],[165,57,134,49,"fetch"],[165,62,134,54],[165,64,134,56],[165,69,134,61],[165,71,134,63],[165,74,134,66],[165,78,134,70],[165,79,134,71,"url"],[165,82,134,74],[165,96,134,88],[165,98,134,90],[166,10,135,16,"headers"],[166,17,135,23],[166,19,135,25],[166,23,135,29],[166,24,135,30,"headers"],[166,31,135,37],[167,10,136,16,"noResolveJson"],[167,23,136,29],[167,25,136,31],[167,29,136,35],[168,10,137,16,"query"],[168,15,137,21],[168,17,137,23],[169,12,138,20,"page"],[169,16,138,24],[169,18,138,26],[169,19,138,27,"_b"],[169,21,138,29],[169,24,138,32],[169,25,138,33,"_a"],[169,27,138,35],[169,30,138,38,"params"],[169,36,138,44],[169,41,138,49],[169,45,138,53],[169,49,138,57,"params"],[169,55,138,63],[169,60,138,68],[169,65,138,73],[169,66,138,74],[169,69,138,77],[169,74,138,82],[169,75,138,83],[169,78,138,86,"params"],[169,84,138,92],[169,85,138,93,"page"],[169,89,138,97],[169,95,138,103],[169,99,138,107],[169,103,138,111,"_a"],[169,105,138,113],[169,110,138,118],[169,115,138,123],[169,116,138,124],[169,119,138,127],[169,124,138,132],[169,125,138,133],[169,128,138,136,"_a"],[169,130,138,138],[169,131,138,139,"toString"],[169,139,138,147],[169,140,138,148],[169,141,138,149],[169,147,138,155],[169,151,138,159],[169,155,138,163,"_b"],[169,157,138,165],[169,162,138,170],[169,167,138,175],[169,168,138,176],[169,171,138,179,"_b"],[169,173,138,181],[169,176,138,184],[169,178,138,186],[170,12,139,20,"per_page"],[170,20,139,28],[170,22,139,30],[170,23,139,31,"_d"],[170,25,139,33],[170,28,139,36],[170,29,139,37,"_c"],[170,31,139,39],[170,34,139,42,"params"],[170,40,139,48],[170,45,139,53],[170,49,139,57],[170,53,139,61,"params"],[170,59,139,67],[170,64,139,72],[170,69,139,77],[170,70,139,78],[170,73,139,81],[170,78,139,86],[170,79,139,87],[170,82,139,90,"params"],[170,88,139,96],[170,89,139,97,"perPage"],[170,96,139,104],[170,102,139,110],[170,106,139,114],[170,110,139,118,"_c"],[170,112,139,120],[170,117,139,125],[170,122,139,130],[170,123,139,131],[170,126,139,134],[170,131,139,139],[170,132,139,140],[170,135,139,143,"_c"],[170,137,139,145],[170,138,139,146,"toString"],[170,146,139,154],[170,147,139,155],[170,148,139,156],[170,154,139,162],[170,158,139,166],[170,162,139,170,"_d"],[170,164,139,172],[170,169,139,177],[170,174,139,182],[170,175,139,183],[170,178,139,186,"_d"],[170,180,139,188],[170,183,139,191],[171,10,140,16],[171,11,140,17],[172,10,141,16,"xform"],[172,15,141,21],[172,17,141,23,"_noResolveJsonResponse"],[173,8,142,12],[173,9,142,13],[173,10,142,14],[174,8,143,12],[174,12,143,16,"response"],[174,20,143,24],[174,21,143,25,"error"],[174,26,143,30],[174,28,144,16],[174,34,144,22,"response"],[174,42,144,30],[174,43,144,31,"error"],[174,48,144,36],[175,8,145,12],[175,14,145,18,"users"],[175,19,145,23],[175,22,145,26],[175,28,145,32,"response"],[175,36,145,40],[175,37,145,41,"json"],[175,41,145,45],[175,42,145,46],[175,43,145,47],[176,8,146,12],[176,14,146,18,"total"],[176,19,146,23],[176,22,146,26],[176,23,146,27,"_e"],[176,25,146,29],[176,28,146,32,"response"],[176,36,146,40],[176,37,146,41,"headers"],[176,44,146,48],[176,45,146,49,"get"],[176,48,146,52],[176,49,146,53],[176,64,146,68],[176,65,146,69],[176,71,146,75],[176,75,146,79],[176,79,146,83,"_e"],[176,81,146,85],[176,86,146,90],[176,91,146,95],[176,92,146,96],[176,95,146,99,"_e"],[176,97,146,101],[176,100,146,104],[176,101,146,105],[177,8,147,12],[177,14,147,18,"links"],[177,19,147,23],[177,22,147,26],[177,23,147,27,"_g"],[177,25,147,29],[177,28,147,32],[177,29,147,33,"_f"],[177,31,147,35],[177,34,147,38,"response"],[177,42,147,46],[177,43,147,47,"headers"],[177,50,147,54],[177,51,147,55,"get"],[177,54,147,58],[177,55,147,59],[177,61,147,65],[177,62,147,66],[177,68,147,72],[177,72,147,76],[177,76,147,80,"_f"],[177,78,147,82],[177,83,147,87],[177,88,147,92],[177,89,147,93],[177,92,147,96],[177,97,147,101],[177,98,147,102],[177,101,147,105,"_f"],[177,103,147,107],[177,104,147,108,"split"],[177,109,147,113],[177,110,147,114],[177,113,147,117],[177,114,147,118],[177,120,147,124],[177,124,147,128],[177,128,147,132,"_g"],[177,130,147,134],[177,135,147,139],[177,140,147,144],[177,141,147,145],[177,144,147,148,"_g"],[177,146,147,150],[177,149,147,153],[177,151,147,155],[178,8,148,12],[178,12,148,16,"links"],[178,17,148,21],[178,18,148,22,"length"],[178,24,148,28],[178,27,148,31],[178,28,148,32],[178,30,148,34],[179,10,149,16,"links"],[179,15,149,21],[179,16,149,22,"forEach"],[179,23,149,29],[179,24,149,31,"link"],[179,28,149,35],[179,32,149,40],[180,12,150,20],[180,18,150,26,"page"],[180,22,150,30],[180,25,150,33,"parseInt"],[180,33,150,41],[180,34,150,42,"link"],[180,38,150,46],[180,39,150,47,"split"],[180,44,150,52],[180,45,150,53],[180,48,150,56],[180,49,150,57],[180,50,150,58],[180,51,150,59],[180,52,150,60],[180,53,150,61,"split"],[180,58,150,66],[180,59,150,67],[180,62,150,70],[180,63,150,71],[180,64,150,72],[180,65,150,73],[180,66,150,74],[180,67,150,75,"substring"],[180,76,150,84],[180,77,150,85],[180,78,150,86],[180,80,150,88],[180,81,150,89],[180,82,150,90],[180,83,150,91],[181,12,151,20],[181,18,151,26,"rel"],[181,21,151,29],[181,24,151,32,"JSON"],[181,28,151,36],[181,29,151,37,"parse"],[181,34,151,42],[181,35,151,43,"link"],[181,39,151,47],[181,40,151,48,"split"],[181,45,151,53],[181,46,151,54],[181,49,151,57],[181,50,151,58],[181,51,151,59],[181,52,151,60],[181,53,151,61],[181,54,151,62,"split"],[181,59,151,67],[181,60,151,68],[181,63,151,71],[181,64,151,72],[181,65,151,73],[181,66,151,74],[181,67,151,75],[181,68,151,76],[182,12,152,20,"pagination"],[182,22,152,30],[182,23,152,31],[182,26,152,34,"rel"],[182,29,152,37],[182,35,152,43],[182,36,152,44],[182,39,152,47,"page"],[182,43,152,51],[183,10,153,16],[183,11,153,17],[183,12,153,18],[184,10,154,16,"pagination"],[184,20,154,26],[184,21,154,27,"total"],[184,26,154,32],[184,29,154,35,"parseInt"],[184,37,154,43],[184,38,154,44,"total"],[184,43,154,49],[184,44,154,50],[185,8,155,12],[186,8,156,12],[186,15,156,19],[187,10,156,21,"data"],[187,14,156,25],[187,16,156,27,"Object"],[187,22,156,33],[187,23,156,34,"assign"],[187,29,156,40],[187,30,156,41,"Object"],[187,36,156,47],[187,37,156,48,"assign"],[187,43,156,54],[187,44,156,55],[187,45,156,56],[187,46,156,57],[187,48,156,59,"users"],[187,53,156,64],[187,54,156,65],[187,56,156,67,"pagination"],[187,66,156,77],[187,67,156,78],[188,10,156,80,"error"],[188,15,156,85],[188,17,156,87],[189,8,156,92],[189,9,156,93],[190,6,157,8],[190,7,157,9],[190,8,158,8],[190,15,158,15,"error"],[190,20,158,20],[190,22,158,22],[191,8,159,12],[191,12,159,16],[191,16,159,16,"isAuthError"],[191,35,159,27],[191,37,159,28,"error"],[191,42,159,33],[191,43,159,34],[191,45,159,36],[192,10,160,16],[192,17,160,23],[193,12,160,25,"data"],[193,16,160,29],[193,18,160,31],[194,14,160,33,"users"],[194,19,160,38],[194,21,160,40],[195,12,160,43],[195,13,160,44],[196,12,160,46,"error"],[197,10,160,52],[197,11,160,53],[198,8,161,12],[199,8,162,12],[199,14,162,18,"error"],[199,19,162,23],[200,6,163,8],[201,4,164,4],[202,4,165,4],[203,0,166,0],[204,0,167,0],[205,0,168,0],[206,0,169,0],[207,0,170,0],[208,0,171,0],[209,4,172,4],[209,10,172,10,"getUserById"],[209,21,172,21,"getUserById"],[209,22,172,22,"uid"],[209,25,172,25],[209,27,172,27],[210,6,173,8],[210,10,173,8,"validateUUID"],[210,31,173,20],[210,33,173,21,"uid"],[210,36,173,24],[210,37,173,25],[211,6,174,8],[211,10,174,12],[212,8,175,12],[212,15,175,19],[212,21,175,25],[212,25,175,25,"_request"],[212,40,175,33],[212,42,175,34],[212,46,175,38],[212,47,175,39,"fetch"],[212,52,175,44],[212,54,175,46],[212,59,175,51],[212,61,175,53],[212,64,175,56],[212,68,175,60],[212,69,175,61,"url"],[212,72,175,64],[212,88,175,80,"uid"],[212,91,175,83],[212,93,175,85],[212,95,175,87],[213,10,176,16,"headers"],[213,17,176,23],[213,19,176,25],[213,23,176,29],[213,24,176,30,"headers"],[213,31,176,37],[214,10,177,16,"xform"],[214,15,177,21],[214,17,177,23,"_userResponse"],[215,8,178,12],[215,9,178,13],[215,10,178,14],[216,6,179,8],[216,7,179,9],[216,8,180,8],[216,15,180,15,"error"],[216,20,180,20],[216,22,180,22],[217,8,181,12],[217,12,181,16],[217,16,181,16,"isAuthError"],[217,35,181,27],[217,37,181,28,"error"],[217,42,181,33],[217,43,181,34],[217,45,181,36],[218,10,182,16],[218,17,182,23],[219,12,182,25,"data"],[219,16,182,29],[219,18,182,31],[220,14,182,33,"user"],[220,18,182,37],[220,20,182,39],[221,12,182,44],[221,13,182,45],[222,12,182,47,"error"],[223,10,182,53],[223,11,182,54],[224,8,183,12],[225,8,184,12],[225,14,184,18,"error"],[225,19,184,23],[226,6,185,8],[227,4,186,4],[228,4,187,4],[229,0,188,0],[230,0,189,0],[231,0,190,0],[232,0,191,0],[233,0,192,0],[234,0,193,0],[235,4,194,4],[235,10,194,10,"updateUserById"],[235,24,194,24,"updateUserById"],[235,25,194,25,"uid"],[235,28,194,28],[235,30,194,30,"attributes"],[235,40,194,40],[235,42,194,42],[236,6,195,8],[236,10,195,8,"validateUUID"],[236,31,195,20],[236,33,195,21,"uid"],[236,36,195,24],[236,37,195,25],[237,6,196,8],[237,10,196,12],[238,8,197,12],[238,15,197,19],[238,21,197,25],[238,25,197,25,"_request"],[238,40,197,33],[238,42,197,34],[238,46,197,38],[238,47,197,39,"fetch"],[238,52,197,44],[238,54,197,46],[238,59,197,51],[238,61,197,53],[238,64,197,56],[238,68,197,60],[238,69,197,61,"url"],[238,72,197,64],[238,88,197,80,"uid"],[238,91,197,83],[238,93,197,85],[238,95,197,87],[239,10,198,16,"body"],[239,14,198,20],[239,16,198,22,"attributes"],[239,26,198,32],[240,10,199,16,"headers"],[240,17,199,23],[240,19,199,25],[240,23,199,29],[240,24,199,30,"headers"],[240,31,199,37],[241,10,200,16,"xform"],[241,15,200,21],[241,17,200,23,"_userResponse"],[242,8,201,12],[242,9,201,13],[242,10,201,14],[243,6,202,8],[243,7,202,9],[243,8,203,8],[243,15,203,15,"error"],[243,20,203,20],[243,22,203,22],[244,8,204,12],[244,12,204,16],[244,16,204,16,"isAuthError"],[244,35,204,27],[244,37,204,28,"error"],[244,42,204,33],[244,43,204,34],[244,45,204,36],[245,10,205,16],[245,17,205,23],[246,12,205,25,"data"],[246,16,205,29],[246,18,205,31],[247,14,205,33,"user"],[247,18,205,37],[247,20,205,39],[248,12,205,44],[248,13,205,45],[249,12,205,47,"error"],[250,10,205,53],[250,11,205,54],[251,8,206,12],[252,8,207,12],[252,14,207,18,"error"],[252,19,207,23],[253,6,208,8],[254,4,209,4],[255,4,210,4],[256,0,211,0],[257,0,212,0],[258,0,213,0],[259,0,214,0],[260,0,215,0],[261,0,216,0],[262,0,217,0],[263,0,218,0],[264,4,219,4],[264,10,219,10,"deleteUser"],[264,20,219,20,"deleteUser"],[264,21,219,21,"id"],[264,23,219,23],[264,25,219,25,"shouldSoftDelete"],[264,41,219,41],[264,44,219,44],[264,49,219,49],[264,51,219,51],[265,6,220,8],[265,10,220,8,"validateUUID"],[265,31,220,20],[265,33,220,21,"id"],[265,35,220,23],[265,36,220,24],[266,6,221,8],[266,10,221,12],[267,8,222,12],[267,15,222,19],[267,21,222,25],[267,25,222,25,"_request"],[267,40,222,33],[267,42,222,34],[267,46,222,38],[267,47,222,39,"fetch"],[267,52,222,44],[267,54,222,46],[267,62,222,54],[267,64,222,56],[267,67,222,59],[267,71,222,63],[267,72,222,64,"url"],[267,75,222,67],[267,91,222,83,"id"],[267,93,222,85],[267,95,222,87],[267,97,222,89],[268,10,223,16,"headers"],[268,17,223,23],[268,19,223,25],[268,23,223,29],[268,24,223,30,"headers"],[268,31,223,37],[269,10,224,16,"body"],[269,14,224,20],[269,16,224,22],[270,12,225,20,"should_soft_delete"],[270,30,225,38],[270,32,225,40,"shouldSoftDelete"],[271,10,226,16],[271,11,226,17],[272,10,227,16,"xform"],[272,15,227,21],[272,17,227,23,"_userResponse"],[273,8,228,12],[273,9,228,13],[273,10,228,14],[274,6,229,8],[274,7,229,9],[274,8,230,8],[274,15,230,15,"error"],[274,20,230,20],[274,22,230,22],[275,8,231,12],[275,12,231,16],[275,16,231,16,"isAuthError"],[275,35,231,27],[275,37,231,28,"error"],[275,42,231,33],[275,43,231,34],[275,45,231,36],[276,10,232,16],[276,17,232,23],[277,12,232,25,"data"],[277,16,232,29],[277,18,232,31],[278,14,232,33,"user"],[278,18,232,37],[278,20,232,39],[279,12,232,44],[279,13,232,45],[280,12,232,47,"error"],[281,10,232,53],[281,11,232,54],[282,8,233,12],[283,8,234,12],[283,14,234,18,"error"],[283,19,234,23],[284,6,235,8],[285,4,236,4],[286,4,237,4],[286,10,237,10,"_listFactors"],[286,22,237,22,"_listFactors"],[286,23,237,23,"params"],[286,29,237,29],[286,31,237,31],[287,6,238,8],[287,10,238,8,"validateUUID"],[287,31,238,20],[287,33,238,21,"params"],[287,39,238,27],[287,40,238,28,"userId"],[287,46,238,34],[287,47,238,35],[288,6,239,8],[288,10,239,12],[289,8,240,12],[289,14,240,18],[290,10,240,20,"data"],[290,14,240,24],[291,10,240,26,"error"],[292,8,240,32],[292,9,240,33],[292,12,240,36],[292,18,240,42],[292,22,240,42,"_request"],[292,37,240,50],[292,39,240,51],[292,43,240,55],[292,44,240,56,"fetch"],[292,49,240,61],[292,51,240,63],[292,56,240,68],[292,58,240,70],[292,61,240,73],[292,65,240,77],[292,66,240,78,"url"],[292,69,240,81],[292,85,240,97,"params"],[292,91,240,103],[292,92,240,104,"userId"],[292,98,240,110],[292,108,240,120],[292,110,240,122],[293,10,241,16,"headers"],[293,17,241,23],[293,19,241,25],[293,23,241,29],[293,24,241,30,"headers"],[293,31,241,37],[294,10,242,16,"xform"],[294,15,242,21],[294,17,242,24,"factors"],[294,24,242,31],[294,28,242,36],[295,12,243,20],[295,19,243,27],[296,14,243,29,"data"],[296,18,243,33],[296,20,243,35],[297,16,243,37,"factors"],[298,14,243,45],[298,15,243,46],[299,14,243,48,"error"],[299,19,243,53],[299,21,243,55],[300,12,243,60],[300,13,243,61],[301,10,244,16],[302,8,245,12],[302,9,245,13],[302,10,245,14],[303,8,246,12],[303,15,246,19],[304,10,246,21,"data"],[304,14,246,25],[305,10,246,27,"error"],[306,8,246,33],[306,9,246,34],[307,6,247,8],[307,7,247,9],[307,8,248,8],[307,15,248,15,"error"],[307,20,248,20],[307,22,248,22],[308,8,249,12],[308,12,249,16],[308,16,249,16,"isAuthError"],[308,35,249,27],[308,37,249,28,"error"],[308,42,249,33],[308,43,249,34],[308,45,249,36],[309,10,250,16],[309,17,250,23],[310,12,250,25,"data"],[310,16,250,29],[310,18,250,31],[310,22,250,35],[311,12,250,37,"error"],[312,10,250,43],[312,11,250,44],[313,8,251,12],[314,8,252,12],[314,14,252,18,"error"],[314,19,252,23],[315,6,253,8],[316,4,254,4],[317,4,255,4],[317,10,255,10,"_deleteFactor"],[317,23,255,23,"_deleteFactor"],[317,24,255,24,"params"],[317,30,255,30],[317,32,255,32],[318,6,256,8],[318,10,256,8,"validateUUID"],[318,31,256,20],[318,33,256,21,"params"],[318,39,256,27],[318,40,256,28,"userId"],[318,46,256,34],[318,47,256,35],[319,6,257,8],[319,10,257,8,"validateUUID"],[319,31,257,20],[319,33,257,21,"params"],[319,39,257,27],[319,40,257,28,"id"],[319,42,257,30],[319,43,257,31],[320,6,258,8],[320,10,258,12],[321,8,259,12],[321,14,259,18,"data"],[321,18,259,22],[321,21,259,25],[321,27,259,31],[321,31,259,31,"_request"],[321,46,259,39],[321,48,259,40],[321,52,259,44],[321,53,259,45,"fetch"],[321,58,259,50],[321,60,259,52],[321,68,259,60],[321,70,259,62],[321,73,259,65],[321,77,259,69],[321,78,259,70,"url"],[321,81,259,73],[321,97,259,89,"params"],[321,103,259,95],[321,104,259,96,"userId"],[321,110,259,102],[321,122,259,114,"params"],[321,128,259,120],[321,129,259,121,"id"],[321,131,259,123],[321,133,259,125],[321,135,259,127],[322,10,260,16,"headers"],[322,17,260,23],[322,19,260,25],[322,23,260,29],[322,24,260,30,"headers"],[323,8,261,12],[323,9,261,13],[323,10,261,14],[324,8,262,12],[324,15,262,19],[325,10,262,21,"data"],[325,14,262,25],[326,10,262,27,"error"],[326,15,262,32],[326,17,262,34],[327,8,262,39],[327,9,262,40],[328,6,263,8],[328,7,263,9],[328,8,264,8],[328,15,264,15,"error"],[328,20,264,20],[328,22,264,22],[329,8,265,12],[329,12,265,16],[329,16,265,16,"isAuthError"],[329,35,265,27],[329,37,265,28,"error"],[329,42,265,33],[329,43,265,34],[329,45,265,36],[330,10,266,16],[330,17,266,23],[331,12,266,25,"data"],[331,16,266,29],[331,18,266,31],[331,22,266,35],[332,12,266,37,"error"],[333,10,266,43],[333,11,266,44],[334,8,267,12],[335,8,268,12],[335,14,268,18,"error"],[335,19,268,23],[336,6,269,8],[337,4,270,4],[338,4,271,4],[339,0,272,0],[340,0,273,0],[341,0,274,0],[342,0,275,0],[343,0,276,0],[344,4,277,4],[344,10,277,10,"_listOAuthClients"],[344,27,277,27,"_listOAuthClients"],[344,28,277,28,"params"],[344,34,277,34],[344,36,277,36],[345,6,278,8],[345,10,278,12,"_a"],[345,12,278,14],[345,14,278,16,"_b"],[345,16,278,18],[345,18,278,20,"_c"],[345,20,278,22],[345,22,278,24,"_d"],[345,24,278,26],[345,26,278,28,"_e"],[345,28,278,30],[345,30,278,32,"_f"],[345,32,278,34],[345,34,278,36,"_g"],[345,36,278,38],[346,6,279,8],[346,10,279,12],[347,8,280,12],[347,14,280,18,"pagination"],[347,24,280,28],[347,27,280,31],[348,10,280,33,"nextPage"],[348,18,280,41],[348,20,280,43],[348,24,280,47],[349,10,280,49,"lastPage"],[349,18,280,57],[349,20,280,59],[349,21,280,60],[350,10,280,62,"total"],[350,15,280,67],[350,17,280,69],[351,8,280,71],[351,9,280,72],[352,8,281,12],[352,14,281,18,"response"],[352,22,281,26],[352,25,281,29],[352,31,281,35],[352,35,281,35,"_request"],[352,50,281,43],[352,52,281,44],[352,56,281,48],[352,57,281,49,"fetch"],[352,62,281,54],[352,64,281,56],[352,69,281,61],[352,71,281,63],[352,74,281,66],[352,78,281,70],[352,79,281,71,"url"],[352,82,281,74],[352,104,281,96],[352,106,281,98],[353,10,282,16,"headers"],[353,17,282,23],[353,19,282,25],[353,23,282,29],[353,24,282,30,"headers"],[353,31,282,37],[354,10,283,16,"noResolveJson"],[354,23,283,29],[354,25,283,31],[354,29,283,35],[355,10,284,16,"query"],[355,15,284,21],[355,17,284,23],[356,12,285,20,"page"],[356,16,285,24],[356,18,285,26],[356,19,285,27,"_b"],[356,21,285,29],[356,24,285,32],[356,25,285,33,"_a"],[356,27,285,35],[356,30,285,38,"params"],[356,36,285,44],[356,41,285,49],[356,45,285,53],[356,49,285,57,"params"],[356,55,285,63],[356,60,285,68],[356,65,285,73],[356,66,285,74],[356,69,285,77],[356,74,285,82],[356,75,285,83],[356,78,285,86,"params"],[356,84,285,92],[356,85,285,93,"page"],[356,89,285,97],[356,95,285,103],[356,99,285,107],[356,103,285,111,"_a"],[356,105,285,113],[356,110,285,118],[356,115,285,123],[356,116,285,124],[356,119,285,127],[356,124,285,132],[356,125,285,133],[356,128,285,136,"_a"],[356,130,285,138],[356,131,285,139,"toString"],[356,139,285,147],[356,140,285,148],[356,141,285,149],[356,147,285,155],[356,151,285,159],[356,155,285,163,"_b"],[356,157,285,165],[356,162,285,170],[356,167,285,175],[356,168,285,176],[356,171,285,179,"_b"],[356,173,285,181],[356,176,285,184],[356,178,285,186],[357,12,286,20,"per_page"],[357,20,286,28],[357,22,286,30],[357,23,286,31,"_d"],[357,25,286,33],[357,28,286,36],[357,29,286,37,"_c"],[357,31,286,39],[357,34,286,42,"params"],[357,40,286,48],[357,45,286,53],[357,49,286,57],[357,53,286,61,"params"],[357,59,286,67],[357,64,286,72],[357,69,286,77],[357,70,286,78],[357,73,286,81],[357,78,286,86],[357,79,286,87],[357,82,286,90,"params"],[357,88,286,96],[357,89,286,97,"perPage"],[357,96,286,104],[357,102,286,110],[357,106,286,114],[357,110,286,118,"_c"],[357,112,286,120],[357,117,286,125],[357,122,286,130],[357,123,286,131],[357,126,286,134],[357,131,286,139],[357,132,286,140],[357,135,286,143,"_c"],[357,137,286,145],[357,138,286,146,"toString"],[357,146,286,154],[357,147,286,155],[357,148,286,156],[357,154,286,162],[357,158,286,166],[357,162,286,170,"_d"],[357,164,286,172],[357,169,286,177],[357,174,286,182],[357,175,286,183],[357,178,286,186,"_d"],[357,180,286,188],[357,183,286,191],[358,10,287,16],[358,11,287,17],[359,10,288,16,"xform"],[359,15,288,21],[359,17,288,23,"_noResolveJsonResponse"],[360,8,289,12],[360,9,289,13],[360,10,289,14],[361,8,290,12],[361,12,290,16,"response"],[361,20,290,24],[361,21,290,25,"error"],[361,26,290,30],[361,28,291,16],[361,34,291,22,"response"],[361,42,291,30],[361,43,291,31,"error"],[361,48,291,36],[362,8,292,12],[362,14,292,18,"clients"],[362,21,292,25],[362,24,292,28],[362,30,292,34,"response"],[362,38,292,42],[362,39,292,43,"json"],[362,43,292,47],[362,44,292,48],[362,45,292,49],[363,8,293,12],[363,14,293,18,"total"],[363,19,293,23],[363,22,293,26],[363,23,293,27,"_e"],[363,25,293,29],[363,28,293,32,"response"],[363,36,293,40],[363,37,293,41,"headers"],[363,44,293,48],[363,45,293,49,"get"],[363,48,293,52],[363,49,293,53],[363,64,293,68],[363,65,293,69],[363,71,293,75],[363,75,293,79],[363,79,293,83,"_e"],[363,81,293,85],[363,86,293,90],[363,91,293,95],[363,92,293,96],[363,95,293,99,"_e"],[363,97,293,101],[363,100,293,104],[363,101,293,105],[364,8,294,12],[364,14,294,18,"links"],[364,19,294,23],[364,22,294,26],[364,23,294,27,"_g"],[364,25,294,29],[364,28,294,32],[364,29,294,33,"_f"],[364,31,294,35],[364,34,294,38,"response"],[364,42,294,46],[364,43,294,47,"headers"],[364,50,294,54],[364,51,294,55,"get"],[364,54,294,58],[364,55,294,59],[364,61,294,65],[364,62,294,66],[364,68,294,72],[364,72,294,76],[364,76,294,80,"_f"],[364,78,294,82],[364,83,294,87],[364,88,294,92],[364,89,294,93],[364,92,294,96],[364,97,294,101],[364,98,294,102],[364,101,294,105,"_f"],[364,103,294,107],[364,104,294,108,"split"],[364,109,294,113],[364,110,294,114],[364,113,294,117],[364,114,294,118],[364,120,294,124],[364,124,294,128],[364,128,294,132,"_g"],[364,130,294,134],[364,135,294,139],[364,140,294,144],[364,141,294,145],[364,144,294,148,"_g"],[364,146,294,150],[364,149,294,153],[364,151,294,155],[365,8,295,12],[365,12,295,16,"links"],[365,17,295,21],[365,18,295,22,"length"],[365,24,295,28],[365,27,295,31],[365,28,295,32],[365,30,295,34],[366,10,296,16,"links"],[366,15,296,21],[366,16,296,22,"forEach"],[366,23,296,29],[366,24,296,31,"link"],[366,28,296,35],[366,32,296,40],[367,12,297,20],[367,18,297,26,"page"],[367,22,297,30],[367,25,297,33,"parseInt"],[367,33,297,41],[367,34,297,42,"link"],[367,38,297,46],[367,39,297,47,"split"],[367,44,297,52],[367,45,297,53],[367,48,297,56],[367,49,297,57],[367,50,297,58],[367,51,297,59],[367,52,297,60],[367,53,297,61,"split"],[367,58,297,66],[367,59,297,67],[367,62,297,70],[367,63,297,71],[367,64,297,72],[367,65,297,73],[367,66,297,74],[367,67,297,75,"substring"],[367,76,297,84],[367,77,297,85],[367,78,297,86],[367,80,297,88],[367,81,297,89],[367,82,297,90],[367,83,297,91],[368,12,298,20],[368,18,298,26,"rel"],[368,21,298,29],[368,24,298,32,"JSON"],[368,28,298,36],[368,29,298,37,"parse"],[368,34,298,42],[368,35,298,43,"link"],[368,39,298,47],[368,40,298,48,"split"],[368,45,298,53],[368,46,298,54],[368,49,298,57],[368,50,298,58],[368,51,298,59],[368,52,298,60],[368,53,298,61],[368,54,298,62,"split"],[368,59,298,67],[368,60,298,68],[368,63,298,71],[368,64,298,72],[368,65,298,73],[368,66,298,74],[368,67,298,75],[368,68,298,76],[369,12,299,20,"pagination"],[369,22,299,30],[369,23,299,31],[369,26,299,34,"rel"],[369,29,299,37],[369,35,299,43],[369,36,299,44],[369,39,299,47,"page"],[369,43,299,51],[370,10,300,16],[370,11,300,17],[370,12,300,18],[371,10,301,16,"pagination"],[371,20,301,26],[371,21,301,27,"total"],[371,26,301,32],[371,29,301,35,"parseInt"],[371,37,301,43],[371,38,301,44,"total"],[371,43,301,49],[371,44,301,50],[372,8,302,12],[373,8,303,12],[373,15,303,19],[374,10,303,21,"data"],[374,14,303,25],[374,16,303,27,"Object"],[374,22,303,33],[374,23,303,34,"assign"],[374,29,303,40],[374,30,303,41,"Object"],[374,36,303,47],[374,37,303,48,"assign"],[374,43,303,54],[374,44,303,55],[374,45,303,56],[374,46,303,57],[374,48,303,59,"clients"],[374,55,303,66],[374,56,303,67],[374,58,303,69,"pagination"],[374,68,303,79],[374,69,303,80],[375,10,303,82,"error"],[375,15,303,87],[375,17,303,89],[376,8,303,94],[376,9,303,95],[377,6,304,8],[377,7,304,9],[377,8,305,8],[377,15,305,15,"error"],[377,20,305,20],[377,22,305,22],[378,8,306,12],[378,12,306,16],[378,16,306,16,"isAuthError"],[378,35,306,27],[378,37,306,28,"error"],[378,42,306,33],[378,43,306,34],[378,45,306,36],[379,10,307,16],[379,17,307,23],[380,12,307,25,"data"],[380,16,307,29],[380,18,307,31],[381,14,307,33,"clients"],[381,21,307,40],[381,23,307,42],[382,12,307,45],[382,13,307,46],[383,12,307,48,"error"],[384,10,307,54],[384,11,307,55],[385,8,308,12],[386,8,309,12],[386,14,309,18,"error"],[386,19,309,23],[387,6,310,8],[388,4,311,4],[389,4,312,4],[390,0,313,0],[391,0,314,0],[392,0,315,0],[393,0,316,0],[394,0,317,0],[395,4,318,4],[395,10,318,10,"_createOAuthClient"],[395,28,318,28,"_createOAuthClient"],[395,29,318,29,"params"],[395,35,318,35],[395,37,318,37],[396,6,319,8],[396,10,319,12],[397,8,320,12],[397,15,320,19],[397,21,320,25],[397,25,320,25,"_request"],[397,40,320,33],[397,42,320,34],[397,46,320,38],[397,47,320,39,"fetch"],[397,52,320,44],[397,54,320,46],[397,60,320,52],[397,62,320,54],[397,65,320,57],[397,69,320,61],[397,70,320,62,"url"],[397,73,320,65],[397,95,320,87],[397,97,320,89],[398,10,321,16,"body"],[398,14,321,20],[398,16,321,22,"params"],[398,22,321,28],[399,10,322,16,"headers"],[399,17,322,23],[399,19,322,25],[399,23,322,29],[399,24,322,30,"headers"],[399,31,322,37],[400,10,323,16,"xform"],[400,15,323,21],[400,17,323,24,"client"],[400,23,323,30],[400,27,323,35],[401,12,324,20],[401,19,324,27],[402,14,324,29,"data"],[402,18,324,33],[402,20,324,35,"client"],[402,26,324,41],[403,14,324,43,"error"],[403,19,324,48],[403,21,324,50],[404,12,324,55],[404,13,324,56],[405,10,325,16],[406,8,326,12],[406,9,326,13],[406,10,326,14],[407,6,327,8],[407,7,327,9],[407,8,328,8],[407,15,328,15,"error"],[407,20,328,20],[407,22,328,22],[408,8,329,12],[408,12,329,16],[408,16,329,16,"isAuthError"],[408,35,329,27],[408,37,329,28,"error"],[408,42,329,33],[408,43,329,34],[408,45,329,36],[409,10,330,16],[409,17,330,23],[410,12,330,25,"data"],[410,16,330,29],[410,18,330,31],[410,22,330,35],[411,12,330,37,"error"],[412,10,330,43],[412,11,330,44],[413,8,331,12],[414,8,332,12],[414,14,332,18,"error"],[414,19,332,23],[415,6,333,8],[416,4,334,4],[417,4,335,4],[418,0,336,0],[419,0,337,0],[420,0,338,0],[421,0,339,0],[422,0,340,0],[423,4,341,4],[423,10,341,10,"_getOAuthClient"],[423,25,341,25,"_getOAuthClient"],[423,26,341,26,"clientId"],[423,34,341,34],[423,36,341,36],[424,6,342,8],[424,10,342,12],[425,8,343,12],[425,15,343,19],[425,21,343,25],[425,25,343,25,"_request"],[425,40,343,33],[425,42,343,34],[425,46,343,38],[425,47,343,39,"fetch"],[425,52,343,44],[425,54,343,46],[425,59,343,51],[425,61,343,53],[425,64,343,56],[425,68,343,60],[425,69,343,61,"url"],[425,72,343,64],[425,96,343,88,"clientId"],[425,104,343,96],[425,106,343,98],[425,108,343,100],[426,10,344,16,"headers"],[426,17,344,23],[426,19,344,25],[426,23,344,29],[426,24,344,30,"headers"],[426,31,344,37],[427,10,345,16,"xform"],[427,15,345,21],[427,17,345,24,"client"],[427,23,345,30],[427,27,345,35],[428,12,346,20],[428,19,346,27],[429,14,346,29,"data"],[429,18,346,33],[429,20,346,35,"client"],[429,26,346,41],[430,14,346,43,"error"],[430,19,346,48],[430,21,346,50],[431,12,346,55],[431,13,346,56],[432,10,347,16],[433,8,348,12],[433,9,348,13],[433,10,348,14],[434,6,349,8],[434,7,349,9],[434,8,350,8],[434,15,350,15,"error"],[434,20,350,20],[434,22,350,22],[435,8,351,12],[435,12,351,16],[435,16,351,16,"isAuthError"],[435,35,351,27],[435,37,351,28,"error"],[435,42,351,33],[435,43,351,34],[435,45,351,36],[436,10,352,16],[436,17,352,23],[437,12,352,25,"data"],[437,16,352,29],[437,18,352,31],[437,22,352,35],[438,12,352,37,"error"],[439,10,352,43],[439,11,352,44],[440,8,353,12],[441,8,354,12],[441,14,354,18,"error"],[441,19,354,23],[442,6,355,8],[443,4,356,4],[444,4,357,4],[445,0,358,0],[446,0,359,0],[447,0,360,0],[448,0,361,0],[449,0,362,0],[450,4,363,4],[450,10,363,10,"_deleteOAuthClient"],[450,28,363,28,"_deleteOAuthClient"],[450,29,363,29,"clientId"],[450,37,363,37],[450,39,363,39],[451,6,364,8],[451,10,364,12],[452,8,365,12],[452,15,365,19],[452,21,365,25],[452,25,365,25,"_request"],[452,40,365,33],[452,42,365,34],[452,46,365,38],[452,47,365,39,"fetch"],[452,52,365,44],[452,54,365,46],[452,62,365,54],[452,64,365,56],[452,67,365,59],[452,71,365,63],[452,72,365,64,"url"],[452,75,365,67],[452,99,365,91,"clientId"],[452,107,365,99],[452,109,365,101],[452,111,365,103],[453,10,366,16,"headers"],[453,17,366,23],[453,19,366,25],[453,23,366,29],[453,24,366,30,"headers"],[453,31,366,37],[454,10,367,16,"xform"],[454,15,367,21],[454,17,367,24,"client"],[454,23,367,30],[454,27,367,35],[455,12,368,20],[455,19,368,27],[456,14,368,29,"data"],[456,18,368,33],[456,20,368,35,"client"],[456,26,368,41],[457,14,368,43,"error"],[457,19,368,48],[457,21,368,50],[458,12,368,55],[458,13,368,56],[459,10,369,16],[460,8,370,12],[460,9,370,13],[460,10,370,14],[461,6,371,8],[461,7,371,9],[461,8,372,8],[461,15,372,15,"error"],[461,20,372,20],[461,22,372,22],[462,8,373,12],[462,12,373,16],[462,16,373,16,"isAuthError"],[462,35,373,27],[462,37,373,28,"error"],[462,42,373,33],[462,43,373,34],[462,45,373,36],[463,10,374,16],[463,17,374,23],[464,12,374,25,"data"],[464,16,374,29],[464,18,374,31],[464,22,374,35],[465,12,374,37,"error"],[466,10,374,43],[466,11,374,44],[467,8,375,12],[468,8,376,12],[468,14,376,18,"error"],[468,19,376,23],[469,6,377,8],[470,4,378,4],[471,4,379,4],[472,0,380,0],[473,0,381,0],[474,0,382,0],[475,0,383,0],[476,0,384,0],[477,4,385,4],[477,10,385,10,"_regenerateOAuthClientSecret"],[477,38,385,38,"_regenerateOAuthClientSecret"],[477,39,385,39,"clientId"],[477,47,385,47],[477,49,385,49],[478,6,386,8],[478,10,386,12],[479,8,387,12],[479,15,387,19],[479,21,387,25],[479,25,387,25,"_request"],[479,40,387,33],[479,42,387,34],[479,46,387,38],[479,47,387,39,"fetch"],[479,52,387,44],[479,54,387,46],[479,60,387,52],[479,62,387,54],[479,65,387,57],[479,69,387,61],[479,70,387,62,"url"],[479,73,387,65],[479,97,387,89,"clientId"],[479,105,387,97],[479,125,387,117],[479,127,387,119],[480,10,388,16,"headers"],[480,17,388,23],[480,19,388,25],[480,23,388,29],[480,24,388,30,"headers"],[480,31,388,37],[481,10,389,16,"xform"],[481,15,389,21],[481,17,389,24,"client"],[481,23,389,30],[481,27,389,35],[482,12,390,20],[482,19,390,27],[483,14,390,29,"data"],[483,18,390,33],[483,20,390,35,"client"],[483,26,390,41],[484,14,390,43,"error"],[484,19,390,48],[484,21,390,50],[485,12,390,55],[485,13,390,56],[486,10,391,16],[487,8,392,12],[487,9,392,13],[487,10,392,14],[488,6,393,8],[488,7,393,9],[488,8,394,8],[488,15,394,15,"error"],[488,20,394,20],[488,22,394,22],[489,8,395,12],[489,12,395,16],[489,16,395,16,"isAuthError"],[489,35,395,27],[489,37,395,28,"error"],[489,42,395,33],[489,43,395,34],[489,45,395,36],[490,10,396,16],[490,17,396,23],[491,12,396,25,"data"],[491,16,396,29],[491,18,396,31],[491,22,396,35],[492,12,396,37,"error"],[493,10,396,43],[493,11,396,44],[494,8,397,12],[495,8,398,12],[495,14,398,18,"error"],[495,19,398,23],[496,6,399,8],[497,4,400,4],[498,2,401,0],[499,2,401,1,"exports"],[499,9,401,1],[499,10,401,1,"default"],[499,17,401,1],[499,20,401,1,"GoTrueAdminApi"],[499,34,401,1],[500,0,401,1],[500,3]],"functionMap":{"names":["<global>","GoTrueAdminApi","constructor","signOut","inviteUserByEmail","generateLink","createUser","listUsers","links.forEach$argument_0","getUserById","updateUserById","deleteUser","_listFactors","_request$argument_3.xform","_deleteFactor","_listOAuthClients","_createOAuthClient","_getOAuthClient","_deleteOAuthClient","_regenerateOAuthClientSecret"],"mappings":"AAA;eCK;ICC;KDe;IEM;KFkB;IGM;KHe;IIQ;KJ4B;IKM;KLc;IMO;8BCmB;iBDI;KNW;IQQ;KRc;ISQ;KTe;IUU;KViB;IWC;uBCK;iBDE;KXU;IaC;Kbe;IcO;8BPmB;iBOI;KdW;IeO;uBHK;iBGE;KfS;IgBO;uBJI;iBIE;KhBS;IiBO;uBLI;iBKE;KjBS;IkBO;uBNI;iBME;KlBS;CDC"}},"type":"js/module"}]}