{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"C5wTnt0gil7oSFkESSK1fbFt+2Q=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":164,"index":211}}],"key":"heoF0ph3MRKcRke4Rxium863E4Y=","exportNames":["*"]}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":212},"end":{"line":3,"column":336,"index":548}}],"key":"NUE3c/K+JVzkrn4COE7BqSQ6w3g=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":549},"end":{"line":4,"column":113,"index":662}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":663},"end":{"line":5,"column":281,"index":944}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"]}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":945},"end":{"line":6,"column":64,"index":1009}}],"key":"VpxVJy8OOX3gpmfaL4+qvZxcfEs=","exportNames":["*"]}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":1010},"end":{"line":7,"column":69,"index":1079}}],"key":"3nAl8WGToTbG9Ylo2D6LWgFHzy4=","exportNames":["*"]}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":1080},"end":{"line":8,"column":53,"index":1133}}],"key":"lV0rT+lff8tbqQElPGdAzUbCNgE=","exportNames":["*"]}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":1134},"end":{"line":9,"column":40,"index":1174}}],"key":"JwaDbHnT/nA4LCdbzFXkLM5KVrg=","exportNames":["*"]}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":1175},"end":{"line":10,"column":71,"index":1246}}],"key":"e/SLVEwEOrfSGzIvDteO64GlclY=","exportNames":["*"]}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":1247},"end":{"line":11,"column":85,"index":1332}}],"key":"Uu8BLUnMyMgoPSi9pntE8LE9JBk=","exportNames":["*"]}},{"name":"./lib/webauthn","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":1333},"end":{"line":12,"column":194,"index":1527}}],"key":"KUEdeZex37VmEHka5FVYG6WErNE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _GoTrueAdminApi = _interopRequireDefault(require(_dependencyMap[1], \"./GoTrueAdminApi\"));\n  var _constants = require(_dependencyMap[2], \"./lib/constants\");\n  var _errors = require(_dependencyMap[3], \"./lib/errors\");\n  var _fetch = require(_dependencyMap[4], \"./lib/fetch\");\n  var _helpers = require(_dependencyMap[5], \"./lib/helpers\");\n  var _localStorage = require(_dependencyMap[6], \"./lib/local-storage\");\n  var _locks = require(_dependencyMap[7], \"./lib/locks\");\n  var _polyfills = require(_dependencyMap[8], \"./lib/polyfills\");\n  var _version = require(_dependencyMap[9], \"./lib/version\");\n  var _base64url = require(_dependencyMap[10], \"./lib/base64url\");\n  var _ethereum = require(_dependencyMap[11], \"./lib/web3/ethereum\");\n  var _webauthn = require(_dependencyMap[12], \"./lib/webauthn\");\n  (0, _polyfills.polyfillGlobalThis)(); // Make \"globalThis\" available\n  const DEFAULT_OPTIONS = {\n    url: _constants.GOTRUE_URL,\n    storageKey: _constants.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: _constants.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  async function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  const GLOBAL_JWKS = {};\n  class GoTrueClient {\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n        keys: []\n      };\n    }\n    set jwks(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        jwks: value\n      });\n    }\n    get jwks_cached_at() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        cachedAt: value\n      });\n    }\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, _helpers.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new _GoTrueAdminApi.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, _helpers.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, _helpers.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = _locks.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        webauthn: new _webauthn.WebAuthnApi(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, _helpers.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, _localStorage.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, _localStorage.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, _helpers.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async event => {\n          this._debug('received broadcast notification from other tab or client', event);\n          await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n        });\n      }\n      this.initialize();\n    }\n    _debug(...args) {\n      if (this.logDebugMessages) {\n        this.logger(`GoTrueClient@${this.instanceID} (${_version.version}) ${new Date().toISOString()}`, ...args);\n      }\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n      if (this.initializePromise) {\n        return await this.initializePromise;\n      }\n      this.initializePromise = (async () => {\n        return await this._acquireLock(-1, async () => {\n          return await this._initialize();\n        });\n      })();\n      return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n      var _a;\n      try {\n        const params = (0, _helpers.parseParametersFromURL)(window.location.href);\n        let callbackUrlType = 'none';\n        if (this._isImplicitGrantCallback(params)) {\n          callbackUrlType = 'implicit';\n        } else if (await this._isPKCECallback(params)) {\n          callbackUrlType = 'pkce';\n        }\n        /**\n         * Attempt to get the session from the URL only if these conditions are fulfilled\n         *\n         * Note: If the URL isn't one of the callback url types (implicit or pkce),\n         * then there could be an existing session so we don't want to prematurely remove it\n         */\n        if ((0, _helpers.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n          const {\n            data,\n            error\n          } = await this._getSessionFromURL(params, callbackUrlType);\n          if (error) {\n            this._debug('#_initialize()', 'error detecting session from URL', error);\n            if ((0, _errors.isAuthImplicitGrantRedirectError)(error)) {\n              const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n              if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                return {\n                  error\n                };\n              }\n            }\n            // failed login attempt via url,\n            // remove old session as in verifyOtp, signUp and signInWith*\n            await this._removeSession();\n            return {\n              error\n            };\n          }\n          const {\n            session,\n            redirectType\n          } = data;\n          this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n          await this._saveSession(session);\n          setTimeout(async () => {\n            if (redirectType === 'recovery') {\n              await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n            } else {\n              await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n          }, 0);\n          return {\n            error: null\n          };\n        }\n        // no login attempt via callback url try to recover session from storage\n        await this._recoverAndRefresh();\n        return {\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            error\n          };\n        }\n        return {\n          error: new _errors.AuthUnknownError('Unexpected error during initialization', error)\n        };\n      } finally {\n        await this._handleVisibilityChange();\n        this._debug('#_initialize()', 'end');\n      }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n      var _a, _b, _c;\n      try {\n        const res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n            gotrue_meta_security: {\n              captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n            }\n          },\n          xform: _fetch._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n      var _a, _b, _c;\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, _helpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: {\n              email,\n              password,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            xform: _fetch._sessionResponse\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n              channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _fetch._sessionResponse\n          });\n        } else {\n          throw new _errors.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              email,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _fetch._sessionResponsePassword\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _fetch._sessionResponsePassword\n          });\n        } else {\n          throw new _errors.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _errors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({\n            user: data.user,\n            session: data.session\n          }, data.weak_password ? {\n            weakPassword: data.weak_password\n          } : null),\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n      var _a, _b, _c, _d;\n      return await this._handleProviderSignIn(credentials.provider, {\n        redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n        scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n        queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n        skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n      });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n      await this.initializePromise;\n      return this._acquireLock(-1, async () => {\n        return this._exchangeCodeForSession(authCode);\n      });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n     * both of which derive from the EIP-4361 standard\n     * With slight variation on Solana's side.\n     * @reference https://eips.ethereum.org/EIPS/eip-4361\n     */\n    async signInWithWeb3(credentials) {\n      const {\n        chain\n      } = credentials;\n      switch (chain) {\n        case 'ethereum':\n          return await this.signInWithEthereum(credentials);\n        case 'solana':\n          return await this.signInWithSolana(credentials);\n        default:\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n      }\n    }\n    async signInWithEthereum(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n      // TODO: flatten type\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, _helpers.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n            resolvedWallet = windowAny.ethereum;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        const accounts = await resolvedWallet.request({\n          method: 'eth_requestAccounts'\n        }).then(accs => accs).catch(() => {\n          throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n        });\n        if (!accounts || accounts.length === 0) {\n          throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n        }\n        const address = (0, _ethereum.getAddress)(accounts[0]);\n        let chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n        if (!chainId) {\n          const chainIdHex = await resolvedWallet.request({\n            method: 'eth_chainId'\n          });\n          chainId = (0, _ethereum.fromHex)(chainIdHex);\n        }\n        const siweMessage = {\n          domain: url.host,\n          address: address,\n          statement: statement,\n          uri: url.href,\n          version: '1',\n          chainId: chainId,\n          nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n          issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n          expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n          notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n          requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n          resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n        };\n        message = (0, _ethereum.createSiweMessage)(siweMessage);\n        // Sign message\n        signature = await resolvedWallet.request({\n          method: 'personal_sign',\n          params: [(0, _ethereum.toHex)(message), address]\n        });\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'ethereum',\n            message,\n            signature\n          }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n            }\n          } : null),\n          xform: _fetch._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _errors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async signInWithSolana(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, _helpers.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n            resolvedWallet = windowAny.solana;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n          const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n            issuedAt: new Date().toISOString()\n          }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n            // non-overridable properties\n            version: '1',\n            domain: url.host,\n            uri: url.href\n          }), statement ? {\n            statement\n          } : null));\n          let outputToProcess;\n          if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n            outputToProcess = output[0];\n          } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n            outputToProcess = output;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n          }\n          if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n            message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n            signature = outputToProcess.signature;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n          }\n        } else {\n          if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n            throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n          }\n          message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n          const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n          if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n            throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n          }\n          signature = maybeSignature;\n        }\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'solana',\n            message,\n            signature: (0, _base64url.bytesToBase64URL)(signature)\n          }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n            }\n          } : null),\n          xform: _fetch._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _errors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _exchangeCodeForSession(authCode) {\n      const storageItem = await (0, _helpers.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n      try {\n        const {\n          data,\n          error\n        } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n          headers: this.headers,\n          body: {\n            auth_code: authCode,\n            code_verifier: codeVerifier\n          },\n          xform: _fetch._sessionResponse\n        });\n        await (0, _helpers.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error: new _errors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign(Object.assign({}, data), {\n            redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n          }),\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n      try {\n        const {\n          options,\n          provider,\n          token,\n          access_token,\n          nonce\n        } = credentials;\n        const res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n          headers: this.headers,\n          body: {\n            provider,\n            id_token: token,\n            access_token,\n            nonce,\n            gotrue_meta_security: {\n              captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n            }\n          },\n          xform: _fetch._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _errors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n      var _a, _b, _c, _d, _e;\n      try {\n        if ('email' in credentials) {\n          const {\n            email,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, _helpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            error\n          } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              email,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        if ('phone' in credentials) {\n          const {\n            phone,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              phone,\n              data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n              create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms'\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new _errors.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n      var _a, _b;\n      try {\n        let redirectTo = undefined;\n        let captchaToken = undefined;\n        if ('options' in params) {\n          redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n          captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n        }\n        const {\n          data,\n          error\n        } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/verify`, {\n          headers: this.headers,\n          body: Object.assign(Object.assign({}, params), {\n            gotrue_meta_security: {\n              captcha_token: captchaToken\n            }\n          }),\n          redirectTo,\n          xform: _fetch._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data) {\n          throw new Error('An error occurred on token verification.');\n        }\n        const session = data.session;\n        const user = data.user;\n        if (session === null || session === void 0 ? void 0 : session.access_token) {\n          await this._saveSession(session);\n          await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n      var _a, _b, _c;\n      try {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n          ;\n          [codeChallenge, codeChallengeMethod] = await (0, _helpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        }\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/sso`, {\n          body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n            provider_id: params.providerId\n          } : null), 'domain' in params ? {\n            domain: params.domain\n          } : null), {\n            redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n          }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: params.options.captchaToken\n            }\n          } : null), {\n            skip_http_redirect: true,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod\n          }),\n          headers: this.headers,\n          xform: _fetch._ssoResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._reauthenticate();\n      });\n    }\n    async _reauthenticate() {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) throw sessionError;\n          if (!session) throw new _errors.AuthSessionMissingError();\n          const {\n            error\n          } = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n            headers: this.headers,\n            jwt: session.access_token\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n      try {\n        const endpoint = `${this.url}/resend`;\n        if ('email' in credentials) {\n          const {\n            email,\n            type,\n            options\n          } = credentials;\n          const {\n            error\n          } = await (0, _fetch._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              email,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            type,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, _fetch._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              phone,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new _errors.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return this._useSession(async result => {\n          return result;\n        });\n      });\n      return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n      this._debug('#_acquireLock', 'begin', acquireTimeout);\n      try {\n        if (this.lockAcquired) {\n          const last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n          const result = (async () => {\n            await last;\n            return await fn();\n          })();\n          this.pendingInLock.push((async () => {\n            try {\n              await result;\n            } catch (e) {\n              // we just care if it finished\n            }\n          })());\n          return result;\n        }\n        return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n          this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n          try {\n            this.lockAcquired = true;\n            const result = fn();\n            this.pendingInLock.push((async () => {\n              try {\n                await result;\n              } catch (e) {\n                // we just care if it finished\n              }\n            })());\n            await result;\n            // keep draining the queue until there's nothing to wait on\n            while (this.pendingInLock.length) {\n              const waitOn = [...this.pendingInLock];\n              await Promise.all(waitOn);\n              this.pendingInLock.splice(0, waitOn.length);\n            }\n            return await result;\n          } finally {\n            this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n            this.lockAcquired = false;\n          }\n        });\n      } finally {\n        this._debug('#_acquireLock', 'end');\n      }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n      this._debug('#_useSession', 'begin');\n      try {\n        // the use of __loadSession here is the only correct use of the function!\n        const result = await this.__loadSession();\n        return await fn(result);\n      } finally {\n        this._debug('#_useSession', 'end');\n      }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n      this._debug('#__loadSession()', 'begin');\n      if (!this.lockAcquired) {\n        this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n      }\n      try {\n        let currentSession = null;\n        const maybeSession = await (0, _helpers.getItemAsync)(this.storage, this.storageKey);\n        this._debug('#getSession()', 'session from storage', maybeSession);\n        if (maybeSession !== null) {\n          if (this._isValidSession(maybeSession)) {\n            currentSession = maybeSession;\n          } else {\n            this._debug('#getSession()', 'session from storage is not valid');\n            await this._removeSession();\n          }\n        }\n        if (!currentSession) {\n          return {\n            data: {\n              session: null\n            },\n            error: null\n          };\n        }\n        // A session is considered expired before the access token _actually_\n        // expires. When the autoRefreshToken option is off (or when the tab is\n        // in the background), very eager users of getSession() -- like\n        // realtime-js -- might send a valid JWT which will expire by the time it\n        // reaches the server.\n        const hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < _constants.EXPIRY_MARGIN_MS : false;\n        this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n        if (!hasExpired) {\n          if (this.userStorage) {\n            const maybeUser = await (0, _helpers.getItemAsync)(this.userStorage, this.storageKey + '-user');\n            if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n              currentSession.user = maybeUser.user;\n            } else {\n              currentSession.user = (0, _helpers.userNotAvailableProxy)();\n            }\n          }\n          if (this.storage.isServer && currentSession.user) {\n            let suppressWarning = this.suppressGetSessionWarning;\n            const proxySession = new Proxy(currentSession, {\n              get: (target, prop, receiver) => {\n                if (!suppressWarning && prop === 'user') {\n                  // only show warning when the user object is being accessed from the server\n                  console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                  suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                  this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                }\n                return Reflect.get(target, prop, receiver);\n              }\n            });\n            currentSession = proxySession;\n          }\n          return {\n            data: {\n              session: currentSession\n            },\n            error: null\n          };\n        }\n        const {\n          data: session,\n          error\n        } = await this._callRefreshToken(currentSession.refresh_token);\n        if (error) {\n          return {\n            data: {\n              session: null\n            },\n            error\n          };\n        }\n        return {\n          data: {\n            session\n          },\n          error: null\n        };\n      } finally {\n        this._debug('#__loadSession()', 'end');\n      }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n      if (jwt) {\n        return await this._getUser(jwt);\n      }\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return await this._getUser();\n      });\n      return result;\n    }\n    async _getUser(jwt) {\n      try {\n        if (jwt) {\n          return await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: jwt,\n            xform: _fetch._userResponse\n          });\n        }\n        return await this._useSession(async result => {\n          var _a, _b, _c;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          // returns an error if there is no access_token or custom authorization header\n          if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n            return {\n              data: {\n                user: null\n              },\n              error: new _errors.AuthSessionMissingError()\n            };\n          }\n          return await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n            xform: _fetch._userResponse\n          });\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          if ((0, _errors.isAuthSessionMissingError)(error)) {\n            // JWT contains a `session_id` which does not correspond to an active\n            // session in the database, indicating the user is signed out.\n            await this._removeSession();\n            await (0, _helpers.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          }\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._updateUser(attributes, options);\n      });\n    }\n    async _updateUser(attributes, options = {}) {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            throw sessionError;\n          }\n          if (!sessionData.session) {\n            throw new _errors.AuthSessionMissingError();\n          }\n          const session = sessionData.session;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce' && attributes.email != null) {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, _helpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            data,\n            error: userError\n          } = await (0, _fetch._request)(this.fetch, 'PUT', `${this.url}/user`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: Object.assign(Object.assign({}, attributes), {\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            }),\n            jwt: session.access_token,\n            xform: _fetch._userResponse\n          });\n          if (userError) throw userError;\n          session.user = data.user;\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('USER_UPDATED', session);\n          return {\n            data: {\n              user: session.user\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._setSession(currentSession);\n      });\n    }\n    async _setSession(currentSession) {\n      try {\n        if (!currentSession.access_token || !currentSession.refresh_token) {\n          throw new _errors.AuthSessionMissingError();\n        }\n        const timeNow = Date.now() / 1000;\n        let expiresAt = timeNow;\n        let hasExpired = true;\n        let session = null;\n        const {\n          payload\n        } = (0, _helpers.decodeJWT)(currentSession.access_token);\n        if (payload.exp) {\n          expiresAt = payload.exp;\n          hasExpired = expiresAt <= timeNow;\n        }\n        if (hasExpired) {\n          const {\n            data: refreshedSession,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!refreshedSession) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          session = refreshedSession;\n        } else {\n          const {\n            data,\n            error\n          } = await this._getUser(currentSession.access_token);\n          if (error) {\n            throw error;\n          }\n          session = {\n            access_token: currentSession.access_token,\n            refresh_token: currentSession.refresh_token,\n            user: data.user,\n            token_type: 'bearer',\n            expires_in: expiresAt - timeNow,\n            expires_at: expiresAt\n          };\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user: session.user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._refreshSession(currentSession);\n      });\n    }\n    async _refreshSession(currentSession) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          if (!currentSession) {\n            const {\n              data,\n              error\n            } = result;\n            if (error) {\n              throw error;\n            }\n            currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n          }\n          if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n            throw new _errors.AuthSessionMissingError();\n          }\n          const {\n            data: session,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          return {\n            data: {\n              user: session.user,\n              session\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n      try {\n        if (!(0, _helpers.isBrowser)()) throw new _errors.AuthImplicitGrantRedirectError('No browser detected.');\n        // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n        if (params.error || params.error_description || params.error_code) {\n          // The error class returned implies that the redirect is from an implicit grant flow\n          // but it could also be from a redirect error from a PKCE flow.\n          throw new _errors.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code'\n          });\n        }\n        // Checks for mismatches between the flowType initialised in the client and the URL parameters\n        switch (callbackUrlType) {\n          case 'implicit':\n            if (this.flowType === 'pkce') {\n              throw new _errors.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n            }\n            break;\n          case 'pkce':\n            if (this.flowType === 'implicit') {\n              throw new _errors.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n            }\n            break;\n          default:\n          // there's no mismatch so we continue\n        }\n        // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n        if (callbackUrlType === 'pkce') {\n          this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n          if (!params.code) throw new _errors.AuthPKCEGrantCodeExchangeError('No code detected.');\n          const {\n            data,\n            error\n          } = await this._exchangeCodeForSession(params.code);\n          if (error) throw error;\n          const url = new URL(window.location.href);\n          url.searchParams.delete('code');\n          window.history.replaceState(window.history.state, '', url.toString());\n          return {\n            data: {\n              session: data.session,\n              redirectType: null\n            },\n            error: null\n          };\n        }\n        const {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          refresh_token,\n          expires_in,\n          expires_at,\n          token_type\n        } = params;\n        if (!access_token || !expires_in || !refresh_token || !token_type) {\n          throw new _errors.AuthImplicitGrantRedirectError('No session defined in URL');\n        }\n        const timeNow = Math.round(Date.now() / 1000);\n        const expiresIn = parseInt(expires_in);\n        let expiresAt = timeNow + expiresIn;\n        if (expires_at) {\n          expiresAt = parseInt(expires_at);\n        }\n        const actuallyExpiresIn = expiresAt - timeNow;\n        if (actuallyExpiresIn * 1000 <= _constants.AUTO_REFRESH_TICK_DURATION_MS) {\n          console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n        }\n        const issuedAt = expiresAt - expiresIn;\n        if (timeNow - issuedAt >= 120) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n        } else if (timeNow - issuedAt < 0) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n        }\n        const {\n          data,\n          error\n        } = await this._getUser(access_token);\n        if (error) throw error;\n        const session = {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          expires_in: expiresIn,\n          expires_at: expiresAt,\n          refresh_token,\n          token_type: token_type,\n          user: data.user\n        };\n        // Remove tokens from URL\n        window.location.hash = '';\n        this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n        return {\n          data: {\n            session,\n            redirectType: params.type\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n      return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n      const currentStorageContent = await (0, _helpers.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = {\n      scope: 'global'\n    }) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._signOut(options);\n      });\n    }\n    async _signOut({\n      scope\n    } = {\n      scope: 'global'\n    }) {\n      return await this._useSession(async result => {\n        var _a;\n        const {\n          data,\n          error: sessionError\n        } = result;\n        if (sessionError) {\n          return {\n            error: sessionError\n          };\n        }\n        const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n        if (accessToken) {\n          const {\n            error\n          } = await this.admin.signOut(accessToken, scope);\n          if (error) {\n            // ignore 404s since user might not exist anymore\n            // ignore 401s since an invalid or expired JWT should sign out the current session\n            if (!((0, _errors.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n              return {\n                error\n              };\n            }\n          }\n        }\n        if (scope !== 'others') {\n          await this._removeSession();\n          await (0, _helpers.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        }\n        return {\n          error: null\n        };\n      });\n    }\n    onAuthStateChange(callback) {\n      const id = (0, _helpers.uuid)();\n      const subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this._debug('#unsubscribe()', 'state change callback with id removed', id);\n          this.stateChangeEmitters.delete(id);\n        }\n      };\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n      this.stateChangeEmitters.set(id, subscription);\n      (async () => {\n        await this.initializePromise;\n        await this._acquireLock(-1, async () => {\n          this._emitInitialSession(id);\n        });\n      })();\n      return {\n        data: {\n          subscription\n        }\n      };\n    }\n    async _emitInitialSession(id) {\n      return await this._useSession(async result => {\n        var _a, _b;\n        try {\n          const {\n            data: {\n              session\n            },\n            error\n          } = result;\n          if (error) throw error;\n          await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n        } catch (err) {\n          await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n          console.error(err);\n        }\n      });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n      let codeChallenge = null;\n      let codeChallengeMethod = null;\n      if (this.flowType === 'pkce') {\n        ;\n        [codeChallenge, codeChallengeMethod] = await (0, _helpers.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n        );\n      }\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/recover`, {\n          body: {\n            email,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n            gotrue_meta_security: {\n              captcha_token: options.captchaToken\n            }\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this.getUser();\n        if (error) throw error;\n        return {\n          data: {\n            identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async linkIdentity(credentials) {\n      if ('token' in credentials) {\n        return this.linkIdentityIdToken(credentials);\n      }\n      return this.linkIdentityOAuth(credentials);\n    }\n    async linkIdentityOAuth(credentials) {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this._useSession(async result => {\n          var _a, _b, _c, _d, _e;\n          const {\n            data,\n            error\n          } = result;\n          if (error) throw error;\n          const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: true\n          });\n          return await (0, _fetch._request)(this.fetch, 'GET', url, {\n            headers: this.headers,\n            jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n          });\n        });\n        if (error) throw error;\n        if ((0, _helpers.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n          window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n        }\n        return {\n          data: {\n            provider: credentials.provider,\n            url: data === null || data === void 0 ? void 0 : data.url\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              provider: credentials.provider,\n              url: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async linkIdentityIdToken(credentials) {\n      return await this._useSession(async result => {\n        var _a;\n        try {\n          const {\n            error: sessionError,\n            data: {\n              session\n            }\n          } = result;\n          if (sessionError) throw sessionError;\n          const {\n            options,\n            provider,\n            token,\n            access_token,\n            nonce\n          } = credentials;\n          const res = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n            headers: this.headers,\n            jwt: (_a = session === null || session === void 0 ? void 0 : session.access_token) !== null && _a !== void 0 ? _a : undefined,\n            body: {\n              provider,\n              id_token: token,\n              access_token,\n              nonce,\n              link_identity: true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _fetch._sessionResponse\n          });\n          const {\n            data,\n            error\n          } = res;\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error\n            };\n          } else if (!data || !data.session || !data.user) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: new _errors.AuthInvalidTokenResponseError()\n            };\n          }\n          if (data.session) {\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('USER_UPDATED', data.session);\n          }\n          return {\n            data,\n            error\n          };\n        } catch (error) {\n          if ((0, _errors.isAuthError)(error)) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          return await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n            headers: this.headers,\n            jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n          });\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n      const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        const startedAt = Date.now();\n        // will attempt to refresh the token with exponential backoff\n        return await (0, _helpers.retryable)(async attempt => {\n          if (attempt > 0) {\n            await (0, _helpers.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n          }\n          this._debug(debugName, 'refreshing attempt', attempt);\n          return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: {\n              refresh_token: refreshToken\n            },\n            headers: this.headers,\n            xform: _fetch._sessionResponse\n          });\n        }, (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt);\n          return error && (0, _errors.isAuthRetryableFetchError)(error) &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + nextBackOffInterval - startedAt < _constants.AUTO_REFRESH_TICK_DURATION_MS;\n        });\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    _isValidSession(maybeSession) {\n      const isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n      const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n        redirectTo: options.redirectTo,\n        scopes: options.scopes,\n        queryParams: options.queryParams\n      });\n      this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n      // try to open on the browser\n      if ((0, _helpers.isBrowser)() && !options.skipBrowserRedirect) {\n        window.location.assign(url);\n      }\n      return {\n        data: {\n          provider,\n          url\n        },\n        error: null\n      };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n      var _a, _b;\n      const debugName = '#_recoverAndRefresh()';\n      this._debug(debugName, 'begin');\n      try {\n        const currentSession = await (0, _helpers.getItemAsync)(this.storage, this.storageKey);\n        if (currentSession && this.userStorage) {\n          let maybeUser = await (0, _helpers.getItemAsync)(this.userStorage, this.storageKey + '-user');\n          if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n            // storage and userStorage are the same storage medium, for example\n            // window.localStorage if userStorage does not have the user from\n            // storage stored, store it first thereby migrating the user object\n            // from storage -> userStorage\n            maybeUser = {\n              user: currentSession.user\n            };\n            await (0, _helpers.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n          }\n          currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, _helpers.userNotAvailableProxy)();\n        } else if (currentSession && !currentSession.user) {\n          // user storage is not set, let's check if it was previously enabled so\n          // we bring back the storage as it should be\n          if (!currentSession.user) {\n            // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n            const separateUser = await (0, _helpers.getItemAsync)(this.storage, this.storageKey + '-user');\n            if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n              currentSession.user = separateUser.user;\n              await (0, _helpers.removeItemAsync)(this.storage, this.storageKey + '-user');\n              await (0, _helpers.setItemAsync)(this.storage, this.storageKey, currentSession);\n            } else {\n              currentSession.user = (0, _helpers.userNotAvailableProxy)();\n            }\n          }\n        }\n        this._debug(debugName, 'session from storage', currentSession);\n        if (!this._isValidSession(currentSession)) {\n          this._debug(debugName, 'session is not valid');\n          if (currentSession !== null) {\n            await this._removeSession();\n          }\n          return;\n        }\n        const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < _constants.EXPIRY_MARGIN_MS;\n        this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${_constants.EXPIRY_MARGIN_MS}s`);\n        if (expiresWithMargin) {\n          if (this.autoRefreshToken && currentSession.refresh_token) {\n            const {\n              error\n            } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n              console.error(error);\n              if (!(0, _errors.isAuthRetryableFetchError)(error)) {\n                this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                await this._removeSession();\n              }\n            }\n          }\n        } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n          // If we have a proxy user, try to get the real user data\n          try {\n            const {\n              data,\n              error: userError\n            } = await this._getUser(currentSession.access_token);\n            if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n              currentSession.user = data.user;\n              await this._saveSession(currentSession);\n              await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            } else {\n              this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n            }\n          } catch (getUserError) {\n            console.error('Error getting user data:', getUserError);\n            this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n          }\n        } else {\n          // no need to persist currentSession again, as we just loaded it from\n          // local storage; persisting it again may overwrite a value saved by\n          // another client with access to the same local storage\n          await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n        }\n      } catch (err) {\n        this._debug(debugName, 'error', err);\n        console.error(err);\n        return;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    async _callRefreshToken(refreshToken) {\n      var _a, _b;\n      if (!refreshToken) {\n        throw new _errors.AuthSessionMissingError();\n      }\n      // refreshing is already in progress\n      if (this.refreshingDeferred) {\n        return this.refreshingDeferred.promise;\n      }\n      const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        this.refreshingDeferred = new _helpers.Deferred();\n        const {\n          data,\n          error\n        } = await this._refreshAccessToken(refreshToken);\n        if (error) throw error;\n        if (!data.session) throw new _errors.AuthSessionMissingError();\n        await this._saveSession(data.session);\n        await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n        const result = {\n          data: data.session,\n          error: null\n        };\n        this.refreshingDeferred.resolve(result);\n        return result;\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, _errors.isAuthError)(error)) {\n          const result = {\n            data: null,\n            error\n          };\n          if (!(0, _errors.isAuthRetryableFetchError)(error)) {\n            await this._removeSession();\n          }\n          (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n          return result;\n        }\n        (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n        throw error;\n      } finally {\n        this.refreshingDeferred = null;\n        this._debug(debugName, 'end');\n      }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n      const debugName = `#_notifyAllSubscribers(${event})`;\n      this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n      try {\n        if (this.broadcastChannel && broadcast) {\n          this.broadcastChannel.postMessage({\n            event,\n            session\n          });\n        }\n        const errors = [];\n        const promises = Array.from(this.stateChangeEmitters.values()).map(async x => {\n          try {\n            await x.callback(event, session);\n          } catch (e) {\n            errors.push(e);\n          }\n        });\n        await Promise.all(promises);\n        if (errors.length > 0) {\n          for (let i = 0; i < errors.length; i += 1) {\n            console.error(errors[i]);\n          }\n          throw errors[0];\n        }\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n      this._debug('#_saveSession()', session);\n      // _saveSession is always called whenever a new session has been acquired\n      // so we can safely suppress the warning returned by future getSession calls\n      this.suppressGetSessionWarning = true;\n      // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n      const sessionToProcess = Object.assign({}, session);\n      const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n      if (this.userStorage) {\n        if (!userIsProxy && sessionToProcess.user) {\n          // If it's a real user object, save it to userStorage.\n          await (0, _helpers.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n            user: sessionToProcess.user\n          });\n        } else if (userIsProxy) {\n          // If it's the proxy, it means user was not found in userStorage.\n          // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n          // or simply not save the proxy. For now, we don't save the proxy here.\n          // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n        }\n        // Prepare the main session data for primary storage: remove the user property before cloning\n        // This is important because the original session.user might be the proxy\n        const mainSessionData = Object.assign({}, sessionToProcess);\n        delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n        const clonedMainSessionData = (0, _helpers.deepClone)(mainSessionData);\n        await (0, _helpers.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n      } else {\n        // No userStorage is configured.\n        // In this case, session.user should ideally not be a proxy.\n        // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n        const clonedSession = (0, _helpers.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n        await (0, _helpers.setItemAsync)(this.storage, this.storageKey, clonedSession);\n      }\n    }\n    async _removeSession() {\n      this._debug('#_removeSession()');\n      await (0, _helpers.removeItemAsync)(this.storage, this.storageKey);\n      await (0, _helpers.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n      await (0, _helpers.removeItemAsync)(this.storage, this.storageKey + '-user');\n      if (this.userStorage) {\n        await (0, _helpers.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n      }\n      await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n      const callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n      try {\n        if (callback && (0, _helpers.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n      await this._stopAutoRefresh();\n      this._debug('#_startAutoRefresh()');\n      const ticker = setInterval(() => this._autoRefreshTokenTick(), _constants.AUTO_REFRESH_TICK_DURATION_MS);\n      this.autoRefreshTicker = ticker;\n      if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n        // ticker is a NodeJS Timeout object that has an `unref` method\n        // https://nodejs.org/api/timers.html#timeoutunref\n        // When auto refresh is used in NodeJS (like for testing) the\n        // `setInterval` is preventing the process from being marked as\n        // finished and tests run endlessly. This can be prevented by calling\n        // `unref()` on the returned object.\n        ticker.unref();\n        // @ts-expect-error TS has no context of Deno\n      } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n        // similar like for NodeJS, but with the Deno API\n        // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n        // @ts-expect-error TS has no context of Deno\n        Deno.unrefTimer(ticker);\n      }\n      // run the tick immediately, but in the next pass of the event loop so that\n      // #_initialize can be allowed to complete without recursively waiting on\n      // itself\n      setTimeout(async () => {\n        await this.initializePromise;\n        await this._autoRefreshTokenTick();\n      }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n      this._debug('#_stopAutoRefresh()');\n      const ticker = this.autoRefreshTicker;\n      this.autoRefreshTicker = null;\n      if (ticker) {\n        clearInterval(ticker);\n      }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n      this._debug('#_autoRefreshTokenTick()', 'begin');\n      try {\n        await this._acquireLock(0, async () => {\n          try {\n            const now = Date.now();\n            try {\n              return await this._useSession(async result => {\n                const {\n                  data: {\n                    session\n                  }\n                } = result;\n                if (!session || !session.refresh_token || !session.expires_at) {\n                  this._debug('#_autoRefreshTokenTick()', 'no session');\n                  return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / _constants.AUTO_REFRESH_TICK_DURATION_MS);\n                this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${_constants.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${_constants.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                if (expiresInTicks <= _constants.AUTO_REFRESH_TICK_THRESHOLD) {\n                  await this._callRefreshToken(session.refresh_token);\n                }\n              });\n            } catch (e) {\n              console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n          } finally {\n            this._debug('#_autoRefreshTokenTick()', 'end');\n          }\n        });\n      } catch (e) {\n        if (e.isAcquireTimeout || e instanceof _locks.LockAcquireTimeoutError) {\n          this._debug('auto refresh token tick lock not available');\n        } else {\n          throw e;\n        }\n      }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n      this._debug('#_handleVisibilityChange()');\n      if (!(0, _helpers.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n        if (this.autoRefreshToken) {\n          // in non-browser environments the refresh token ticker runs always\n          this.startAutoRefresh();\n        }\n        return false;\n      }\n      try {\n        this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n        window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n        // now immediately call the visbility changed callback to setup with the\n        // current visbility state\n        await this._onVisibilityChanged(true); // initial call\n      } catch (error) {\n        console.error('_handleVisibilityChange', error);\n      }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n      const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n      this._debug(methodName, 'visibilityState', document.visibilityState);\n      if (document.visibilityState === 'visible') {\n        if (this.autoRefreshToken) {\n          // in browser environments the refresh token ticker runs only on focused tabs\n          // which prevents race conditions\n          this._startAutoRefresh();\n        }\n        if (!calledFromInitialize) {\n          // called when the visibility has changed, i.e. the browser\n          // transitioned from hidden -> visible so we need to see if the session\n          // should be recovered immediately... but to do that we need to acquire\n          // the lock first asynchronously\n          await this.initializePromise;\n          await this._acquireLock(-1, async () => {\n            if (document.visibilityState !== 'visible') {\n              this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n              // visibility has changed while waiting for the lock, abort\n              return;\n            }\n            // recover the session\n            await this._recoverAndRefresh();\n          });\n        }\n      } else if (document.visibilityState === 'hidden') {\n        if (this.autoRefreshToken) {\n          this._stopAutoRefresh();\n        }\n      }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n      const urlParams = [`provider=${encodeURIComponent(provider)}`];\n      if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n      }\n      if (options === null || options === void 0 ? void 0 : options.scopes) {\n        urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n      }\n      if (this.flowType === 'pkce') {\n        const [codeChallenge, codeChallengeMethod] = await (0, _helpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        const flowParams = new URLSearchParams({\n          code_challenge: `${encodeURIComponent(codeChallenge)}`,\n          code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n        });\n        urlParams.push(flowParams.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.queryParams) {\n        const query = new URLSearchParams(options.queryParams);\n        urlParams.push(query.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n        urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n      }\n      return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          return await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _enroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          const body = Object.assign({\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType\n          }, params.factorType === 'phone' ? {\n            phone: params.phone\n          } : params.factorType === 'totp' ? {\n            issuer: params.issuer\n          } : {});\n          const {\n            data,\n            error\n          } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/factors`, {\n            body,\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n          if (error) {\n            return {\n              data: null,\n              error\n            };\n          }\n          if (params.factorType === 'totp' && data.type === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n            data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n          }\n          return {\n            data,\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _verify(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const body = Object.assign({\n              challenge_id: params.challengeId\n            }, 'webauthn' in params ? {\n              webauthn: Object.assign(Object.assign({}, params.webauthn), {\n                credential_response: params.webauthn.type === 'create' ? (0, _webauthn.serializeCredentialCreationResponse)(params.webauthn.credential_response) : (0, _webauthn.serializeCredentialRequestResponse)(params.webauthn.credential_response)\n              })\n            } : {\n              code: params.code\n            });\n            const {\n              data,\n              error\n            } = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n              body,\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (error) {\n              return {\n                data: null,\n                error\n              };\n            }\n            await this._saveSession(Object.assign({\n              expires_at: Math.round(Date.now() / 1000) + data.expires_in\n            }, data));\n            await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n            return {\n              data,\n              error\n            };\n          });\n        } catch (error) {\n          if ((0, _errors.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    async _challenge(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const response = await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n              body: params,\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (response.error) {\n              return response;\n            }\n            const {\n              data\n            } = response;\n            if (data.type !== 'webauthn') {\n              return {\n                data,\n                error: null\n              };\n            }\n            switch (data.webauthn.type) {\n              case 'create':\n                return {\n                  data: Object.assign(Object.assign({}, data), {\n                    webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                      credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                        publicKey: (0, _webauthn.deserializeCredentialCreationOptions)(data.webauthn.credential_options.publicKey)\n                      })\n                    })\n                  }),\n                  error: null\n                };\n              case 'request':\n                return {\n                  data: Object.assign(Object.assign({}, data), {\n                    webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                      credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                        publicKey: (0, _webauthn.deserializeCredentialRequestOptions)(data.webauthn.credential_options.publicKey)\n                      })\n                    })\n                  }),\n                  error: null\n                };\n            }\n          });\n        } catch (error) {\n          if ((0, _errors.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n      // both _challenge and _verify independently acquire the lock, so no need\n      // to acquire it here\n      const {\n        data: challengeData,\n        error: challengeError\n      } = await this._challenge({\n        factorId: params.factorId\n      });\n      if (challengeError) {\n        return {\n          data: null,\n          error: challengeError\n        };\n      }\n      return await this._verify({\n        factorId: params.factorId,\n        challengeId: challengeData.id,\n        code: params.code\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n      var _a;\n      // use #getUser instead of #_getUser as the former acquires a lock\n      const {\n        data: {\n          user\n        },\n        error: userError\n      } = await this.getUser();\n      if (userError) {\n        return {\n          data: null,\n          error: userError\n        };\n      }\n      const data = {\n        all: [],\n        phone: [],\n        totp: [],\n        webauthn: []\n      };\n      // loop over the factors ONCE\n      for (const factor of (_a = user === null || user === void 0 ? void 0 : user.factors) !== null && _a !== void 0 ? _a : []) {\n        data.all.push(factor);\n        if (factor.status === 'verified') {\n          ;\n          data[factor.factor_type].push(factor);\n        }\n      }\n      return {\n        data,\n        error: null\n      };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n      return this._acquireLock(-1, async () => {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                currentLevel: null,\n                nextLevel: null,\n                currentAuthenticationMethods: []\n              },\n              error: null\n            };\n          }\n          const {\n            payload\n          } = (0, _helpers.decodeJWT)(session.access_token);\n          let currentLevel = null;\n          if (payload.aal) {\n            currentLevel = payload.aal;\n          }\n          let nextLevel = currentLevel;\n          const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n          if (verifiedFactors.length > 0) {\n            nextLevel = 'aal2';\n          }\n          const currentAuthenticationMethods = payload.amr || [];\n          return {\n            data: {\n              currentLevel,\n              nextLevel,\n              currentAuthenticationMethods\n            },\n            error: null\n          };\n        });\n      });\n    }\n    async fetchJwk(kid, jwks = {\n      keys: []\n    }) {\n      // try fetching from the supplied jwks\n      let jwk = jwks.keys.find(key => key.kid === kid);\n      if (jwk) {\n        return jwk;\n      }\n      const now = Date.now();\n      // try fetching from cache\n      jwk = this.jwks.keys.find(key => key.kid === kid);\n      // jwk exists and jwks isn't stale\n      if (jwk && this.jwks_cached_at + _constants.JWKS_TTL > now) {\n        return jwk;\n      }\n      // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n      const {\n        data,\n        error\n      } = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n        headers: this.headers\n      });\n      if (error) {\n        throw error;\n      }\n      if (!data.keys || data.keys.length === 0) {\n        return null;\n      }\n      this.jwks = data;\n      this.jwks_cached_at = now;\n      // Find the signing key\n      jwk = data.keys.find(key => key.kid === kid);\n      if (!jwk) {\n        return null;\n      }\n      return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n      try {\n        let token = jwt;\n        if (!token) {\n          const {\n            data,\n            error\n          } = await this.getSession();\n          if (error || !data.session) {\n            return {\n              data: null,\n              error\n            };\n          }\n          token = data.session.access_token;\n        }\n        const {\n          header,\n          payload,\n          signature,\n          raw: {\n            header: rawHeader,\n            payload: rawPayload\n          }\n        } = (0, _helpers.decodeJWT)(token);\n        if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n          // Reject expired JWTs should only happen if jwt argument was passed\n          (0, _helpers.validateExp)(payload.exp);\n        }\n        const signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n          keys: options.keys\n        } : options === null || options === void 0 ? void 0 : options.jwks);\n        // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n        if (!signingKey) {\n          const {\n            error\n          } = await this.getUser(token);\n          if (error) {\n            throw error;\n          }\n          // getUser succeeds so the claims in the JWT can be trusted\n          return {\n            data: {\n              claims: payload,\n              header,\n              signature\n            },\n            error: null\n          };\n        }\n        const algorithm = (0, _helpers.getAlgorithm)(header.alg);\n        // Convert JWK to CryptoKey\n        const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n        // Verify the signature\n        const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0, _base64url.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n        if (!isValid) {\n          throw new _errors.AuthInvalidJwtError('Invalid JWT signature');\n        }\n        // If verification succeeds, decode and return claims\n        return {\n          data: {\n            claims: payload,\n            header,\n            signature\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  GoTrueClient.nextInstanceID = 0;\n  var _default = exports.default = GoTrueClient;\n});","lineCount":3157,"map":[[7,2,1,0],[7,6,1,0,"_GoTrueAdminApi"],[7,21,1,0],[7,24,1,0,"_interopRequireDefault"],[7,46,1,0],[7,47,1,0,"require"],[7,54,1,0],[7,55,1,0,"_dependencyMap"],[7,69,1,0],[8,2,2,0],[8,6,2,0,"_constants"],[8,16,2,0],[8,19,2,0,"require"],[8,26,2,0],[8,27,2,0,"_dependencyMap"],[8,41,2,0],[9,2,3,0],[9,6,3,0,"_errors"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,4,0],[10,6,4,0,"_fetch"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,5,0],[11,6,5,0,"_helpers"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_localStorage"],[12,19,6,0],[12,22,6,0,"require"],[12,29,6,0],[12,30,6,0,"_dependencyMap"],[12,44,6,0],[13,2,7,0],[13,6,7,0,"_locks"],[13,12,7,0],[13,15,7,0,"require"],[13,22,7,0],[13,23,7,0,"_dependencyMap"],[13,37,7,0],[14,2,8,0],[14,6,8,0,"_polyfills"],[14,16,8,0],[14,19,8,0,"require"],[14,26,8,0],[14,27,8,0,"_dependencyMap"],[14,41,8,0],[15,2,9,0],[15,6,9,0,"_version"],[15,14,9,0],[15,17,9,0,"require"],[15,24,9,0],[15,25,9,0,"_dependencyMap"],[15,39,9,0],[16,2,10,0],[16,6,10,0,"_base64url"],[16,16,10,0],[16,19,10,0,"require"],[16,26,10,0],[16,27,10,0,"_dependencyMap"],[16,41,10,0],[17,2,11,0],[17,6,11,0,"_ethereum"],[17,15,11,0],[17,18,11,0,"require"],[17,25,11,0],[17,26,11,0,"_dependencyMap"],[17,40,11,0],[18,2,12,0],[18,6,12,0,"_webauthn"],[18,15,12,0],[18,18,12,0,"require"],[18,25,12,0],[18,26,12,0,"_dependencyMap"],[18,40,12,0],[19,2,13,0],[19,6,13,0,"polyfillGlobalThis"],[19,35,13,18],[19,37,13,19],[19,38,13,20],[19,39,13,21],[19,40,13,22],[20,2,14,0],[20,8,14,6,"DEFAULT_OPTIONS"],[20,23,14,21],[20,26,14,24],[21,4,15,4,"url"],[21,7,15,7],[21,9,15,9,"GOTRUE_URL"],[21,30,15,19],[22,4,16,4,"storageKey"],[22,14,16,14],[22,16,16,16,"STORAGE_KEY"],[22,38,16,27],[23,4,17,4,"autoRefreshToken"],[23,20,17,20],[23,22,17,22],[23,26,17,26],[24,4,18,4,"persistSession"],[24,18,18,18],[24,20,18,20],[24,24,18,24],[25,4,19,4,"detectSessionInUrl"],[25,22,19,22],[25,24,19,24],[25,28,19,28],[26,4,20,4,"headers"],[26,11,20,11],[26,13,20,13,"DEFAULT_HEADERS"],[26,39,20,28],[27,4,21,4,"flowType"],[27,12,21,12],[27,14,21,14],[27,24,21,24],[28,4,22,4,"debug"],[28,9,22,9],[28,11,22,11],[28,16,22,16],[29,4,23,4,"hasCustomAuthorizationHeader"],[29,32,23,32],[29,34,23,34],[30,2,24,0],[30,3,24,1],[31,2,25,0],[31,17,25,15,"lockNoOp"],[31,25,25,23,"lockNoOp"],[31,26,25,24,"name"],[31,30,25,28],[31,32,25,30,"acquireTimeout"],[31,46,25,44],[31,48,25,46,"fn"],[31,50,25,48],[31,52,25,50],[32,4,26,4],[32,11,26,11],[32,17,26,17,"fn"],[32,19,26,19],[32,20,26,20],[32,21,26,21],[33,2,27,0],[34,2,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,2,36,0],[42,8,36,6,"GLOBAL_JWKS"],[42,19,36,17],[42,22,36,20],[42,23,36,21],[42,24,36,22],[43,2,37,0],[43,8,37,6,"GoTrueClient"],[43,20,37,18],[43,21,37,19],[44,4,38,4],[45,0,39,0],[46,0,40,0],[47,4,41,4],[47,8,41,8,"jwks"],[47,12,41,12,"jwks"],[47,13,41,12],[47,15,41,15],[48,6,42,8],[48,10,42,12,"_a"],[48,12,42,14],[48,14,42,16,"_b"],[48,16,42,18],[49,6,43,8],[49,13,43,15],[49,14,43,16,"_b"],[49,16,43,18],[49,19,43,21],[49,20,43,22,"_a"],[49,22,43,24],[49,25,43,27,"GLOBAL_JWKS"],[49,36,43,38],[49,37,43,39],[49,41,43,43],[49,42,43,44,"storageKey"],[49,52,43,54],[49,53,43,55],[49,59,43,61],[49,63,43,65],[49,67,43,69,"_a"],[49,69,43,71],[49,74,43,76],[49,79,43,81],[49,80,43,82],[49,83,43,85],[49,88,43,90],[49,89,43,91],[49,92,43,94,"_a"],[49,94,43,96],[49,95,43,97,"jwks"],[49,99,43,101],[49,105,43,107],[49,109,43,111],[49,113,43,115,"_b"],[49,115,43,117],[49,120,43,122],[49,125,43,127],[49,126,43,128],[49,129,43,131,"_b"],[49,131,43,133],[49,134,43,136],[50,8,43,138,"keys"],[50,12,43,142],[50,14,43,144],[51,6,43,147],[51,7,43,148],[52,4,44,4],[53,4,45,4],[53,8,45,8,"jwks"],[53,12,45,12,"jwks"],[53,13,45,13,"value"],[53,18,45,18],[53,20,45,20],[54,6,46,8,"GLOBAL_JWKS"],[54,17,46,19],[54,18,46,20],[54,22,46,24],[54,23,46,25,"storageKey"],[54,33,46,35],[54,34,46,36],[54,37,46,39,"Object"],[54,43,46,45],[54,44,46,46,"assign"],[54,50,46,52],[54,51,46,53,"Object"],[54,57,46,59],[54,58,46,60,"assign"],[54,64,46,66],[54,65,46,67],[54,66,46,68],[54,67,46,69],[54,69,46,71,"GLOBAL_JWKS"],[54,80,46,82],[54,81,46,83],[54,85,46,87],[54,86,46,88,"storageKey"],[54,96,46,98],[54,97,46,99],[54,98,46,100],[54,100,46,102],[55,8,46,104,"jwks"],[55,12,46,108],[55,14,46,110,"value"],[56,6,46,116],[56,7,46,117],[56,8,46,118],[57,4,47,4],[58,4,48,4],[58,8,48,8,"jwks_cached_at"],[58,22,48,22,"jwks_cached_at"],[58,23,48,22],[58,25,48,25],[59,6,49,8],[59,10,49,12,"_a"],[59,12,49,14],[59,14,49,16,"_b"],[59,16,49,18],[60,6,50,8],[60,13,50,15],[60,14,50,16,"_b"],[60,16,50,18],[60,19,50,21],[60,20,50,22,"_a"],[60,22,50,24],[60,25,50,27,"GLOBAL_JWKS"],[60,36,50,38],[60,37,50,39],[60,41,50,43],[60,42,50,44,"storageKey"],[60,52,50,54],[60,53,50,55],[60,59,50,61],[60,63,50,65],[60,67,50,69,"_a"],[60,69,50,71],[60,74,50,76],[60,79,50,81],[60,80,50,82],[60,83,50,85],[60,88,50,90],[60,89,50,91],[60,92,50,94,"_a"],[60,94,50,96],[60,95,50,97,"cachedAt"],[60,103,50,105],[60,109,50,111],[60,113,50,115],[60,117,50,119,"_b"],[60,119,50,121],[60,124,50,126],[60,129,50,131],[60,130,50,132],[60,133,50,135,"_b"],[60,135,50,137],[60,138,50,140,"Number"],[60,144,50,146],[60,145,50,147,"MIN_SAFE_INTEGER"],[60,161,50,163],[61,4,51,4],[62,4,52,4],[62,8,52,8,"jwks_cached_at"],[62,22,52,22,"jwks_cached_at"],[62,23,52,23,"value"],[62,28,52,28],[62,30,52,30],[63,6,53,8,"GLOBAL_JWKS"],[63,17,53,19],[63,18,53,20],[63,22,53,24],[63,23,53,25,"storageKey"],[63,33,53,35],[63,34,53,36],[63,37,53,39,"Object"],[63,43,53,45],[63,44,53,46,"assign"],[63,50,53,52],[63,51,53,53,"Object"],[63,57,53,59],[63,58,53,60,"assign"],[63,64,53,66],[63,65,53,67],[63,66,53,68],[63,67,53,69],[63,69,53,71,"GLOBAL_JWKS"],[63,80,53,82],[63,81,53,83],[63,85,53,87],[63,86,53,88,"storageKey"],[63,96,53,98],[63,97,53,99],[63,98,53,100],[63,100,53,102],[64,8,53,104,"cachedAt"],[64,16,53,112],[64,18,53,114,"value"],[65,6,53,120],[65,7,53,121],[65,8,53,122],[66,4,54,4],[67,4,55,4],[68,0,56,0],[69,0,57,0],[70,4,58,4,"constructor"],[70,15,58,15,"constructor"],[70,16,58,16,"options"],[70,23,58,23],[70,25,58,25],[71,6,59,8],[71,10,59,12,"_a"],[71,12,59,14],[71,14,59,16,"_b"],[71,16,59,18],[72,6,60,8],[73,0,61,0],[74,0,62,0],[75,6,63,8],[75,10,63,12],[75,11,63,13,"userStorage"],[75,22,63,24],[75,25,63,27],[75,29,63,31],[76,6,64,8],[76,10,64,12],[76,11,64,13,"memoryStorage"],[76,24,64,26],[76,27,64,29],[76,31,64,33],[77,6,65,8],[77,10,65,12],[77,11,65,13,"stateChangeEmitters"],[77,30,65,32],[77,33,65,35],[77,37,65,39,"Map"],[77,40,65,42],[77,41,65,43],[77,42,65,44],[78,6,66,8],[78,10,66,12],[78,11,66,13,"autoRefreshTicker"],[78,28,66,30],[78,31,66,33],[78,35,66,37],[79,6,67,8],[79,10,67,12],[79,11,67,13,"visibilityChangedCallback"],[79,36,67,38],[79,39,67,41],[79,43,67,45],[80,6,68,8],[80,10,68,12],[80,11,68,13,"refreshingDeferred"],[80,29,68,31],[80,32,68,34],[80,36,68,38],[81,6,69,8],[82,0,70,0],[83,0,71,0],[84,0,72,0],[85,0,73,0],[86,0,74,0],[87,6,75,8],[87,10,75,12],[87,11,75,13,"initializePromise"],[87,28,75,30],[87,31,75,33],[87,35,75,37],[88,6,76,8],[88,10,76,12],[88,11,76,13,"detectSessionInUrl"],[88,29,76,31],[88,32,76,34],[88,36,76,38],[89,6,77,8],[89,10,77,12],[89,11,77,13,"hasCustomAuthorizationHeader"],[89,39,77,41],[89,42,77,44],[89,47,77,49],[90,6,78,8],[90,10,78,12],[90,11,78,13,"suppressGetSessionWarning"],[90,36,78,38],[90,39,78,41],[90,44,78,46],[91,6,79,8],[91,10,79,12],[91,11,79,13,"lockAcquired"],[91,23,79,25],[91,26,79,28],[91,31,79,33],[92,6,80,8],[92,10,80,12],[92,11,80,13,"pendingInLock"],[92,24,80,26],[92,27,80,29],[92,29,80,31],[93,6,81,8],[94,0,82,0],[95,0,83,0],[96,6,84,8],[96,10,84,12],[96,11,84,13,"broadcastChannel"],[96,27,84,29],[96,30,84,32],[96,34,84,36],[97,6,85,8],[97,10,85,12],[97,11,85,13,"logger"],[97,17,85,19],[97,20,85,22,"console"],[97,27,85,29],[97,28,85,30,"log"],[97,31,85,33],[98,6,86,8],[98,10,86,12],[98,11,86,13,"instanceID"],[98,21,86,23],[98,24,86,26,"GoTrueClient"],[98,36,86,38],[98,37,86,39,"nextInstanceID"],[98,51,86,53],[99,6,87,8,"GoTrueClient"],[99,18,87,20],[99,19,87,21,"nextInstanceID"],[99,33,87,35],[99,37,87,39],[99,38,87,40],[100,6,88,8],[100,10,88,12],[100,14,88,16],[100,15,88,17,"instanceID"],[100,25,88,27],[100,28,88,30],[100,29,88,31],[100,33,88,35],[100,37,88,35,"isBrowser"],[100,55,88,44],[100,57,88,45],[100,58,88,46],[100,60,88,48],[101,8,89,12,"console"],[101,15,89,19],[101,16,89,20,"warn"],[101,20,89,24],[101,21,89,25],[101,227,89,231],[101,228,89,232],[102,6,90,8],[103,6,91,8],[103,12,91,14,"settings"],[103,20,91,22],[103,23,91,25,"Object"],[103,29,91,31],[103,30,91,32,"assign"],[103,36,91,38],[103,37,91,39,"Object"],[103,43,91,45],[103,44,91,46,"assign"],[103,50,91,52],[103,51,91,53],[103,52,91,54],[103,53,91,55],[103,55,91,57,"DEFAULT_OPTIONS"],[103,70,91,72],[103,71,91,73],[103,73,91,75,"options"],[103,80,91,82],[103,81,91,83],[104,6,92,8],[104,10,92,12],[104,11,92,13,"logDebugMessages"],[104,27,92,29],[104,30,92,32],[104,31,92,33],[104,32,92,34,"settings"],[104,40,92,42],[104,41,92,43,"debug"],[104,46,92,48],[105,6,93,8],[105,10,93,12],[105,17,93,19,"settings"],[105,25,93,27],[105,26,93,28,"debug"],[105,31,93,33],[105,36,93,38],[105,46,93,48],[105,48,93,50],[106,8,94,12],[106,12,94,16],[106,13,94,17,"logger"],[106,19,94,23],[106,22,94,26,"settings"],[106,30,94,34],[106,31,94,35,"debug"],[106,36,94,40],[107,6,95,8],[108,6,96,8],[108,10,96,12],[108,11,96,13,"persistSession"],[108,25,96,27],[108,28,96,30,"settings"],[108,36,96,38],[108,37,96,39,"persistSession"],[108,51,96,53],[109,6,97,8],[109,10,97,12],[109,11,97,13,"storageKey"],[109,21,97,23],[109,24,97,26,"settings"],[109,32,97,34],[109,33,97,35,"storageKey"],[109,43,97,45],[110,6,98,8],[110,10,98,12],[110,11,98,13,"autoRefreshToken"],[110,27,98,29],[110,30,98,32,"settings"],[110,38,98,40],[110,39,98,41,"autoRefreshToken"],[110,55,98,57],[111,6,99,8],[111,10,99,12],[111,11,99,13,"admin"],[111,16,99,18],[111,19,99,21],[111,23,99,25,"GoTrueAdminApi"],[111,46,99,39],[111,47,99,40],[112,8,100,12,"url"],[112,11,100,15],[112,13,100,17,"settings"],[112,21,100,25],[112,22,100,26,"url"],[112,25,100,29],[113,8,101,12,"headers"],[113,15,101,19],[113,17,101,21,"settings"],[113,25,101,29],[113,26,101,30,"headers"],[113,33,101,37],[114,8,102,12,"fetch"],[114,13,102,17],[114,15,102,19,"settings"],[114,23,102,27],[114,24,102,28,"fetch"],[115,6,103,8],[115,7,103,9],[115,8,103,10],[116,6,104,8],[116,10,104,12],[116,11,104,13,"url"],[116,14,104,16],[116,17,104,19,"settings"],[116,25,104,27],[116,26,104,28,"url"],[116,29,104,31],[117,6,105,8],[117,10,105,12],[117,11,105,13,"headers"],[117,18,105,20],[117,21,105,23,"settings"],[117,29,105,31],[117,30,105,32,"headers"],[117,37,105,39],[118,6,106,8],[118,10,106,12],[118,11,106,13,"fetch"],[118,16,106,18],[118,19,106,21],[118,23,106,21,"resolveFetch"],[118,44,106,33],[118,46,106,34,"settings"],[118,54,106,42],[118,55,106,43,"fetch"],[118,60,106,48],[118,61,106,49],[119,6,107,8],[119,10,107,12],[119,11,107,13,"lock"],[119,15,107,17],[119,18,107,20,"settings"],[119,26,107,28],[119,27,107,29,"lock"],[119,31,107,33],[119,35,107,37,"lockNoOp"],[119,43,107,45],[120,6,108,8],[120,10,108,12],[120,11,108,13,"detectSessionInUrl"],[120,29,108,31],[120,32,108,34,"settings"],[120,40,108,42],[120,41,108,43,"detectSessionInUrl"],[120,59,108,61],[121,6,109,8],[121,10,109,12],[121,11,109,13,"flowType"],[121,19,109,21],[121,22,109,24,"settings"],[121,30,109,32],[121,31,109,33,"flowType"],[121,39,109,41],[122,6,110,8],[122,10,110,12],[122,11,110,13,"hasCustomAuthorizationHeader"],[122,39,110,41],[122,42,110,44,"settings"],[122,50,110,52],[122,51,110,53,"hasCustomAuthorizationHeader"],[122,79,110,81],[123,6,111,8],[123,10,111,12,"settings"],[123,18,111,20],[123,19,111,21,"lock"],[123,23,111,25],[123,25,111,27],[124,8,112,12],[124,12,112,16],[124,13,112,17,"lock"],[124,17,112,21],[124,20,112,24,"settings"],[124,28,112,32],[124,29,112,33,"lock"],[124,33,112,37],[125,6,113,8],[125,7,113,9],[125,13,114,13],[125,17,114,17],[125,21,114,17,"isBrowser"],[125,39,114,26],[125,41,114,27],[125,42,114,28],[125,47,114,33],[125,48,114,34,"_a"],[125,50,114,36],[125,53,114,39,"globalThis"],[125,63,114,49],[125,68,114,54],[125,72,114,58],[125,76,114,62,"globalThis"],[125,86,114,72],[125,91,114,77],[125,96,114,82],[125,97,114,83],[125,100,114,86],[125,105,114,91],[125,106,114,92],[125,109,114,95,"globalThis"],[125,119,114,105],[125,120,114,106,"navigator"],[125,129,114,115],[125,135,114,121],[125,139,114,125],[125,143,114,129,"_a"],[125,145,114,131],[125,150,114,136],[125,155,114,141],[125,156,114,142],[125,159,114,145],[125,164,114,150],[125,165,114,151],[125,168,114,154,"_a"],[125,170,114,156],[125,171,114,157,"locks"],[125,176,114,162],[125,177,114,163],[125,179,114,165],[126,8,115,12],[126,12,115,16],[126,13,115,17,"lock"],[126,17,115,21],[126,20,115,24,"navigatorLock"],[126,40,115,37],[127,6,116,8],[127,7,116,9],[127,13,117,13],[128,8,118,12],[128,12,118,16],[128,13,118,17,"lock"],[128,17,118,21],[128,20,118,24,"lockNoOp"],[128,28,118,32],[129,6,119,8],[130,6,120,8],[130,10,120,12],[130,11,120,13],[130,15,120,17],[130,16,120,18,"jwks"],[130,20,120,22],[130,22,120,24],[131,8,121,12],[131,12,121,16],[131,13,121,17,"jwks"],[131,17,121,21],[131,20,121,24],[132,10,121,26,"keys"],[132,14,121,30],[132,16,121,32],[133,8,121,35],[133,9,121,36],[134,8,122,12],[134,12,122,16],[134,13,122,17,"jwks_cached_at"],[134,27,122,31],[134,30,122,34,"Number"],[134,36,122,40],[134,37,122,41,"MIN_SAFE_INTEGER"],[134,53,122,57],[135,6,123,8],[136,6,124,8],[136,10,124,12],[136,11,124,13,"mfa"],[136,14,124,16],[136,17,124,19],[137,8,125,12,"verify"],[137,14,125,18],[137,16,125,20],[137,20,125,24],[137,21,125,25,"_verify"],[137,28,125,32],[137,29,125,33,"bind"],[137,33,125,37],[137,34,125,38],[137,38,125,42],[137,39,125,43],[138,8,126,12,"enroll"],[138,14,126,18],[138,16,126,20],[138,20,126,24],[138,21,126,25,"_enroll"],[138,28,126,32],[138,29,126,33,"bind"],[138,33,126,37],[138,34,126,38],[138,38,126,42],[138,39,126,43],[139,8,127,12,"unenroll"],[139,16,127,20],[139,18,127,22],[139,22,127,26],[139,23,127,27,"_unenroll"],[139,32,127,36],[139,33,127,37,"bind"],[139,37,127,41],[139,38,127,42],[139,42,127,46],[139,43,127,47],[140,8,128,12,"challenge"],[140,17,128,21],[140,19,128,23],[140,23,128,27],[140,24,128,28,"_challenge"],[140,34,128,38],[140,35,128,39,"bind"],[140,39,128,43],[140,40,128,44],[140,44,128,48],[140,45,128,49],[141,8,129,12,"listFactors"],[141,19,129,23],[141,21,129,25],[141,25,129,29],[141,26,129,30,"_listFactors"],[141,38,129,42],[141,39,129,43,"bind"],[141,43,129,47],[141,44,129,48],[141,48,129,52],[141,49,129,53],[142,8,130,12,"challengeAndVerify"],[142,26,130,30],[142,28,130,32],[142,32,130,36],[142,33,130,37,"_challengeAndVerify"],[142,52,130,56],[142,53,130,57,"bind"],[142,57,130,61],[142,58,130,62],[142,62,130,66],[142,63,130,67],[143,8,131,12,"getAuthenticatorAssuranceLevel"],[143,38,131,42],[143,40,131,44],[143,44,131,48],[143,45,131,49,"_getAuthenticatorAssuranceLevel"],[143,76,131,80],[143,77,131,81,"bind"],[143,81,131,85],[143,82,131,86],[143,86,131,90],[143,87,131,91],[144,8,132,12,"webauthn"],[144,16,132,20],[144,18,132,22],[144,22,132,26,"WebAuthnApi"],[144,43,132,37],[144,44,132,38],[144,48,132,42],[145,6,133,8],[145,7,133,9],[146,6,134,8],[146,10,134,12],[146,14,134,16],[146,15,134,17,"persistSession"],[146,29,134,31],[146,31,134,33],[147,8,135,12],[147,12,135,16,"settings"],[147,20,135,24],[147,21,135,25,"storage"],[147,28,135,32],[147,30,135,34],[148,10,136,16],[148,14,136,20],[148,15,136,21,"storage"],[148,22,136,28],[148,25,136,31,"settings"],[148,33,136,39],[148,34,136,40,"storage"],[148,41,136,47],[149,8,137,12],[149,9,137,13],[149,15,138,17],[150,10,139,16],[150,14,139,20],[150,18,139,20,"supportsLocalStorage"],[150,47,139,40],[150,49,139,41],[150,50,139,42],[150,52,139,44],[151,12,140,20],[151,16,140,24],[151,17,140,25,"storage"],[151,24,140,32],[151,27,140,35,"globalThis"],[151,37,140,45],[151,38,140,46,"localStorage"],[151,50,140,58],[152,10,141,16],[152,11,141,17],[152,17,142,21],[153,12,143,20],[153,16,143,24],[153,17,143,25,"memoryStorage"],[153,30,143,38],[153,33,143,41],[153,34,143,42],[153,35,143,43],[154,12,144,20],[154,16,144,24],[154,17,144,25,"storage"],[154,24,144,32],[154,27,144,35],[154,31,144,35,"memoryLocalStorageAdapter"],[154,70,144,60],[154,72,144,61],[154,76,144,65],[154,77,144,66,"memoryStorage"],[154,90,144,79],[154,91,144,80],[155,10,145,16],[156,8,146,12],[157,8,147,12],[157,12,147,16,"settings"],[157,20,147,24],[157,21,147,25,"userStorage"],[157,32,147,36],[157,34,147,38],[158,10,148,16],[158,14,148,20],[158,15,148,21,"userStorage"],[158,26,148,32],[158,29,148,35,"settings"],[158,37,148,43],[158,38,148,44,"userStorage"],[158,49,148,55],[159,8,149,12],[160,6,150,8],[160,7,150,9],[160,13,151,13],[161,8,152,12],[161,12,152,16],[161,13,152,17,"memoryStorage"],[161,26,152,30],[161,29,152,33],[161,30,152,34],[161,31,152,35],[162,8,153,12],[162,12,153,16],[162,13,153,17,"storage"],[162,20,153,24],[162,23,153,27],[162,27,153,27,"memoryLocalStorageAdapter"],[162,66,153,52],[162,68,153,53],[162,72,153,57],[162,73,153,58,"memoryStorage"],[162,86,153,71],[162,87,153,72],[163,6,154,8],[164,6,155,8],[164,10,155,12],[164,14,155,12,"isBrowser"],[164,32,155,21],[164,34,155,22],[164,35,155,23],[164,39,155,27,"globalThis"],[164,49,155,37],[164,50,155,38,"BroadcastChannel"],[164,66,155,54],[164,70,155,58],[164,74,155,62],[164,75,155,63,"persistSession"],[164,89,155,77],[164,93,155,81],[164,97,155,85],[164,98,155,86,"storageKey"],[164,108,155,96],[164,110,155,98],[165,8,156,12],[165,12,156,16],[166,10,157,16],[166,14,157,20],[166,15,157,21,"broadcastChannel"],[166,31,157,37],[166,34,157,40],[166,38,157,44,"globalThis"],[166,48,157,54],[166,49,157,55,"BroadcastChannel"],[166,65,157,71],[166,66,157,72],[166,70,157,76],[166,71,157,77,"storageKey"],[166,81,157,87],[166,82,157,88],[167,8,158,12],[167,9,158,13],[167,10,159,12],[167,17,159,19,"e"],[167,18,159,20],[167,20,159,22],[168,10,160,16,"console"],[168,17,160,23],[168,18,160,24,"error"],[168,23,160,29],[168,24,160,30],[168,112,160,118],[168,114,160,120,"e"],[168,115,160,121],[168,116,160,122],[169,8,161,12],[170,8,162,12],[170,9,162,13,"_b"],[170,11,162,15],[170,14,162,18],[170,18,162,22],[170,19,162,23,"broadcastChannel"],[170,35,162,39],[170,41,162,45],[170,45,162,49],[170,49,162,53,"_b"],[170,51,162,55],[170,56,162,60],[170,61,162,65],[170,62,162,66],[170,65,162,69],[170,70,162,74],[170,71,162,75],[170,74,162,78,"_b"],[170,76,162,80],[170,77,162,81,"addEventListener"],[170,93,162,97],[170,94,162,98],[170,103,162,107],[170,105,162,109],[170,111,162,116,"event"],[170,116,162,121],[170,120,162,126],[171,10,163,16],[171,14,163,20],[171,15,163,21,"_debug"],[171,21,163,27],[171,22,163,28],[171,80,163,86],[171,82,163,88,"event"],[171,87,163,93],[171,88,163,94],[172,10,164,16],[172,16,164,22],[172,20,164,26],[172,21,164,27,"_notifyAllSubscribers"],[172,42,164,48],[172,43,164,49,"event"],[172,48,164,54],[172,49,164,55,"data"],[172,53,164,59],[172,54,164,60,"event"],[172,59,164,65],[172,61,164,67,"event"],[172,66,164,72],[172,67,164,73,"data"],[172,71,164,77],[172,72,164,78,"session"],[172,79,164,85],[172,81,164,87],[172,86,164,92],[172,87,164,93],[172,88,164,94],[172,89,164,95],[173,8,165,12],[173,9,165,13],[173,10,165,14],[174,6,166,8],[175,6,167,8],[175,10,167,12],[175,11,167,13,"initialize"],[175,21,167,23],[175,22,167,24],[175,23,167,25],[176,4,168,4],[177,4,169,4,"_debug"],[177,10,169,10,"_debug"],[177,11,169,11],[177,14,169,14,"args"],[177,18,169,18],[177,20,169,20],[178,6,170,8],[178,10,170,12],[178,14,170,16],[178,15,170,17,"logDebugMessages"],[178,31,170,33],[178,33,170,35],[179,8,171,12],[179,12,171,16],[179,13,171,17,"logger"],[179,19,171,23],[179,20,171,24],[179,36,171,40],[179,40,171,44],[179,41,171,45,"instanceID"],[179,51,171,55],[179,56,171,60,"version"],[179,72,171,67],[179,77,171,72],[179,81,171,76,"Date"],[179,85,171,80],[179,86,171,81],[179,87,171,82],[179,88,171,83,"toISOString"],[179,99,171,94],[179,100,171,95],[179,101,171,96],[179,103,171,98],[179,105,171,100],[179,108,171,103,"args"],[179,112,171,107],[179,113,171,108],[180,6,172,8],[181,6,173,8],[181,13,173,15],[181,17,173,19],[182,4,174,4],[183,4,175,4],[184,0,176,0],[185,0,177,0],[186,0,178,0],[187,0,179,0],[188,4,180,4],[188,10,180,10,"initialize"],[188,20,180,20,"initialize"],[188,21,180,20],[188,23,180,23],[189,6,181,8],[189,10,181,12],[189,14,181,16],[189,15,181,17,"initializePromise"],[189,32,181,34],[189,34,181,36],[190,8,182,12],[190,15,182,19],[190,21,182,25],[190,25,182,29],[190,26,182,30,"initializePromise"],[190,43,182,47],[191,6,183,8],[192,6,184,8],[192,10,184,12],[192,11,184,13,"initializePromise"],[192,28,184,30],[192,31,184,33],[192,32,184,34],[192,44,184,46],[193,8,185,12],[193,15,185,19],[193,21,185,25],[193,25,185,29],[193,26,185,30,"_acquireLock"],[193,38,185,42],[193,39,185,43],[193,40,185,44],[193,41,185,45],[193,43,185,47],[193,55,185,59],[194,10,186,16],[194,17,186,23],[194,23,186,29],[194,27,186,33],[194,28,186,34,"_initialize"],[194,39,186,45],[194,40,186,46],[194,41,186,47],[195,8,187,12],[195,9,187,13],[195,10,187,14],[196,6,188,8],[196,7,188,9],[196,9,188,11],[196,10,188,12],[197,6,189,8],[197,13,189,15],[197,19,189,21],[197,23,189,25],[197,24,189,26,"initializePromise"],[197,41,189,43],[198,4,190,4],[199,4,191,4],[200,0,192,0],[201,0,193,0],[202,0,194,0],[203,0,195,0],[204,0,196,0],[205,4,197,4],[205,10,197,10,"_initialize"],[205,21,197,21,"_initialize"],[205,22,197,21],[205,24,197,24],[206,6,198,8],[206,10,198,12,"_a"],[206,12,198,14],[207,6,199,8],[207,10,199,12],[208,8,200,12],[208,14,200,18,"params"],[208,20,200,24],[208,23,200,27],[208,27,200,27,"parseParametersFromURL"],[208,58,200,49],[208,60,200,50,"window"],[208,66,200,56],[208,67,200,57,"location"],[208,75,200,65],[208,76,200,66,"href"],[208,80,200,70],[208,81,200,71],[209,8,201,12],[209,12,201,16,"callbackUrlType"],[209,27,201,31],[209,30,201,34],[209,36,201,40],[210,8,202,12],[210,12,202,16],[210,16,202,20],[210,17,202,21,"_isImplicitGrantCallback"],[210,41,202,45],[210,42,202,46,"params"],[210,48,202,52],[210,49,202,53],[210,51,202,55],[211,10,203,16,"callbackUrlType"],[211,25,203,31],[211,28,203,34],[211,38,203,44],[212,8,204,12],[212,9,204,13],[212,15,205,17],[212,19,205,21],[212,25,205,27],[212,29,205,31],[212,30,205,32,"_isPKCECallback"],[212,45,205,47],[212,46,205,48,"params"],[212,52,205,54],[212,53,205,55],[212,55,205,57],[213,10,206,16,"callbackUrlType"],[213,25,206,31],[213,28,206,34],[213,34,206,40],[214,8,207,12],[215,8,208,12],[216,0,209,0],[217,0,210,0],[218,0,211,0],[219,0,212,0],[220,0,213,0],[221,8,214,12],[221,12,214,16],[221,16,214,16,"isBrowser"],[221,34,214,25],[221,36,214,26],[221,37,214,27],[221,41,214,31],[221,45,214,35],[221,46,214,36,"detectSessionInUrl"],[221,64,214,54],[221,68,214,58,"callbackUrlType"],[221,83,214,73],[221,88,214,78],[221,94,214,84],[221,96,214,86],[222,10,215,16],[222,16,215,22],[223,12,215,24,"data"],[223,16,215,28],[224,12,215,30,"error"],[225,10,215,36],[225,11,215,37],[225,14,215,40],[225,20,215,46],[225,24,215,50],[225,25,215,51,"_getSessionFromURL"],[225,43,215,69],[225,44,215,70,"params"],[225,50,215,76],[225,52,215,78,"callbackUrlType"],[225,67,215,93],[225,68,215,94],[226,10,216,16],[226,14,216,20,"error"],[226,19,216,25],[226,21,216,27],[227,12,217,20],[227,16,217,24],[227,17,217,25,"_debug"],[227,23,217,31],[227,24,217,32],[227,40,217,48],[227,42,217,50],[227,76,217,84],[227,78,217,86,"error"],[227,83,217,91],[227,84,217,92],[228,12,218,20],[228,16,218,24],[228,20,218,24,"isAuthImplicitGrantRedirectError"],[228,60,218,56],[228,62,218,57,"error"],[228,67,218,62],[228,68,218,63],[228,70,218,65],[229,14,219,24],[229,20,219,30,"errorCode"],[229,29,219,39],[229,32,219,42],[229,33,219,43,"_a"],[229,35,219,45],[229,38,219,48,"error"],[229,43,219,53],[229,44,219,54,"details"],[229,51,219,61],[229,57,219,67],[229,61,219,71],[229,65,219,75,"_a"],[229,67,219,77],[229,72,219,82],[229,77,219,87],[229,78,219,88],[229,81,219,91],[229,86,219,96],[229,87,219,97],[229,90,219,100,"_a"],[229,92,219,102],[229,93,219,103,"code"],[229,97,219,107],[230,14,220,24],[230,18,220,28,"errorCode"],[230,27,220,37],[230,32,220,42],[230,57,220,67],[230,61,221,28,"errorCode"],[230,70,221,37],[230,75,221,42],[230,95,221,62],[230,99,222,28,"errorCode"],[230,108,222,37],[230,113,222,42],[230,144,222,73],[230,146,222,75],[231,16,223,28],[231,23,223,35],[232,18,223,37,"error"],[233,16,223,43],[233,17,223,44],[234,14,224,24],[235,12,225,20],[236,12,226,20],[237,12,227,20],[238,12,228,20],[238,18,228,26],[238,22,228,30],[238,23,228,31,"_removeSession"],[238,37,228,45],[238,38,228,46],[238,39,228,47],[239,12,229,20],[239,19,229,27],[240,14,229,29,"error"],[241,12,229,35],[241,13,229,36],[242,10,230,16],[243,10,231,16],[243,16,231,22],[244,12,231,24,"session"],[244,19,231,31],[245,12,231,33,"redirectType"],[246,10,231,46],[246,11,231,47],[246,14,231,50,"data"],[246,18,231,54],[247,10,232,16],[247,14,232,20],[247,15,232,21,"_debug"],[247,21,232,27],[247,22,232,28],[247,38,232,44],[247,40,232,46],[247,65,232,71],[247,67,232,73,"session"],[247,74,232,80],[247,76,232,82],[247,91,232,97],[247,93,232,99,"redirectType"],[247,105,232,111],[247,106,232,112],[248,10,233,16],[248,16,233,22],[248,20,233,26],[248,21,233,27,"_saveSession"],[248,33,233,39],[248,34,233,40,"session"],[248,41,233,47],[248,42,233,48],[249,10,234,16,"setTimeout"],[249,20,234,26],[249,21,234,27],[249,33,234,39],[250,12,235,20],[250,16,235,24,"redirectType"],[250,28,235,36],[250,33,235,41],[250,43,235,51],[250,45,235,53],[251,14,236,24],[251,20,236,30],[251,24,236,34],[251,25,236,35,"_notifyAllSubscribers"],[251,46,236,56],[251,47,236,57],[251,66,236,76],[251,68,236,78,"session"],[251,75,236,85],[251,76,236,86],[252,12,237,20],[252,13,237,21],[252,19,238,25],[253,14,239,24],[253,20,239,30],[253,24,239,34],[253,25,239,35,"_notifyAllSubscribers"],[253,46,239,56],[253,47,239,57],[253,58,239,68],[253,60,239,70,"session"],[253,67,239,77],[253,68,239,78],[254,12,240,20],[255,10,241,16],[255,11,241,17],[255,13,241,19],[255,14,241,20],[255,15,241,21],[256,10,242,16],[256,17,242,23],[257,12,242,25,"error"],[257,17,242,30],[257,19,242,32],[258,10,242,37],[258,11,242,38],[259,8,243,12],[260,8,244,12],[261,8,245,12],[261,14,245,18],[261,18,245,22],[261,19,245,23,"_recoverAndRefresh"],[261,37,245,41],[261,38,245,42],[261,39,245,43],[262,8,246,12],[262,15,246,19],[263,10,246,21,"error"],[263,15,246,26],[263,17,246,28],[264,8,246,33],[264,9,246,34],[265,6,247,8],[265,7,247,9],[265,8,248,8],[265,15,248,15,"error"],[265,20,248,20],[265,22,248,22],[266,8,249,12],[266,12,249,16],[266,16,249,16,"isAuthError"],[266,35,249,27],[266,37,249,28,"error"],[266,42,249,33],[266,43,249,34],[266,45,249,36],[267,10,250,16],[267,17,250,23],[268,12,250,25,"error"],[269,10,250,31],[269,11,250,32],[270,8,251,12],[271,8,252,12],[271,15,252,19],[272,10,253,16,"error"],[272,15,253,21],[272,17,253,23],[272,21,253,27,"AuthUnknownError"],[272,45,253,43],[272,46,253,44],[272,86,253,84],[272,88,253,86,"error"],[272,93,253,91],[273,8,254,12],[273,9,254,13],[274,6,255,8],[274,7,255,9],[274,16,256,16],[275,8,257,12],[275,14,257,18],[275,18,257,22],[275,19,257,23,"_handleVisibilityChange"],[275,42,257,46],[275,43,257,47],[275,44,257,48],[276,8,258,12],[276,12,258,16],[276,13,258,17,"_debug"],[276,19,258,23],[276,20,258,24],[276,36,258,40],[276,38,258,42],[276,43,258,47],[276,44,258,48],[277,6,259,8],[278,4,260,4],[279,4,261,4],[280,0,262,0],[281,0,263,0],[282,0,264,0],[283,0,265,0],[284,4,266,4],[284,10,266,10,"signInAnonymously"],[284,27,266,27,"signInAnonymously"],[284,28,266,28,"credentials"],[284,39,266,39],[284,41,266,41],[285,6,267,8],[285,10,267,12,"_a"],[285,12,267,14],[285,14,267,16,"_b"],[285,16,267,18],[285,18,267,20,"_c"],[285,20,267,22],[286,6,268,8],[286,10,268,12],[287,8,269,12],[287,14,269,18,"res"],[287,17,269,21],[287,20,269,24],[287,26,269,30],[287,30,269,30,"_request"],[287,45,269,38],[287,47,269,39],[287,51,269,43],[287,52,269,44,"fetch"],[287,57,269,49],[287,59,269,51],[287,65,269,57],[287,67,269,59],[287,70,269,62],[287,74,269,66],[287,75,269,67,"url"],[287,78,269,70],[287,87,269,79],[287,89,269,81],[288,10,270,16,"headers"],[288,17,270,23],[288,19,270,25],[288,23,270,29],[288,24,270,30,"headers"],[288,31,270,37],[289,10,271,16,"body"],[289,14,271,20],[289,16,271,22],[290,12,272,20,"data"],[290,16,272,24],[290,18,272,26],[290,19,272,27,"_b"],[290,21,272,29],[290,24,272,32],[290,25,272,33,"_a"],[290,27,272,35],[290,30,272,38,"credentials"],[290,41,272,49],[290,46,272,54],[290,50,272,58],[290,54,272,62,"credentials"],[290,65,272,73],[290,70,272,78],[290,75,272,83],[290,76,272,84],[290,79,272,87],[290,84,272,92],[290,85,272,93],[290,88,272,96,"credentials"],[290,99,272,107],[290,100,272,108,"options"],[290,107,272,115],[290,113,272,121],[290,117,272,125],[290,121,272,129,"_a"],[290,123,272,131],[290,128,272,136],[290,133,272,141],[290,134,272,142],[290,137,272,145],[290,142,272,150],[290,143,272,151],[290,146,272,154,"_a"],[290,148,272,156],[290,149,272,157,"data"],[290,153,272,161],[290,159,272,167],[290,163,272,171],[290,167,272,175,"_b"],[290,169,272,177],[290,174,272,182],[290,179,272,187],[290,180,272,188],[290,183,272,191,"_b"],[290,185,272,193],[290,188,272,196],[290,189,272,197],[290,190,272,198],[291,12,273,20,"gotrue_meta_security"],[291,32,273,40],[291,34,273,42],[292,14,273,44,"captcha_token"],[292,27,273,57],[292,29,273,59],[292,30,273,60,"_c"],[292,32,273,62],[292,35,273,65,"credentials"],[292,46,273,76],[292,51,273,81],[292,55,273,85],[292,59,273,89,"credentials"],[292,70,273,100],[292,75,273,105],[292,80,273,110],[292,81,273,111],[292,84,273,114],[292,89,273,119],[292,90,273,120],[292,93,273,123,"credentials"],[292,104,273,134],[292,105,273,135,"options"],[292,112,273,142],[292,118,273,148],[292,122,273,152],[292,126,273,156,"_c"],[292,128,273,158],[292,133,273,163],[292,138,273,168],[292,139,273,169],[292,142,273,172],[292,147,273,177],[292,148,273,178],[292,151,273,181,"_c"],[292,153,273,183],[292,154,273,184,"captchaToken"],[293,12,273,197],[294,10,274,16],[294,11,274,17],[295,10,275,16,"xform"],[295,15,275,21],[295,17,275,23,"_sessionResponse"],[296,8,276,12],[296,9,276,13],[296,10,276,14],[297,8,277,12],[297,14,277,18],[298,10,277,20,"data"],[298,14,277,24],[299,10,277,26,"error"],[300,8,277,32],[300,9,277,33],[300,12,277,36,"res"],[300,15,277,39],[301,8,278,12],[301,12,278,16,"error"],[301,17,278,21],[301,21,278,25],[301,22,278,26,"data"],[301,26,278,30],[301,28,278,32],[302,10,279,16],[302,17,279,23],[303,12,279,25,"data"],[303,16,279,29],[303,18,279,31],[304,14,279,33,"user"],[304,18,279,37],[304,20,279,39],[304,24,279,43],[305,14,279,45,"session"],[305,21,279,52],[305,23,279,54],[306,12,279,59],[306,13,279,60],[307,12,279,62,"error"],[307,17,279,67],[307,19,279,69,"error"],[308,10,279,75],[308,11,279,76],[309,8,280,12],[310,8,281,12],[310,14,281,18,"session"],[310,21,281,25],[310,24,281,28,"data"],[310,28,281,32],[310,29,281,33,"session"],[310,36,281,40],[311,8,282,12],[311,14,282,18,"user"],[311,18,282,22],[311,21,282,25,"data"],[311,25,282,29],[311,26,282,30,"user"],[311,30,282,34],[312,8,283,12],[312,12,283,16,"data"],[312,16,283,20],[312,17,283,21,"session"],[312,24,283,28],[312,26,283,30],[313,10,284,16],[313,16,284,22],[313,20,284,26],[313,21,284,27,"_saveSession"],[313,33,284,39],[313,34,284,40,"data"],[313,38,284,44],[313,39,284,45,"session"],[313,46,284,52],[313,47,284,53],[314,10,285,16],[314,16,285,22],[314,20,285,26],[314,21,285,27,"_notifyAllSubscribers"],[314,42,285,48],[314,43,285,49],[314,54,285,60],[314,56,285,62,"session"],[314,63,285,69],[314,64,285,70],[315,8,286,12],[316,8,287,12],[316,15,287,19],[317,10,287,21,"data"],[317,14,287,25],[317,16,287,27],[318,12,287,29,"user"],[318,16,287,33],[319,12,287,35,"session"],[320,10,287,43],[320,11,287,44],[321,10,287,46,"error"],[321,15,287,51],[321,17,287,53],[322,8,287,58],[322,9,287,59],[323,6,288,8],[323,7,288,9],[323,8,289,8],[323,15,289,15,"error"],[323,20,289,20],[323,22,289,22],[324,8,290,12],[324,12,290,16],[324,16,290,16,"isAuthError"],[324,35,290,27],[324,37,290,28,"error"],[324,42,290,33],[324,43,290,34],[324,45,290,36],[325,10,291,16],[325,17,291,23],[326,12,291,25,"data"],[326,16,291,29],[326,18,291,31],[327,14,291,33,"user"],[327,18,291,37],[327,20,291,39],[327,24,291,43],[328,14,291,45,"session"],[328,21,291,52],[328,23,291,54],[329,12,291,59],[329,13,291,60],[330,12,291,62,"error"],[331,10,291,68],[331,11,291,69],[332,8,292,12],[333,8,293,12],[333,14,293,18,"error"],[333,19,293,23],[334,6,294,8],[335,4,295,4],[336,4,296,4],[337,0,297,0],[338,0,298,0],[339,0,299,0],[340,0,300,0],[341,0,301,0],[342,0,302,0],[343,0,303,0],[344,0,304,0],[345,0,305,0],[346,4,306,4],[346,10,306,10,"signUp"],[346,16,306,16,"signUp"],[346,17,306,17,"credentials"],[346,28,306,28],[346,30,306,30],[347,6,307,8],[347,10,307,12,"_a"],[347,12,307,14],[347,14,307,16,"_b"],[347,16,307,18],[347,18,307,20,"_c"],[347,20,307,22],[348,6,308,8],[348,10,308,12],[349,8,309,12],[349,12,309,16,"res"],[349,15,309,19],[350,8,310,12],[350,12,310,16],[350,19,310,23],[350,23,310,27,"credentials"],[350,34,310,38],[350,36,310,40],[351,10,311,16],[351,16,311,22],[352,12,311,24,"email"],[352,17,311,29],[353,12,311,31,"password"],[353,20,311,39],[354,12,311,41,"options"],[355,10,311,49],[355,11,311,50],[355,14,311,53,"credentials"],[355,25,311,64],[356,10,312,16],[356,14,312,20,"codeChallenge"],[356,27,312,33],[356,30,312,36],[356,34,312,40],[357,10,313,16],[357,14,313,20,"codeChallengeMethod"],[357,33,313,39],[357,36,313,42],[357,40,313,46],[358,10,314,16],[358,14,314,20],[358,18,314,24],[358,19,314,25,"flowType"],[358,27,314,33],[358,32,314,38],[358,38,314,44],[358,40,314,46],[359,12,315,20],[360,12,316,20],[360,13,316,21,"codeChallenge"],[360,26,316,34],[360,28,316,36,"codeChallengeMethod"],[360,47,316,55],[360,48,316,56],[360,51,316,59],[360,57,316,65],[360,61,316,65,"getCodeChallengeAndMethod"],[360,95,316,90],[360,97,316,91],[360,101,316,95],[360,102,316,96,"storage"],[360,109,316,103],[360,111,316,105],[360,115,316,109],[360,116,316,110,"storageKey"],[360,126,316,120],[360,127,316,121],[361,10,317,16],[362,10,318,16,"res"],[362,13,318,19],[362,16,318,22],[362,22,318,28],[362,26,318,28,"_request"],[362,41,318,36],[362,43,318,37],[362,47,318,41],[362,48,318,42,"fetch"],[362,53,318,47],[362,55,318,49],[362,61,318,55],[362,63,318,57],[362,66,318,60],[362,70,318,64],[362,71,318,65,"url"],[362,74,318,68],[362,83,318,77],[362,85,318,79],[363,12,319,20,"headers"],[363,19,319,27],[363,21,319,29],[363,25,319,33],[363,26,319,34,"headers"],[363,33,319,41],[364,12,320,20,"redirectTo"],[364,22,320,30],[364,24,320,32,"options"],[364,31,320,39],[364,36,320,44],[364,40,320,48],[364,44,320,52,"options"],[364,51,320,59],[364,56,320,64],[364,61,320,69],[364,62,320,70],[364,65,320,73],[364,70,320,78],[364,71,320,79],[364,74,320,82,"options"],[364,81,320,89],[364,82,320,90,"emailRedirectTo"],[364,97,320,105],[365,12,321,20,"body"],[365,16,321,24],[365,18,321,26],[366,14,322,24,"email"],[366,19,322,29],[367,14,323,24,"password"],[367,22,323,32],[368,14,324,24,"data"],[368,18,324,28],[368,20,324,30],[368,21,324,31,"_a"],[368,23,324,33],[368,26,324,36,"options"],[368,33,324,43],[368,38,324,48],[368,42,324,52],[368,46,324,56,"options"],[368,53,324,63],[368,58,324,68],[368,63,324,73],[368,64,324,74],[368,67,324,77],[368,72,324,82],[368,73,324,83],[368,76,324,86,"options"],[368,83,324,93],[368,84,324,94,"data"],[368,88,324,98],[368,94,324,104],[368,98,324,108],[368,102,324,112,"_a"],[368,104,324,114],[368,109,324,119],[368,114,324,124],[368,115,324,125],[368,118,324,128,"_a"],[368,120,324,130],[368,123,324,133],[368,124,324,134],[368,125,324,135],[369,14,325,24,"gotrue_meta_security"],[369,34,325,44],[369,36,325,46],[370,16,325,48,"captcha_token"],[370,29,325,61],[370,31,325,63,"options"],[370,38,325,70],[370,43,325,75],[370,47,325,79],[370,51,325,83,"options"],[370,58,325,90],[370,63,325,95],[370,68,325,100],[370,69,325,101],[370,72,325,104],[370,77,325,109],[370,78,325,110],[370,81,325,113,"options"],[370,88,325,120],[370,89,325,121,"captchaToken"],[371,14,325,134],[371,15,325,135],[372,14,326,24,"code_challenge"],[372,28,326,38],[372,30,326,40,"codeChallenge"],[372,43,326,53],[373,14,327,24,"code_challenge_method"],[373,35,327,45],[373,37,327,47,"codeChallengeMethod"],[374,12,328,20],[374,13,328,21],[375,12,329,20,"xform"],[375,17,329,25],[375,19,329,27,"_sessionResponse"],[376,10,330,16],[376,11,330,17],[376,12,330,18],[377,8,331,12],[377,9,331,13],[377,15,332,17],[377,19,332,21],[377,26,332,28],[377,30,332,32,"credentials"],[377,41,332,43],[377,43,332,45],[378,10,333,16],[378,16,333,22],[379,12,333,24,"phone"],[379,17,333,29],[380,12,333,31,"password"],[380,20,333,39],[381,12,333,41,"options"],[382,10,333,49],[382,11,333,50],[382,14,333,53,"credentials"],[382,25,333,64],[383,10,334,16,"res"],[383,13,334,19],[383,16,334,22],[383,22,334,28],[383,26,334,28,"_request"],[383,41,334,36],[383,43,334,37],[383,47,334,41],[383,48,334,42,"fetch"],[383,53,334,47],[383,55,334,49],[383,61,334,55],[383,63,334,57],[383,66,334,60],[383,70,334,64],[383,71,334,65,"url"],[383,74,334,68],[383,83,334,77],[383,85,334,79],[384,12,335,20,"headers"],[384,19,335,27],[384,21,335,29],[384,25,335,33],[384,26,335,34,"headers"],[384,33,335,41],[385,12,336,20,"body"],[385,16,336,24],[385,18,336,26],[386,14,337,24,"phone"],[386,19,337,29],[387,14,338,24,"password"],[387,22,338,32],[388,14,339,24,"data"],[388,18,339,28],[388,20,339,30],[388,21,339,31,"_b"],[388,23,339,33],[388,26,339,36,"options"],[388,33,339,43],[388,38,339,48],[388,42,339,52],[388,46,339,56,"options"],[388,53,339,63],[388,58,339,68],[388,63,339,73],[388,64,339,74],[388,67,339,77],[388,72,339,82],[388,73,339,83],[388,76,339,86,"options"],[388,83,339,93],[388,84,339,94,"data"],[388,88,339,98],[388,94,339,104],[388,98,339,108],[388,102,339,112,"_b"],[388,104,339,114],[388,109,339,119],[388,114,339,124],[388,115,339,125],[388,118,339,128,"_b"],[388,120,339,130],[388,123,339,133],[388,124,339,134],[388,125,339,135],[389,14,340,24,"channel"],[389,21,340,31],[389,23,340,33],[389,24,340,34,"_c"],[389,26,340,36],[389,29,340,39,"options"],[389,36,340,46],[389,41,340,51],[389,45,340,55],[389,49,340,59,"options"],[389,56,340,66],[389,61,340,71],[389,66,340,76],[389,67,340,77],[389,70,340,80],[389,75,340,85],[389,76,340,86],[389,79,340,89,"options"],[389,86,340,96],[389,87,340,97,"channel"],[389,94,340,104],[389,100,340,110],[389,104,340,114],[389,108,340,118,"_c"],[389,110,340,120],[389,115,340,125],[389,120,340,130],[389,121,340,131],[389,124,340,134,"_c"],[389,126,340,136],[389,129,340,139],[389,134,340,144],[390,14,341,24,"gotrue_meta_security"],[390,34,341,44],[390,36,341,46],[391,16,341,48,"captcha_token"],[391,29,341,61],[391,31,341,63,"options"],[391,38,341,70],[391,43,341,75],[391,47,341,79],[391,51,341,83,"options"],[391,58,341,90],[391,63,341,95],[391,68,341,100],[391,69,341,101],[391,72,341,104],[391,77,341,109],[391,78,341,110],[391,81,341,113,"options"],[391,88,341,120],[391,89,341,121,"captchaToken"],[392,14,341,134],[393,12,342,20],[393,13,342,21],[394,12,343,20,"xform"],[394,17,343,25],[394,19,343,27,"_sessionResponse"],[395,10,344,16],[395,11,344,17],[395,12,344,18],[396,8,345,12],[396,9,345,13],[396,15,346,17],[397,10,347,16],[397,16,347,22],[397,20,347,26,"AuthInvalidCredentialsError"],[397,55,347,53],[397,56,347,54],[397,121,347,119],[397,122,347,120],[398,8,348,12],[399,8,349,12],[399,14,349,18],[400,10,349,20,"data"],[400,14,349,24],[401,10,349,26,"error"],[402,8,349,32],[402,9,349,33],[402,12,349,36,"res"],[402,15,349,39],[403,8,350,12],[403,12,350,16,"error"],[403,17,350,21],[403,21,350,25],[403,22,350,26,"data"],[403,26,350,30],[403,28,350,32],[404,10,351,16],[404,17,351,23],[405,12,351,25,"data"],[405,16,351,29],[405,18,351,31],[406,14,351,33,"user"],[406,18,351,37],[406,20,351,39],[406,24,351,43],[407,14,351,45,"session"],[407,21,351,52],[407,23,351,54],[408,12,351,59],[408,13,351,60],[409,12,351,62,"error"],[409,17,351,67],[409,19,351,69,"error"],[410,10,351,75],[410,11,351,76],[411,8,352,12],[412,8,353,12],[412,14,353,18,"session"],[412,21,353,25],[412,24,353,28,"data"],[412,28,353,32],[412,29,353,33,"session"],[412,36,353,40],[413,8,354,12],[413,14,354,18,"user"],[413,18,354,22],[413,21,354,25,"data"],[413,25,354,29],[413,26,354,30,"user"],[413,30,354,34],[414,8,355,12],[414,12,355,16,"data"],[414,16,355,20],[414,17,355,21,"session"],[414,24,355,28],[414,26,355,30],[415,10,356,16],[415,16,356,22],[415,20,356,26],[415,21,356,27,"_saveSession"],[415,33,356,39],[415,34,356,40,"data"],[415,38,356,44],[415,39,356,45,"session"],[415,46,356,52],[415,47,356,53],[416,10,357,16],[416,16,357,22],[416,20,357,26],[416,21,357,27,"_notifyAllSubscribers"],[416,42,357,48],[416,43,357,49],[416,54,357,60],[416,56,357,62,"session"],[416,63,357,69],[416,64,357,70],[417,8,358,12],[418,8,359,12],[418,15,359,19],[419,10,359,21,"data"],[419,14,359,25],[419,16,359,27],[420,12,359,29,"user"],[420,16,359,33],[421,12,359,35,"session"],[422,10,359,43],[422,11,359,44],[423,10,359,46,"error"],[423,15,359,51],[423,17,359,53],[424,8,359,58],[424,9,359,59],[425,6,360,8],[425,7,360,9],[425,8,361,8],[425,15,361,15,"error"],[425,20,361,20],[425,22,361,22],[426,8,362,12],[426,12,362,16],[426,16,362,16,"isAuthError"],[426,35,362,27],[426,37,362,28,"error"],[426,42,362,33],[426,43,362,34],[426,45,362,36],[427,10,363,16],[427,17,363,23],[428,12,363,25,"data"],[428,16,363,29],[428,18,363,31],[429,14,363,33,"user"],[429,18,363,37],[429,20,363,39],[429,24,363,43],[430,14,363,45,"session"],[430,21,363,52],[430,23,363,54],[431,12,363,59],[431,13,363,60],[432,12,363,62,"error"],[433,10,363,68],[433,11,363,69],[434,8,364,12],[435,8,365,12],[435,14,365,18,"error"],[435,19,365,23],[436,6,366,8],[437,4,367,4],[438,4,368,4],[439,0,369,0],[440,0,370,0],[441,0,371,0],[442,0,372,0],[443,0,373,0],[444,0,374,0],[445,0,375,0],[446,4,376,4],[446,10,376,10,"signInWithPassword"],[446,28,376,28,"signInWithPassword"],[446,29,376,29,"credentials"],[446,40,376,40],[446,42,376,42],[447,6,377,8],[447,10,377,12],[448,8,378,12],[448,12,378,16,"res"],[448,15,378,19],[449,8,379,12],[449,12,379,16],[449,19,379,23],[449,23,379,27,"credentials"],[449,34,379,38],[449,36,379,40],[450,10,380,16],[450,16,380,22],[451,12,380,24,"email"],[451,17,380,29],[452,12,380,31,"password"],[452,20,380,39],[453,12,380,41,"options"],[454,10,380,49],[454,11,380,50],[454,14,380,53,"credentials"],[454,25,380,64],[455,10,381,16,"res"],[455,13,381,19],[455,16,381,22],[455,22,381,28],[455,26,381,28,"_request"],[455,41,381,36],[455,43,381,37],[455,47,381,41],[455,48,381,42,"fetch"],[455,53,381,47],[455,55,381,49],[455,61,381,55],[455,63,381,57],[455,66,381,60],[455,70,381,64],[455,71,381,65,"url"],[455,74,381,68],[455,102,381,96],[455,104,381,98],[456,12,382,20,"headers"],[456,19,382,27],[456,21,382,29],[456,25,382,33],[456,26,382,34,"headers"],[456,33,382,41],[457,12,383,20,"body"],[457,16,383,24],[457,18,383,26],[458,14,384,24,"email"],[458,19,384,29],[459,14,385,24,"password"],[459,22,385,32],[460,14,386,24,"gotrue_meta_security"],[460,34,386,44],[460,36,386,46],[461,16,386,48,"captcha_token"],[461,29,386,61],[461,31,386,63,"options"],[461,38,386,70],[461,43,386,75],[461,47,386,79],[461,51,386,83,"options"],[461,58,386,90],[461,63,386,95],[461,68,386,100],[461,69,386,101],[461,72,386,104],[461,77,386,109],[461,78,386,110],[461,81,386,113,"options"],[461,88,386,120],[461,89,386,121,"captchaToken"],[462,14,386,134],[463,12,387,20],[463,13,387,21],[464,12,388,20,"xform"],[464,17,388,25],[464,19,388,27,"_sessionResponsePassword"],[465,10,389,16],[465,11,389,17],[465,12,389,18],[466,8,390,12],[466,9,390,13],[466,15,391,17],[466,19,391,21],[466,26,391,28],[466,30,391,32,"credentials"],[466,41,391,43],[466,43,391,45],[467,10,392,16],[467,16,392,22],[468,12,392,24,"phone"],[468,17,392,29],[469,12,392,31,"password"],[469,20,392,39],[470,12,392,41,"options"],[471,10,392,49],[471,11,392,50],[471,14,392,53,"credentials"],[471,25,392,64],[472,10,393,16,"res"],[472,13,393,19],[472,16,393,22],[472,22,393,28],[472,26,393,28,"_request"],[472,41,393,36],[472,43,393,37],[472,47,393,41],[472,48,393,42,"fetch"],[472,53,393,47],[472,55,393,49],[472,61,393,55],[472,63,393,57],[472,66,393,60],[472,70,393,64],[472,71,393,65,"url"],[472,74,393,68],[472,102,393,96],[472,104,393,98],[473,12,394,20,"headers"],[473,19,394,27],[473,21,394,29],[473,25,394,33],[473,26,394,34,"headers"],[473,33,394,41],[474,12,395,20,"body"],[474,16,395,24],[474,18,395,26],[475,14,396,24,"phone"],[475,19,396,29],[476,14,397,24,"password"],[476,22,397,32],[477,14,398,24,"gotrue_meta_security"],[477,34,398,44],[477,36,398,46],[478,16,398,48,"captcha_token"],[478,29,398,61],[478,31,398,63,"options"],[478,38,398,70],[478,43,398,75],[478,47,398,79],[478,51,398,83,"options"],[478,58,398,90],[478,63,398,95],[478,68,398,100],[478,69,398,101],[478,72,398,104],[478,77,398,109],[478,78,398,110],[478,81,398,113,"options"],[478,88,398,120],[478,89,398,121,"captchaToken"],[479,14,398,134],[480,12,399,20],[480,13,399,21],[481,12,400,20,"xform"],[481,17,400,25],[481,19,400,27,"_sessionResponsePassword"],[482,10,401,16],[482,11,401,17],[482,12,401,18],[483,8,402,12],[483,9,402,13],[483,15,403,17],[484,10,404,16],[484,16,404,22],[484,20,404,26,"AuthInvalidCredentialsError"],[484,55,404,53],[484,56,404,54],[484,121,404,119],[484,122,404,120],[485,8,405,12],[486,8,406,12],[486,14,406,18],[487,10,406,20,"data"],[487,14,406,24],[488,10,406,26,"error"],[489,8,406,32],[489,9,406,33],[489,12,406,36,"res"],[489,15,406,39],[490,8,407,12],[490,12,407,16,"error"],[490,17,407,21],[490,19,407,23],[491,10,408,16],[491,17,408,23],[492,12,408,25,"data"],[492,16,408,29],[492,18,408,31],[493,14,408,33,"user"],[493,18,408,37],[493,20,408,39],[493,24,408,43],[494,14,408,45,"session"],[494,21,408,52],[494,23,408,54],[495,12,408,59],[495,13,408,60],[496,12,408,62,"error"],[497,10,408,68],[497,11,408,69],[498,8,409,12],[498,9,409,13],[498,15,410,17],[498,19,410,21],[498,20,410,22,"data"],[498,24,410,26],[498,28,410,30],[498,29,410,31,"data"],[498,33,410,35],[498,34,410,36,"session"],[498,41,410,43],[498,45,410,47],[498,46,410,48,"data"],[498,50,410,52],[498,51,410,53,"user"],[498,55,410,57],[498,57,410,59],[499,10,411,16],[499,17,411,23],[500,12,411,25,"data"],[500,16,411,29],[500,18,411,31],[501,14,411,33,"user"],[501,18,411,37],[501,20,411,39],[501,24,411,43],[502,14,411,45,"session"],[502,21,411,52],[502,23,411,54],[503,12,411,59],[503,13,411,60],[504,12,411,62,"error"],[504,17,411,67],[504,19,411,69],[504,23,411,73,"AuthInvalidTokenResponseError"],[504,60,411,102],[504,61,411,103],[505,10,411,105],[505,11,411,106],[506,8,412,12],[507,8,413,12],[507,12,413,16,"data"],[507,16,413,20],[507,17,413,21,"session"],[507,24,413,28],[507,26,413,30],[508,10,414,16],[508,16,414,22],[508,20,414,26],[508,21,414,27,"_saveSession"],[508,33,414,39],[508,34,414,40,"data"],[508,38,414,44],[508,39,414,45,"session"],[508,46,414,52],[508,47,414,53],[509,10,415,16],[509,16,415,22],[509,20,415,26],[509,21,415,27,"_notifyAllSubscribers"],[509,42,415,48],[509,43,415,49],[509,54,415,60],[509,56,415,62,"data"],[509,60,415,66],[509,61,415,67,"session"],[509,68,415,74],[509,69,415,75],[510,8,416,12],[511,8,417,12],[511,15,417,19],[512,10,418,16,"data"],[512,14,418,20],[512,16,418,22,"Object"],[512,22,418,28],[512,23,418,29,"assign"],[512,29,418,35],[512,30,418,36],[513,12,418,38,"user"],[513,16,418,42],[513,18,418,44,"data"],[513,22,418,48],[513,23,418,49,"user"],[513,27,418,53],[514,12,418,55,"session"],[514,19,418,62],[514,21,418,64,"data"],[514,25,418,68],[514,26,418,69,"session"],[515,10,418,77],[515,11,418,78],[515,13,418,81,"data"],[515,17,418,85],[515,18,418,86,"weak_password"],[515,31,418,99],[515,34,418,102],[516,12,418,104,"weakPassword"],[516,24,418,116],[516,26,418,118,"data"],[516,30,418,122],[516,31,418,123,"weak_password"],[517,10,418,137],[517,11,418,138],[517,14,418,141],[517,18,418,146],[517,19,418,147],[518,10,419,16,"error"],[519,8,420,12],[519,9,420,13],[520,6,421,8],[520,7,421,9],[520,8,422,8],[520,15,422,15,"error"],[520,20,422,20],[520,22,422,22],[521,8,423,12],[521,12,423,16],[521,16,423,16,"isAuthError"],[521,35,423,27],[521,37,423,28,"error"],[521,42,423,33],[521,43,423,34],[521,45,423,36],[522,10,424,16],[522,17,424,23],[523,12,424,25,"data"],[523,16,424,29],[523,18,424,31],[524,14,424,33,"user"],[524,18,424,37],[524,20,424,39],[524,24,424,43],[525,14,424,45,"session"],[525,21,424,52],[525,23,424,54],[526,12,424,59],[526,13,424,60],[527,12,424,62,"error"],[528,10,424,68],[528,11,424,69],[529,8,425,12],[530,8,426,12],[530,14,426,18,"error"],[530,19,426,23],[531,6,427,8],[532,4,428,4],[533,4,429,4],[534,0,430,0],[535,0,431,0],[536,0,432,0],[537,4,433,4],[537,10,433,10,"signInWithOAuth"],[537,25,433,25,"signInWithOAuth"],[537,26,433,26,"credentials"],[537,37,433,37],[537,39,433,39],[538,6,434,8],[538,10,434,12,"_a"],[538,12,434,14],[538,14,434,16,"_b"],[538,16,434,18],[538,18,434,20,"_c"],[538,20,434,22],[538,22,434,24,"_d"],[538,24,434,26],[539,6,435,8],[539,13,435,15],[539,19,435,21],[539,23,435,25],[539,24,435,26,"_handleProviderSignIn"],[539,45,435,47],[539,46,435,48,"credentials"],[539,57,435,59],[539,58,435,60,"provider"],[539,66,435,68],[539,68,435,70],[540,8,436,12,"redirectTo"],[540,18,436,22],[540,20,436,24],[540,21,436,25,"_a"],[540,23,436,27],[540,26,436,30,"credentials"],[540,37,436,41],[540,38,436,42,"options"],[540,45,436,49],[540,51,436,55],[540,55,436,59],[540,59,436,63,"_a"],[540,61,436,65],[540,66,436,70],[540,71,436,75],[540,72,436,76],[540,75,436,79],[540,80,436,84],[540,81,436,85],[540,84,436,88,"_a"],[540,86,436,90],[540,87,436,91,"redirectTo"],[540,97,436,101],[541,8,437,12,"scopes"],[541,14,437,18],[541,16,437,20],[541,17,437,21,"_b"],[541,19,437,23],[541,22,437,26,"credentials"],[541,33,437,37],[541,34,437,38,"options"],[541,41,437,45],[541,47,437,51],[541,51,437,55],[541,55,437,59,"_b"],[541,57,437,61],[541,62,437,66],[541,67,437,71],[541,68,437,72],[541,71,437,75],[541,76,437,80],[541,77,437,81],[541,80,437,84,"_b"],[541,82,437,86],[541,83,437,87,"scopes"],[541,89,437,93],[542,8,438,12,"queryParams"],[542,19,438,23],[542,21,438,25],[542,22,438,26,"_c"],[542,24,438,28],[542,27,438,31,"credentials"],[542,38,438,42],[542,39,438,43,"options"],[542,46,438,50],[542,52,438,56],[542,56,438,60],[542,60,438,64,"_c"],[542,62,438,66],[542,67,438,71],[542,72,438,76],[542,73,438,77],[542,76,438,80],[542,81,438,85],[542,82,438,86],[542,85,438,89,"_c"],[542,87,438,91],[542,88,438,92,"queryParams"],[542,99,438,103],[543,8,439,12,"skipBrowserRedirect"],[543,27,439,31],[543,29,439,33],[543,30,439,34,"_d"],[543,32,439,36],[543,35,439,39,"credentials"],[543,46,439,50],[543,47,439,51,"options"],[543,54,439,58],[543,60,439,64],[543,64,439,68],[543,68,439,72,"_d"],[543,70,439,74],[543,75,439,79],[543,80,439,84],[543,81,439,85],[543,84,439,88],[543,89,439,93],[543,90,439,94],[543,93,439,97,"_d"],[543,95,439,99],[543,96,439,100,"skipBrowserRedirect"],[544,6,440,8],[544,7,440,9],[544,8,440,10],[545,4,441,4],[546,4,442,4],[547,0,443,0],[548,0,444,0],[549,4,445,4],[549,10,445,10,"exchangeCodeForSession"],[549,32,445,32,"exchangeCodeForSession"],[549,33,445,33,"authCode"],[549,41,445,41],[549,43,445,43],[550,6,446,8],[550,12,446,14],[550,16,446,18],[550,17,446,19,"initializePromise"],[550,34,446,36],[551,6,447,8],[551,13,447,15],[551,17,447,19],[551,18,447,20,"_acquireLock"],[551,30,447,32],[551,31,447,33],[551,32,447,34],[551,33,447,35],[551,35,447,37],[551,47,447,49],[552,8,448,12],[552,15,448,19],[552,19,448,23],[552,20,448,24,"_exchangeCodeForSession"],[552,43,448,47],[552,44,448,48,"authCode"],[552,52,448,56],[552,53,448,57],[553,6,449,8],[553,7,449,9],[553,8,449,10],[554,4,450,4],[555,4,451,4],[556,0,452,0],[557,0,453,0],[558,0,454,0],[559,0,455,0],[560,0,456,0],[561,0,457,0],[562,4,458,4],[562,10,458,10,"signInWithWeb3"],[562,24,458,24,"signInWithWeb3"],[562,25,458,25,"credentials"],[562,36,458,36],[562,38,458,38],[563,6,459,8],[563,12,459,14],[564,8,459,16,"chain"],[565,6,459,22],[565,7,459,23],[565,10,459,26,"credentials"],[565,21,459,37],[566,6,460,8],[566,14,460,16,"chain"],[566,19,460,21],[567,8,461,12],[567,13,461,17],[567,23,461,27],[568,10,462,16],[568,17,462,23],[568,23,462,29],[568,27,462,33],[568,28,462,34,"signInWithEthereum"],[568,46,462,52],[568,47,462,53,"credentials"],[568,58,462,64],[568,59,462,65],[569,8,463,12],[569,13,463,17],[569,21,463,25],[570,10,464,16],[570,17,464,23],[570,23,464,29],[570,27,464,33],[570,28,464,34,"signInWithSolana"],[570,44,464,50],[570,45,464,51,"credentials"],[570,56,464,62],[570,57,464,63],[571,8,465,12],[572,10,466,16],[572,16,466,22],[572,20,466,26,"Error"],[572,25,466,31],[572,26,466,32],[572,67,466,73,"chain"],[572,72,466,78],[572,75,466,81],[572,76,466,82],[573,6,467,8],[574,4,468,4],[575,4,469,4],[575,10,469,10,"signInWithEthereum"],[575,28,469,28,"signInWithEthereum"],[575,29,469,29,"credentials"],[575,40,469,40],[575,42,469,42],[576,6,470,8],[576,10,470,12,"_a"],[576,12,470,14],[576,14,470,16,"_b"],[576,16,470,18],[576,18,470,20,"_c"],[576,20,470,22],[576,22,470,24,"_d"],[576,24,470,26],[576,26,470,28,"_e"],[576,28,470,30],[576,30,470,32,"_f"],[576,32,470,34],[576,34,470,36,"_g"],[576,36,470,38],[576,38,470,40,"_h"],[576,40,470,42],[576,42,470,44,"_j"],[576,44,470,46],[576,46,470,48,"_k"],[576,48,470,50],[576,50,470,52,"_l"],[576,52,470,54],[577,6,471,8],[578,6,472,8],[578,10,472,12,"message"],[578,17,472,19],[579,6,473,8],[579,10,473,12,"signature"],[579,19,473,21],[580,6,474,8],[580,10,474,12],[580,19,474,21],[580,23,474,25,"credentials"],[580,34,474,36],[580,36,474,38],[581,8,475,12,"message"],[581,15,475,19],[581,18,475,22,"credentials"],[581,29,475,33],[581,30,475,34,"message"],[581,37,475,41],[582,8,476,12,"signature"],[582,17,476,21],[582,20,476,24,"credentials"],[582,31,476,35],[582,32,476,36,"signature"],[582,41,476,45],[583,6,477,8],[583,7,477,9],[583,13,478,13],[584,8,479,12],[584,14,479,18],[585,10,479,20,"chain"],[585,15,479,25],[586,10,479,27,"wallet"],[586,16,479,33],[587,10,479,35,"statement"],[587,19,479,44],[588,10,479,46,"options"],[589,8,479,54],[589,9,479,55],[589,12,479,58,"credentials"],[589,23,479,69],[590,8,480,12],[590,12,480,16,"resolvedWallet"],[590,26,480,30],[591,8,481,12],[591,12,481,16],[591,13,481,17],[591,17,481,17,"isBrowser"],[591,35,481,26],[591,37,481,27],[591,38,481,28],[591,40,481,30],[592,10,482,16],[592,14,482,20],[592,21,482,27,"wallet"],[592,27,482,33],[592,32,482,38],[592,40,482,46],[592,44,482,50],[592,46,482,52,"options"],[592,53,482,59],[592,58,482,64],[592,62,482,68],[592,66,482,72,"options"],[592,73,482,79],[592,78,482,84],[592,83,482,89],[592,84,482,90],[592,87,482,93],[592,92,482,98],[592,93,482,99],[592,96,482,102,"options"],[592,103,482,109],[592,104,482,110,"url"],[592,107,482,113],[592,108,482,114],[592,110,482,116],[593,12,483,20],[593,18,483,26],[593,22,483,30,"Error"],[593,27,483,35],[593,28,483,36],[593,115,483,123],[593,116,483,124],[594,10,484,16],[595,10,485,16,"resolvedWallet"],[595,24,485,30],[595,27,485,33,"wallet"],[595,33,485,39],[596,8,486,12],[596,9,486,13],[596,15,487,17],[596,19,487,21],[596,26,487,28,"wallet"],[596,32,487,34],[596,37,487,39],[596,45,487,47],[596,47,487,49],[597,10,488,16,"resolvedWallet"],[597,24,488,30],[597,27,488,33,"wallet"],[597,33,488,39],[598,8,489,12],[598,9,489,13],[598,15,490,17],[599,10,491,16],[599,16,491,22,"windowAny"],[599,25,491,31],[599,28,491,34,"window"],[599,34,491,40],[600,10,492,16],[600,14,492,20],[600,24,492,30],[600,28,492,34,"windowAny"],[600,37,492,43],[600,41,493,20],[600,48,493,27,"windowAny"],[600,57,493,36],[600,58,493,37,"ethereum"],[600,66,493,45],[600,71,493,50],[600,79,493,58],[600,83,494,20],[600,92,494,29],[600,96,494,33,"windowAny"],[600,105,494,42],[600,106,494,43,"ethereum"],[600,114,494,51],[600,118,495,20],[600,125,495,27,"windowAny"],[600,134,495,36],[600,135,495,37,"ethereum"],[600,143,495,45],[600,144,495,46,"request"],[600,151,495,53],[600,156,495,58],[600,166,495,68],[600,168,495,70],[601,12,496,20,"resolvedWallet"],[601,26,496,34],[601,29,496,37,"windowAny"],[601,38,496,46],[601,39,496,47,"ethereum"],[601,47,496,55],[602,10,497,16],[602,11,497,17],[602,17,498,21],[603,12,499,20],[603,18,499,26],[603,22,499,30,"Error"],[603,27,499,35],[603,28,499,36],[603,345,499,353],[603,346,499,354],[604,10,500,16],[605,8,501,12],[606,8,502,12],[606,14,502,18,"url"],[606,17,502,21],[606,20,502,24],[606,24,502,28,"URL"],[606,27,502,31],[606,28,502,32],[606,29,502,33,"_a"],[606,31,502,35],[606,34,502,38,"options"],[606,41,502,45],[606,46,502,50],[606,50,502,54],[606,54,502,58,"options"],[606,61,502,65],[606,66,502,70],[606,71,502,75],[606,72,502,76],[606,75,502,79],[606,80,502,84],[606,81,502,85],[606,84,502,88,"options"],[606,91,502,95],[606,92,502,96,"url"],[606,95,502,99],[606,101,502,105],[606,105,502,109],[606,109,502,113,"_a"],[606,111,502,115],[606,116,502,120],[606,121,502,125],[606,122,502,126],[606,125,502,129,"_a"],[606,127,502,131],[606,130,502,134,"window"],[606,136,502,140],[606,137,502,141,"location"],[606,145,502,149],[606,146,502,150,"href"],[606,150,502,154],[606,151,502,155],[607,8,503,12],[607,14,503,18,"accounts"],[607,22,503,26],[607,25,503,29],[607,31,503,35,"resolvedWallet"],[607,45,503,49],[607,46,504,17,"request"],[607,53,504,24],[607,54,504,25],[608,10,505,16,"method"],[608,16,505,22],[608,18,505,24],[609,8,506,12],[609,9,506,13],[609,10,506,14],[609,11,507,17,"then"],[609,15,507,21],[609,16,507,23,"accs"],[609,20,507,27],[609,24,507,32,"accs"],[609,28,507,36],[609,29,507,37],[609,30,508,17,"catch"],[609,35,508,22],[609,36,508,23],[609,42,508,29],[610,10,509,16],[610,16,509,22],[610,20,509,26,"Error"],[610,25,509,31],[610,26,509,32],[610,102,509,108],[610,103,509,109],[611,8,510,12],[611,9,510,13],[611,10,510,14],[612,8,511,12],[612,12,511,16],[612,13,511,17,"accounts"],[612,21,511,25],[612,25,511,29,"accounts"],[612,33,511,37],[612,34,511,38,"length"],[612,40,511,44],[612,45,511,49],[612,46,511,50],[612,48,511,52],[613,10,512,16],[613,16,512,22],[613,20,512,26,"Error"],[613,25,512,31],[613,26,512,32],[613,108,512,114],[613,109,512,115],[614,8,513,12],[615,8,514,12],[615,14,514,18,"address"],[615,21,514,25],[615,24,514,28],[615,28,514,28,"getAddress"],[615,48,514,38],[615,50,514,39,"accounts"],[615,58,514,47],[615,59,514,48],[615,60,514,49],[615,61,514,50],[615,62,514,51],[616,8,515,12],[616,12,515,16,"chainId"],[616,19,515,23],[616,22,515,26],[616,23,515,27,"_b"],[616,25,515,29],[616,28,515,32,"options"],[616,35,515,39],[616,40,515,44],[616,44,515,48],[616,48,515,52,"options"],[616,55,515,59],[616,60,515,64],[616,65,515,69],[616,66,515,70],[616,69,515,73],[616,74,515,78],[616,75,515,79],[616,78,515,82,"options"],[616,85,515,89],[616,86,515,90,"signInWithEthereum"],[616,104,515,108],[616,110,515,114],[616,114,515,118],[616,118,515,122,"_b"],[616,120,515,124],[616,125,515,129],[616,130,515,134],[616,131,515,135],[616,134,515,138],[616,139,515,143],[616,140,515,144],[616,143,515,147,"_b"],[616,145,515,149],[616,146,515,150,"chainId"],[616,153,515,157],[617,8,516,12],[617,12,516,16],[617,13,516,17,"chainId"],[617,20,516,24],[617,22,516,26],[618,10,517,16],[618,16,517,22,"chainIdHex"],[618,26,517,32],[618,29,517,35],[618,35,517,41,"resolvedWallet"],[618,49,517,55],[618,50,517,56,"request"],[618,57,517,63],[618,58,517,64],[619,12,518,20,"method"],[619,18,518,26],[619,20,518,28],[620,10,519,16],[620,11,519,17],[620,12,519,18],[621,10,520,16,"chainId"],[621,17,520,23],[621,20,520,26],[621,24,520,26,"fromHex"],[621,41,520,33],[621,43,520,34,"chainIdHex"],[621,53,520,44],[621,54,520,45],[622,8,521,12],[623,8,522,12],[623,14,522,18,"siweMessage"],[623,25,522,29],[623,28,522,32],[624,10,523,16,"domain"],[624,16,523,22],[624,18,523,24,"url"],[624,21,523,27],[624,22,523,28,"host"],[624,26,523,32],[625,10,524,16,"address"],[625,17,524,23],[625,19,524,25,"address"],[625,26,524,32],[626,10,525,16,"statement"],[626,19,525,25],[626,21,525,27,"statement"],[626,30,525,36],[627,10,526,16,"uri"],[627,13,526,19],[627,15,526,21,"url"],[627,18,526,24],[627,19,526,25,"href"],[627,23,526,29],[628,10,527,16,"version"],[628,17,527,23],[628,19,527,25],[628,22,527,28],[629,10,528,16,"chainId"],[629,17,528,23],[629,19,528,25,"chainId"],[629,26,528,32],[630,10,529,16,"nonce"],[630,15,529,21],[630,17,529,23],[630,18,529,24,"_c"],[630,20,529,26],[630,23,529,29,"options"],[630,30,529,36],[630,35,529,41],[630,39,529,45],[630,43,529,49,"options"],[630,50,529,56],[630,55,529,61],[630,60,529,66],[630,61,529,67],[630,64,529,70],[630,69,529,75],[630,70,529,76],[630,73,529,79,"options"],[630,80,529,86],[630,81,529,87,"signInWithEthereum"],[630,99,529,105],[630,105,529,111],[630,109,529,115],[630,113,529,119,"_c"],[630,115,529,121],[630,120,529,126],[630,125,529,131],[630,126,529,132],[630,129,529,135],[630,134,529,140],[630,135,529,141],[630,138,529,144,"_c"],[630,140,529,146],[630,141,529,147,"nonce"],[630,146,529,152],[631,10,530,16,"issuedAt"],[631,18,530,24],[631,20,530,26],[631,21,530,27,"_e"],[631,23,530,29],[631,26,530,32],[631,27,530,33,"_d"],[631,29,530,35],[631,32,530,38,"options"],[631,39,530,45],[631,44,530,50],[631,48,530,54],[631,52,530,58,"options"],[631,59,530,65],[631,64,530,70],[631,69,530,75],[631,70,530,76],[631,73,530,79],[631,78,530,84],[631,79,530,85],[631,82,530,88,"options"],[631,89,530,95],[631,90,530,96,"signInWithEthereum"],[631,108,530,114],[631,114,530,120],[631,118,530,124],[631,122,530,128,"_d"],[631,124,530,130],[631,129,530,135],[631,134,530,140],[631,135,530,141],[631,138,530,144],[631,143,530,149],[631,144,530,150],[631,147,530,153,"_d"],[631,149,530,155],[631,150,530,156,"issuedAt"],[631,158,530,164],[631,164,530,170],[631,168,530,174],[631,172,530,178,"_e"],[631,174,530,180],[631,179,530,185],[631,184,530,190],[631,185,530,191],[631,188,530,194,"_e"],[631,190,530,196],[631,193,530,199],[631,197,530,203,"Date"],[631,201,530,207],[631,202,530,208],[631,203,530,209],[632,10,531,16,"expirationTime"],[632,24,531,30],[632,26,531,32],[632,27,531,33,"_f"],[632,29,531,35],[632,32,531,38,"options"],[632,39,531,45],[632,44,531,50],[632,48,531,54],[632,52,531,58,"options"],[632,59,531,65],[632,64,531,70],[632,69,531,75],[632,70,531,76],[632,73,531,79],[632,78,531,84],[632,79,531,85],[632,82,531,88,"options"],[632,89,531,95],[632,90,531,96,"signInWithEthereum"],[632,108,531,114],[632,114,531,120],[632,118,531,124],[632,122,531,128,"_f"],[632,124,531,130],[632,129,531,135],[632,134,531,140],[632,135,531,141],[632,138,531,144],[632,143,531,149],[632,144,531,150],[632,147,531,153,"_f"],[632,149,531,155],[632,150,531,156,"expirationTime"],[632,164,531,170],[633,10,532,16,"notBefore"],[633,19,532,25],[633,21,532,27],[633,22,532,28,"_g"],[633,24,532,30],[633,27,532,33,"options"],[633,34,532,40],[633,39,532,45],[633,43,532,49],[633,47,532,53,"options"],[633,54,532,60],[633,59,532,65],[633,64,532,70],[633,65,532,71],[633,68,532,74],[633,73,532,79],[633,74,532,80],[633,77,532,83,"options"],[633,84,532,90],[633,85,532,91,"signInWithEthereum"],[633,103,532,109],[633,109,532,115],[633,113,532,119],[633,117,532,123,"_g"],[633,119,532,125],[633,124,532,130],[633,129,532,135],[633,130,532,136],[633,133,532,139],[633,138,532,144],[633,139,532,145],[633,142,532,148,"_g"],[633,144,532,150],[633,145,532,151,"notBefore"],[633,154,532,160],[634,10,533,16,"requestId"],[634,19,533,25],[634,21,533,27],[634,22,533,28,"_h"],[634,24,533,30],[634,27,533,33,"options"],[634,34,533,40],[634,39,533,45],[634,43,533,49],[634,47,533,53,"options"],[634,54,533,60],[634,59,533,65],[634,64,533,70],[634,65,533,71],[634,68,533,74],[634,73,533,79],[634,74,533,80],[634,77,533,83,"options"],[634,84,533,90],[634,85,533,91,"signInWithEthereum"],[634,103,533,109],[634,109,533,115],[634,113,533,119],[634,117,533,123,"_h"],[634,119,533,125],[634,124,533,130],[634,129,533,135],[634,130,533,136],[634,133,533,139],[634,138,533,144],[634,139,533,145],[634,142,533,148,"_h"],[634,144,533,150],[634,145,533,151,"requestId"],[634,154,533,160],[635,10,534,16,"resources"],[635,19,534,25],[635,21,534,27],[635,22,534,28,"_j"],[635,24,534,30],[635,27,534,33,"options"],[635,34,534,40],[635,39,534,45],[635,43,534,49],[635,47,534,53,"options"],[635,54,534,60],[635,59,534,65],[635,64,534,70],[635,65,534,71],[635,68,534,74],[635,73,534,79],[635,74,534,80],[635,77,534,83,"options"],[635,84,534,90],[635,85,534,91,"signInWithEthereum"],[635,103,534,109],[635,109,534,115],[635,113,534,119],[635,117,534,123,"_j"],[635,119,534,125],[635,124,534,130],[635,129,534,135],[635,130,534,136],[635,133,534,139],[635,138,534,144],[635,139,534,145],[635,142,534,148,"_j"],[635,144,534,150],[635,145,534,151,"resources"],[636,8,535,12],[636,9,535,13],[637,8,536,12,"message"],[637,15,536,19],[637,18,536,22],[637,22,536,22,"createSiweMessage"],[637,49,536,39],[637,51,536,40,"siweMessage"],[637,62,536,51],[637,63,536,52],[638,8,537,12],[639,8,538,12,"signature"],[639,17,538,21],[639,20,538,25],[639,26,538,31,"resolvedWallet"],[639,40,538,45],[639,41,538,46,"request"],[639,48,538,53],[639,49,538,54],[640,10,539,16,"method"],[640,16,539,22],[640,18,539,24],[640,33,539,39],[641,10,540,16,"params"],[641,16,540,22],[641,18,540,24],[641,19,540,25],[641,23,540,25,"toHex"],[641,38,540,30],[641,40,540,31,"message"],[641,47,540,38],[641,48,540,39],[641,50,540,41,"address"],[641,57,540,48],[642,8,541,12],[642,9,541,13],[642,10,541,15],[643,6,542,8],[644,6,543,8],[644,10,543,12],[645,8,544,12],[645,14,544,18],[646,10,544,20,"data"],[646,14,544,24],[647,10,544,26,"error"],[648,8,544,32],[648,9,544,33],[648,12,544,36],[648,18,544,42],[648,22,544,42,"_request"],[648,37,544,50],[648,39,544,51],[648,43,544,55],[648,44,544,56,"fetch"],[648,49,544,61],[648,51,544,63],[648,57,544,69],[648,59,544,71],[648,62,544,74],[648,66,544,78],[648,67,544,79,"url"],[648,70,544,82],[648,94,544,106],[648,96,544,108],[649,10,545,16,"headers"],[649,17,545,23],[649,19,545,25],[649,23,545,29],[649,24,545,30,"headers"],[649,31,545,37],[650,10,546,16,"body"],[650,14,546,20],[650,16,546,22,"Object"],[650,22,546,28],[650,23,546,29,"assign"],[650,29,546,35],[650,30,546,36],[651,12,546,38,"chain"],[651,17,546,43],[651,19,546,45],[651,29,546,55],[652,12,546,57,"message"],[652,19,546,64],[653,12,547,20,"signature"],[654,10,547,30],[654,11,547,31],[654,13,547,34],[654,14,547,35],[654,15,547,36,"_k"],[654,17,547,38],[654,20,547,41,"credentials"],[654,31,547,52],[654,32,547,53,"options"],[654,39,547,60],[654,45,547,66],[654,49,547,70],[654,53,547,74,"_k"],[654,55,547,76],[654,60,547,81],[654,65,547,86],[654,66,547,87],[654,69,547,90],[654,74,547,95],[654,75,547,96],[654,78,547,99,"_k"],[654,80,547,101],[654,81,547,102,"captchaToken"],[654,93,547,114],[654,97,548,22],[655,12,548,24,"gotrue_meta_security"],[655,32,548,44],[655,34,548,46],[656,14,548,48,"captcha_token"],[656,27,548,61],[656,29,548,63],[656,30,548,64,"_l"],[656,32,548,66],[656,35,548,69,"credentials"],[656,46,548,80],[656,47,548,81,"options"],[656,54,548,88],[656,60,548,94],[656,64,548,98],[656,68,548,102,"_l"],[656,70,548,104],[656,75,548,109],[656,80,548,114],[656,81,548,115],[656,84,548,118],[656,89,548,123],[656,90,548,124],[656,93,548,127,"_l"],[656,95,548,129],[656,96,548,130,"captchaToken"],[657,12,548,143],[658,10,548,145],[658,11,548,146],[658,14,549,22],[658,18,549,27],[658,19,549,28],[659,10,550,16,"xform"],[659,15,550,21],[659,17,550,23,"_sessionResponse"],[660,8,551,12],[660,9,551,13],[660,10,551,14],[661,8,552,12],[661,12,552,16,"error"],[661,17,552,21],[661,19,552,23],[662,10,553,16],[662,16,553,22,"error"],[662,21,553,27],[663,8,554,12],[664,8,555,12],[664,12,555,16],[664,13,555,17,"data"],[664,17,555,21],[664,21,555,25],[664,22,555,26,"data"],[664,26,555,30],[664,27,555,31,"session"],[664,34,555,38],[664,38,555,42],[664,39,555,43,"data"],[664,43,555,47],[664,44,555,48,"user"],[664,48,555,52],[664,50,555,54],[665,10,556,16],[665,17,556,23],[666,12,557,20,"data"],[666,16,557,24],[666,18,557,26],[667,14,557,28,"user"],[667,18,557,32],[667,20,557,34],[667,24,557,38],[668,14,557,40,"session"],[668,21,557,47],[668,23,557,49],[669,12,557,54],[669,13,557,55],[670,12,558,20,"error"],[670,17,558,25],[670,19,558,27],[670,23,558,31,"AuthInvalidTokenResponseError"],[670,60,558,60],[670,61,558,61],[671,10,559,16],[671,11,559,17],[672,8,560,12],[673,8,561,12],[673,12,561,16,"data"],[673,16,561,20],[673,17,561,21,"session"],[673,24,561,28],[673,26,561,30],[674,10,562,16],[674,16,562,22],[674,20,562,26],[674,21,562,27,"_saveSession"],[674,33,562,39],[674,34,562,40,"data"],[674,38,562,44],[674,39,562,45,"session"],[674,46,562,52],[674,47,562,53],[675,10,563,16],[675,16,563,22],[675,20,563,26],[675,21,563,27,"_notifyAllSubscribers"],[675,42,563,48],[675,43,563,49],[675,54,563,60],[675,56,563,62,"data"],[675,60,563,66],[675,61,563,67,"session"],[675,68,563,74],[675,69,563,75],[676,8,564,12],[677,8,565,12],[677,15,565,19],[678,10,565,21,"data"],[678,14,565,25],[678,16,565,27,"Object"],[678,22,565,33],[678,23,565,34,"assign"],[678,29,565,40],[678,30,565,41],[678,31,565,42],[678,32,565,43],[678,34,565,45,"data"],[678,38,565,49],[678,39,565,50],[679,10,565,52,"error"],[680,8,565,58],[680,9,565,59],[681,6,566,8],[681,7,566,9],[681,8,567,8],[681,15,567,15,"error"],[681,20,567,20],[681,22,567,22],[682,8,568,12],[682,12,568,16],[682,16,568,16,"isAuthError"],[682,35,568,27],[682,37,568,28,"error"],[682,42,568,33],[682,43,568,34],[682,45,568,36],[683,10,569,16],[683,17,569,23],[684,12,569,25,"data"],[684,16,569,29],[684,18,569,31],[685,14,569,33,"user"],[685,18,569,37],[685,20,569,39],[685,24,569,43],[686,14,569,45,"session"],[686,21,569,52],[686,23,569,54],[687,12,569,59],[687,13,569,60],[688,12,569,62,"error"],[689,10,569,68],[689,11,569,69],[690,8,570,12],[691,8,571,12],[691,14,571,18,"error"],[691,19,571,23],[692,6,572,8],[693,4,573,4],[694,4,574,4],[694,10,574,10,"signInWithSolana"],[694,26,574,26,"signInWithSolana"],[694,27,574,27,"credentials"],[694,38,574,38],[694,40,574,40],[695,6,575,8],[695,10,575,12,"_a"],[695,12,575,14],[695,14,575,16,"_b"],[695,16,575,18],[695,18,575,20,"_c"],[695,20,575,22],[695,22,575,24,"_d"],[695,24,575,26],[695,26,575,28,"_e"],[695,28,575,30],[695,30,575,32,"_f"],[695,32,575,34],[695,34,575,36,"_g"],[695,36,575,38],[695,38,575,40,"_h"],[695,40,575,42],[695,42,575,44,"_j"],[695,44,575,46],[695,46,575,48,"_k"],[695,48,575,50],[695,50,575,52,"_l"],[695,52,575,54],[695,54,575,56,"_m"],[695,56,575,58],[696,6,576,8],[696,10,576,12,"message"],[696,17,576,19],[697,6,577,8],[697,10,577,12,"signature"],[697,19,577,21],[698,6,578,8],[698,10,578,12],[698,19,578,21],[698,23,578,25,"credentials"],[698,34,578,36],[698,36,578,38],[699,8,579,12,"message"],[699,15,579,19],[699,18,579,22,"credentials"],[699,29,579,33],[699,30,579,34,"message"],[699,37,579,41],[700,8,580,12,"signature"],[700,17,580,21],[700,20,580,24,"credentials"],[700,31,580,35],[700,32,580,36,"signature"],[700,41,580,45],[701,6,581,8],[701,7,581,9],[701,13,582,13],[702,8,583,12],[702,14,583,18],[703,10,583,20,"chain"],[703,15,583,25],[704,10,583,27,"wallet"],[704,16,583,33],[705,10,583,35,"statement"],[705,19,583,44],[706,10,583,46,"options"],[707,8,583,54],[707,9,583,55],[707,12,583,58,"credentials"],[707,23,583,69],[708,8,584,12],[708,12,584,16,"resolvedWallet"],[708,26,584,30],[709,8,585,12],[709,12,585,16],[709,13,585,17],[709,17,585,17,"isBrowser"],[709,35,585,26],[709,37,585,27],[709,38,585,28],[709,40,585,30],[710,10,586,16],[710,14,586,20],[710,21,586,27,"wallet"],[710,27,586,33],[710,32,586,38],[710,40,586,46],[710,44,586,50],[710,46,586,52,"options"],[710,53,586,59],[710,58,586,64],[710,62,586,68],[710,66,586,72,"options"],[710,73,586,79],[710,78,586,84],[710,83,586,89],[710,84,586,90],[710,87,586,93],[710,92,586,98],[710,93,586,99],[710,96,586,102,"options"],[710,103,586,109],[710,104,586,110,"url"],[710,107,586,113],[710,108,586,114],[710,110,586,116],[711,12,587,20],[711,18,587,26],[711,22,587,30,"Error"],[711,27,587,35],[711,28,587,36],[711,115,587,123],[711,116,587,124],[712,10,588,16],[713,10,589,16,"resolvedWallet"],[713,24,589,30],[713,27,589,33,"wallet"],[713,33,589,39],[714,8,590,12],[714,9,590,13],[714,15,591,17],[714,19,591,21],[714,26,591,28,"wallet"],[714,32,591,34],[714,37,591,39],[714,45,591,47],[714,47,591,49],[715,10,592,16,"resolvedWallet"],[715,24,592,30],[715,27,592,33,"wallet"],[715,33,592,39],[716,8,593,12],[716,9,593,13],[716,15,594,17],[717,10,595,16],[717,16,595,22,"windowAny"],[717,25,595,31],[717,28,595,34,"window"],[717,34,595,40],[718,10,596,16],[718,14,596,20],[718,22,596,28],[718,26,596,32,"windowAny"],[718,35,596,41],[718,39,597,20],[718,46,597,27,"windowAny"],[718,55,597,36],[718,56,597,37,"solana"],[718,62,597,43],[718,67,597,48],[718,75,597,56],[718,80,598,22],[718,88,598,30],[718,92,598,34,"windowAny"],[718,101,598,43],[718,102,598,44,"solana"],[718,108,598,50],[718,112,598,54],[718,119,598,61,"windowAny"],[718,128,598,70],[718,129,598,71,"solana"],[718,135,598,77],[718,136,598,78,"signIn"],[718,142,598,84],[718,147,598,89],[718,157,598,99],[718,161,599,25],[718,174,599,38],[718,178,599,42,"windowAny"],[718,187,599,51],[718,188,599,52,"solana"],[718,194,599,58],[718,198,600,28],[718,205,600,35,"windowAny"],[718,214,600,44],[718,215,600,45,"solana"],[718,221,600,51],[718,222,600,52,"signMessage"],[718,233,600,63],[718,238,600,68],[718,248,600,79],[718,249,600,80],[718,251,600,82],[719,12,601,20,"resolvedWallet"],[719,26,601,34],[719,29,601,37,"windowAny"],[719,38,601,46],[719,39,601,47,"solana"],[719,45,601,53],[720,10,602,16],[720,11,602,17],[720,17,603,21],[721,12,604,20],[721,18,604,26],[721,22,604,30,"Error"],[721,27,604,35],[721,28,604,36],[721,339,604,347],[721,340,604,348],[722,10,605,16],[723,8,606,12],[724,8,607,12],[724,14,607,18,"url"],[724,17,607,21],[724,20,607,24],[724,24,607,28,"URL"],[724,27,607,31],[724,28,607,32],[724,29,607,33,"_a"],[724,31,607,35],[724,34,607,38,"options"],[724,41,607,45],[724,46,607,50],[724,50,607,54],[724,54,607,58,"options"],[724,61,607,65],[724,66,607,70],[724,71,607,75],[724,72,607,76],[724,75,607,79],[724,80,607,84],[724,81,607,85],[724,84,607,88,"options"],[724,91,607,95],[724,92,607,96,"url"],[724,95,607,99],[724,101,607,105],[724,105,607,109],[724,109,607,113,"_a"],[724,111,607,115],[724,116,607,120],[724,121,607,125],[724,122,607,126],[724,125,607,129,"_a"],[724,127,607,131],[724,130,607,134,"window"],[724,136,607,140],[724,137,607,141,"location"],[724,145,607,149],[724,146,607,150,"href"],[724,150,607,154],[724,151,607,155],[725,8,608,12],[725,12,608,16],[725,20,608,24],[725,24,608,28,"resolvedWallet"],[725,38,608,42],[725,42,608,46,"resolvedWallet"],[725,56,608,60],[725,57,608,61,"signIn"],[725,63,608,67],[725,65,608,69],[726,10,609,16],[726,16,609,22,"output"],[726,22,609,28],[726,25,609,31],[726,31,609,37,"resolvedWallet"],[726,45,609,51],[726,46,609,52,"signIn"],[726,52,609,58],[726,53,609,59,"Object"],[726,59,609,65],[726,60,609,66,"assign"],[726,66,609,72],[726,67,609,73,"Object"],[726,73,609,79],[726,74,609,80,"assign"],[726,80,609,86],[726,81,609,87,"Object"],[726,87,609,93],[726,88,609,94,"assign"],[726,94,609,100],[726,95,609,101],[727,12,609,103,"issuedAt"],[727,20,609,111],[727,22,609,113],[727,26,609,117,"Date"],[727,30,609,121],[727,31,609,122],[727,32,609,123],[727,33,609,124,"toISOString"],[727,44,609,135],[727,45,609,136],[728,10,609,138],[728,11,609,139],[728,13,609,141,"options"],[728,20,609,148],[728,25,609,153],[728,29,609,157],[728,33,609,161,"options"],[728,40,609,168],[728,45,609,173],[728,50,609,178],[728,51,609,179],[728,54,609,182],[728,59,609,187],[728,60,609,188],[728,63,609,191,"options"],[728,70,609,198],[728,71,609,199,"signInWithSolana"],[728,87,609,215],[728,88,609,216],[728,90,609,218],[729,12,610,20],[730,12,611,20,"version"],[730,19,611,27],[730,21,611,29],[730,24,611,32],[731,12,611,34,"domain"],[731,18,611,40],[731,20,611,42,"url"],[731,23,611,45],[731,24,611,46,"host"],[731,28,611,50],[732,12,611,52,"uri"],[732,15,611,55],[732,17,611,57,"url"],[732,20,611,60],[732,21,611,61,"href"],[733,10,611,66],[733,11,611,67],[733,12,611,68],[733,14,611,71,"statement"],[733,23,611,80],[733,26,611,83],[734,12,611,85,"statement"],[735,10,611,95],[735,11,611,96],[735,14,611,99],[735,18,611,104],[735,19,611,105],[735,20,611,106],[736,10,612,16],[736,14,612,20,"outputToProcess"],[736,29,612,35],[737,10,613,16],[737,14,613,20,"Array"],[737,19,613,25],[737,20,613,26,"isArray"],[737,27,613,33],[737,28,613,34,"output"],[737,34,613,40],[737,35,613,41],[737,39,613,45,"output"],[737,45,613,51],[737,46,613,52],[737,47,613,53],[737,48,613,54],[737,52,613,58],[737,59,613,65,"output"],[737,65,613,71],[737,66,613,72],[737,67,613,73],[737,68,613,74],[737,73,613,79],[737,81,613,87],[737,83,613,89],[738,12,614,20,"outputToProcess"],[738,27,614,35],[738,30,614,38,"output"],[738,36,614,44],[738,37,614,45],[738,38,614,46],[738,39,614,47],[739,10,615,16],[739,11,615,17],[739,17,616,21],[739,21,616,25,"output"],[739,27,616,31],[739,31,617,20],[739,38,617,27,"output"],[739,44,617,33],[739,49,617,38],[739,57,617,46],[739,61,618,20],[739,76,618,35],[739,80,618,39,"output"],[739,86,618,45],[739,90,619,20],[739,101,619,31],[739,105,619,35,"output"],[739,111,619,41],[739,113,619,43],[740,12,620,20,"outputToProcess"],[740,27,620,35],[740,30,620,38,"output"],[740,36,620,44],[741,10,621,16],[741,11,621,17],[741,17,622,21],[742,12,623,20],[742,18,623,26],[742,22,623,30,"Error"],[742,27,623,35],[742,28,623,36],[742,99,623,107],[742,100,623,108],[743,10,624,16],[744,10,625,16],[744,14,625,20],[744,29,625,35],[744,33,625,39,"outputToProcess"],[744,48,625,54],[744,52,626,20],[744,63,626,31],[744,67,626,35,"outputToProcess"],[744,82,626,50],[744,87,627,21],[744,94,627,28,"outputToProcess"],[744,109,627,43],[744,110,627,44,"signedMessage"],[744,123,627,57],[744,128,627,62],[744,136,627,70],[744,140,628,24,"outputToProcess"],[744,155,628,39],[744,156,628,40,"signedMessage"],[744,169,628,53],[744,181,628,65,"Uint8Array"],[744,191,628,75],[744,192,628,76],[744,196,629,20,"outputToProcess"],[744,211,629,35],[744,212,629,36,"signature"],[744,221,629,45],[744,233,629,57,"Uint8Array"],[744,243,629,67],[744,245,629,69],[745,12,630,20,"message"],[745,19,630,27],[745,22,631,24],[745,29,631,31,"outputToProcess"],[745,44,631,46],[745,45,631,47,"signedMessage"],[745,58,631,60],[745,63,631,65],[745,71,631,73],[745,74,632,30,"outputToProcess"],[745,89,632,45],[745,90,632,46,"signedMessage"],[745,103,632,59],[745,106,633,30],[745,110,633,34,"TextDecoder"],[745,121,633,45],[745,122,633,46],[745,123,633,47],[745,124,633,48,"decode"],[745,130,633,54],[745,131,633,55,"outputToProcess"],[745,146,633,70],[745,147,633,71,"signedMessage"],[745,160,633,84],[745,161,633,85],[746,12,634,20,"signature"],[746,21,634,29],[746,24,634,32,"outputToProcess"],[746,39,634,47],[746,40,634,48,"signature"],[746,49,634,57],[747,10,635,16],[747,11,635,17],[747,17,636,21],[748,12,637,20],[748,18,637,26],[748,22,637,30,"Error"],[748,27,637,35],[748,28,637,36],[748,134,637,142],[748,135,637,143],[749,10,638,16],[750,8,639,12],[750,9,639,13],[750,15,640,17],[751,10,641,16],[751,14,641,20],[751,16,641,22],[751,29,641,35],[751,33,641,39,"resolvedWallet"],[751,47,641,53],[751,48,641,54],[751,52,642,20],[751,59,642,27,"resolvedWallet"],[751,73,642,41],[751,74,642,42,"signMessage"],[751,85,642,53],[751,90,642,58],[751,100,642,68],[751,104,643,20],[751,106,643,22],[751,117,643,33],[751,121,643,37,"resolvedWallet"],[751,135,643,51],[751,136,643,52],[751,140,644,20],[751,147,644,27,"resolvedWallet"],[751,161,644,41],[751,166,644,46],[751,174,644,54],[751,178,645,20],[751,179,645,21,"resolvedWallet"],[751,193,645,35],[751,194,645,36,"publicKey"],[751,203,645,45],[751,207,646,20],[751,209,646,22],[751,219,646,32],[751,223,646,36,"resolvedWallet"],[751,237,646,50],[751,238,646,51,"publicKey"],[751,247,646,60],[751,248,646,61],[751,252,647,20],[751,259,647,27,"resolvedWallet"],[751,273,647,41],[751,274,647,42,"publicKey"],[751,283,647,51],[751,284,647,52,"toBase58"],[751,292,647,60],[751,297,647,65],[751,307,647,75],[751,309,647,77],[752,12,648,20],[752,18,648,26],[752,22,648,30,"Error"],[752,27,648,35],[752,28,648,36],[752,125,648,133],[752,126,648,134],[753,10,649,16],[754,10,650,16,"message"],[754,17,650,23],[754,20,650,26],[754,21,651,20],[754,24,651,23,"url"],[754,27,651,26],[754,28,651,27,"host"],[754,32,651,31],[754,81,651,80],[754,83,652,20,"resolvedWallet"],[754,97,652,34],[754,98,652,35,"publicKey"],[754,107,652,44],[754,108,652,45,"toBase58"],[754,116,652,53],[754,117,652,54],[754,118,652,55],[754,120,653,20],[754,124,653,24,"statement"],[754,133,653,33],[754,136,653,36],[754,137,653,37],[754,139,653,39],[754,141,653,41,"statement"],[754,150,653,50],[754,152,653,52],[754,154,653,54],[754,155,653,55],[754,158,653,58],[754,159,653,59],[754,161,653,61],[754,162,653,62],[754,163,653,63],[754,165,654,20],[754,177,654,32],[754,179,655,20],[754,187,655,28,"url"],[754,190,655,31],[754,191,655,32,"href"],[754,195,655,36],[754,197,655,38],[754,199,656,20],[754,213,656,34],[754,214,656,35,"_c"],[754,216,656,37],[754,219,656,40],[754,220,656,41,"_b"],[754,222,656,43],[754,225,656,46,"options"],[754,232,656,53],[754,237,656,58],[754,241,656,62],[754,245,656,66,"options"],[754,252,656,73],[754,257,656,78],[754,262,656,83],[754,263,656,84],[754,266,656,87],[754,271,656,92],[754,272,656,93],[754,275,656,96,"options"],[754,282,656,103],[754,283,656,104,"signInWithSolana"],[754,299,656,120],[754,305,656,126],[754,309,656,130],[754,313,656,134,"_b"],[754,315,656,136],[754,320,656,141],[754,325,656,146],[754,326,656,147],[754,329,656,150],[754,334,656,155],[754,335,656,156],[754,338,656,159,"_b"],[754,340,656,161],[754,341,656,162,"issuedAt"],[754,349,656,170],[754,355,656,176],[754,359,656,180],[754,363,656,184,"_c"],[754,365,656,186],[754,370,656,191],[754,375,656,196],[754,376,656,197],[754,379,656,200,"_c"],[754,381,656,202],[754,384,656,205],[754,388,656,209,"Date"],[754,392,656,213],[754,393,656,214],[754,394,656,215],[754,395,656,216,"toISOString"],[754,406,656,227],[754,407,656,228],[754,408,656,229],[754,410,656,231],[754,412,657,20],[754,416,657,24],[754,417,657,25],[754,418,657,26,"_d"],[754,420,657,28],[754,423,657,31,"options"],[754,430,657,38],[754,435,657,43],[754,439,657,47],[754,443,657,51,"options"],[754,450,657,58],[754,455,657,63],[754,460,657,68],[754,461,657,69],[754,464,657,72],[754,469,657,77],[754,470,657,78],[754,473,657,81,"options"],[754,480,657,88],[754,481,657,89,"signInWithSolana"],[754,497,657,105],[754,503,657,111],[754,507,657,115],[754,511,657,119,"_d"],[754,513,657,121],[754,518,657,126],[754,523,657,131],[754,524,657,132],[754,527,657,135],[754,532,657,140],[754,533,657,141],[754,536,657,144,"_d"],[754,538,657,146],[754,539,657,147,"notBefore"],[754,548,657,156],[754,552,658,26],[754,553,658,27],[754,568,658,42,"options"],[754,575,658,49],[754,576,658,50,"signInWithSolana"],[754,592,658,66],[754,593,658,67,"notBefore"],[754,602,658,76],[754,604,658,78],[754,605,658,79],[754,608,659,26],[754,610,659,28],[754,611,659,29],[754,613,660,20],[754,617,660,24],[754,618,660,25],[754,619,660,26,"_e"],[754,621,660,28],[754,624,660,31,"options"],[754,631,660,38],[754,636,660,43],[754,640,660,47],[754,644,660,51,"options"],[754,651,660,58],[754,656,660,63],[754,661,660,68],[754,662,660,69],[754,665,660,72],[754,670,660,77],[754,671,660,78],[754,674,660,81,"options"],[754,681,660,88],[754,682,660,89,"signInWithSolana"],[754,698,660,105],[754,704,660,111],[754,708,660,115],[754,712,660,119,"_e"],[754,714,660,121],[754,719,660,126],[754,724,660,131],[754,725,660,132],[754,728,660,135],[754,733,660,140],[754,734,660,141],[754,737,660,144,"_e"],[754,739,660,146],[754,740,660,147,"expirationTime"],[754,754,660,161],[754,758,661,26],[754,759,661,27],[754,779,661,47,"options"],[754,786,661,54],[754,787,661,55,"signInWithSolana"],[754,803,661,71],[754,804,661,72,"expirationTime"],[754,818,661,86],[754,820,661,88],[754,821,661,89],[754,824,662,26],[754,826,662,28],[754,827,662,29],[754,829,663,20],[754,833,663,24],[754,834,663,25],[754,835,663,26,"_f"],[754,837,663,28],[754,840,663,31,"options"],[754,847,663,38],[754,852,663,43],[754,856,663,47],[754,860,663,51,"options"],[754,867,663,58],[754,872,663,63],[754,877,663,68],[754,878,663,69],[754,881,663,72],[754,886,663,77],[754,887,663,78],[754,890,663,81,"options"],[754,897,663,88],[754,898,663,89,"signInWithSolana"],[754,914,663,105],[754,920,663,111],[754,924,663,115],[754,928,663,119,"_f"],[754,930,663,121],[754,935,663,126],[754,940,663,131],[754,941,663,132],[754,944,663,135],[754,949,663,140],[754,950,663,141],[754,953,663,144,"_f"],[754,955,663,146],[754,956,663,147,"chainId"],[754,963,663,154],[754,967,664,26],[754,968,664,27],[754,981,664,40,"options"],[754,988,664,47],[754,989,664,48,"signInWithSolana"],[754,1005,664,64],[754,1006,664,65,"chainId"],[754,1013,664,72],[754,1015,664,74],[754,1016,664,75],[754,1019,665,26],[754,1021,665,28],[754,1022,665,29],[754,1024,666,20],[754,1028,666,24],[754,1029,666,25],[754,1030,666,26,"_g"],[754,1032,666,28],[754,1035,666,31,"options"],[754,1042,666,38],[754,1047,666,43],[754,1051,666,47],[754,1055,666,51,"options"],[754,1062,666,58],[754,1067,666,63],[754,1072,666,68],[754,1073,666,69],[754,1076,666,72],[754,1081,666,77],[754,1082,666,78],[754,1085,666,81,"options"],[754,1092,666,88],[754,1093,666,89,"signInWithSolana"],[754,1109,666,105],[754,1115,666,111],[754,1119,666,115],[754,1123,666,119,"_g"],[754,1125,666,121],[754,1130,666,126],[754,1135,666,131],[754,1136,666,132],[754,1139,666,135],[754,1144,666,140],[754,1145,666,141],[754,1148,666,144,"_g"],[754,1150,666,146],[754,1151,666,147,"nonce"],[754,1156,666,152],[754,1160,666,156],[754,1161,666,157],[754,1171,666,167,"options"],[754,1178,666,174],[754,1179,666,175,"signInWithSolana"],[754,1195,666,191],[754,1196,666,192,"nonce"],[754,1201,666,197],[754,1203,666,199],[754,1204,666,200],[754,1207,666,203],[754,1209,666,205],[754,1210,666,206],[754,1212,667,20],[754,1216,667,24],[754,1217,667,25],[754,1218,667,26,"_h"],[754,1220,667,28],[754,1223,667,31,"options"],[754,1230,667,38],[754,1235,667,43],[754,1239,667,47],[754,1243,667,51,"options"],[754,1250,667,58],[754,1255,667,63],[754,1260,667,68],[754,1261,667,69],[754,1264,667,72],[754,1269,667,77],[754,1270,667,78],[754,1273,667,81,"options"],[754,1280,667,88],[754,1281,667,89,"signInWithSolana"],[754,1297,667,105],[754,1303,667,111],[754,1307,667,115],[754,1311,667,119,"_h"],[754,1313,667,121],[754,1318,667,126],[754,1323,667,131],[754,1324,667,132],[754,1327,667,135],[754,1332,667,140],[754,1333,667,141],[754,1336,667,144,"_h"],[754,1338,667,146],[754,1339,667,147,"requestId"],[754,1348,667,156],[754,1352,668,26],[754,1353,668,27],[754,1368,668,42,"options"],[754,1375,668,49],[754,1376,668,50,"signInWithSolana"],[754,1392,668,66],[754,1393,668,67,"requestId"],[754,1402,668,76],[754,1404,668,78],[754,1405,668,79],[754,1408,669,26],[754,1410,669,28],[754,1411,669,29],[754,1413,670,20],[754,1417,670,24],[754,1418,670,25],[754,1419,670,26,"_k"],[754,1421,670,28],[754,1424,670,31],[754,1425,670,32,"_j"],[754,1427,670,34],[754,1430,670,37,"options"],[754,1437,670,44],[754,1442,670,49],[754,1446,670,53],[754,1450,670,57,"options"],[754,1457,670,64],[754,1462,670,69],[754,1467,670,74],[754,1468,670,75],[754,1471,670,78],[754,1476,670,83],[754,1477,670,84],[754,1480,670,87,"options"],[754,1487,670,94],[754,1488,670,95,"signInWithSolana"],[754,1504,670,111],[754,1510,670,117],[754,1514,670,121],[754,1518,670,125,"_j"],[754,1520,670,127],[754,1525,670,132],[754,1530,670,137],[754,1531,670,138],[754,1534,670,141],[754,1539,670,146],[754,1540,670,147],[754,1543,670,150,"_j"],[754,1545,670,152],[754,1546,670,153,"resources"],[754,1555,670,162],[754,1561,670,168],[754,1565,670,172],[754,1569,670,176,"_k"],[754,1571,670,178],[754,1576,670,183],[754,1581,670,188],[754,1582,670,189],[754,1585,670,192],[754,1590,670,197],[754,1591,670,198],[754,1594,670,201,"_k"],[754,1596,670,203],[754,1597,670,204,"length"],[754,1603,670,210],[754,1607,671,26],[754,1608,672,28],[754,1619,672,39],[754,1621,673,28],[754,1624,673,31,"options"],[754,1631,673,38],[754,1632,673,39,"signInWithSolana"],[754,1648,673,55],[754,1649,673,56,"resources"],[754,1658,673,65],[754,1659,673,66,"map"],[754,1662,673,69],[754,1663,673,71,"resource"],[754,1671,673,79],[754,1675,673,84],[754,1680,673,89,"resource"],[754,1688,673,97],[754,1690,673,99],[754,1691,673,100],[754,1692,674,25],[754,1695,675,26],[754,1697,675,28],[754,1698,675,29],[754,1699,676,17],[754,1700,676,18,"join"],[754,1704,676,22],[754,1705,676,23],[754,1709,676,27],[754,1710,676,28],[755,10,677,16],[755,16,677,22,"maybeSignature"],[755,30,677,36],[755,33,677,39],[755,39,677,45,"resolvedWallet"],[755,53,677,59],[755,54,677,60,"signMessage"],[755,65,677,71],[755,66,677,72],[755,70,677,76,"TextEncoder"],[755,81,677,87],[755,82,677,88],[755,83,677,89],[755,84,677,90,"encode"],[755,90,677,96],[755,91,677,97,"message"],[755,98,677,104],[755,99,677,105],[755,101,677,107],[755,107,677,113],[755,108,677,114],[756,10,678,16],[756,14,678,20],[756,15,678,21,"maybeSignature"],[756,29,678,35],[756,33,678,39],[756,35,678,41,"maybeSignature"],[756,49,678,55],[756,61,678,67,"Uint8Array"],[756,71,678,77],[756,72,678,78],[756,74,678,80],[757,12,679,20],[757,18,679,26],[757,22,679,30,"Error"],[757,27,679,35],[757,28,679,36],[757,102,679,110],[757,103,679,111],[758,10,680,16],[759,10,681,16,"signature"],[759,19,681,25],[759,22,681,28,"maybeSignature"],[759,36,681,42],[760,8,682,12],[761,6,683,8],[762,6,684,8],[762,10,684,12],[763,8,685,12],[763,14,685,18],[764,10,685,20,"data"],[764,14,685,24],[765,10,685,26,"error"],[766,8,685,32],[766,9,685,33],[766,12,685,36],[766,18,685,42],[766,22,685,42,"_request"],[766,37,685,50],[766,39,685,51],[766,43,685,55],[766,44,685,56,"fetch"],[766,49,685,61],[766,51,685,63],[766,57,685,69],[766,59,685,71],[766,62,685,74],[766,66,685,78],[766,67,685,79,"url"],[766,70,685,82],[766,94,685,106],[766,96,685,108],[767,10,686,16,"headers"],[767,17,686,23],[767,19,686,25],[767,23,686,29],[767,24,686,30,"headers"],[767,31,686,37],[768,10,687,16,"body"],[768,14,687,20],[768,16,687,22,"Object"],[768,22,687,28],[768,23,687,29,"assign"],[768,29,687,35],[768,30,687,36],[769,12,687,38,"chain"],[769,17,687,43],[769,19,687,45],[769,27,687,53],[770,12,687,55,"message"],[770,19,687,62],[771,12,687,64,"signature"],[771,21,687,73],[771,23,687,75],[771,27,687,75,"bytesToBase64URL"],[771,54,687,91],[771,56,687,92,"signature"],[771,65,687,101],[772,10,687,103],[772,11,687,104],[772,13,687,107],[772,14,687,108],[772,15,687,109,"_l"],[772,17,687,111],[772,20,687,114,"credentials"],[772,31,687,125],[772,32,687,126,"options"],[772,39,687,133],[772,45,687,139],[772,49,687,143],[772,53,687,147,"_l"],[772,55,687,149],[772,60,687,154],[772,65,687,159],[772,66,687,160],[772,69,687,163],[772,74,687,168],[772,75,687,169],[772,78,687,172,"_l"],[772,80,687,174],[772,81,687,175,"captchaToken"],[772,93,687,187],[772,97,688,22],[773,12,688,24,"gotrue_meta_security"],[773,32,688,44],[773,34,688,46],[774,14,688,48,"captcha_token"],[774,27,688,61],[774,29,688,63],[774,30,688,64,"_m"],[774,32,688,66],[774,35,688,69,"credentials"],[774,46,688,80],[774,47,688,81,"options"],[774,54,688,88],[774,60,688,94],[774,64,688,98],[774,68,688,102,"_m"],[774,70,688,104],[774,75,688,109],[774,80,688,114],[774,81,688,115],[774,84,688,118],[774,89,688,123],[774,90,688,124],[774,93,688,127,"_m"],[774,95,688,129],[774,96,688,130,"captchaToken"],[775,12,688,143],[776,10,688,145],[776,11,688,146],[776,14,689,22],[776,18,689,27],[776,19,689,28],[777,10,690,16,"xform"],[777,15,690,21],[777,17,690,23,"_sessionResponse"],[778,8,691,12],[778,9,691,13],[778,10,691,14],[779,8,692,12],[779,12,692,16,"error"],[779,17,692,21],[779,19,692,23],[780,10,693,16],[780,16,693,22,"error"],[780,21,693,27],[781,8,694,12],[782,8,695,12],[782,12,695,16],[782,13,695,17,"data"],[782,17,695,21],[782,21,695,25],[782,22,695,26,"data"],[782,26,695,30],[782,27,695,31,"session"],[782,34,695,38],[782,38,695,42],[782,39,695,43,"data"],[782,43,695,47],[782,44,695,48,"user"],[782,48,695,52],[782,50,695,54],[783,10,696,16],[783,17,696,23],[784,12,697,20,"data"],[784,16,697,24],[784,18,697,26],[785,14,697,28,"user"],[785,18,697,32],[785,20,697,34],[785,24,697,38],[786,14,697,40,"session"],[786,21,697,47],[786,23,697,49],[787,12,697,54],[787,13,697,55],[788,12,698,20,"error"],[788,17,698,25],[788,19,698,27],[788,23,698,31,"AuthInvalidTokenResponseError"],[788,60,698,60],[788,61,698,61],[789,10,699,16],[789,11,699,17],[790,8,700,12],[791,8,701,12],[791,12,701,16,"data"],[791,16,701,20],[791,17,701,21,"session"],[791,24,701,28],[791,26,701,30],[792,10,702,16],[792,16,702,22],[792,20,702,26],[792,21,702,27,"_saveSession"],[792,33,702,39],[792,34,702,40,"data"],[792,38,702,44],[792,39,702,45,"session"],[792,46,702,52],[792,47,702,53],[793,10,703,16],[793,16,703,22],[793,20,703,26],[793,21,703,27,"_notifyAllSubscribers"],[793,42,703,48],[793,43,703,49],[793,54,703,60],[793,56,703,62,"data"],[793,60,703,66],[793,61,703,67,"session"],[793,68,703,74],[793,69,703,75],[794,8,704,12],[795,8,705,12],[795,15,705,19],[796,10,705,21,"data"],[796,14,705,25],[796,16,705,27,"Object"],[796,22,705,33],[796,23,705,34,"assign"],[796,29,705,40],[796,30,705,41],[796,31,705,42],[796,32,705,43],[796,34,705,45,"data"],[796,38,705,49],[796,39,705,50],[797,10,705,52,"error"],[798,8,705,58],[798,9,705,59],[799,6,706,8],[799,7,706,9],[799,8,707,8],[799,15,707,15,"error"],[799,20,707,20],[799,22,707,22],[800,8,708,12],[800,12,708,16],[800,16,708,16,"isAuthError"],[800,35,708,27],[800,37,708,28,"error"],[800,42,708,33],[800,43,708,34],[800,45,708,36],[801,10,709,16],[801,17,709,23],[802,12,709,25,"data"],[802,16,709,29],[802,18,709,31],[803,14,709,33,"user"],[803,18,709,37],[803,20,709,39],[803,24,709,43],[804,14,709,45,"session"],[804,21,709,52],[804,23,709,54],[805,12,709,59],[805,13,709,60],[806,12,709,62,"error"],[807,10,709,68],[807,11,709,69],[808,8,710,12],[809,8,711,12],[809,14,711,18,"error"],[809,19,711,23],[810,6,712,8],[811,4,713,4],[812,4,714,4],[812,10,714,10,"_exchangeCodeForSession"],[812,33,714,33,"_exchangeCodeForSession"],[812,34,714,34,"authCode"],[812,42,714,42],[812,44,714,44],[813,6,715,8],[813,12,715,14,"storageItem"],[813,23,715,25],[813,26,715,28],[813,32,715,34],[813,36,715,34,"getItemAsync"],[813,57,715,46],[813,59,715,47],[813,63,715,51],[813,64,715,52,"storage"],[813,71,715,59],[813,73,715,61],[813,76,715,64],[813,80,715,68],[813,81,715,69,"storageKey"],[813,91,715,79],[813,107,715,95],[813,108,715,96],[814,6,716,8],[814,12,716,14],[814,13,716,15,"codeVerifier"],[814,25,716,27],[814,27,716,29,"redirectType"],[814,39,716,41],[814,40,716,42],[814,43,716,45],[814,44,716,46,"storageItem"],[814,55,716,57],[814,60,716,62],[814,64,716,66],[814,68,716,70,"storageItem"],[814,79,716,81],[814,84,716,86],[814,89,716,91],[814,90,716,92],[814,93,716,95,"storageItem"],[814,104,716,106],[814,107,716,109],[814,109,716,111],[814,111,716,113,"split"],[814,116,716,118],[814,117,716,119],[814,120,716,122],[814,121,716,123],[815,6,717,8],[815,10,717,12],[816,8,718,12],[816,14,718,18],[817,10,718,20,"data"],[817,14,718,24],[818,10,718,26,"error"],[819,8,718,32],[819,9,718,33],[819,12,718,36],[819,18,718,42],[819,22,718,42,"_request"],[819,37,718,50],[819,39,718,51],[819,43,718,55],[819,44,718,56,"fetch"],[819,49,718,61],[819,51,718,63],[819,57,718,69],[819,59,718,71],[819,62,718,74],[819,66,718,78],[819,67,718,79,"url"],[819,70,718,82],[819,94,718,106],[819,96,718,108],[820,10,719,16,"headers"],[820,17,719,23],[820,19,719,25],[820,23,719,29],[820,24,719,30,"headers"],[820,31,719,37],[821,10,720,16,"body"],[821,14,720,20],[821,16,720,22],[822,12,721,20,"auth_code"],[822,21,721,29],[822,23,721,31,"authCode"],[822,31,721,39],[823,12,722,20,"code_verifier"],[823,25,722,33],[823,27,722,35,"codeVerifier"],[824,10,723,16],[824,11,723,17],[825,10,724,16,"xform"],[825,15,724,21],[825,17,724,23,"_sessionResponse"],[826,8,725,12],[826,9,725,13],[826,10,725,14],[827,8,726,12],[827,14,726,18],[827,18,726,18,"removeItemAsync"],[827,42,726,33],[827,44,726,34],[827,48,726,38],[827,49,726,39,"storage"],[827,56,726,46],[827,58,726,48],[827,61,726,51],[827,65,726,55],[827,66,726,56,"storageKey"],[827,76,726,66],[827,92,726,82],[827,93,726,83],[828,8,727,12],[828,12,727,16,"error"],[828,17,727,21],[828,19,727,23],[829,10,728,16],[829,16,728,22,"error"],[829,21,728,27],[830,8,729,12],[831,8,730,12],[831,12,730,16],[831,13,730,17,"data"],[831,17,730,21],[831,21,730,25],[831,22,730,26,"data"],[831,26,730,30],[831,27,730,31,"session"],[831,34,730,38],[831,38,730,42],[831,39,730,43,"data"],[831,43,730,47],[831,44,730,48,"user"],[831,48,730,52],[831,50,730,54],[832,10,731,16],[832,17,731,23],[833,12,732,20,"data"],[833,16,732,24],[833,18,732,26],[834,14,732,28,"user"],[834,18,732,32],[834,20,732,34],[834,24,732,38],[835,14,732,40,"session"],[835,21,732,47],[835,23,732,49],[835,27,732,53],[836,14,732,55,"redirectType"],[836,26,732,67],[836,28,732,69],[837,12,732,74],[837,13,732,75],[838,12,733,20,"error"],[838,17,733,25],[838,19,733,27],[838,23,733,31,"AuthInvalidTokenResponseError"],[838,60,733,60],[838,61,733,61],[839,10,734,16],[839,11,734,17],[840,8,735,12],[841,8,736,12],[841,12,736,16,"data"],[841,16,736,20],[841,17,736,21,"session"],[841,24,736,28],[841,26,736,30],[842,10,737,16],[842,16,737,22],[842,20,737,26],[842,21,737,27,"_saveSession"],[842,33,737,39],[842,34,737,40,"data"],[842,38,737,44],[842,39,737,45,"session"],[842,46,737,52],[842,47,737,53],[843,10,738,16],[843,16,738,22],[843,20,738,26],[843,21,738,27,"_notifyAllSubscribers"],[843,42,738,48],[843,43,738,49],[843,54,738,60],[843,56,738,62,"data"],[843,60,738,66],[843,61,738,67,"session"],[843,68,738,74],[843,69,738,75],[844,8,739,12],[845,8,740,12],[845,15,740,19],[846,10,740,21,"data"],[846,14,740,25],[846,16,740,27,"Object"],[846,22,740,33],[846,23,740,34,"assign"],[846,29,740,40],[846,30,740,41,"Object"],[846,36,740,47],[846,37,740,48,"assign"],[846,43,740,54],[846,44,740,55],[846,45,740,56],[846,46,740,57],[846,48,740,59,"data"],[846,52,740,63],[846,53,740,64],[846,55,740,66],[847,12,740,68,"redirectType"],[847,24,740,80],[847,26,740,82,"redirectType"],[847,38,740,94],[847,43,740,99],[847,47,740,103],[847,51,740,107,"redirectType"],[847,63,740,119],[847,68,740,124],[847,73,740,129],[847,74,740,130],[847,77,740,133,"redirectType"],[847,89,740,145],[847,92,740,148],[848,10,740,153],[848,11,740,154],[848,12,740,155],[849,10,740,157,"error"],[850,8,740,163],[850,9,740,164],[851,6,741,8],[851,7,741,9],[851,8,742,8],[851,15,742,15,"error"],[851,20,742,20],[851,22,742,22],[852,8,743,12],[852,12,743,16],[852,16,743,16,"isAuthError"],[852,35,743,27],[852,37,743,28,"error"],[852,42,743,33],[852,43,743,34],[852,45,743,36],[853,10,744,16],[853,17,744,23],[854,12,744,25,"data"],[854,16,744,29],[854,18,744,31],[855,14,744,33,"user"],[855,18,744,37],[855,20,744,39],[855,24,744,43],[856,14,744,45,"session"],[856,21,744,52],[856,23,744,54],[856,27,744,58],[857,14,744,60,"redirectType"],[857,26,744,72],[857,28,744,74],[858,12,744,79],[858,13,744,80],[859,12,744,82,"error"],[860,10,744,88],[860,11,744,89],[861,8,745,12],[862,8,746,12],[862,14,746,18,"error"],[862,19,746,23],[863,6,747,8],[864,4,748,4],[865,4,749,4],[866,0,750,0],[867,0,751,0],[868,0,752,0],[869,4,753,4],[869,10,753,10,"signInWithIdToken"],[869,27,753,27,"signInWithIdToken"],[869,28,753,28,"credentials"],[869,39,753,39],[869,41,753,41],[870,6,754,8],[870,10,754,12],[871,8,755,12],[871,14,755,18],[872,10,755,20,"options"],[872,17,755,27],[873,10,755,29,"provider"],[873,18,755,37],[874,10,755,39,"token"],[874,15,755,44],[875,10,755,46,"access_token"],[875,22,755,58],[876,10,755,60,"nonce"],[877,8,755,66],[877,9,755,67],[877,12,755,70,"credentials"],[877,23,755,81],[878,8,756,12],[878,14,756,18,"res"],[878,17,756,21],[878,20,756,24],[878,26,756,30],[878,30,756,30,"_request"],[878,45,756,38],[878,47,756,39],[878,51,756,43],[878,52,756,44,"fetch"],[878,57,756,49],[878,59,756,51],[878,65,756,57],[878,67,756,59],[878,70,756,62],[878,74,756,66],[878,75,756,67,"url"],[878,78,756,70],[878,106,756,98],[878,108,756,100],[879,10,757,16,"headers"],[879,17,757,23],[879,19,757,25],[879,23,757,29],[879,24,757,30,"headers"],[879,31,757,37],[880,10,758,16,"body"],[880,14,758,20],[880,16,758,22],[881,12,759,20,"provider"],[881,20,759,28],[882,12,760,20,"id_token"],[882,20,760,28],[882,22,760,30,"token"],[882,27,760,35],[883,12,761,20,"access_token"],[883,24,761,32],[884,12,762,20,"nonce"],[884,17,762,25],[885,12,763,20,"gotrue_meta_security"],[885,32,763,40],[885,34,763,42],[886,14,763,44,"captcha_token"],[886,27,763,57],[886,29,763,59,"options"],[886,36,763,66],[886,41,763,71],[886,45,763,75],[886,49,763,79,"options"],[886,56,763,86],[886,61,763,91],[886,66,763,96],[886,67,763,97],[886,70,763,100],[886,75,763,105],[886,76,763,106],[886,79,763,109,"options"],[886,86,763,116],[886,87,763,117,"captchaToken"],[887,12,763,130],[888,10,764,16],[888,11,764,17],[889,10,765,16,"xform"],[889,15,765,21],[889,17,765,23,"_sessionResponse"],[890,8,766,12],[890,9,766,13],[890,10,766,14],[891,8,767,12],[891,14,767,18],[892,10,767,20,"data"],[892,14,767,24],[893,10,767,26,"error"],[894,8,767,32],[894,9,767,33],[894,12,767,36,"res"],[894,15,767,39],[895,8,768,12],[895,12,768,16,"error"],[895,17,768,21],[895,19,768,23],[896,10,769,16],[896,17,769,23],[897,12,769,25,"data"],[897,16,769,29],[897,18,769,31],[898,14,769,33,"user"],[898,18,769,37],[898,20,769,39],[898,24,769,43],[899,14,769,45,"session"],[899,21,769,52],[899,23,769,54],[900,12,769,59],[900,13,769,60],[901,12,769,62,"error"],[902,10,769,68],[902,11,769,69],[903,8,770,12],[903,9,770,13],[903,15,771,17],[903,19,771,21],[903,20,771,22,"data"],[903,24,771,26],[903,28,771,30],[903,29,771,31,"data"],[903,33,771,35],[903,34,771,36,"session"],[903,41,771,43],[903,45,771,47],[903,46,771,48,"data"],[903,50,771,52],[903,51,771,53,"user"],[903,55,771,57],[903,57,771,59],[904,10,772,16],[904,17,772,23],[905,12,773,20,"data"],[905,16,773,24],[905,18,773,26],[906,14,773,28,"user"],[906,18,773,32],[906,20,773,34],[906,24,773,38],[907,14,773,40,"session"],[907,21,773,47],[907,23,773,49],[908,12,773,54],[908,13,773,55],[909,12,774,20,"error"],[909,17,774,25],[909,19,774,27],[909,23,774,31,"AuthInvalidTokenResponseError"],[909,60,774,60],[909,61,774,61],[910,10,775,16],[910,11,775,17],[911,8,776,12],[912,8,777,12],[912,12,777,16,"data"],[912,16,777,20],[912,17,777,21,"session"],[912,24,777,28],[912,26,777,30],[913,10,778,16],[913,16,778,22],[913,20,778,26],[913,21,778,27,"_saveSession"],[913,33,778,39],[913,34,778,40,"data"],[913,38,778,44],[913,39,778,45,"session"],[913,46,778,52],[913,47,778,53],[914,10,779,16],[914,16,779,22],[914,20,779,26],[914,21,779,27,"_notifyAllSubscribers"],[914,42,779,48],[914,43,779,49],[914,54,779,60],[914,56,779,62,"data"],[914,60,779,66],[914,61,779,67,"session"],[914,68,779,74],[914,69,779,75],[915,8,780,12],[916,8,781,12],[916,15,781,19],[917,10,781,21,"data"],[917,14,781,25],[918,10,781,27,"error"],[919,8,781,33],[919,9,781,34],[920,6,782,8],[920,7,782,9],[920,8,783,8],[920,15,783,15,"error"],[920,20,783,20],[920,22,783,22],[921,8,784,12],[921,12,784,16],[921,16,784,16,"isAuthError"],[921,35,784,27],[921,37,784,28,"error"],[921,42,784,33],[921,43,784,34],[921,45,784,36],[922,10,785,16],[922,17,785,23],[923,12,785,25,"data"],[923,16,785,29],[923,18,785,31],[924,14,785,33,"user"],[924,18,785,37],[924,20,785,39],[924,24,785,43],[925,14,785,45,"session"],[925,21,785,52],[925,23,785,54],[926,12,785,59],[926,13,785,60],[927,12,785,62,"error"],[928,10,785,68],[928,11,785,69],[929,8,786,12],[930,8,787,12],[930,14,787,18,"error"],[930,19,787,23],[931,6,788,8],[932,4,789,4],[933,4,790,4],[934,0,791,0],[935,0,792,0],[936,0,793,0],[937,0,794,0],[938,0,795,0],[939,0,796,0],[940,0,797,0],[941,0,798,0],[942,0,799,0],[943,0,800,0],[944,0,801,0],[945,0,802,0],[946,0,803,0],[947,0,804,0],[948,0,805,0],[949,0,806,0],[950,4,807,4],[950,10,807,10,"signInWithOtp"],[950,23,807,23,"signInWithOtp"],[950,24,807,24,"credentials"],[950,35,807,35],[950,37,807,37],[951,6,808,8],[951,10,808,12,"_a"],[951,12,808,14],[951,14,808,16,"_b"],[951,16,808,18],[951,18,808,20,"_c"],[951,20,808,22],[951,22,808,24,"_d"],[951,24,808,26],[951,26,808,28,"_e"],[951,28,808,30],[952,6,809,8],[952,10,809,12],[953,8,810,12],[953,12,810,16],[953,19,810,23],[953,23,810,27,"credentials"],[953,34,810,38],[953,36,810,40],[954,10,811,16],[954,16,811,22],[955,12,811,24,"email"],[955,17,811,29],[956,12,811,31,"options"],[957,10,811,39],[957,11,811,40],[957,14,811,43,"credentials"],[957,25,811,54],[958,10,812,16],[958,14,812,20,"codeChallenge"],[958,27,812,33],[958,30,812,36],[958,34,812,40],[959,10,813,16],[959,14,813,20,"codeChallengeMethod"],[959,33,813,39],[959,36,813,42],[959,40,813,46],[960,10,814,16],[960,14,814,20],[960,18,814,24],[960,19,814,25,"flowType"],[960,27,814,33],[960,32,814,38],[960,38,814,44],[960,40,814,46],[961,12,815,20],[962,12,816,20],[962,13,816,21,"codeChallenge"],[962,26,816,34],[962,28,816,36,"codeChallengeMethod"],[962,47,816,55],[962,48,816,56],[962,51,816,59],[962,57,816,65],[962,61,816,65,"getCodeChallengeAndMethod"],[962,95,816,90],[962,97,816,91],[962,101,816,95],[962,102,816,96,"storage"],[962,109,816,103],[962,111,816,105],[962,115,816,109],[962,116,816,110,"storageKey"],[962,126,816,120],[962,127,816,121],[963,10,817,16],[964,10,818,16],[964,16,818,22],[965,12,818,24,"error"],[966,10,818,30],[966,11,818,31],[966,14,818,34],[966,20,818,40],[966,24,818,40,"_request"],[966,39,818,48],[966,41,818,49],[966,45,818,53],[966,46,818,54,"fetch"],[966,51,818,59],[966,53,818,61],[966,59,818,67],[966,61,818,69],[966,64,818,72],[966,68,818,76],[966,69,818,77,"url"],[966,72,818,80],[966,78,818,86],[966,80,818,88],[967,12,819,20,"headers"],[967,19,819,27],[967,21,819,29],[967,25,819,33],[967,26,819,34,"headers"],[967,33,819,41],[968,12,820,20,"body"],[968,16,820,24],[968,18,820,26],[969,14,821,24,"email"],[969,19,821,29],[970,14,822,24,"data"],[970,18,822,28],[970,20,822,30],[970,21,822,31,"_a"],[970,23,822,33],[970,26,822,36,"options"],[970,33,822,43],[970,38,822,48],[970,42,822,52],[970,46,822,56,"options"],[970,53,822,63],[970,58,822,68],[970,63,822,73],[970,64,822,74],[970,67,822,77],[970,72,822,82],[970,73,822,83],[970,76,822,86,"options"],[970,83,822,93],[970,84,822,94,"data"],[970,88,822,98],[970,94,822,104],[970,98,822,108],[970,102,822,112,"_a"],[970,104,822,114],[970,109,822,119],[970,114,822,124],[970,115,822,125],[970,118,822,128,"_a"],[970,120,822,130],[970,123,822,133],[970,124,822,134],[970,125,822,135],[971,14,823,24,"create_user"],[971,25,823,35],[971,27,823,37],[971,28,823,38,"_b"],[971,30,823,40],[971,33,823,43,"options"],[971,40,823,50],[971,45,823,55],[971,49,823,59],[971,53,823,63,"options"],[971,60,823,70],[971,65,823,75],[971,70,823,80],[971,71,823,81],[971,74,823,84],[971,79,823,89],[971,80,823,90],[971,83,823,93,"options"],[971,90,823,100],[971,91,823,101,"shouldCreateUser"],[971,107,823,117],[971,113,823,123],[971,117,823,127],[971,121,823,131,"_b"],[971,123,823,133],[971,128,823,138],[971,133,823,143],[971,134,823,144],[971,137,823,147,"_b"],[971,139,823,149],[971,142,823,152],[971,146,823,156],[972,14,824,24,"gotrue_meta_security"],[972,34,824,44],[972,36,824,46],[973,16,824,48,"captcha_token"],[973,29,824,61],[973,31,824,63,"options"],[973,38,824,70],[973,43,824,75],[973,47,824,79],[973,51,824,83,"options"],[973,58,824,90],[973,63,824,95],[973,68,824,100],[973,69,824,101],[973,72,824,104],[973,77,824,109],[973,78,824,110],[973,81,824,113,"options"],[973,88,824,120],[973,89,824,121,"captchaToken"],[974,14,824,134],[974,15,824,135],[975,14,825,24,"code_challenge"],[975,28,825,38],[975,30,825,40,"codeChallenge"],[975,43,825,53],[976,14,826,24,"code_challenge_method"],[976,35,826,45],[976,37,826,47,"codeChallengeMethod"],[977,12,827,20],[977,13,827,21],[978,12,828,20,"redirectTo"],[978,22,828,30],[978,24,828,32,"options"],[978,31,828,39],[978,36,828,44],[978,40,828,48],[978,44,828,52,"options"],[978,51,828,59],[978,56,828,64],[978,61,828,69],[978,62,828,70],[978,65,828,73],[978,70,828,78],[978,71,828,79],[978,74,828,82,"options"],[978,81,828,89],[978,82,828,90,"emailRedirectTo"],[979,10,829,16],[979,11,829,17],[979,12,829,18],[980,10,830,16],[980,17,830,23],[981,12,830,25,"data"],[981,16,830,29],[981,18,830,31],[982,14,830,33,"user"],[982,18,830,37],[982,20,830,39],[982,24,830,43],[983,14,830,45,"session"],[983,21,830,52],[983,23,830,54],[984,12,830,59],[984,13,830,60],[985,12,830,62,"error"],[986,10,830,68],[986,11,830,69],[987,8,831,12],[988,8,832,12],[988,12,832,16],[988,19,832,23],[988,23,832,27,"credentials"],[988,34,832,38],[988,36,832,40],[989,10,833,16],[989,16,833,22],[990,12,833,24,"phone"],[990,17,833,29],[991,12,833,31,"options"],[992,10,833,39],[992,11,833,40],[992,14,833,43,"credentials"],[992,25,833,54],[993,10,834,16],[993,16,834,22],[994,12,834,24,"data"],[994,16,834,28],[995,12,834,30,"error"],[996,10,834,36],[996,11,834,37],[996,14,834,40],[996,20,834,46],[996,24,834,46,"_request"],[996,39,834,54],[996,41,834,55],[996,45,834,59],[996,46,834,60,"fetch"],[996,51,834,65],[996,53,834,67],[996,59,834,73],[996,61,834,75],[996,64,834,78],[996,68,834,82],[996,69,834,83,"url"],[996,72,834,86],[996,78,834,92],[996,80,834,94],[997,12,835,20,"headers"],[997,19,835,27],[997,21,835,29],[997,25,835,33],[997,26,835,34,"headers"],[997,33,835,41],[998,12,836,20,"body"],[998,16,836,24],[998,18,836,26],[999,14,837,24,"phone"],[999,19,837,29],[1000,14,838,24,"data"],[1000,18,838,28],[1000,20,838,30],[1000,21,838,31,"_c"],[1000,23,838,33],[1000,26,838,36,"options"],[1000,33,838,43],[1000,38,838,48],[1000,42,838,52],[1000,46,838,56,"options"],[1000,53,838,63],[1000,58,838,68],[1000,63,838,73],[1000,64,838,74],[1000,67,838,77],[1000,72,838,82],[1000,73,838,83],[1000,76,838,86,"options"],[1000,83,838,93],[1000,84,838,94,"data"],[1000,88,838,98],[1000,94,838,104],[1000,98,838,108],[1000,102,838,112,"_c"],[1000,104,838,114],[1000,109,838,119],[1000,114,838,124],[1000,115,838,125],[1000,118,838,128,"_c"],[1000,120,838,130],[1000,123,838,133],[1000,124,838,134],[1000,125,838,135],[1001,14,839,24,"create_user"],[1001,25,839,35],[1001,27,839,37],[1001,28,839,38,"_d"],[1001,30,839,40],[1001,33,839,43,"options"],[1001,40,839,50],[1001,45,839,55],[1001,49,839,59],[1001,53,839,63,"options"],[1001,60,839,70],[1001,65,839,75],[1001,70,839,80],[1001,71,839,81],[1001,74,839,84],[1001,79,839,89],[1001,80,839,90],[1001,83,839,93,"options"],[1001,90,839,100],[1001,91,839,101,"shouldCreateUser"],[1001,107,839,117],[1001,113,839,123],[1001,117,839,127],[1001,121,839,131,"_d"],[1001,123,839,133],[1001,128,839,138],[1001,133,839,143],[1001,134,839,144],[1001,137,839,147,"_d"],[1001,139,839,149],[1001,142,839,152],[1001,146,839,156],[1002,14,840,24,"gotrue_meta_security"],[1002,34,840,44],[1002,36,840,46],[1003,16,840,48,"captcha_token"],[1003,29,840,61],[1003,31,840,63,"options"],[1003,38,840,70],[1003,43,840,75],[1003,47,840,79],[1003,51,840,83,"options"],[1003,58,840,90],[1003,63,840,95],[1003,68,840,100],[1003,69,840,101],[1003,72,840,104],[1003,77,840,109],[1003,78,840,110],[1003,81,840,113,"options"],[1003,88,840,120],[1003,89,840,121,"captchaToken"],[1004,14,840,134],[1004,15,840,135],[1005,14,841,24,"channel"],[1005,21,841,31],[1005,23,841,33],[1005,24,841,34,"_e"],[1005,26,841,36],[1005,29,841,39,"options"],[1005,36,841,46],[1005,41,841,51],[1005,45,841,55],[1005,49,841,59,"options"],[1005,56,841,66],[1005,61,841,71],[1005,66,841,76],[1005,67,841,77],[1005,70,841,80],[1005,75,841,85],[1005,76,841,86],[1005,79,841,89,"options"],[1005,86,841,96],[1005,87,841,97,"channel"],[1005,94,841,104],[1005,100,841,110],[1005,104,841,114],[1005,108,841,118,"_e"],[1005,110,841,120],[1005,115,841,125],[1005,120,841,130],[1005,121,841,131],[1005,124,841,134,"_e"],[1005,126,841,136],[1005,129,841,139],[1006,12,842,20],[1007,10,843,16],[1007,11,843,17],[1007,12,843,18],[1008,10,844,16],[1008,17,844,23],[1009,12,844,25,"data"],[1009,16,844,29],[1009,18,844,31],[1010,14,844,33,"user"],[1010,18,844,37],[1010,20,844,39],[1010,24,844,43],[1011,14,844,45,"session"],[1011,21,844,52],[1011,23,844,54],[1011,27,844,58],[1012,14,844,60,"messageId"],[1012,23,844,69],[1012,25,844,71,"data"],[1012,29,844,75],[1012,34,844,80],[1012,38,844,84],[1012,42,844,88,"data"],[1012,46,844,92],[1012,51,844,97],[1012,56,844,102],[1012,57,844,103],[1012,60,844,106],[1012,65,844,111],[1012,66,844,112],[1012,69,844,115,"data"],[1012,73,844,119],[1012,74,844,120,"message_id"],[1013,12,844,131],[1013,13,844,132],[1014,12,844,134,"error"],[1015,10,844,140],[1015,11,844,141],[1016,8,845,12],[1017,8,846,12],[1017,14,846,18],[1017,18,846,22,"AuthInvalidCredentialsError"],[1017,53,846,49],[1017,54,846,50],[1017,105,846,101],[1017,106,846,102],[1018,6,847,8],[1018,7,847,9],[1018,8,848,8],[1018,15,848,15,"error"],[1018,20,848,20],[1018,22,848,22],[1019,8,849,12],[1019,12,849,16],[1019,16,849,16,"isAuthError"],[1019,35,849,27],[1019,37,849,28,"error"],[1019,42,849,33],[1019,43,849,34],[1019,45,849,36],[1020,10,850,16],[1020,17,850,23],[1021,12,850,25,"data"],[1021,16,850,29],[1021,18,850,31],[1022,14,850,33,"user"],[1022,18,850,37],[1022,20,850,39],[1022,24,850,43],[1023,14,850,45,"session"],[1023,21,850,52],[1023,23,850,54],[1024,12,850,59],[1024,13,850,60],[1025,12,850,62,"error"],[1026,10,850,68],[1026,11,850,69],[1027,8,851,12],[1028,8,852,12],[1028,14,852,18,"error"],[1028,19,852,23],[1029,6,853,8],[1030,4,854,4],[1031,4,855,4],[1032,0,856,0],[1033,0,857,0],[1034,4,858,4],[1034,10,858,10,"verifyOtp"],[1034,19,858,19,"verifyOtp"],[1034,20,858,20,"params"],[1034,26,858,26],[1034,28,858,28],[1035,6,859,8],[1035,10,859,12,"_a"],[1035,12,859,14],[1035,14,859,16,"_b"],[1035,16,859,18],[1036,6,860,8],[1036,10,860,12],[1037,8,861,12],[1037,12,861,16,"redirectTo"],[1037,22,861,26],[1037,25,861,29,"undefined"],[1037,34,861,38],[1038,8,862,12],[1038,12,862,16,"captchaToken"],[1038,24,862,28],[1038,27,862,31,"undefined"],[1038,36,862,40],[1039,8,863,12],[1039,12,863,16],[1039,21,863,25],[1039,25,863,29,"params"],[1039,31,863,35],[1039,33,863,37],[1040,10,864,16,"redirectTo"],[1040,20,864,26],[1040,23,864,29],[1040,24,864,30,"_a"],[1040,26,864,32],[1040,29,864,35,"params"],[1040,35,864,41],[1040,36,864,42,"options"],[1040,43,864,49],[1040,49,864,55],[1040,53,864,59],[1040,57,864,63,"_a"],[1040,59,864,65],[1040,64,864,70],[1040,69,864,75],[1040,70,864,76],[1040,73,864,79],[1040,78,864,84],[1040,79,864,85],[1040,82,864,88,"_a"],[1040,84,864,90],[1040,85,864,91,"redirectTo"],[1040,95,864,101],[1041,10,865,16,"captchaToken"],[1041,22,865,28],[1041,25,865,31],[1041,26,865,32,"_b"],[1041,28,865,34],[1041,31,865,37,"params"],[1041,37,865,43],[1041,38,865,44,"options"],[1041,45,865,51],[1041,51,865,57],[1041,55,865,61],[1041,59,865,65,"_b"],[1041,61,865,67],[1041,66,865,72],[1041,71,865,77],[1041,72,865,78],[1041,75,865,81],[1041,80,865,86],[1041,81,865,87],[1041,84,865,90,"_b"],[1041,86,865,92],[1041,87,865,93,"captchaToken"],[1041,99,865,105],[1042,8,866,12],[1043,8,867,12],[1043,14,867,18],[1044,10,867,20,"data"],[1044,14,867,24],[1045,10,867,26,"error"],[1046,8,867,32],[1046,9,867,33],[1046,12,867,36],[1046,18,867,42],[1046,22,867,42,"_request"],[1046,37,867,50],[1046,39,867,51],[1046,43,867,55],[1046,44,867,56,"fetch"],[1046,49,867,61],[1046,51,867,63],[1046,57,867,69],[1046,59,867,71],[1046,62,867,74],[1046,66,867,78],[1046,67,867,79,"url"],[1046,70,867,82],[1046,79,867,91],[1046,81,867,93],[1047,10,868,16,"headers"],[1047,17,868,23],[1047,19,868,25],[1047,23,868,29],[1047,24,868,30,"headers"],[1047,31,868,37],[1048,10,869,16,"body"],[1048,14,869,20],[1048,16,869,22,"Object"],[1048,22,869,28],[1048,23,869,29,"assign"],[1048,29,869,35],[1048,30,869,36,"Object"],[1048,36,869,42],[1048,37,869,43,"assign"],[1048,43,869,49],[1048,44,869,50],[1048,45,869,51],[1048,46,869,52],[1048,48,869,54,"params"],[1048,54,869,60],[1048,55,869,61],[1048,57,869,63],[1049,12,869,65,"gotrue_meta_security"],[1049,32,869,85],[1049,34,869,87],[1050,14,869,89,"captcha_token"],[1050,27,869,102],[1050,29,869,104,"captchaToken"],[1051,12,869,117],[1052,10,869,119],[1052,11,869,120],[1052,12,869,121],[1053,10,870,16,"redirectTo"],[1053,20,870,26],[1054,10,871,16,"xform"],[1054,15,871,21],[1054,17,871,23,"_sessionResponse"],[1055,8,872,12],[1055,9,872,13],[1055,10,872,14],[1056,8,873,12],[1056,12,873,16,"error"],[1056,17,873,21],[1056,19,873,23],[1057,10,874,16],[1057,16,874,22,"error"],[1057,21,874,27],[1058,8,875,12],[1059,8,876,12],[1059,12,876,16],[1059,13,876,17,"data"],[1059,17,876,21],[1059,19,876,23],[1060,10,877,16],[1060,16,877,22],[1060,20,877,26,"Error"],[1060,25,877,31],[1060,26,877,32],[1060,68,877,74],[1060,69,877,75],[1061,8,878,12],[1062,8,879,12],[1062,14,879,18,"session"],[1062,21,879,25],[1062,24,879,28,"data"],[1062,28,879,32],[1062,29,879,33,"session"],[1062,36,879,40],[1063,8,880,12],[1063,14,880,18,"user"],[1063,18,880,22],[1063,21,880,25,"data"],[1063,25,880,29],[1063,26,880,30,"user"],[1063,30,880,34],[1064,8,881,12],[1064,12,881,16,"session"],[1064,19,881,23],[1064,24,881,28],[1064,28,881,32],[1064,32,881,36,"session"],[1064,39,881,43],[1064,44,881,48],[1064,49,881,53],[1064,50,881,54],[1064,53,881,57],[1064,58,881,62],[1064,59,881,63],[1064,62,881,66,"session"],[1064,69,881,73],[1064,70,881,74,"access_token"],[1064,82,881,86],[1064,84,881,88],[1065,10,882,16],[1065,16,882,22],[1065,20,882,26],[1065,21,882,27,"_saveSession"],[1065,33,882,39],[1065,34,882,40,"session"],[1065,41,882,47],[1065,42,882,48],[1066,10,883,16],[1066,16,883,22],[1066,20,883,26],[1066,21,883,27,"_notifyAllSubscribers"],[1066,42,883,48],[1066,43,883,49,"params"],[1066,49,883,55],[1066,50,883,56,"type"],[1066,54,883,60],[1066,58,883,64],[1066,68,883,74],[1066,71,883,77],[1066,90,883,96],[1066,93,883,99],[1066,104,883,110],[1066,106,883,112,"session"],[1066,113,883,119],[1066,114,883,120],[1067,8,884,12],[1068,8,885,12],[1068,15,885,19],[1069,10,885,21,"data"],[1069,14,885,25],[1069,16,885,27],[1070,12,885,29,"user"],[1070,16,885,33],[1071,12,885,35,"session"],[1072,10,885,43],[1072,11,885,44],[1073,10,885,46,"error"],[1073,15,885,51],[1073,17,885,53],[1074,8,885,58],[1074,9,885,59],[1075,6,886,8],[1075,7,886,9],[1075,8,887,8],[1075,15,887,15,"error"],[1075,20,887,20],[1075,22,887,22],[1076,8,888,12],[1076,12,888,16],[1076,16,888,16,"isAuthError"],[1076,35,888,27],[1076,37,888,28,"error"],[1076,42,888,33],[1076,43,888,34],[1076,45,888,36],[1077,10,889,16],[1077,17,889,23],[1078,12,889,25,"data"],[1078,16,889,29],[1078,18,889,31],[1079,14,889,33,"user"],[1079,18,889,37],[1079,20,889,39],[1079,24,889,43],[1080,14,889,45,"session"],[1080,21,889,52],[1080,23,889,54],[1081,12,889,59],[1081,13,889,60],[1082,12,889,62,"error"],[1083,10,889,68],[1083,11,889,69],[1084,8,890,12],[1085,8,891,12],[1085,14,891,18,"error"],[1085,19,891,23],[1086,6,892,8],[1087,4,893,4],[1088,4,894,4],[1089,0,895,0],[1090,0,896,0],[1091,0,897,0],[1092,0,898,0],[1093,0,899,0],[1094,0,900,0],[1095,0,901,0],[1096,0,902,0],[1097,0,903,0],[1098,0,904,0],[1099,0,905,0],[1100,0,906,0],[1101,0,907,0],[1102,4,908,4],[1102,10,908,10,"signInWithSSO"],[1102,23,908,23,"signInWithSSO"],[1102,24,908,24,"params"],[1102,30,908,30],[1102,32,908,32],[1103,6,909,8],[1103,10,909,12,"_a"],[1103,12,909,14],[1103,14,909,16,"_b"],[1103,16,909,18],[1103,18,909,20,"_c"],[1103,20,909,22],[1104,6,910,8],[1104,10,910,12],[1105,8,911,12],[1105,12,911,16,"codeChallenge"],[1105,25,911,29],[1105,28,911,32],[1105,32,911,36],[1106,8,912,12],[1106,12,912,16,"codeChallengeMethod"],[1106,31,912,35],[1106,34,912,38],[1106,38,912,42],[1107,8,913,12],[1107,12,913,16],[1107,16,913,20],[1107,17,913,21,"flowType"],[1107,25,913,29],[1107,30,913,34],[1107,36,913,40],[1107,38,913,42],[1108,10,914,16],[1109,10,915,16],[1109,11,915,17,"codeChallenge"],[1109,24,915,30],[1109,26,915,32,"codeChallengeMethod"],[1109,45,915,51],[1109,46,915,52],[1109,49,915,55],[1109,55,915,61],[1109,59,915,61,"getCodeChallengeAndMethod"],[1109,93,915,86],[1109,95,915,87],[1109,99,915,91],[1109,100,915,92,"storage"],[1109,107,915,99],[1109,109,915,101],[1109,113,915,105],[1109,114,915,106,"storageKey"],[1109,124,915,116],[1109,125,915,117],[1110,8,916,12],[1111,8,917,12],[1111,15,917,19],[1111,21,917,25],[1111,25,917,25,"_request"],[1111,40,917,33],[1111,42,917,34],[1111,46,917,38],[1111,47,917,39,"fetch"],[1111,52,917,44],[1111,54,917,46],[1111,60,917,52],[1111,62,917,54],[1111,65,917,57],[1111,69,917,61],[1111,70,917,62,"url"],[1111,73,917,65],[1111,79,917,71],[1111,81,917,73],[1112,10,918,16,"body"],[1112,14,918,20],[1112,16,918,22,"Object"],[1112,22,918,28],[1112,23,918,29,"assign"],[1112,29,918,35],[1112,30,918,36,"Object"],[1112,36,918,42],[1112,37,918,43,"assign"],[1112,43,918,49],[1112,44,918,50,"Object"],[1112,50,918,56],[1112,51,918,57,"assign"],[1112,57,918,63],[1112,58,918,64,"Object"],[1112,64,918,70],[1112,65,918,71,"assign"],[1112,71,918,77],[1112,72,918,78,"Object"],[1112,78,918,84],[1112,79,918,85,"assign"],[1112,85,918,91],[1112,86,918,92],[1112,87,918,93],[1112,88,918,94],[1112,90,918,97],[1112,102,918,109],[1112,106,918,113,"params"],[1112,112,918,119],[1112,115,918,122],[1113,12,918,124,"provider_id"],[1113,23,918,135],[1113,25,918,137,"params"],[1113,31,918,143],[1113,32,918,144,"providerId"],[1114,10,918,155],[1114,11,918,156],[1114,14,918,159],[1114,18,918,164],[1114,19,918,165],[1114,21,918,168],[1114,29,918,176],[1114,33,918,180,"params"],[1114,39,918,186],[1114,42,918,189],[1115,12,918,191,"domain"],[1115,18,918,197],[1115,20,918,199,"params"],[1115,26,918,205],[1115,27,918,206,"domain"],[1116,10,918,213],[1116,11,918,214],[1116,14,918,217],[1116,18,918,222],[1116,19,918,223],[1116,21,918,225],[1117,12,918,227,"redirect_to"],[1117,23,918,238],[1117,25,918,240],[1117,26,918,241,"_b"],[1117,28,918,243],[1117,31,918,246],[1117,32,918,247,"_a"],[1117,34,918,249],[1117,37,918,252,"params"],[1117,43,918,258],[1117,44,918,259,"options"],[1117,51,918,266],[1117,57,918,272],[1117,61,918,276],[1117,65,918,280,"_a"],[1117,67,918,282],[1117,72,918,287],[1117,77,918,292],[1117,78,918,293],[1117,81,918,296],[1117,86,918,301],[1117,87,918,302],[1117,90,918,305,"_a"],[1117,92,918,307],[1117,93,918,308,"redirectTo"],[1117,103,918,318],[1117,109,918,324],[1117,113,918,328],[1117,117,918,332,"_b"],[1117,119,918,334],[1117,124,918,339],[1117,129,918,344],[1117,130,918,345],[1117,133,918,348,"_b"],[1117,135,918,350],[1117,138,918,353,"undefined"],[1118,10,918,363],[1118,11,918,364],[1118,12,918,365],[1118,14,918,368],[1118,15,918,369],[1118,16,918,370,"_c"],[1118,18,918,372],[1118,21,918,375,"params"],[1118,27,918,381],[1118,32,918,386],[1118,36,918,390],[1118,40,918,394,"params"],[1118,46,918,400],[1118,51,918,405],[1118,56,918,410],[1118,57,918,411],[1118,60,918,414],[1118,65,918,419],[1118,66,918,420],[1118,69,918,423,"params"],[1118,75,918,429],[1118,76,918,430,"options"],[1118,83,918,437],[1118,89,918,443],[1118,93,918,447],[1118,97,918,451,"_c"],[1118,99,918,453],[1118,104,918,458],[1118,109,918,463],[1118,110,918,464],[1118,113,918,467],[1118,118,918,472],[1118,119,918,473],[1118,122,918,476,"_c"],[1118,124,918,478],[1118,125,918,479,"captchaToken"],[1118,137,918,491],[1118,141,919,22],[1119,12,919,24,"gotrue_meta_security"],[1119,32,919,44],[1119,34,919,46],[1120,14,919,48,"captcha_token"],[1120,27,919,61],[1120,29,919,63,"params"],[1120,35,919,69],[1120,36,919,70,"options"],[1120,43,919,77],[1120,44,919,78,"captchaToken"],[1121,12,919,91],[1122,10,919,93],[1122,11,919,94],[1122,14,920,22],[1122,18,920,27],[1122,19,920,28],[1122,21,920,30],[1123,12,920,32,"skip_http_redirect"],[1123,30,920,50],[1123,32,920,52],[1123,36,920,56],[1124,12,920,58,"code_challenge"],[1124,26,920,72],[1124,28,920,74,"codeChallenge"],[1124,41,920,87],[1125,12,920,89,"code_challenge_method"],[1125,33,920,110],[1125,35,920,112,"codeChallengeMethod"],[1126,10,920,132],[1126,11,920,133],[1126,12,920,134],[1127,10,921,16,"headers"],[1127,17,921,23],[1127,19,921,25],[1127,23,921,29],[1127,24,921,30,"headers"],[1127,31,921,37],[1128,10,922,16,"xform"],[1128,15,922,21],[1128,17,922,23,"_ssoResponse"],[1129,8,923,12],[1129,9,923,13],[1129,10,923,14],[1130,6,924,8],[1130,7,924,9],[1130,8,925,8],[1130,15,925,15,"error"],[1130,20,925,20],[1130,22,925,22],[1131,8,926,12],[1131,12,926,16],[1131,16,926,16,"isAuthError"],[1131,35,926,27],[1131,37,926,28,"error"],[1131,42,926,33],[1131,43,926,34],[1131,45,926,36],[1132,10,927,16],[1132,17,927,23],[1133,12,927,25,"data"],[1133,16,927,29],[1133,18,927,31],[1133,22,927,35],[1134,12,927,37,"error"],[1135,10,927,43],[1135,11,927,44],[1136,8,928,12],[1137,8,929,12],[1137,14,929,18,"error"],[1137,19,929,23],[1138,6,930,8],[1139,4,931,4],[1140,4,932,4],[1141,0,933,0],[1142,0,934,0],[1143,0,935,0],[1144,4,936,4],[1144,10,936,10,"reauthenticate"],[1144,24,936,24,"reauthenticate"],[1144,25,936,24],[1144,27,936,27],[1145,6,937,8],[1145,12,937,14],[1145,16,937,18],[1145,17,937,19,"initializePromise"],[1145,34,937,36],[1146,6,938,8],[1146,13,938,15],[1146,19,938,21],[1146,23,938,25],[1146,24,938,26,"_acquireLock"],[1146,36,938,38],[1146,37,938,39],[1146,38,938,40],[1146,39,938,41],[1146,41,938,43],[1146,53,938,55],[1147,8,939,12],[1147,15,939,19],[1147,21,939,25],[1147,25,939,29],[1147,26,939,30,"_reauthenticate"],[1147,41,939,45],[1147,42,939,46],[1147,43,939,47],[1148,6,940,8],[1148,7,940,9],[1148,8,940,10],[1149,4,941,4],[1150,4,942,4],[1150,10,942,10,"_reauthenticate"],[1150,25,942,25,"_reauthenticate"],[1150,26,942,25],[1150,28,942,28],[1151,6,943,8],[1151,10,943,12],[1152,8,944,12],[1152,15,944,19],[1152,21,944,25],[1152,25,944,29],[1152,26,944,30,"_useSession"],[1152,37,944,41],[1152,38,944,42],[1152,44,944,49,"result"],[1152,50,944,55],[1152,54,944,60],[1153,10,945,16],[1153,16,945,22],[1154,12,945,24,"data"],[1154,16,945,28],[1154,18,945,30],[1155,14,945,32,"session"],[1156,12,945,40],[1156,13,945,41],[1157,12,945,43,"error"],[1157,17,945,48],[1157,19,945,50,"sessionError"],[1158,10,945,64],[1158,11,945,65],[1158,14,945,68,"result"],[1158,20,945,74],[1159,10,946,16],[1159,14,946,20,"sessionError"],[1159,26,946,32],[1159,28,947,20],[1159,34,947,26,"sessionError"],[1159,46,947,38],[1160,10,948,16],[1160,14,948,20],[1160,15,948,21,"session"],[1160,22,948,28],[1160,24,949,20],[1160,30,949,26],[1160,34,949,30,"AuthSessionMissingError"],[1160,65,949,53],[1160,66,949,54],[1160,67,949,55],[1161,10,950,16],[1161,16,950,22],[1162,12,950,24,"error"],[1163,10,950,30],[1163,11,950,31],[1163,14,950,34],[1163,20,950,40],[1163,24,950,40,"_request"],[1163,39,950,48],[1163,41,950,49],[1163,45,950,53],[1163,46,950,54,"fetch"],[1163,51,950,59],[1163,53,950,61],[1163,58,950,66],[1163,60,950,68],[1163,63,950,71],[1163,67,950,75],[1163,68,950,76,"url"],[1163,71,950,79],[1163,88,950,96],[1163,90,950,98],[1164,12,951,20,"headers"],[1164,19,951,27],[1164,21,951,29],[1164,25,951,33],[1164,26,951,34,"headers"],[1164,33,951,41],[1165,12,952,20,"jwt"],[1165,15,952,23],[1165,17,952,25,"session"],[1165,24,952,32],[1165,25,952,33,"access_token"],[1166,10,953,16],[1166,11,953,17],[1166,12,953,18],[1167,10,954,16],[1167,17,954,23],[1168,12,954,25,"data"],[1168,16,954,29],[1168,18,954,31],[1169,14,954,33,"user"],[1169,18,954,37],[1169,20,954,39],[1169,24,954,43],[1170,14,954,45,"session"],[1170,21,954,52],[1170,23,954,54],[1171,12,954,59],[1171,13,954,60],[1172,12,954,62,"error"],[1173,10,954,68],[1173,11,954,69],[1174,8,955,12],[1174,9,955,13],[1174,10,955,14],[1175,6,956,8],[1175,7,956,9],[1175,8,957,8],[1175,15,957,15,"error"],[1175,20,957,20],[1175,22,957,22],[1176,8,958,12],[1176,12,958,16],[1176,16,958,16,"isAuthError"],[1176,35,958,27],[1176,37,958,28,"error"],[1176,42,958,33],[1176,43,958,34],[1176,45,958,36],[1177,10,959,16],[1177,17,959,23],[1178,12,959,25,"data"],[1178,16,959,29],[1178,18,959,31],[1179,14,959,33,"user"],[1179,18,959,37],[1179,20,959,39],[1179,24,959,43],[1180,14,959,45,"session"],[1180,21,959,52],[1180,23,959,54],[1181,12,959,59],[1181,13,959,60],[1182,12,959,62,"error"],[1183,10,959,68],[1183,11,959,69],[1184,8,960,12],[1185,8,961,12],[1185,14,961,18,"error"],[1185,19,961,23],[1186,6,962,8],[1187,4,963,4],[1188,4,964,4],[1189,0,965,0],[1190,0,966,0],[1191,4,967,4],[1191,10,967,10,"resend"],[1191,16,967,16,"resend"],[1191,17,967,17,"credentials"],[1191,28,967,28],[1191,30,967,30],[1192,6,968,8],[1192,10,968,12],[1193,8,969,12],[1193,14,969,18,"endpoint"],[1193,22,969,26],[1193,25,969,29],[1193,28,969,32],[1193,32,969,36],[1193,33,969,37,"url"],[1193,36,969,40],[1193,45,969,49],[1194,8,970,12],[1194,12,970,16],[1194,19,970,23],[1194,23,970,27,"credentials"],[1194,34,970,38],[1194,36,970,40],[1195,10,971,16],[1195,16,971,22],[1196,12,971,24,"email"],[1196,17,971,29],[1197,12,971,31,"type"],[1197,16,971,35],[1198,12,971,37,"options"],[1199,10,971,45],[1199,11,971,46],[1199,14,971,49,"credentials"],[1199,25,971,60],[1200,10,972,16],[1200,16,972,22],[1201,12,972,24,"error"],[1202,10,972,30],[1202,11,972,31],[1202,14,972,34],[1202,20,972,40],[1202,24,972,40,"_request"],[1202,39,972,48],[1202,41,972,49],[1202,45,972,53],[1202,46,972,54,"fetch"],[1202,51,972,59],[1202,53,972,61],[1202,59,972,67],[1202,61,972,69,"endpoint"],[1202,69,972,77],[1202,71,972,79],[1203,12,973,20,"headers"],[1203,19,973,27],[1203,21,973,29],[1203,25,973,33],[1203,26,973,34,"headers"],[1203,33,973,41],[1204,12,974,20,"body"],[1204,16,974,24],[1204,18,974,26],[1205,14,975,24,"email"],[1205,19,975,29],[1206,14,976,24,"type"],[1206,18,976,28],[1207,14,977,24,"gotrue_meta_security"],[1207,34,977,44],[1207,36,977,46],[1208,16,977,48,"captcha_token"],[1208,29,977,61],[1208,31,977,63,"options"],[1208,38,977,70],[1208,43,977,75],[1208,47,977,79],[1208,51,977,83,"options"],[1208,58,977,90],[1208,63,977,95],[1208,68,977,100],[1208,69,977,101],[1208,72,977,104],[1208,77,977,109],[1208,78,977,110],[1208,81,977,113,"options"],[1208,88,977,120],[1208,89,977,121,"captchaToken"],[1209,14,977,134],[1210,12,978,20],[1210,13,978,21],[1211,12,979,20,"redirectTo"],[1211,22,979,30],[1211,24,979,32,"options"],[1211,31,979,39],[1211,36,979,44],[1211,40,979,48],[1211,44,979,52,"options"],[1211,51,979,59],[1211,56,979,64],[1211,61,979,69],[1211,62,979,70],[1211,65,979,73],[1211,70,979,78],[1211,71,979,79],[1211,74,979,82,"options"],[1211,81,979,89],[1211,82,979,90,"emailRedirectTo"],[1212,10,980,16],[1212,11,980,17],[1212,12,980,18],[1213,10,981,16],[1213,17,981,23],[1214,12,981,25,"data"],[1214,16,981,29],[1214,18,981,31],[1215,14,981,33,"user"],[1215,18,981,37],[1215,20,981,39],[1215,24,981,43],[1216,14,981,45,"session"],[1216,21,981,52],[1216,23,981,54],[1217,12,981,59],[1217,13,981,60],[1218,12,981,62,"error"],[1219,10,981,68],[1219,11,981,69],[1220,8,982,12],[1220,9,982,13],[1220,15,983,17],[1220,19,983,21],[1220,26,983,28],[1220,30,983,32,"credentials"],[1220,41,983,43],[1220,43,983,45],[1221,10,984,16],[1221,16,984,22],[1222,12,984,24,"phone"],[1222,17,984,29],[1223,12,984,31,"type"],[1223,16,984,35],[1224,12,984,37,"options"],[1225,10,984,45],[1225,11,984,46],[1225,14,984,49,"credentials"],[1225,25,984,60],[1226,10,985,16],[1226,16,985,22],[1227,12,985,24,"data"],[1227,16,985,28],[1228,12,985,30,"error"],[1229,10,985,36],[1229,11,985,37],[1229,14,985,40],[1229,20,985,46],[1229,24,985,46,"_request"],[1229,39,985,54],[1229,41,985,55],[1229,45,985,59],[1229,46,985,60,"fetch"],[1229,51,985,65],[1229,53,985,67],[1229,59,985,73],[1229,61,985,75,"endpoint"],[1229,69,985,83],[1229,71,985,85],[1230,12,986,20,"headers"],[1230,19,986,27],[1230,21,986,29],[1230,25,986,33],[1230,26,986,34,"headers"],[1230,33,986,41],[1231,12,987,20,"body"],[1231,16,987,24],[1231,18,987,26],[1232,14,988,24,"phone"],[1232,19,988,29],[1233,14,989,24,"type"],[1233,18,989,28],[1234,14,990,24,"gotrue_meta_security"],[1234,34,990,44],[1234,36,990,46],[1235,16,990,48,"captcha_token"],[1235,29,990,61],[1235,31,990,63,"options"],[1235,38,990,70],[1235,43,990,75],[1235,47,990,79],[1235,51,990,83,"options"],[1235,58,990,90],[1235,63,990,95],[1235,68,990,100],[1235,69,990,101],[1235,72,990,104],[1235,77,990,109],[1235,78,990,110],[1235,81,990,113,"options"],[1235,88,990,120],[1235,89,990,121,"captchaToken"],[1236,14,990,134],[1237,12,991,20],[1238,10,992,16],[1238,11,992,17],[1238,12,992,18],[1239,10,993,16],[1239,17,993,23],[1240,12,993,25,"data"],[1240,16,993,29],[1240,18,993,31],[1241,14,993,33,"user"],[1241,18,993,37],[1241,20,993,39],[1241,24,993,43],[1242,14,993,45,"session"],[1242,21,993,52],[1242,23,993,54],[1242,27,993,58],[1243,14,993,60,"messageId"],[1243,23,993,69],[1243,25,993,71,"data"],[1243,29,993,75],[1243,34,993,80],[1243,38,993,84],[1243,42,993,88,"data"],[1243,46,993,92],[1243,51,993,97],[1243,56,993,102],[1243,57,993,103],[1243,60,993,106],[1243,65,993,111],[1243,66,993,112],[1243,69,993,115,"data"],[1243,73,993,119],[1243,74,993,120,"message_id"],[1244,12,993,131],[1244,13,993,132],[1245,12,993,134,"error"],[1246,10,993,140],[1246,11,993,141],[1247,8,994,12],[1248,8,995,12],[1248,14,995,18],[1248,18,995,22,"AuthInvalidCredentialsError"],[1248,53,995,49],[1248,54,995,50],[1248,115,995,111],[1248,116,995,112],[1249,6,996,8],[1249,7,996,9],[1249,8,997,8],[1249,15,997,15,"error"],[1249,20,997,20],[1249,22,997,22],[1250,8,998,12],[1250,12,998,16],[1250,16,998,16,"isAuthError"],[1250,35,998,27],[1250,37,998,28,"error"],[1250,42,998,33],[1250,43,998,34],[1250,45,998,36],[1251,10,999,16],[1251,17,999,23],[1252,12,999,25,"data"],[1252,16,999,29],[1252,18,999,31],[1253,14,999,33,"user"],[1253,18,999,37],[1253,20,999,39],[1253,24,999,43],[1254,14,999,45,"session"],[1254,21,999,52],[1254,23,999,54],[1255,12,999,59],[1255,13,999,60],[1256,12,999,62,"error"],[1257,10,999,68],[1257,11,999,69],[1258,8,1000,12],[1259,8,1001,12],[1259,14,1001,18,"error"],[1259,19,1001,23],[1260,6,1002,8],[1261,4,1003,4],[1262,4,1004,4],[1263,0,1005,0],[1264,0,1006,0],[1265,0,1007,0],[1266,0,1008,0],[1267,0,1009,0],[1268,0,1010,0],[1269,0,1011,0],[1270,0,1012,0],[1271,0,1013,0],[1272,0,1014,0],[1273,4,1015,4],[1273,10,1015,10,"getSession"],[1273,20,1015,20,"getSession"],[1273,21,1015,20],[1273,23,1015,23],[1274,6,1016,8],[1274,12,1016,14],[1274,16,1016,18],[1274,17,1016,19,"initializePromise"],[1274,34,1016,36],[1275,6,1017,8],[1275,12,1017,14,"result"],[1275,18,1017,20],[1275,21,1017,23],[1275,27,1017,29],[1275,31,1017,33],[1275,32,1017,34,"_acquireLock"],[1275,44,1017,46],[1275,45,1017,47],[1275,46,1017,48],[1275,47,1017,49],[1275,49,1017,51],[1275,61,1017,63],[1276,8,1018,12],[1276,15,1018,19],[1276,19,1018,23],[1276,20,1018,24,"_useSession"],[1276,31,1018,35],[1276,32,1018,36],[1276,38,1018,43,"result"],[1276,44,1018,49],[1276,48,1018,54],[1277,10,1019,16],[1277,17,1019,23,"result"],[1277,23,1019,29],[1278,8,1020,12],[1278,9,1020,13],[1278,10,1020,14],[1279,6,1021,8],[1279,7,1021,9],[1279,8,1021,10],[1280,6,1022,8],[1280,13,1022,15,"result"],[1280,19,1022,21],[1281,4,1023,4],[1282,4,1024,4],[1283,0,1025,0],[1284,0,1026,0],[1285,4,1027,4],[1285,10,1027,10,"_acquireLock"],[1285,22,1027,22,"_acquireLock"],[1285,23,1027,23,"acquireTimeout"],[1285,37,1027,37],[1285,39,1027,39,"fn"],[1285,41,1027,41],[1285,43,1027,43],[1286,6,1028,8],[1286,10,1028,12],[1286,11,1028,13,"_debug"],[1286,17,1028,19],[1286,18,1028,20],[1286,33,1028,35],[1286,35,1028,37],[1286,42,1028,44],[1286,44,1028,46,"acquireTimeout"],[1286,58,1028,60],[1286,59,1028,61],[1287,6,1029,8],[1287,10,1029,12],[1288,8,1030,12],[1288,12,1030,16],[1288,16,1030,20],[1288,17,1030,21,"lockAcquired"],[1288,29,1030,33],[1288,31,1030,35],[1289,10,1031,16],[1289,16,1031,22,"last"],[1289,20,1031,26],[1289,23,1031,29],[1289,27,1031,33],[1289,28,1031,34,"pendingInLock"],[1289,41,1031,47],[1289,42,1031,48,"length"],[1289,48,1031,54],[1289,51,1032,22],[1289,55,1032,26],[1289,56,1032,27,"pendingInLock"],[1289,69,1032,40],[1289,70,1032,41],[1289,74,1032,45],[1289,75,1032,46,"pendingInLock"],[1289,88,1032,59],[1289,89,1032,60,"length"],[1289,95,1032,66],[1289,98,1032,69],[1289,99,1032,70],[1289,100,1032,71],[1289,103,1033,22,"Promise"],[1289,110,1033,29],[1289,111,1033,30,"resolve"],[1289,118,1033,37],[1289,119,1033,38],[1289,120,1033,39],[1290,10,1034,16],[1290,16,1034,22,"result"],[1290,22,1034,28],[1290,25,1034,31],[1290,26,1034,32],[1290,38,1034,44],[1291,12,1035,20],[1291,18,1035,26,"last"],[1291,22,1035,30],[1292,12,1036,20],[1292,19,1036,27],[1292,25,1036,33,"fn"],[1292,27,1036,35],[1292,28,1036,36],[1292,29,1036,37],[1293,10,1037,16],[1293,11,1037,17],[1293,13,1037,19],[1293,14,1037,20],[1294,10,1038,16],[1294,14,1038,20],[1294,15,1038,21,"pendingInLock"],[1294,28,1038,34],[1294,29,1038,35,"push"],[1294,33,1038,39],[1294,34,1038,40],[1294,35,1038,41],[1294,47,1038,53],[1295,12,1039,20],[1295,16,1039,24],[1296,14,1040,24],[1296,20,1040,30,"result"],[1296,26,1040,36],[1297,12,1041,20],[1297,13,1041,21],[1297,14,1042,20],[1297,21,1042,27,"e"],[1297,22,1042,28],[1297,24,1042,30],[1298,14,1043,24],[1299,12,1043,24],[1300,10,1045,16],[1300,11,1045,17],[1300,13,1045,19],[1300,14,1045,20],[1300,15,1045,21],[1301,10,1046,16],[1301,17,1046,23,"result"],[1301,23,1046,29],[1302,8,1047,12],[1303,8,1048,12],[1303,15,1048,19],[1303,21,1048,25],[1303,25,1048,29],[1303,26,1048,30,"lock"],[1303,30,1048,34],[1303,31,1048,35],[1303,39,1048,43],[1303,43,1048,47],[1303,44,1048,48,"storageKey"],[1303,54,1048,58],[1303,56,1048,60],[1303,58,1048,62,"acquireTimeout"],[1303,72,1048,76],[1303,74,1048,78],[1303,86,1048,90],[1304,10,1049,16],[1304,14,1049,20],[1304,15,1049,21,"_debug"],[1304,21,1049,27],[1304,22,1049,28],[1304,37,1049,43],[1304,39,1049,45],[1304,70,1049,76],[1304,72,1049,78],[1304,76,1049,82],[1304,77,1049,83,"storageKey"],[1304,87,1049,93],[1304,88,1049,94],[1305,10,1050,16],[1305,14,1050,20],[1306,12,1051,20],[1306,16,1051,24],[1306,17,1051,25,"lockAcquired"],[1306,29,1051,37],[1306,32,1051,40],[1306,36,1051,44],[1307,12,1052,20],[1307,18,1052,26,"result"],[1307,24,1052,32],[1307,27,1052,35,"fn"],[1307,29,1052,37],[1307,30,1052,38],[1307,31,1052,39],[1308,12,1053,20],[1308,16,1053,24],[1308,17,1053,25,"pendingInLock"],[1308,30,1053,38],[1308,31,1053,39,"push"],[1308,35,1053,43],[1308,36,1053,44],[1308,37,1053,45],[1308,49,1053,57],[1309,14,1054,24],[1309,18,1054,28],[1310,16,1055,28],[1310,22,1055,34,"result"],[1310,28,1055,40],[1311,14,1056,24],[1311,15,1056,25],[1311,16,1057,24],[1311,23,1057,31,"e"],[1311,24,1057,32],[1311,26,1057,34],[1312,16,1058,28],[1313,14,1058,28],[1314,12,1060,20],[1314,13,1060,21],[1314,15,1060,23],[1314,16,1060,24],[1314,17,1060,25],[1315,12,1061,20],[1315,18,1061,26,"result"],[1315,24,1061,32],[1316,12,1062,20],[1317,12,1063,20],[1317,19,1063,27],[1317,23,1063,31],[1317,24,1063,32,"pendingInLock"],[1317,37,1063,45],[1317,38,1063,46,"length"],[1317,44,1063,52],[1317,46,1063,54],[1318,14,1064,24],[1318,20,1064,30,"waitOn"],[1318,26,1064,36],[1318,29,1064,39],[1318,30,1064,40],[1318,33,1064,43],[1318,37,1064,47],[1318,38,1064,48,"pendingInLock"],[1318,51,1064,61],[1318,52,1064,62],[1319,14,1065,24],[1319,20,1065,30,"Promise"],[1319,27,1065,37],[1319,28,1065,38,"all"],[1319,31,1065,41],[1319,32,1065,42,"waitOn"],[1319,38,1065,48],[1319,39,1065,49],[1320,14,1066,24],[1320,18,1066,28],[1320,19,1066,29,"pendingInLock"],[1320,32,1066,42],[1320,33,1066,43,"splice"],[1320,39,1066,49],[1320,40,1066,50],[1320,41,1066,51],[1320,43,1066,53,"waitOn"],[1320,49,1066,59],[1320,50,1066,60,"length"],[1320,56,1066,66],[1320,57,1066,67],[1321,12,1067,20],[1322,12,1068,20],[1322,19,1068,27],[1322,25,1068,33,"result"],[1322,31,1068,39],[1323,10,1069,16],[1323,11,1069,17],[1323,20,1070,24],[1324,12,1071,20],[1324,16,1071,24],[1324,17,1071,25,"_debug"],[1324,23,1071,31],[1324,24,1071,32],[1324,39,1071,47],[1324,41,1071,49],[1324,72,1071,80],[1324,74,1071,82],[1324,78,1071,86],[1324,79,1071,87,"storageKey"],[1324,89,1071,97],[1324,90,1071,98],[1325,12,1072,20],[1325,16,1072,24],[1325,17,1072,25,"lockAcquired"],[1325,29,1072,37],[1325,32,1072,40],[1325,37,1072,45],[1326,10,1073,16],[1327,8,1074,12],[1327,9,1074,13],[1327,10,1074,14],[1328,6,1075,8],[1328,7,1075,9],[1328,16,1076,16],[1329,8,1077,12],[1329,12,1077,16],[1329,13,1077,17,"_debug"],[1329,19,1077,23],[1329,20,1077,24],[1329,35,1077,39],[1329,37,1077,41],[1329,42,1077,46],[1329,43,1077,47],[1330,6,1078,8],[1331,4,1079,4],[1332,4,1080,4],[1333,0,1081,0],[1334,0,1082,0],[1335,0,1083,0],[1336,0,1084,0],[1337,0,1085,0],[1338,4,1086,4],[1338,10,1086,10,"_useSession"],[1338,21,1086,21,"_useSession"],[1338,22,1086,22,"fn"],[1338,24,1086,24],[1338,26,1086,26],[1339,6,1087,8],[1339,10,1087,12],[1339,11,1087,13,"_debug"],[1339,17,1087,19],[1339,18,1087,20],[1339,32,1087,34],[1339,34,1087,36],[1339,41,1087,43],[1339,42,1087,44],[1340,6,1088,8],[1340,10,1088,12],[1341,8,1089,12],[1342,8,1090,12],[1342,14,1090,18,"result"],[1342,20,1090,24],[1342,23,1090,27],[1342,29,1090,33],[1342,33,1090,37],[1342,34,1090,38,"__loadSession"],[1342,47,1090,51],[1342,48,1090,52],[1342,49,1090,53],[1343,8,1091,12],[1343,15,1091,19],[1343,21,1091,25,"fn"],[1343,23,1091,27],[1343,24,1091,28,"result"],[1343,30,1091,34],[1343,31,1091,35],[1344,6,1092,8],[1344,7,1092,9],[1344,16,1093,16],[1345,8,1094,12],[1345,12,1094,16],[1345,13,1094,17,"_debug"],[1345,19,1094,23],[1345,20,1094,24],[1345,34,1094,38],[1345,36,1094,40],[1345,41,1094,45],[1345,42,1094,46],[1346,6,1095,8],[1347,4,1096,4],[1348,4,1097,4],[1349,0,1098,0],[1350,0,1099,0],[1351,0,1100,0],[1352,0,1101,0],[1353,4,1102,4],[1353,10,1102,10,"__loadSession"],[1353,23,1102,23,"__loadSession"],[1353,24,1102,23],[1353,26,1102,26],[1354,6,1103,8],[1354,10,1103,12],[1354,11,1103,13,"_debug"],[1354,17,1103,19],[1354,18,1103,20],[1354,36,1103,38],[1354,38,1103,40],[1354,45,1103,47],[1354,46,1103,48],[1355,6,1104,8],[1355,10,1104,12],[1355,11,1104,13],[1355,15,1104,17],[1355,16,1104,18,"lockAcquired"],[1355,28,1104,30],[1355,30,1104,32],[1356,8,1105,12],[1356,12,1105,16],[1356,13,1105,17,"_debug"],[1356,19,1105,23],[1356,20,1105,24],[1356,38,1105,42],[1356,40,1105,44],[1356,75,1105,79],[1356,77,1105,81],[1356,81,1105,85,"Error"],[1356,86,1105,90],[1356,87,1105,91],[1356,88,1105,92],[1356,89,1105,93,"stack"],[1356,94,1105,98],[1356,95,1105,99],[1357,6,1106,8],[1358,6,1107,8],[1358,10,1107,12],[1359,8,1108,12],[1359,12,1108,16,"currentSession"],[1359,26,1108,30],[1359,29,1108,33],[1359,33,1108,37],[1360,8,1109,12],[1360,14,1109,18,"maybeSession"],[1360,26,1109,30],[1360,29,1109,33],[1360,35,1109,39],[1360,39,1109,39,"getItemAsync"],[1360,60,1109,51],[1360,62,1109,52],[1360,66,1109,56],[1360,67,1109,57,"storage"],[1360,74,1109,64],[1360,76,1109,66],[1360,80,1109,70],[1360,81,1109,71,"storageKey"],[1360,91,1109,81],[1360,92,1109,82],[1361,8,1110,12],[1361,12,1110,16],[1361,13,1110,17,"_debug"],[1361,19,1110,23],[1361,20,1110,24],[1361,35,1110,39],[1361,37,1110,41],[1361,59,1110,63],[1361,61,1110,65,"maybeSession"],[1361,73,1110,77],[1361,74,1110,78],[1362,8,1111,12],[1362,12,1111,16,"maybeSession"],[1362,24,1111,28],[1362,29,1111,33],[1362,33,1111,37],[1362,35,1111,39],[1363,10,1112,16],[1363,14,1112,20],[1363,18,1112,24],[1363,19,1112,25,"_isValidSession"],[1363,34,1112,40],[1363,35,1112,41,"maybeSession"],[1363,47,1112,53],[1363,48,1112,54],[1363,50,1112,56],[1364,12,1113,20,"currentSession"],[1364,26,1113,34],[1364,29,1113,37,"maybeSession"],[1364,41,1113,49],[1365,10,1114,16],[1365,11,1114,17],[1365,17,1115,21],[1366,12,1116,20],[1366,16,1116,24],[1366,17,1116,25,"_debug"],[1366,23,1116,31],[1366,24,1116,32],[1366,39,1116,47],[1366,41,1116,49],[1366,76,1116,84],[1366,77,1116,85],[1367,12,1117,20],[1367,18,1117,26],[1367,22,1117,30],[1367,23,1117,31,"_removeSession"],[1367,37,1117,45],[1367,38,1117,46],[1367,39,1117,47],[1368,10,1118,16],[1369,8,1119,12],[1370,8,1120,12],[1370,12,1120,16],[1370,13,1120,17,"currentSession"],[1370,27,1120,31],[1370,29,1120,33],[1371,10,1121,16],[1371,17,1121,23],[1372,12,1121,25,"data"],[1372,16,1121,29],[1372,18,1121,31],[1373,14,1121,33,"session"],[1373,21,1121,40],[1373,23,1121,42],[1374,12,1121,47],[1374,13,1121,48],[1375,12,1121,50,"error"],[1375,17,1121,55],[1375,19,1121,57],[1376,10,1121,62],[1376,11,1121,63],[1377,8,1122,12],[1378,8,1123,12],[1379,8,1124,12],[1380,8,1125,12],[1381,8,1126,12],[1382,8,1127,12],[1383,8,1128,12],[1383,14,1128,18,"hasExpired"],[1383,24,1128,28],[1383,27,1128,31,"currentSession"],[1383,41,1128,45],[1383,42,1128,46,"expires_at"],[1383,52,1128,56],[1383,55,1129,18,"currentSession"],[1383,69,1129,32],[1383,70,1129,33,"expires_at"],[1383,80,1129,43],[1383,83,1129,46],[1383,87,1129,50],[1383,90,1129,53,"Date"],[1383,94,1129,57],[1383,95,1129,58,"now"],[1383,98,1129,61],[1383,99,1129,62],[1383,100,1129,63],[1383,103,1129,66,"EXPIRY_MARGIN_MS"],[1383,130,1129,82],[1383,133,1130,18],[1383,138,1130,23],[1384,8,1131,12],[1384,12,1131,16],[1384,13,1131,17,"_debug"],[1384,19,1131,23],[1384,20,1131,24],[1384,38,1131,42],[1384,40,1131,44],[1384,54,1131,58,"hasExpired"],[1384,64,1131,68],[1384,67,1131,71],[1384,69,1131,73],[1384,72,1131,76],[1384,78,1131,82],[1384,88,1131,92],[1384,90,1131,94],[1384,102,1131,106],[1384,104,1131,108,"currentSession"],[1384,118,1131,122],[1384,119,1131,123,"expires_at"],[1384,129,1131,133],[1384,130,1131,134],[1385,8,1132,12],[1385,12,1132,16],[1385,13,1132,17,"hasExpired"],[1385,23,1132,27],[1385,25,1132,29],[1386,10,1133,16],[1386,14,1133,20],[1386,18,1133,24],[1386,19,1133,25,"userStorage"],[1386,30,1133,36],[1386,32,1133,38],[1387,12,1134,20],[1387,18,1134,26,"maybeUser"],[1387,27,1134,35],[1387,30,1134,39],[1387,36,1134,45],[1387,40,1134,45,"getItemAsync"],[1387,61,1134,57],[1387,63,1134,58],[1387,67,1134,62],[1387,68,1134,63,"userStorage"],[1387,79,1134,74],[1387,81,1134,76],[1387,85,1134,80],[1387,86,1134,81,"storageKey"],[1387,96,1134,91],[1387,99,1134,94],[1387,106,1134,101],[1387,107,1134,103],[1388,12,1135,20],[1388,16,1135,24,"maybeUser"],[1388,25,1135,33],[1388,30,1135,38],[1388,34,1135,42],[1388,38,1135,46,"maybeUser"],[1388,47,1135,55],[1388,52,1135,60],[1388,57,1135,65],[1388,58,1135,66],[1388,61,1135,69],[1388,66,1135,74],[1388,67,1135,75],[1388,70,1135,78,"maybeUser"],[1388,79,1135,87],[1388,80,1135,88,"user"],[1388,84,1135,92],[1388,86,1135,94],[1389,14,1136,24,"currentSession"],[1389,28,1136,38],[1389,29,1136,39,"user"],[1389,33,1136,43],[1389,36,1136,46,"maybeUser"],[1389,45,1136,55],[1389,46,1136,56,"user"],[1389,50,1136,60],[1390,12,1137,20],[1390,13,1137,21],[1390,19,1138,25],[1391,14,1139,24,"currentSession"],[1391,28,1139,38],[1391,29,1139,39,"user"],[1391,33,1139,43],[1391,36,1139,46],[1391,40,1139,46,"userNotAvailableProxy"],[1391,70,1139,67],[1391,72,1139,68],[1391,73,1139,69],[1392,12,1140,20],[1393,10,1141,16],[1394,10,1142,16],[1394,14,1142,20],[1394,18,1142,24],[1394,19,1142,25,"storage"],[1394,26,1142,32],[1394,27,1142,33,"isServer"],[1394,35,1142,41],[1394,39,1142,45,"currentSession"],[1394,53,1142,59],[1394,54,1142,60,"user"],[1394,58,1142,64],[1394,60,1142,66],[1395,12,1143,20],[1395,16,1143,24,"suppressWarning"],[1395,31,1143,39],[1395,34,1143,42],[1395,38,1143,46],[1395,39,1143,47,"suppressGetSessionWarning"],[1395,64,1143,72],[1396,12,1144,20],[1396,18,1144,26,"proxySession"],[1396,30,1144,38],[1396,33,1144,41],[1396,37,1144,45,"Proxy"],[1396,42,1144,50],[1396,43,1144,51,"currentSession"],[1396,57,1144,65],[1396,59,1144,67],[1397,14,1145,24,"get"],[1397,17,1145,27],[1397,19,1145,29,"get"],[1397,20,1145,30,"target"],[1397,26,1145,36],[1397,28,1145,38,"prop"],[1397,32,1145,42],[1397,34,1145,44,"receiver"],[1397,42,1145,52],[1397,47,1145,57],[1398,16,1146,28],[1398,20,1146,32],[1398,21,1146,33,"suppressWarning"],[1398,36,1146,48],[1398,40,1146,52,"prop"],[1398,44,1146,56],[1398,49,1146,61],[1398,55,1146,67],[1398,57,1146,69],[1399,18,1147,32],[1400,18,1148,32,"console"],[1400,25,1148,39],[1400,26,1148,40,"warn"],[1400,30,1148,44],[1400,31,1148,45],[1400,384,1148,398],[1400,385,1148,399],[1401,18,1149,32,"suppressWarning"],[1401,33,1149,47],[1401,36,1149,50],[1401,40,1149,54],[1401,41,1149,55],[1401,42,1149,56],[1402,18,1150,32],[1402,22,1150,36],[1402,23,1150,37,"suppressGetSessionWarning"],[1402,48,1150,62],[1402,51,1150,65],[1402,55,1150,69],[1402,56,1150,70],[1402,57,1150,71],[1403,16,1151,28],[1404,16,1152,28],[1404,23,1152,35,"Reflect"],[1404,30,1152,42],[1404,31,1152,43,"get"],[1404,34,1152,46],[1404,35,1152,47,"target"],[1404,41,1152,53],[1404,43,1152,55,"prop"],[1404,47,1152,59],[1404,49,1152,61,"receiver"],[1404,57,1152,69],[1404,58,1152,70],[1405,14,1153,24],[1406,12,1154,20],[1406,13,1154,21],[1406,14,1154,22],[1407,12,1155,20,"currentSession"],[1407,26,1155,34],[1407,29,1155,37,"proxySession"],[1407,41,1155,49],[1408,10,1156,16],[1409,10,1157,16],[1409,17,1157,23],[1410,12,1157,25,"data"],[1410,16,1157,29],[1410,18,1157,31],[1411,14,1157,33,"session"],[1411,21,1157,40],[1411,23,1157,42,"currentSession"],[1412,12,1157,57],[1412,13,1157,58],[1413,12,1157,60,"error"],[1413,17,1157,65],[1413,19,1157,67],[1414,10,1157,72],[1414,11,1157,73],[1415,8,1158,12],[1416,8,1159,12],[1416,14,1159,18],[1417,10,1159,20,"data"],[1417,14,1159,24],[1417,16,1159,26,"session"],[1417,23,1159,33],[1418,10,1159,35,"error"],[1419,8,1159,41],[1419,9,1159,42],[1419,12,1159,45],[1419,18,1159,51],[1419,22,1159,55],[1419,23,1159,56,"_callRefreshToken"],[1419,40,1159,73],[1419,41,1159,74,"currentSession"],[1419,55,1159,88],[1419,56,1159,89,"refresh_token"],[1419,69,1159,102],[1419,70,1159,103],[1420,8,1160,12],[1420,12,1160,16,"error"],[1420,17,1160,21],[1420,19,1160,23],[1421,10,1161,16],[1421,17,1161,23],[1422,12,1161,25,"data"],[1422,16,1161,29],[1422,18,1161,31],[1423,14,1161,33,"session"],[1423,21,1161,40],[1423,23,1161,42],[1424,12,1161,47],[1424,13,1161,48],[1425,12,1161,50,"error"],[1426,10,1161,56],[1426,11,1161,57],[1427,8,1162,12],[1428,8,1163,12],[1428,15,1163,19],[1429,10,1163,21,"data"],[1429,14,1163,25],[1429,16,1163,27],[1430,12,1163,29,"session"],[1431,10,1163,37],[1431,11,1163,38],[1432,10,1163,40,"error"],[1432,15,1163,45],[1432,17,1163,47],[1433,8,1163,52],[1433,9,1163,53],[1434,6,1164,8],[1434,7,1164,9],[1434,16,1165,16],[1435,8,1166,12],[1435,12,1166,16],[1435,13,1166,17,"_debug"],[1435,19,1166,23],[1435,20,1166,24],[1435,38,1166,42],[1435,40,1166,44],[1435,45,1166,49],[1435,46,1166,50],[1436,6,1167,8],[1437,4,1168,4],[1438,4,1169,4],[1439,0,1170,0],[1440,0,1171,0],[1441,0,1172,0],[1442,0,1173,0],[1443,0,1174,0],[1444,0,1175,0],[1445,4,1176,4],[1445,10,1176,10,"getUser"],[1445,17,1176,17,"getUser"],[1445,18,1176,18,"jwt"],[1445,21,1176,21],[1445,23,1176,23],[1446,6,1177,8],[1446,10,1177,12,"jwt"],[1446,13,1177,15],[1446,15,1177,17],[1447,8,1178,12],[1447,15,1178,19],[1447,21,1178,25],[1447,25,1178,29],[1447,26,1178,30,"_getUser"],[1447,34,1178,38],[1447,35,1178,39,"jwt"],[1447,38,1178,42],[1447,39,1178,43],[1448,6,1179,8],[1449,6,1180,8],[1449,12,1180,14],[1449,16,1180,18],[1449,17,1180,19,"initializePromise"],[1449,34,1180,36],[1450,6,1181,8],[1450,12,1181,14,"result"],[1450,18,1181,20],[1450,21,1181,23],[1450,27,1181,29],[1450,31,1181,33],[1450,32,1181,34,"_acquireLock"],[1450,44,1181,46],[1450,45,1181,47],[1450,46,1181,48],[1450,47,1181,49],[1450,49,1181,51],[1450,61,1181,63],[1451,8,1182,12],[1451,15,1182,19],[1451,21,1182,25],[1451,25,1182,29],[1451,26,1182,30,"_getUser"],[1451,34,1182,38],[1451,35,1182,39],[1451,36,1182,40],[1452,6,1183,8],[1452,7,1183,9],[1452,8,1183,10],[1453,6,1184,8],[1453,13,1184,15,"result"],[1453,19,1184,21],[1454,4,1185,4],[1455,4,1186,4],[1455,10,1186,10,"_getUser"],[1455,18,1186,18,"_getUser"],[1455,19,1186,19,"jwt"],[1455,22,1186,22],[1455,24,1186,24],[1456,6,1187,8],[1456,10,1187,12],[1457,8,1188,12],[1457,12,1188,16,"jwt"],[1457,15,1188,19],[1457,17,1188,21],[1458,10,1189,16],[1458,17,1189,23],[1458,23,1189,29],[1458,27,1189,29,"_request"],[1458,42,1189,37],[1458,44,1189,38],[1458,48,1189,42],[1458,49,1189,43,"fetch"],[1458,54,1189,48],[1458,56,1189,50],[1458,61,1189,55],[1458,63,1189,57],[1458,66,1189,60],[1458,70,1189,64],[1458,71,1189,65,"url"],[1458,74,1189,68],[1458,81,1189,75],[1458,83,1189,77],[1459,12,1190,20,"headers"],[1459,19,1190,27],[1459,21,1190,29],[1459,25,1190,33],[1459,26,1190,34,"headers"],[1459,33,1190,41],[1460,12,1191,20,"jwt"],[1460,15,1191,23],[1460,17,1191,25,"jwt"],[1460,20,1191,28],[1461,12,1192,20,"xform"],[1461,17,1192,25],[1461,19,1192,27,"_userResponse"],[1462,10,1193,16],[1462,11,1193,17],[1462,12,1193,18],[1463,8,1194,12],[1464,8,1195,12],[1464,15,1195,19],[1464,21,1195,25],[1464,25,1195,29],[1464,26,1195,30,"_useSession"],[1464,37,1195,41],[1464,38,1195,42],[1464,44,1195,49,"result"],[1464,50,1195,55],[1464,54,1195,60],[1465,10,1196,16],[1465,14,1196,20,"_a"],[1465,16,1196,22],[1465,18,1196,24,"_b"],[1465,20,1196,26],[1465,22,1196,28,"_c"],[1465,24,1196,30],[1466,10,1197,16],[1466,16,1197,22],[1467,12,1197,24,"data"],[1467,16,1197,28],[1468,12,1197,30,"error"],[1469,10,1197,36],[1469,11,1197,37],[1469,14,1197,40,"result"],[1469,20,1197,46],[1470,10,1198,16],[1470,14,1198,20,"error"],[1470,19,1198,25],[1470,21,1198,27],[1471,12,1199,20],[1471,18,1199,26,"error"],[1471,23,1199,31],[1472,10,1200,16],[1473,10,1201,16],[1474,10,1202,16],[1474,14,1202,20],[1474,16,1202,22],[1474,17,1202,23,"_a"],[1474,19,1202,25],[1474,22,1202,28,"data"],[1474,26,1202,32],[1474,27,1202,33,"session"],[1474,34,1202,40],[1474,40,1202,46],[1474,44,1202,50],[1474,48,1202,54,"_a"],[1474,50,1202,56],[1474,55,1202,61],[1474,60,1202,66],[1474,61,1202,67],[1474,64,1202,70],[1474,69,1202,75],[1474,70,1202,76],[1474,73,1202,79,"_a"],[1474,75,1202,81],[1474,76,1202,82,"access_token"],[1474,88,1202,94],[1474,89,1202,95],[1474,93,1202,99],[1474,94,1202,100],[1474,98,1202,104],[1474,99,1202,105,"hasCustomAuthorizationHeader"],[1474,127,1202,133],[1474,129,1202,135],[1475,12,1203,20],[1475,19,1203,27],[1476,14,1203,29,"data"],[1476,18,1203,33],[1476,20,1203,35],[1477,16,1203,37,"user"],[1477,20,1203,41],[1477,22,1203,43],[1478,14,1203,48],[1478,15,1203,49],[1479,14,1203,51,"error"],[1479,19,1203,56],[1479,21,1203,58],[1479,25,1203,62,"AuthSessionMissingError"],[1479,56,1203,85],[1479,57,1203,86],[1480,12,1203,88],[1480,13,1203,89],[1481,10,1204,16],[1482,10,1205,16],[1482,17,1205,23],[1482,23,1205,29],[1482,27,1205,29,"_request"],[1482,42,1205,37],[1482,44,1205,38],[1482,48,1205,42],[1482,49,1205,43,"fetch"],[1482,54,1205,48],[1482,56,1205,50],[1482,61,1205,55],[1482,63,1205,57],[1482,66,1205,60],[1482,70,1205,64],[1482,71,1205,65,"url"],[1482,74,1205,68],[1482,81,1205,75],[1482,83,1205,77],[1483,12,1206,20,"headers"],[1483,19,1206,27],[1483,21,1206,29],[1483,25,1206,33],[1483,26,1206,34,"headers"],[1483,33,1206,41],[1484,12,1207,20,"jwt"],[1484,15,1207,23],[1484,17,1207,25],[1484,18,1207,26,"_c"],[1484,20,1207,28],[1484,23,1207,31],[1484,24,1207,32,"_b"],[1484,26,1207,34],[1484,29,1207,37,"data"],[1484,33,1207,41],[1484,34,1207,42,"session"],[1484,41,1207,49],[1484,47,1207,55],[1484,51,1207,59],[1484,55,1207,63,"_b"],[1484,57,1207,65],[1484,62,1207,70],[1484,67,1207,75],[1484,68,1207,76],[1484,71,1207,79],[1484,76,1207,84],[1484,77,1207,85],[1484,80,1207,88,"_b"],[1484,82,1207,90],[1484,83,1207,91,"access_token"],[1484,95,1207,103],[1484,101,1207,109],[1484,105,1207,113],[1484,109,1207,117,"_c"],[1484,111,1207,119],[1484,116,1207,124],[1484,121,1207,129],[1484,122,1207,130],[1484,125,1207,133,"_c"],[1484,127,1207,135],[1484,130,1207,138,"undefined"],[1484,139,1207,147],[1485,12,1208,20,"xform"],[1485,17,1208,25],[1485,19,1208,27,"_userResponse"],[1486,10,1209,16],[1486,11,1209,17],[1486,12,1209,18],[1487,8,1210,12],[1487,9,1210,13],[1487,10,1210,14],[1488,6,1211,8],[1488,7,1211,9],[1488,8,1212,8],[1488,15,1212,15,"error"],[1488,20,1212,20],[1488,22,1212,22],[1489,8,1213,12],[1489,12,1213,16],[1489,16,1213,16,"isAuthError"],[1489,35,1213,27],[1489,37,1213,28,"error"],[1489,42,1213,33],[1489,43,1213,34],[1489,45,1213,36],[1490,10,1214,16],[1490,14,1214,20],[1490,18,1214,20,"isAuthSessionMissingError"],[1490,51,1214,45],[1490,53,1214,46,"error"],[1490,58,1214,51],[1490,59,1214,52],[1490,61,1214,54],[1491,12,1215,20],[1492,12,1216,20],[1493,12,1217,20],[1493,18,1217,26],[1493,22,1217,30],[1493,23,1217,31,"_removeSession"],[1493,37,1217,45],[1493,38,1217,46],[1493,39,1217,47],[1494,12,1218,20],[1494,18,1218,26],[1494,22,1218,26,"removeItemAsync"],[1494,46,1218,41],[1494,48,1218,42],[1494,52,1218,46],[1494,53,1218,47,"storage"],[1494,60,1218,54],[1494,62,1218,56],[1494,65,1218,59],[1494,69,1218,63],[1494,70,1218,64,"storageKey"],[1494,80,1218,74],[1494,96,1218,90],[1494,97,1218,91],[1495,10,1219,16],[1496,10,1220,16],[1496,17,1220,23],[1497,12,1220,25,"data"],[1497,16,1220,29],[1497,18,1220,31],[1498,14,1220,33,"user"],[1498,18,1220,37],[1498,20,1220,39],[1499,12,1220,44],[1499,13,1220,45],[1500,12,1220,47,"error"],[1501,10,1220,53],[1501,11,1220,54],[1502,8,1221,12],[1503,8,1222,12],[1503,14,1222,18,"error"],[1503,19,1222,23],[1504,6,1223,8],[1505,4,1224,4],[1506,4,1225,4],[1507,0,1226,0],[1508,0,1227,0],[1509,4,1228,4],[1509,10,1228,10,"updateUser"],[1509,20,1228,20,"updateUser"],[1509,21,1228,21,"attributes"],[1509,31,1228,31],[1509,33,1228,33,"options"],[1509,40,1228,40],[1509,43,1228,43],[1509,44,1228,44],[1509,45,1228,45],[1509,47,1228,47],[1510,6,1229,8],[1510,12,1229,14],[1510,16,1229,18],[1510,17,1229,19,"initializePromise"],[1510,34,1229,36],[1511,6,1230,8],[1511,13,1230,15],[1511,19,1230,21],[1511,23,1230,25],[1511,24,1230,26,"_acquireLock"],[1511,36,1230,38],[1511,37,1230,39],[1511,38,1230,40],[1511,39,1230,41],[1511,41,1230,43],[1511,53,1230,55],[1512,8,1231,12],[1512,15,1231,19],[1512,21,1231,25],[1512,25,1231,29],[1512,26,1231,30,"_updateUser"],[1512,37,1231,41],[1512,38,1231,42,"attributes"],[1512,48,1231,52],[1512,50,1231,54,"options"],[1512,57,1231,61],[1512,58,1231,62],[1513,6,1232,8],[1513,7,1232,9],[1513,8,1232,10],[1514,4,1233,4],[1515,4,1234,4],[1515,10,1234,10,"_updateUser"],[1515,21,1234,21,"_updateUser"],[1515,22,1234,22,"attributes"],[1515,32,1234,32],[1515,34,1234,34,"options"],[1515,41,1234,41],[1515,44,1234,44],[1515,45,1234,45],[1515,46,1234,46],[1515,48,1234,48],[1516,6,1235,8],[1516,10,1235,12],[1517,8,1236,12],[1517,15,1236,19],[1517,21,1236,25],[1517,25,1236,29],[1517,26,1236,30,"_useSession"],[1517,37,1236,41],[1517,38,1236,42],[1517,44,1236,49,"result"],[1517,50,1236,55],[1517,54,1236,60],[1518,10,1237,16],[1518,16,1237,22],[1519,12,1237,24,"data"],[1519,16,1237,28],[1519,18,1237,30,"sessionData"],[1519,29,1237,41],[1520,12,1237,43,"error"],[1520,17,1237,48],[1520,19,1237,50,"sessionError"],[1521,10,1237,63],[1521,11,1237,64],[1521,14,1237,67,"result"],[1521,20,1237,73],[1522,10,1238,16],[1522,14,1238,20,"sessionError"],[1522,26,1238,32],[1522,28,1238,34],[1523,12,1239,20],[1523,18,1239,26,"sessionError"],[1523,30,1239,38],[1524,10,1240,16],[1525,10,1241,16],[1525,14,1241,20],[1525,15,1241,21,"sessionData"],[1525,26,1241,32],[1525,27,1241,33,"session"],[1525,34,1241,40],[1525,36,1241,42],[1526,12,1242,20],[1526,18,1242,26],[1526,22,1242,30,"AuthSessionMissingError"],[1526,53,1242,53],[1526,54,1242,54],[1526,55,1242,55],[1527,10,1243,16],[1528,10,1244,16],[1528,16,1244,22,"session"],[1528,23,1244,29],[1528,26,1244,32,"sessionData"],[1528,37,1244,43],[1528,38,1244,44,"session"],[1528,45,1244,51],[1529,10,1245,16],[1529,14,1245,20,"codeChallenge"],[1529,27,1245,33],[1529,30,1245,36],[1529,34,1245,40],[1530,10,1246,16],[1530,14,1246,20,"codeChallengeMethod"],[1530,33,1246,39],[1530,36,1246,42],[1530,40,1246,46],[1531,10,1247,16],[1531,14,1247,20],[1531,18,1247,24],[1531,19,1247,25,"flowType"],[1531,27,1247,33],[1531,32,1247,38],[1531,38,1247,44],[1531,42,1247,48,"attributes"],[1531,52,1247,58],[1531,53,1247,59,"email"],[1531,58,1247,64],[1531,62,1247,68],[1531,66,1247,72],[1531,68,1247,74],[1532,12,1248,20],[1533,12,1249,20],[1533,13,1249,21,"codeChallenge"],[1533,26,1249,34],[1533,28,1249,36,"codeChallengeMethod"],[1533,47,1249,55],[1533,48,1249,56],[1533,51,1249,59],[1533,57,1249,65],[1533,61,1249,65,"getCodeChallengeAndMethod"],[1533,95,1249,90],[1533,97,1249,91],[1533,101,1249,95],[1533,102,1249,96,"storage"],[1533,109,1249,103],[1533,111,1249,105],[1533,115,1249,109],[1533,116,1249,110,"storageKey"],[1533,126,1249,120],[1533,127,1249,121],[1534,10,1250,16],[1535,10,1251,16],[1535,16,1251,22],[1536,12,1251,24,"data"],[1536,16,1251,28],[1537,12,1251,30,"error"],[1537,17,1251,35],[1537,19,1251,37,"userError"],[1538,10,1251,47],[1538,11,1251,48],[1538,14,1251,51],[1538,20,1251,57],[1538,24,1251,57,"_request"],[1538,39,1251,65],[1538,41,1251,66],[1538,45,1251,70],[1538,46,1251,71,"fetch"],[1538,51,1251,76],[1538,53,1251,78],[1538,58,1251,83],[1538,60,1251,85],[1538,63,1251,88],[1538,67,1251,92],[1538,68,1251,93,"url"],[1538,71,1251,96],[1538,78,1251,103],[1538,80,1251,105],[1539,12,1252,20,"headers"],[1539,19,1252,27],[1539,21,1252,29],[1539,25,1252,33],[1539,26,1252,34,"headers"],[1539,33,1252,41],[1540,12,1253,20,"redirectTo"],[1540,22,1253,30],[1540,24,1253,32,"options"],[1540,31,1253,39],[1540,36,1253,44],[1540,40,1253,48],[1540,44,1253,52,"options"],[1540,51,1253,59],[1540,56,1253,64],[1540,61,1253,69],[1540,62,1253,70],[1540,65,1253,73],[1540,70,1253,78],[1540,71,1253,79],[1540,74,1253,82,"options"],[1540,81,1253,89],[1540,82,1253,90,"emailRedirectTo"],[1540,97,1253,105],[1541,12,1254,20,"body"],[1541,16,1254,24],[1541,18,1254,26,"Object"],[1541,24,1254,32],[1541,25,1254,33,"assign"],[1541,31,1254,39],[1541,32,1254,40,"Object"],[1541,38,1254,46],[1541,39,1254,47,"assign"],[1541,45,1254,53],[1541,46,1254,54],[1541,47,1254,55],[1541,48,1254,56],[1541,50,1254,58,"attributes"],[1541,60,1254,68],[1541,61,1254,69],[1541,63,1254,71],[1542,14,1254,73,"code_challenge"],[1542,28,1254,87],[1542,30,1254,89,"codeChallenge"],[1542,43,1254,102],[1543,14,1254,104,"code_challenge_method"],[1543,35,1254,125],[1543,37,1254,127,"codeChallengeMethod"],[1544,12,1254,147],[1544,13,1254,148],[1544,14,1254,149],[1545,12,1255,20,"jwt"],[1545,15,1255,23],[1545,17,1255,25,"session"],[1545,24,1255,32],[1545,25,1255,33,"access_token"],[1545,37,1255,45],[1546,12,1256,20,"xform"],[1546,17,1256,25],[1546,19,1256,27,"_userResponse"],[1547,10,1257,16],[1547,11,1257,17],[1547,12,1257,18],[1548,10,1258,16],[1548,14,1258,20,"userError"],[1548,23,1258,29],[1548,25,1259,20],[1548,31,1259,26,"userError"],[1548,40,1259,35],[1549,10,1260,16,"session"],[1549,17,1260,23],[1549,18,1260,24,"user"],[1549,22,1260,28],[1549,25,1260,31,"data"],[1549,29,1260,35],[1549,30,1260,36,"user"],[1549,34,1260,40],[1550,10,1261,16],[1550,16,1261,22],[1550,20,1261,26],[1550,21,1261,27,"_saveSession"],[1550,33,1261,39],[1550,34,1261,40,"session"],[1550,41,1261,47],[1550,42,1261,48],[1551,10,1262,16],[1551,16,1262,22],[1551,20,1262,26],[1551,21,1262,27,"_notifyAllSubscribers"],[1551,42,1262,48],[1551,43,1262,49],[1551,57,1262,63],[1551,59,1262,65,"session"],[1551,66,1262,72],[1551,67,1262,73],[1552,10,1263,16],[1552,17,1263,23],[1553,12,1263,25,"data"],[1553,16,1263,29],[1553,18,1263,31],[1554,14,1263,33,"user"],[1554,18,1263,37],[1554,20,1263,39,"session"],[1554,27,1263,46],[1554,28,1263,47,"user"],[1555,12,1263,52],[1555,13,1263,53],[1556,12,1263,55,"error"],[1556,17,1263,60],[1556,19,1263,62],[1557,10,1263,67],[1557,11,1263,68],[1558,8,1264,12],[1558,9,1264,13],[1558,10,1264,14],[1559,6,1265,8],[1559,7,1265,9],[1559,8,1266,8],[1559,15,1266,15,"error"],[1559,20,1266,20],[1559,22,1266,22],[1560,8,1267,12],[1560,12,1267,16],[1560,16,1267,16,"isAuthError"],[1560,35,1267,27],[1560,37,1267,28,"error"],[1560,42,1267,33],[1560,43,1267,34],[1560,45,1267,36],[1561,10,1268,16],[1561,17,1268,23],[1562,12,1268,25,"data"],[1562,16,1268,29],[1562,18,1268,31],[1563,14,1268,33,"user"],[1563,18,1268,37],[1563,20,1268,39],[1564,12,1268,44],[1564,13,1268,45],[1565,12,1268,47,"error"],[1566,10,1268,53],[1566,11,1268,54],[1567,8,1269,12],[1568,8,1270,12],[1568,14,1270,18,"error"],[1568,19,1270,23],[1569,6,1271,8],[1570,4,1272,4],[1571,4,1273,4],[1572,0,1274,0],[1573,0,1275,0],[1574,0,1276,0],[1575,0,1277,0],[1576,4,1278,4],[1576,10,1278,10,"setSession"],[1576,20,1278,20,"setSession"],[1576,21,1278,21,"currentSession"],[1576,35,1278,35],[1576,37,1278,37],[1577,6,1279,8],[1577,12,1279,14],[1577,16,1279,18],[1577,17,1279,19,"initializePromise"],[1577,34,1279,36],[1578,6,1280,8],[1578,13,1280,15],[1578,19,1280,21],[1578,23,1280,25],[1578,24,1280,26,"_acquireLock"],[1578,36,1280,38],[1578,37,1280,39],[1578,38,1280,40],[1578,39,1280,41],[1578,41,1280,43],[1578,53,1280,55],[1579,8,1281,12],[1579,15,1281,19],[1579,21,1281,25],[1579,25,1281,29],[1579,26,1281,30,"_setSession"],[1579,37,1281,41],[1579,38,1281,42,"currentSession"],[1579,52,1281,56],[1579,53,1281,57],[1580,6,1282,8],[1580,7,1282,9],[1580,8,1282,10],[1581,4,1283,4],[1582,4,1284,4],[1582,10,1284,10,"_setSession"],[1582,21,1284,21,"_setSession"],[1582,22,1284,22,"currentSession"],[1582,36,1284,36],[1582,38,1284,38],[1583,6,1285,8],[1583,10,1285,12],[1584,8,1286,12],[1584,12,1286,16],[1584,13,1286,17,"currentSession"],[1584,27,1286,31],[1584,28,1286,32,"access_token"],[1584,40,1286,44],[1584,44,1286,48],[1584,45,1286,49,"currentSession"],[1584,59,1286,63],[1584,60,1286,64,"refresh_token"],[1584,73,1286,77],[1584,75,1286,79],[1585,10,1287,16],[1585,16,1287,22],[1585,20,1287,26,"AuthSessionMissingError"],[1585,51,1287,49],[1585,52,1287,50],[1585,53,1287,51],[1586,8,1288,12],[1587,8,1289,12],[1587,14,1289,18,"timeNow"],[1587,21,1289,25],[1587,24,1289,28,"Date"],[1587,28,1289,32],[1587,29,1289,33,"now"],[1587,32,1289,36],[1587,33,1289,37],[1587,34,1289,38],[1587,37,1289,41],[1587,41,1289,45],[1588,8,1290,12],[1588,12,1290,16,"expiresAt"],[1588,21,1290,25],[1588,24,1290,28,"timeNow"],[1588,31,1290,35],[1589,8,1291,12],[1589,12,1291,16,"hasExpired"],[1589,22,1291,26],[1589,25,1291,29],[1589,29,1291,33],[1590,8,1292,12],[1590,12,1292,16,"session"],[1590,19,1292,23],[1590,22,1292,26],[1590,26,1292,30],[1591,8,1293,12],[1591,14,1293,18],[1592,10,1293,20,"payload"],[1593,8,1293,28],[1593,9,1293,29],[1593,12,1293,32],[1593,16,1293,32,"decodeJWT"],[1593,34,1293,41],[1593,36,1293,42,"currentSession"],[1593,50,1293,56],[1593,51,1293,57,"access_token"],[1593,63,1293,69],[1593,64,1293,70],[1594,8,1294,12],[1594,12,1294,16,"payload"],[1594,19,1294,23],[1594,20,1294,24,"exp"],[1594,23,1294,27],[1594,25,1294,29],[1595,10,1295,16,"expiresAt"],[1595,19,1295,25],[1595,22,1295,28,"payload"],[1595,29,1295,35],[1595,30,1295,36,"exp"],[1595,33,1295,39],[1596,10,1296,16,"hasExpired"],[1596,20,1296,26],[1596,23,1296,29,"expiresAt"],[1596,32,1296,38],[1596,36,1296,42,"timeNow"],[1596,43,1296,49],[1597,8,1297,12],[1598,8,1298,12],[1598,12,1298,16,"hasExpired"],[1598,22,1298,26],[1598,24,1298,28],[1599,10,1299,16],[1599,16,1299,22],[1600,12,1299,24,"data"],[1600,16,1299,28],[1600,18,1299,30,"refreshedSession"],[1600,34,1299,46],[1601,12,1299,48,"error"],[1602,10,1299,54],[1602,11,1299,55],[1602,14,1299,58],[1602,20,1299,64],[1602,24,1299,68],[1602,25,1299,69,"_callRefreshToken"],[1602,42,1299,86],[1602,43,1299,87,"currentSession"],[1602,57,1299,101],[1602,58,1299,102,"refresh_token"],[1602,71,1299,115],[1602,72,1299,116],[1603,10,1300,16],[1603,14,1300,20,"error"],[1603,19,1300,25],[1603,21,1300,27],[1604,12,1301,20],[1604,19,1301,27],[1605,14,1301,29,"data"],[1605,18,1301,33],[1605,20,1301,35],[1606,16,1301,37,"user"],[1606,20,1301,41],[1606,22,1301,43],[1606,26,1301,47],[1607,16,1301,49,"session"],[1607,23,1301,56],[1607,25,1301,58],[1608,14,1301,63],[1608,15,1301,64],[1609,14,1301,66,"error"],[1609,19,1301,71],[1609,21,1301,73,"error"],[1610,12,1301,79],[1610,13,1301,80],[1611,10,1302,16],[1612,10,1303,16],[1612,14,1303,20],[1612,15,1303,21,"refreshedSession"],[1612,31,1303,37],[1612,33,1303,39],[1613,12,1304,20],[1613,19,1304,27],[1614,14,1304,29,"data"],[1614,18,1304,33],[1614,20,1304,35],[1615,16,1304,37,"user"],[1615,20,1304,41],[1615,22,1304,43],[1615,26,1304,47],[1616,16,1304,49,"session"],[1616,23,1304,56],[1616,25,1304,58],[1617,14,1304,63],[1617,15,1304,64],[1618,14,1304,66,"error"],[1618,19,1304,71],[1618,21,1304,73],[1619,12,1304,78],[1619,13,1304,79],[1620,10,1305,16],[1621,10,1306,16,"session"],[1621,17,1306,23],[1621,20,1306,26,"refreshedSession"],[1621,36,1306,42],[1622,8,1307,12],[1622,9,1307,13],[1622,15,1308,17],[1623,10,1309,16],[1623,16,1309,22],[1624,12,1309,24,"data"],[1624,16,1309,28],[1625,12,1309,30,"error"],[1626,10,1309,36],[1626,11,1309,37],[1626,14,1309,40],[1626,20,1309,46],[1626,24,1309,50],[1626,25,1309,51,"_getUser"],[1626,33,1309,59],[1626,34,1309,60,"currentSession"],[1626,48,1309,74],[1626,49,1309,75,"access_token"],[1626,61,1309,87],[1626,62,1309,88],[1627,10,1310,16],[1627,14,1310,20,"error"],[1627,19,1310,25],[1627,21,1310,27],[1628,12,1311,20],[1628,18,1311,26,"error"],[1628,23,1311,31],[1629,10,1312,16],[1630,10,1313,16,"session"],[1630,17,1313,23],[1630,20,1313,26],[1631,12,1314,20,"access_token"],[1631,24,1314,32],[1631,26,1314,34,"currentSession"],[1631,40,1314,48],[1631,41,1314,49,"access_token"],[1631,53,1314,61],[1632,12,1315,20,"refresh_token"],[1632,25,1315,33],[1632,27,1315,35,"currentSession"],[1632,41,1315,49],[1632,42,1315,50,"refresh_token"],[1632,55,1315,63],[1633,12,1316,20,"user"],[1633,16,1316,24],[1633,18,1316,26,"data"],[1633,22,1316,30],[1633,23,1316,31,"user"],[1633,27,1316,35],[1634,12,1317,20,"token_type"],[1634,22,1317,30],[1634,24,1317,32],[1634,32,1317,40],[1635,12,1318,20,"expires_in"],[1635,22,1318,30],[1635,24,1318,32,"expiresAt"],[1635,33,1318,41],[1635,36,1318,44,"timeNow"],[1635,43,1318,51],[1636,12,1319,20,"expires_at"],[1636,22,1319,30],[1636,24,1319,32,"expiresAt"],[1637,10,1320,16],[1637,11,1320,17],[1638,10,1321,16],[1638,16,1321,22],[1638,20,1321,26],[1638,21,1321,27,"_saveSession"],[1638,33,1321,39],[1638,34,1321,40,"session"],[1638,41,1321,47],[1638,42,1321,48],[1639,10,1322,16],[1639,16,1322,22],[1639,20,1322,26],[1639,21,1322,27,"_notifyAllSubscribers"],[1639,42,1322,48],[1639,43,1322,49],[1639,54,1322,60],[1639,56,1322,62,"session"],[1639,63,1322,69],[1639,64,1322,70],[1640,8,1323,12],[1641,8,1324,12],[1641,15,1324,19],[1642,10,1324,21,"data"],[1642,14,1324,25],[1642,16,1324,27],[1643,12,1324,29,"user"],[1643,16,1324,33],[1643,18,1324,35,"session"],[1643,25,1324,42],[1643,26,1324,43,"user"],[1643,30,1324,47],[1644,12,1324,49,"session"],[1645,10,1324,57],[1645,11,1324,58],[1646,10,1324,60,"error"],[1646,15,1324,65],[1646,17,1324,67],[1647,8,1324,72],[1647,9,1324,73],[1648,6,1325,8],[1648,7,1325,9],[1648,8,1326,8],[1648,15,1326,15,"error"],[1648,20,1326,20],[1648,22,1326,22],[1649,8,1327,12],[1649,12,1327,16],[1649,16,1327,16,"isAuthError"],[1649,35,1327,27],[1649,37,1327,28,"error"],[1649,42,1327,33],[1649,43,1327,34],[1649,45,1327,36],[1650,10,1328,16],[1650,17,1328,23],[1651,12,1328,25,"data"],[1651,16,1328,29],[1651,18,1328,31],[1652,14,1328,33,"session"],[1652,21,1328,40],[1652,23,1328,42],[1652,27,1328,46],[1653,14,1328,48,"user"],[1653,18,1328,52],[1653,20,1328,54],[1654,12,1328,59],[1654,13,1328,60],[1655,12,1328,62,"error"],[1656,10,1328,68],[1656,11,1328,69],[1657,8,1329,12],[1658,8,1330,12],[1658,14,1330,18,"error"],[1658,19,1330,23],[1659,6,1331,8],[1660,4,1332,4],[1661,4,1333,4],[1662,0,1334,0],[1663,0,1335,0],[1664,0,1336,0],[1665,0,1337,0],[1666,0,1338,0],[1667,4,1339,4],[1667,10,1339,10,"refreshSession"],[1667,24,1339,24,"refreshSession"],[1667,25,1339,25,"currentSession"],[1667,39,1339,39],[1667,41,1339,41],[1668,6,1340,8],[1668,12,1340,14],[1668,16,1340,18],[1668,17,1340,19,"initializePromise"],[1668,34,1340,36],[1669,6,1341,8],[1669,13,1341,15],[1669,19,1341,21],[1669,23,1341,25],[1669,24,1341,26,"_acquireLock"],[1669,36,1341,38],[1669,37,1341,39],[1669,38,1341,40],[1669,39,1341,41],[1669,41,1341,43],[1669,53,1341,55],[1670,8,1342,12],[1670,15,1342,19],[1670,21,1342,25],[1670,25,1342,29],[1670,26,1342,30,"_refreshSession"],[1670,41,1342,45],[1670,42,1342,46,"currentSession"],[1670,56,1342,60],[1670,57,1342,61],[1671,6,1343,8],[1671,7,1343,9],[1671,8,1343,10],[1672,4,1344,4],[1673,4,1345,4],[1673,10,1345,10,"_refreshSession"],[1673,25,1345,25,"_refreshSession"],[1673,26,1345,26,"currentSession"],[1673,40,1345,40],[1673,42,1345,42],[1674,6,1346,8],[1674,10,1346,12],[1675,8,1347,12],[1675,15,1347,19],[1675,21,1347,25],[1675,25,1347,29],[1675,26,1347,30,"_useSession"],[1675,37,1347,41],[1675,38,1347,42],[1675,44,1347,49,"result"],[1675,50,1347,55],[1675,54,1347,60],[1676,10,1348,16],[1676,14,1348,20,"_a"],[1676,16,1348,22],[1677,10,1349,16],[1677,14,1349,20],[1677,15,1349,21,"currentSession"],[1677,29,1349,35],[1677,31,1349,37],[1678,12,1350,20],[1678,18,1350,26],[1679,14,1350,28,"data"],[1679,18,1350,32],[1680,14,1350,34,"error"],[1681,12,1350,40],[1681,13,1350,41],[1681,16,1350,44,"result"],[1681,22,1350,50],[1682,12,1351,20],[1682,16,1351,24,"error"],[1682,21,1351,29],[1682,23,1351,31],[1683,14,1352,24],[1683,20,1352,30,"error"],[1683,25,1352,35],[1684,12,1353,20],[1685,12,1354,20,"currentSession"],[1685,26,1354,34],[1685,29,1354,37],[1685,30,1354,38,"_a"],[1685,32,1354,40],[1685,35,1354,43,"data"],[1685,39,1354,47],[1685,40,1354,48,"session"],[1685,47,1354,55],[1685,53,1354,61],[1685,57,1354,65],[1685,61,1354,69,"_a"],[1685,63,1354,71],[1685,68,1354,76],[1685,73,1354,81],[1685,74,1354,82],[1685,77,1354,85,"_a"],[1685,79,1354,87],[1685,82,1354,90,"undefined"],[1685,91,1354,99],[1686,10,1355,16],[1687,10,1356,16],[1687,14,1356,20],[1687,16,1356,22,"currentSession"],[1687,30,1356,36],[1687,35,1356,41],[1687,39,1356,45],[1687,43,1356,49,"currentSession"],[1687,57,1356,63],[1687,62,1356,68],[1687,67,1356,73],[1687,68,1356,74],[1687,71,1356,77],[1687,76,1356,82],[1687,77,1356,83],[1687,80,1356,86,"currentSession"],[1687,94,1356,100],[1687,95,1356,101,"refresh_token"],[1687,108,1356,114],[1687,109,1356,115],[1687,111,1356,117],[1688,12,1357,20],[1688,18,1357,26],[1688,22,1357,30,"AuthSessionMissingError"],[1688,53,1357,53],[1688,54,1357,54],[1688,55,1357,55],[1689,10,1358,16],[1690,10,1359,16],[1690,16,1359,22],[1691,12,1359,24,"data"],[1691,16,1359,28],[1691,18,1359,30,"session"],[1691,25,1359,37],[1692,12,1359,39,"error"],[1693,10,1359,45],[1693,11,1359,46],[1693,14,1359,49],[1693,20,1359,55],[1693,24,1359,59],[1693,25,1359,60,"_callRefreshToken"],[1693,42,1359,77],[1693,43,1359,78,"currentSession"],[1693,57,1359,92],[1693,58,1359,93,"refresh_token"],[1693,71,1359,106],[1693,72,1359,107],[1694,10,1360,16],[1694,14,1360,20,"error"],[1694,19,1360,25],[1694,21,1360,27],[1695,12,1361,20],[1695,19,1361,27],[1696,14,1361,29,"data"],[1696,18,1361,33],[1696,20,1361,35],[1697,16,1361,37,"user"],[1697,20,1361,41],[1697,22,1361,43],[1697,26,1361,47],[1698,16,1361,49,"session"],[1698,23,1361,56],[1698,25,1361,58],[1699,14,1361,63],[1699,15,1361,64],[1700,14,1361,66,"error"],[1700,19,1361,71],[1700,21,1361,73,"error"],[1701,12,1361,79],[1701,13,1361,80],[1702,10,1362,16],[1703,10,1363,16],[1703,14,1363,20],[1703,15,1363,21,"session"],[1703,22,1363,28],[1703,24,1363,30],[1704,12,1364,20],[1704,19,1364,27],[1705,14,1364,29,"data"],[1705,18,1364,33],[1705,20,1364,35],[1706,16,1364,37,"user"],[1706,20,1364,41],[1706,22,1364,43],[1706,26,1364,47],[1707,16,1364,49,"session"],[1707,23,1364,56],[1707,25,1364,58],[1708,14,1364,63],[1708,15,1364,64],[1709,14,1364,66,"error"],[1709,19,1364,71],[1709,21,1364,73],[1710,12,1364,78],[1710,13,1364,79],[1711,10,1365,16],[1712,10,1366,16],[1712,17,1366,23],[1713,12,1366,25,"data"],[1713,16,1366,29],[1713,18,1366,31],[1714,14,1366,33,"user"],[1714,18,1366,37],[1714,20,1366,39,"session"],[1714,27,1366,46],[1714,28,1366,47,"user"],[1714,32,1366,51],[1715,14,1366,53,"session"],[1716,12,1366,61],[1716,13,1366,62],[1717,12,1366,64,"error"],[1717,17,1366,69],[1717,19,1366,71],[1718,10,1366,76],[1718,11,1366,77],[1719,8,1367,12],[1719,9,1367,13],[1719,10,1367,14],[1720,6,1368,8],[1720,7,1368,9],[1720,8,1369,8],[1720,15,1369,15,"error"],[1720,20,1369,20],[1720,22,1369,22],[1721,8,1370,12],[1721,12,1370,16],[1721,16,1370,16,"isAuthError"],[1721,35,1370,27],[1721,37,1370,28,"error"],[1721,42,1370,33],[1721,43,1370,34],[1721,45,1370,36],[1722,10,1371,16],[1722,17,1371,23],[1723,12,1371,25,"data"],[1723,16,1371,29],[1723,18,1371,31],[1724,14,1371,33,"user"],[1724,18,1371,37],[1724,20,1371,39],[1724,24,1371,43],[1725,14,1371,45,"session"],[1725,21,1371,52],[1725,23,1371,54],[1726,12,1371,59],[1726,13,1371,60],[1727,12,1371,62,"error"],[1728,10,1371,68],[1728,11,1371,69],[1729,8,1372,12],[1730,8,1373,12],[1730,14,1373,18,"error"],[1730,19,1373,23],[1731,6,1374,8],[1732,4,1375,4],[1733,4,1376,4],[1734,0,1377,0],[1735,0,1378,0],[1736,4,1379,4],[1736,10,1379,10,"_getSessionFromURL"],[1736,28,1379,28,"_getSessionFromURL"],[1736,29,1379,29,"params"],[1736,35,1379,35],[1736,37,1379,37,"callbackUrlType"],[1736,52,1379,52],[1736,54,1379,54],[1737,6,1380,8],[1737,10,1380,12],[1738,8,1381,12],[1738,12,1381,16],[1738,13,1381,17],[1738,17,1381,17,"isBrowser"],[1738,35,1381,26],[1738,37,1381,27],[1738,38,1381,28],[1738,40,1382,16],[1738,46,1382,22],[1738,50,1382,26,"AuthImplicitGrantRedirectError"],[1738,88,1382,56],[1738,89,1382,57],[1738,111,1382,79],[1738,112,1382,80],[1739,8,1383,12],[1740,8,1384,12],[1740,12,1384,16,"params"],[1740,18,1384,22],[1740,19,1384,23,"error"],[1740,24,1384,28],[1740,28,1384,32,"params"],[1740,34,1384,38],[1740,35,1384,39,"error_description"],[1740,52,1384,56],[1740,56,1384,60,"params"],[1740,62,1384,66],[1740,63,1384,67,"error_code"],[1740,73,1384,77],[1740,75,1384,79],[1741,10,1385,16],[1742,10,1386,16],[1743,10,1387,16],[1743,16,1387,22],[1743,20,1387,26,"AuthImplicitGrantRedirectError"],[1743,58,1387,56],[1743,59,1387,57,"params"],[1743,65,1387,63],[1743,66,1387,64,"error_description"],[1743,83,1387,81],[1743,87,1387,85],[1743,136,1387,134],[1743,138,1387,136],[1744,12,1388,20,"error"],[1744,17,1388,25],[1744,19,1388,27,"params"],[1744,25,1388,33],[1744,26,1388,34,"error"],[1744,31,1388,39],[1744,35,1388,43],[1744,54,1388,62],[1745,12,1389,20,"code"],[1745,16,1389,24],[1745,18,1389,26,"params"],[1745,24,1389,32],[1745,25,1389,33,"error_code"],[1745,35,1389,43],[1745,39,1389,47],[1746,10,1390,16],[1746,11,1390,17],[1746,12,1390,18],[1747,8,1391,12],[1748,8,1392,12],[1749,8,1393,12],[1749,16,1393,20,"callbackUrlType"],[1749,31,1393,35],[1750,10,1394,16],[1750,15,1394,21],[1750,25,1394,31],[1751,12,1395,20],[1751,16,1395,24],[1751,20,1395,28],[1751,21,1395,29,"flowType"],[1751,29,1395,37],[1751,34,1395,42],[1751,40,1395,48],[1751,42,1395,50],[1752,14,1396,24],[1752,20,1396,30],[1752,24,1396,34,"AuthPKCEGrantCodeExchangeError"],[1752,62,1396,64],[1752,63,1396,65],[1752,91,1396,93],[1752,92,1396,94],[1753,12,1397,20],[1754,12,1398,20],[1755,10,1399,16],[1755,15,1399,21],[1755,21,1399,27],[1756,12,1400,20],[1756,16,1400,24],[1756,20,1400,28],[1756,21,1400,29,"flowType"],[1756,29,1400,37],[1756,34,1400,42],[1756,44,1400,52],[1756,46,1400,54],[1757,14,1401,24],[1757,20,1401,30],[1757,24,1401,34,"AuthImplicitGrantRedirectError"],[1757,62,1401,64],[1757,63,1401,65],[1757,101,1401,103],[1757,102,1401,104],[1758,12,1402,20],[1759,12,1403,20],[1760,10,1404,16],[1761,10,1405,16],[1762,8,1406,12],[1763,8,1407,12],[1764,8,1408,12],[1764,12,1408,16,"callbackUrlType"],[1764,27,1408,31],[1764,32,1408,36],[1764,38,1408,42],[1764,40,1408,44],[1765,10,1409,16],[1765,14,1409,20],[1765,15,1409,21,"_debug"],[1765,21,1409,27],[1765,22,1409,28],[1765,38,1409,44],[1765,40,1409,46],[1765,47,1409,53],[1765,49,1409,55],[1765,63,1409,69],[1765,65,1409,71],[1765,69,1409,75],[1765,70,1409,76],[1766,10,1410,16],[1766,14,1410,20],[1766,15,1410,21,"params"],[1766,21,1410,27],[1766,22,1410,28,"code"],[1766,26,1410,32],[1766,28,1411,20],[1766,34,1411,26],[1766,38,1411,30,"AuthPKCEGrantCodeExchangeError"],[1766,76,1411,60],[1766,77,1411,61],[1766,96,1411,80],[1766,97,1411,81],[1767,10,1412,16],[1767,16,1412,22],[1768,12,1412,24,"data"],[1768,16,1412,28],[1769,12,1412,30,"error"],[1770,10,1412,36],[1770,11,1412,37],[1770,14,1412,40],[1770,20,1412,46],[1770,24,1412,50],[1770,25,1412,51,"_exchangeCodeForSession"],[1770,48,1412,74],[1770,49,1412,75,"params"],[1770,55,1412,81],[1770,56,1412,82,"code"],[1770,60,1412,86],[1770,61,1412,87],[1771,10,1413,16],[1771,14,1413,20,"error"],[1771,19,1413,25],[1771,21,1414,20],[1771,27,1414,26,"error"],[1771,32,1414,31],[1772,10,1415,16],[1772,16,1415,22,"url"],[1772,19,1415,25],[1772,22,1415,28],[1772,26,1415,32,"URL"],[1772,29,1415,35],[1772,30,1415,36,"window"],[1772,36,1415,42],[1772,37,1415,43,"location"],[1772,45,1415,51],[1772,46,1415,52,"href"],[1772,50,1415,56],[1772,51,1415,57],[1773,10,1416,16,"url"],[1773,13,1416,19],[1773,14,1416,20,"searchParams"],[1773,26,1416,32],[1773,27,1416,33,"delete"],[1773,33,1416,39],[1773,34,1416,40],[1773,40,1416,46],[1773,41,1416,47],[1774,10,1417,16,"window"],[1774,16,1417,22],[1774,17,1417,23,"history"],[1774,24,1417,30],[1774,25,1417,31,"replaceState"],[1774,37,1417,43],[1774,38,1417,44,"window"],[1774,44,1417,50],[1774,45,1417,51,"history"],[1774,52,1417,58],[1774,53,1417,59,"state"],[1774,58,1417,64],[1774,60,1417,66],[1774,62,1417,68],[1774,64,1417,70,"url"],[1774,67,1417,73],[1774,68,1417,74,"toString"],[1774,76,1417,82],[1774,77,1417,83],[1774,78,1417,84],[1774,79,1417,85],[1775,10,1418,16],[1775,17,1418,23],[1776,12,1418,25,"data"],[1776,16,1418,29],[1776,18,1418,31],[1777,14,1418,33,"session"],[1777,21,1418,40],[1777,23,1418,42,"data"],[1777,27,1418,46],[1777,28,1418,47,"session"],[1777,35,1418,54],[1778,14,1418,56,"redirectType"],[1778,26,1418,68],[1778,28,1418,70],[1779,12,1418,75],[1779,13,1418,76],[1780,12,1418,78,"error"],[1780,17,1418,83],[1780,19,1418,85],[1781,10,1418,90],[1781,11,1418,91],[1782,8,1419,12],[1783,8,1420,12],[1783,14,1420,18],[1784,10,1420,20,"provider_token"],[1784,24,1420,34],[1785,10,1420,36,"provider_refresh_token"],[1785,32,1420,58],[1786,10,1420,60,"access_token"],[1786,22,1420,72],[1787,10,1420,74,"refresh_token"],[1787,23,1420,87],[1788,10,1420,89,"expires_in"],[1788,20,1420,99],[1789,10,1420,101,"expires_at"],[1789,20,1420,111],[1790,10,1420,113,"token_type"],[1791,8,1420,125],[1791,9,1420,126],[1791,12,1420,129,"params"],[1791,18,1420,135],[1792,8,1421,12],[1792,12,1421,16],[1792,13,1421,17,"access_token"],[1792,25,1421,29],[1792,29,1421,33],[1792,30,1421,34,"expires_in"],[1792,40,1421,44],[1792,44,1421,48],[1792,45,1421,49,"refresh_token"],[1792,58,1421,62],[1792,62,1421,66],[1792,63,1421,67,"token_type"],[1792,73,1421,77],[1792,75,1421,79],[1793,10,1422,16],[1793,16,1422,22],[1793,20,1422,26,"AuthImplicitGrantRedirectError"],[1793,58,1422,56],[1793,59,1422,57],[1793,86,1422,84],[1793,87,1422,85],[1794,8,1423,12],[1795,8,1424,12],[1795,14,1424,18,"timeNow"],[1795,21,1424,25],[1795,24,1424,28,"Math"],[1795,28,1424,32],[1795,29,1424,33,"round"],[1795,34,1424,38],[1795,35,1424,39,"Date"],[1795,39,1424,43],[1795,40,1424,44,"now"],[1795,43,1424,47],[1795,44,1424,48],[1795,45,1424,49],[1795,48,1424,52],[1795,52,1424,56],[1795,53,1424,57],[1796,8,1425,12],[1796,14,1425,18,"expiresIn"],[1796,23,1425,27],[1796,26,1425,30,"parseInt"],[1796,34,1425,38],[1796,35,1425,39,"expires_in"],[1796,45,1425,49],[1796,46,1425,50],[1797,8,1426,12],[1797,12,1426,16,"expiresAt"],[1797,21,1426,25],[1797,24,1426,28,"timeNow"],[1797,31,1426,35],[1797,34,1426,38,"expiresIn"],[1797,43,1426,47],[1798,8,1427,12],[1798,12,1427,16,"expires_at"],[1798,22,1427,26],[1798,24,1427,28],[1799,10,1428,16,"expiresAt"],[1799,19,1428,25],[1799,22,1428,28,"parseInt"],[1799,30,1428,36],[1799,31,1428,37,"expires_at"],[1799,41,1428,47],[1799,42,1428,48],[1800,8,1429,12],[1801,8,1430,12],[1801,14,1430,18,"actuallyExpiresIn"],[1801,31,1430,35],[1801,34,1430,38,"expiresAt"],[1801,43,1430,47],[1801,46,1430,50,"timeNow"],[1801,53,1430,57],[1802,8,1431,12],[1802,12,1431,16,"actuallyExpiresIn"],[1802,29,1431,33],[1802,32,1431,36],[1802,36,1431,40],[1802,40,1431,44,"AUTO_REFRESH_TICK_DURATION_MS"],[1802,80,1431,73],[1802,82,1431,75],[1803,10,1432,16,"console"],[1803,17,1432,23],[1803,18,1432,24,"warn"],[1803,22,1432,28],[1803,23,1432,29],[1803,88,1432,94,"actuallyExpiresIn"],[1803,105,1432,111],[1803,138,1432,144,"expiresIn"],[1803,147,1432,153],[1803,150,1432,156],[1803,151,1432,157],[1804,8,1433,12],[1805,8,1434,12],[1805,14,1434,18,"issuedAt"],[1805,22,1434,26],[1805,25,1434,29,"expiresAt"],[1805,34,1434,38],[1805,37,1434,41,"expiresIn"],[1805,46,1434,50],[1806,8,1435,12],[1806,12,1435,16,"timeNow"],[1806,19,1435,23],[1806,22,1435,26,"issuedAt"],[1806,30,1435,34],[1806,34,1435,38],[1806,37,1435,41],[1806,39,1435,43],[1807,10,1436,16,"console"],[1807,17,1436,23],[1807,18,1436,24,"warn"],[1807,22,1436,28],[1807,23,1436,29],[1807,120,1436,126],[1807,122,1436,128,"issuedAt"],[1807,130,1436,136],[1807,132,1436,138,"expiresAt"],[1807,141,1436,147],[1807,143,1436,149,"timeNow"],[1807,150,1436,156],[1807,151,1436,157],[1808,8,1437,12],[1808,9,1437,13],[1808,15,1438,17],[1808,19,1438,21,"timeNow"],[1808,26,1438,28],[1808,29,1438,31,"issuedAt"],[1808,37,1438,39],[1808,40,1438,42],[1808,41,1438,43],[1808,43,1438,45],[1809,10,1439,16,"console"],[1809,17,1439,23],[1809,18,1439,24,"warn"],[1809,22,1439,28],[1809,23,1439,29],[1809,133,1439,139],[1809,135,1439,141,"issuedAt"],[1809,143,1439,149],[1809,145,1439,151,"expiresAt"],[1809,154,1439,160],[1809,156,1439,162,"timeNow"],[1809,163,1439,169],[1809,164,1439,170],[1810,8,1440,12],[1811,8,1441,12],[1811,14,1441,18],[1812,10,1441,20,"data"],[1812,14,1441,24],[1813,10,1441,26,"error"],[1814,8,1441,32],[1814,9,1441,33],[1814,12,1441,36],[1814,18,1441,42],[1814,22,1441,46],[1814,23,1441,47,"_getUser"],[1814,31,1441,55],[1814,32,1441,56,"access_token"],[1814,44,1441,68],[1814,45,1441,69],[1815,8,1442,12],[1815,12,1442,16,"error"],[1815,17,1442,21],[1815,19,1443,16],[1815,25,1443,22,"error"],[1815,30,1443,27],[1816,8,1444,12],[1816,14,1444,18,"session"],[1816,21,1444,25],[1816,24,1444,28],[1817,10,1445,16,"provider_token"],[1817,24,1445,30],[1818,10,1446,16,"provider_refresh_token"],[1818,32,1446,38],[1819,10,1447,16,"access_token"],[1819,22,1447,28],[1820,10,1448,16,"expires_in"],[1820,20,1448,26],[1820,22,1448,28,"expiresIn"],[1820,31,1448,37],[1821,10,1449,16,"expires_at"],[1821,20,1449,26],[1821,22,1449,28,"expiresAt"],[1821,31,1449,37],[1822,10,1450,16,"refresh_token"],[1822,23,1450,29],[1823,10,1451,16,"token_type"],[1823,20,1451,26],[1823,22,1451,28,"token_type"],[1823,32,1451,38],[1824,10,1452,16,"user"],[1824,14,1452,20],[1824,16,1452,22,"data"],[1824,20,1452,26],[1824,21,1452,27,"user"],[1825,8,1453,12],[1825,9,1453,13],[1826,8,1454,12],[1827,8,1455,12,"window"],[1827,14,1455,18],[1827,15,1455,19,"location"],[1827,23,1455,27],[1827,24,1455,28,"hash"],[1827,28,1455,32],[1827,31,1455,35],[1827,33,1455,37],[1828,8,1456,12],[1828,12,1456,16],[1828,13,1456,17,"_debug"],[1828,19,1456,23],[1828,20,1456,24],[1828,43,1456,47],[1828,45,1456,49],[1828,76,1456,80],[1828,77,1456,81],[1829,8,1457,12],[1829,15,1457,19],[1830,10,1457,21,"data"],[1830,14,1457,25],[1830,16,1457,27],[1831,12,1457,29,"session"],[1831,19,1457,36],[1832,12,1457,38,"redirectType"],[1832,24,1457,50],[1832,26,1457,52,"params"],[1832,32,1457,58],[1832,33,1457,59,"type"],[1833,10,1457,64],[1833,11,1457,65],[1834,10,1457,67,"error"],[1834,15,1457,72],[1834,17,1457,74],[1835,8,1457,79],[1835,9,1457,80],[1836,6,1458,8],[1836,7,1458,9],[1836,8,1459,8],[1836,15,1459,15,"error"],[1836,20,1459,20],[1836,22,1459,22],[1837,8,1460,12],[1837,12,1460,16],[1837,16,1460,16,"isAuthError"],[1837,35,1460,27],[1837,37,1460,28,"error"],[1837,42,1460,33],[1837,43,1460,34],[1837,45,1460,36],[1838,10,1461,16],[1838,17,1461,23],[1839,12,1461,25,"data"],[1839,16,1461,29],[1839,18,1461,31],[1840,14,1461,33,"session"],[1840,21,1461,40],[1840,23,1461,42],[1840,27,1461,46],[1841,14,1461,48,"redirectType"],[1841,26,1461,60],[1841,28,1461,62],[1842,12,1461,67],[1842,13,1461,68],[1843,12,1461,70,"error"],[1844,10,1461,76],[1844,11,1461,77],[1845,8,1462,12],[1846,8,1463,12],[1846,14,1463,18,"error"],[1846,19,1463,23],[1847,6,1464,8],[1848,4,1465,4],[1849,4,1466,4],[1850,0,1467,0],[1851,0,1468,0],[1852,4,1469,4,"_isImplicitGrantCallback"],[1852,28,1469,28,"_isImplicitGrantCallback"],[1852,29,1469,29,"params"],[1852,35,1469,35],[1852,37,1469,37],[1853,6,1470,8],[1853,13,1470,15,"Boolean"],[1853,20,1470,22],[1853,21,1470,23,"params"],[1853,27,1470,29],[1853,28,1470,30,"access_token"],[1853,40,1470,42],[1853,44,1470,46,"params"],[1853,50,1470,52],[1853,51,1470,53,"error_description"],[1853,68,1470,70],[1853,69,1470,71],[1854,4,1471,4],[1855,4,1472,4],[1856,0,1473,0],[1857,0,1474,0],[1858,4,1475,4],[1858,10,1475,10,"_isPKCECallback"],[1858,25,1475,25,"_isPKCECallback"],[1858,26,1475,26,"params"],[1858,32,1475,32],[1858,34,1475,34],[1859,6,1476,8],[1859,12,1476,14,"currentStorageContent"],[1859,33,1476,35],[1859,36,1476,38],[1859,42,1476,44],[1859,46,1476,44,"getItemAsync"],[1859,67,1476,56],[1859,69,1476,57],[1859,73,1476,61],[1859,74,1476,62,"storage"],[1859,81,1476,69],[1859,83,1476,71],[1859,86,1476,74],[1859,90,1476,78],[1859,91,1476,79,"storageKey"],[1859,101,1476,89],[1859,117,1476,105],[1859,118,1476,106],[1860,6,1477,8],[1860,13,1477,15],[1860,14,1477,16],[1860,16,1477,18,"params"],[1860,22,1477,24],[1860,23,1477,25,"code"],[1860,27,1477,29],[1860,31,1477,33,"currentStorageContent"],[1860,52,1477,54],[1860,53,1477,55],[1861,4,1478,4],[1862,4,1479,4],[1863,0,1480,0],[1864,0,1481,0],[1865,0,1482,0],[1866,0,1483,0],[1867,0,1484,0],[1868,0,1485,0],[1869,0,1486,0],[1870,4,1487,4],[1870,10,1487,10,"signOut"],[1870,17,1487,17,"signOut"],[1870,18,1487,18,"options"],[1870,25,1487,25],[1870,28,1487,28],[1871,6,1487,30,"scope"],[1871,11,1487,35],[1871,13,1487,37],[1872,4,1487,46],[1872,5,1487,47],[1872,7,1487,49],[1873,6,1488,8],[1873,12,1488,14],[1873,16,1488,18],[1873,17,1488,19,"initializePromise"],[1873,34,1488,36],[1874,6,1489,8],[1874,13,1489,15],[1874,19,1489,21],[1874,23,1489,25],[1874,24,1489,26,"_acquireLock"],[1874,36,1489,38],[1874,37,1489,39],[1874,38,1489,40],[1874,39,1489,41],[1874,41,1489,43],[1874,53,1489,55],[1875,8,1490,12],[1875,15,1490,19],[1875,21,1490,25],[1875,25,1490,29],[1875,26,1490,30,"_signOut"],[1875,34,1490,38],[1875,35,1490,39,"options"],[1875,42,1490,46],[1875,43,1490,47],[1876,6,1491,8],[1876,7,1491,9],[1876,8,1491,10],[1877,4,1492,4],[1878,4,1493,4],[1878,10,1493,10,"_signOut"],[1878,18,1493,18,"_signOut"],[1878,19,1493,19],[1879,6,1493,21,"scope"],[1880,4,1493,27],[1880,5,1493,28],[1880,8,1493,31],[1881,6,1493,33,"scope"],[1881,11,1493,38],[1881,13,1493,40],[1882,4,1493,49],[1882,5,1493,50],[1882,7,1493,52],[1883,6,1494,8],[1883,13,1494,15],[1883,19,1494,21],[1883,23,1494,25],[1883,24,1494,26,"_useSession"],[1883,35,1494,37],[1883,36,1494,38],[1883,42,1494,45,"result"],[1883,48,1494,51],[1883,52,1494,56],[1884,8,1495,12],[1884,12,1495,16,"_a"],[1884,14,1495,18],[1885,8,1496,12],[1885,14,1496,18],[1886,10,1496,20,"data"],[1886,14,1496,24],[1887,10,1496,26,"error"],[1887,15,1496,31],[1887,17,1496,33,"sessionError"],[1888,8,1496,46],[1888,9,1496,47],[1888,12,1496,50,"result"],[1888,18,1496,56],[1889,8,1497,12],[1889,12,1497,16,"sessionError"],[1889,24,1497,28],[1889,26,1497,30],[1890,10,1498,16],[1890,17,1498,23],[1891,12,1498,25,"error"],[1891,17,1498,30],[1891,19,1498,32,"sessionError"],[1892,10,1498,45],[1892,11,1498,46],[1893,8,1499,12],[1894,8,1500,12],[1894,14,1500,18,"accessToken"],[1894,25,1500,29],[1894,28,1500,32],[1894,29,1500,33,"_a"],[1894,31,1500,35],[1894,34,1500,38,"data"],[1894,38,1500,42],[1894,39,1500,43,"session"],[1894,46,1500,50],[1894,52,1500,56],[1894,56,1500,60],[1894,60,1500,64,"_a"],[1894,62,1500,66],[1894,67,1500,71],[1894,72,1500,76],[1894,73,1500,77],[1894,76,1500,80],[1894,81,1500,85],[1894,82,1500,86],[1894,85,1500,89,"_a"],[1894,87,1500,91],[1894,88,1500,92,"access_token"],[1894,100,1500,104],[1895,8,1501,12],[1895,12,1501,16,"accessToken"],[1895,23,1501,27],[1895,25,1501,29],[1896,10,1502,16],[1896,16,1502,22],[1897,12,1502,24,"error"],[1898,10,1502,30],[1898,11,1502,31],[1898,14,1502,34],[1898,20,1502,40],[1898,24,1502,44],[1898,25,1502,45,"admin"],[1898,30,1502,50],[1898,31,1502,51,"signOut"],[1898,38,1502,58],[1898,39,1502,59,"accessToken"],[1898,50,1502,70],[1898,52,1502,72,"scope"],[1898,57,1502,77],[1898,58,1502,78],[1899,10,1503,16],[1899,14,1503,20,"error"],[1899,19,1503,25],[1899,21,1503,27],[1900,12,1504,20],[1901,12,1505,20],[1902,12,1506,20],[1902,16,1506,24],[1902,18,1506,26],[1902,22,1506,26,"isAuthApiError"],[1902,44,1506,40],[1902,46,1506,41,"error"],[1902,51,1506,46],[1902,52,1506,47],[1902,57,1507,25,"error"],[1902,62,1507,30],[1902,63,1507,31,"status"],[1902,69,1507,37],[1902,74,1507,42],[1902,77,1507,45],[1902,81,1507,49,"error"],[1902,86,1507,54],[1902,87,1507,55,"status"],[1902,93,1507,61],[1902,98,1507,66],[1902,101,1507,69],[1902,105,1507,73,"error"],[1902,110,1507,78],[1902,111,1507,79,"status"],[1902,117,1507,85],[1902,122,1507,90],[1902,125,1507,93],[1902,126,1507,94],[1902,127,1507,95],[1902,129,1507,97],[1903,14,1508,24],[1903,21,1508,31],[1904,16,1508,33,"error"],[1905,14,1508,39],[1905,15,1508,40],[1906,12,1509,20],[1907,10,1510,16],[1908,8,1511,12],[1909,8,1512,12],[1909,12,1512,16,"scope"],[1909,17,1512,21],[1909,22,1512,26],[1909,30,1512,34],[1909,32,1512,36],[1910,10,1513,16],[1910,16,1513,22],[1910,20,1513,26],[1910,21,1513,27,"_removeSession"],[1910,35,1513,41],[1910,36,1513,42],[1910,37,1513,43],[1911,10,1514,16],[1911,16,1514,22],[1911,20,1514,22,"removeItemAsync"],[1911,44,1514,37],[1911,46,1514,38],[1911,50,1514,42],[1911,51,1514,43,"storage"],[1911,58,1514,50],[1911,60,1514,52],[1911,63,1514,55],[1911,67,1514,59],[1911,68,1514,60,"storageKey"],[1911,78,1514,70],[1911,94,1514,86],[1911,95,1514,87],[1912,8,1515,12],[1913,8,1516,12],[1913,15,1516,19],[1914,10,1516,21,"error"],[1914,15,1516,26],[1914,17,1516,28],[1915,8,1516,33],[1915,9,1516,34],[1916,6,1517,8],[1916,7,1517,9],[1916,8,1517,10],[1917,4,1518,4],[1918,4,1519,4,"onAuthStateChange"],[1918,21,1519,21,"onAuthStateChange"],[1918,22,1519,22,"callback"],[1918,30,1519,30],[1918,32,1519,32],[1919,6,1520,8],[1919,12,1520,14,"id"],[1919,14,1520,16],[1919,17,1520,19],[1919,21,1520,19,"uuid"],[1919,34,1520,23],[1919,36,1520,24],[1919,37,1520,25],[1920,6,1521,8],[1920,12,1521,14,"subscription"],[1920,24,1521,26],[1920,27,1521,29],[1921,8,1522,12,"id"],[1921,10,1522,14],[1922,8,1523,12,"callback"],[1922,16,1523,20],[1923,8,1524,12,"unsubscribe"],[1923,19,1524,23],[1923,21,1524,25,"unsubscribe"],[1923,22,1524,25],[1923,27,1524,31],[1924,10,1525,16],[1924,14,1525,20],[1924,15,1525,21,"_debug"],[1924,21,1525,27],[1924,22,1525,28],[1924,38,1525,44],[1924,40,1525,46],[1924,79,1525,85],[1924,81,1525,87,"id"],[1924,83,1525,89],[1924,84,1525,90],[1925,10,1526,16],[1925,14,1526,20],[1925,15,1526,21,"stateChangeEmitters"],[1925,34,1526,40],[1925,35,1526,41,"delete"],[1925,41,1526,47],[1925,42,1526,48,"id"],[1925,44,1526,50],[1925,45,1526,51],[1926,8,1527,12],[1927,6,1528,8],[1927,7,1528,9],[1928,6,1529,8],[1928,10,1529,12],[1928,11,1529,13,"_debug"],[1928,17,1529,19],[1928,18,1529,20],[1928,40,1529,42],[1928,42,1529,44],[1928,71,1529,73],[1928,73,1529,75,"id"],[1928,75,1529,77],[1928,76,1529,78],[1929,6,1530,8],[1929,10,1530,12],[1929,11,1530,13,"stateChangeEmitters"],[1929,30,1530,32],[1929,31,1530,33,"set"],[1929,34,1530,36],[1929,35,1530,37,"id"],[1929,37,1530,39],[1929,39,1530,41,"subscription"],[1929,51,1530,53],[1929,52,1530,54],[1930,6,1531,8],[1930,7,1531,9],[1930,19,1531,21],[1931,8,1532,12],[1931,14,1532,18],[1931,18,1532,22],[1931,19,1532,23,"initializePromise"],[1931,36,1532,40],[1932,8,1533,12],[1932,14,1533,18],[1932,18,1533,22],[1932,19,1533,23,"_acquireLock"],[1932,31,1533,35],[1932,32,1533,36],[1932,33,1533,37],[1932,34,1533,38],[1932,36,1533,40],[1932,48,1533,52],[1933,10,1534,16],[1933,14,1534,20],[1933,15,1534,21,"_emitInitialSession"],[1933,34,1534,40],[1933,35,1534,41,"id"],[1933,37,1534,43],[1933,38,1534,44],[1934,8,1535,12],[1934,9,1535,13],[1934,10,1535,14],[1935,6,1536,8],[1935,7,1536,9],[1935,9,1536,11],[1935,10,1536,12],[1936,6,1537,8],[1936,13,1537,15],[1937,8,1537,17,"data"],[1937,12,1537,21],[1937,14,1537,23],[1938,10,1537,25,"subscription"],[1939,8,1537,38],[1940,6,1537,40],[1940,7,1537,41],[1941,4,1538,4],[1942,4,1539,4],[1942,10,1539,10,"_emitInitialSession"],[1942,29,1539,29,"_emitInitialSession"],[1942,30,1539,30,"id"],[1942,32,1539,32],[1942,34,1539,34],[1943,6,1540,8],[1943,13,1540,15],[1943,19,1540,21],[1943,23,1540,25],[1943,24,1540,26,"_useSession"],[1943,35,1540,37],[1943,36,1540,38],[1943,42,1540,45,"result"],[1943,48,1540,51],[1943,52,1540,56],[1944,8,1541,12],[1944,12,1541,16,"_a"],[1944,14,1541,18],[1944,16,1541,20,"_b"],[1944,18,1541,22],[1945,8,1542,12],[1945,12,1542,16],[1946,10,1543,16],[1946,16,1543,22],[1947,12,1543,24,"data"],[1947,16,1543,28],[1947,18,1543,30],[1948,14,1543,32,"session"],[1949,12,1543,40],[1949,13,1543,41],[1950,12,1543,43,"error"],[1951,10,1543,50],[1951,11,1543,51],[1951,14,1543,54,"result"],[1951,20,1543,60],[1952,10,1544,16],[1952,14,1544,20,"error"],[1952,19,1544,25],[1952,21,1545,20],[1952,27,1545,26,"error"],[1952,32,1545,31],[1953,10,1546,16],[1953,17,1546,23],[1953,18,1546,24,"_a"],[1953,20,1546,26],[1953,23,1546,29],[1953,27,1546,33],[1953,28,1546,34,"stateChangeEmitters"],[1953,47,1546,53],[1953,48,1546,54,"get"],[1953,51,1546,57],[1953,52,1546,58,"id"],[1953,54,1546,60],[1953,55,1546,61],[1953,61,1546,67],[1953,65,1546,71],[1953,69,1546,75,"_a"],[1953,71,1546,77],[1953,76,1546,82],[1953,81,1546,87],[1953,82,1546,88],[1953,85,1546,91],[1953,90,1546,96],[1953,91,1546,97],[1953,94,1546,100,"_a"],[1953,96,1546,102],[1953,97,1546,103,"callback"],[1953,105,1546,111],[1953,106,1546,112],[1953,123,1546,129],[1953,125,1546,131,"session"],[1953,132,1546,138],[1953,133,1546,139],[1953,134,1546,140],[1954,10,1547,16],[1954,14,1547,20],[1954,15,1547,21,"_debug"],[1954,21,1547,27],[1954,22,1547,28],[1954,39,1547,45],[1954,41,1547,47],[1954,54,1547,60],[1954,56,1547,62,"id"],[1954,58,1547,64],[1954,60,1547,66],[1954,69,1547,75],[1954,71,1547,77,"session"],[1954,78,1547,84],[1954,79,1547,85],[1955,8,1548,12],[1955,9,1548,13],[1955,10,1549,12],[1955,17,1549,19,"err"],[1955,20,1549,22],[1955,22,1549,24],[1956,10,1550,16],[1956,17,1550,23],[1956,18,1550,24,"_b"],[1956,20,1550,26],[1956,23,1550,29],[1956,27,1550,33],[1956,28,1550,34,"stateChangeEmitters"],[1956,47,1550,53],[1956,48,1550,54,"get"],[1956,51,1550,57],[1956,52,1550,58,"id"],[1956,54,1550,60],[1956,55,1550,61],[1956,61,1550,67],[1956,65,1550,71],[1956,69,1550,75,"_b"],[1956,71,1550,77],[1956,76,1550,82],[1956,81,1550,87],[1956,82,1550,88],[1956,85,1550,91],[1956,90,1550,96],[1956,91,1550,97],[1956,94,1550,100,"_b"],[1956,96,1550,102],[1956,97,1550,103,"callback"],[1956,105,1550,111],[1956,106,1550,112],[1956,123,1550,129],[1956,125,1550,131],[1956,129,1550,135],[1956,130,1550,136],[1956,131,1550,137],[1957,10,1551,16],[1957,14,1551,20],[1957,15,1551,21,"_debug"],[1957,21,1551,27],[1957,22,1551,28],[1957,39,1551,45],[1957,41,1551,47],[1957,54,1551,60],[1957,56,1551,62,"id"],[1957,58,1551,64],[1957,60,1551,66],[1957,67,1551,73],[1957,69,1551,75,"err"],[1957,72,1551,78],[1957,73,1551,79],[1958,10,1552,16,"console"],[1958,17,1552,23],[1958,18,1552,24,"error"],[1958,23,1552,29],[1958,24,1552,30,"err"],[1958,27,1552,33],[1958,28,1552,34],[1959,8,1553,12],[1960,6,1554,8],[1960,7,1554,9],[1960,8,1554,10],[1961,4,1555,4],[1962,4,1556,4],[1963,0,1557,0],[1964,0,1558,0],[1965,0,1559,0],[1966,0,1560,0],[1967,0,1561,0],[1968,0,1562,0],[1969,4,1563,4],[1969,10,1563,10,"resetPasswordForEmail"],[1969,31,1563,31,"resetPasswordForEmail"],[1969,32,1563,32,"email"],[1969,37,1563,37],[1969,39,1563,39,"options"],[1969,46,1563,46],[1969,49,1563,49],[1969,50,1563,50],[1969,51,1563,51],[1969,53,1563,53],[1970,6,1564,8],[1970,10,1564,12,"codeChallenge"],[1970,23,1564,25],[1970,26,1564,28],[1970,30,1564,32],[1971,6,1565,8],[1971,10,1565,12,"codeChallengeMethod"],[1971,29,1565,31],[1971,32,1565,34],[1971,36,1565,38],[1972,6,1566,8],[1972,10,1566,12],[1972,14,1566,16],[1972,15,1566,17,"flowType"],[1972,23,1566,25],[1972,28,1566,30],[1972,34,1566,36],[1972,36,1566,38],[1973,8,1567,12],[1974,8,1568,12],[1974,9,1568,13,"codeChallenge"],[1974,22,1568,26],[1974,24,1568,28,"codeChallengeMethod"],[1974,43,1568,47],[1974,44,1568,48],[1974,47,1568,51],[1974,53,1568,57],[1974,57,1568,57,"getCodeChallengeAndMethod"],[1974,91,1568,82],[1974,93,1568,83],[1974,97,1568,87],[1974,98,1568,88,"storage"],[1974,105,1568,95],[1974,107,1568,97],[1974,111,1568,101],[1974,112,1568,102,"storageKey"],[1974,122,1568,112],[1974,124,1568,114],[1974,128,1568,118],[1974,129,1568,119],[1975,8,1569,12],[1975,9,1569,13],[1976,6,1570,8],[1977,6,1571,8],[1977,10,1571,12],[1978,8,1572,12],[1978,15,1572,19],[1978,21,1572,25],[1978,25,1572,25,"_request"],[1978,40,1572,33],[1978,42,1572,34],[1978,46,1572,38],[1978,47,1572,39,"fetch"],[1978,52,1572,44],[1978,54,1572,46],[1978,60,1572,52],[1978,62,1572,54],[1978,65,1572,57],[1978,69,1572,61],[1978,70,1572,62,"url"],[1978,73,1572,65],[1978,83,1572,75],[1978,85,1572,77],[1979,10,1573,16,"body"],[1979,14,1573,20],[1979,16,1573,22],[1980,12,1574,20,"email"],[1980,17,1574,25],[1981,12,1575,20,"code_challenge"],[1981,26,1575,34],[1981,28,1575,36,"codeChallenge"],[1981,41,1575,49],[1982,12,1576,20,"code_challenge_method"],[1982,33,1576,41],[1982,35,1576,43,"codeChallengeMethod"],[1982,54,1576,62],[1983,12,1577,20,"gotrue_meta_security"],[1983,32,1577,40],[1983,34,1577,42],[1984,14,1577,44,"captcha_token"],[1984,27,1577,57],[1984,29,1577,59,"options"],[1984,36,1577,66],[1984,37,1577,67,"captchaToken"],[1985,12,1577,80],[1986,10,1578,16],[1986,11,1578,17],[1987,10,1579,16,"headers"],[1987,17,1579,23],[1987,19,1579,25],[1987,23,1579,29],[1987,24,1579,30,"headers"],[1987,31,1579,37],[1988,10,1580,16,"redirectTo"],[1988,20,1580,26],[1988,22,1580,28,"options"],[1988,29,1580,35],[1988,30,1580,36,"redirectTo"],[1989,8,1581,12],[1989,9,1581,13],[1989,10,1581,14],[1990,6,1582,8],[1990,7,1582,9],[1990,8,1583,8],[1990,15,1583,15,"error"],[1990,20,1583,20],[1990,22,1583,22],[1991,8,1584,12],[1991,12,1584,16],[1991,16,1584,16,"isAuthError"],[1991,35,1584,27],[1991,37,1584,28,"error"],[1991,42,1584,33],[1991,43,1584,34],[1991,45,1584,36],[1992,10,1585,16],[1992,17,1585,23],[1993,12,1585,25,"data"],[1993,16,1585,29],[1993,18,1585,31],[1993,22,1585,35],[1994,12,1585,37,"error"],[1995,10,1585,43],[1995,11,1585,44],[1996,8,1586,12],[1997,8,1587,12],[1997,14,1587,18,"error"],[1997,19,1587,23],[1998,6,1588,8],[1999,4,1589,4],[2000,4,1590,4],[2001,0,1591,0],[2002,0,1592,0],[2003,4,1593,4],[2003,10,1593,10,"getUserIdentities"],[2003,27,1593,27,"getUserIdentities"],[2003,28,1593,27],[2003,30,1593,30],[2004,6,1594,8],[2004,10,1594,12,"_a"],[2004,12,1594,14],[2005,6,1595,8],[2005,10,1595,12],[2006,8,1596,12],[2006,14,1596,18],[2007,10,1596,20,"data"],[2007,14,1596,24],[2008,10,1596,26,"error"],[2009,8,1596,32],[2009,9,1596,33],[2009,12,1596,36],[2009,18,1596,42],[2009,22,1596,46],[2009,23,1596,47,"getUser"],[2009,30,1596,54],[2009,31,1596,55],[2009,32,1596,56],[2010,8,1597,12],[2010,12,1597,16,"error"],[2010,17,1597,21],[2010,19,1598,16],[2010,25,1598,22,"error"],[2010,30,1598,27],[2011,8,1599,12],[2011,15,1599,19],[2012,10,1599,21,"data"],[2012,14,1599,25],[2012,16,1599,27],[2013,12,1599,29,"identities"],[2013,22,1599,39],[2013,24,1599,41],[2013,25,1599,42,"_a"],[2013,27,1599,44],[2013,30,1599,47,"data"],[2013,34,1599,51],[2013,35,1599,52,"user"],[2013,39,1599,56],[2013,40,1599,57,"identities"],[2013,50,1599,67],[2013,56,1599,73],[2013,60,1599,77],[2013,64,1599,81,"_a"],[2013,66,1599,83],[2013,71,1599,88],[2013,76,1599,93],[2013,77,1599,94],[2013,80,1599,97,"_a"],[2013,82,1599,99],[2013,85,1599,102],[2014,10,1599,105],[2014,11,1599,106],[2015,10,1599,108,"error"],[2015,15,1599,113],[2015,17,1599,115],[2016,8,1599,120],[2016,9,1599,121],[2017,6,1600,8],[2017,7,1600,9],[2017,8,1601,8],[2017,15,1601,15,"error"],[2017,20,1601,20],[2017,22,1601,22],[2018,8,1602,12],[2018,12,1602,16],[2018,16,1602,16,"isAuthError"],[2018,35,1602,27],[2018,37,1602,28,"error"],[2018,42,1602,33],[2018,43,1602,34],[2018,45,1602,36],[2019,10,1603,16],[2019,17,1603,23],[2020,12,1603,25,"data"],[2020,16,1603,29],[2020,18,1603,31],[2020,22,1603,35],[2021,12,1603,37,"error"],[2022,10,1603,43],[2022,11,1603,44],[2023,8,1604,12],[2024,8,1605,12],[2024,14,1605,18,"error"],[2024,19,1605,23],[2025,6,1606,8],[2026,4,1607,4],[2027,4,1608,4],[2027,10,1608,10,"linkIdentity"],[2027,22,1608,22,"linkIdentity"],[2027,23,1608,23,"credentials"],[2027,34,1608,34],[2027,36,1608,36],[2028,6,1609,8],[2028,10,1609,12],[2028,17,1609,19],[2028,21,1609,23,"credentials"],[2028,32,1609,34],[2028,34,1609,36],[2029,8,1610,12],[2029,15,1610,19],[2029,19,1610,23],[2029,20,1610,24,"linkIdentityIdToken"],[2029,39,1610,43],[2029,40,1610,44,"credentials"],[2029,51,1610,55],[2029,52,1610,56],[2030,6,1611,8],[2031,6,1612,8],[2031,13,1612,15],[2031,17,1612,19],[2031,18,1612,20,"linkIdentityOAuth"],[2031,35,1612,37],[2031,36,1612,38,"credentials"],[2031,47,1612,49],[2031,48,1612,50],[2032,4,1613,4],[2033,4,1614,4],[2033,10,1614,10,"linkIdentityOAuth"],[2033,27,1614,27,"linkIdentityOAuth"],[2033,28,1614,28,"credentials"],[2033,39,1614,39],[2033,41,1614,41],[2034,6,1615,8],[2034,10,1615,12,"_a"],[2034,12,1615,14],[2035,6,1616,8],[2035,10,1616,12],[2036,8,1617,12],[2036,14,1617,18],[2037,10,1617,20,"data"],[2037,14,1617,24],[2038,10,1617,26,"error"],[2039,8,1617,32],[2039,9,1617,33],[2039,12,1617,36],[2039,18,1617,42],[2039,22,1617,46],[2039,23,1617,47,"_useSession"],[2039,34,1617,58],[2039,35,1617,59],[2039,41,1617,66,"result"],[2039,47,1617,72],[2039,51,1617,77],[2040,10,1618,16],[2040,14,1618,20,"_a"],[2040,16,1618,22],[2040,18,1618,24,"_b"],[2040,20,1618,26],[2040,22,1618,28,"_c"],[2040,24,1618,30],[2040,26,1618,32,"_d"],[2040,28,1618,34],[2040,30,1618,36,"_e"],[2040,32,1618,38],[2041,10,1619,16],[2041,16,1619,22],[2042,12,1619,24,"data"],[2042,16,1619,28],[2043,12,1619,30,"error"],[2044,10,1619,36],[2044,11,1619,37],[2044,14,1619,40,"result"],[2044,20,1619,46],[2045,10,1620,16],[2045,14,1620,20,"error"],[2045,19,1620,25],[2045,21,1621,20],[2045,27,1621,26,"error"],[2045,32,1621,31],[2046,10,1622,16],[2046,16,1622,22,"url"],[2046,19,1622,25],[2046,22,1622,28],[2046,28,1622,34],[2046,32,1622,38],[2046,33,1622,39,"_getUrlForProvider"],[2046,51,1622,57],[2046,52,1622,58],[2046,55,1622,61],[2046,59,1622,65],[2046,60,1622,66,"url"],[2046,63,1622,69],[2046,91,1622,97],[2046,93,1622,99,"credentials"],[2046,104,1622,110],[2046,105,1622,111,"provider"],[2046,113,1622,119],[2046,115,1622,121],[2047,12,1623,20,"redirectTo"],[2047,22,1623,30],[2047,24,1623,32],[2047,25,1623,33,"_a"],[2047,27,1623,35],[2047,30,1623,38,"credentials"],[2047,41,1623,49],[2047,42,1623,50,"options"],[2047,49,1623,57],[2047,55,1623,63],[2047,59,1623,67],[2047,63,1623,71,"_a"],[2047,65,1623,73],[2047,70,1623,78],[2047,75,1623,83],[2047,76,1623,84],[2047,79,1623,87],[2047,84,1623,92],[2047,85,1623,93],[2047,88,1623,96,"_a"],[2047,90,1623,98],[2047,91,1623,99,"redirectTo"],[2047,101,1623,109],[2048,12,1624,20,"scopes"],[2048,18,1624,26],[2048,20,1624,28],[2048,21,1624,29,"_b"],[2048,23,1624,31],[2048,26,1624,34,"credentials"],[2048,37,1624,45],[2048,38,1624,46,"options"],[2048,45,1624,53],[2048,51,1624,59],[2048,55,1624,63],[2048,59,1624,67,"_b"],[2048,61,1624,69],[2048,66,1624,74],[2048,71,1624,79],[2048,72,1624,80],[2048,75,1624,83],[2048,80,1624,88],[2048,81,1624,89],[2048,84,1624,92,"_b"],[2048,86,1624,94],[2048,87,1624,95,"scopes"],[2048,93,1624,101],[2049,12,1625,20,"queryParams"],[2049,23,1625,31],[2049,25,1625,33],[2049,26,1625,34,"_c"],[2049,28,1625,36],[2049,31,1625,39,"credentials"],[2049,42,1625,50],[2049,43,1625,51,"options"],[2049,50,1625,58],[2049,56,1625,64],[2049,60,1625,68],[2049,64,1625,72,"_c"],[2049,66,1625,74],[2049,71,1625,79],[2049,76,1625,84],[2049,77,1625,85],[2049,80,1625,88],[2049,85,1625,93],[2049,86,1625,94],[2049,89,1625,97,"_c"],[2049,91,1625,99],[2049,92,1625,100,"queryParams"],[2049,103,1625,111],[2050,12,1626,20,"skipBrowserRedirect"],[2050,31,1626,39],[2050,33,1626,41],[2051,10,1627,16],[2051,11,1627,17],[2051,12,1627,18],[2052,10,1628,16],[2052,17,1628,23],[2052,23,1628,29],[2052,27,1628,29,"_request"],[2052,42,1628,37],[2052,44,1628,38],[2052,48,1628,42],[2052,49,1628,43,"fetch"],[2052,54,1628,48],[2052,56,1628,50],[2052,61,1628,55],[2052,63,1628,57,"url"],[2052,66,1628,60],[2052,68,1628,62],[2053,12,1629,20,"headers"],[2053,19,1629,27],[2053,21,1629,29],[2053,25,1629,33],[2053,26,1629,34,"headers"],[2053,33,1629,41],[2054,12,1630,20,"jwt"],[2054,15,1630,23],[2054,17,1630,25],[2054,18,1630,26,"_e"],[2054,20,1630,28],[2054,23,1630,31],[2054,24,1630,32,"_d"],[2054,26,1630,34],[2054,29,1630,37,"data"],[2054,33,1630,41],[2054,34,1630,42,"session"],[2054,41,1630,49],[2054,47,1630,55],[2054,51,1630,59],[2054,55,1630,63,"_d"],[2054,57,1630,65],[2054,62,1630,70],[2054,67,1630,75],[2054,68,1630,76],[2054,71,1630,79],[2054,76,1630,84],[2054,77,1630,85],[2054,80,1630,88,"_d"],[2054,82,1630,90],[2054,83,1630,91,"access_token"],[2054,95,1630,103],[2054,101,1630,109],[2054,105,1630,113],[2054,109,1630,117,"_e"],[2054,111,1630,119],[2054,116,1630,124],[2054,121,1630,129],[2054,122,1630,130],[2054,125,1630,133,"_e"],[2054,127,1630,135],[2054,130,1630,138,"undefined"],[2055,10,1631,16],[2055,11,1631,17],[2055,12,1631,18],[2056,8,1632,12],[2056,9,1632,13],[2056,10,1632,14],[2057,8,1633,12],[2057,12,1633,16,"error"],[2057,17,1633,21],[2057,19,1634,16],[2057,25,1634,22,"error"],[2057,30,1634,27],[2058,8,1635,12],[2058,12,1635,16],[2058,16,1635,16,"isBrowser"],[2058,34,1635,25],[2058,36,1635,26],[2058,37,1635,27],[2058,41,1635,31],[2058,43,1635,33],[2058,44,1635,34,"_a"],[2058,46,1635,36],[2058,49,1635,39,"credentials"],[2058,60,1635,50],[2058,61,1635,51,"options"],[2058,68,1635,58],[2058,74,1635,64],[2058,78,1635,68],[2058,82,1635,72,"_a"],[2058,84,1635,74],[2058,89,1635,79],[2058,94,1635,84],[2058,95,1635,85],[2058,98,1635,88],[2058,103,1635,93],[2058,104,1635,94],[2058,107,1635,97,"_a"],[2058,109,1635,99],[2058,110,1635,100,"skipBrowserRedirect"],[2058,129,1635,119],[2058,130,1635,120],[2058,132,1635,122],[2059,10,1636,16,"window"],[2059,16,1636,22],[2059,17,1636,23,"location"],[2059,25,1636,31],[2059,26,1636,32,"assign"],[2059,32,1636,38],[2059,33,1636,39,"data"],[2059,37,1636,43],[2059,42,1636,48],[2059,46,1636,52],[2059,50,1636,56,"data"],[2059,54,1636,60],[2059,59,1636,65],[2059,64,1636,70],[2059,65,1636,71],[2059,68,1636,74],[2059,73,1636,79],[2059,74,1636,80],[2059,77,1636,83,"data"],[2059,81,1636,87],[2059,82,1636,88,"url"],[2059,85,1636,91],[2059,86,1636,92],[2060,8,1637,12],[2061,8,1638,12],[2061,15,1638,19],[2062,10,1638,21,"data"],[2062,14,1638,25],[2062,16,1638,27],[2063,12,1638,29,"provider"],[2063,20,1638,37],[2063,22,1638,39,"credentials"],[2063,33,1638,50],[2063,34,1638,51,"provider"],[2063,42,1638,59],[2064,12,1638,61,"url"],[2064,15,1638,64],[2064,17,1638,66,"data"],[2064,21,1638,70],[2064,26,1638,75],[2064,30,1638,79],[2064,34,1638,83,"data"],[2064,38,1638,87],[2064,43,1638,92],[2064,48,1638,97],[2064,49,1638,98],[2064,52,1638,101],[2064,57,1638,106],[2064,58,1638,107],[2064,61,1638,110,"data"],[2064,65,1638,114],[2064,66,1638,115,"url"],[2065,10,1638,119],[2065,11,1638,120],[2066,10,1638,122,"error"],[2066,15,1638,127],[2066,17,1638,129],[2067,8,1638,134],[2067,9,1638,135],[2068,6,1639,8],[2068,7,1639,9],[2068,8,1640,8],[2068,15,1640,15,"error"],[2068,20,1640,20],[2068,22,1640,22],[2069,8,1641,12],[2069,12,1641,16],[2069,16,1641,16,"isAuthError"],[2069,35,1641,27],[2069,37,1641,28,"error"],[2069,42,1641,33],[2069,43,1641,34],[2069,45,1641,36],[2070,10,1642,16],[2070,17,1642,23],[2071,12,1642,25,"data"],[2071,16,1642,29],[2071,18,1642,31],[2072,14,1642,33,"provider"],[2072,22,1642,41],[2072,24,1642,43,"credentials"],[2072,35,1642,54],[2072,36,1642,55,"provider"],[2072,44,1642,63],[2073,14,1642,65,"url"],[2073,17,1642,68],[2073,19,1642,70],[2074,12,1642,75],[2074,13,1642,76],[2075,12,1642,78,"error"],[2076,10,1642,84],[2076,11,1642,85],[2077,8,1643,12],[2078,8,1644,12],[2078,14,1644,18,"error"],[2078,19,1644,23],[2079,6,1645,8],[2080,4,1646,4],[2081,4,1647,4],[2081,10,1647,10,"linkIdentityIdToken"],[2081,29,1647,29,"linkIdentityIdToken"],[2081,30,1647,30,"credentials"],[2081,41,1647,41],[2081,43,1647,43],[2082,6,1648,8],[2082,13,1648,15],[2082,19,1648,21],[2082,23,1648,25],[2082,24,1648,26,"_useSession"],[2082,35,1648,37],[2082,36,1648,38],[2082,42,1648,45,"result"],[2082,48,1648,51],[2082,52,1648,56],[2083,8,1649,12],[2083,12,1649,16,"_a"],[2083,14,1649,18],[2084,8,1650,12],[2084,12,1650,16],[2085,10,1651,16],[2085,16,1651,22],[2086,12,1651,24,"error"],[2086,17,1651,29],[2086,19,1651,31,"sessionError"],[2086,31,1651,43],[2087,12,1651,45,"data"],[2087,16,1651,49],[2087,18,1651,51],[2088,14,1651,53,"session"],[2089,12,1651,61],[2090,10,1651,64],[2090,11,1651,65],[2090,14,1651,68,"result"],[2090,20,1651,74],[2091,10,1652,16],[2091,14,1652,20,"sessionError"],[2091,26,1652,32],[2091,28,1653,20],[2091,34,1653,26,"sessionError"],[2091,46,1653,38],[2092,10,1654,16],[2092,16,1654,22],[2093,12,1654,24,"options"],[2093,19,1654,31],[2094,12,1654,33,"provider"],[2094,20,1654,41],[2095,12,1654,43,"token"],[2095,17,1654,48],[2096,12,1654,50,"access_token"],[2096,24,1654,62],[2097,12,1654,64,"nonce"],[2098,10,1654,70],[2098,11,1654,71],[2098,14,1654,74,"credentials"],[2098,25,1654,85],[2099,10,1655,16],[2099,16,1655,22,"res"],[2099,19,1655,25],[2099,22,1655,28],[2099,28,1655,34],[2099,32,1655,34,"_request"],[2099,47,1655,42],[2099,49,1655,43],[2099,53,1655,47],[2099,54,1655,48,"fetch"],[2099,59,1655,53],[2099,61,1655,55],[2099,67,1655,61],[2099,69,1655,63],[2099,72,1655,66],[2099,76,1655,70],[2099,77,1655,71,"url"],[2099,80,1655,74],[2099,108,1655,102],[2099,110,1655,104],[2100,12,1656,20,"headers"],[2100,19,1656,27],[2100,21,1656,29],[2100,25,1656,33],[2100,26,1656,34,"headers"],[2100,33,1656,41],[2101,12,1657,20,"jwt"],[2101,15,1657,23],[2101,17,1657,25],[2101,18,1657,26,"_a"],[2101,20,1657,28],[2101,23,1657,31,"session"],[2101,30,1657,38],[2101,35,1657,43],[2101,39,1657,47],[2101,43,1657,51,"session"],[2101,50,1657,58],[2101,55,1657,63],[2101,60,1657,68],[2101,61,1657,69],[2101,64,1657,72],[2101,69,1657,77],[2101,70,1657,78],[2101,73,1657,81,"session"],[2101,80,1657,88],[2101,81,1657,89,"access_token"],[2101,93,1657,101],[2101,99,1657,107],[2101,103,1657,111],[2101,107,1657,115,"_a"],[2101,109,1657,117],[2101,114,1657,122],[2101,119,1657,127],[2101,120,1657,128],[2101,123,1657,131,"_a"],[2101,125,1657,133],[2101,128,1657,136,"undefined"],[2101,137,1657,145],[2102,12,1658,20,"body"],[2102,16,1658,24],[2102,18,1658,26],[2103,14,1659,24,"provider"],[2103,22,1659,32],[2104,14,1660,24,"id_token"],[2104,22,1660,32],[2104,24,1660,34,"token"],[2104,29,1660,39],[2105,14,1661,24,"access_token"],[2105,26,1661,36],[2106,14,1662,24,"nonce"],[2106,19,1662,29],[2107,14,1663,24,"link_identity"],[2107,27,1663,37],[2107,29,1663,39],[2107,33,1663,43],[2108,14,1664,24,"gotrue_meta_security"],[2108,34,1664,44],[2108,36,1664,46],[2109,16,1664,48,"captcha_token"],[2109,29,1664,61],[2109,31,1664,63,"options"],[2109,38,1664,70],[2109,43,1664,75],[2109,47,1664,79],[2109,51,1664,83,"options"],[2109,58,1664,90],[2109,63,1664,95],[2109,68,1664,100],[2109,69,1664,101],[2109,72,1664,104],[2109,77,1664,109],[2109,78,1664,110],[2109,81,1664,113,"options"],[2109,88,1664,120],[2109,89,1664,121,"captchaToken"],[2110,14,1664,134],[2111,12,1665,20],[2111,13,1665,21],[2112,12,1666,20,"xform"],[2112,17,1666,25],[2112,19,1666,27,"_sessionResponse"],[2113,10,1667,16],[2113,11,1667,17],[2113,12,1667,18],[2114,10,1668,16],[2114,16,1668,22],[2115,12,1668,24,"data"],[2115,16,1668,28],[2116,12,1668,30,"error"],[2117,10,1668,36],[2117,11,1668,37],[2117,14,1668,40,"res"],[2117,17,1668,43],[2118,10,1669,16],[2118,14,1669,20,"error"],[2118,19,1669,25],[2118,21,1669,27],[2119,12,1670,20],[2119,19,1670,27],[2120,14,1670,29,"data"],[2120,18,1670,33],[2120,20,1670,35],[2121,16,1670,37,"user"],[2121,20,1670,41],[2121,22,1670,43],[2121,26,1670,47],[2122,16,1670,49,"session"],[2122,23,1670,56],[2122,25,1670,58],[2123,14,1670,63],[2123,15,1670,64],[2124,14,1670,66,"error"],[2125,12,1670,72],[2125,13,1670,73],[2126,10,1671,16],[2126,11,1671,17],[2126,17,1672,21],[2126,21,1672,25],[2126,22,1672,26,"data"],[2126,26,1672,30],[2126,30,1672,34],[2126,31,1672,35,"data"],[2126,35,1672,39],[2126,36,1672,40,"session"],[2126,43,1672,47],[2126,47,1672,51],[2126,48,1672,52,"data"],[2126,52,1672,56],[2126,53,1672,57,"user"],[2126,57,1672,61],[2126,59,1672,63],[2127,12,1673,20],[2127,19,1673,27],[2128,14,1674,24,"data"],[2128,18,1674,28],[2128,20,1674,30],[2129,16,1674,32,"user"],[2129,20,1674,36],[2129,22,1674,38],[2129,26,1674,42],[2130,16,1674,44,"session"],[2130,23,1674,51],[2130,25,1674,53],[2131,14,1674,58],[2131,15,1674,59],[2132,14,1675,24,"error"],[2132,19,1675,29],[2132,21,1675,31],[2132,25,1675,35,"AuthInvalidTokenResponseError"],[2132,62,1675,64],[2132,63,1675,65],[2133,12,1676,20],[2133,13,1676,21],[2134,10,1677,16],[2135,10,1678,16],[2135,14,1678,20,"data"],[2135,18,1678,24],[2135,19,1678,25,"session"],[2135,26,1678,32],[2135,28,1678,34],[2136,12,1679,20],[2136,18,1679,26],[2136,22,1679,30],[2136,23,1679,31,"_saveSession"],[2136,35,1679,43],[2136,36,1679,44,"data"],[2136,40,1679,48],[2136,41,1679,49,"session"],[2136,48,1679,56],[2136,49,1679,57],[2137,12,1680,20],[2137,18,1680,26],[2137,22,1680,30],[2137,23,1680,31,"_notifyAllSubscribers"],[2137,44,1680,52],[2137,45,1680,53],[2137,59,1680,67],[2137,61,1680,69,"data"],[2137,65,1680,73],[2137,66,1680,74,"session"],[2137,73,1680,81],[2137,74,1680,82],[2138,10,1681,16],[2139,10,1682,16],[2139,17,1682,23],[2140,12,1682,25,"data"],[2140,16,1682,29],[2141,12,1682,31,"error"],[2142,10,1682,37],[2142,11,1682,38],[2143,8,1683,12],[2143,9,1683,13],[2143,10,1684,12],[2143,17,1684,19,"error"],[2143,22,1684,24],[2143,24,1684,26],[2144,10,1685,16],[2144,14,1685,20],[2144,18,1685,20,"isAuthError"],[2144,37,1685,31],[2144,39,1685,32,"error"],[2144,44,1685,37],[2144,45,1685,38],[2144,47,1685,40],[2145,12,1686,20],[2145,19,1686,27],[2146,14,1686,29,"data"],[2146,18,1686,33],[2146,20,1686,35],[2147,16,1686,37,"user"],[2147,20,1686,41],[2147,22,1686,43],[2147,26,1686,47],[2148,16,1686,49,"session"],[2148,23,1686,56],[2148,25,1686,58],[2149,14,1686,63],[2149,15,1686,64],[2150,14,1686,66,"error"],[2151,12,1686,72],[2151,13,1686,73],[2152,10,1687,16],[2153,10,1688,16],[2153,16,1688,22,"error"],[2153,21,1688,27],[2154,8,1689,12],[2155,6,1690,8],[2155,7,1690,9],[2155,8,1690,10],[2156,4,1691,4],[2157,4,1692,4],[2158,0,1693,0],[2159,0,1694,0],[2160,4,1695,4],[2160,10,1695,10,"unlinkIdentity"],[2160,24,1695,24,"unlinkIdentity"],[2160,25,1695,25,"identity"],[2160,33,1695,33],[2160,35,1695,35],[2161,6,1696,8],[2161,10,1696,12],[2162,8,1697,12],[2162,15,1697,19],[2162,21,1697,25],[2162,25,1697,29],[2162,26,1697,30,"_useSession"],[2162,37,1697,41],[2162,38,1697,42],[2162,44,1697,49,"result"],[2162,50,1697,55],[2162,54,1697,60],[2163,10,1698,16],[2163,14,1698,20,"_a"],[2163,16,1698,22],[2163,18,1698,24,"_b"],[2163,20,1698,26],[2164,10,1699,16],[2164,16,1699,22],[2165,12,1699,24,"data"],[2165,16,1699,28],[2166,12,1699,30,"error"],[2167,10,1699,36],[2167,11,1699,37],[2167,14,1699,40,"result"],[2167,20,1699,46],[2168,10,1700,16],[2168,14,1700,20,"error"],[2168,19,1700,25],[2168,21,1700,27],[2169,12,1701,20],[2169,18,1701,26,"error"],[2169,23,1701,31],[2170,10,1702,16],[2171,10,1703,16],[2171,17,1703,23],[2171,23,1703,29],[2171,27,1703,29,"_request"],[2171,42,1703,37],[2171,44,1703,38],[2171,48,1703,42],[2171,49,1703,43,"fetch"],[2171,54,1703,48],[2171,56,1703,50],[2171,64,1703,58],[2171,66,1703,60],[2171,69,1703,63],[2171,73,1703,67],[2171,74,1703,68,"url"],[2171,77,1703,71],[2171,97,1703,91,"identity"],[2171,105,1703,99],[2171,106,1703,100,"identity_id"],[2171,117,1703,111],[2171,119,1703,113],[2171,121,1703,115],[2172,12,1704,20,"headers"],[2172,19,1704,27],[2172,21,1704,29],[2172,25,1704,33],[2172,26,1704,34,"headers"],[2172,33,1704,41],[2173,12,1705,20,"jwt"],[2173,15,1705,23],[2173,17,1705,25],[2173,18,1705,26,"_b"],[2173,20,1705,28],[2173,23,1705,31],[2173,24,1705,32,"_a"],[2173,26,1705,34],[2173,29,1705,37,"data"],[2173,33,1705,41],[2173,34,1705,42,"session"],[2173,41,1705,49],[2173,47,1705,55],[2173,51,1705,59],[2173,55,1705,63,"_a"],[2173,57,1705,65],[2173,62,1705,70],[2173,67,1705,75],[2173,68,1705,76],[2173,71,1705,79],[2173,76,1705,84],[2173,77,1705,85],[2173,80,1705,88,"_a"],[2173,82,1705,90],[2173,83,1705,91,"access_token"],[2173,95,1705,103],[2173,101,1705,109],[2173,105,1705,113],[2173,109,1705,117,"_b"],[2173,111,1705,119],[2173,116,1705,124],[2173,121,1705,129],[2173,122,1705,130],[2173,125,1705,133,"_b"],[2173,127,1705,135],[2173,130,1705,138,"undefined"],[2174,10,1706,16],[2174,11,1706,17],[2174,12,1706,18],[2175,8,1707,12],[2175,9,1707,13],[2175,10,1707,14],[2176,6,1708,8],[2176,7,1708,9],[2176,8,1709,8],[2176,15,1709,15,"error"],[2176,20,1709,20],[2176,22,1709,22],[2177,8,1710,12],[2177,12,1710,16],[2177,16,1710,16,"isAuthError"],[2177,35,1710,27],[2177,37,1710,28,"error"],[2177,42,1710,33],[2177,43,1710,34],[2177,45,1710,36],[2178,10,1711,16],[2178,17,1711,23],[2179,12,1711,25,"data"],[2179,16,1711,29],[2179,18,1711,31],[2179,22,1711,35],[2180,12,1711,37,"error"],[2181,10,1711,43],[2181,11,1711,44],[2182,8,1712,12],[2183,8,1713,12],[2183,14,1713,18,"error"],[2183,19,1713,23],[2184,6,1714,8],[2185,4,1715,4],[2186,4,1716,4],[2187,0,1717,0],[2188,0,1718,0],[2189,0,1719,0],[2190,4,1720,4],[2190,10,1720,10,"_refreshAccessToken"],[2190,29,1720,29,"_refreshAccessToken"],[2190,30,1720,30,"refreshToken"],[2190,42,1720,42],[2190,44,1720,44],[2191,6,1721,8],[2191,12,1721,14,"debugName"],[2191,21,1721,23],[2191,24,1721,26],[2191,48,1721,50,"refreshToken"],[2191,60,1721,62],[2191,61,1721,63,"substring"],[2191,70,1721,72],[2191,71,1721,73],[2191,72,1721,74],[2191,74,1721,76],[2191,75,1721,77],[2191,76,1721,78],[2191,82,1721,84],[2192,6,1722,8],[2192,10,1722,12],[2192,11,1722,13,"_debug"],[2192,17,1722,19],[2192,18,1722,20,"debugName"],[2192,27,1722,29],[2192,29,1722,31],[2192,36,1722,38],[2192,37,1722,39],[2193,6,1723,8],[2193,10,1723,12],[2194,8,1724,12],[2194,14,1724,18,"startedAt"],[2194,23,1724,27],[2194,26,1724,30,"Date"],[2194,30,1724,34],[2194,31,1724,35,"now"],[2194,34,1724,38],[2194,35,1724,39],[2194,36,1724,40],[2195,8,1725,12],[2196,8,1726,12],[2196,15,1726,19],[2196,21,1726,25],[2196,25,1726,25,"retryable"],[2196,43,1726,34],[2196,45,1726,35],[2196,51,1726,42,"attempt"],[2196,58,1726,49],[2196,62,1726,54],[2197,10,1727,16],[2197,14,1727,20,"attempt"],[2197,21,1727,27],[2197,24,1727,30],[2197,25,1727,31],[2197,27,1727,33],[2198,12,1728,20],[2198,18,1728,26],[2198,22,1728,26,"sleep"],[2198,36,1728,31],[2198,38,1728,32],[2198,41,1728,35],[2198,44,1728,38,"Math"],[2198,48,1728,42],[2198,49,1728,43,"pow"],[2198,52,1728,46],[2198,53,1728,47],[2198,54,1728,48],[2198,56,1728,50,"attempt"],[2198,63,1728,57],[2198,66,1728,60],[2198,67,1728,61],[2198,68,1728,62],[2198,69,1728,63],[2198,70,1728,64],[2198,71,1728,65],[2199,10,1729,16],[2200,10,1730,16],[2200,14,1730,20],[2200,15,1730,21,"_debug"],[2200,21,1730,27],[2200,22,1730,28,"debugName"],[2200,31,1730,37],[2200,33,1730,39],[2200,53,1730,59],[2200,55,1730,61,"attempt"],[2200,62,1730,68],[2200,63,1730,69],[2201,10,1731,16],[2201,17,1731,23],[2201,23,1731,29],[2201,27,1731,29,"_request"],[2201,42,1731,37],[2201,44,1731,38],[2201,48,1731,42],[2201,49,1731,43,"fetch"],[2201,54,1731,48],[2201,56,1731,50],[2201,62,1731,56],[2201,64,1731,58],[2201,67,1731,61],[2201,71,1731,65],[2201,72,1731,66,"url"],[2201,75,1731,69],[2201,108,1731,102],[2201,110,1731,104],[2202,12,1732,20,"body"],[2202,16,1732,24],[2202,18,1732,26],[2203,14,1732,28,"refresh_token"],[2203,27,1732,41],[2203,29,1732,43,"refreshToken"],[2204,12,1732,56],[2204,13,1732,57],[2205,12,1733,20,"headers"],[2205,19,1733,27],[2205,21,1733,29],[2205,25,1733,33],[2205,26,1733,34,"headers"],[2205,33,1733,41],[2206,12,1734,20,"xform"],[2206,17,1734,25],[2206,19,1734,27,"_sessionResponse"],[2207,10,1735,16],[2207,11,1735,17],[2207,12,1735,18],[2208,8,1736,12],[2208,9,1736,13],[2208,11,1736,15],[2208,12,1736,16,"attempt"],[2208,19,1736,23],[2208,21,1736,25,"error"],[2208,26,1736,30],[2208,31,1736,35],[2209,10,1737,16],[2209,16,1737,22,"nextBackOffInterval"],[2209,35,1737,41],[2209,38,1737,44],[2209,41,1737,47],[2209,44,1737,50,"Math"],[2209,48,1737,54],[2209,49,1737,55,"pow"],[2209,52,1737,58],[2209,53,1737,59],[2209,54,1737,60],[2209,56,1737,62,"attempt"],[2209,63,1737,69],[2209,64,1737,70],[2210,10,1738,16],[2210,17,1738,24,"error"],[2210,22,1738,29],[2210,26,1739,20],[2210,30,1739,20,"isAuthRetryableFetchError"],[2210,63,1739,45],[2210,65,1739,46,"error"],[2210,70,1739,51],[2210,71,1739,52],[2211,10,1740,20],[2212,10,1741,20,"Date"],[2212,14,1741,24],[2212,15,1741,25,"now"],[2212,18,1741,28],[2212,19,1741,29],[2212,20,1741,30],[2212,23,1741,33,"nextBackOffInterval"],[2212,42,1741,52],[2212,45,1741,55,"startedAt"],[2212,54,1741,64],[2212,57,1741,67,"AUTO_REFRESH_TICK_DURATION_MS"],[2212,97,1741,96],[2213,8,1742,12],[2213,9,1742,13],[2213,10,1742,14],[2214,6,1743,8],[2214,7,1743,9],[2214,8,1744,8],[2214,15,1744,15,"error"],[2214,20,1744,20],[2214,22,1744,22],[2215,8,1745,12],[2215,12,1745,16],[2215,13,1745,17,"_debug"],[2215,19,1745,23],[2215,20,1745,24,"debugName"],[2215,29,1745,33],[2215,31,1745,35],[2215,38,1745,42],[2215,40,1745,44,"error"],[2215,45,1745,49],[2215,46,1745,50],[2216,8,1746,12],[2216,12,1746,16],[2216,16,1746,16,"isAuthError"],[2216,35,1746,27],[2216,37,1746,28,"error"],[2216,42,1746,33],[2216,43,1746,34],[2216,45,1746,36],[2217,10,1747,16],[2217,17,1747,23],[2218,12,1747,25,"data"],[2218,16,1747,29],[2218,18,1747,31],[2219,14,1747,33,"session"],[2219,21,1747,40],[2219,23,1747,42],[2219,27,1747,46],[2220,14,1747,48,"user"],[2220,18,1747,52],[2220,20,1747,54],[2221,12,1747,59],[2221,13,1747,60],[2222,12,1747,62,"error"],[2223,10,1747,68],[2223,11,1747,69],[2224,8,1748,12],[2225,8,1749,12],[2225,14,1749,18,"error"],[2225,19,1749,23],[2226,6,1750,8],[2226,7,1750,9],[2226,16,1751,16],[2227,8,1752,12],[2227,12,1752,16],[2227,13,1752,17,"_debug"],[2227,19,1752,23],[2227,20,1752,24,"debugName"],[2227,29,1752,33],[2227,31,1752,35],[2227,36,1752,40],[2227,37,1752,41],[2228,6,1753,8],[2229,4,1754,4],[2230,4,1755,4,"_isValidSession"],[2230,19,1755,19,"_isValidSession"],[2230,20,1755,20,"maybeSession"],[2230,32,1755,32],[2230,34,1755,34],[2231,6,1756,8],[2231,12,1756,14,"isValidSession"],[2231,26,1756,28],[2231,29,1756,31],[2231,36,1756,38,"maybeSession"],[2231,48,1756,50],[2231,53,1756,55],[2231,61,1756,63],[2231,65,1757,12,"maybeSession"],[2231,77,1757,24],[2231,82,1757,29],[2231,86,1757,33],[2231,90,1758,12],[2231,104,1758,26],[2231,108,1758,30,"maybeSession"],[2231,120,1758,42],[2231,124,1759,12],[2231,139,1759,27],[2231,143,1759,31,"maybeSession"],[2231,155,1759,43],[2231,159,1760,12],[2231,171,1760,24],[2231,175,1760,28,"maybeSession"],[2231,187,1760,40],[2232,6,1761,8],[2232,13,1761,15,"isValidSession"],[2232,27,1761,29],[2233,4,1762,4],[2234,4,1763,4],[2234,10,1763,10,"_handleProviderSignIn"],[2234,31,1763,31,"_handleProviderSignIn"],[2234,32,1763,32,"provider"],[2234,40,1763,40],[2234,42,1763,42,"options"],[2234,49,1763,49],[2234,51,1763,51],[2235,6,1764,8],[2235,12,1764,14,"url"],[2235,15,1764,17],[2235,18,1764,20],[2235,24,1764,26],[2235,28,1764,30],[2235,29,1764,31,"_getUrlForProvider"],[2235,47,1764,49],[2235,48,1764,50],[2235,51,1764,53],[2235,55,1764,57],[2235,56,1764,58,"url"],[2235,59,1764,61],[2235,71,1764,73],[2235,73,1764,75,"provider"],[2235,81,1764,83],[2235,83,1764,85],[2236,8,1765,12,"redirectTo"],[2236,18,1765,22],[2236,20,1765,24,"options"],[2236,27,1765,31],[2236,28,1765,32,"redirectTo"],[2236,38,1765,42],[2237,8,1766,12,"scopes"],[2237,14,1766,18],[2237,16,1766,20,"options"],[2237,23,1766,27],[2237,24,1766,28,"scopes"],[2237,30,1766,34],[2238,8,1767,12,"queryParams"],[2238,19,1767,23],[2238,21,1767,25,"options"],[2238,28,1767,32],[2238,29,1767,33,"queryParams"],[2239,6,1768,8],[2239,7,1768,9],[2239,8,1768,10],[2240,6,1769,8],[2240,10,1769,12],[2240,11,1769,13,"_debug"],[2240,17,1769,19],[2240,18,1769,20],[2240,44,1769,46],[2240,46,1769,48],[2240,56,1769,58],[2240,58,1769,60,"provider"],[2240,66,1769,68],[2240,68,1769,70],[2240,77,1769,79],[2240,79,1769,81,"options"],[2240,86,1769,88],[2240,88,1769,90],[2240,93,1769,95],[2240,95,1769,97,"url"],[2240,98,1769,100],[2240,99,1769,101],[2241,6,1770,8],[2242,6,1771,8],[2242,10,1771,12],[2242,14,1771,12,"isBrowser"],[2242,32,1771,21],[2242,34,1771,22],[2242,35,1771,23],[2242,39,1771,27],[2242,40,1771,28,"options"],[2242,47,1771,35],[2242,48,1771,36,"skipBrowserRedirect"],[2242,67,1771,55],[2242,69,1771,57],[2243,8,1772,12,"window"],[2243,14,1772,18],[2243,15,1772,19,"location"],[2243,23,1772,27],[2243,24,1772,28,"assign"],[2243,30,1772,34],[2243,31,1772,35,"url"],[2243,34,1772,38],[2243,35,1772,39],[2244,6,1773,8],[2245,6,1774,8],[2245,13,1774,15],[2246,8,1774,17,"data"],[2246,12,1774,21],[2246,14,1774,23],[2247,10,1774,25,"provider"],[2247,18,1774,33],[2248,10,1774,35,"url"],[2249,8,1774,39],[2249,9,1774,40],[2250,8,1774,42,"error"],[2250,13,1774,47],[2250,15,1774,49],[2251,6,1774,54],[2251,7,1774,55],[2252,4,1775,4],[2253,4,1776,4],[2254,0,1777,0],[2255,0,1778,0],[2256,0,1779,0],[2257,4,1780,4],[2257,10,1780,10,"_recoverAndRefresh"],[2257,28,1780,28,"_recoverAndRefresh"],[2257,29,1780,28],[2257,31,1780,31],[2258,6,1781,8],[2258,10,1781,12,"_a"],[2258,12,1781,14],[2258,14,1781,16,"_b"],[2258,16,1781,18],[2259,6,1782,8],[2259,12,1782,14,"debugName"],[2259,21,1782,23],[2259,24,1782,26],[2259,47,1782,49],[2260,6,1783,8],[2260,10,1783,12],[2260,11,1783,13,"_debug"],[2260,17,1783,19],[2260,18,1783,20,"debugName"],[2260,27,1783,29],[2260,29,1783,31],[2260,36,1783,38],[2260,37,1783,39],[2261,6,1784,8],[2261,10,1784,12],[2262,8,1785,12],[2262,14,1785,18,"currentSession"],[2262,28,1785,32],[2262,31,1785,36],[2262,37,1785,42],[2262,41,1785,42,"getItemAsync"],[2262,62,1785,54],[2262,64,1785,55],[2262,68,1785,59],[2262,69,1785,60,"storage"],[2262,76,1785,67],[2262,78,1785,69],[2262,82,1785,73],[2262,83,1785,74,"storageKey"],[2262,93,1785,84],[2262,94,1785,86],[2263,8,1786,12],[2263,12,1786,16,"currentSession"],[2263,26,1786,30],[2263,30,1786,34],[2263,34,1786,38],[2263,35,1786,39,"userStorage"],[2263,46,1786,50],[2263,48,1786,52],[2264,10,1787,16],[2264,14,1787,20,"maybeUser"],[2264,23,1787,29],[2264,26,1787,33],[2264,32,1787,39],[2264,36,1787,39,"getItemAsync"],[2264,57,1787,51],[2264,59,1787,52],[2264,63,1787,56],[2264,64,1787,57,"userStorage"],[2264,75,1787,68],[2264,77,1787,70],[2264,81,1787,74],[2264,82,1787,75,"storageKey"],[2264,92,1787,85],[2264,95,1787,88],[2264,102,1787,95],[2264,103,1787,97],[2265,10,1788,16],[2265,14,1788,20],[2265,15,1788,21],[2265,19,1788,25],[2265,20,1788,26,"storage"],[2265,27,1788,33],[2265,28,1788,34,"isServer"],[2265,36,1788,42],[2265,40,1788,46,"Object"],[2265,46,1788,52],[2265,47,1788,53,"is"],[2265,49,1788,55],[2265,50,1788,56],[2265,54,1788,60],[2265,55,1788,61,"storage"],[2265,62,1788,68],[2265,64,1788,70],[2265,68,1788,74],[2265,69,1788,75,"userStorage"],[2265,80,1788,86],[2265,81,1788,87],[2265,85,1788,91],[2265,86,1788,92,"maybeUser"],[2265,95,1788,101],[2265,97,1788,103],[2266,12,1789,20],[2267,12,1790,20],[2268,12,1791,20],[2269,12,1792,20],[2270,12,1793,20,"maybeUser"],[2270,21,1793,29],[2270,24,1793,32],[2271,14,1793,34,"user"],[2271,18,1793,38],[2271,20,1793,40,"currentSession"],[2271,34,1793,54],[2271,35,1793,55,"user"],[2272,12,1793,60],[2272,13,1793,61],[2273,12,1794,20],[2273,18,1794,26],[2273,22,1794,26,"setItemAsync"],[2273,43,1794,38],[2273,45,1794,39],[2273,49,1794,43],[2273,50,1794,44,"userStorage"],[2273,61,1794,55],[2273,63,1794,57],[2273,67,1794,61],[2273,68,1794,62,"storageKey"],[2273,78,1794,72],[2273,81,1794,75],[2273,88,1794,82],[2273,90,1794,84,"maybeUser"],[2273,99,1794,93],[2273,100,1794,94],[2274,10,1795,16],[2275,10,1796,16,"currentSession"],[2275,24,1796,30],[2275,25,1796,31,"user"],[2275,29,1796,35],[2275,32,1796,38],[2275,33,1796,39,"_a"],[2275,35,1796,41],[2275,38,1796,44,"maybeUser"],[2275,47,1796,53],[2275,52,1796,58],[2275,56,1796,62],[2275,60,1796,66,"maybeUser"],[2275,69,1796,75],[2275,74,1796,80],[2275,79,1796,85],[2275,80,1796,86],[2275,83,1796,89],[2275,88,1796,94],[2275,89,1796,95],[2275,92,1796,98,"maybeUser"],[2275,101,1796,107],[2275,102,1796,108,"user"],[2275,106,1796,112],[2275,112,1796,118],[2275,116,1796,122],[2275,120,1796,126,"_a"],[2275,122,1796,128],[2275,127,1796,133],[2275,132,1796,138],[2275,133,1796,139],[2275,136,1796,142,"_a"],[2275,138,1796,144],[2275,141,1796,147],[2275,145,1796,147,"userNotAvailableProxy"],[2275,175,1796,168],[2275,177,1796,169],[2275,178,1796,170],[2276,8,1797,12],[2276,9,1797,13],[2276,15,1798,17],[2276,19,1798,21,"currentSession"],[2276,33,1798,35],[2276,37,1798,39],[2276,38,1798,40,"currentSession"],[2276,52,1798,54],[2276,53,1798,55,"user"],[2276,57,1798,59],[2276,59,1798,61],[2277,10,1799,16],[2278,10,1800,16],[2279,10,1801,16],[2279,14,1801,20],[2279,15,1801,21,"currentSession"],[2279,29,1801,35],[2279,30,1801,36,"user"],[2279,34,1801,40],[2279,36,1801,42],[2280,12,1802,20],[2281,12,1803,20],[2281,18,1803,26,"separateUser"],[2281,30,1803,38],[2281,33,1803,42],[2281,39,1803,48],[2281,43,1803,48,"getItemAsync"],[2281,64,1803,60],[2281,66,1803,61],[2281,70,1803,65],[2281,71,1803,66,"storage"],[2281,78,1803,73],[2281,80,1803,75],[2281,84,1803,79],[2281,85,1803,80,"storageKey"],[2281,95,1803,90],[2281,98,1803,93],[2281,105,1803,100],[2281,106,1803,102],[2282,12,1804,20],[2282,16,1804,24,"separateUser"],[2282,28,1804,36],[2282,33,1804,41,"separateUser"],[2282,45,1804,53],[2282,50,1804,58],[2282,54,1804,62],[2282,58,1804,66,"separateUser"],[2282,70,1804,78],[2282,75,1804,83],[2282,80,1804,88],[2282,81,1804,89],[2282,84,1804,92],[2282,89,1804,97],[2282,90,1804,98],[2282,93,1804,101,"separateUser"],[2282,105,1804,113],[2282,106,1804,114,"user"],[2282,110,1804,118],[2282,111,1804,119],[2282,113,1804,121],[2283,14,1805,24,"currentSession"],[2283,28,1805,38],[2283,29,1805,39,"user"],[2283,33,1805,43],[2283,36,1805,46,"separateUser"],[2283,48,1805,58],[2283,49,1805,59,"user"],[2283,53,1805,63],[2284,14,1806,24],[2284,20,1806,30],[2284,24,1806,30,"removeItemAsync"],[2284,48,1806,45],[2284,50,1806,46],[2284,54,1806,50],[2284,55,1806,51,"storage"],[2284,62,1806,58],[2284,64,1806,60],[2284,68,1806,64],[2284,69,1806,65,"storageKey"],[2284,79,1806,75],[2284,82,1806,78],[2284,89,1806,85],[2284,90,1806,86],[2285,14,1807,24],[2285,20,1807,30],[2285,24,1807,30,"setItemAsync"],[2285,45,1807,42],[2285,47,1807,43],[2285,51,1807,47],[2285,52,1807,48,"storage"],[2285,59,1807,55],[2285,61,1807,57],[2285,65,1807,61],[2285,66,1807,62,"storageKey"],[2285,76,1807,72],[2285,78,1807,74,"currentSession"],[2285,92,1807,88],[2285,93,1807,89],[2286,12,1808,20],[2286,13,1808,21],[2286,19,1809,25],[2287,14,1810,24,"currentSession"],[2287,28,1810,38],[2287,29,1810,39,"user"],[2287,33,1810,43],[2287,36,1810,46],[2287,40,1810,46,"userNotAvailableProxy"],[2287,70,1810,67],[2287,72,1810,68],[2287,73,1810,69],[2288,12,1811,20],[2289,10,1812,16],[2290,8,1813,12],[2291,8,1814,12],[2291,12,1814,16],[2291,13,1814,17,"_debug"],[2291,19,1814,23],[2291,20,1814,24,"debugName"],[2291,29,1814,33],[2291,31,1814,35],[2291,53,1814,57],[2291,55,1814,59,"currentSession"],[2291,69,1814,73],[2291,70,1814,74],[2292,8,1815,12],[2292,12,1815,16],[2292,13,1815,17],[2292,17,1815,21],[2292,18,1815,22,"_isValidSession"],[2292,33,1815,37],[2292,34,1815,38,"currentSession"],[2292,48,1815,52],[2292,49,1815,53],[2292,51,1815,55],[2293,10,1816,16],[2293,14,1816,20],[2293,15,1816,21,"_debug"],[2293,21,1816,27],[2293,22,1816,28,"debugName"],[2293,31,1816,37],[2293,33,1816,39],[2293,55,1816,61],[2293,56,1816,62],[2294,10,1817,16],[2294,14,1817,20,"currentSession"],[2294,28,1817,34],[2294,33,1817,39],[2294,37,1817,43],[2294,39,1817,45],[2295,12,1818,20],[2295,18,1818,26],[2295,22,1818,30],[2295,23,1818,31,"_removeSession"],[2295,37,1818,45],[2295,38,1818,46],[2295,39,1818,47],[2296,10,1819,16],[2297,10,1820,16],[2298,8,1821,12],[2299,8,1822,12],[2299,14,1822,18,"expiresWithMargin"],[2299,31,1822,35],[2299,34,1822,38],[2299,35,1822,39],[2299,36,1822,40,"_b"],[2299,38,1822,42],[2299,41,1822,45,"currentSession"],[2299,55,1822,59],[2299,56,1822,60,"expires_at"],[2299,66,1822,70],[2299,72,1822,76],[2299,76,1822,80],[2299,80,1822,84,"_b"],[2299,82,1822,86],[2299,87,1822,91],[2299,92,1822,96],[2299,93,1822,97],[2299,96,1822,100,"_b"],[2299,98,1822,102],[2299,101,1822,105,"Infinity"],[2299,109,1822,113],[2299,113,1822,117],[2299,117,1822,121],[2299,120,1822,124,"Date"],[2299,124,1822,128],[2299,125,1822,129,"now"],[2299,128,1822,132],[2299,129,1822,133],[2299,130,1822,134],[2299,133,1822,137,"EXPIRY_MARGIN_MS"],[2299,160,1822,153],[2300,8,1823,12],[2300,12,1823,16],[2300,13,1823,17,"_debug"],[2300,19,1823,23],[2300,20,1823,24,"debugName"],[2300,29,1823,33],[2300,31,1823,35],[2300,45,1823,49,"expiresWithMargin"],[2300,62,1823,66],[2300,65,1823,69],[2300,67,1823,71],[2300,70,1823,74],[2300,76,1823,80],[2300,103,1823,107,"EXPIRY_MARGIN_MS"],[2300,130,1823,123],[2300,133,1823,126],[2300,134,1823,127],[2301,8,1824,12],[2301,12,1824,16,"expiresWithMargin"],[2301,29,1824,33],[2301,31,1824,35],[2302,10,1825,16],[2302,14,1825,20],[2302,18,1825,24],[2302,19,1825,25,"autoRefreshToken"],[2302,35,1825,41],[2302,39,1825,45,"currentSession"],[2302,53,1825,59],[2302,54,1825,60,"refresh_token"],[2302,67,1825,73],[2302,69,1825,75],[2303,12,1826,20],[2303,18,1826,26],[2304,14,1826,28,"error"],[2305,12,1826,34],[2305,13,1826,35],[2305,16,1826,38],[2305,22,1826,44],[2305,26,1826,48],[2305,27,1826,49,"_callRefreshToken"],[2305,44,1826,66],[2305,45,1826,67,"currentSession"],[2305,59,1826,81],[2305,60,1826,82,"refresh_token"],[2305,73,1826,95],[2305,74,1826,96],[2306,12,1827,20],[2306,16,1827,24,"error"],[2306,21,1827,29],[2306,23,1827,31],[2307,14,1828,24,"console"],[2307,21,1828,31],[2307,22,1828,32,"error"],[2307,27,1828,37],[2307,28,1828,38,"error"],[2307,33,1828,43],[2307,34,1828,44],[2308,14,1829,24],[2308,18,1829,28],[2308,19,1829,29],[2308,23,1829,29,"isAuthRetryableFetchError"],[2308,56,1829,54],[2308,58,1829,55,"error"],[2308,63,1829,60],[2308,64,1829,61],[2308,66,1829,63],[2309,16,1830,28],[2309,20,1830,32],[2309,21,1830,33,"_debug"],[2309,27,1830,39],[2309,28,1830,40,"debugName"],[2309,37,1830,49],[2309,39,1830,51],[2309,104,1830,116],[2309,106,1830,118,"error"],[2309,111,1830,123],[2309,112,1830,124],[2310,16,1831,28],[2310,22,1831,34],[2310,26,1831,38],[2310,27,1831,39,"_removeSession"],[2310,41,1831,53],[2310,42,1831,54],[2310,43,1831,55],[2311,14,1832,24],[2312,12,1833,20],[2313,10,1834,16],[2314,8,1835,12],[2314,9,1835,13],[2314,15,1836,17],[2314,19,1836,21,"currentSession"],[2314,33,1836,35],[2314,34,1836,36,"user"],[2314,38,1836,40],[2314,42,1837,16,"currentSession"],[2314,56,1837,30],[2314,57,1837,31,"user"],[2314,61,1837,35],[2314,62,1837,36,"__isUserNotAvailableProxy"],[2314,87,1837,61],[2314,92,1837,66],[2314,96,1837,70],[2314,98,1837,72],[2315,10,1838,16],[2316,10,1839,16],[2316,14,1839,20],[2317,12,1840,20],[2317,18,1840,26],[2318,14,1840,28,"data"],[2318,18,1840,32],[2319,14,1840,34,"error"],[2319,19,1840,39],[2319,21,1840,41,"userError"],[2320,12,1840,51],[2320,13,1840,52],[2320,16,1840,55],[2320,22,1840,61],[2320,26,1840,65],[2320,27,1840,66,"_getUser"],[2320,35,1840,74],[2320,36,1840,75,"currentSession"],[2320,50,1840,89],[2320,51,1840,90,"access_token"],[2320,63,1840,102],[2320,64,1840,103],[2321,12,1841,20],[2321,16,1841,24],[2321,17,1841,25,"userError"],[2321,26,1841,34],[2321,31,1841,39,"data"],[2321,35,1841,43],[2321,40,1841,48],[2321,44,1841,52],[2321,48,1841,56,"data"],[2321,52,1841,60],[2321,57,1841,65],[2321,62,1841,70],[2321,63,1841,71],[2321,66,1841,74],[2321,71,1841,79],[2321,72,1841,80],[2321,75,1841,83,"data"],[2321,79,1841,87],[2321,80,1841,88,"user"],[2321,84,1841,92],[2321,85,1841,93],[2321,87,1841,95],[2322,14,1842,24,"currentSession"],[2322,28,1842,38],[2322,29,1842,39,"user"],[2322,33,1842,43],[2322,36,1842,46,"data"],[2322,40,1842,50],[2322,41,1842,51,"user"],[2322,45,1842,55],[2323,14,1843,24],[2323,20,1843,30],[2323,24,1843,34],[2323,25,1843,35,"_saveSession"],[2323,37,1843,47],[2323,38,1843,48,"currentSession"],[2323,52,1843,62],[2323,53,1843,63],[2324,14,1844,24],[2324,20,1844,30],[2324,24,1844,34],[2324,25,1844,35,"_notifyAllSubscribers"],[2324,46,1844,56],[2324,47,1844,57],[2324,58,1844,68],[2324,60,1844,70,"currentSession"],[2324,74,1844,84],[2324,75,1844,85],[2325,12,1845,20],[2325,13,1845,21],[2325,19,1846,25],[2326,14,1847,24],[2326,18,1847,28],[2326,19,1847,29,"_debug"],[2326,25,1847,35],[2326,26,1847,36,"debugName"],[2326,35,1847,45],[2326,37,1847,47],[2326,95,1847,105],[2326,96,1847,106],[2327,12,1848,20],[2328,10,1849,16],[2328,11,1849,17],[2328,12,1850,16],[2328,19,1850,23,"getUserError"],[2328,31,1850,35],[2328,33,1850,37],[2329,12,1851,20,"console"],[2329,19,1851,27],[2329,20,1851,28,"error"],[2329,25,1851,33],[2329,26,1851,34],[2329,52,1851,60],[2329,54,1851,62,"getUserError"],[2329,66,1851,74],[2329,67,1851,75],[2330,12,1852,20],[2330,16,1852,24],[2330,17,1852,25,"_debug"],[2330,23,1852,31],[2330,24,1852,32,"debugName"],[2330,33,1852,41],[2330,35,1852,43],[2330,93,1852,101],[2330,95,1852,103,"getUserError"],[2330,107,1852,115],[2330,108,1852,116],[2331,10,1853,16],[2332,8,1854,12],[2332,9,1854,13],[2332,15,1855,17],[2333,10,1856,16],[2334,10,1857,16],[2335,10,1858,16],[2336,10,1859,16],[2336,16,1859,22],[2336,20,1859,26],[2336,21,1859,27,"_notifyAllSubscribers"],[2336,42,1859,48],[2336,43,1859,49],[2336,54,1859,60],[2336,56,1859,62,"currentSession"],[2336,70,1859,76],[2336,71,1859,77],[2337,8,1860,12],[2338,6,1861,8],[2338,7,1861,9],[2338,8,1862,8],[2338,15,1862,15,"err"],[2338,18,1862,18],[2338,20,1862,20],[2339,8,1863,12],[2339,12,1863,16],[2339,13,1863,17,"_debug"],[2339,19,1863,23],[2339,20,1863,24,"debugName"],[2339,29,1863,33],[2339,31,1863,35],[2339,38,1863,42],[2339,40,1863,44,"err"],[2339,43,1863,47],[2339,44,1863,48],[2340,8,1864,12,"console"],[2340,15,1864,19],[2340,16,1864,20,"error"],[2340,21,1864,25],[2340,22,1864,26,"err"],[2340,25,1864,29],[2340,26,1864,30],[2341,8,1865,12],[2342,6,1866,8],[2342,7,1866,9],[2342,16,1867,16],[2343,8,1868,12],[2343,12,1868,16],[2343,13,1868,17,"_debug"],[2343,19,1868,23],[2343,20,1868,24,"debugName"],[2343,29,1868,33],[2343,31,1868,35],[2343,36,1868,40],[2343,37,1868,41],[2344,6,1869,8],[2345,4,1870,4],[2346,4,1871,4],[2346,10,1871,10,"_callRefreshToken"],[2346,27,1871,27,"_callRefreshToken"],[2346,28,1871,28,"refreshToken"],[2346,40,1871,40],[2346,42,1871,42],[2347,6,1872,8],[2347,10,1872,12,"_a"],[2347,12,1872,14],[2347,14,1872,16,"_b"],[2347,16,1872,18],[2348,6,1873,8],[2348,10,1873,12],[2348,11,1873,13,"refreshToken"],[2348,23,1873,25],[2348,25,1873,27],[2349,8,1874,12],[2349,14,1874,18],[2349,18,1874,22,"AuthSessionMissingError"],[2349,49,1874,45],[2349,50,1874,46],[2349,51,1874,47],[2350,6,1875,8],[2351,6,1876,8],[2352,6,1877,8],[2352,10,1877,12],[2352,14,1877,16],[2352,15,1877,17,"refreshingDeferred"],[2352,33,1877,35],[2352,35,1877,37],[2353,8,1878,12],[2353,15,1878,19],[2353,19,1878,23],[2353,20,1878,24,"refreshingDeferred"],[2353,38,1878,42],[2353,39,1878,43,"promise"],[2353,46,1878,50],[2354,6,1879,8],[2355,6,1880,8],[2355,12,1880,14,"debugName"],[2355,21,1880,23],[2355,24,1880,26],[2355,46,1880,48,"refreshToken"],[2355,58,1880,60],[2355,59,1880,61,"substring"],[2355,68,1880,70],[2355,69,1880,71],[2355,70,1880,72],[2355,72,1880,74],[2355,73,1880,75],[2355,74,1880,76],[2355,80,1880,82],[2356,6,1881,8],[2356,10,1881,12],[2356,11,1881,13,"_debug"],[2356,17,1881,19],[2356,18,1881,20,"debugName"],[2356,27,1881,29],[2356,29,1881,31],[2356,36,1881,38],[2356,37,1881,39],[2357,6,1882,8],[2357,10,1882,12],[2358,8,1883,12],[2358,12,1883,16],[2358,13,1883,17,"refreshingDeferred"],[2358,31,1883,35],[2358,34,1883,38],[2358,38,1883,42,"Deferred"],[2358,55,1883,50],[2358,56,1883,51],[2358,57,1883,52],[2359,8,1884,12],[2359,14,1884,18],[2360,10,1884,20,"data"],[2360,14,1884,24],[2361,10,1884,26,"error"],[2362,8,1884,32],[2362,9,1884,33],[2362,12,1884,36],[2362,18,1884,42],[2362,22,1884,46],[2362,23,1884,47,"_refreshAccessToken"],[2362,42,1884,66],[2362,43,1884,67,"refreshToken"],[2362,55,1884,79],[2362,56,1884,80],[2363,8,1885,12],[2363,12,1885,16,"error"],[2363,17,1885,21],[2363,19,1886,16],[2363,25,1886,22,"error"],[2363,30,1886,27],[2364,8,1887,12],[2364,12,1887,16],[2364,13,1887,17,"data"],[2364,17,1887,21],[2364,18,1887,22,"session"],[2364,25,1887,29],[2364,27,1888,16],[2364,33,1888,22],[2364,37,1888,26,"AuthSessionMissingError"],[2364,68,1888,49],[2364,69,1888,50],[2364,70,1888,51],[2365,8,1889,12],[2365,14,1889,18],[2365,18,1889,22],[2365,19,1889,23,"_saveSession"],[2365,31,1889,35],[2365,32,1889,36,"data"],[2365,36,1889,40],[2365,37,1889,41,"session"],[2365,44,1889,48],[2365,45,1889,49],[2366,8,1890,12],[2366,14,1890,18],[2366,18,1890,22],[2366,19,1890,23,"_notifyAllSubscribers"],[2366,40,1890,44],[2366,41,1890,45],[2366,58,1890,62],[2366,60,1890,64,"data"],[2366,64,1890,68],[2366,65,1890,69,"session"],[2366,72,1890,76],[2366,73,1890,77],[2367,8,1891,12],[2367,14,1891,18,"result"],[2367,20,1891,24],[2367,23,1891,27],[2368,10,1891,29,"data"],[2368,14,1891,33],[2368,16,1891,35,"data"],[2368,20,1891,39],[2368,21,1891,40,"session"],[2368,28,1891,47],[2369,10,1891,49,"error"],[2369,15,1891,54],[2369,17,1891,56],[2370,8,1891,61],[2370,9,1891,62],[2371,8,1892,12],[2371,12,1892,16],[2371,13,1892,17,"refreshingDeferred"],[2371,31,1892,35],[2371,32,1892,36,"resolve"],[2371,39,1892,43],[2371,40,1892,44,"result"],[2371,46,1892,50],[2371,47,1892,51],[2372,8,1893,12],[2372,15,1893,19,"result"],[2372,21,1893,25],[2373,6,1894,8],[2373,7,1894,9],[2373,8,1895,8],[2373,15,1895,15,"error"],[2373,20,1895,20],[2373,22,1895,22],[2374,8,1896,12],[2374,12,1896,16],[2374,13,1896,17,"_debug"],[2374,19,1896,23],[2374,20,1896,24,"debugName"],[2374,29,1896,33],[2374,31,1896,35],[2374,38,1896,42],[2374,40,1896,44,"error"],[2374,45,1896,49],[2374,46,1896,50],[2375,8,1897,12],[2375,12,1897,16],[2375,16,1897,16,"isAuthError"],[2375,35,1897,27],[2375,37,1897,28,"error"],[2375,42,1897,33],[2375,43,1897,34],[2375,45,1897,36],[2376,10,1898,16],[2376,16,1898,22,"result"],[2376,22,1898,28],[2376,25,1898,31],[2377,12,1898,33,"data"],[2377,16,1898,37],[2377,18,1898,39],[2377,22,1898,43],[2378,12,1898,45,"error"],[2379,10,1898,51],[2379,11,1898,52],[2380,10,1899,16],[2380,14,1899,20],[2380,15,1899,21],[2380,19,1899,21,"isAuthRetryableFetchError"],[2380,52,1899,46],[2380,54,1899,47,"error"],[2380,59,1899,52],[2380,60,1899,53],[2380,62,1899,55],[2381,12,1900,20],[2381,18,1900,26],[2381,22,1900,30],[2381,23,1900,31,"_removeSession"],[2381,37,1900,45],[2381,38,1900,46],[2381,39,1900,47],[2382,10,1901,16],[2383,10,1902,16],[2383,11,1902,17,"_a"],[2383,13,1902,19],[2383,16,1902,22],[2383,20,1902,26],[2383,21,1902,27,"refreshingDeferred"],[2383,39,1902,45],[2383,45,1902,51],[2383,49,1902,55],[2383,53,1902,59,"_a"],[2383,55,1902,61],[2383,60,1902,66],[2383,65,1902,71],[2383,66,1902,72],[2383,69,1902,75],[2383,74,1902,80],[2383,75,1902,81],[2383,78,1902,84,"_a"],[2383,80,1902,86],[2383,81,1902,87,"resolve"],[2383,88,1902,94],[2383,89,1902,95,"result"],[2383,95,1902,101],[2383,96,1902,102],[2384,10,1903,16],[2384,17,1903,23,"result"],[2384,23,1903,29],[2385,8,1904,12],[2386,8,1905,12],[2386,9,1905,13,"_b"],[2386,11,1905,15],[2386,14,1905,18],[2386,18,1905,22],[2386,19,1905,23,"refreshingDeferred"],[2386,37,1905,41],[2386,43,1905,47],[2386,47,1905,51],[2386,51,1905,55,"_b"],[2386,53,1905,57],[2386,58,1905,62],[2386,63,1905,67],[2386,64,1905,68],[2386,67,1905,71],[2386,72,1905,76],[2386,73,1905,77],[2386,76,1905,80,"_b"],[2386,78,1905,82],[2386,79,1905,83,"reject"],[2386,85,1905,89],[2386,86,1905,90,"error"],[2386,91,1905,95],[2386,92,1905,96],[2387,8,1906,12],[2387,14,1906,18,"error"],[2387,19,1906,23],[2388,6,1907,8],[2388,7,1907,9],[2388,16,1908,16],[2389,8,1909,12],[2389,12,1909,16],[2389,13,1909,17,"refreshingDeferred"],[2389,31,1909,35],[2389,34,1909,38],[2389,38,1909,42],[2390,8,1910,12],[2390,12,1910,16],[2390,13,1910,17,"_debug"],[2390,19,1910,23],[2390,20,1910,24,"debugName"],[2390,29,1910,33],[2390,31,1910,35],[2390,36,1910,40],[2390,37,1910,41],[2391,6,1911,8],[2392,4,1912,4],[2393,4,1913,4],[2393,10,1913,10,"_notifyAllSubscribers"],[2393,31,1913,31,"_notifyAllSubscribers"],[2393,32,1913,32,"event"],[2393,37,1913,37],[2393,39,1913,39,"session"],[2393,46,1913,46],[2393,48,1913,48,"broadcast"],[2393,57,1913,57],[2393,60,1913,60],[2393,64,1913,64],[2393,66,1913,66],[2394,6,1914,8],[2394,12,1914,14,"debugName"],[2394,21,1914,23],[2394,24,1914,26],[2394,50,1914,52,"event"],[2394,55,1914,57],[2394,58,1914,60],[2395,6,1915,8],[2395,10,1915,12],[2395,11,1915,13,"_debug"],[2395,17,1915,19],[2395,18,1915,20,"debugName"],[2395,27,1915,29],[2395,29,1915,31],[2395,36,1915,38],[2395,38,1915,40,"session"],[2395,45,1915,47],[2395,47,1915,49],[2395,62,1915,64,"broadcast"],[2395,71,1915,73],[2395,73,1915,75],[2395,74,1915,76],[2396,6,1916,8],[2396,10,1916,12],[2397,8,1917,12],[2397,12,1917,16],[2397,16,1917,20],[2397,17,1917,21,"broadcastChannel"],[2397,33,1917,37],[2397,37,1917,41,"broadcast"],[2397,46,1917,50],[2397,48,1917,52],[2398,10,1918,16],[2398,14,1918,20],[2398,15,1918,21,"broadcastChannel"],[2398,31,1918,37],[2398,32,1918,38,"postMessage"],[2398,43,1918,49],[2398,44,1918,50],[2399,12,1918,52,"event"],[2399,17,1918,57],[2400,12,1918,59,"session"],[2401,10,1918,67],[2401,11,1918,68],[2401,12,1918,69],[2402,8,1919,12],[2403,8,1920,12],[2403,14,1920,18,"errors"],[2403,20,1920,24],[2403,23,1920,27],[2403,25,1920,29],[2404,8,1921,12],[2404,14,1921,18,"promises"],[2404,22,1921,26],[2404,25,1921,29,"Array"],[2404,30,1921,34],[2404,31,1921,35,"from"],[2404,35,1921,39],[2404,36,1921,40],[2404,40,1921,44],[2404,41,1921,45,"stateChangeEmitters"],[2404,60,1921,64],[2404,61,1921,65,"values"],[2404,67,1921,71],[2404,68,1921,72],[2404,69,1921,73],[2404,70,1921,74],[2404,71,1921,75,"map"],[2404,74,1921,78],[2404,75,1921,79],[2404,81,1921,86,"x"],[2404,82,1921,87],[2404,86,1921,92],[2405,10,1922,16],[2405,14,1922,20],[2406,12,1923,20],[2406,18,1923,26,"x"],[2406,19,1923,27],[2406,20,1923,28,"callback"],[2406,28,1923,36],[2406,29,1923,37,"event"],[2406,34,1923,42],[2406,36,1923,44,"session"],[2406,43,1923,51],[2406,44,1923,52],[2407,10,1924,16],[2407,11,1924,17],[2407,12,1925,16],[2407,19,1925,23,"e"],[2407,20,1925,24],[2407,22,1925,26],[2408,12,1926,20,"errors"],[2408,18,1926,26],[2408,19,1926,27,"push"],[2408,23,1926,31],[2408,24,1926,32,"e"],[2408,25,1926,33],[2408,26,1926,34],[2409,10,1927,16],[2410,8,1928,12],[2410,9,1928,13],[2410,10,1928,14],[2411,8,1929,12],[2411,14,1929,18,"Promise"],[2411,21,1929,25],[2411,22,1929,26,"all"],[2411,25,1929,29],[2411,26,1929,30,"promises"],[2411,34,1929,38],[2411,35,1929,39],[2412,8,1930,12],[2412,12,1930,16,"errors"],[2412,18,1930,22],[2412,19,1930,23,"length"],[2412,25,1930,29],[2412,28,1930,32],[2412,29,1930,33],[2412,31,1930,35],[2413,10,1931,16],[2413,15,1931,21],[2413,19,1931,25,"i"],[2413,20,1931,26],[2413,23,1931,29],[2413,24,1931,30],[2413,26,1931,32,"i"],[2413,27,1931,33],[2413,30,1931,36,"errors"],[2413,36,1931,42],[2413,37,1931,43,"length"],[2413,43,1931,49],[2413,45,1931,51,"i"],[2413,46,1931,52],[2413,50,1931,56],[2413,51,1931,57],[2413,53,1931,59],[2414,12,1932,20,"console"],[2414,19,1932,27],[2414,20,1932,28,"error"],[2414,25,1932,33],[2414,26,1932,34,"errors"],[2414,32,1932,40],[2414,33,1932,41,"i"],[2414,34,1932,42],[2414,35,1932,43],[2414,36,1932,44],[2415,10,1933,16],[2416,10,1934,16],[2416,16,1934,22,"errors"],[2416,22,1934,28],[2416,23,1934,29],[2416,24,1934,30],[2416,25,1934,31],[2417,8,1935,12],[2418,6,1936,8],[2418,7,1936,9],[2418,16,1937,16],[2419,8,1938,12],[2419,12,1938,16],[2419,13,1938,17,"_debug"],[2419,19,1938,23],[2419,20,1938,24,"debugName"],[2419,29,1938,33],[2419,31,1938,35],[2419,36,1938,40],[2419,37,1938,41],[2420,6,1939,8],[2421,4,1940,4],[2422,4,1941,4],[2423,0,1942,0],[2424,0,1943,0],[2425,0,1944,0],[2426,4,1945,4],[2426,10,1945,10,"_saveSession"],[2426,22,1945,22,"_saveSession"],[2426,23,1945,23,"session"],[2426,30,1945,30],[2426,32,1945,32],[2427,6,1946,8],[2427,10,1946,12],[2427,11,1946,13,"_debug"],[2427,17,1946,19],[2427,18,1946,20],[2427,35,1946,37],[2427,37,1946,39,"session"],[2427,44,1946,46],[2427,45,1946,47],[2428,6,1947,8],[2429,6,1948,8],[2430,6,1949,8],[2430,10,1949,12],[2430,11,1949,13,"suppressGetSessionWarning"],[2430,36,1949,38],[2430,39,1949,41],[2430,43,1949,45],[2431,6,1950,8],[2432,6,1951,8],[2432,12,1951,14,"sessionToProcess"],[2432,28,1951,30],[2432,31,1951,33,"Object"],[2432,37,1951,39],[2432,38,1951,40,"assign"],[2432,44,1951,46],[2432,45,1951,47],[2432,46,1951,48],[2432,47,1951,49],[2432,49,1951,51,"session"],[2432,56,1951,58],[2432,57,1951,59],[2433,6,1952,8],[2433,12,1952,14,"userIsProxy"],[2433,23,1952,25],[2433,26,1952,28,"sessionToProcess"],[2433,42,1952,44],[2433,43,1952,45,"user"],[2433,47,1952,49],[2433,51,1952,53,"sessionToProcess"],[2433,67,1952,69],[2433,68,1952,70,"user"],[2433,72,1952,74],[2433,73,1952,75,"__isUserNotAvailableProxy"],[2433,98,1952,100],[2433,103,1952,105],[2433,107,1952,109],[2434,6,1953,8],[2434,10,1953,12],[2434,14,1953,16],[2434,15,1953,17,"userStorage"],[2434,26,1953,28],[2434,28,1953,30],[2435,8,1954,12],[2435,12,1954,16],[2435,13,1954,17,"userIsProxy"],[2435,24,1954,28],[2435,28,1954,32,"sessionToProcess"],[2435,44,1954,48],[2435,45,1954,49,"user"],[2435,49,1954,53],[2435,51,1954,55],[2436,10,1955,16],[2437,10,1956,16],[2437,16,1956,22],[2437,20,1956,22,"setItemAsync"],[2437,41,1956,34],[2437,43,1956,35],[2437,47,1956,39],[2437,48,1956,40,"userStorage"],[2437,59,1956,51],[2437,61,1956,53],[2437,65,1956,57],[2437,66,1956,58,"storageKey"],[2437,76,1956,68],[2437,79,1956,71],[2437,86,1956,78],[2437,88,1956,80],[2438,12,1957,20,"user"],[2438,16,1957,24],[2438,18,1957,26,"sessionToProcess"],[2438,34,1957,42],[2438,35,1957,43,"user"],[2439,10,1958,16],[2439,11,1958,17],[2439,12,1958,18],[2440,8,1959,12],[2440,9,1959,13],[2440,15,1960,17],[2440,19,1960,21,"userIsProxy"],[2440,30,1960,32],[2440,32,1960,34],[2441,10,1961,16],[2442,10,1962,16],[2443,10,1963,16],[2444,10,1964,16],[2445,8,1964,16],[2446,8,1966,12],[2447,8,1967,12],[2448,8,1968,12],[2448,14,1968,18,"mainSessionData"],[2448,29,1968,33],[2448,32,1968,36,"Object"],[2448,38,1968,42],[2448,39,1968,43,"assign"],[2448,45,1968,49],[2448,46,1968,50],[2448,47,1968,51],[2448,48,1968,52],[2448,50,1968,54,"sessionToProcess"],[2448,66,1968,70],[2448,67,1968,71],[2449,8,1969,12],[2449,15,1969,19,"mainSessionData"],[2449,30,1969,34],[2449,31,1969,35,"user"],[2449,35,1969,39],[2449,36,1969,40],[2449,37,1969,41],[2450,8,1970,12],[2450,14,1970,18,"clonedMainSessionData"],[2450,35,1970,39],[2450,38,1970,42],[2450,42,1970,42,"deepClone"],[2450,60,1970,51],[2450,62,1970,52,"mainSessionData"],[2450,77,1970,67],[2450,78,1970,68],[2451,8,1971,12],[2451,14,1971,18],[2451,18,1971,18,"setItemAsync"],[2451,39,1971,30],[2451,41,1971,31],[2451,45,1971,35],[2451,46,1971,36,"storage"],[2451,53,1971,43],[2451,55,1971,45],[2451,59,1971,49],[2451,60,1971,50,"storageKey"],[2451,70,1971,60],[2451,72,1971,62,"clonedMainSessionData"],[2451,93,1971,83],[2451,94,1971,84],[2452,6,1972,8],[2452,7,1972,9],[2452,13,1973,13],[2453,8,1974,12],[2454,8,1975,12],[2455,8,1976,12],[2456,8,1977,12],[2456,14,1977,18,"clonedSession"],[2456,27,1977,31],[2456,30,1977,34],[2456,34,1977,34,"deepClone"],[2456,52,1977,43],[2456,54,1977,44,"sessionToProcess"],[2456,70,1977,60],[2456,71,1977,61],[2456,72,1977,62],[2456,73,1977,63],[2457,8,1978,12],[2457,14,1978,18],[2457,18,1978,18,"setItemAsync"],[2457,39,1978,30],[2457,41,1978,31],[2457,45,1978,35],[2457,46,1978,36,"storage"],[2457,53,1978,43],[2457,55,1978,45],[2457,59,1978,49],[2457,60,1978,50,"storageKey"],[2457,70,1978,60],[2457,72,1978,62,"clonedSession"],[2457,85,1978,75],[2457,86,1978,76],[2458,6,1979,8],[2459,4,1980,4],[2460,4,1981,4],[2460,10,1981,10,"_removeSession"],[2460,24,1981,24,"_removeSession"],[2460,25,1981,24],[2460,27,1981,27],[2461,6,1982,8],[2461,10,1982,12],[2461,11,1982,13,"_debug"],[2461,17,1982,19],[2461,18,1982,20],[2461,37,1982,39],[2461,38,1982,40],[2462,6,1983,8],[2462,12,1983,14],[2462,16,1983,14,"removeItemAsync"],[2462,40,1983,29],[2462,42,1983,30],[2462,46,1983,34],[2462,47,1983,35,"storage"],[2462,54,1983,42],[2462,56,1983,44],[2462,60,1983,48],[2462,61,1983,49,"storageKey"],[2462,71,1983,59],[2462,72,1983,60],[2463,6,1984,8],[2463,12,1984,14],[2463,16,1984,14,"removeItemAsync"],[2463,40,1984,29],[2463,42,1984,30],[2463,46,1984,34],[2463,47,1984,35,"storage"],[2463,54,1984,42],[2463,56,1984,44],[2463,60,1984,48],[2463,61,1984,49,"storageKey"],[2463,71,1984,59],[2463,74,1984,62],[2463,90,1984,78],[2463,91,1984,79],[2464,6,1985,8],[2464,12,1985,14],[2464,16,1985,14,"removeItemAsync"],[2464,40,1985,29],[2464,42,1985,30],[2464,46,1985,34],[2464,47,1985,35,"storage"],[2464,54,1985,42],[2464,56,1985,44],[2464,60,1985,48],[2464,61,1985,49,"storageKey"],[2464,71,1985,59],[2464,74,1985,62],[2464,81,1985,69],[2464,82,1985,70],[2465,6,1986,8],[2465,10,1986,12],[2465,14,1986,16],[2465,15,1986,17,"userStorage"],[2465,26,1986,28],[2465,28,1986,30],[2466,8,1987,12],[2466,14,1987,18],[2466,18,1987,18,"removeItemAsync"],[2466,42,1987,33],[2466,44,1987,34],[2466,48,1987,38],[2466,49,1987,39,"userStorage"],[2466,60,1987,50],[2466,62,1987,52],[2466,66,1987,56],[2466,67,1987,57,"storageKey"],[2466,77,1987,67],[2466,80,1987,70],[2466,87,1987,77],[2466,88,1987,78],[2467,6,1988,8],[2468,6,1989,8],[2468,12,1989,14],[2468,16,1989,18],[2468,17,1989,19,"_notifyAllSubscribers"],[2468,38,1989,40],[2468,39,1989,41],[2468,51,1989,53],[2468,53,1989,55],[2468,57,1989,59],[2468,58,1989,60],[2469,4,1990,4],[2470,4,1991,4],[2471,0,1992,0],[2472,0,1993,0],[2473,0,1994,0],[2474,0,1995,0],[2475,0,1996,0],[2476,4,1997,4,"_removeVisibilityChangedCallback"],[2476,36,1997,36,"_removeVisibilityChangedCallback"],[2476,37,1997,36],[2476,39,1997,39],[2477,6,1998,8],[2477,10,1998,12],[2477,11,1998,13,"_debug"],[2477,17,1998,19],[2477,18,1998,20],[2477,55,1998,57],[2477,56,1998,58],[2478,6,1999,8],[2478,12,1999,14,"callback"],[2478,20,1999,22],[2478,23,1999,25],[2478,27,1999,29],[2478,28,1999,30,"visibilityChangedCallback"],[2478,53,1999,55],[2479,6,2000,8],[2479,10,2000,12],[2479,11,2000,13,"visibilityChangedCallback"],[2479,36,2000,38],[2479,39,2000,41],[2479,43,2000,45],[2480,6,2001,8],[2480,10,2001,12],[2481,8,2002,12],[2481,12,2002,16,"callback"],[2481,20,2002,24],[2481,24,2002,28],[2481,28,2002,28,"isBrowser"],[2481,46,2002,37],[2481,48,2002,38],[2481,49,2002,39],[2481,54,2002,44,"window"],[2481,60,2002,50],[2481,65,2002,55],[2481,69,2002,59],[2481,73,2002,63,"window"],[2481,79,2002,69],[2481,84,2002,74],[2481,89,2002,79],[2481,90,2002,80],[2481,93,2002,83],[2481,98,2002,88],[2481,99,2002,89],[2481,102,2002,92,"window"],[2481,108,2002,98],[2481,109,2002,99,"removeEventListener"],[2481,128,2002,118],[2481,129,2002,119],[2481,131,2002,121],[2482,10,2003,16,"window"],[2482,16,2003,22],[2482,17,2003,23,"removeEventListener"],[2482,36,2003,42],[2482,37,2003,43],[2482,55,2003,61],[2482,57,2003,63,"callback"],[2482,65,2003,71],[2482,66,2003,72],[2483,8,2004,12],[2484,6,2005,8],[2484,7,2005,9],[2484,8,2006,8],[2484,15,2006,15,"e"],[2484,16,2006,16],[2484,18,2006,18],[2485,8,2007,12,"console"],[2485,15,2007,19],[2485,16,2007,20,"error"],[2485,21,2007,25],[2485,22,2007,26],[2485,65,2007,69],[2485,67,2007,71,"e"],[2485,68,2007,72],[2485,69,2007,73],[2486,6,2008,8],[2487,4,2009,4],[2488,4,2010,4],[2489,0,2011,0],[2490,0,2012,0],[2491,0,2013,0],[2492,4,2014,4],[2492,10,2014,10,"_startAutoRefresh"],[2492,27,2014,27,"_startAutoRefresh"],[2492,28,2014,27],[2492,30,2014,30],[2493,6,2015,8],[2493,12,2015,14],[2493,16,2015,18],[2493,17,2015,19,"_stopAutoRefresh"],[2493,33,2015,35],[2493,34,2015,36],[2493,35,2015,37],[2494,6,2016,8],[2494,10,2016,12],[2494,11,2016,13,"_debug"],[2494,17,2016,19],[2494,18,2016,20],[2494,40,2016,42],[2494,41,2016,43],[2495,6,2017,8],[2495,12,2017,14,"ticker"],[2495,18,2017,20],[2495,21,2017,23,"setInterval"],[2495,32,2017,34],[2495,33,2017,35],[2495,39,2017,41],[2495,43,2017,45],[2495,44,2017,46,"_autoRefreshTokenTick"],[2495,65,2017,67],[2495,66,2017,68],[2495,67,2017,69],[2495,69,2017,71,"AUTO_REFRESH_TICK_DURATION_MS"],[2495,109,2017,100],[2495,110,2017,101],[2496,6,2018,8],[2496,10,2018,12],[2496,11,2018,13,"autoRefreshTicker"],[2496,28,2018,30],[2496,31,2018,33,"ticker"],[2496,37,2018,39],[2497,6,2019,8],[2497,10,2019,12,"ticker"],[2497,16,2019,18],[2497,20,2019,22],[2497,27,2019,29,"ticker"],[2497,33,2019,35],[2497,38,2019,40],[2497,46,2019,48],[2497,50,2019,52],[2497,57,2019,59,"ticker"],[2497,63,2019,65],[2497,64,2019,66,"unref"],[2497,69,2019,71],[2497,74,2019,76],[2497,84,2019,86],[2497,86,2019,88],[2498,8,2020,12],[2499,8,2021,12],[2500,8,2022,12],[2501,8,2023,12],[2502,8,2024,12],[2503,8,2025,12],[2504,8,2026,12,"ticker"],[2504,14,2026,18],[2504,15,2026,19,"unref"],[2504,20,2026,24],[2504,21,2026,25],[2504,22,2026,26],[2505,8,2027,12],[2506,6,2028,8],[2506,7,2028,9],[2506,13,2029,13],[2506,17,2029,17],[2506,24,2029,24,"Deno"],[2506,28,2029,28],[2506,33,2029,33],[2506,44,2029,44],[2506,48,2029,48],[2506,55,2029,55,"Deno"],[2506,59,2029,59],[2506,60,2029,60,"unrefTimer"],[2506,70,2029,70],[2506,75,2029,75],[2506,85,2029,85],[2506,87,2029,87],[2507,8,2030,12],[2508,8,2031,12],[2509,8,2032,12],[2510,8,2033,12,"Deno"],[2510,12,2033,16],[2510,13,2033,17,"unrefTimer"],[2510,23,2033,27],[2510,24,2033,28,"ticker"],[2510,30,2033,34],[2510,31,2033,35],[2511,6,2034,8],[2512,6,2035,8],[2513,6,2036,8],[2514,6,2037,8],[2515,6,2038,8,"setTimeout"],[2515,16,2038,18],[2515,17,2038,19],[2515,29,2038,31],[2516,8,2039,12],[2516,14,2039,18],[2516,18,2039,22],[2516,19,2039,23,"initializePromise"],[2516,36,2039,40],[2517,8,2040,12],[2517,14,2040,18],[2517,18,2040,22],[2517,19,2040,23,"_autoRefreshTokenTick"],[2517,40,2040,44],[2517,41,2040,45],[2517,42,2040,46],[2518,6,2041,8],[2518,7,2041,9],[2518,9,2041,11],[2518,10,2041,12],[2518,11,2041,13],[2519,4,2042,4],[2520,4,2043,4],[2521,0,2044,0],[2522,0,2045,0],[2523,0,2046,0],[2524,4,2047,4],[2524,10,2047,10,"_stopAutoRefresh"],[2524,26,2047,26,"_stopAutoRefresh"],[2524,27,2047,26],[2524,29,2047,29],[2525,6,2048,8],[2525,10,2048,12],[2525,11,2048,13,"_debug"],[2525,17,2048,19],[2525,18,2048,20],[2525,39,2048,41],[2525,40,2048,42],[2526,6,2049,8],[2526,12,2049,14,"ticker"],[2526,18,2049,20],[2526,21,2049,23],[2526,25,2049,27],[2526,26,2049,28,"autoRefreshTicker"],[2526,43,2049,45],[2527,6,2050,8],[2527,10,2050,12],[2527,11,2050,13,"autoRefreshTicker"],[2527,28,2050,30],[2527,31,2050,33],[2527,35,2050,37],[2528,6,2051,8],[2528,10,2051,12,"ticker"],[2528,16,2051,18],[2528,18,2051,20],[2529,8,2052,12,"clearInterval"],[2529,21,2052,25],[2529,22,2052,26,"ticker"],[2529,28,2052,32],[2529,29,2052,33],[2530,6,2053,8],[2531,4,2054,4],[2532,4,2055,4],[2533,0,2056,0],[2534,0,2057,0],[2535,0,2058,0],[2536,0,2059,0],[2537,0,2060,0],[2538,0,2061,0],[2539,0,2062,0],[2540,0,2063,0],[2541,0,2064,0],[2542,0,2065,0],[2543,0,2066,0],[2544,0,2067,0],[2545,0,2068,0],[2546,0,2069,0],[2547,0,2070,0],[2548,0,2071,0],[2549,0,2072,0],[2550,0,2073,0],[2551,0,2074,0],[2552,0,2075,0],[2553,0,2076,0],[2554,4,2077,4],[2554,10,2077,10,"startAutoRefresh"],[2554,26,2077,26,"startAutoRefresh"],[2554,27,2077,26],[2554,29,2077,29],[2555,6,2078,8],[2555,10,2078,12],[2555,11,2078,13,"_removeVisibilityChangedCallback"],[2555,43,2078,45],[2555,44,2078,46],[2555,45,2078,47],[2556,6,2079,8],[2556,12,2079,14],[2556,16,2079,18],[2556,17,2079,19,"_startAutoRefresh"],[2556,34,2079,36],[2556,35,2079,37],[2556,36,2079,38],[2557,4,2080,4],[2558,4,2081,4],[2559,0,2082,0],[2560,0,2083,0],[2561,0,2084,0],[2562,0,2085,0],[2563,0,2086,0],[2564,0,2087,0],[2565,0,2088,0],[2566,4,2089,4],[2566,10,2089,10,"stopAutoRefresh"],[2566,25,2089,25,"stopAutoRefresh"],[2566,26,2089,25],[2566,28,2089,28],[2567,6,2090,8],[2567,10,2090,12],[2567,11,2090,13,"_removeVisibilityChangedCallback"],[2567,43,2090,45],[2567,44,2090,46],[2567,45,2090,47],[2568,6,2091,8],[2568,12,2091,14],[2568,16,2091,18],[2568,17,2091,19,"_stopAutoRefresh"],[2568,33,2091,35],[2568,34,2091,36],[2568,35,2091,37],[2569,4,2092,4],[2570,4,2093,4],[2571,0,2094,0],[2572,0,2095,0],[2573,4,2096,4],[2573,10,2096,10,"_autoRefreshTokenTick"],[2573,31,2096,31,"_autoRefreshTokenTick"],[2573,32,2096,31],[2573,34,2096,34],[2574,6,2097,8],[2574,10,2097,12],[2574,11,2097,13,"_debug"],[2574,17,2097,19],[2574,18,2097,20],[2574,44,2097,46],[2574,46,2097,48],[2574,53,2097,55],[2574,54,2097,56],[2575,6,2098,8],[2575,10,2098,12],[2576,8,2099,12],[2576,14,2099,18],[2576,18,2099,22],[2576,19,2099,23,"_acquireLock"],[2576,31,2099,35],[2576,32,2099,36],[2576,33,2099,37],[2576,35,2099,39],[2576,47,2099,51],[2577,10,2100,16],[2577,14,2100,20],[2578,12,2101,20],[2578,18,2101,26,"now"],[2578,21,2101,29],[2578,24,2101,32,"Date"],[2578,28,2101,36],[2578,29,2101,37,"now"],[2578,32,2101,40],[2578,33,2101,41],[2578,34,2101,42],[2579,12,2102,20],[2579,16,2102,24],[2580,14,2103,24],[2580,21,2103,31],[2580,27,2103,37],[2580,31,2103,41],[2580,32,2103,42,"_useSession"],[2580,43,2103,53],[2580,44,2103,54],[2580,50,2103,61,"result"],[2580,56,2103,67],[2580,60,2103,72],[2581,16,2104,28],[2581,22,2104,34],[2582,18,2104,36,"data"],[2582,22,2104,40],[2582,24,2104,42],[2583,20,2104,44,"session"],[2584,18,2104,52],[2585,16,2104,55],[2585,17,2104,56],[2585,20,2104,59,"result"],[2585,26,2104,65],[2586,16,2105,28],[2586,20,2105,32],[2586,21,2105,33,"session"],[2586,28,2105,40],[2586,32,2105,44],[2586,33,2105,45,"session"],[2586,40,2105,52],[2586,41,2105,53,"refresh_token"],[2586,54,2105,66],[2586,58,2105,70],[2586,59,2105,71,"session"],[2586,66,2105,78],[2586,67,2105,79,"expires_at"],[2586,77,2105,89],[2586,79,2105,91],[2587,18,2106,32],[2587,22,2106,36],[2587,23,2106,37,"_debug"],[2587,29,2106,43],[2587,30,2106,44],[2587,56,2106,70],[2587,58,2106,72],[2587,70,2106,84],[2587,71,2106,85],[2588,18,2107,32],[2589,16,2108,28],[2590,16,2109,28],[2591,16,2110,28],[2591,22,2110,34,"expiresInTicks"],[2591,36,2110,48],[2591,39,2110,51,"Math"],[2591,43,2110,55],[2591,44,2110,56,"floor"],[2591,49,2110,61],[2591,50,2110,62],[2591,51,2110,63,"session"],[2591,58,2110,70],[2591,59,2110,71,"expires_at"],[2591,69,2110,81],[2591,72,2110,84],[2591,76,2110,88],[2591,79,2110,91,"now"],[2591,82,2110,94],[2591,86,2110,98,"AUTO_REFRESH_TICK_DURATION_MS"],[2591,126,2110,127],[2591,127,2110,128],[2592,16,2111,28],[2592,20,2111,32],[2592,21,2111,33,"_debug"],[2592,27,2111,39],[2592,28,2111,40],[2592,54,2111,66],[2592,56,2111,68],[2592,83,2111,95,"expiresInTicks"],[2592,97,2111,109],[2592,121,2111,133,"AUTO_REFRESH_TICK_DURATION_MS"],[2592,161,2111,162],[2592,189,2111,190,"AUTO_REFRESH_TICK_THRESHOLD"],[2592,227,2111,217],[2592,235,2111,225],[2592,236,2111,226],[2593,16,2112,28],[2593,20,2112,32,"expiresInTicks"],[2593,34,2112,46],[2593,38,2112,50,"AUTO_REFRESH_TICK_THRESHOLD"],[2593,76,2112,77],[2593,78,2112,79],[2594,18,2113,32],[2594,24,2113,38],[2594,28,2113,42],[2594,29,2113,43,"_callRefreshToken"],[2594,46,2113,60],[2594,47,2113,61,"session"],[2594,54,2113,68],[2594,55,2113,69,"refresh_token"],[2594,68,2113,82],[2594,69,2113,83],[2595,16,2114,28],[2596,14,2115,24],[2596,15,2115,25],[2596,16,2115,26],[2597,12,2116,20],[2597,13,2116,21],[2597,14,2117,20],[2597,21,2117,27,"e"],[2597,22,2117,28],[2597,24,2117,30],[2598,14,2118,24,"console"],[2598,21,2118,31],[2598,22,2118,32,"error"],[2598,27,2118,37],[2598,28,2118,38],[2598,100,2118,110],[2598,102,2118,112,"e"],[2598,103,2118,113],[2598,104,2118,114],[2599,12,2119,20],[2600,10,2120,16],[2600,11,2120,17],[2600,20,2121,24],[2601,12,2122,20],[2601,16,2122,24],[2601,17,2122,25,"_debug"],[2601,23,2122,31],[2601,24,2122,32],[2601,50,2122,58],[2601,52,2122,60],[2601,57,2122,65],[2601,58,2122,66],[2602,10,2123,16],[2603,8,2124,12],[2603,9,2124,13],[2603,10,2124,14],[2604,6,2125,8],[2604,7,2125,9],[2604,8,2126,8],[2604,15,2126,15,"e"],[2604,16,2126,16],[2604,18,2126,18],[2605,8,2127,12],[2605,12,2127,16,"e"],[2605,13,2127,17],[2605,14,2127,18,"isAcquireTimeout"],[2605,30,2127,34],[2605,34,2127,38,"e"],[2605,35,2127,39],[2605,47,2127,51,"LockAcquireTimeoutError"],[2605,77,2127,74],[2605,79,2127,76],[2606,10,2128,16],[2606,14,2128,20],[2606,15,2128,21,"_debug"],[2606,21,2128,27],[2606,22,2128,28],[2606,66,2128,72],[2606,67,2128,73],[2607,8,2129,12],[2607,9,2129,13],[2607,15,2130,17],[2608,10,2131,16],[2608,16,2131,22,"e"],[2608,17,2131,23],[2609,8,2132,12],[2610,6,2133,8],[2611,4,2134,4],[2612,4,2135,4],[2613,0,2136,0],[2614,0,2137,0],[2615,0,2138,0],[2616,0,2139,0],[2617,4,2140,4],[2617,10,2140,10,"_handleVisibilityChange"],[2617,33,2140,33,"_handleVisibilityChange"],[2617,34,2140,33],[2617,36,2140,36],[2618,6,2141,8],[2618,10,2141,12],[2618,11,2141,13,"_debug"],[2618,17,2141,19],[2618,18,2141,20],[2618,46,2141,48],[2618,47,2141,49],[2619,6,2142,8],[2619,10,2142,12],[2619,11,2142,13],[2619,15,2142,13,"isBrowser"],[2619,33,2142,22],[2619,35,2142,23],[2619,36,2142,24],[2619,40,2142,28],[2619,42,2142,30,"window"],[2619,48,2142,36],[2619,53,2142,41],[2619,57,2142,45],[2619,61,2142,49,"window"],[2619,67,2142,55],[2619,72,2142,60],[2619,77,2142,65],[2619,78,2142,66],[2619,81,2142,69],[2619,86,2142,74],[2619,87,2142,75],[2619,90,2142,78,"window"],[2619,96,2142,84],[2619,97,2142,85,"addEventListener"],[2619,113,2142,101],[2619,114,2142,102],[2619,116,2142,104],[2620,8,2143,12],[2620,12,2143,16],[2620,16,2143,20],[2620,17,2143,21,"autoRefreshToken"],[2620,33,2143,37],[2620,35,2143,39],[2621,10,2144,16],[2622,10,2145,16],[2622,14,2145,20],[2622,15,2145,21,"startAutoRefresh"],[2622,31,2145,37],[2622,32,2145,38],[2622,33,2145,39],[2623,8,2146,12],[2624,8,2147,12],[2624,15,2147,19],[2624,20,2147,24],[2625,6,2148,8],[2626,6,2149,8],[2626,10,2149,12],[2627,8,2150,12],[2627,12,2150,16],[2627,13,2150,17,"visibilityChangedCallback"],[2627,38,2150,42],[2627,41,2150,45],[2627,53,2150,57],[2627,59,2150,63],[2627,63,2150,67],[2627,64,2150,68,"_onVisibilityChanged"],[2627,84,2150,88],[2627,85,2150,89],[2627,90,2150,94],[2627,91,2150,95],[2628,8,2151,12,"window"],[2628,14,2151,18],[2628,19,2151,23],[2628,23,2151,27],[2628,27,2151,31,"window"],[2628,33,2151,37],[2628,38,2151,42],[2628,43,2151,47],[2628,44,2151,48],[2628,47,2151,51],[2628,52,2151,56],[2628,53,2151,57],[2628,56,2151,60,"window"],[2628,62,2151,66],[2628,63,2151,67,"addEventListener"],[2628,79,2151,83],[2628,80,2151,84],[2628,98,2151,102],[2628,100,2151,104],[2628,104,2151,108],[2628,105,2151,109,"visibilityChangedCallback"],[2628,130,2151,134],[2628,131,2151,135],[2629,8,2152,12],[2630,8,2153,12],[2631,8,2154,12],[2631,14,2154,18],[2631,18,2154,22],[2631,19,2154,23,"_onVisibilityChanged"],[2631,39,2154,43],[2631,40,2154,44],[2631,44,2154,48],[2631,45,2154,49],[2631,46,2154,50],[2631,47,2154,51],[2632,6,2155,8],[2632,7,2155,9],[2632,8,2156,8],[2632,15,2156,15,"error"],[2632,20,2156,20],[2632,22,2156,22],[2633,8,2157,12,"console"],[2633,15,2157,19],[2633,16,2157,20,"error"],[2633,21,2157,25],[2633,22,2157,26],[2633,47,2157,51],[2633,49,2157,53,"error"],[2633,54,2157,58],[2633,55,2157,59],[2634,6,2158,8],[2635,4,2159,4],[2636,4,2160,4],[2637,0,2161,0],[2638,0,2162,0],[2639,4,2163,4],[2639,10,2163,10,"_onVisibilityChanged"],[2639,30,2163,30,"_onVisibilityChanged"],[2639,31,2163,31,"calledFromInitialize"],[2639,51,2163,51],[2639,53,2163,53],[2640,6,2164,8],[2640,12,2164,14,"methodName"],[2640,22,2164,24],[2640,25,2164,27],[2640,50,2164,52,"calledFromInitialize"],[2640,70,2164,72],[2640,73,2164,75],[2641,6,2165,8],[2641,10,2165,12],[2641,11,2165,13,"_debug"],[2641,17,2165,19],[2641,18,2165,20,"methodName"],[2641,28,2165,30],[2641,30,2165,32],[2641,47,2165,49],[2641,49,2165,51,"document"],[2641,57,2165,59],[2641,58,2165,60,"visibilityState"],[2641,73,2165,75],[2641,74,2165,76],[2642,6,2166,8],[2642,10,2166,12,"document"],[2642,18,2166,20],[2642,19,2166,21,"visibilityState"],[2642,34,2166,36],[2642,39,2166,41],[2642,48,2166,50],[2642,50,2166,52],[2643,8,2167,12],[2643,12,2167,16],[2643,16,2167,20],[2643,17,2167,21,"autoRefreshToken"],[2643,33,2167,37],[2643,35,2167,39],[2644,10,2168,16],[2645,10,2169,16],[2646,10,2170,16],[2646,14,2170,20],[2646,15,2170,21,"_startAutoRefresh"],[2646,32,2170,38],[2646,33,2170,39],[2646,34,2170,40],[2647,8,2171,12],[2648,8,2172,12],[2648,12,2172,16],[2648,13,2172,17,"calledFromInitialize"],[2648,33,2172,37],[2648,35,2172,39],[2649,10,2173,16],[2650,10,2174,16],[2651,10,2175,16],[2652,10,2176,16],[2653,10,2177,16],[2653,16,2177,22],[2653,20,2177,26],[2653,21,2177,27,"initializePromise"],[2653,38,2177,44],[2654,10,2178,16],[2654,16,2178,22],[2654,20,2178,26],[2654,21,2178,27,"_acquireLock"],[2654,33,2178,39],[2654,34,2178,40],[2654,35,2178,41],[2654,36,2178,42],[2654,38,2178,44],[2654,50,2178,56],[2655,12,2179,20],[2655,16,2179,24,"document"],[2655,24,2179,32],[2655,25,2179,33,"visibilityState"],[2655,40,2179,48],[2655,45,2179,53],[2655,54,2179,62],[2655,56,2179,64],[2656,14,2180,24],[2656,18,2180,28],[2656,19,2180,29,"_debug"],[2656,25,2180,35],[2656,26,2180,36,"methodName"],[2656,36,2180,46],[2656,38,2180,48],[2656,144,2180,154],[2656,145,2180,155],[2657,14,2181,24],[2658,14,2182,24],[2659,12,2183,20],[2660,12,2184,20],[2661,12,2185,20],[2661,18,2185,26],[2661,22,2185,30],[2661,23,2185,31,"_recoverAndRefresh"],[2661,41,2185,49],[2661,42,2185,50],[2661,43,2185,51],[2662,10,2186,16],[2662,11,2186,17],[2662,12,2186,18],[2663,8,2187,12],[2664,6,2188,8],[2664,7,2188,9],[2664,13,2189,13],[2664,17,2189,17,"document"],[2664,25,2189,25],[2664,26,2189,26,"visibilityState"],[2664,41,2189,41],[2664,46,2189,46],[2664,54,2189,54],[2664,56,2189,56],[2665,8,2190,12],[2665,12,2190,16],[2665,16,2190,20],[2665,17,2190,21,"autoRefreshToken"],[2665,33,2190,37],[2665,35,2190,39],[2666,10,2191,16],[2666,14,2191,20],[2666,15,2191,21,"_stopAutoRefresh"],[2666,31,2191,37],[2666,32,2191,38],[2666,33,2191,39],[2667,8,2192,12],[2668,6,2193,8],[2669,4,2194,4],[2670,4,2195,4],[2671,0,2196,0],[2672,0,2197,0],[2673,0,2198,0],[2674,0,2199,0],[2675,0,2200,0],[2676,4,2201,4],[2676,10,2201,10,"_getUrlForProvider"],[2676,28,2201,28,"_getUrlForProvider"],[2676,29,2201,29,"url"],[2676,32,2201,32],[2676,34,2201,34,"provider"],[2676,42,2201,42],[2676,44,2201,44,"options"],[2676,51,2201,51],[2676,53,2201,53],[2677,6,2202,8],[2677,12,2202,14,"urlParams"],[2677,21,2202,23],[2677,24,2202,26],[2677,25,2202,27],[2677,37,2202,39,"encodeURIComponent"],[2677,55,2202,57],[2677,56,2202,58,"provider"],[2677,64,2202,66],[2677,65,2202,67],[2677,67,2202,69],[2677,68,2202,70],[2678,6,2203,8],[2678,10,2203,12,"options"],[2678,17,2203,19],[2678,22,2203,24],[2678,26,2203,28],[2678,30,2203,32,"options"],[2678,37,2203,39],[2678,42,2203,44],[2678,47,2203,49],[2678,48,2203,50],[2678,51,2203,53],[2678,56,2203,58],[2678,57,2203,59],[2678,60,2203,62,"options"],[2678,67,2203,69],[2678,68,2203,70,"redirectTo"],[2678,78,2203,80],[2678,80,2203,82],[2679,8,2204,12,"urlParams"],[2679,17,2204,21],[2679,18,2204,22,"push"],[2679,22,2204,26],[2679,23,2204,27],[2679,38,2204,42,"encodeURIComponent"],[2679,56,2204,60],[2679,57,2204,61,"options"],[2679,64,2204,68],[2679,65,2204,69,"redirectTo"],[2679,75,2204,79],[2679,76,2204,80],[2679,78,2204,82],[2679,79,2204,83],[2680,6,2205,8],[2681,6,2206,8],[2681,10,2206,12,"options"],[2681,17,2206,19],[2681,22,2206,24],[2681,26,2206,28],[2681,30,2206,32,"options"],[2681,37,2206,39],[2681,42,2206,44],[2681,47,2206,49],[2681,48,2206,50],[2681,51,2206,53],[2681,56,2206,58],[2681,57,2206,59],[2681,60,2206,62,"options"],[2681,67,2206,69],[2681,68,2206,70,"scopes"],[2681,74,2206,76],[2681,76,2206,78],[2682,8,2207,12,"urlParams"],[2682,17,2207,21],[2682,18,2207,22,"push"],[2682,22,2207,26],[2682,23,2207,27],[2682,33,2207,37,"encodeURIComponent"],[2682,51,2207,55],[2682,52,2207,56,"options"],[2682,59,2207,63],[2682,60,2207,64,"scopes"],[2682,66,2207,70],[2682,67,2207,71],[2682,69,2207,73],[2682,70,2207,74],[2683,6,2208,8],[2684,6,2209,8],[2684,10,2209,12],[2684,14,2209,16],[2684,15,2209,17,"flowType"],[2684,23,2209,25],[2684,28,2209,30],[2684,34,2209,36],[2684,36,2209,38],[2685,8,2210,12],[2685,14,2210,18],[2685,15,2210,19,"codeChallenge"],[2685,28,2210,32],[2685,30,2210,34,"codeChallengeMethod"],[2685,49,2210,53],[2685,50,2210,54],[2685,53,2210,57],[2685,59,2210,63],[2685,63,2210,63,"getCodeChallengeAndMethod"],[2685,97,2210,88],[2685,99,2210,89],[2685,103,2210,93],[2685,104,2210,94,"storage"],[2685,111,2210,101],[2685,113,2210,103],[2685,117,2210,107],[2685,118,2210,108,"storageKey"],[2685,128,2210,118],[2685,129,2210,119],[2686,8,2211,12],[2686,14,2211,18,"flowParams"],[2686,24,2211,28],[2686,27,2211,31],[2686,31,2211,35,"URLSearchParams"],[2686,46,2211,50],[2686,47,2211,51],[2687,10,2212,16,"code_challenge"],[2687,24,2212,30],[2687,26,2212,32],[2687,29,2212,35,"encodeURIComponent"],[2687,47,2212,53],[2687,48,2212,54,"codeChallenge"],[2687,61,2212,67],[2687,62,2212,68],[2687,64,2212,70],[2688,10,2213,16,"code_challenge_method"],[2688,31,2213,37],[2688,33,2213,39],[2688,36,2213,42,"encodeURIComponent"],[2688,54,2213,60],[2688,55,2213,61,"codeChallengeMethod"],[2688,74,2213,80],[2688,75,2213,81],[2689,8,2214,12],[2689,9,2214,13],[2689,10,2214,14],[2690,8,2215,12,"urlParams"],[2690,17,2215,21],[2690,18,2215,22,"push"],[2690,22,2215,26],[2690,23,2215,27,"flowParams"],[2690,33,2215,37],[2690,34,2215,38,"toString"],[2690,42,2215,46],[2690,43,2215,47],[2690,44,2215,48],[2690,45,2215,49],[2691,6,2216,8],[2692,6,2217,8],[2692,10,2217,12,"options"],[2692,17,2217,19],[2692,22,2217,24],[2692,26,2217,28],[2692,30,2217,32,"options"],[2692,37,2217,39],[2692,42,2217,44],[2692,47,2217,49],[2692,48,2217,50],[2692,51,2217,53],[2692,56,2217,58],[2692,57,2217,59],[2692,60,2217,62,"options"],[2692,67,2217,69],[2692,68,2217,70,"queryParams"],[2692,79,2217,81],[2692,81,2217,83],[2693,8,2218,12],[2693,14,2218,18,"query"],[2693,19,2218,23],[2693,22,2218,26],[2693,26,2218,30,"URLSearchParams"],[2693,41,2218,45],[2693,42,2218,46,"options"],[2693,49,2218,53],[2693,50,2218,54,"queryParams"],[2693,61,2218,65],[2693,62,2218,66],[2694,8,2219,12,"urlParams"],[2694,17,2219,21],[2694,18,2219,22,"push"],[2694,22,2219,26],[2694,23,2219,27,"query"],[2694,28,2219,32],[2694,29,2219,33,"toString"],[2694,37,2219,41],[2694,38,2219,42],[2694,39,2219,43],[2694,40,2219,44],[2695,6,2220,8],[2696,6,2221,8],[2696,10,2221,12,"options"],[2696,17,2221,19],[2696,22,2221,24],[2696,26,2221,28],[2696,30,2221,32,"options"],[2696,37,2221,39],[2696,42,2221,44],[2696,47,2221,49],[2696,48,2221,50],[2696,51,2221,53],[2696,56,2221,58],[2696,57,2221,59],[2696,60,2221,62,"options"],[2696,67,2221,69],[2696,68,2221,70,"skipBrowserRedirect"],[2696,87,2221,89],[2696,89,2221,91],[2697,8,2222,12,"urlParams"],[2697,17,2222,21],[2697,18,2222,22,"push"],[2697,22,2222,26],[2697,23,2222,27],[2697,45,2222,49,"options"],[2697,52,2222,56],[2697,53,2222,57,"skipBrowserRedirect"],[2697,72,2222,76],[2697,74,2222,78],[2697,75,2222,79],[2698,6,2223,8],[2699,6,2224,8],[2699,13,2224,15],[2699,16,2224,18,"url"],[2699,19,2224,21],[2699,23,2224,25,"urlParams"],[2699,32,2224,34],[2699,33,2224,35,"join"],[2699,37,2224,39],[2699,38,2224,40],[2699,41,2224,43],[2699,42,2224,44],[2699,44,2224,46],[2700,4,2225,4],[2701,4,2226,4],[2701,10,2226,10,"_unenroll"],[2701,19,2226,19,"_unenroll"],[2701,20,2226,20,"params"],[2701,26,2226,26],[2701,28,2226,28],[2702,6,2227,8],[2702,10,2227,12],[2703,8,2228,12],[2703,15,2228,19],[2703,21,2228,25],[2703,25,2228,29],[2703,26,2228,30,"_useSession"],[2703,37,2228,41],[2703,38,2228,42],[2703,44,2228,49,"result"],[2703,50,2228,55],[2703,54,2228,60],[2704,10,2229,16],[2704,14,2229,20,"_a"],[2704,16,2229,22],[2705,10,2230,16],[2705,16,2230,22],[2706,12,2230,24,"data"],[2706,16,2230,28],[2706,18,2230,30,"sessionData"],[2706,29,2230,41],[2707,12,2230,43,"error"],[2707,17,2230,48],[2707,19,2230,50,"sessionError"],[2708,10,2230,63],[2708,11,2230,64],[2708,14,2230,67,"result"],[2708,20,2230,73],[2709,10,2231,16],[2709,14,2231,20,"sessionError"],[2709,26,2231,32],[2709,28,2231,34],[2710,12,2232,20],[2710,19,2232,27],[2711,14,2232,29,"data"],[2711,18,2232,33],[2711,20,2232,35],[2711,24,2232,39],[2712,14,2232,41,"error"],[2712,19,2232,46],[2712,21,2232,48,"sessionError"],[2713,12,2232,61],[2713,13,2232,62],[2714,10,2233,16],[2715,10,2234,16],[2715,17,2234,23],[2715,23,2234,29],[2715,27,2234,29,"_request"],[2715,42,2234,37],[2715,44,2234,38],[2715,48,2234,42],[2715,49,2234,43,"fetch"],[2715,54,2234,48],[2715,56,2234,50],[2715,64,2234,58],[2715,66,2234,60],[2715,69,2234,63],[2715,73,2234,67],[2715,74,2234,68,"url"],[2715,77,2234,71],[2715,89,2234,83,"params"],[2715,95,2234,89],[2715,96,2234,90,"factorId"],[2715,104,2234,98],[2715,106,2234,100],[2715,108,2234,102],[2716,12,2235,20,"headers"],[2716,19,2235,27],[2716,21,2235,29],[2716,25,2235,33],[2716,26,2235,34,"headers"],[2716,33,2235,41],[2717,12,2236,20,"jwt"],[2717,15,2236,23],[2717,17,2236,25],[2717,18,2236,26,"_a"],[2717,20,2236,28],[2717,23,2236,31,"sessionData"],[2717,34,2236,42],[2717,39,2236,47],[2717,43,2236,51],[2717,47,2236,55,"sessionData"],[2717,58,2236,66],[2717,63,2236,71],[2717,68,2236,76],[2717,69,2236,77],[2717,72,2236,80],[2717,77,2236,85],[2717,78,2236,86],[2717,81,2236,89,"sessionData"],[2717,92,2236,100],[2717,93,2236,101,"session"],[2717,100,2236,108],[2717,106,2236,114],[2717,110,2236,118],[2717,114,2236,122,"_a"],[2717,116,2236,124],[2717,121,2236,129],[2717,126,2236,134],[2717,127,2236,135],[2717,130,2236,138],[2717,135,2236,143],[2717,136,2236,144],[2717,139,2236,147,"_a"],[2717,141,2236,149],[2717,142,2236,150,"access_token"],[2718,10,2237,16],[2718,11,2237,17],[2718,12,2237,18],[2719,8,2238,12],[2719,9,2238,13],[2719,10,2238,14],[2720,6,2239,8],[2720,7,2239,9],[2720,8,2240,8],[2720,15,2240,15,"error"],[2720,20,2240,20],[2720,22,2240,22],[2721,8,2241,12],[2721,12,2241,16],[2721,16,2241,16,"isAuthError"],[2721,35,2241,27],[2721,37,2241,28,"error"],[2721,42,2241,33],[2721,43,2241,34],[2721,45,2241,36],[2722,10,2242,16],[2722,17,2242,23],[2723,12,2242,25,"data"],[2723,16,2242,29],[2723,18,2242,31],[2723,22,2242,35],[2724,12,2242,37,"error"],[2725,10,2242,43],[2725,11,2242,44],[2726,8,2243,12],[2727,8,2244,12],[2727,14,2244,18,"error"],[2727,19,2244,23],[2728,6,2245,8],[2729,4,2246,4],[2730,4,2247,4],[2730,10,2247,10,"_enroll"],[2730,17,2247,17,"_enroll"],[2730,18,2247,18,"params"],[2730,24,2247,24],[2730,26,2247,26],[2731,6,2248,8],[2731,10,2248,12],[2732,8,2249,12],[2732,15,2249,19],[2732,21,2249,25],[2732,25,2249,29],[2732,26,2249,30,"_useSession"],[2732,37,2249,41],[2732,38,2249,42],[2732,44,2249,49,"result"],[2732,50,2249,55],[2732,54,2249,60],[2733,10,2250,16],[2733,14,2250,20,"_a"],[2733,16,2250,22],[2733,18,2250,24,"_b"],[2733,20,2250,26],[2734,10,2251,16],[2734,16,2251,22],[2735,12,2251,24,"data"],[2735,16,2251,28],[2735,18,2251,30,"sessionData"],[2735,29,2251,41],[2736,12,2251,43,"error"],[2736,17,2251,48],[2736,19,2251,50,"sessionError"],[2737,10,2251,63],[2737,11,2251,64],[2737,14,2251,67,"result"],[2737,20,2251,73],[2738,10,2252,16],[2738,14,2252,20,"sessionError"],[2738,26,2252,32],[2738,28,2252,34],[2739,12,2253,20],[2739,19,2253,27],[2740,14,2253,29,"data"],[2740,18,2253,33],[2740,20,2253,35],[2740,24,2253,39],[2741,14,2253,41,"error"],[2741,19,2253,46],[2741,21,2253,48,"sessionError"],[2742,12,2253,61],[2742,13,2253,62],[2743,10,2254,16],[2744,10,2255,16],[2744,16,2255,22,"body"],[2744,20,2255,26],[2744,23,2255,29,"Object"],[2744,29,2255,35],[2744,30,2255,36,"assign"],[2744,36,2255,42],[2744,37,2255,43],[2745,12,2255,45,"friendly_name"],[2745,25,2255,58],[2745,27,2255,60,"params"],[2745,33,2255,66],[2745,34,2255,67,"friendlyName"],[2745,46,2255,79],[2746,12,2255,81,"factor_type"],[2746,23,2255,92],[2746,25,2255,94,"params"],[2746,31,2255,100],[2746,32,2255,101,"factorType"],[2747,10,2255,112],[2747,11,2255,113],[2747,13,2255,116,"params"],[2747,19,2255,122],[2747,20,2255,123,"factorType"],[2747,30,2255,133],[2747,35,2255,138],[2747,42,2255,145],[2747,45,2256,22],[2748,12,2256,24,"phone"],[2748,17,2256,29],[2748,19,2256,31,"params"],[2748,25,2256,37],[2748,26,2256,38,"phone"],[2749,10,2256,44],[2749,11,2256,45],[2749,14,2257,22,"params"],[2749,20,2257,28],[2749,21,2257,29,"factorType"],[2749,31,2257,39],[2749,36,2257,44],[2749,42,2257,50],[2749,45,2258,26],[2750,12,2258,28,"issuer"],[2750,18,2258,34],[2750,20,2258,36,"params"],[2750,26,2258,42],[2750,27,2258,43,"issuer"],[2751,10,2258,50],[2751,11,2258,51],[2751,14,2259,26],[2751,15,2259,27],[2751,16,2259,29],[2751,17,2259,30],[2752,10,2260,16],[2752,16,2260,22],[2753,12,2260,24,"data"],[2753,16,2260,28],[2754,12,2260,30,"error"],[2755,10,2260,36],[2755,11,2260,37],[2755,14,2260,41],[2755,20,2260,47],[2755,24,2260,47,"_request"],[2755,39,2260,55],[2755,41,2260,56],[2755,45,2260,60],[2755,46,2260,61,"fetch"],[2755,51,2260,66],[2755,53,2260,68],[2755,59,2260,74],[2755,61,2260,76],[2755,64,2260,79],[2755,68,2260,83],[2755,69,2260,84,"url"],[2755,72,2260,87],[2755,82,2260,97],[2755,84,2260,99],[2756,12,2261,20,"body"],[2756,16,2261,24],[2757,12,2262,20,"headers"],[2757,19,2262,27],[2757,21,2262,29],[2757,25,2262,33],[2757,26,2262,34,"headers"],[2757,33,2262,41],[2758,12,2263,20,"jwt"],[2758,15,2263,23],[2758,17,2263,25],[2758,18,2263,26,"_a"],[2758,20,2263,28],[2758,23,2263,31,"sessionData"],[2758,34,2263,42],[2758,39,2263,47],[2758,43,2263,51],[2758,47,2263,55,"sessionData"],[2758,58,2263,66],[2758,63,2263,71],[2758,68,2263,76],[2758,69,2263,77],[2758,72,2263,80],[2758,77,2263,85],[2758,78,2263,86],[2758,81,2263,89,"sessionData"],[2758,92,2263,100],[2758,93,2263,101,"session"],[2758,100,2263,108],[2758,106,2263,114],[2758,110,2263,118],[2758,114,2263,122,"_a"],[2758,116,2263,124],[2758,121,2263,129],[2758,126,2263,134],[2758,127,2263,135],[2758,130,2263,138],[2758,135,2263,143],[2758,136,2263,144],[2758,139,2263,147,"_a"],[2758,141,2263,149],[2758,142,2263,150,"access_token"],[2759,10,2264,16],[2759,11,2264,17],[2759,12,2264,19],[2760,10,2265,16],[2760,14,2265,20,"error"],[2760,19,2265,25],[2760,21,2265,27],[2761,12,2266,20],[2761,19,2266,27],[2762,14,2266,29,"data"],[2762,18,2266,33],[2762,20,2266,35],[2762,24,2266,39],[2763,14,2266,41,"error"],[2764,12,2266,47],[2764,13,2266,48],[2765,10,2267,16],[2766,10,2268,16],[2766,14,2268,20,"params"],[2766,20,2268,26],[2766,21,2268,27,"factorType"],[2766,31,2268,37],[2766,36,2268,42],[2766,42,2268,48],[2766,46,2268,52,"data"],[2766,50,2268,56],[2766,51,2268,57,"type"],[2766,55,2268,61],[2766,60,2268,66],[2766,66,2268,72],[2766,71,2268,77],[2766,72,2268,78,"_b"],[2766,74,2268,80],[2766,77,2268,83,"data"],[2766,81,2268,87],[2766,86,2268,92],[2766,90,2268,96],[2766,94,2268,100,"data"],[2766,98,2268,104],[2766,103,2268,109],[2766,108,2268,114],[2766,109,2268,115],[2766,112,2268,118],[2766,117,2268,123],[2766,118,2268,124],[2766,121,2268,127,"data"],[2766,125,2268,131],[2766,126,2268,132,"totp"],[2766,130,2268,136],[2766,136,2268,142],[2766,140,2268,146],[2766,144,2268,150,"_b"],[2766,146,2268,152],[2766,151,2268,157],[2766,156,2268,162],[2766,157,2268,163],[2766,160,2268,166],[2766,165,2268,171],[2766,166,2268,172],[2766,169,2268,175,"_b"],[2766,171,2268,177],[2766,172,2268,178,"qr_code"],[2766,179,2268,185],[2766,180,2268,186],[2766,182,2268,188],[2767,12,2269,20,"data"],[2767,16,2269,24],[2767,17,2269,25,"totp"],[2767,21,2269,29],[2767,22,2269,30,"qr_code"],[2767,29,2269,37],[2767,32,2269,40],[2767,60,2269,68,"data"],[2767,64,2269,72],[2767,65,2269,73,"totp"],[2767,69,2269,77],[2767,70,2269,78,"qr_code"],[2767,77,2269,85],[2767,79,2269,87],[2768,10,2270,16],[2769,10,2271,16],[2769,17,2271,23],[2770,12,2271,25,"data"],[2770,16,2271,29],[2771,12,2271,31,"error"],[2771,17,2271,36],[2771,19,2271,38],[2772,10,2271,43],[2772,11,2271,44],[2773,8,2272,12],[2773,9,2272,13],[2773,10,2272,14],[2774,6,2273,8],[2774,7,2273,9],[2774,8,2274,8],[2774,15,2274,15,"error"],[2774,20,2274,20],[2774,22,2274,22],[2775,8,2275,12],[2775,12,2275,16],[2775,16,2275,16,"isAuthError"],[2775,35,2275,27],[2775,37,2275,28,"error"],[2775,42,2275,33],[2775,43,2275,34],[2775,45,2275,36],[2776,10,2276,16],[2776,17,2276,23],[2777,12,2276,25,"data"],[2777,16,2276,29],[2777,18,2276,31],[2777,22,2276,35],[2778,12,2276,37,"error"],[2779,10,2276,43],[2779,11,2276,44],[2780,8,2277,12],[2781,8,2278,12],[2781,14,2278,18,"error"],[2781,19,2278,23],[2782,6,2279,8],[2783,4,2280,4],[2784,4,2281,4],[2784,10,2281,10,"_verify"],[2784,17,2281,17,"_verify"],[2784,18,2281,18,"params"],[2784,24,2281,24],[2784,26,2281,26],[2785,6,2282,8],[2785,13,2282,15],[2785,17,2282,19],[2785,18,2282,20,"_acquireLock"],[2785,30,2282,32],[2785,31,2282,33],[2785,32,2282,34],[2785,33,2282,35],[2785,35,2282,37],[2785,47,2282,49],[2786,8,2283,12],[2786,12,2283,16],[2787,10,2284,16],[2787,17,2284,23],[2787,23,2284,29],[2787,27,2284,33],[2787,28,2284,34,"_useSession"],[2787,39,2284,45],[2787,40,2284,46],[2787,46,2284,53,"result"],[2787,52,2284,59],[2787,56,2284,64],[2788,12,2285,20],[2788,16,2285,24,"_a"],[2788,18,2285,26],[2789,12,2286,20],[2789,18,2286,26],[2790,14,2286,28,"data"],[2790,18,2286,32],[2790,20,2286,34,"sessionData"],[2790,31,2286,45],[2791,14,2286,47,"error"],[2791,19,2286,52],[2791,21,2286,54,"sessionError"],[2792,12,2286,67],[2792,13,2286,68],[2792,16,2286,71,"result"],[2792,22,2286,77],[2793,12,2287,20],[2793,16,2287,24,"sessionError"],[2793,28,2287,36],[2793,30,2287,38],[2794,14,2288,24],[2794,21,2288,31],[2795,16,2288,33,"data"],[2795,20,2288,37],[2795,22,2288,39],[2795,26,2288,43],[2796,16,2288,45,"error"],[2796,21,2288,50],[2796,23,2288,52,"sessionError"],[2797,14,2288,65],[2797,15,2288,66],[2798,12,2289,20],[2799,12,2290,20],[2799,18,2290,26,"body"],[2799,22,2290,30],[2799,25,2290,33,"Object"],[2799,31,2290,39],[2799,32,2290,40,"assign"],[2799,38,2290,46],[2799,39,2290,47],[2800,14,2290,49,"challenge_id"],[2800,26,2290,61],[2800,28,2290,63,"params"],[2800,34,2290,69],[2800,35,2290,70,"challengeId"],[2801,12,2290,82],[2801,13,2290,83],[2801,15,2290,86],[2801,25,2290,96],[2801,29,2290,100,"params"],[2801,35,2290,106],[2801,38,2291,26],[2802,14,2292,28,"webauthn"],[2802,22,2292,36],[2802,24,2292,38,"Object"],[2802,30,2292,44],[2802,31,2292,45,"assign"],[2802,37,2292,51],[2802,38,2292,52,"Object"],[2802,44,2292,58],[2802,45,2292,59,"assign"],[2802,51,2292,65],[2802,52,2292,66],[2802,53,2292,67],[2802,54,2292,68],[2802,56,2292,70,"params"],[2802,62,2292,76],[2802,63,2292,77,"webauthn"],[2802,71,2292,85],[2802,72,2292,86],[2802,74,2292,88],[2803,16,2292,90,"credential_response"],[2803,35,2292,109],[2803,37,2292,111,"params"],[2803,43,2292,117],[2803,44,2292,118,"webauthn"],[2803,52,2292,126],[2803,53,2292,127,"type"],[2803,57,2292,131],[2803,62,2292,136],[2803,70,2292,144],[2803,73,2293,38],[2803,77,2293,38,"serializeCredentialCreationResponse"],[2803,122,2293,73],[2803,124,2293,74,"params"],[2803,130,2293,80],[2803,131,2293,81,"webauthn"],[2803,139,2293,89],[2803,140,2293,90,"credential_response"],[2803,159,2293,109],[2803,160,2293,110],[2803,163,2294,38],[2803,167,2294,38,"serializeCredentialRequestResponse"],[2803,211,2294,72],[2803,213,2294,73,"params"],[2803,219,2294,79],[2803,220,2294,80,"webauthn"],[2803,228,2294,88],[2803,229,2294,89,"credential_response"],[2803,248,2294,108],[2804,14,2294,110],[2804,15,2294,111],[2805,12,2295,24],[2805,13,2295,25],[2805,16,2296,26],[2806,14,2296,28,"code"],[2806,18,2296,32],[2806,20,2296,34,"params"],[2806,26,2296,40],[2806,27,2296,41,"code"],[2807,12,2296,46],[2807,13,2296,48],[2807,14,2296,49],[2808,12,2297,20],[2808,18,2297,26],[2809,14,2297,28,"data"],[2809,18,2297,32],[2810,14,2297,34,"error"],[2811,12,2297,40],[2811,13,2297,41],[2811,16,2297,44],[2811,22,2297,50],[2811,26,2297,50,"_request"],[2811,41,2297,58],[2811,43,2297,59],[2811,47,2297,63],[2811,48,2297,64,"fetch"],[2811,53,2297,69],[2811,55,2297,71],[2811,61,2297,77],[2811,63,2297,79],[2811,66,2297,82],[2811,70,2297,86],[2811,71,2297,87,"url"],[2811,74,2297,90],[2811,86,2297,102,"params"],[2811,92,2297,108],[2811,93,2297,109,"factorId"],[2811,101,2297,117],[2811,110,2297,126],[2811,112,2297,128],[2812,14,2298,24,"body"],[2812,18,2298,28],[2813,14,2299,24,"headers"],[2813,21,2299,31],[2813,23,2299,33],[2813,27,2299,37],[2813,28,2299,38,"headers"],[2813,35,2299,45],[2814,14,2300,24,"jwt"],[2814,17,2300,27],[2814,19,2300,29],[2814,20,2300,30,"_a"],[2814,22,2300,32],[2814,25,2300,35,"sessionData"],[2814,36,2300,46],[2814,41,2300,51],[2814,45,2300,55],[2814,49,2300,59,"sessionData"],[2814,60,2300,70],[2814,65,2300,75],[2814,70,2300,80],[2814,71,2300,81],[2814,74,2300,84],[2814,79,2300,89],[2814,80,2300,90],[2814,83,2300,93,"sessionData"],[2814,94,2300,104],[2814,95,2300,105,"session"],[2814,102,2300,112],[2814,108,2300,118],[2814,112,2300,122],[2814,116,2300,126,"_a"],[2814,118,2300,128],[2814,123,2300,133],[2814,128,2300,138],[2814,129,2300,139],[2814,132,2300,142],[2814,137,2300,147],[2814,138,2300,148],[2814,141,2300,151,"_a"],[2814,143,2300,153],[2814,144,2300,154,"access_token"],[2815,12,2301,20],[2815,13,2301,21],[2815,14,2301,22],[2816,12,2302,20],[2816,16,2302,24,"error"],[2816,21,2302,29],[2816,23,2302,31],[2817,14,2303,24],[2817,21,2303,31],[2818,16,2303,33,"data"],[2818,20,2303,37],[2818,22,2303,39],[2818,26,2303,43],[2819,16,2303,45,"error"],[2820,14,2303,51],[2820,15,2303,52],[2821,12,2304,20],[2822,12,2305,20],[2822,18,2305,26],[2822,22,2305,30],[2822,23,2305,31,"_saveSession"],[2822,35,2305,43],[2822,36,2305,44,"Object"],[2822,42,2305,50],[2822,43,2305,51,"assign"],[2822,49,2305,57],[2822,50,2305,58],[2823,14,2305,60,"expires_at"],[2823,24,2305,70],[2823,26,2305,72,"Math"],[2823,30,2305,76],[2823,31,2305,77,"round"],[2823,36,2305,82],[2823,37,2305,83,"Date"],[2823,41,2305,87],[2823,42,2305,88,"now"],[2823,45,2305,91],[2823,46,2305,92],[2823,47,2305,93],[2823,50,2305,96],[2823,54,2305,100],[2823,55,2305,101],[2823,58,2305,104,"data"],[2823,62,2305,108],[2823,63,2305,109,"expires_in"],[2824,12,2305,120],[2824,13,2305,121],[2824,15,2305,123,"data"],[2824,19,2305,127],[2824,20,2305,128],[2824,21,2305,129],[2825,12,2306,20],[2825,18,2306,26],[2825,22,2306,30],[2825,23,2306,31,"_notifyAllSubscribers"],[2825,44,2306,52],[2825,45,2306,53],[2825,69,2306,77],[2825,71,2306,79,"data"],[2825,75,2306,83],[2825,76,2306,84],[2826,12,2307,20],[2826,19,2307,27],[2827,14,2307,29,"data"],[2827,18,2307,33],[2828,14,2307,35,"error"],[2829,12,2307,41],[2829,13,2307,42],[2830,10,2308,16],[2830,11,2308,17],[2830,12,2308,18],[2831,8,2309,12],[2831,9,2309,13],[2831,10,2310,12],[2831,17,2310,19,"error"],[2831,22,2310,24],[2831,24,2310,26],[2832,10,2311,16],[2832,14,2311,20],[2832,18,2311,20,"isAuthError"],[2832,37,2311,31],[2832,39,2311,32,"error"],[2832,44,2311,37],[2832,45,2311,38],[2832,47,2311,40],[2833,12,2312,20],[2833,19,2312,27],[2834,14,2312,29,"data"],[2834,18,2312,33],[2834,20,2312,35],[2834,24,2312,39],[2835,14,2312,41,"error"],[2836,12,2312,47],[2836,13,2312,48],[2837,10,2313,16],[2838,10,2314,16],[2838,16,2314,22,"error"],[2838,21,2314,27],[2839,8,2315,12],[2840,6,2316,8],[2840,7,2316,9],[2840,8,2316,10],[2841,4,2317,4],[2842,4,2318,4],[2842,10,2318,10,"_challenge"],[2842,20,2318,20,"_challenge"],[2842,21,2318,21,"params"],[2842,27,2318,27],[2842,29,2318,29],[2843,6,2319,8],[2843,13,2319,15],[2843,17,2319,19],[2843,18,2319,20,"_acquireLock"],[2843,30,2319,32],[2843,31,2319,33],[2843,32,2319,34],[2843,33,2319,35],[2843,35,2319,37],[2843,47,2319,49],[2844,8,2320,12],[2844,12,2320,16],[2845,10,2321,16],[2845,17,2321,23],[2845,23,2321,29],[2845,27,2321,33],[2845,28,2321,34,"_useSession"],[2845,39,2321,45],[2845,40,2321,46],[2845,46,2321,53,"result"],[2845,52,2321,59],[2845,56,2321,64],[2846,12,2322,20],[2846,16,2322,24,"_a"],[2846,18,2322,26],[2847,12,2323,20],[2847,18,2323,26],[2848,14,2323,28,"data"],[2848,18,2323,32],[2848,20,2323,34,"sessionData"],[2848,31,2323,45],[2849,14,2323,47,"error"],[2849,19,2323,52],[2849,21,2323,54,"sessionError"],[2850,12,2323,67],[2850,13,2323,68],[2850,16,2323,71,"result"],[2850,22,2323,77],[2851,12,2324,20],[2851,16,2324,24,"sessionError"],[2851,28,2324,36],[2851,30,2324,38],[2852,14,2325,24],[2852,21,2325,31],[2853,16,2325,33,"data"],[2853,20,2325,37],[2853,22,2325,39],[2853,26,2325,43],[2854,16,2325,45,"error"],[2854,21,2325,50],[2854,23,2325,52,"sessionError"],[2855,14,2325,65],[2855,15,2325,66],[2856,12,2326,20],[2857,12,2327,20],[2857,18,2327,26,"response"],[2857,26,2327,34],[2857,29,2327,38],[2857,35,2327,44],[2857,39,2327,44,"_request"],[2857,54,2327,52],[2857,56,2327,53],[2857,60,2327,57],[2857,61,2327,58,"fetch"],[2857,66,2327,63],[2857,68,2327,65],[2857,74,2327,71],[2857,76,2327,73],[2857,79,2327,76],[2857,83,2327,80],[2857,84,2327,81,"url"],[2857,87,2327,84],[2857,99,2327,96,"params"],[2857,105,2327,102],[2857,106,2327,103,"factorId"],[2857,114,2327,111],[2857,126,2327,123],[2857,128,2327,125],[2858,14,2328,24,"body"],[2858,18,2328,28],[2858,20,2328,30,"params"],[2858,26,2328,36],[2859,14,2329,24,"headers"],[2859,21,2329,31],[2859,23,2329,33],[2859,27,2329,37],[2859,28,2329,38,"headers"],[2859,35,2329,45],[2860,14,2330,24,"jwt"],[2860,17,2330,27],[2860,19,2330,29],[2860,20,2330,30,"_a"],[2860,22,2330,32],[2860,25,2330,35,"sessionData"],[2860,36,2330,46],[2860,41,2330,51],[2860,45,2330,55],[2860,49,2330,59,"sessionData"],[2860,60,2330,70],[2860,65,2330,75],[2860,70,2330,80],[2860,71,2330,81],[2860,74,2330,84],[2860,79,2330,89],[2860,80,2330,90],[2860,83,2330,93,"sessionData"],[2860,94,2330,104],[2860,95,2330,105,"session"],[2860,102,2330,112],[2860,108,2330,118],[2860,112,2330,122],[2860,116,2330,126,"_a"],[2860,118,2330,128],[2860,123,2330,133],[2860,128,2330,138],[2860,129,2330,139],[2860,132,2330,142],[2860,137,2330,147],[2860,138,2330,148],[2860,141,2330,151,"_a"],[2860,143,2330,153],[2860,144,2330,154,"access_token"],[2861,12,2331,20],[2861,13,2331,21],[2861,14,2331,23],[2862,12,2332,20],[2862,16,2332,24,"response"],[2862,24,2332,32],[2862,25,2332,33,"error"],[2862,30,2332,38],[2862,32,2332,40],[2863,14,2333,24],[2863,21,2333,31,"response"],[2863,29,2333,39],[2864,12,2334,20],[2865,12,2335,20],[2865,18,2335,26],[2866,14,2335,28,"data"],[2867,12,2335,33],[2867,13,2335,34],[2867,16,2335,37,"response"],[2867,24,2335,45],[2868,12,2336,20],[2868,16,2336,24,"data"],[2868,20,2336,28],[2868,21,2336,29,"type"],[2868,25,2336,33],[2868,30,2336,38],[2868,40,2336,48],[2868,42,2336,50],[2869,14,2337,24],[2869,21,2337,31],[2870,16,2337,33,"data"],[2870,20,2337,37],[2871,16,2337,39,"error"],[2871,21,2337,44],[2871,23,2337,46],[2872,14,2337,51],[2872,15,2337,52],[2873,12,2338,20],[2874,12,2339,20],[2874,20,2339,28,"data"],[2874,24,2339,32],[2874,25,2339,33,"webauthn"],[2874,33,2339,41],[2874,34,2339,42,"type"],[2874,38,2339,46],[2875,14,2340,24],[2875,19,2340,29],[2875,27,2340,37],[2876,16,2341,28],[2876,23,2341,35],[2877,18,2342,32,"data"],[2877,22,2342,36],[2877,24,2342,38,"Object"],[2877,30,2342,44],[2877,31,2342,45,"assign"],[2877,37,2342,51],[2877,38,2342,52,"Object"],[2877,44,2342,58],[2877,45,2342,59,"assign"],[2877,51,2342,65],[2877,52,2342,66],[2877,53,2342,67],[2877,54,2342,68],[2877,56,2342,70,"data"],[2877,60,2342,74],[2877,61,2342,75],[2877,63,2342,77],[2878,20,2342,79,"webauthn"],[2878,28,2342,87],[2878,30,2342,89,"Object"],[2878,36,2342,95],[2878,37,2342,96,"assign"],[2878,43,2342,102],[2878,44,2342,103,"Object"],[2878,50,2342,109],[2878,51,2342,110,"assign"],[2878,57,2342,116],[2878,58,2342,117],[2878,59,2342,118],[2878,60,2342,119],[2878,62,2342,121,"data"],[2878,66,2342,125],[2878,67,2342,126,"webauthn"],[2878,75,2342,134],[2878,76,2342,135],[2878,78,2342,137],[2879,22,2342,139,"credential_options"],[2879,40,2342,157],[2879,42,2342,159,"Object"],[2879,48,2342,165],[2879,49,2342,166,"assign"],[2879,55,2342,172],[2879,56,2342,173,"Object"],[2879,62,2342,179],[2879,63,2342,180,"assign"],[2879,69,2342,186],[2879,70,2342,187],[2879,71,2342,188],[2879,72,2342,189],[2879,74,2342,191,"data"],[2879,78,2342,195],[2879,79,2342,196,"webauthn"],[2879,87,2342,204],[2879,88,2342,205,"credential_options"],[2879,106,2342,223],[2879,107,2342,224],[2879,109,2342,226],[2880,24,2342,228,"publicKey"],[2880,33,2342,237],[2880,35,2342,239],[2880,39,2342,239,"deserializeCredentialCreationOptions"],[2880,85,2342,275],[2880,87,2342,276,"data"],[2880,91,2342,280],[2880,92,2342,281,"webauthn"],[2880,100,2342,289],[2880,101,2342,290,"credential_options"],[2880,119,2342,308],[2880,120,2342,309,"publicKey"],[2880,129,2342,318],[2881,22,2342,320],[2881,23,2342,321],[2882,20,2342,323],[2882,21,2342,324],[2883,18,2342,326],[2883,19,2342,327],[2883,20,2342,328],[2884,18,2343,32,"error"],[2884,23,2343,37],[2884,25,2343,39],[2885,16,2344,28],[2885,17,2344,29],[2886,14,2345,24],[2886,19,2345,29],[2886,28,2345,38],[2887,16,2346,28],[2887,23,2346,35],[2888,18,2347,32,"data"],[2888,22,2347,36],[2888,24,2347,38,"Object"],[2888,30,2347,44],[2888,31,2347,45,"assign"],[2888,37,2347,51],[2888,38,2347,52,"Object"],[2888,44,2347,58],[2888,45,2347,59,"assign"],[2888,51,2347,65],[2888,52,2347,66],[2888,53,2347,67],[2888,54,2347,68],[2888,56,2347,70,"data"],[2888,60,2347,74],[2888,61,2347,75],[2888,63,2347,77],[2889,20,2347,79,"webauthn"],[2889,28,2347,87],[2889,30,2347,89,"Object"],[2889,36,2347,95],[2889,37,2347,96,"assign"],[2889,43,2347,102],[2889,44,2347,103,"Object"],[2889,50,2347,109],[2889,51,2347,110,"assign"],[2889,57,2347,116],[2889,58,2347,117],[2889,59,2347,118],[2889,60,2347,119],[2889,62,2347,121,"data"],[2889,66,2347,125],[2889,67,2347,126,"webauthn"],[2889,75,2347,134],[2889,76,2347,135],[2889,78,2347,137],[2890,22,2347,139,"credential_options"],[2890,40,2347,157],[2890,42,2347,159,"Object"],[2890,48,2347,165],[2890,49,2347,166,"assign"],[2890,55,2347,172],[2890,56,2347,173,"Object"],[2890,62,2347,179],[2890,63,2347,180,"assign"],[2890,69,2347,186],[2890,70,2347,187],[2890,71,2347,188],[2890,72,2347,189],[2890,74,2347,191,"data"],[2890,78,2347,195],[2890,79,2347,196,"webauthn"],[2890,87,2347,204],[2890,88,2347,205,"credential_options"],[2890,106,2347,223],[2890,107,2347,224],[2890,109,2347,226],[2891,24,2347,228,"publicKey"],[2891,33,2347,237],[2891,35,2347,239],[2891,39,2347,239,"deserializeCredentialRequestOptions"],[2891,84,2347,274],[2891,86,2347,275,"data"],[2891,90,2347,279],[2891,91,2347,280,"webauthn"],[2891,99,2347,288],[2891,100,2347,289,"credential_options"],[2891,118,2347,307],[2891,119,2347,308,"publicKey"],[2891,128,2347,317],[2892,22,2347,319],[2892,23,2347,320],[2893,20,2347,322],[2893,21,2347,323],[2894,18,2347,325],[2894,19,2347,326],[2894,20,2347,327],[2895,18,2348,32,"error"],[2895,23,2348,37],[2895,25,2348,39],[2896,16,2349,28],[2896,17,2349,29],[2897,12,2350,20],[2898,10,2351,16],[2898,11,2351,17],[2898,12,2351,18],[2899,8,2352,12],[2899,9,2352,13],[2899,10,2353,12],[2899,17,2353,19,"error"],[2899,22,2353,24],[2899,24,2353,26],[2900,10,2354,16],[2900,14,2354,20],[2900,18,2354,20,"isAuthError"],[2900,37,2354,31],[2900,39,2354,32,"error"],[2900,44,2354,37],[2900,45,2354,38],[2900,47,2354,40],[2901,12,2355,20],[2901,19,2355,27],[2902,14,2355,29,"data"],[2902,18,2355,33],[2902,20,2355,35],[2902,24,2355,39],[2903,14,2355,41,"error"],[2904,12,2355,47],[2904,13,2355,48],[2905,10,2356,16],[2906,10,2357,16],[2906,16,2357,22,"error"],[2906,21,2357,27],[2907,8,2358,12],[2908,6,2359,8],[2908,7,2359,9],[2908,8,2359,10],[2909,4,2360,4],[2910,4,2361,4],[2911,0,2362,0],[2912,0,2363,0],[2913,4,2364,4],[2913,10,2364,10,"_challengeAndVerify"],[2913,29,2364,29,"_challengeAndVerify"],[2913,30,2364,30,"params"],[2913,36,2364,36],[2913,38,2364,38],[2914,6,2365,8],[2915,6,2366,8],[2916,6,2367,8],[2916,12,2367,14],[2917,8,2367,16,"data"],[2917,12,2367,20],[2917,14,2367,22,"challengeData"],[2917,27,2367,35],[2918,8,2367,37,"error"],[2918,13,2367,42],[2918,15,2367,44,"challengeError"],[2919,6,2367,59],[2919,7,2367,60],[2919,10,2367,63],[2919,16,2367,69],[2919,20,2367,73],[2919,21,2367,74,"_challenge"],[2919,31,2367,84],[2919,32,2367,85],[2920,8,2368,12,"factorId"],[2920,16,2368,20],[2920,18,2368,22,"params"],[2920,24,2368,28],[2920,25,2368,29,"factorId"],[2921,6,2369,8],[2921,7,2369,9],[2921,8,2369,10],[2922,6,2370,8],[2922,10,2370,12,"challengeError"],[2922,24,2370,26],[2922,26,2370,28],[2923,8,2371,12],[2923,15,2371,19],[2924,10,2371,21,"data"],[2924,14,2371,25],[2924,16,2371,27],[2924,20,2371,31],[2925,10,2371,33,"error"],[2925,15,2371,38],[2925,17,2371,40,"challengeError"],[2926,8,2371,55],[2926,9,2371,56],[2927,6,2372,8],[2928,6,2373,8],[2928,13,2373,15],[2928,19,2373,21],[2928,23,2373,25],[2928,24,2373,26,"_verify"],[2928,31,2373,33],[2928,32,2373,34],[2929,8,2374,12,"factorId"],[2929,16,2374,20],[2929,18,2374,22,"params"],[2929,24,2374,28],[2929,25,2374,29,"factorId"],[2929,33,2374,37],[2930,8,2375,12,"challengeId"],[2930,19,2375,23],[2930,21,2375,25,"challengeData"],[2930,34,2375,38],[2930,35,2375,39,"id"],[2930,37,2375,41],[2931,8,2376,12,"code"],[2931,12,2376,16],[2931,14,2376,18,"params"],[2931,20,2376,24],[2931,21,2376,25,"code"],[2932,6,2377,8],[2932,7,2377,9],[2932,8,2377,10],[2933,4,2378,4],[2934,4,2379,4],[2935,0,2380,0],[2936,0,2381,0],[2937,4,2382,4],[2937,10,2382,10,"_listFactors"],[2937,22,2382,22,"_listFactors"],[2937,23,2382,22],[2937,25,2382,25],[2938,6,2383,8],[2938,10,2383,12,"_a"],[2938,12,2383,14],[2939,6,2384,8],[2940,6,2385,8],[2940,12,2385,14],[2941,8,2385,16,"data"],[2941,12,2385,20],[2941,14,2385,22],[2942,10,2385,24,"user"],[2943,8,2385,29],[2943,9,2385,30],[2944,8,2385,32,"error"],[2944,13,2385,37],[2944,15,2385,39,"userError"],[2945,6,2385,50],[2945,7,2385,51],[2945,10,2385,54],[2945,16,2385,60],[2945,20,2385,64],[2945,21,2385,65,"getUser"],[2945,28,2385,72],[2945,29,2385,73],[2945,30,2385,74],[2946,6,2386,8],[2946,10,2386,12,"userError"],[2946,19,2386,21],[2946,21,2386,23],[2947,8,2387,12],[2947,15,2387,19],[2948,10,2387,21,"data"],[2948,14,2387,25],[2948,16,2387,27],[2948,20,2387,31],[2949,10,2387,33,"error"],[2949,15,2387,38],[2949,17,2387,40,"userError"],[2950,8,2387,50],[2950,9,2387,51],[2951,6,2388,8],[2952,6,2389,8],[2952,12,2389,14,"data"],[2952,16,2389,18],[2952,19,2389,21],[2953,8,2390,12,"all"],[2953,11,2390,15],[2953,13,2390,17],[2953,15,2390,19],[2954,8,2391,12,"phone"],[2954,13,2391,17],[2954,15,2391,19],[2954,17,2391,21],[2955,8,2392,12,"totp"],[2955,12,2392,16],[2955,14,2392,18],[2955,16,2392,20],[2956,8,2393,12,"webauthn"],[2956,16,2393,20],[2956,18,2393,22],[2957,6,2394,8],[2957,7,2394,9],[2958,6,2395,8],[2959,6,2396,8],[2959,11,2396,13],[2959,17,2396,19,"factor"],[2959,23,2396,25],[2959,27,2396,29],[2959,28,2396,30,"_a"],[2959,30,2396,32],[2959,33,2396,35,"user"],[2959,37,2396,39],[2959,42,2396,44],[2959,46,2396,48],[2959,50,2396,52,"user"],[2959,54,2396,56],[2959,59,2396,61],[2959,64,2396,66],[2959,65,2396,67],[2959,68,2396,70],[2959,73,2396,75],[2959,74,2396,76],[2959,77,2396,79,"user"],[2959,81,2396,83],[2959,82,2396,84,"factors"],[2959,89,2396,91],[2959,95,2396,97],[2959,99,2396,101],[2959,103,2396,105,"_a"],[2959,105,2396,107],[2959,110,2396,112],[2959,115,2396,117],[2959,116,2396,118],[2959,119,2396,121,"_a"],[2959,121,2396,123],[2959,124,2396,126],[2959,126,2396,128],[2959,128,2396,130],[2960,8,2397,12,"data"],[2960,12,2397,16],[2960,13,2397,17,"all"],[2960,16,2397,20],[2960,17,2397,21,"push"],[2960,21,2397,25],[2960,22,2397,26,"factor"],[2960,28,2397,32],[2960,29,2397,33],[2961,8,2398,12],[2961,12,2398,16,"factor"],[2961,18,2398,22],[2961,19,2398,23,"status"],[2961,25,2398,29],[2961,30,2398,34],[2961,40,2398,44],[2961,42,2398,46],[2962,10,2399,16],[2963,10,2400,16,"data"],[2963,14,2400,20],[2963,15,2400,21,"factor"],[2963,21,2400,27],[2963,22,2400,28,"factor_type"],[2963,33,2400,39],[2963,34,2400,40],[2963,35,2400,41,"push"],[2963,39,2400,45],[2963,40,2400,46,"factor"],[2963,46,2400,52],[2963,47,2400,53],[2964,8,2401,12],[2965,6,2402,8],[2966,6,2403,8],[2966,13,2403,15],[2967,8,2404,12,"data"],[2967,12,2404,16],[2968,8,2405,12,"error"],[2968,13,2405,17],[2968,15,2405,19],[2969,6,2406,8],[2969,7,2406,9],[2970,4,2407,4],[2971,4,2408,4],[2972,0,2409,0],[2973,0,2410,0],[2974,4,2411,4],[2974,10,2411,10,"_getAuthenticatorAssuranceLevel"],[2974,41,2411,41,"_getAuthenticatorAssuranceLevel"],[2974,42,2411,41],[2974,44,2411,44],[2975,6,2412,8],[2975,13,2412,15],[2975,17,2412,19],[2975,18,2412,20,"_acquireLock"],[2975,30,2412,32],[2975,31,2412,33],[2975,32,2412,34],[2975,33,2412,35],[2975,35,2412,37],[2975,47,2412,49],[2976,8,2413,12],[2976,15,2413,19],[2976,21,2413,25],[2976,25,2413,29],[2976,26,2413,30,"_useSession"],[2976,37,2413,41],[2976,38,2413,42],[2976,44,2413,49,"result"],[2976,50,2413,55],[2976,54,2413,60],[2977,10,2414,16],[2977,14,2414,20,"_a"],[2977,16,2414,22],[2977,18,2414,24,"_b"],[2977,20,2414,26],[2978,10,2415,16],[2978,16,2415,22],[2979,12,2415,24,"data"],[2979,16,2415,28],[2979,18,2415,30],[2980,14,2415,32,"session"],[2981,12,2415,40],[2981,13,2415,41],[2982,12,2415,43,"error"],[2982,17,2415,48],[2982,19,2415,50,"sessionError"],[2983,10,2415,64],[2983,11,2415,65],[2983,14,2415,68,"result"],[2983,20,2415,74],[2984,10,2416,16],[2984,14,2416,20,"sessionError"],[2984,26,2416,32],[2984,28,2416,34],[2985,12,2417,20],[2985,19,2417,27],[2986,14,2417,29,"data"],[2986,18,2417,33],[2986,20,2417,35],[2986,24,2417,39],[2987,14,2417,41,"error"],[2987,19,2417,46],[2987,21,2417,48,"sessionError"],[2988,12,2417,61],[2988,13,2417,62],[2989,10,2418,16],[2990,10,2419,16],[2990,14,2419,20],[2990,15,2419,21,"session"],[2990,22,2419,28],[2990,24,2419,30],[2991,12,2420,20],[2991,19,2420,27],[2992,14,2421,24,"data"],[2992,18,2421,28],[2992,20,2421,30],[2993,16,2421,32,"currentLevel"],[2993,28,2421,44],[2993,30,2421,46],[2993,34,2421,50],[2994,16,2421,52,"nextLevel"],[2994,25,2421,61],[2994,27,2421,63],[2994,31,2421,67],[2995,16,2421,69,"currentAuthenticationMethods"],[2995,44,2421,97],[2995,46,2421,99],[2996,14,2421,102],[2996,15,2421,103],[2997,14,2422,24,"error"],[2997,19,2422,29],[2997,21,2422,31],[2998,12,2423,20],[2998,13,2423,21],[2999,10,2424,16],[3000,10,2425,16],[3000,16,2425,22],[3001,12,2425,24,"payload"],[3002,10,2425,32],[3002,11,2425,33],[3002,14,2425,36],[3002,18,2425,36,"decodeJWT"],[3002,36,2425,45],[3002,38,2425,46,"session"],[3002,45,2425,53],[3002,46,2425,54,"access_token"],[3002,58,2425,66],[3002,59,2425,67],[3003,10,2426,16],[3003,14,2426,20,"currentLevel"],[3003,26,2426,32],[3003,29,2426,35],[3003,33,2426,39],[3004,10,2427,16],[3004,14,2427,20,"payload"],[3004,21,2427,27],[3004,22,2427,28,"aal"],[3004,25,2427,31],[3004,27,2427,33],[3005,12,2428,20,"currentLevel"],[3005,24,2428,32],[3005,27,2428,35,"payload"],[3005,34,2428,42],[3005,35,2428,43,"aal"],[3005,38,2428,46],[3006,10,2429,16],[3007,10,2430,16],[3007,14,2430,20,"nextLevel"],[3007,23,2430,29],[3007,26,2430,32,"currentLevel"],[3007,38,2430,44],[3008,10,2431,16],[3008,16,2431,22,"verifiedFactors"],[3008,31,2431,37],[3008,34,2431,40],[3008,35,2431,41,"_b"],[3008,37,2431,43],[3008,40,2431,46],[3008,41,2431,47,"_a"],[3008,43,2431,49],[3008,46,2431,52,"session"],[3008,53,2431,59],[3008,54,2431,60,"user"],[3008,58,2431,64],[3008,59,2431,65,"factors"],[3008,66,2431,72],[3008,72,2431,78],[3008,76,2431,82],[3008,80,2431,86,"_a"],[3008,82,2431,88],[3008,87,2431,93],[3008,92,2431,98],[3008,93,2431,99],[3008,96,2431,102],[3008,101,2431,107],[3008,102,2431,108],[3008,105,2431,111,"_a"],[3008,107,2431,113],[3008,108,2431,114,"filter"],[3008,114,2431,120],[3008,115,2431,122,"factor"],[3008,121,2431,128],[3008,125,2431,133,"factor"],[3008,131,2431,139],[3008,132,2431,140,"status"],[3008,138,2431,146],[3008,143,2431,151],[3008,153,2431,161],[3008,154,2431,162],[3008,160,2431,168],[3008,164,2431,172],[3008,168,2431,176,"_b"],[3008,170,2431,178],[3008,175,2431,183],[3008,180,2431,188],[3008,181,2431,189],[3008,184,2431,192,"_b"],[3008,186,2431,194],[3008,189,2431,197],[3008,191,2431,199],[3009,10,2432,16],[3009,14,2432,20,"verifiedFactors"],[3009,29,2432,35],[3009,30,2432,36,"length"],[3009,36,2432,42],[3009,39,2432,45],[3009,40,2432,46],[3009,42,2432,48],[3010,12,2433,20,"nextLevel"],[3010,21,2433,29],[3010,24,2433,32],[3010,30,2433,38],[3011,10,2434,16],[3012,10,2435,16],[3012,16,2435,22,"currentAuthenticationMethods"],[3012,44,2435,50],[3012,47,2435,53,"payload"],[3012,54,2435,60],[3012,55,2435,61,"amr"],[3012,58,2435,64],[3012,62,2435,68],[3012,64,2435,70],[3013,10,2436,16],[3013,17,2436,23],[3014,12,2436,25,"data"],[3014,16,2436,29],[3014,18,2436,31],[3015,14,2436,33,"currentLevel"],[3015,26,2436,45],[3016,14,2436,47,"nextLevel"],[3016,23,2436,56],[3017,14,2436,58,"currentAuthenticationMethods"],[3018,12,2436,87],[3018,13,2436,88],[3019,12,2436,90,"error"],[3019,17,2436,95],[3019,19,2436,97],[3020,10,2436,102],[3020,11,2436,103],[3021,8,2437,12],[3021,9,2437,13],[3021,10,2437,14],[3022,6,2438,8],[3022,7,2438,9],[3022,8,2438,10],[3023,4,2439,4],[3024,4,2440,4],[3024,10,2440,10,"fetchJwk"],[3024,18,2440,18,"fetchJwk"],[3024,19,2440,19,"kid"],[3024,22,2440,22],[3024,24,2440,24,"jwks"],[3024,28,2440,28],[3024,31,2440,31],[3025,6,2440,33,"keys"],[3025,10,2440,37],[3025,12,2440,39],[3026,4,2440,42],[3026,5,2440,43],[3026,7,2440,45],[3027,6,2441,8],[3028,6,2442,8],[3028,10,2442,12,"jwk"],[3028,13,2442,15],[3028,16,2442,18,"jwks"],[3028,20,2442,22],[3028,21,2442,23,"keys"],[3028,25,2442,27],[3028,26,2442,28,"find"],[3028,30,2442,32],[3028,31,2442,34,"key"],[3028,34,2442,37],[3028,38,2442,42,"key"],[3028,41,2442,45],[3028,42,2442,46,"kid"],[3028,45,2442,49],[3028,50,2442,54,"kid"],[3028,53,2442,57],[3028,54,2442,58],[3029,6,2443,8],[3029,10,2443,12,"jwk"],[3029,13,2443,15],[3029,15,2443,17],[3030,8,2444,12],[3030,15,2444,19,"jwk"],[3030,18,2444,22],[3031,6,2445,8],[3032,6,2446,8],[3032,12,2446,14,"now"],[3032,15,2446,17],[3032,18,2446,20,"Date"],[3032,22,2446,24],[3032,23,2446,25,"now"],[3032,26,2446,28],[3032,27,2446,29],[3032,28,2446,30],[3033,6,2447,8],[3034,6,2448,8,"jwk"],[3034,9,2448,11],[3034,12,2448,14],[3034,16,2448,18],[3034,17,2448,19,"jwks"],[3034,21,2448,23],[3034,22,2448,24,"keys"],[3034,26,2448,28],[3034,27,2448,29,"find"],[3034,31,2448,33],[3034,32,2448,35,"key"],[3034,35,2448,38],[3034,39,2448,43,"key"],[3034,42,2448,46],[3034,43,2448,47,"kid"],[3034,46,2448,50],[3034,51,2448,55,"kid"],[3034,54,2448,58],[3034,55,2448,59],[3035,6,2449,8],[3036,6,2450,8],[3036,10,2450,12,"jwk"],[3036,13,2450,15],[3036,17,2450,19],[3036,21,2450,23],[3036,22,2450,24,"jwks_cached_at"],[3036,36,2450,38],[3036,39,2450,41,"JWKS_TTL"],[3036,58,2450,49],[3036,61,2450,52,"now"],[3036,64,2450,55],[3036,66,2450,57],[3037,8,2451,12],[3037,15,2451,19,"jwk"],[3037,18,2451,22],[3038,6,2452,8],[3039,6,2453,8],[3040,6,2454,8],[3040,12,2454,14],[3041,8,2454,16,"data"],[3041,12,2454,20],[3042,8,2454,22,"error"],[3043,6,2454,28],[3043,7,2454,29],[3043,10,2454,32],[3043,16,2454,38],[3043,20,2454,38,"_request"],[3043,35,2454,46],[3043,37,2454,47],[3043,41,2454,51],[3043,42,2454,52,"fetch"],[3043,47,2454,57],[3043,49,2454,59],[3043,54,2454,64],[3043,56,2454,66],[3043,59,2454,69],[3043,63,2454,73],[3043,64,2454,74,"url"],[3043,67,2454,77],[3043,91,2454,101],[3043,93,2454,103],[3044,8,2455,12,"headers"],[3044,15,2455,19],[3044,17,2455,21],[3044,21,2455,25],[3044,22,2455,26,"headers"],[3045,6,2456,8],[3045,7,2456,9],[3045,8,2456,10],[3046,6,2457,8],[3046,10,2457,12,"error"],[3046,15,2457,17],[3046,17,2457,19],[3047,8,2458,12],[3047,14,2458,18,"error"],[3047,19,2458,23],[3048,6,2459,8],[3049,6,2460,8],[3049,10,2460,12],[3049,11,2460,13,"data"],[3049,15,2460,17],[3049,16,2460,18,"keys"],[3049,20,2460,22],[3049,24,2460,26,"data"],[3049,28,2460,30],[3049,29,2460,31,"keys"],[3049,33,2460,35],[3049,34,2460,36,"length"],[3049,40,2460,42],[3049,45,2460,47],[3049,46,2460,48],[3049,48,2460,50],[3050,8,2461,12],[3050,15,2461,19],[3050,19,2461,23],[3051,6,2462,8],[3052,6,2463,8],[3052,10,2463,12],[3052,11,2463,13,"jwks"],[3052,15,2463,17],[3052,18,2463,20,"data"],[3052,22,2463,24],[3053,6,2464,8],[3053,10,2464,12],[3053,11,2464,13,"jwks_cached_at"],[3053,25,2464,27],[3053,28,2464,30,"now"],[3053,31,2464,33],[3054,6,2465,8],[3055,6,2466,8,"jwk"],[3055,9,2466,11],[3055,12,2466,14,"data"],[3055,16,2466,18],[3055,17,2466,19,"keys"],[3055,21,2466,23],[3055,22,2466,24,"find"],[3055,26,2466,28],[3055,27,2466,30,"key"],[3055,30,2466,33],[3055,34,2466,38,"key"],[3055,37,2466,41],[3055,38,2466,42,"kid"],[3055,41,2466,45],[3055,46,2466,50,"kid"],[3055,49,2466,53],[3055,50,2466,54],[3056,6,2467,8],[3056,10,2467,12],[3056,11,2467,13,"jwk"],[3056,14,2467,16],[3056,16,2467,18],[3057,8,2468,12],[3057,15,2468,19],[3057,19,2468,23],[3058,6,2469,8],[3059,6,2470,8],[3059,13,2470,15,"jwk"],[3059,16,2470,18],[3060,4,2471,4],[3061,4,2472,4],[3062,0,2473,0],[3063,0,2474,0],[3064,0,2475,0],[3065,0,2476,0],[3066,0,2477,0],[3067,0,2478,0],[3068,0,2479,0],[3069,0,2480,0],[3070,0,2481,0],[3071,0,2482,0],[3072,0,2483,0],[3073,0,2484,0],[3074,0,2485,0],[3075,0,2486,0],[3076,0,2487,0],[3077,4,2488,4],[3077,10,2488,10,"getClaims"],[3077,19,2488,19,"getClaims"],[3077,20,2488,20,"jwt"],[3077,23,2488,23],[3077,25,2488,25,"options"],[3077,32,2488,32],[3077,35,2488,35],[3077,36,2488,36],[3077,37,2488,37],[3077,39,2488,39],[3078,6,2489,8],[3078,10,2489,12],[3079,8,2490,12],[3079,12,2490,16,"token"],[3079,17,2490,21],[3079,20,2490,24,"jwt"],[3079,23,2490,27],[3080,8,2491,12],[3080,12,2491,16],[3080,13,2491,17,"token"],[3080,18,2491,22],[3080,20,2491,24],[3081,10,2492,16],[3081,16,2492,22],[3082,12,2492,24,"data"],[3082,16,2492,28],[3083,12,2492,30,"error"],[3084,10,2492,36],[3084,11,2492,37],[3084,14,2492,40],[3084,20,2492,46],[3084,24,2492,50],[3084,25,2492,51,"getSession"],[3084,35,2492,61],[3084,36,2492,62],[3084,37,2492,63],[3085,10,2493,16],[3085,14,2493,20,"error"],[3085,19,2493,25],[3085,23,2493,29],[3085,24,2493,30,"data"],[3085,28,2493,34],[3085,29,2493,35,"session"],[3085,36,2493,42],[3085,38,2493,44],[3086,12,2494,20],[3086,19,2494,27],[3087,14,2494,29,"data"],[3087,18,2494,33],[3087,20,2494,35],[3087,24,2494,39],[3088,14,2494,41,"error"],[3089,12,2494,47],[3089,13,2494,48],[3090,10,2495,16],[3091,10,2496,16,"token"],[3091,15,2496,21],[3091,18,2496,24,"data"],[3091,22,2496,28],[3091,23,2496,29,"session"],[3091,30,2496,36],[3091,31,2496,37,"access_token"],[3091,43,2496,49],[3092,8,2497,12],[3093,8,2498,12],[3093,14,2498,18],[3094,10,2498,20,"header"],[3094,16,2498,26],[3095,10,2498,28,"payload"],[3095,17,2498,35],[3096,10,2498,37,"signature"],[3096,19,2498,46],[3097,10,2498,48,"raw"],[3097,13,2498,51],[3097,15,2498,53],[3098,12,2498,55,"header"],[3098,18,2498,61],[3098,20,2498,63,"rawHeader"],[3098,29,2498,72],[3099,12,2498,74,"payload"],[3099,19,2498,81],[3099,21,2498,83,"rawPayload"],[3100,10,2498,94],[3101,8,2498,97],[3101,9,2498,98],[3101,12,2498,101],[3101,16,2498,101,"decodeJWT"],[3101,34,2498,110],[3101,36,2498,111,"token"],[3101,41,2498,116],[3101,42,2498,117],[3102,8,2499,12],[3102,12,2499,16],[3102,14,2499,18,"options"],[3102,21,2499,25],[3102,26,2499,30],[3102,30,2499,34],[3102,34,2499,38,"options"],[3102,41,2499,45],[3102,46,2499,50],[3102,51,2499,55],[3102,52,2499,56],[3102,55,2499,59],[3102,60,2499,64],[3102,61,2499,65],[3102,64,2499,68,"options"],[3102,71,2499,75],[3102,72,2499,76,"allowExpired"],[3102,84,2499,88],[3102,85,2499,89],[3102,87,2499,91],[3103,10,2500,16],[3104,10,2501,16],[3104,14,2501,16,"validateExp"],[3104,34,2501,27],[3104,36,2501,28,"payload"],[3104,43,2501,35],[3104,44,2501,36,"exp"],[3104,47,2501,39],[3104,48,2501,40],[3105,8,2502,12],[3106,8,2503,12],[3106,14,2503,18,"signingKey"],[3106,24,2503,28],[3106,27,2503,31],[3106,28,2503,32,"header"],[3106,34,2503,38],[3106,35,2503,39,"alg"],[3106,38,2503,42],[3106,42,2504,16,"header"],[3106,48,2504,22],[3106,49,2504,23,"alg"],[3106,52,2504,26],[3106,53,2504,27,"startsWith"],[3106,63,2504,37],[3106,64,2504,38],[3106,68,2504,42],[3106,69,2504,43],[3106,73,2505,16],[3106,74,2505,17,"header"],[3106,80,2505,23],[3106,81,2505,24,"kid"],[3106,84,2505,27],[3106,88,2506,16],[3106,90,2506,18],[3106,98,2506,26],[3106,102,2506,30,"globalThis"],[3106,112,2506,40],[3106,116,2506,44],[3106,124,2506,52],[3106,128,2506,56,"globalThis"],[3106,138,2506,66],[3106,139,2506,67,"crypto"],[3106,145,2506,73],[3106,146,2506,74],[3106,149,2507,18],[3106,153,2507,22],[3106,156,2508,18],[3106,162,2508,24],[3106,166,2508,28],[3106,167,2508,29,"fetchJwk"],[3106,175,2508,37],[3106,176,2508,38,"header"],[3106,182,2508,44],[3106,183,2508,45,"kid"],[3106,186,2508,48],[3106,188,2508,50],[3106,189,2508,51,"options"],[3106,196,2508,58],[3106,201,2508,63],[3106,205,2508,67],[3106,209,2508,71,"options"],[3106,216,2508,78],[3106,221,2508,83],[3106,226,2508,88],[3106,227,2508,89],[3106,230,2508,92],[3106,235,2508,97],[3106,236,2508,98],[3106,239,2508,101,"options"],[3106,246,2508,108],[3106,247,2508,109,"keys"],[3106,251,2508,113],[3106,255,2508,117],[3107,10,2508,119,"keys"],[3107,14,2508,123],[3107,16,2508,125,"options"],[3107,23,2508,132],[3107,24,2508,133,"keys"],[3108,8,2508,138],[3108,9,2508,139],[3108,12,2508,142,"options"],[3108,19,2508,149],[3108,24,2508,154],[3108,28,2508,158],[3108,32,2508,162,"options"],[3108,39,2508,169],[3108,44,2508,174],[3108,49,2508,179],[3108,50,2508,180],[3108,53,2508,183],[3108,58,2508,188],[3108,59,2508,189],[3108,62,2508,192,"options"],[3108,69,2508,199],[3108,70,2508,200,"jwks"],[3108,74,2508,204],[3108,75,2508,205],[3109,8,2509,12],[3110,8,2510,12],[3110,12,2510,16],[3110,13,2510,17,"signingKey"],[3110,23,2510,27],[3110,25,2510,29],[3111,10,2511,16],[3111,16,2511,22],[3112,12,2511,24,"error"],[3113,10,2511,30],[3113,11,2511,31],[3113,14,2511,34],[3113,20,2511,40],[3113,24,2511,44],[3113,25,2511,45,"getUser"],[3113,32,2511,52],[3113,33,2511,53,"token"],[3113,38,2511,58],[3113,39,2511,59],[3114,10,2512,16],[3114,14,2512,20,"error"],[3114,19,2512,25],[3114,21,2512,27],[3115,12,2513,20],[3115,18,2513,26,"error"],[3115,23,2513,31],[3116,10,2514,16],[3117,10,2515,16],[3118,10,2516,16],[3118,17,2516,23],[3119,12,2517,20,"data"],[3119,16,2517,24],[3119,18,2517,26],[3120,14,2518,24,"claims"],[3120,20,2518,30],[3120,22,2518,32,"payload"],[3120,29,2518,39],[3121,14,2519,24,"header"],[3121,20,2519,30],[3122,14,2520,24,"signature"],[3123,12,2521,20],[3123,13,2521,21],[3124,12,2522,20,"error"],[3124,17,2522,25],[3124,19,2522,27],[3125,10,2523,16],[3125,11,2523,17],[3126,8,2524,12],[3127,8,2525,12],[3127,14,2525,18,"algorithm"],[3127,23,2525,27],[3127,26,2525,30],[3127,30,2525,30,"getAlgorithm"],[3127,51,2525,42],[3127,53,2525,43,"header"],[3127,59,2525,49],[3127,60,2525,50,"alg"],[3127,63,2525,53],[3127,64,2525,54],[3128,8,2526,12],[3129,8,2527,12],[3129,14,2527,18,"publicKey"],[3129,23,2527,27],[3129,26,2527,30],[3129,32,2527,36,"crypto"],[3129,38,2527,42],[3129,39,2527,43,"subtle"],[3129,45,2527,49],[3129,46,2527,50,"importKey"],[3129,55,2527,59],[3129,56,2527,60],[3129,61,2527,65],[3129,63,2527,67,"signingKey"],[3129,73,2527,77],[3129,75,2527,79,"algorithm"],[3129,84,2527,88],[3129,86,2527,90],[3129,90,2527,94],[3129,92,2527,96],[3129,93,2528,16],[3129,101,2528,24],[3129,102,2529,13],[3129,103,2529,14],[3130,8,2530,12],[3131,8,2531,12],[3131,14,2531,18,"isValid"],[3131,21,2531,25],[3131,24,2531,28],[3131,30,2531,34,"crypto"],[3131,36,2531,40],[3131,37,2531,41,"subtle"],[3131,43,2531,47],[3131,44,2531,48,"verify"],[3131,50,2531,54],[3131,51,2531,55,"algorithm"],[3131,60,2531,64],[3131,62,2531,66,"publicKey"],[3131,71,2531,75],[3131,73,2531,77,"signature"],[3131,82,2531,86],[3131,84,2531,88],[3131,88,2531,88,"stringToUint8Array"],[3131,117,2531,106],[3131,119,2531,107],[3131,122,2531,110,"rawHeader"],[3131,131,2531,119],[3131,135,2531,123,"rawPayload"],[3131,145,2531,133],[3131,147,2531,135],[3131,148,2531,136],[3131,149,2531,137],[3132,8,2532,12],[3132,12,2532,16],[3132,13,2532,17,"isValid"],[3132,20,2532,24],[3132,22,2532,26],[3133,10,2533,16],[3133,16,2533,22],[3133,20,2533,26,"AuthInvalidJwtError"],[3133,47,2533,45],[3133,48,2533,46],[3133,71,2533,69],[3133,72,2533,70],[3134,8,2534,12],[3135,8,2535,12],[3136,8,2536,12],[3136,15,2536,19],[3137,10,2537,16,"data"],[3137,14,2537,20],[3137,16,2537,22],[3138,12,2538,20,"claims"],[3138,18,2538,26],[3138,20,2538,28,"payload"],[3138,27,2538,35],[3139,12,2539,20,"header"],[3139,18,2539,26],[3140,12,2540,20,"signature"],[3141,10,2541,16],[3141,11,2541,17],[3142,10,2542,16,"error"],[3142,15,2542,21],[3142,17,2542,23],[3143,8,2543,12],[3143,9,2543,13],[3144,6,2544,8],[3144,7,2544,9],[3144,8,2545,8],[3144,15,2545,15,"error"],[3144,20,2545,20],[3144,22,2545,22],[3145,8,2546,12],[3145,12,2546,16],[3145,16,2546,16,"isAuthError"],[3145,35,2546,27],[3145,37,2546,28,"error"],[3145,42,2546,33],[3145,43,2546,34],[3145,45,2546,36],[3146,10,2547,16],[3146,17,2547,23],[3147,12,2547,25,"data"],[3147,16,2547,29],[3147,18,2547,31],[3147,22,2547,35],[3148,12,2547,37,"error"],[3149,10,2547,43],[3149,11,2547,44],[3150,8,2548,12],[3151,8,2549,12],[3151,14,2549,18,"error"],[3151,19,2549,23],[3152,6,2550,8],[3153,4,2551,4],[3154,2,2552,0],[3155,2,2553,0,"GoTrueClient"],[3155,14,2553,12],[3155,15,2553,13,"nextInstanceID"],[3155,29,2553,27],[3155,32,2553,30],[3155,33,2553,31],[3156,2,2553,32],[3156,6,2553,32,"_default"],[3156,14,2553,32],[3156,17,2553,32,"exports"],[3156,24,2553,32],[3156,25,2553,32,"default"],[3156,32,2553,32],[3156,35,2554,15,"GoTrueClient"],[3156,47,2554,27],[3157,0,2554,27],[3157,3]],"functionMap":{"names":["<global>","lockNoOp","GoTrueClient","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","constructor","_b.addEventListener$argument_1","_debug","initialize","<anonymous>","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","linkIdentityOAuth","linkIdentityIdToken","unlinkIdentity","_refreshAccessToken","retryable$argument_0","retryable$argument_1","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;ACwB;CDE;AEU;ICI;KDG;IEC;KFE;IGC;KHG;IIC;KJE;IKI;6GCwG;aDG;KLG;IOC;KPK;IQM;kCCI;+CCC;aDE;SDC;KRE;IWO;2BCqC;iBDO;KXmB;IaM;Kb6B;IcW;Kd6D;IeS;KfoD;IgBK;KhBQ;IiBI;qCPE;SOE;KjBC;IkBQ;KlBU;ImBC;sBCsC,cD;uBEC;aFE;KnB+D;IsBC;sECmG,6BD;KtBwC;IwBC;KxBkC;IyBK;KzBoC;I0BkB;K1B+C;I2BI;K3BmC;I4Be;K5BuB;I6BK;2CnBE;SmBE;K7BC;I8BC;0CCE;aDW;K9BQ;IgCI;KhCoC;IiCY;mDvBE;oCqBC;arBE;SuBC;KjCE;IkCI;gCzBO;iByBG;yCzBC;iByBO;8ECG;6C1BK;qB0BO;aDc;KlCK;IoCO;KpCU;IqCM;6BC2C;yBDQ;KrCe;IuCQ;mD7BK;S6BE;KvCE;IwCC;0CTS;aSe;KxCc;IyCI;2C/BE;S+BE;KzCC;I0CC;0CXE;aW4B;K1CQ;I2CM;2CjCE;SiCE;K3CC;I4CC;K5CgD;I6CO;2CnCE;SmCE;K7CC;I8CC;0CfE;aeoB;K9CQ;I+CI;K/CsF;IgDI;KhDE;IiDI;KjDG;IkDS;2CxCE;SwCE;KlDC;ImDC;sCpBC;SoBuB;KnDC;IoDC;yBCK;aDG;S3CI;wCCE;aDE;S2CC;KpDE;IsDC;sCvBC;SuBc;KtDC;IuDQ;KvD0B;IwDI;KxDc;IyDC;KzDK;I0DC;2D3BG;a2Be;K1Dc;I2DC;sC5BC;S4B0C;K3DC;I4DI;0C7BE;a6BU;K5DQ;I6DK;mCCM;aDU,EE;aFM;K7DY;IgEC;KhEO;IiEC;KjEY;IkEK;KlE0F;ImEC;KnEyC;IoEC;+ECQ;aDO;KpEY;IsEK;KtEmC;IuEC;KvES;IwEO;KxEY;IyEK;mCCG,kCD;mB7DqB;S6DG;KzEC;I2EK;K3EO;I4EuB;K5EG;I6ES;K7EG;I8EI;uCpEG;sDqBI;yBrBY;aoES;K9EU;I+EM;6CCU,kDD;K/ES;IiFI;4CvEe;iBuEQ;KjFQ;IkFO;KlFwB;ImFC;0CpDE;aoDU;KnFQ;IoFC;0CrDE;aqDuB;KpFQ;IqFC;qC3EC;8CqBE;iBrBwB;S2EQ;KrFC;IsFC;qC5EC;8CqBE;iBrB8B;S4EQ;KtFC;IuFI;KvFc;IwFI;KxFyB;IyFI;qC/EC;0CqBC;yH2DkB,wC3D;arBM;S+EC;KzFC;I2FC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;K3FK;I8FiB;K9F+D;CFC"}},"type":"js/module"}]}