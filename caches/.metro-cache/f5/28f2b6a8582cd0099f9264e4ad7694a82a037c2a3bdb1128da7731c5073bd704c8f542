{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":32,"index":109}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}},{"name":"../lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":20,"index":131},"end":{"line":4,"column":47,"index":158}}],"key":"5SaJjHUOpKrE3J3aWh2RTsVAt6s=","exportNames":["*"]}},{"name":"../lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":177},"end":{"line":5,"column":41,"index":201}}],"key":"+GSAvg/CWfG2ifOQrWLkai/D9hY=","exportNames":["*"]}},{"name":"../lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":16,"index":219},"end":{"line":6,"column":39,"index":242}}],"key":"m5IduDkD0DmXIm44QxetlLAeo0E=","exportNames":["*"]}},{"name":"../lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":262},"end":{"line":7,"column":43,"index":287}}],"key":"g7hF4pHwnWO84hRO36vjqsLwW80=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var tslib_1 = require(_dependencyMap[2], \"tslib\");\n  var constants_1 = require(_dependencyMap[3], \"../lib/constants\");\n  var errors_1 = require(_dependencyMap[4], \"../lib/errors\");\n  var fetch_1 = require(_dependencyMap[5], \"../lib/fetch\");\n  var helpers_1 = require(_dependencyMap[6], \"../lib/helpers\");\n  var StorageBucketApi = /*#__PURE__*/function () {\n    function StorageBucketApi(url) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fetch = arguments.length > 2 ? arguments[2] : undefined;\n      var opts = arguments.length > 3 ? arguments[3] : undefined;\n      _classCallCheck(this, StorageBucketApi);\n      this.shouldThrowOnError = false;\n      var baseUrl = new URL(url);\n      // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n      // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n      if (opts === null || opts === void 0 ? void 0 : opts.useNewHostname) {\n        var isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname);\n        if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n          baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.');\n        }\n      }\n      this.url = baseUrl.href.replace(/\\/$/, '');\n      this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them.\n     */\n    return _createClass(StorageBucketApi, [{\n      key: \"throwOnError\",\n      value: function throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n      }\n      /**\n       * Retrieves the details of all Storage buckets within an existing project.\n       */\n    }, {\n      key: \"listBuckets\",\n      value: function listBuckets() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket`, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Retrieves the details of an existing Storage bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to retrieve.\n       */\n    }, {\n      key: \"getBucket\",\n      value: function getBucket(id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket/${id}`, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Creates a new Storage bucket\n       *\n       * @param id A unique identifier for the bucket you are creating.\n       * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n       * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n       * The global file size limit takes precedence over this value.\n       * The default value is null, which doesn't set a per bucket file size limit.\n       * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n       * The default value is null, which allows files with all mime types to be uploaded.\n       * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n       * @returns newly created bucket id\n       * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n       *   - default bucket type is `STANDARD`\n       */\n    }, {\n      key: \"createBucket\",\n      value: function createBucket(id_1) {\n        return tslib_1.__awaiter(this, arguments, void 0, function (id) {\n          var _this = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            public: false\n          };\n          return function* () {\n            try {\n              var data = yield (0, fetch_1.post)(_this.fetch, `${_this.url}/bucket`, {\n                id,\n                name: id,\n                type: options.type,\n                public: options.public,\n                file_size_limit: options.fileSizeLimit,\n                allowed_mime_types: options.allowedMimeTypes\n              }, {\n                headers: _this.headers\n              });\n              return {\n                data,\n                error: null\n              };\n            } catch (error) {\n              if (_this.shouldThrowOnError) {\n                throw error;\n              }\n              if ((0, errors_1.isStorageError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }();\n        });\n      }\n      /**\n       * Updates a Storage bucket\n       *\n       * @param id A unique identifier for the bucket you are updating.\n       * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n       * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n       * The global file size limit takes precedence over this value.\n       * The default value is null, which doesn't set a per bucket file size limit.\n       * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n       * The default value is null, which allows files with all mime types to be uploaded.\n       * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n       */\n    }, {\n      key: \"updateBucket\",\n      value: function updateBucket(id, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.put)(this.fetch, `${this.url}/bucket/${id}`, {\n              id,\n              name: id,\n              public: options.public,\n              file_size_limit: options.fileSizeLimit,\n              allowed_mime_types: options.allowedMimeTypes\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Removes all objects inside a single bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to empty.\n       */\n    }, {\n      key: \"emptyBucket\",\n      value: function emptyBucket(id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n       * You must first `empty()` the bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to delete.\n       */\n    }, {\n      key: \"deleteBucket\",\n      value: function deleteBucket(id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n    }]);\n  }();\n  exports.default = StorageBucketApi;\n});","lineCount":267,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0],[9,6,3,6,"tslib_1"],[9,13,3,13],[9,16,3,16,"require"],[9,23,3,23],[9,24,3,23,"_dependencyMap"],[9,38,3,23],[9,50,3,31],[9,51,3,32],[10,2,4,0],[10,6,4,6,"constants_1"],[10,17,4,17],[10,20,4,20,"require"],[10,27,4,27],[10,28,4,27,"_dependencyMap"],[10,42,4,27],[10,65,4,46],[10,66,4,47],[11,2,5,0],[11,6,5,6,"errors_1"],[11,14,5,14],[11,17,5,17,"require"],[11,24,5,24],[11,25,5,24,"_dependencyMap"],[11,39,5,24],[11,59,5,40],[11,60,5,41],[12,2,6,0],[12,6,6,6,"fetch_1"],[12,13,6,13],[12,16,6,16,"require"],[12,23,6,23],[12,24,6,23,"_dependencyMap"],[12,38,6,23],[12,57,6,38],[12,58,6,39],[13,2,7,0],[13,6,7,6,"helpers_1"],[13,15,7,15],[13,18,7,18,"require"],[13,25,7,25],[13,26,7,25,"_dependencyMap"],[13,40,7,25],[13,61,7,42],[13,62,7,43],[14,2,7,44],[14,6,8,6,"StorageBucketApi"],[14,22,8,22],[15,4,9,4],[15,13,9,4,"StorageBucketApi"],[15,30,9,16,"url"],[15,33,9,19],[15,35,9,48],[16,6,9,48],[16,10,9,21,"headers"],[16,17,9,28],[16,20,9,28,"arguments"],[16,29,9,28],[16,30,9,28,"length"],[16,36,9,28],[16,44,9,28,"arguments"],[16,53,9,28],[16,61,9,28,"undefined"],[16,70,9,28],[16,73,9,28,"arguments"],[16,82,9,28],[16,88,9,31],[16,89,9,32],[16,90,9,33],[17,6,9,33],[17,10,9,35,"fetch"],[17,15,9,40],[17,18,9,40,"arguments"],[17,27,9,40],[17,28,9,40,"length"],[17,34,9,40],[17,41,9,40,"arguments"],[17,50,9,40],[17,56,9,40,"undefined"],[17,65,9,40],[18,6,9,40],[18,10,9,42,"opts"],[18,14,9,46],[18,17,9,46,"arguments"],[18,26,9,46],[18,27,9,46,"length"],[18,33,9,46],[18,40,9,46,"arguments"],[18,49,9,46],[18,55,9,46,"undefined"],[18,64,9,46],[19,6,9,46,"_classCallCheck"],[19,21,9,46],[19,28,9,46,"StorageBucketApi"],[19,44,9,46],[20,6,10,8],[20,10,10,12],[20,11,10,13,"shouldThrowOnError"],[20,29,10,31],[20,32,10,34],[20,37,10,39],[21,6,11,8],[21,10,11,14,"baseUrl"],[21,17,11,21],[21,20,11,24],[21,24,11,28,"URL"],[21,27,11,31],[21,28,11,32,"url"],[21,31,11,35],[21,32,11,36],[22,6,12,8],[23,6,13,8],[24,6,14,8],[24,10,14,12,"opts"],[24,14,14,16],[24,19,14,21],[24,23,14,25],[24,27,14,29,"opts"],[24,31,14,33],[24,36,14,38],[24,41,14,43],[24,42,14,44],[24,45,14,47],[24,50,14,52],[24,51,14,53],[24,54,14,56,"opts"],[24,58,14,60],[24,59,14,61,"useNewHostname"],[24,73,14,75],[24,75,14,77],[25,8,15,12],[25,12,15,18,"isSupabaseHost"],[25,26,15,32],[25,29,15,35],[25,53,15,59],[25,54,15,60,"test"],[25,58,15,64],[25,59,15,65,"baseUrl"],[25,66,15,72],[25,67,15,73,"hostname"],[25,75,15,81],[25,76,15,82],[26,8,16,12],[26,12,16,16,"isSupabaseHost"],[26,26,16,30],[26,30,16,34],[26,31,16,35,"baseUrl"],[26,38,16,42],[26,39,16,43,"hostname"],[26,47,16,51],[26,48,16,52,"includes"],[26,56,16,60],[26,57,16,61],[26,76,16,80],[26,77,16,81],[26,79,16,83],[27,10,17,16,"baseUrl"],[27,17,17,23],[27,18,17,24,"hostname"],[27,26,17,32],[27,29,17,35,"baseUrl"],[27,36,17,42],[27,37,17,43,"hostname"],[27,45,17,51],[27,46,17,52,"replace"],[27,53,17,59],[27,54,17,60],[27,65,17,71],[27,67,17,73],[27,86,17,92],[27,87,17,93],[28,8,18,12],[29,6,19,8],[30,6,20,8],[30,10,20,12],[30,11,20,13,"url"],[30,14,20,16],[30,17,20,19,"baseUrl"],[30,24,20,26],[30,25,20,27,"href"],[30,29,20,31],[30,30,20,32,"replace"],[30,37,20,39],[30,38,20,40],[30,43,20,45],[30,45,20,47],[30,47,20,49],[30,48,20,50],[31,6,21,8],[31,10,21,12],[31,11,21,13,"headers"],[31,18,21,20],[31,21,21,23,"Object"],[31,27,21,29],[31,28,21,30,"assign"],[31,34,21,36],[31,35,21,37,"Object"],[31,41,21,43],[31,42,21,44,"assign"],[31,48,21,50],[31,49,21,51],[31,50,21,52],[31,51,21,53],[31,53,21,55,"constants_1"],[31,64,21,66],[31,65,21,67,"DEFAULT_HEADERS"],[31,80,21,82],[31,81,21,83],[31,83,21,85,"headers"],[31,90,21,92],[31,91,21,93],[32,6,22,8],[32,10,22,12],[32,11,22,13,"fetch"],[32,16,22,18],[32,19,22,21],[32,20,22,22],[32,21,22,23],[32,23,22,25,"helpers_1"],[32,32,22,34],[32,33,22,35,"resolveFetch"],[32,45,22,47],[32,47,22,49,"fetch"],[32,52,22,54],[32,53,22,55],[33,4,23,4],[34,4,24,4],[35,0,25,0],[36,0,26,0],[37,4,24,4],[37,11,24,4,"_createClass"],[37,23,24,4],[37,24,24,4,"StorageBucketApi"],[37,40,24,4],[38,6,24,4,"key"],[38,9,24,4],[39,6,24,4,"value"],[39,11,24,4],[39,13,27,4],[39,22,27,4,"throwOnError"],[39,34,27,16,"throwOnError"],[39,35,27,16],[39,37,27,19],[40,8,28,8],[40,12,28,12],[40,13,28,13,"shouldThrowOnError"],[40,31,28,31],[40,34,28,34],[40,38,28,38],[41,8,29,8],[41,15,29,15],[41,19,29,19],[42,6,30,4],[43,6,31,4],[44,0,32,0],[45,0,33,0],[46,4,31,4],[47,6,31,4,"key"],[47,9,31,4],[48,6,31,4,"value"],[48,11,31,4],[48,13,34,4],[48,22,34,4,"listBuckets"],[48,33,34,15,"listBuckets"],[48,34,34,15],[48,36,34,18],[49,8,35,8],[49,15,35,15,"tslib_1"],[49,22,35,22],[49,23,35,23,"__awaiter"],[49,32,35,32],[49,33,35,33],[49,37,35,37],[49,39,35,39],[49,44,35,44],[49,45,35,45],[49,47,35,47],[49,52,35,52],[49,53,35,53],[49,55,35,55],[49,68,35,68],[50,10,36,12],[50,14,36,16],[51,12,37,16],[51,16,37,22,"data"],[51,20,37,26],[51,23,37,29],[51,29,37,35],[51,30,37,36],[51,31,37,37],[51,33,37,39,"fetch_1"],[51,40,37,46],[51,41,37,47,"get"],[51,44,37,50],[51,46,37,52],[51,50,37,56],[51,51,37,57,"fetch"],[51,56,37,62],[51,58,37,64],[51,61,37,67],[51,65,37,71],[51,66,37,72,"url"],[51,69,37,75],[51,78,37,84],[51,80,37,86],[52,14,37,88,"headers"],[52,21,37,95],[52,23,37,97],[52,27,37,101],[52,28,37,102,"headers"],[53,12,37,110],[53,13,37,111],[53,14,37,112],[54,12,38,16],[54,19,38,23],[55,14,38,25,"data"],[55,18,38,29],[56,14,38,31,"error"],[56,19,38,36],[56,21,38,38],[57,12,38,43],[57,13,38,44],[58,10,39,12],[58,11,39,13],[58,12,40,12],[58,19,40,19,"error"],[58,24,40,24],[58,26,40,26],[59,12,41,16],[59,16,41,20],[59,20,41,24],[59,21,41,25,"shouldThrowOnError"],[59,39,41,43],[59,41,41,45],[60,14,42,20],[60,20,42,26,"error"],[60,25,42,31],[61,12,43,16],[62,12,44,16],[62,16,44,20],[62,17,44,21],[62,18,44,22],[62,20,44,24,"errors_1"],[62,28,44,32],[62,29,44,33,"isStorageError"],[62,43,44,47],[62,45,44,49,"error"],[62,50,44,54],[62,51,44,55],[62,53,44,57],[63,14,45,20],[63,21,45,27],[64,16,45,29,"data"],[64,20,45,33],[64,22,45,35],[64,26,45,39],[65,16,45,41,"error"],[66,14,45,47],[66,15,45,48],[67,12,46,16],[68,12,47,16],[68,18,47,22,"error"],[68,23,47,27],[69,10,48,12],[70,8,49,8],[70,9,49,9],[70,10,49,10],[71,6,50,4],[72,6,51,4],[73,0,52,0],[74,0,53,0],[75,0,54,0],[76,0,55,0],[77,4,51,4],[78,6,51,4,"key"],[78,9,51,4],[79,6,51,4,"value"],[79,11,51,4],[79,13,56,4],[79,22,56,4,"getBucket"],[79,31,56,13,"getBucket"],[79,32,56,14,"id"],[79,34,56,16],[79,36,56,18],[80,8,57,8],[80,15,57,15,"tslib_1"],[80,22,57,22],[80,23,57,23,"__awaiter"],[80,32,57,32],[80,33,57,33],[80,37,57,37],[80,39,57,39],[80,44,57,44],[80,45,57,45],[80,47,57,47],[80,52,57,52],[80,53,57,53],[80,55,57,55],[80,68,57,68],[81,10,58,12],[81,14,58,16],[82,12,59,16],[82,16,59,22,"data"],[82,20,59,26],[82,23,59,29],[82,29,59,35],[82,30,59,36],[82,31,59,37],[82,33,59,39,"fetch_1"],[82,40,59,46],[82,41,59,47,"get"],[82,44,59,50],[82,46,59,52],[82,50,59,56],[82,51,59,57,"fetch"],[82,56,59,62],[82,58,59,64],[82,61,59,67],[82,65,59,71],[82,66,59,72,"url"],[82,69,59,75],[82,80,59,86,"id"],[82,82,59,88],[82,84,59,90],[82,86,59,92],[83,14,59,94,"headers"],[83,21,59,101],[83,23,59,103],[83,27,59,107],[83,28,59,108,"headers"],[84,12,59,116],[84,13,59,117],[84,14,59,118],[85,12,60,16],[85,19,60,23],[86,14,60,25,"data"],[86,18,60,29],[87,14,60,31,"error"],[87,19,60,36],[87,21,60,38],[88,12,60,43],[88,13,60,44],[89,10,61,12],[89,11,61,13],[89,12,62,12],[89,19,62,19,"error"],[89,24,62,24],[89,26,62,26],[90,12,63,16],[90,16,63,20],[90,20,63,24],[90,21,63,25,"shouldThrowOnError"],[90,39,63,43],[90,41,63,45],[91,14,64,20],[91,20,64,26,"error"],[91,25,64,31],[92,12,65,16],[93,12,66,16],[93,16,66,20],[93,17,66,21],[93,18,66,22],[93,20,66,24,"errors_1"],[93,28,66,32],[93,29,66,33,"isStorageError"],[93,43,66,47],[93,45,66,49,"error"],[93,50,66,54],[93,51,66,55],[93,53,66,57],[94,14,67,20],[94,21,67,27],[95,16,67,29,"data"],[95,20,67,33],[95,22,67,35],[95,26,67,39],[96,16,67,41,"error"],[97,14,67,47],[97,15,67,48],[98,12,68,16],[99,12,69,16],[99,18,69,22,"error"],[99,23,69,27],[100,10,70,12],[101,8,71,8],[101,9,71,9],[101,10,71,10],[102,6,72,4],[103,6,73,4],[104,0,74,0],[105,0,75,0],[106,0,76,0],[107,0,77,0],[108,0,78,0],[109,0,79,0],[110,0,80,0],[111,0,81,0],[112,0,82,0],[113,0,83,0],[114,0,84,0],[115,0,85,0],[116,0,86,0],[117,0,87,0],[118,4,73,4],[119,6,73,4,"key"],[119,9,73,4],[120,6,73,4,"value"],[120,11,73,4],[120,13,88,4],[120,22,88,4,"createBucket"],[120,34,88,16,"createBucket"],[120,35,88,17,"id_1"],[120,39,88,21],[120,41,88,23],[121,8,89,8],[121,15,89,15,"tslib_1"],[121,22,89,22],[121,23,89,23,"__awaiter"],[121,32,89,32],[121,33,89,33],[121,37,89,37],[121,39,89,39,"arguments"],[121,48,89,48],[121,50,89,50],[121,55,89,55],[121,56,89,56],[121,58,89,58],[121,68,89,69,"id"],[121,70,89,71],[122,10,89,71],[122,14,89,71,"_this"],[122,19,89,71],[123,10,89,71],[123,14,89,73,"options"],[123,21,89,80],[123,24,89,80,"arguments"],[123,33,89,80],[123,34,89,80,"length"],[123,40,89,80],[123,48,89,80,"arguments"],[123,57,89,80],[123,65,89,80,"undefined"],[123,74,89,80],[123,77,89,80,"arguments"],[123,86,89,80],[123,92,89,83],[124,12,90,12,"public"],[124,18,90,18],[124,20,90,20],[125,10,91,8],[125,11,91,9],[126,10,91,9],[126,30,91,11],[127,12,92,12],[127,16,92,16],[128,14,93,16],[128,18,93,22,"data"],[128,22,93,26],[128,25,93,29],[128,31,93,35],[128,32,93,36],[128,33,93,37],[128,35,93,39,"fetch_1"],[128,42,93,46],[128,43,93,47,"post"],[128,47,93,51],[128,49,93,53,"_this"],[128,54,93,57],[128,55,93,58,"fetch"],[128,60,93,63],[128,62,93,65],[128,65,93,68,"_this"],[128,70,93,72],[128,71,93,73,"url"],[128,74,93,76],[128,83,93,85],[128,85,93,87],[129,16,94,20,"id"],[129,18,94,22],[130,16,95,20,"name"],[130,20,95,24],[130,22,95,26,"id"],[130,24,95,28],[131,16,96,20,"type"],[131,20,96,24],[131,22,96,26,"options"],[131,29,96,33],[131,30,96,34,"type"],[131,34,96,38],[132,16,97,20,"public"],[132,22,97,26],[132,24,97,28,"options"],[132,31,97,35],[132,32,97,36,"public"],[132,38,97,42],[133,16,98,20,"file_size_limit"],[133,31,98,35],[133,33,98,37,"options"],[133,40,98,44],[133,41,98,45,"fileSizeLimit"],[133,54,98,58],[134,16,99,20,"allowed_mime_types"],[134,34,99,38],[134,36,99,40,"options"],[134,43,99,47],[134,44,99,48,"allowedMimeTypes"],[135,14,100,16],[135,15,100,17],[135,17,100,19],[136,16,100,21,"headers"],[136,23,100,28],[136,25,100,30,"_this"],[136,30,100,34],[136,31,100,35,"headers"],[137,14,100,43],[137,15,100,44],[137,16,100,45],[138,14,101,16],[138,21,101,23],[139,16,101,25,"data"],[139,20,101,29],[140,16,101,31,"error"],[140,21,101,36],[140,23,101,38],[141,14,101,43],[141,15,101,44],[142,12,102,12],[142,13,102,13],[142,14,103,12],[142,21,103,19,"error"],[142,26,103,24],[142,28,103,26],[143,14,104,16],[143,18,104,20,"_this"],[143,23,104,24],[143,24,104,25,"shouldThrowOnError"],[143,42,104,43],[143,44,104,45],[144,16,105,20],[144,22,105,26,"error"],[144,27,105,31],[145,14,106,16],[146,14,107,16],[146,18,107,20],[146,19,107,21],[146,20,107,22],[146,22,107,24,"errors_1"],[146,30,107,32],[146,31,107,33,"isStorageError"],[146,45,107,47],[146,47,107,49,"error"],[146,52,107,54],[146,53,107,55],[146,55,107,57],[147,16,108,20],[147,23,108,27],[148,18,108,29,"data"],[148,22,108,33],[148,24,108,35],[148,28,108,39],[149,18,108,41,"error"],[150,16,108,47],[150,17,108,48],[151,14,109,16],[152,14,110,16],[152,20,110,22,"error"],[152,25,110,27],[153,12,111,12],[154,10,112,8],[154,11,112,9],[155,8,112,9],[155,10,112,10],[156,6,113,4],[157,6,114,4],[158,0,115,0],[159,0,116,0],[160,0,117,0],[161,0,118,0],[162,0,119,0],[163,0,120,0],[164,0,121,0],[165,0,122,0],[166,0,123,0],[167,0,124,0],[168,0,125,0],[169,4,114,4],[170,6,114,4,"key"],[170,9,114,4],[171,6,114,4,"value"],[171,11,114,4],[171,13,126,4],[171,22,126,4,"updateBucket"],[171,34,126,16,"updateBucket"],[171,35,126,17,"id"],[171,37,126,19],[171,39,126,21,"options"],[171,46,126,28],[171,48,126,30],[172,8,127,8],[172,15,127,15,"tslib_1"],[172,22,127,22],[172,23,127,23,"__awaiter"],[172,32,127,32],[172,33,127,33],[172,37,127,37],[172,39,127,39],[172,44,127,44],[172,45,127,45],[172,47,127,47],[172,52,127,52],[172,53,127,53],[172,55,127,55],[172,68,127,68],[173,10,128,12],[173,14,128,16],[174,12,129,16],[174,16,129,22,"data"],[174,20,129,26],[174,23,129,29],[174,29,129,35],[174,30,129,36],[174,31,129,37],[174,33,129,39,"fetch_1"],[174,40,129,46],[174,41,129,47,"put"],[174,44,129,50],[174,46,129,52],[174,50,129,56],[174,51,129,57,"fetch"],[174,56,129,62],[174,58,129,64],[174,61,129,67],[174,65,129,71],[174,66,129,72,"url"],[174,69,129,75],[174,80,129,86,"id"],[174,82,129,88],[174,84,129,90],[174,86,129,92],[175,14,130,20,"id"],[175,16,130,22],[176,14,131,20,"name"],[176,18,131,24],[176,20,131,26,"id"],[176,22,131,28],[177,14,132,20,"public"],[177,20,132,26],[177,22,132,28,"options"],[177,29,132,35],[177,30,132,36,"public"],[177,36,132,42],[178,14,133,20,"file_size_limit"],[178,29,133,35],[178,31,133,37,"options"],[178,38,133,44],[178,39,133,45,"fileSizeLimit"],[178,52,133,58],[179,14,134,20,"allowed_mime_types"],[179,32,134,38],[179,34,134,40,"options"],[179,41,134,47],[179,42,134,48,"allowedMimeTypes"],[180,12,135,16],[180,13,135,17],[180,15,135,19],[181,14,135,21,"headers"],[181,21,135,28],[181,23,135,30],[181,27,135,34],[181,28,135,35,"headers"],[182,12,135,43],[182,13,135,44],[182,14,135,45],[183,12,136,16],[183,19,136,23],[184,14,136,25,"data"],[184,18,136,29],[185,14,136,31,"error"],[185,19,136,36],[185,21,136,38],[186,12,136,43],[186,13,136,44],[187,10,137,12],[187,11,137,13],[187,12,138,12],[187,19,138,19,"error"],[187,24,138,24],[187,26,138,26],[188,12,139,16],[188,16,139,20],[188,20,139,24],[188,21,139,25,"shouldThrowOnError"],[188,39,139,43],[188,41,139,45],[189,14,140,20],[189,20,140,26,"error"],[189,25,140,31],[190,12,141,16],[191,12,142,16],[191,16,142,20],[191,17,142,21],[191,18,142,22],[191,20,142,24,"errors_1"],[191,28,142,32],[191,29,142,33,"isStorageError"],[191,43,142,47],[191,45,142,49,"error"],[191,50,142,54],[191,51,142,55],[191,53,142,57],[192,14,143,20],[192,21,143,27],[193,16,143,29,"data"],[193,20,143,33],[193,22,143,35],[193,26,143,39],[194,16,143,41,"error"],[195,14,143,47],[195,15,143,48],[196,12,144,16],[197,12,145,16],[197,18,145,22,"error"],[197,23,145,27],[198,10,146,12],[199,8,147,8],[199,9,147,9],[199,10,147,10],[200,6,148,4],[201,6,149,4],[202,0,150,0],[203,0,151,0],[204,0,152,0],[205,0,153,0],[206,4,149,4],[207,6,149,4,"key"],[207,9,149,4],[208,6,149,4,"value"],[208,11,149,4],[208,13,154,4],[208,22,154,4,"emptyBucket"],[208,33,154,15,"emptyBucket"],[208,34,154,16,"id"],[208,36,154,18],[208,38,154,20],[209,8,155,8],[209,15,155,15,"tslib_1"],[209,22,155,22],[209,23,155,23,"__awaiter"],[209,32,155,32],[209,33,155,33],[209,37,155,37],[209,39,155,39],[209,44,155,44],[209,45,155,45],[209,47,155,47],[209,52,155,52],[209,53,155,53],[209,55,155,55],[209,68,155,68],[210,10,156,12],[210,14,156,16],[211,12,157,16],[211,16,157,22,"data"],[211,20,157,26],[211,23,157,29],[211,29,157,35],[211,30,157,36],[211,31,157,37],[211,33,157,39,"fetch_1"],[211,40,157,46],[211,41,157,47,"post"],[211,45,157,51],[211,47,157,53],[211,51,157,57],[211,52,157,58,"fetch"],[211,57,157,63],[211,59,157,65],[211,62,157,68],[211,66,157,72],[211,67,157,73,"url"],[211,70,157,76],[211,81,157,87,"id"],[211,83,157,89],[211,91,157,97],[211,93,157,99],[211,94,157,100],[211,95,157,101],[211,97,157,103],[212,14,157,105,"headers"],[212,21,157,112],[212,23,157,114],[212,27,157,118],[212,28,157,119,"headers"],[213,12,157,127],[213,13,157,128],[213,14,157,129],[214,12,158,16],[214,19,158,23],[215,14,158,25,"data"],[215,18,158,29],[216,14,158,31,"error"],[216,19,158,36],[216,21,158,38],[217,12,158,43],[217,13,158,44],[218,10,159,12],[218,11,159,13],[218,12,160,12],[218,19,160,19,"error"],[218,24,160,24],[218,26,160,26],[219,12,161,16],[219,16,161,20],[219,20,161,24],[219,21,161,25,"shouldThrowOnError"],[219,39,161,43],[219,41,161,45],[220,14,162,20],[220,20,162,26,"error"],[220,25,162,31],[221,12,163,16],[222,12,164,16],[222,16,164,20],[222,17,164,21],[222,18,164,22],[222,20,164,24,"errors_1"],[222,28,164,32],[222,29,164,33,"isStorageError"],[222,43,164,47],[222,45,164,49,"error"],[222,50,164,54],[222,51,164,55],[222,53,164,57],[223,14,165,20],[223,21,165,27],[224,16,165,29,"data"],[224,20,165,33],[224,22,165,35],[224,26,165,39],[225,16,165,41,"error"],[226,14,165,47],[226,15,165,48],[227,12,166,16],[228,12,167,16],[228,18,167,22,"error"],[228,23,167,27],[229,10,168,12],[230,8,169,8],[230,9,169,9],[230,10,169,10],[231,6,170,4],[232,6,171,4],[233,0,172,0],[234,0,173,0],[235,0,174,0],[236,0,175,0],[237,0,176,0],[238,4,171,4],[239,6,171,4,"key"],[239,9,171,4],[240,6,171,4,"value"],[240,11,171,4],[240,13,177,4],[240,22,177,4,"deleteBucket"],[240,34,177,16,"deleteBucket"],[240,35,177,17,"id"],[240,37,177,19],[240,39,177,21],[241,8,178,8],[241,15,178,15,"tslib_1"],[241,22,178,22],[241,23,178,23,"__awaiter"],[241,32,178,32],[241,33,178,33],[241,37,178,37],[241,39,178,39],[241,44,178,44],[241,45,178,45],[241,47,178,47],[241,52,178,52],[241,53,178,53],[241,55,178,55],[241,68,178,68],[242,10,179,12],[242,14,179,16],[243,12,180,16],[243,16,180,22,"data"],[243,20,180,26],[243,23,180,29],[243,29,180,35],[243,30,180,36],[243,31,180,37],[243,33,180,39,"fetch_1"],[243,40,180,46],[243,41,180,47,"remove"],[243,47,180,53],[243,49,180,55],[243,53,180,59],[243,54,180,60,"fetch"],[243,59,180,65],[243,61,180,67],[243,64,180,70],[243,68,180,74],[243,69,180,75,"url"],[243,72,180,78],[243,83,180,89,"id"],[243,85,180,91],[243,87,180,93],[243,89,180,95],[243,90,180,96],[243,91,180,97],[243,93,180,99],[244,14,180,101,"headers"],[244,21,180,108],[244,23,180,110],[244,27,180,114],[244,28,180,115,"headers"],[245,12,180,123],[245,13,180,124],[245,14,180,125],[246,12,181,16],[246,19,181,23],[247,14,181,25,"data"],[247,18,181,29],[248,14,181,31,"error"],[248,19,181,36],[248,21,181,38],[249,12,181,43],[249,13,181,44],[250,10,182,12],[250,11,182,13],[250,12,183,12],[250,19,183,19,"error"],[250,24,183,24],[250,26,183,26],[251,12,184,16],[251,16,184,20],[251,20,184,24],[251,21,184,25,"shouldThrowOnError"],[251,39,184,43],[251,41,184,45],[252,14,185,20],[252,20,185,26,"error"],[252,25,185,31],[253,12,186,16],[254,12,187,16],[254,16,187,20],[254,17,187,21],[254,18,187,22],[254,20,187,24,"errors_1"],[254,28,187,32],[254,29,187,33,"isStorageError"],[254,43,187,47],[254,45,187,49,"error"],[254,50,187,54],[254,51,187,55],[254,53,187,57],[255,14,188,20],[255,21,188,27],[256,16,188,29,"data"],[256,20,188,33],[256,22,188,35],[256,26,188,39],[257,16,188,41,"error"],[258,14,188,47],[258,15,188,48],[259,12,189,16],[260,12,190,16],[260,18,190,22,"error"],[260,23,190,27],[261,10,191,12],[262,8,192,8],[262,9,192,9],[262,10,192,10],[263,6,193,4],[264,4,193,5],[265,2,193,5],[266,2,195,0,"exports"],[266,9,195,7],[266,10,195,8,"default"],[266,17,195,15],[266,20,195,18,"StorageBucketApi"],[266,36,195,34],[267,0,195,35],[267,3]],"functionMap":{"names":["<global>","StorageBucketApi","constructor","throwOnError","listBuckets","tslib_1.__awaiter$argument_3","getBucket","createBucket","updateBucket","emptyBucket","deleteBucket"],"mappings":"AAA;ACO;ICC;KDc;IEI;KFG;IGI;uDCC;SDc;KHC;IKM;uDDC;SCc;KLC;IMgB;0DFC;SEuB;KNC;IOa;uDHC;SGoB;KPC;IQM;uDJC;SIc;KRC;ISO;uDLC;SKc;KTC;CDC"}},"type":"js/module"}]}