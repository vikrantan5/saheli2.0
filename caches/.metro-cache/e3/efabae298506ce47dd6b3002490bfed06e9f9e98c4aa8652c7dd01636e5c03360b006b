{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./UpdatesEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":80,"index":125}}],"key":"/fHEDLJ3F6iAN2DeLsAHAg7O1AA=","exportNames":["*"]}},{"name":"./UseUpdatesUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":78,"index":204}}],"key":"JTRi8Q+i4Jils43kbA11mDJ+09Q=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useUpdates = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = require(_dependencyMap[2], \"react\");\n  var _UpdatesEmitter = require(_dependencyMap[3], \"./UpdatesEmitter\");\n  var _UseUpdatesUtils = require(_dependencyMap[4], \"./UseUpdatesUtils\");\n  /**\n   * Hook that obtains information on available updates and on the currently running update.\n   *\n   * @return the structures with information on currently running and available updates.\n   *\n   * @example\n   * ```tsx UpdatesDemo.tsx\n   * import { StatusBar } from 'expo-status-bar';\n   * import * as Updates from 'expo-updates';\n   * import { useEffect } from 'react';\n   * import { Button, Text, View } from 'react-native';\n   *\n   * export default function UpdatesDemo() {\n   *   const {\n   *     currentlyRunning,\n   *     isUpdateAvailable,\n   *     isUpdatePending\n   *   } = Updates.useUpdates();\n   *\n   *   useEffect(() => {\n   *     if (isUpdatePending) {\n   *       // Update has successfully downloaded; apply it now\n   *       Updates.reloadAsync();\n   *     }\n   *   }, [isUpdatePending]);\n   *\n   *   // If true, we show the button to download and run the update\n   *   const showDownloadButton = isUpdateAvailable;\n   *\n   *   // Show whether or not we are running embedded code or an update\n   *   const runTypeMessage = currentlyRunning.isEmbeddedLaunch\n   *     ? 'This app is running from built-in code'\n   *     : 'This app is running an update';\n   *\n   *   return (\n   *     <View style={styles.container}>\n   *       <Text style={styles.headerText}>Updates Demo</Text>\n   *       <Text>{runTypeMessage}</Text>\n   *       <Button onPress={() => Updates.checkForUpdateAsync()} title=\"Check manually for updates\" />\n   *       {showDownloadButton ? (\n   *         <Button onPress={() => Updates.fetchUpdateAsync()} title=\"Download and run update\" />\n   *       ) : null}\n   *       <StatusBar style=\"auto\" />\n   *     </View>\n   *   );\n   * }\n   * ```\n   */\n  var useUpdates = () => {\n    var _useState = (0, _react.useState)((0, _UseUpdatesUtils.updatesStateFromContext)(_UpdatesEmitter.latestContext)),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      updatesState = _useState2[0],\n      setUpdatesState = _useState2[1];\n    // Change the state based on native state machine context changes\n    (0, _react.useEffect)(() => {\n      var subscription = (0, _UpdatesEmitter.addUpdatesStateChangeListener)(event => {\n        setUpdatesState((0, _UseUpdatesUtils.updatesStateFromContext)(event.context));\n      });\n      return () => subscription.remove();\n    }, []);\n    // Return the updates info and the user facing functions\n    return {\n      currentlyRunning: _UseUpdatesUtils.currentlyRunning,\n      ...updatesState\n    };\n  };\n  exports.useUpdates = useUpdates;\n});","lineCount":78,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_UpdatesEmitter"],[9,21,2,0],[9,24,2,0,"require"],[9,31,2,0],[9,32,2,0,"_dependencyMap"],[9,46,2,0],[10,2,3,0],[10,6,3,0,"_UseUpdatesUtils"],[10,22,3,0],[10,25,3,0,"require"],[10,32,3,0],[10,33,3,0,"_dependencyMap"],[10,47,3,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,0,45,0],[53,0,46,0],[54,0,47,0],[55,0,48,0],[56,0,49,0],[57,0,50,0],[58,0,51,0],[59,2,52,7],[59,6,52,13,"useUpdates"],[59,16,52,23],[59,19,52,26,"useUpdates"],[59,20,52,26],[59,25,52,32],[60,4,53,4],[60,8,53,4,"_useState"],[60,17,53,4],[60,20,53,44],[60,24,53,44,"useState"],[60,39,53,52],[60,41,53,53],[60,45,53,53,"updatesStateFromContext"],[60,85,53,76],[60,87,53,77,"latestContext"],[60,116,53,90],[60,117,53,91],[60,118,53,92],[61,6,53,92,"_useState2"],[61,16,53,92],[61,23,53,92,"_slicedToArray2"],[61,38,53,92],[61,39,53,92,"default"],[61,46,53,92],[61,48,53,92,"_useState"],[61,57,53,92],[62,6,53,11,"updatesState"],[62,18,53,23],[62,21,53,23,"_useState2"],[62,31,53,23],[63,6,53,25,"setUpdatesState"],[63,21,53,40],[63,24,53,40,"_useState2"],[63,34,53,40],[64,4,54,4],[65,4,55,4],[65,8,55,4,"useEffect"],[65,24,55,13],[65,26,55,14],[65,32,55,20],[66,6,56,8],[66,10,56,14,"subscription"],[66,22,56,26],[66,25,56,29],[66,29,56,29,"addUpdatesStateChangeListener"],[66,74,56,58],[66,76,56,60,"event"],[66,81,56,65],[66,85,56,70],[67,8,57,12,"setUpdatesState"],[67,23,57,27],[67,24,57,28],[67,28,57,28,"updatesStateFromContext"],[67,68,57,51],[67,70,57,52,"event"],[67,75,57,57],[67,76,57,58,"context"],[67,83,57,65],[67,84,57,66],[67,85,57,67],[68,6,58,8],[68,7,58,9],[68,8,58,10],[69,6,59,8],[69,13,59,15],[69,19,59,21,"subscription"],[69,31,59,33],[69,32,59,34,"remove"],[69,38,59,40],[69,39,59,41],[69,40,59,42],[70,4,60,4],[70,5,60,5],[70,7,60,7],[70,9,60,9],[70,10,60,10],[71,4,61,4],[72,4,62,4],[72,11,62,11],[73,6,63,8,"currentlyRunning"],[73,22,63,24],[73,24,63,8,"currentlyRunning"],[73,57,63,24],[74,6,64,8],[74,9,64,11,"updatesState"],[75,4,65,4],[75,5,65,5],[76,2,66,0],[76,3,66,1],[77,2,66,2,"exports"],[77,9,66,2],[77,10,66,2,"useUpdates"],[77,20,66,2],[77,23,66,2,"useUpdates"],[77,33,66,2],[78,0,66,2],[78,3]],"functionMap":{"names":["<global>","useUpdates","useEffect$argument_0","addUpdatesStateChangeListener$argument_0","<anonymous>"],"mappings":"AAA;0BCmD;cCG;2DCC;SDE;eEC,2BF;KDC;CDM"}},"type":"js/module"}]}