{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Patch console so each call is echoed to the parent window.\n   * Must be imported first in the app entry point.\n   */\n\n  const IGNORE_LIST = [/^Running application \"main\"/];\n  function serialize(value) {\n    return JSON.stringify(value, (_k, v) => {\n      if (v instanceof Date) {\n        return {\n          __t: 'Date',\n          v: v.toISOString()\n        };\n      }\n      if (v instanceof Error) {\n        return {\n          __t: 'Error',\n          v: {\n            name: v.name,\n            message: v.message,\n            stack: v.stack\n          }\n        };\n      }\n      return v;\n    });\n  }\n  if (typeof window !== 'undefined') {\n    for (const level of ['log', 'info', 'warn', 'error', 'debug', 'table', 'trace']) {\n      const orig = console[level]?.bind(console);\n      console[level] = (...args) => {\n        orig?.(...args);\n        // Ignore messages that match the ignore list\n        if (IGNORE_LIST.some(regex => typeof args[0] === 'string' && regex.test(args[0]))) {\n          return;\n        }\n        try {\n          window.parent.postMessage({\n            type: 'sandbox:mobile:console-write',\n            __expoConsole: true,\n            level,\n            args: args.map(serialize)\n          }, '*');\n        } catch {\n          /* ignore errors so logging never breaks the app */\n        }\n      };\n    }\n  }\n});","lineCount":51,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[7,2,6,0],[7,8,6,6,"IGNORE_LIST"],[7,19,6,17],[7,22,6,20],[7,23,6,21],[7,52,6,50],[7,53,6,51],[8,2,8,0],[8,11,8,9,"serialize"],[8,20,8,18,"serialize"],[8,21,8,19,"value"],[8,26,8,33],[8,28,8,35],[9,4,9,2],[9,11,9,9,"JSON"],[9,15,9,13],[9,16,9,14,"stringify"],[9,25,9,23],[9,26,9,24,"value"],[9,31,9,29],[9,33,9,31],[9,34,9,32,"_k"],[9,36,9,34],[9,38,9,36,"v"],[9,39,9,37],[9,44,9,42],[10,6,10,4],[10,10,10,8,"v"],[10,11,10,9],[10,23,10,21,"Date"],[10,27,10,25],[10,29,10,27],[11,8,11,6],[11,15,11,13],[12,10,11,15,"__t"],[12,13,11,18],[12,15,11,20],[12,21,11,26],[13,10,11,28,"v"],[13,11,11,29],[13,13,11,31,"v"],[13,14,11,32],[13,15,11,33,"toISOString"],[13,26,11,44],[13,27,11,45],[14,8,11,47],[14,9,11,48],[15,6,12,4],[16,6,13,4],[16,10,13,8,"v"],[16,11,13,9],[16,23,13,21,"Error"],[16,28,13,26],[16,30,13,28],[17,8,14,6],[17,15,14,13],[18,10,15,8,"__t"],[18,13,15,11],[18,15,15,13],[18,22,15,20],[19,10,16,8,"v"],[19,11,16,9],[19,13,16,11],[20,12,16,13,"name"],[20,16,16,17],[20,18,16,19,"v"],[20,19,16,20],[20,20,16,21,"name"],[20,24,16,25],[21,12,16,27,"message"],[21,19,16,34],[21,21,16,36,"v"],[21,22,16,37],[21,23,16,38,"message"],[21,30,16,45],[22,12,16,47,"stack"],[22,17,16,52],[22,19,16,54,"v"],[22,20,16,55],[22,21,16,56,"stack"],[23,10,16,62],[24,8,17,6],[24,9,17,7],[25,6,18,4],[26,6,19,4],[26,13,19,11,"v"],[26,14,19,12],[27,4,20,2],[27,5,20,3],[27,6,20,4],[28,2,21,0],[29,2,23,0],[29,6,23,4],[29,13,23,11,"window"],[29,19,23,17],[29,24,23,22],[29,35,23,33],[29,37,23,35],[30,4,24,2],[30,9,24,7],[30,15,24,13,"level"],[30,20,24,18],[30,24,24,22],[30,25,24,23],[30,30,24,28],[30,32,24,30],[30,38,24,36],[30,40,24,38],[30,46,24,44],[30,48,24,46],[30,55,24,53],[30,57,24,55],[30,64,24,62],[30,66,24,64],[30,73,24,71],[30,75,24,73],[30,82,24,80],[30,83,24,81],[30,85,24,92],[31,6,25,4],[31,12,25,10,"orig"],[31,16,25,14],[31,19,25,17,"console"],[31,26,25,24],[31,27,25,25,"level"],[31,32,25,30],[31,33,25,31],[31,35,25,33,"bind"],[31,39,25,37],[31,40,25,38,"console"],[31,47,25,45],[31,48,25,46],[32,6,26,4,"console"],[32,13,26,11],[32,14,26,12,"level"],[32,19,26,17],[32,20,26,18],[32,23,26,21],[32,24,26,22],[32,27,26,25,"args"],[32,31,26,40],[32,36,26,45],[33,8,27,6,"orig"],[33,12,27,10],[33,15,27,13],[33,18,27,16,"args"],[33,22,27,20],[33,23,27,21],[34,8,28,6],[35,8,29,6],[35,12,29,10,"IGNORE_LIST"],[35,23,29,21],[35,24,29,22,"some"],[35,28,29,26],[35,29,29,28,"regex"],[35,34,29,33],[35,38,29,38],[35,45,29,45,"args"],[35,49,29,49],[35,50,29,50],[35,51,29,51],[35,52,29,52],[35,57,29,57],[35,65,29,65],[35,69,29,69,"regex"],[35,74,29,74],[35,75,29,75,"test"],[35,79,29,79],[35,80,29,80,"args"],[35,84,29,84],[35,85,29,85],[35,86,29,86],[35,87,29,87],[35,88,29,88],[35,89,29,89],[35,91,29,91],[36,10,30,8],[37,8,31,6],[38,8,32,6],[38,12,32,10],[39,10,33,8,"window"],[39,16,33,14],[39,17,33,15,"parent"],[39,23,33,21],[39,24,33,22,"postMessage"],[39,35,33,33],[39,36,34,10],[40,12,35,12,"type"],[40,16,35,16],[40,18,35,18],[40,48,35,48],[41,12,36,12,"__expoConsole"],[41,25,36,25],[41,27,36,27],[41,31,36,31],[42,12,37,12,"level"],[42,17,37,17],[43,12,38,12,"args"],[43,16,38,16],[43,18,38,18,"args"],[43,22,38,22],[43,23,38,23,"map"],[43,26,38,26],[43,27,38,27,"serialize"],[43,36,38,36],[44,10,39,10],[44,11,39,11],[44,13,40,10],[44,16,41,8],[44,17,41,9],[45,8,42,6],[45,9,42,7],[45,10,42,8],[45,16,42,14],[46,10,43,8],[47,8,43,8],[48,6,45,4],[48,7,45,5],[49,4,46,2],[50,2,47,0],[51,0,47,1],[51,3]],"functionMap":{"names":["<global>","serialize","JSON.stringify$argument_1","console.level","IGNORE_LIST.some$argument_0"],"mappings":"AAA;ACO;+BCC;GDW;CDC;qBGK;2BCG,6DD;KHgB"}},"type":"js/module"}]}