{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"]}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _react = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var React = _react;\n  var _invariant = _interopRequireDefault(require(_dependencyMap[7], \"invariant\"));\n  var _reactNative = require(_dependencyMap[8], \"react-native\");\n  var _PanGestureHandler = require(_dependencyMap[9], \"../handlers/PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[10], \"../handlers/TapGestureHandler\");\n  var _State = require(_dependencyMap[11], \"../State\");\n  var _jsxDevRuntime = require(_dependencyMap[12], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"D:\\\\saheli\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\components\\\\DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = exports.default = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _callSuper(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, _invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_TapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits2.default)(DrawerLayout, _Component);\n    return (0, _createClass2.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_PanGestureHandler.PanGestureHandler\n        // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":571,"map":[[12,2,9,0],[12,6,9,0,"_react"],[12,12,9,0],[12,15,9,0,"_interopRequireWildcard"],[12,38,9,0],[12,39,9,0,"require"],[12,46,9,0],[12,47,9,0,"_dependencyMap"],[12,61,9,0],[13,2,9,31],[13,6,9,31,"React"],[13,11,9,31],[13,14,9,31,"_react"],[13,20,9,31],[14,2,11,0],[14,6,11,0,"_invariant"],[14,16,11,0],[14,19,11,0,"_interopRequireDefault"],[14,41,11,0],[14,42,11,0,"require"],[14,49,11,0],[14,50,11,0,"_dependencyMap"],[14,64,11,0],[15,2,12,0],[15,6,12,0,"_reactNative"],[15,18,12,0],[15,21,12,0,"require"],[15,28,12,0],[15,29,12,0,"_dependencyMap"],[15,43,12,0],[16,2,33,0],[16,6,33,0,"_PanGestureHandler"],[16,24,33,0],[16,27,33,0,"require"],[16,34,33,0],[16,35,33,0,"_dependencyMap"],[16,49,33,0],[17,2,38,0],[17,6,38,0,"_TapGestureHandler"],[17,24,38,0],[17,27,38,0,"require"],[17,34,38,0],[17,35,38,0,"_dependencyMap"],[17,49,38,0],[18,2,39,0],[18,6,39,0,"_State"],[18,12,39,0],[18,15,39,0,"require"],[18,22,39,0],[18,23,39,0,"_dependencyMap"],[18,37,39,0],[19,2,39,33],[19,6,39,33,"_jsxDevRuntime"],[19,20,39,33],[19,23,39,33,"require"],[19,30,39,33],[19,31,39,33,"_dependencyMap"],[19,45,39,33],[20,2,39,33],[20,6,39,33,"_jsxFileName"],[20,18,39,33],[20,114,1,0],[21,2,2,0],[22,2,3,0],[23,2,4,0],[24,2,5,0],[25,2,6,0],[26,2,7,0],[27,2,7,0],[27,11,7,0,"_interopRequireWildcard"],[27,35,7,0,"e"],[27,36,7,0],[27,38,7,0,"t"],[27,39,7,0],[27,68,7,0,"WeakMap"],[27,75,7,0],[27,81,7,0,"r"],[27,82,7,0],[27,89,7,0,"WeakMap"],[27,96,7,0],[27,100,7,0,"n"],[27,101,7,0],[27,108,7,0,"WeakMap"],[27,115,7,0],[27,127,7,0,"_interopRequireWildcard"],[27,150,7,0],[27,162,7,0,"_interopRequireWildcard"],[27,163,7,0,"e"],[27,164,7,0],[27,166,7,0,"t"],[27,167,7,0],[27,176,7,0,"t"],[27,177,7,0],[27,181,7,0,"e"],[27,182,7,0],[27,186,7,0,"e"],[27,187,7,0],[27,188,7,0,"__esModule"],[27,198,7,0],[27,207,7,0,"e"],[27,208,7,0],[27,214,7,0,"o"],[27,215,7,0],[27,217,7,0,"i"],[27,218,7,0],[27,220,7,0,"f"],[27,221,7,0],[27,226,7,0,"__proto__"],[27,235,7,0],[27,243,7,0,"default"],[27,250,7,0],[27,252,7,0,"e"],[27,253,7,0],[27,270,7,0,"e"],[27,271,7,0],[27,294,7,0,"e"],[27,295,7,0],[27,320,7,0,"e"],[27,321,7,0],[27,330,7,0,"f"],[27,331,7,0],[27,337,7,0,"o"],[27,338,7,0],[27,341,7,0,"t"],[27,342,7,0],[27,345,7,0,"n"],[27,346,7,0],[27,349,7,0,"r"],[27,350,7,0],[27,358,7,0,"o"],[27,359,7,0],[27,360,7,0,"has"],[27,363,7,0],[27,364,7,0,"e"],[27,365,7,0],[27,375,7,0,"o"],[27,376,7,0],[27,377,7,0,"get"],[27,380,7,0],[27,381,7,0,"e"],[27,382,7,0],[27,385,7,0,"o"],[27,386,7,0],[27,387,7,0,"set"],[27,390,7,0],[27,391,7,0,"e"],[27,392,7,0],[27,394,7,0,"f"],[27,395,7,0],[27,409,7,0,"_t"],[27,411,7,0],[27,415,7,0,"e"],[27,416,7,0],[27,432,7,0,"_t"],[27,434,7,0],[27,441,7,0,"hasOwnProperty"],[27,455,7,0],[27,456,7,0,"call"],[27,460,7,0],[27,461,7,0,"e"],[27,462,7,0],[27,464,7,0,"_t"],[27,466,7,0],[27,473,7,0,"i"],[27,474,7,0],[27,478,7,0,"o"],[27,479,7,0],[27,482,7,0,"Object"],[27,488,7,0],[27,489,7,0,"defineProperty"],[27,503,7,0],[27,508,7,0,"Object"],[27,514,7,0],[27,515,7,0,"getOwnPropertyDescriptor"],[27,539,7,0],[27,540,7,0,"e"],[27,541,7,0],[27,543,7,0,"_t"],[27,545,7,0],[27,552,7,0,"i"],[27,553,7,0],[27,554,7,0,"get"],[27,557,7,0],[27,561,7,0,"i"],[27,562,7,0],[27,563,7,0,"set"],[27,566,7,0],[27,570,7,0,"o"],[27,571,7,0],[27,572,7,0,"f"],[27,573,7,0],[27,575,7,0,"_t"],[27,577,7,0],[27,579,7,0,"i"],[27,580,7,0],[27,584,7,0,"f"],[27,585,7,0],[27,586,7,0,"_t"],[27,588,7,0],[27,592,7,0,"e"],[27,593,7,0],[27,594,7,0,"_t"],[27,596,7,0],[27,607,7,0,"f"],[27,608,7,0],[27,613,7,0,"e"],[27,614,7,0],[27,616,7,0,"t"],[27,617,7,0],[28,2,7,0],[28,11,7,0,"_callSuper"],[28,22,7,0,"t"],[28,23,7,0],[28,25,7,0,"o"],[28,26,7,0],[28,28,7,0,"e"],[28,29,7,0],[28,40,7,0,"o"],[28,41,7,0],[28,48,7,0,"_getPrototypeOf2"],[28,64,7,0],[28,65,7,0,"default"],[28,72,7,0],[28,74,7,0,"o"],[28,75,7,0],[28,82,7,0,"_possibleConstructorReturn2"],[28,109,7,0],[28,110,7,0,"default"],[28,117,7,0],[28,119,7,0,"t"],[28,120,7,0],[28,122,7,0,"_isNativeReflectConstruct"],[28,147,7,0],[28,152,7,0,"Reflect"],[28,159,7,0],[28,160,7,0,"construct"],[28,169,7,0],[28,170,7,0,"o"],[28,171,7,0],[28,173,7,0,"e"],[28,174,7,0],[28,186,7,0,"_getPrototypeOf2"],[28,202,7,0],[28,203,7,0,"default"],[28,210,7,0],[28,212,7,0,"t"],[28,213,7,0],[28,215,7,0,"constructor"],[28,226,7,0],[28,230,7,0,"o"],[28,231,7,0],[28,232,7,0,"apply"],[28,237,7,0],[28,238,7,0,"t"],[28,239,7,0],[28,241,7,0,"e"],[28,242,7,0],[29,2,7,0],[29,11,7,0,"_isNativeReflectConstruct"],[29,37,7,0],[29,51,7,0,"t"],[29,52,7,0],[29,56,7,0,"Boolean"],[29,63,7,0],[29,64,7,0,"prototype"],[29,73,7,0],[29,74,7,0,"valueOf"],[29,81,7,0],[29,82,7,0,"call"],[29,86,7,0],[29,87,7,0,"Reflect"],[29,94,7,0],[29,95,7,0,"construct"],[29,104,7,0],[29,105,7,0,"Boolean"],[29,112,7,0],[29,145,7,0,"t"],[29,146,7,0],[29,159,7,0,"_isNativeReflectConstruct"],[29,184,7,0],[29,196,7,0,"_isNativeReflectConstruct"],[29,197,7,0],[29,210,7,0,"t"],[29,211,7,0],[30,2,41,0],[30,6,41,6,"DRAG_TOSS"],[30,15,41,15],[30,18,41,18],[30,22,41,22],[31,2,43,0],[31,6,43,6,"IDLE"],[31,10,43,23],[31,13,43,26],[31,19,43,32],[32,2,44,0],[32,6,44,6,"DRAGGING"],[32,14,44,27],[32,17,44,30],[32,27,44,40],[33,2,45,0],[33,6,45,6,"SETTLING"],[33,14,45,27],[33,17,45,30],[33,27,45,40],[35,2,47,0],[36,0,48,0],[37,0,49,0],[39,2,52,0],[40,0,53,0],[41,0,54,0],[43,2,57,0],[44,0,58,0],[45,0,59,0],[47,2,62,0],[48,0,63,0],[49,0,64,0],[51,2,67,0],[52,0,68,0],[53,0,69,0],[55,2,72,0],[56,2,73,0],[57,2,74,0],[59,2,77,0],[60,0,78,0],[61,0,79,0],[63,2,208,0],[64,0,209,0],[65,0,210,0],[67,2,220,0],[68,0,221,0],[69,0,222,0],[70,2,228,0],[71,0,229,0],[72,0,230,0],[73,2,228,0],[73,6,231,21,"DrawerLayout"],[73,18,231,33],[73,21,231,33,"exports"],[73,28,231,33],[73,29,231,33,"default"],[73,36,231,33],[73,62,231,33,"_Component"],[73,72,231,33],[74,4,247,2],[74,13,247,2,"DrawerLayout"],[74,26,247,14,"props"],[74,32,247,38],[74,34,247,40],[75,6,247,40],[75,10,247,40,"_this"],[75,15,247,40],[76,6,247,40],[76,10,247,40,"_classCallCheck2"],[76,26,247,40],[76,27,247,40,"default"],[76,34,247,40],[76,42,247,40,"DrawerLayout"],[76,54,247,40],[77,6,248,4,"_this"],[77,11,248,4],[77,14,248,4,"_callSuper"],[77,24,248,4],[77,31,248,4,"DrawerLayout"],[77,43,248,4],[77,46,248,10,"props"],[77,52,248,15],[78,6,248,17,"_this"],[78,11,248,17],[78,12,283,10,"accessibilityIsModalView"],[78,36,283,34],[78,52,283,37,"React"],[78,57,283,42],[78,58,283,43,"createRef"],[78,67,283,52],[78,68,283,59],[78,69,283,60],[79,6,283,60,"_this"],[79,11,283,60],[79,12,284,10,"pointerEventsView"],[79,29,284,27],[79,45,284,30,"React"],[79,50,284,35],[79,51,284,36,"createRef"],[79,60,284,45],[79,61,284,52],[79,62,284,53],[80,6,284,53,"_this"],[80,11,284,53],[80,12,285,10,"panGestureHandler"],[80,29,285,27],[80,45,285,30,"React"],[80,50,285,35],[80,51,285,36,"createRef"],[80,60,285,45],[80,61,285,72],[80,62,285,73],[81,6,285,73,"_this"],[81,11,285,73],[81,12,286,10,"drawerShown"],[81,23,286,21],[81,26,286,24],[81,31,286,29],[82,6,286,29,"_this"],[82,11,286,29],[82,12,293,10,"updateAnimatedEvent"],[82,31,293,29],[82,34,293,32],[82,35,294,4,"props"],[82,40,294,28],[82,42,295,4,"state"],[82,47,295,28],[82,52,296,7],[83,8,297,4],[84,8,298,4],[84,12,298,12,"drawerPosition"],[84,26,298,26],[84,29,298,56,"props"],[84,34,298,61],[84,35,298,12,"drawerPosition"],[84,49,298,26],[85,10,298,28,"drawerWidth"],[85,21,298,39],[85,24,298,56,"props"],[85,29,298,61],[85,30,298,28,"drawerWidth"],[85,41,298,39],[86,10,298,41,"drawerType"],[86,20,298,51],[86,23,298,56,"props"],[86,28,298,61],[86,29,298,41,"drawerType"],[86,39,298,51],[87,8,299,4],[87,12,300,13,"dragXValue"],[87,22,300,23],[87,25,304,8,"state"],[87,30,304,13],[87,31,300,6,"dragX"],[87,36,300,11],[88,10,301,14,"touchXValue"],[88,21,301,25],[88,24,304,8,"state"],[88,29,304,13],[88,30,301,6,"touchX"],[88,36,301,12],[89,10,302,6,"drawerTranslation"],[89,27,302,23],[89,30,304,8,"state"],[89,35,304,13],[89,36,302,6,"drawerTranslation"],[89,53,302,23],[90,10,303,6,"containerWidth"],[90,24,303,20],[90,27,304,8,"state"],[90,32,304,13],[90,33,303,6,"containerWidth"],[90,47,303,20],[91,8,306,4],[91,12,306,8,"dragX"],[91,17,306,13],[91,20,306,16,"dragXValue"],[91,30,306,26],[92,8,307,4],[92,12,307,8,"touchX"],[92,18,307,14],[92,21,307,17,"touchXValue"],[92,32,307,28],[93,8,309,4],[93,12,309,8,"drawerPosition"],[93,26,309,22],[93,31,309,27],[93,37,309,33],[93,39,309,35],[94,10,310,6],[95,10,311,6],[96,10,312,6],[97,10,313,6],[98,10,314,6],[99,10,315,6],[100,10,316,6,"dragX"],[100,15,316,11],[100,18,316,14,"Animated"],[100,39,316,22],[100,40,316,23,"multiply"],[100,48,316,31],[100,49,317,8],[100,53,317,12,"Animated"],[100,74,317,20],[100,75,317,21,"Value"],[100,80,317,26],[100,81,317,27],[100,82,317,28],[100,83,317,29],[100,84,317,30],[100,86,318,8,"dragXValue"],[100,96,319,6],[100,97,319,25],[100,98,319,26],[100,99,319,27],[101,10,320,6,"touchX"],[101,16,320,12],[101,19,320,15,"Animated"],[101,40,320,23],[101,41,320,24,"add"],[101,44,320,27],[101,45,321,8],[101,49,321,12,"Animated"],[101,70,321,20],[101,71,321,21,"Value"],[101,76,321,26],[101,77,321,27,"containerWidth"],[101,91,321,41],[101,92,321,42],[101,94,322,8,"Animated"],[101,115,322,16],[101,116,322,17,"multiply"],[101,124,322,25],[101,125,322,26],[101,129,322,30,"Animated"],[101,150,322,38],[101,151,322,39,"Value"],[101,156,322,44],[101,157,322,45],[101,158,322,46],[101,159,322,47],[101,160,322,48],[101,162,322,50,"touchXValue"],[101,173,322,61],[101,174,323,6],[101,175,323,25],[101,176,323,26],[101,177,323,27],[102,10,324,6,"touchXValue"],[102,21,324,17],[102,22,324,18,"setValue"],[102,30,324,26],[102,31,324,27,"containerWidth"],[102,45,324,41],[102,46,324,42],[103,8,325,4],[103,9,325,5],[103,15,325,11],[104,10,326,6,"touchXValue"],[104,21,326,17],[104,22,326,18,"setValue"],[104,30,326,26],[104,31,326,27],[104,32,326,28],[104,33,326,29],[105,8,327,4],[107,8,329,4],[108,8,330,4],[109,8,331,4],[110,8,332,4],[111,8,333,4],[112,8,334,4],[113,8,335,4],[114,8,336,4],[115,8,337,4],[116,8,338,4],[117,8,339,4],[118,8,340,4],[119,8,341,4],[120,8,342,4],[121,8,343,4],[122,8,344,4],[123,8,345,4],[124,8,346,4],[125,8,347,4],[126,8,348,4],[127,8,349,4],[128,8,350,4],[129,8,351,4],[130,8,352,4],[131,8,353,4],[132,8,354,4],[132,12,354,8,"translationX"],[132,24,354,20],[132,27,354,23,"dragX"],[132,32,354,28],[133,8,355,4],[133,12,355,8,"drawerType"],[133,22,355,18],[133,27,355,23],[133,34,355,30],[133,36,355,32],[134,10,356,6],[134,14,356,12,"startPositionX"],[134,28,356,26],[134,31,356,29,"Animated"],[134,52,356,37],[134,53,356,38,"add"],[134,56,356,41],[134,57,357,8,"touchX"],[134,63,357,14],[134,65,358,8,"Animated"],[134,86,358,16],[134,87,358,17,"multiply"],[134,95,358,25],[134,96,358,26],[134,100,358,30,"Animated"],[134,121,358,38],[134,122,358,39,"Value"],[134,127,358,44],[134,128,358,45],[134,129,358,46],[134,130,358,47],[134,131,358,48],[134,133,358,50,"dragX"],[134,138,358,55],[134,139,359,6],[134,140,359,7],[135,10,361,6],[135,14,361,12,"dragOffsetFromOnStartPosition"],[135,43,361,41],[135,46,361,44,"startPositionX"],[135,60,361,58],[135,61,361,59,"interpolate"],[135,72,361,70],[135,73,361,71],[136,12,362,8,"inputRange"],[136,22,362,18],[136,24,362,20],[136,25,362,21,"drawerWidth"],[136,36,362,32],[136,39,362,36],[136,40,362,37],[136,42,362,39,"drawerWidth"],[136,53,362,50],[136,55,362,53,"drawerWidth"],[136,66,362,64],[136,69,362,68],[136,70,362,69],[136,71,362,70],[137,12,363,8,"outputRange"],[137,23,363,19],[137,25,363,21],[137,26,363,22],[137,27,363,23],[137,29,363,25],[137,30,363,26],[137,32,363,28],[137,33,363,29],[138,10,364,6],[138,11,364,7],[138,12,364,8],[139,10,365,6,"translationX"],[139,22,365,18],[139,25,365,21,"Animated"],[139,46,365,29],[139,47,365,30,"add"],[139,50,365,33],[139,51,366,8,"dragX"],[139,56,366,13],[139,58,367,8,"dragOffsetFromOnStartPosition"],[139,87,368,6],[139,88,368,25],[139,89,368,26],[139,90,368,27],[140,8,369,4],[141,8,371,4,"_this"],[141,13,371,4],[141,14,371,9,"openValue"],[141,23,371,18],[141,26,371,21,"Animated"],[141,47,371,29],[141,48,371,30,"add"],[141,51,371,33],[141,52,371,34,"translationX"],[141,64,371,46],[141,66,371,48,"drawerTranslation"],[141,83,371,65],[141,84,371,66],[141,85,371,67,"interpolate"],[141,96,371,78],[141,97,371,79],[142,10,372,6,"inputRange"],[142,20,372,16],[142,22,372,18],[142,23,372,19],[142,24,372,20],[142,26,372,22,"drawerWidth"],[142,37,372,33],[142,38,372,35],[143,10,373,6,"outputRange"],[143,21,373,17],[143,23,373,19],[143,24,373,20],[143,25,373,21],[143,27,373,23],[143,28,373,24],[143,29,373,25],[144,10,374,6,"extrapolate"],[144,21,374,17],[144,23,374,19],[145,8,375,4],[145,9,375,5],[145,10,375,6],[146,8,377,4],[146,12,377,10,"gestureOptions"],[146,26,383,5],[146,29,383,8],[147,10,384,6,"useNativeDriver"],[147,25,384,21],[147,27,384,23,"props"],[147,32,384,28],[147,33,384,29,"useNativeAnimations"],[148,8,385,4],[148,9,385,5],[149,8,387,4],[149,12,387,8,"_this"],[149,17,387,8],[149,18,387,13,"props"],[149,23,387,18],[149,24,387,19,"onDrawerSlide"],[149,37,387,32],[149,39,387,34],[150,10,388,6,"gestureOptions"],[150,24,388,20],[150,25,388,21,"listener"],[150,33,388,29],[150,36,388,33,"ev"],[150,38,388,35],[150,42,388,40],[151,12,389,8],[151,16,389,14,"translationX"],[151,28,389,26],[151,31,389,29,"Math"],[151,35,389,33],[151,36,389,34,"floor"],[151,41,389,39],[151,42,389,40,"Math"],[151,46,389,44],[151,47,389,45,"abs"],[151,50,389,48],[151,51,389,49,"ev"],[151,53,389,51],[151,54,389,52,"nativeEvent"],[151,65,389,63],[151,66,389,64,"translationX"],[151,78,389,76],[151,79,389,77],[151,80,389,78],[152,12,390,8],[152,16,390,14,"position"],[152,24,390,22],[152,27,390,25,"translationX"],[152,39,390,37],[152,42,390,40,"_this"],[152,47,390,40],[152,48,390,45,"state"],[152,53,390,50],[152,54,390,51,"containerWidth"],[152,68,390,65],[153,12,392,8,"_this"],[153,17,392,8],[153,18,392,13,"props"],[153,23,392,18],[153,24,392,19,"onDrawerSlide"],[153,37,392,32],[153,40,392,35,"position"],[153,48,392,43],[153,49,392,44],[154,10,393,6],[154,11,393,7],[155,8,394,4],[156,8,396,4,"_this"],[156,13,396,4],[156,14,396,9,"onGestureEvent"],[156,28,396,23],[156,31,396,26,"Animated"],[156,52,396,34],[156,53,396,35,"event"],[156,58,396,40],[156,59,397,6],[156,60,397,7],[157,10,397,9,"nativeEvent"],[157,21,397,20],[157,23,397,22],[158,12,397,24,"translationX"],[158,24,397,36],[158,26,397,38,"dragXValue"],[158,36,397,48],[159,12,397,50,"x"],[159,13,397,51],[159,15,397,53,"touchXValue"],[160,10,397,65],[161,8,397,67],[161,9,397,68],[161,10,397,69],[161,12,398,6,"gestureOptions"],[161,26,399,4],[161,27,399,5],[162,6,400,2],[162,7,400,3],[163,6,400,3,"_this"],[163,11,400,3],[163,12,402,10,"handleContainerLayout"],[163,33,402,31],[163,36,402,34,"_ref"],[163,40,402,34],[163,44,402,74],[164,8,402,74],[164,12,402,37,"nativeEvent"],[164,23,402,48],[164,26,402,48,"_ref"],[164,30,402,48],[164,31,402,37,"nativeEvent"],[164,42,402,48],[165,8,403,4,"_this"],[165,13,403,4],[165,14,403,9,"setState"],[165,22,403,17],[165,23,403,18],[166,10,403,20,"containerWidth"],[166,24,403,34],[166,26,403,36,"nativeEvent"],[166,37,403,47],[166,38,403,48,"layout"],[166,44,403,54],[166,45,403,55,"width"],[167,8,403,61],[167,9,403,62],[167,10,403,63],[168,6,404,2],[168,7,404,3],[169,6,404,3,"_this"],[169,11,404,3],[169,12,406,10,"emitStateChanged"],[169,28,406,26],[169,31,406,29],[169,32,407,4,"newState"],[169,40,407,25],[169,42,408,4,"drawerWillShow"],[169,56,408,27],[169,61,409,7],[170,8,410,4,"_this"],[170,13,410,4],[170,14,410,9,"props"],[170,19,410,14],[170,20,410,15,"onDrawerStateChanged"],[170,40,410,35],[170,43,410,38,"newState"],[170,51,410,46],[170,53,410,48,"drawerWillShow"],[170,67,410,62],[170,68,410,63],[171,6,411,2],[171,7,411,3],[172,6,411,3,"_this"],[172,11,411,3],[172,12,413,10,"openingHandlerStateChange"],[172,37,413,35],[172,40,413,38,"_ref2"],[172,45,413,38],[172,49,415,64],[173,8,415,64],[173,12,414,4,"nativeEvent"],[173,23,414,15],[173,26,414,15,"_ref2"],[173,31,414,15],[173,32,414,4,"nativeEvent"],[173,43,414,15],[174,8,416,4],[174,12,416,8,"nativeEvent"],[174,23,416,19],[174,24,416,20,"oldState"],[174,32,416,28],[174,37,416,33,"State"],[174,49,416,38],[174,50,416,39,"ACTIVE"],[174,56,416,45],[174,58,416,47],[175,10,417,6,"_this"],[175,15,417,6],[175,16,417,11,"handleRelease"],[175,29,417,24],[175,30,417,25],[176,12,417,27,"nativeEvent"],[177,10,417,39],[177,11,417,40],[177,12,417,41],[178,8,418,4],[178,9,418,5],[178,15,418,11],[178,19,418,15,"nativeEvent"],[178,30,418,26],[178,31,418,27,"state"],[178,36,418,32],[178,41,418,37,"State"],[178,53,418,42],[178,54,418,43,"ACTIVE"],[178,60,418,49],[178,62,418,51],[179,10,419,6,"_this"],[179,15,419,6],[179,16,419,11,"emitStateChanged"],[179,32,419,27],[179,33,419,28,"DRAGGING"],[179,41,419,36],[179,43,419,38],[179,48,419,43],[179,49,419,44],[180,10,420,6,"_this"],[180,15,420,6],[180,16,420,11,"setState"],[180,24,420,19],[180,25,420,20],[181,12,420,22,"drawerState"],[181,23,420,33],[181,25,420,35,"DRAGGING"],[182,10,420,44],[182,11,420,45],[182,12,420,46],[183,10,421,6],[183,14,421,10,"_this"],[183,19,421,10],[183,20,421,15,"props"],[183,25,421,20],[183,26,421,21,"keyboardDismissMode"],[183,45,421,40],[183,50,421,45],[183,59,421,54],[183,61,421,56],[184,12,422,8,"Keyboard"],[184,33,422,16],[184,34,422,17,"dismiss"],[184,41,422,24],[184,42,422,25],[184,43,422,26],[185,10,423,6],[186,10,424,6],[186,14,424,10,"_this"],[186,19,424,10],[186,20,424,15,"props"],[186,25,424,20],[186,26,424,21,"hideStatusBar"],[186,39,424,34],[186,41,424,36],[187,12,425,8,"StatusBar"],[187,34,425,17],[187,35,425,18,"setHidden"],[187,44,425,27],[187,45,425,28],[187,49,425,32],[187,51,425,34,"_this"],[187,56,425,34],[187,57,425,39,"props"],[187,62,425,44],[187,63,425,45,"statusBarAnimation"],[187,81,425,63],[187,85,425,67],[187,92,425,74],[187,93,425,75],[188,10,426,6],[189,8,427,4],[190,6,428,2],[190,7,428,3],[191,6,428,3,"_this"],[191,11,428,3],[191,12,430,10,"onTapHandlerStateChange"],[191,35,430,33],[191,38,430,36,"_ref3"],[191,43,430,36],[191,47,432,64],[192,8,432,64],[192,12,431,4,"nativeEvent"],[192,23,431,15],[192,26,431,15,"_ref3"],[192,31,431,15],[192,32,431,4,"nativeEvent"],[192,43,431,15],[193,8,433,4],[193,12,434,6,"_this"],[193,17,434,6],[193,18,434,11,"drawerShown"],[193,29,434,22],[193,33,435,6,"nativeEvent"],[193,44,435,17],[193,45,435,18,"oldState"],[193,53,435,26],[193,58,435,31,"State"],[193,70,435,36],[193,71,435,37,"ACTIVE"],[193,77,435,43],[193,81,436,6,"_this"],[193,86,436,6],[193,87,436,11,"props"],[193,92,436,16],[193,93,436,17,"drawerLockMode"],[193,107,436,31],[193,112,436,36],[193,125,436,49],[193,127,437,6],[194,10,438,6,"_this"],[194,15,438,6],[194,16,438,11,"closeDrawer"],[194,27,438,22],[194,28,438,23],[194,29,438,24],[195,8,439,4],[196,6,440,2],[196,7,440,3],[197,6,440,3,"_this"],[197,11,440,3],[197,12,442,10,"handleRelease"],[197,25,442,23],[197,28,442,26,"_ref4"],[197,33,442,26],[197,37,444,64],[198,8,444,64],[198,12,443,4,"nativeEvent"],[198,23,443,15],[198,26,443,15,"_ref4"],[198,31,443,15],[198,32,443,4,"nativeEvent"],[198,43,443,15],[199,8,445,4],[199,12,445,4,"_this$props"],[199,23,445,4],[199,26,445,56,"_this"],[199,31,445,56],[199,32,445,61,"props"],[199,37,445,66],[200,10,445,12,"drawerWidth"],[200,21,445,23],[200,24,445,23,"_this$props"],[200,35,445,23],[200,36,445,12,"drawerWidth"],[200,47,445,23],[201,10,445,25,"drawerPosition"],[201,24,445,39],[201,27,445,39,"_this$props"],[201,38,445,39],[201,39,445,25,"drawerPosition"],[201,53,445,39],[202,10,445,41,"drawerType"],[202,20,445,51],[202,23,445,51,"_this$props"],[202,34,445,51],[202,35,445,41,"drawerType"],[202,45,445,51],[203,8,446,4],[203,12,446,12,"containerWidth"],[203,26,446,26],[203,29,446,31,"_this"],[203,34,446,31],[203,35,446,36,"state"],[203,40,446,41],[203,41,446,12,"containerWidth"],[203,55,446,26],[204,8,447,4],[204,12,447,24,"dragX"],[204,17,447,29],[204,20,447,56,"nativeEvent"],[204,31,447,67],[204,32,447,10,"translationX"],[204,44,447,22],[205,10,447,31,"velocityX"],[205,19,447,40],[205,22,447,56,"nativeEvent"],[205,33,447,67],[205,34,447,31,"velocityX"],[205,43,447,40],[206,10,447,45,"touchX"],[206,16,447,51],[206,19,447,56,"nativeEvent"],[206,30,447,67],[206,31,447,42,"x"],[206,32,447,43],[207,8,449,4],[207,12,449,8,"drawerPosition"],[207,26,449,22],[207,31,449,27],[207,37,449,33],[207,39,449,35],[208,10,450,6],[209,10,451,6],[210,10,452,6,"dragX"],[210,15,452,11],[210,18,452,14],[210,19,452,15,"dragX"],[210,24,452,20],[211,10,453,6,"touchX"],[211,16,453,12],[211,19,453,15,"containerWidth"],[211,33,453,29],[211,36,453,32,"touchX"],[211,42,453,38],[212,10,454,6,"velocityX"],[212,19,454,15],[212,22,454,18],[212,23,454,19,"velocityX"],[212,32,454,28],[213,8,455,4],[214,8,457,4],[214,12,457,10,"gestureStartX"],[214,25,457,23],[214,28,457,26,"touchX"],[214,34,457,32],[214,37,457,35,"dragX"],[214,42,457,40],[215,8,458,4],[215,12,458,8,"dragOffsetBasedOnStart"],[215,34,458,30],[215,37,458,33],[215,38,458,34],[216,8,460,4],[216,12,460,8,"drawerType"],[216,22,460,18],[216,27,460,23],[216,34,460,30],[216,36,460,32],[217,10,461,6,"dragOffsetBasedOnStart"],[217,32,461,28],[217,35,462,8,"gestureStartX"],[217,48,462,21],[217,51,462,24,"drawerWidth"],[217,62,462,36],[217,65,462,39,"gestureStartX"],[217,78,462,52],[217,81,462,55,"drawerWidth"],[217,92,462,67],[217,95,462,70],[217,96,462,71],[218,8,463,4],[219,8,465,4],[219,12,465,10,"startOffsetX"],[219,24,465,22],[219,27,466,6,"dragX"],[219,32,466,11],[219,35,466,14,"dragOffsetBasedOnStart"],[219,57,466,36],[219,61,466,40,"_this"],[219,66,466,40],[219,67,466,45,"drawerShown"],[219,78,466,56],[219,81,466,59,"drawerWidth"],[219,92,466,70],[219,95,466,74],[219,96,466,75],[219,97,466,76],[220,8,467,4],[220,12,467,10,"projOffsetX"],[220,23,467,21],[220,26,467,24,"startOffsetX"],[220,38,467,36],[220,41,467,39,"DRAG_TOSS"],[220,50,467,48],[220,53,467,51,"velocityX"],[220,62,467,60],[221,8,469,4],[221,12,469,10,"shouldOpen"],[221,22,469,20],[221,25,469,23,"projOffsetX"],[221,36,469,34],[221,39,469,37,"drawerWidth"],[221,50,469,48],[221,53,469,52],[221,54,469,53],[222,8,471,4],[222,12,471,8,"shouldOpen"],[222,22,471,18],[222,24,471,20],[223,10,472,6,"_this"],[223,15,472,6],[223,16,472,11,"animateDrawer"],[223,29,472,24],[223,30,472,25,"startOffsetX"],[223,42,472,37],[223,44,472,39,"drawerWidth"],[223,55,472,50],[223,57,472,53,"velocityX"],[223,66,472,62],[223,67,472,63],[224,8,473,4],[224,9,473,5],[224,15,473,11],[225,10,474,6,"_this"],[225,15,474,6],[225,16,474,11,"animateDrawer"],[225,29,474,24],[225,30,474,25,"startOffsetX"],[225,42,474,37],[225,44,474,39],[225,45,474,40],[225,47,474,42,"velocityX"],[225,56,474,51],[225,57,474,52],[226,8,475,4],[227,6,476,2],[227,7,476,3],[228,6,476,3,"_this"],[228,11,476,3],[228,12,478,10,"updateShowing"],[228,25,478,23],[228,28,478,27,"showing"],[228,35,478,43],[228,39,478,48],[229,8,479,4,"_this"],[229,13,479,4],[229,14,479,9,"drawerShown"],[229,25,479,20],[229,28,479,23,"showing"],[229,35,479,30],[230,8,480,4,"_this"],[230,13,480,4],[230,14,480,9,"accessibilityIsModalView"],[230,38,480,33],[230,39,480,34,"current"],[230,46,480,41],[230,48,480,43,"setNativeProps"],[230,62,480,57],[230,63,480,58],[231,10,481,6,"accessibilityViewIsModal"],[231,34,481,30],[231,36,481,32,"showing"],[232,8,482,4],[232,9,482,5],[232,10,482,6],[233,8,483,4,"_this"],[233,13,483,4],[233,14,483,9,"pointerEventsView"],[233,31,483,26],[233,32,483,27,"current"],[233,39,483,34],[233,41,483,36,"setNativeProps"],[233,55,483,50],[233,56,483,51],[234,10,484,6,"pointerEvents"],[234,23,484,19],[234,25,484,21,"showing"],[234,32,484,28],[234,35,484,31],[234,41,484,37],[234,44,484,40],[235,8,485,4],[235,9,485,5],[235,10,485,6],[236,8,486,4],[236,12,486,4,"_this$props2"],[236,24,486,4],[236,27,486,60,"_this"],[236,32,486,60],[236,33,486,65,"props"],[236,38,486,70],[237,10,486,12,"drawerPosition"],[237,24,486,26],[237,27,486,26,"_this$props2"],[237,39,486,26],[237,40,486,12,"drawerPosition"],[237,54,486,26],[238,10,486,28,"minSwipeDistance"],[238,26,486,44],[238,29,486,44,"_this$props2"],[238,41,486,44],[238,42,486,28,"minSwipeDistance"],[238,58,486,44],[239,10,486,46,"edgeWidth"],[239,19,486,55],[239,22,486,55,"_this$props2"],[239,34,486,55],[239,35,486,46,"edgeWidth"],[239,44,486,55],[240,8,487,4],[240,12,487,10,"fromLeft"],[240,20,487,18],[240,23,487,21,"drawerPosition"],[240,37,487,35],[240,42,487,40],[240,48,487,46],[241,8,488,4],[242,8,489,4],[243,8,490,4],[244,8,491,4],[244,12,491,10,"gestureOrientation"],[244,30,491,28],[244,33,492,6],[244,34,492,7,"fromLeft"],[244,42,492,15],[244,45,492,18],[244,46,492,19],[244,49,492,22],[244,50,492,23],[244,51,492,24],[244,56,492,29,"_this"],[244,61,492,29],[244,62,492,34,"drawerShown"],[244,73,492,45],[244,76,492,48],[244,77,492,49],[244,78,492,50],[244,81,492,53],[244,82,492,54],[244,83,492,55],[245,8,493,4],[246,8,494,4],[247,8,495,4],[248,8,496,4],[248,12,496,10,"hitSlop"],[248,19,496,17],[248,22,496,20,"fromLeft"],[248,30,496,28],[248,33,497,8],[249,10,497,10,"left"],[249,14,497,14],[249,16,497,16],[249,17,497,17],[250,10,497,19,"width"],[250,15,497,24],[250,17,497,26,"showing"],[250,24,497,33],[250,27,497,36,"undefined"],[250,36,497,45],[250,39,497,48,"edgeWidth"],[251,8,497,58],[251,9,497,59],[251,12,498,8],[252,10,498,10,"right"],[252,15,498,15],[252,17,498,17],[252,18,498,18],[253,10,498,20,"width"],[253,15,498,25],[253,17,498,27,"showing"],[253,24,498,34],[253,27,498,37,"undefined"],[253,36,498,46],[253,39,498,49,"edgeWidth"],[254,8,498,59],[254,9,498,60],[255,8,499,4],[256,8,500,4,"_this"],[256,13,500,4],[256,14,500,9,"panGestureHandler"],[256,31,500,26],[256,32,500,27,"current"],[256,39,500,34],[256,41,500,36,"setNativeProps"],[256,55,500,50],[256,56,500,51],[257,10,501,6,"hitSlop"],[257,17,501,13],[258,10,502,6,"activeOffsetX"],[258,23,502,19],[258,25,502,21,"gestureOrientation"],[258,43,502,39],[258,46,502,42,"minSwipeDistance"],[259,8,503,4],[259,9,503,5],[259,10,503,6],[260,6,504,2],[260,7,504,3],[261,6,504,3,"_this"],[261,11,504,3],[261,12,506,10,"animateDrawer"],[261,25,506,23],[261,28,506,26],[261,29,507,4,"fromValue"],[261,38,507,40],[261,40,508,4,"toValue"],[261,47,508,19],[261,49,509,4,"velocity"],[261,57,509,20],[261,59,510,4,"speed"],[261,64,510,18],[261,69,511,7],[262,8,512,4,"_this"],[262,13,512,4],[262,14,512,9,"state"],[262,19,512,14],[262,20,512,15,"dragX"],[262,25,512,20],[262,26,512,21,"setValue"],[262,34,512,29],[262,35,512,30],[262,36,512,31],[262,37,512,32],[263,8,513,4,"_this"],[263,13,513,4],[263,14,513,9,"state"],[263,19,513,14],[263,20,513,15,"touchX"],[263,26,513,21],[263,27,513,22,"setValue"],[263,35,513,30],[263,36,514,6,"_this"],[263,41,514,6],[263,42,514,11,"props"],[263,47,514,16],[263,48,514,17,"drawerPosition"],[263,62,514,31],[263,67,514,36],[263,73,514,42],[263,76,514,45],[263,77,514,46],[263,80,514,49,"_this"],[263,85,514,49],[263,86,514,54,"state"],[263,91,514,59],[263,92,514,60,"containerWidth"],[263,106,515,4],[263,107,515,5],[264,8,517,4],[264,12,517,8,"fromValue"],[264,21,517,17],[264,25,517,21],[264,29,517,25],[264,31,517,27],[265,10,518,6],[265,14,518,10,"nextFramePosition"],[265,31,518,27],[265,34,518,30,"fromValue"],[265,43,518,39],[266,10,519,6],[266,14,519,10,"_this"],[266,19,519,10],[266,20,519,15,"props"],[266,25,519,20],[266,26,519,21,"useNativeAnimations"],[266,45,519,40],[266,47,519,42],[267,12,520,8],[268,12,521,8],[269,12,522,8],[270,12,523,8],[271,12,524,8],[271,16,524,12,"fromValue"],[271,25,524,21],[271,28,524,24,"toValue"],[271,35,524,31],[271,39,524,35,"velocity"],[271,47,524,43],[271,50,524,46],[271,51,524,47],[271,53,524,49],[272,14,525,10,"nextFramePosition"],[272,31,525,27],[272,34,525,30,"Math"],[272,38,525,34],[272,39,525,35,"min"],[272,42,525,38],[272,43,525,39,"fromValue"],[272,52,525,48],[272,55,525,51,"velocity"],[272,63,525,59],[272,66,525,62],[272,70,525,66],[272,72,525,68,"toValue"],[272,79,525,75],[272,80,525,76],[273,12,526,8],[273,13,526,9],[273,19,526,15],[273,23,526,19,"fromValue"],[273,32,526,28],[273,35,526,31,"toValue"],[273,42,526,38],[273,46,526,42,"velocity"],[273,54,526,50],[273,57,526,53],[273,58,526,54],[273,60,526,56],[274,14,527,10,"nextFramePosition"],[274,31,527,27],[274,34,527,30,"Math"],[274,38,527,34],[274,39,527,35,"max"],[274,42,527,38],[274,43,527,39,"fromValue"],[274,52,527,48],[274,55,527,51,"velocity"],[274,63,527,59],[274,66,527,62],[274,70,527,66],[274,72,527,68,"toValue"],[274,79,527,75],[274,80,527,76],[275,12,528,8],[276,10,529,6],[277,10,530,6,"_this"],[277,15,530,6],[277,16,530,11,"state"],[277,21,530,16],[277,22,530,17,"drawerTranslation"],[277,39,530,34],[277,40,530,35,"setValue"],[277,48,530,43],[277,49,530,44,"nextFramePosition"],[277,66,530,61],[277,67,530,62],[278,8,531,4],[279,8,533,4],[279,12,533,10,"willShow"],[279,20,533,18],[279,23,533,21,"toValue"],[279,30,533,28],[279,35,533,33],[279,36,533,34],[280,8,534,4,"_this"],[280,13,534,4],[280,14,534,9,"updateShowing"],[280,27,534,22],[280,28,534,23,"willShow"],[280,36,534,31],[280,37,534,32],[281,8,535,4,"_this"],[281,13,535,4],[281,14,535,9,"emitStateChanged"],[281,30,535,25],[281,31,535,26,"SETTLING"],[281,39,535,34],[281,41,535,36,"willShow"],[281,49,535,44],[281,50,535,45],[282,8,536,4,"_this"],[282,13,536,4],[282,14,536,9,"setState"],[282,22,536,17],[282,23,536,18],[283,10,536,20,"drawerState"],[283,21,536,31],[283,23,536,33,"SETTLING"],[284,8,536,42],[284,9,536,43],[284,10,536,44],[285,8,537,4],[285,12,537,8,"_this"],[285,17,537,8],[285,18,537,13,"props"],[285,23,537,18],[285,24,537,19,"hideStatusBar"],[285,37,537,32],[285,39,537,34],[286,10,538,6,"StatusBar"],[286,32,538,15],[286,33,538,16,"setHidden"],[286,42,538,25],[286,43,538,26,"willShow"],[286,51,538,34],[286,53,538,36,"_this"],[286,58,538,36],[286,59,538,41,"props"],[286,64,538,46],[286,65,538,47,"statusBarAnimation"],[286,83,538,65],[286,87,538,69],[286,94,538,76],[286,95,538,77],[287,8,539,4],[288,8,540,4,"Animated"],[288,29,540,12],[288,30,540,13,"spring"],[288,36,540,19],[288,37,540,20,"_this"],[288,42,540,20],[288,43,540,25,"state"],[288,48,540,30],[288,49,540,31,"drawerTranslation"],[288,66,540,48],[288,68,540,50],[289,10,541,6,"velocity"],[289,18,541,14],[290,10,542,6,"bounciness"],[290,20,542,16],[290,22,542,18],[290,23,542,19],[291,10,543,6,"toValue"],[291,17,543,13],[292,10,544,6,"useNativeDriver"],[292,25,544,21],[292,27,544,23,"_this"],[292,32,544,23],[292,33,544,28,"props"],[292,38,544,33],[292,39,544,34,"useNativeAnimations"],[292,58,544,54],[293,10,545,6,"speed"],[293,15,545,11],[293,17,545,13,"speed"],[293,22,545,18],[293,26,545,22,"undefined"],[294,8,546,4],[294,9,546,5],[294,10,546,6],[294,11,546,7,"start"],[294,16,546,12],[294,17,546,13,"_ref5"],[294,22,546,13],[294,26,546,31],[295,10,546,31],[295,14,546,16,"finished"],[295,22,546,24],[295,25,546,24,"_ref5"],[295,30,546,24],[295,31,546,16,"finished"],[295,39,546,24],[296,10,547,6],[296,14,547,10,"finished"],[296,22,547,18],[296,24,547,20],[297,12,548,8,"_this"],[297,17,548,8],[297,18,548,13,"emitStateChanged"],[297,34,548,29],[297,35,548,30,"IDLE"],[297,39,548,34],[297,41,548,36,"willShow"],[297,49,548,44],[297,50,548,45],[298,12,549,8,"_this"],[298,17,549,8],[298,18,549,13,"setState"],[298,26,549,21],[298,27,549,22],[299,14,549,24,"drawerOpened"],[299,26,549,36],[299,28,549,38,"willShow"],[300,12,549,47],[300,13,549,48],[300,14,549,49],[301,12,550,8],[301,16,550,12,"_this"],[301,21,550,12],[301,22,550,17,"state"],[301,27,550,22],[301,28,550,23,"drawerState"],[301,39,550,34],[301,44,550,39,"DRAGGING"],[301,52,550,47],[301,54,550,49],[302,14,551,10],[303,14,552,10],[304,14,553,10,"_this"],[304,19,553,10],[304,20,553,15,"setState"],[304,28,553,23],[304,29,553,24],[305,16,553,26,"drawerState"],[305,27,553,37],[305,29,553,39,"IDLE"],[306,14,553,44],[306,15,553,45],[306,16,553,46],[307,12,554,8],[308,12,555,8],[308,16,555,12,"willShow"],[308,24,555,20],[308,26,555,22],[309,14,556,10,"_this"],[309,19,556,10],[309,20,556,15,"props"],[309,25,556,20],[309,26,556,21,"onDrawerOpen"],[309,38,556,33],[309,41,556,36],[309,42,556,37],[310,12,557,8],[310,13,557,9],[310,19,557,15],[311,14,558,10,"_this"],[311,19,558,10],[311,20,558,15,"props"],[311,25,558,20],[311,26,558,21,"onDrawerClose"],[311,39,558,34],[311,42,558,37],[311,43,558,38],[312,12,559,8],[313,10,560,6],[314,8,561,4],[314,9,561,5],[314,10,561,6],[315,6,562,2],[315,7,562,3],[316,6,562,3,"_this"],[316,11,562,3],[316,12,564,2,"openDrawer"],[316,22,564,12],[316,25,564,15],[316,37,564,55],[317,8,564,55],[317,12,564,16,"options"],[317,19,564,45],[317,22,564,45,"arguments"],[317,31,564,45],[317,32,564,45,"length"],[317,38,564,45],[317,46,564,45,"arguments"],[317,55,564,45],[317,63,564,45,"undefined"],[317,72,564,45],[317,75,564,45,"arguments"],[317,84,564,45],[317,90,564,48],[317,91,564,49],[317,92,564,50],[318,8,565,4,"_this"],[318,13,565,4],[318,14,565,9,"animateDrawer"],[318,27,565,22],[319,8,566,6],[320,8,567,6,"undefined"],[320,17,567,15],[320,19,568,6,"_this"],[320,24,568,6],[320,25,568,11,"props"],[320,30,568,16],[320,31,568,17,"drawerWidth"],[320,42,568,28],[320,44,569,6,"options"],[320,51,569,13],[320,52,569,14,"velocity"],[320,60,569,22],[320,63,569,25,"options"],[320,70,569,32],[320,71,569,33,"velocity"],[320,79,569,41],[320,82,569,44],[320,83,569,45],[320,85,570,6,"options"],[320,92,570,13],[320,93,570,14,"speed"],[320,98,571,4],[320,99,571,5],[322,8,573,4],[323,8,574,4],[324,8,575,4,"_this"],[324,13,575,4],[324,14,575,9,"forceUpdate"],[324,25,575,20],[324,26,575,21],[324,27,575,22],[325,6,576,2],[325,7,576,3],[326,6,576,3,"_this"],[326,11,576,3],[326,12,578,2,"closeDrawer"],[326,23,578,13],[326,26,578,16],[326,38,578,56],[327,8,578,56],[327,12,578,17,"options"],[327,19,578,46],[327,22,578,46,"arguments"],[327,31,578,46],[327,32,578,46,"length"],[327,38,578,46],[327,46,578,46,"arguments"],[327,55,578,46],[327,63,578,46,"undefined"],[327,72,578,46],[327,75,578,46,"arguments"],[327,84,578,46],[327,90,578,49],[327,91,578,50],[327,92,578,51],[328,8,579,4],[329,8,580,4,"_this"],[329,13,580,4],[329,14,580,9,"animateDrawer"],[329,27,580,22],[329,28,581,6,"undefined"],[329,37,581,15],[329,39,582,6],[329,40,582,7],[329,42,583,6,"options"],[329,49,583,13],[329,50,583,14,"velocity"],[329,58,583,22],[329,61,583,25,"options"],[329,68,583,32],[329,69,583,33,"velocity"],[329,77,583,41],[329,80,583,44],[329,81,583,45],[329,83,584,6,"options"],[329,90,584,13],[329,91,584,14,"speed"],[329,96,585,4],[329,97,585,5],[331,8,587,4],[332,8,588,4],[333,8,589,4,"_this"],[333,13,589,4],[333,14,589,9,"forceUpdate"],[333,25,589,20],[333,26,589,21],[333,27,589,22],[334,6,590,2],[334,7,590,3],[335,6,590,3,"_this"],[335,11,590,3],[335,12,592,10,"renderOverlay"],[335,25,592,23],[335,28,592,26],[335,34,592,32],[336,8,593,4],[337,8,594,4],[337,12,594,4,"invariant"],[337,30,594,13],[337,32,594,14,"_this"],[337,37,594,14],[337,38,594,19,"openValue"],[337,47,594,28],[337,49,594,30],[337,64,594,45],[337,65,594,46],[338,8,595,4],[338,12,595,8,"overlayOpacity"],[338,26,595,22],[339,8,597,4],[339,12,597,8,"_this"],[339,17,597,8],[339,18,597,13,"state"],[339,23,597,18],[339,24,597,19,"drawerState"],[339,35,597,30],[339,40,597,35,"IDLE"],[339,44,597,39],[339,46,597,41],[340,10,598,6,"overlayOpacity"],[340,24,598,20],[340,27,598,23,"_this"],[340,32,598,23],[340,33,598,28,"openValue"],[340,42,598,37],[341,8,599,4],[341,9,599,5],[341,15,599,11],[342,10,600,6,"overlayOpacity"],[342,24,600,20],[342,27,600,23,"_this"],[342,32,600,23],[342,33,600,28,"state"],[342,38,600,33],[342,39,600,34,"drawerOpened"],[342,51,600,46],[342,54,600,49],[342,55,600,50],[342,58,600,53],[342,59,600,54],[343,8,601,4],[344,8,603,4],[344,12,603,10,"dynamicOverlayStyles"],[344,32,603,30],[344,35,603,33],[345,10,604,6,"opacity"],[345,17,604,13],[345,19,604,15,"overlayOpacity"],[345,33,604,29],[346,10,605,6,"backgroundColor"],[346,25,605,21],[346,27,605,23,"_this"],[346,32,605,23],[346,33,605,28,"props"],[346,38,605,33],[346,39,605,34,"overlayColor"],[347,8,606,4],[347,9,606,5],[348,8,608,4],[348,28,609,6],[348,32,609,6,"_jsxDevRuntime"],[348,46,609,6],[348,47,609,6,"jsxDEV"],[348,53,609,6],[348,55,609,7,"_TapGestureHandler"],[348,73,609,7],[348,74,609,7,"TapGestureHandler"],[348,91,609,24],[349,10,609,25,"onHandlerStateChange"],[349,30,609,45],[349,32,609,47,"_this"],[349,37,609,47],[349,38,609,52,"onTapHandlerStateChange"],[349,61,609,76],[350,10,609,76,"children"],[350,18,609,76],[350,33,610,8],[350,37,610,8,"_jsxDevRuntime"],[350,51,610,8],[350,52,610,8,"jsxDEV"],[350,58,610,8],[350,60,610,9,"_reactNative"],[350,72,610,9],[350,73,610,9,"Animated"],[350,81,610,17],[350,82,610,18,"View"],[350,86,610,22],[351,12,611,10,"pointerEvents"],[351,25,611,23],[351,27,611,25,"_this"],[351,32,611,25],[351,33,611,30,"drawerShown"],[351,44,611,41],[351,47,611,44],[351,53,611,50],[351,56,611,53],[351,62,611,60],[352,12,612,10,"ref"],[352,15,612,13],[352,17,612,15,"_this"],[352,22,612,15],[352,23,612,20,"pointerEventsView"],[352,40,612,38],[353,12,613,10,"style"],[353,17,613,15],[353,19,613,17],[353,20,613,18,"styles"],[353,26,613,24],[353,27,613,25,"overlay"],[353,34,613,32],[353,36,613,34,"dynamicOverlayStyles"],[353,56,613,54],[354,10,613,56],[355,12,613,56,"fileName"],[355,20,613,56],[355,22,613,56,"_jsxFileName"],[355,34,613,56],[356,12,613,56,"lineNumber"],[356,22,613,56],[357,12,613,56,"columnNumber"],[357,24,613,56],[358,10,613,56],[358,13,613,56,"_this"],[358,18,614,9],[359,8,614,10],[360,10,614,10,"fileName"],[360,18,614,10],[360,20,614,10,"_jsxFileName"],[360,32,614,10],[361,10,614,10,"lineNumber"],[361,20,614,10],[362,10,614,10,"columnNumber"],[362,22,614,10],[363,8,614,10],[363,11,614,10,"_this"],[363,16,615,25],[363,17,615,26],[364,6,617,2],[364,7,617,3],[365,6,617,3,"_this"],[365,11,617,3],[365,12,619,10,"renderDrawer"],[365,24,619,22],[365,27,619,25],[365,33,619,31],[366,8,620,4],[366,12,620,4,"_this$props3"],[366,24,620,4],[366,27,627,8,"_this"],[366,32,627,8],[366,33,627,13,"props"],[366,38,627,18],[367,10,621,6,"drawerBackgroundColor"],[367,31,621,27],[367,34,621,27,"_this$props3"],[367,46,621,27],[367,47,621,6,"drawerBackgroundColor"],[367,68,621,27],[368,10,622,6,"drawerWidth"],[368,21,622,17],[368,24,622,17,"_this$props3"],[368,36,622,17],[368,37,622,6,"drawerWidth"],[368,48,622,17],[369,10,623,6,"drawerPosition"],[369,24,623,20],[369,27,623,20,"_this$props3"],[369,39,623,20],[369,40,623,6,"drawerPosition"],[369,54,623,20],[370,10,624,6,"drawerType"],[370,20,624,16],[370,23,624,16,"_this$props3"],[370,35,624,16],[370,36,624,6,"drawerType"],[370,46,624,16],[371,10,625,6,"drawerContainerStyle"],[371,30,625,26],[371,33,625,26,"_this$props3"],[371,45,625,26],[371,46,625,6,"drawerContainerStyle"],[371,66,625,26],[372,10,626,6,"contentContainerStyle"],[372,31,626,27],[372,34,626,27,"_this$props3"],[372,46,626,27],[372,47,626,6,"contentContainerStyle"],[372,68,626,27],[373,8,629,4],[373,12,629,10,"fromLeft"],[373,20,629,18],[373,23,629,21,"drawerPosition"],[373,37,629,35],[373,42,629,40],[373,48,629,46],[374,8,630,4],[374,12,630,10,"drawerSlide"],[374,23,630,21],[374,26,630,24,"drawerType"],[374,36,630,34],[374,41,630,39],[374,47,630,45],[375,8,631,4],[375,12,631,10,"containerSlide"],[375,26,631,24],[375,29,631,27,"drawerType"],[375,39,631,37],[375,44,631,42],[375,51,631,49],[377,8,633,4],[378,8,634,4],[379,8,635,4],[380,8,636,4],[381,8,637,4],[381,12,637,10,"reverseContentDirection"],[381,35,637,33],[381,38,637,36,"I18nManager"],[381,62,637,47],[381,63,637,48,"isRTL"],[381,68,637,53],[381,71,637,56,"fromLeft"],[381,79,637,64],[381,82,637,67],[381,83,637,68,"fromLeft"],[381,91,637,76],[382,8,639,4],[382,12,639,10,"dynamicDrawerStyles"],[382,31,639,29],[382,34,639,32],[383,10,640,6,"backgroundColor"],[383,25,640,21],[383,27,640,23,"drawerBackgroundColor"],[383,48,640,44],[384,10,641,6,"width"],[384,15,641,11],[384,17,641,13,"drawerWidth"],[385,8,642,4],[385,9,642,5],[386,8,643,4],[386,12,643,10,"openValue"],[386,21,643,19],[386,24,643,22,"_this"],[386,29,643,22],[386,30,643,27,"openValue"],[386,39,643,36],[387,8,644,4],[387,12,644,4,"invariant"],[387,30,644,13],[387,32,644,14,"openValue"],[387,41,644,23],[387,43,644,25],[387,58,644,40],[387,59,644,41],[388,8,646,4],[388,12,646,8,"containerStyles"],[388,27,646,23],[389,8,647,4],[389,12,647,8,"containerSlide"],[389,26,647,22],[389,28,647,24],[390,10,648,6],[390,14,648,12,"containerTranslateX"],[390,33,648,31],[390,36,648,34,"openValue"],[390,45,648,43],[390,46,648,44,"interpolate"],[390,57,648,55],[390,58,648,56],[391,12,649,8,"inputRange"],[391,22,649,18],[391,24,649,20],[391,25,649,21],[391,26,649,22],[391,28,649,24],[391,29,649,25],[391,30,649,26],[392,12,650,8,"outputRange"],[392,23,650,19],[392,25,650,21,"fromLeft"],[392,33,650,29],[392,36,650,32],[392,37,650,33],[392,38,650,34],[392,40,650,36,"drawerWidth"],[392,51,650,47],[392,52,650,49],[392,55,650,52],[392,56,650,53],[392,57,650,54],[392,59,650,56],[392,60,650,57,"drawerWidth"],[392,71,650,69],[392,72,650,70],[393,12,651,8,"extrapolate"],[393,23,651,19],[393,25,651,21],[394,10,652,6],[394,11,652,7],[394,12,652,8],[395,10,653,6,"containerStyles"],[395,25,653,21],[395,28,653,24],[396,12,654,8,"transform"],[396,21,654,17],[396,23,654,19],[396,24,654,20],[397,14,654,22,"translateX"],[397,24,654,32],[397,26,654,34,"containerTranslateX"],[398,12,654,54],[398,13,654,55],[399,10,655,6],[399,11,655,7],[400,8,656,4],[401,8,658,4],[401,12,658,8,"drawerTranslateX"],[401,28,658,56],[401,31,658,59],[401,32,658,60],[402,8,659,4],[402,12,659,8,"drawerSlide"],[402,23,659,19],[402,25,659,21],[403,10,660,6],[403,14,660,12,"closedDrawerOffset"],[403,32,660,30],[403,35,660,33,"fromLeft"],[403,43,660,41],[403,46,660,44],[403,47,660,45,"drawerWidth"],[403,58,660,57],[403,61,660,60,"drawerWidth"],[403,72,660,72],[404,10,661,6],[404,14,661,10,"_this"],[404,19,661,10],[404,20,661,15,"state"],[404,25,661,20],[404,26,661,21,"drawerState"],[404,37,661,32],[404,42,661,37,"IDLE"],[404,46,661,41],[404,48,661,43],[405,12,662,8,"drawerTranslateX"],[405,28,662,24],[405,31,662,27,"openValue"],[405,40,662,36],[405,41,662,37,"interpolate"],[405,52,662,48],[405,53,662,49],[406,14,663,10,"inputRange"],[406,24,663,20],[406,26,663,22],[406,27,663,23],[406,28,663,24],[406,30,663,26],[406,31,663,27],[406,32,663,28],[407,14,664,10,"outputRange"],[407,25,664,21],[407,27,664,23],[407,28,664,24,"closedDrawerOffset"],[407,46,664,42],[407,48,664,44],[407,49,664,45],[407,50,664,46],[408,14,665,10,"extrapolate"],[408,25,665,21],[408,27,665,23],[409,12,666,8],[409,13,666,9],[409,14,666,10],[410,10,667,6],[410,11,667,7],[410,17,667,13],[411,12,668,8,"drawerTranslateX"],[411,28,668,24],[411,31,668,27,"_this"],[411,36,668,27],[411,37,668,32,"state"],[411,42,668,37],[411,43,668,38,"drawerOpened"],[411,55,668,50],[411,58,668,53],[411,59,668,54],[411,62,668,57,"closedDrawerOffset"],[411,80,668,75],[412,10,669,6],[413,8,670,4],[414,8,671,4],[414,12,671,10,"drawerStyles"],[414,24,674,5],[414,27,674,8],[415,10,675,6,"transform"],[415,19,675,15],[415,21,675,17],[415,22,675,18],[416,12,675,20,"translateX"],[416,22,675,30],[416,24,675,32,"drawerTranslateX"],[417,10,675,49],[417,11,675,50],[417,12,675,51],[418,10,676,6,"flexDirection"],[418,23,676,19],[418,25,676,21,"reverseContentDirection"],[418,48,676,44],[418,51,676,47],[418,64,676,60],[418,67,676,63],[419,8,677,4],[419,9,677,5],[420,8,679,4],[420,28,680,6],[420,32,680,6,"_jsxDevRuntime"],[420,46,680,6],[420,47,680,6,"jsxDEV"],[420,53,680,6],[420,55,680,7,"_reactNative"],[420,67,680,7],[420,68,680,7,"Animated"],[420,76,680,15],[420,77,680,16,"View"],[420,81,680,20],[421,10,680,21,"style"],[421,15,680,26],[421,17,680,28,"styles"],[421,23,680,34],[421,24,680,35,"main"],[421,28,680,40],[422,10,680,41,"onLayout"],[422,18,680,49],[422,20,680,51,"_this"],[422,25,680,51],[422,26,680,56,"handleContainerLayout"],[422,47,680,78],[423,10,680,78,"children"],[423,18,680,78],[423,34,681,8],[423,38,681,8,"_jsxDevRuntime"],[423,52,681,8],[423,53,681,8,"jsxDEV"],[423,59,681,8],[423,61,681,9,"_reactNative"],[423,73,681,9],[423,74,681,9,"Animated"],[423,82,681,17],[423,83,681,18,"View"],[423,87,681,22],[424,12,682,10,"style"],[424,17,682,15],[424,19,682,17],[424,20,683,12,"drawerType"],[424,30,683,22],[424,35,683,27],[424,42,683,34],[424,45,684,16,"styles"],[424,51,684,22],[424,52,684,23,"containerOnBack"],[424,67,684,38],[424,70,685,16,"styles"],[424,76,685,22],[424,77,685,23,"containerInFront"],[424,93,685,39],[424,95,686,12,"containerStyles"],[424,110,686,27],[424,112,687,12,"contentContainerStyle"],[424,133,687,33],[424,134,688,12],[425,12,689,10,"importantForAccessibility"],[425,37,689,35],[425,39,690,12,"_this"],[425,44,690,12],[425,45,690,17,"drawerShown"],[425,56,690,28],[425,59,690,31],[425,80,690,52],[425,83,690,55],[425,88,691,11],[426,12,691,11,"children"],[426,20,691,11],[426,23,692,11],[426,30,692,18,"_this"],[426,35,692,18],[426,36,692,23,"props"],[426,41,692,28],[426,42,692,29,"children"],[426,50,692,37],[426,55,692,42],[426,65,692,52],[426,68,693,14,"_this"],[426,73,693,14],[426,74,693,19,"props"],[426,79,693,24],[426,80,693,25,"children"],[426,88,693,33],[426,89,693,34,"_this"],[426,94,693,34],[426,95,693,39,"openValue"],[426,104,693,48],[426,105,693,49],[426,108,694,14,"_this"],[426,113,694,14],[426,114,694,19,"props"],[426,119,694,24],[426,120,694,25,"children"],[426,128,694,33],[426,130,695,11,"_this"],[426,135,695,11],[426,136,695,16,"renderOverlay"],[426,149,695,29],[426,150,695,30],[426,151,695,31],[427,10,695,31],[428,12,695,31,"fileName"],[428,20,695,31],[428,22,695,31,"_jsxFileName"],[428,34,695,31],[429,12,695,31,"lineNumber"],[429,22,695,31],[430,12,695,31,"columnNumber"],[430,24,695,31],[431,10,695,31],[431,13,695,31,"_this"],[431,18,696,23],[431,19,696,24],[431,34,697,8],[431,38,697,8,"_jsxDevRuntime"],[431,52,697,8],[431,53,697,8,"jsxDEV"],[431,59,697,8],[431,61,697,9,"_reactNative"],[431,73,697,9],[431,74,697,9,"Animated"],[431,82,697,17],[431,83,697,18,"View"],[431,87,697,22],[432,12,698,10,"pointerEvents"],[432,25,698,23],[432,27,698,24],[432,37,698,34],[433,12,699,10,"ref"],[433,15,699,13],[433,17,699,15,"_this"],[433,22,699,15],[433,23,699,20,"accessibilityIsModalView"],[433,47,699,45],[434,12,700,10,"accessibilityViewIsModal"],[434,36,700,34],[434,38,700,36,"_this"],[434,43,700,36],[434,44,700,41,"drawerShown"],[434,55,700,53],[435,12,701,10,"style"],[435,17,701,15],[435,19,701,17],[435,20,701,18,"styles"],[435,26,701,24],[435,27,701,25,"drawerContainer"],[435,42,701,40],[435,44,701,42,"drawerStyles"],[435,56,701,54],[435,58,701,56,"drawerContainerStyle"],[435,78,701,76],[435,79,701,78],[436,12,701,78,"children"],[436,20,701,78],[436,35,702,10],[436,39,702,10,"_jsxDevRuntime"],[436,53,702,10],[436,54,702,10,"jsxDEV"],[436,60,702,10],[436,62,702,11,"_reactNative"],[436,74,702,11],[436,75,702,11,"View"],[436,79,702,15],[437,14,702,16,"style"],[437,19,702,21],[437,21,702,23,"dynamicDrawerStyles"],[437,40,702,43],[438,14,702,43,"children"],[438,22,702,43],[438,24,703,13,"_this"],[438,29,703,13],[438,30,703,18,"props"],[438,35,703,23],[438,36,703,24,"renderNavigationView"],[438,56,703,44],[438,57,703,45,"_this"],[438,62,703,45],[438,63,703,50,"openValue"],[438,72,703,77],[439,12,703,78],[440,14,703,78,"fileName"],[440,22,703,78],[440,24,703,78,"_jsxFileName"],[440,36,703,78],[441,14,703,78,"lineNumber"],[441,24,703,78],[442,14,703,78,"columnNumber"],[442,26,703,78],[443,12,703,78],[443,15,703,78,"_this"],[443,20,704,16],[444,10,704,17],[445,12,704,17,"fileName"],[445,20,704,17],[445,22,704,17,"_jsxFileName"],[445,34,704,17],[446,12,704,17,"lineNumber"],[446,22,704,17],[447,12,704,17,"columnNumber"],[447,24,704,17],[448,10,704,17],[448,13,704,17,"_this"],[448,18,705,23],[448,19,705,24],[449,8,705,24],[450,10,705,24,"fileName"],[450,18,705,24],[450,20,705,24,"_jsxFileName"],[450,32,705,24],[451,10,705,24,"lineNumber"],[451,20,705,24],[452,10,705,24,"columnNumber"],[452,22,705,24],[453,8,705,24],[453,11,705,24,"_this"],[453,16,706,21],[453,17,706,22],[454,6,708,2],[454,7,708,3],[455,6,708,3,"_this"],[455,11,708,3],[455,12,710,10,"setPanGestureRef"],[455,28,710,26],[455,31,710,30,"ref"],[455,34,710,52],[455,38,710,57],[456,8,711,4],[457,8,712,4],[458,8,714,6,"_this"],[458,13,714,6],[458,14,714,11,"panGestureHandler"],[458,31,714,28],[458,32,715,6,"current"],[458,39,715,13],[458,42,715,16,"ref"],[458,45,715,19],[459,8,716,4,"_this"],[459,13,716,4],[459,14,716,9,"props"],[459,19,716,14],[459,20,716,15,"onGestureRef"],[459,32,716,27],[459,35,716,30,"ref"],[459,38,716,33],[459,39,716,34],[460,6,717,2],[460,7,717,3],[461,6,250,4],[461,10,250,10,"dragX"],[461,16,250,15],[461,19,250,18],[461,23,250,22,"Animated"],[461,44,250,30],[461,45,250,31,"Value"],[461,50,250,36],[461,51,250,37],[461,52,250,38],[461,53,250,39],[462,6,251,4],[462,10,251,10,"touchX"],[462,17,251,16],[462,20,251,19],[462,24,251,23,"Animated"],[462,45,251,31],[462,46,251,32,"Value"],[462,51,251,37],[462,52,251,38],[462,53,251,39],[462,54,251,40],[463,6,252,4],[463,10,252,10,"drawerTranslation"],[463,28,252,27],[463,31,252,30],[463,35,252,34,"Animated"],[463,56,252,42],[463,57,252,43,"Value"],[463,62,252,48],[463,63,252,49],[463,64,252,50],[463,65,252,51],[464,6,254,4,"_this"],[464,11,254,4],[464,12,254,9,"state"],[464,17,254,14],[464,20,254,17],[465,8,255,6,"dragX"],[465,13,255,11],[465,15,255,6,"dragX"],[465,21,255,11],[466,8,256,6,"touchX"],[466,14,256,12],[466,16,256,6,"touchX"],[466,23,256,12],[467,8,257,6,"drawerTranslation"],[467,25,257,23],[467,27,257,6,"drawerTranslation"],[467,45,257,23],[468,8,258,6,"containerWidth"],[468,22,258,20],[468,24,258,22],[468,25,258,23],[469,8,259,6,"drawerState"],[469,19,259,17],[469,21,259,19,"IDLE"],[469,25,259,23],[470,8,260,6,"drawerOpened"],[470,20,260,18],[470,22,260,20],[471,6,261,4],[471,7,261,5],[472,6,263,4,"_this"],[472,11,263,4],[472,12,263,9,"updateAnimatedEvent"],[472,31,263,28],[472,32,263,29,"props"],[472,38,263,34],[472,40,263,36,"_this"],[472,45,263,36],[472,46,263,41,"state"],[472,51,263,46],[472,52,263,47],[473,6,263,48],[473,13,263,48,"_this"],[473,18,263,48],[474,4,264,2],[475,4,264,3],[475,8,264,3,"_inherits2"],[475,18,264,3],[475,19,264,3,"default"],[475,26,264,3],[475,28,264,3,"DrawerLayout"],[475,40,264,3],[475,42,264,3,"_Component"],[475,52,264,3],[476,4,264,3],[476,15,264,3,"_createClass2"],[476,28,264,3],[476,29,264,3,"default"],[476,36,264,3],[476,38,264,3,"DrawerLayout"],[476,50,264,3],[477,6,264,3,"key"],[477,9,264,3],[478,6,264,3,"value"],[478,11,264,3],[478,13,266,2],[478,22,266,2,"shouldComponentUpdate"],[478,43,266,23,"shouldComponentUpdate"],[478,44,266,24,"props"],[478,49,266,48],[478,51,266,50,"state"],[478,56,266,74],[478,58,266,76],[479,8,267,4],[479,12,268,6],[479,16,268,10],[479,17,268,11,"props"],[479,22,268,16],[479,23,268,17,"drawerPosition"],[479,37,268,31],[479,42,268,36,"props"],[479,47,268,41],[479,48,268,42,"drawerPosition"],[479,62,268,56],[479,66,269,6],[479,70,269,10],[479,71,269,11,"props"],[479,76,269,16],[479,77,269,17,"drawerWidth"],[479,88,269,28],[479,93,269,33,"props"],[479,98,269,38],[479,99,269,39,"drawerWidth"],[479,110,269,50],[479,114,270,6],[479,118,270,10],[479,119,270,11,"props"],[479,124,270,16],[479,125,270,17,"drawerType"],[479,135,270,27],[479,140,270,32,"props"],[479,145,270,37],[479,146,270,38,"drawerType"],[479,156,270,48],[479,160,271,6],[479,164,271,10],[479,165,271,11,"state"],[479,170,271,16],[479,171,271,17,"containerWidth"],[479,185,271,31],[479,190,271,36,"state"],[479,195,271,41],[479,196,271,42,"containerWidth"],[479,210,271,56],[479,212,272,6],[480,10,273,6],[480,14,273,10],[480,15,273,11,"updateAnimatedEvent"],[480,34,273,30],[480,35,273,31,"props"],[480,40,273,36],[480,42,273,38,"state"],[480,47,273,43],[480,48,273,44],[481,8,274,4],[482,8,276,4],[482,15,276,11],[482,19,276,15],[483,6,277,2],[484,4,277,3],[485,6,277,3,"key"],[485,9,277,3],[486,6,277,3,"value"],[486,11,277,3],[486,13,719,2],[486,22,719,2,"render"],[486,28,719,8,"render"],[486,29,719,8],[486,31,719,11],[487,8,720,4],[487,12,720,4,"_this$props4"],[487,24,720,4],[487,27,721,6],[487,31,721,10],[487,32,721,11,"props"],[487,37,721,16],[488,10,720,12,"drawerPosition"],[488,24,720,26],[488,27,720,26,"_this$props4"],[488,39,720,26],[488,40,720,12,"drawerPosition"],[488,54,720,26],[489,10,720,28,"drawerLockMode"],[489,24,720,42],[489,27,720,42,"_this$props4"],[489,39,720,42],[489,40,720,28,"drawerLockMode"],[489,54,720,42],[490,10,720,44,"edgeWidth"],[490,19,720,53],[490,22,720,53,"_this$props4"],[490,34,720,53],[490,35,720,44,"edgeWidth"],[490,44,720,53],[491,10,720,55,"minSwipeDistance"],[491,26,720,71],[491,29,720,71,"_this$props4"],[491,41,720,71],[491,42,720,55,"minSwipeDistance"],[491,58,720,71],[492,8,723,4],[492,12,723,10,"fromLeft"],[492,20,723,18],[492,23,723,21,"drawerPosition"],[492,37,723,35],[492,42,723,40],[492,48,723,46],[494,8,725,4],[495,8,726,4],[496,8,727,4],[497,8,728,4],[497,12,728,10,"gestureOrientation"],[497,30,728,28],[497,33,729,6],[497,34,729,7,"fromLeft"],[497,42,729,15],[497,45,729,18],[497,46,729,19],[497,49,729,22],[497,50,729,23],[497,51,729,24],[497,56,729,29],[497,60,729,33],[497,61,729,34,"drawerShown"],[497,72,729,45],[497,75,729,48],[497,76,729,49],[497,77,729,50],[497,80,729,53],[497,81,729,54],[497,82,729,55],[499,8,731,4],[500,8,732,4],[501,8,733,4],[502,8,734,4],[502,12,734,10,"hitSlop"],[502,19,734,17],[502,22,734,20,"fromLeft"],[502,30,734,28],[502,33,735,8],[503,10,735,10,"left"],[503,14,735,14],[503,16,735,16],[503,17,735,17],[504,10,735,19,"width"],[504,15,735,24],[504,17,735,26],[504,21,735,30],[504,22,735,31,"drawerShown"],[504,33,735,42],[504,36,735,45,"undefined"],[504,45,735,54],[504,48,735,57,"edgeWidth"],[505,8,735,67],[505,9,735,68],[505,12,736,8],[506,10,736,10,"right"],[506,15,736,15],[506,17,736,17],[506,18,736,18],[507,10,736,20,"width"],[507,15,736,25],[507,17,736,27],[507,21,736,31],[507,22,736,32,"drawerShown"],[507,33,736,43],[507,36,736,46,"undefined"],[507,45,736,55],[507,48,736,58,"edgeWidth"],[508,8,736,68],[508,9,736,69],[509,8,738,4],[509,28,739,6],[509,32,739,6,"_jsxDevRuntime"],[509,46,739,6],[509,47,739,6,"jsxDEV"],[509,53,739,6],[509,55,739,7,"_PanGestureHandler"],[509,73,739,7],[509,74,739,7,"PanGestureHandler"],[510,8,740,8],[511,8,740,8],[512,10,741,8,"userSelect"],[512,20,741,18],[512,22,741,20],[512,26,741,24],[512,27,741,25,"props"],[512,32,741,30],[512,33,741,31,"userSelect"],[512,43,741,42],[513,10,742,8,"activeCursor"],[513,22,742,20],[513,24,742,22],[513,28,742,26],[513,29,742,27,"props"],[513,34,742,32],[513,35,742,33,"activeCursor"],[513,47,742,46],[514,10,743,8,"mouseButton"],[514,21,743,19],[514,23,743,21],[514,27,743,25],[514,28,743,26,"props"],[514,33,743,31],[514,34,743,32,"mouseButton"],[514,45,743,44],[515,10,744,8,"enableContextMenu"],[515,27,744,25],[515,29,744,27],[515,33,744,31],[515,34,744,32,"props"],[515,39,744,37],[515,40,744,38,"enableContextMenu"],[515,57,744,56],[516,10,745,8,"ref"],[516,13,745,11],[516,15,745,13],[516,19,745,17],[516,20,745,18,"setPanGestureRef"],[516,36,745,35],[517,10,746,8,"hitSlop"],[517,17,746,15],[517,19,746,17,"hitSlop"],[517,26,746,25],[518,10,747,8,"activeOffsetX"],[518,23,747,21],[518,25,747,23,"gestureOrientation"],[518,43,747,41],[518,46,747,44,"minSwipeDistance"],[518,62,747,62],[519,10,748,8,"failOffsetY"],[519,21,748,19],[519,23,748,21],[519,24,748,22],[519,25,748,23],[519,27,748,25],[519,29,748,27],[519,31,748,29],[519,32,748,31],[520,10,749,8,"onGestureEvent"],[520,24,749,22],[520,26,749,24],[520,30,749,28],[520,31,749,29,"onGestureEvent"],[520,45,749,44],[521,10,750,8,"onHandlerStateChange"],[521,30,750,28],[521,32,750,30],[521,36,750,34],[521,37,750,35,"openingHandlerStateChange"],[521,62,750,61],[522,10,751,8,"enableTrackpadTwoFingerGesture"],[522,40,751,38],[522,42,752,10],[522,46,752,14],[522,47,752,15,"props"],[522,52,752,20],[522,53,752,21,"enableTrackpadTwoFingerGesture"],[522,83,753,9],[523,10,754,8,"enabled"],[523,17,754,15],[523,19,755,10,"drawerLockMode"],[523,33,755,24],[523,38,755,29],[523,53,755,44],[523,57,755,48,"drawerLockMode"],[523,71,755,62],[523,76,755,67],[523,89,756,9],[524,10,756,9,"children"],[524,18,756,9],[524,20,757,9],[524,24,757,13],[524,25,757,14,"renderDrawer"],[524,37,757,26],[524,38,757,27],[525,8,757,28],[526,10,757,28,"fileName"],[526,18,757,28],[526,20,757,28,"_jsxFileName"],[526,32,757,28],[527,10,757,28,"lineNumber"],[527,20,757,28],[528,10,757,28,"columnNumber"],[528,22,757,28],[529,8,757,28],[529,15,758,25],[529,16,758,26],[530,6,760,2],[531,4,760,3],[532,2,760,3],[532,4,231,42,"Component"],[532,20,231,51],[533,2,231,21,"DrawerLayout"],[533,14,231,33],[533,15,235,9,"defaultProps"],[533,27,235,21],[533,30,235,24],[534,4,236,4,"drawerWidth"],[534,15,236,15],[534,17,236,17],[534,20,236,20],[535,4,237,4,"drawerPosition"],[535,18,237,18],[535,20,237,20],[535,26,237,26],[536,4,238,4,"useNativeAnimations"],[536,23,238,23],[536,25,238,25],[536,29,238,29],[537,4,239,4,"drawerType"],[537,14,239,14],[537,16,239,16],[537,23,239,23],[538,4,240,4,"edgeWidth"],[538,13,240,13],[538,15,240,15],[538,17,240,17],[539,4,241,4,"minSwipeDistance"],[539,20,241,20],[539,22,241,22],[539,23,241,23],[540,4,242,4,"overlayColor"],[540,16,242,16],[540,18,242,18],[540,38,242,38],[541,4,243,4,"drawerLockMode"],[541,18,243,18],[541,20,243,20],[541,30,243,30],[542,4,244,4,"enableTrackpadTwoFingerGesture"],[542,34,244,34],[542,36,244,36],[543,2,245,2],[543,3,245,3],[544,2,231,21,"DrawerLayout"],[544,14,231,33],[544,15,288,9,"positions"],[544,24,288,18],[544,27,288,21],[545,4,289,4,"Left"],[545,8,289,8],[545,10,289,10],[545,16,289,16],[546,4,290,4,"Right"],[546,9,290,9],[546,11,290,11],[547,2,291,2],[547,3,291,3],[548,2,763,0],[548,6,763,6,"styles"],[548,12,763,12],[548,15,763,15,"StyleSheet"],[548,38,763,25],[548,39,763,26,"create"],[548,45,763,32],[548,46,763,33],[549,4,764,2,"drawerContainer"],[549,19,764,17],[549,21,764,19],[550,6,765,4],[550,9,765,7,"StyleSheet"],[550,32,765,17],[550,33,765,18,"absoluteFillObject"],[550,51,765,36],[551,6,766,4,"zIndex"],[551,12,766,10],[551,14,766,12],[551,18,766,16],[552,6,767,4,"flexDirection"],[552,19,767,17],[552,21,767,19],[553,4,768,2],[553,5,768,3],[554,4,769,2,"containerInFront"],[554,20,769,18],[554,22,769,20],[555,6,770,4],[555,9,770,7,"StyleSheet"],[555,32,770,17],[555,33,770,18,"absoluteFillObject"],[555,51,770,36],[556,6,771,4,"zIndex"],[556,12,771,10],[556,14,771,12],[557,4,772,2],[557,5,772,3],[558,4,773,2,"containerOnBack"],[558,19,773,17],[558,21,773,19],[559,6,774,4],[559,9,774,7,"StyleSheet"],[559,32,774,17],[559,33,774,18,"absoluteFillObject"],[560,4,775,2],[560,5,775,3],[561,4,776,2,"main"],[561,8,776,6],[561,10,776,8],[562,6,777,4,"flex"],[562,10,777,8],[562,12,777,10],[562,13,777,11],[563,6,778,4,"zIndex"],[563,12,778,10],[563,14,778,12],[563,15,778,13],[564,6,779,4,"overflow"],[564,14,779,12],[564,16,779,14],[565,4,780,2],[565,5,780,3],[566,4,781,2,"overlay"],[566,11,781,9],[566,13,781,11],[567,6,782,4],[567,9,782,7,"StyleSheet"],[567,32,782,17],[567,33,782,18,"absoluteFillObject"],[567,51,782,36],[568,6,783,4,"zIndex"],[568,12,783,10],[568,14,783,12],[569,4,784,2],[570,2,785,0],[570,3,785,1],[570,4,785,2],[571,0,785,3],[571,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"}},"type":"js/module"}]}