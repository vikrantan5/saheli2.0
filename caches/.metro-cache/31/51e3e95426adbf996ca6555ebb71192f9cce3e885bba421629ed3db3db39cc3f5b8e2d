{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"]}},{"name":"@supabase/node-fetch","data":{"asyncType":"async","isESMImport":true,"locs":[{"start":{"line":8,"column":30,"index":232},"end":{"line":8,"column":60,"index":262}},{"start":{"line":18,"column":22,"index":573},"end":{"line":18,"column":52,"index":603}}],"key":"7Fx+cnrTZuhuI1XE65tJyFLDBO8=","exportNames":["*"]}},{"name":"D:\\saheli\\node_modules\\@expo\\metro-config\\build\\async-require.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":30,"index":232},"end":{"line":8,"column":65,"index":267}},{"start":{"line":18,"column":16,"index":567},"end":{"line":18,"column":52,"index":603}}],"key":"ceUA4bex0gIPOoI+n74Lh3S2Bb8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveResponse = exports.resolveFetch = exports.recursiveToCamel = exports.isPlainObject = void 0;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  const resolveFetch = customFetch => {\n    let _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = (...args) => require(_dependencyMap[2], \"D:\\\\saheli\\\\node_modules\\\\@expo\\\\metro-config\\\\build\\\\async-require.js\")(_dependencyMap[1], _dependencyMap.paths, \"@supabase/node-fetch\").then(({\n        default: fetch\n      }) => fetch(...args));\n    } else {\n      _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n  };\n  exports.resolveFetch = resolveFetch;\n  const resolveResponse = () => (0, _tslib.__awaiter)(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n      // @ts-ignore\n      return (yield require(_dependencyMap[2], \"D:\\\\saheli\\\\node_modules\\\\@expo\\\\metro-config\\\\build\\\\async-require.js\")(_dependencyMap[1], _dependencyMap.paths, \"@supabase/node-fetch\")).Response;\n    }\n    return Response;\n  });\n  exports.resolveResponse = resolveResponse;\n  const recursiveToCamel = item => {\n    if (Array.isArray(item)) {\n      return item.map(el => recursiveToCamel(el));\n    } else if (typeof item === 'function' || item !== Object(item)) {\n      return item;\n    }\n    const result = {};\n    Object.entries(item).forEach(([key, value]) => {\n      const newKey = key.replace(/([-_][a-z])/gi, c => c.toUpperCase().replace(/[-_]/g, ''));\n      result[newKey] = recursiveToCamel(value);\n    });\n    return result;\n  };\n  /**\n   * Determine if input is a plain object\n   * An object is plain if it's created by either {}, new Object(), or Object.create(null)\n   * source: https://github.com/sindresorhus/is-plain-obj\n   */\n  exports.recursiveToCamel = recursiveToCamel;\n  const isPlainObject = value => {\n    if (typeof value !== 'object' || value === null) {\n      return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n  };\n  exports.isPlainObject = isPlainObject;\n});","lineCount":56,"map":[[6,2,1,0],[6,6,1,0,"_tslib"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,7],[7,8,2,13,"resolveFetch"],[7,20,2,25],[7,23,2,29,"customFetch"],[7,34,2,40],[7,38,2,45],[8,4,3,4],[8,8,3,8,"_fetch"],[8,14,3,14],[9,4,4,4],[9,8,4,8,"customFetch"],[9,19,4,19],[9,21,4,21],[10,6,5,8,"_fetch"],[10,12,5,14],[10,15,5,17,"customFetch"],[10,26,5,28],[11,4,6,4],[11,5,6,5],[11,11,7,9],[11,15,7,13],[11,22,7,20,"fetch"],[11,27,7,25],[11,32,7,30],[11,43,7,41],[11,45,7,43],[12,6,8,8,"_fetch"],[12,12,8,14],[12,15,8,17,"_fetch"],[12,16,8,18],[12,19,8,21,"args"],[12,23,8,25],[12,28,8,30,"require"],[12,35,8,30],[12,36,8,30,"_dependencyMap"],[12,50,8,30],[12,129,8,30,"_dependencyMap"],[12,143,8,30],[12,148,8,30,"_dependencyMap"],[12,162,8,30],[12,163,8,30,"paths"],[12,168,8,30],[12,194,8,61,"then"],[12,198,8,65],[12,199,8,66],[12,200,8,67],[13,8,8,69,"default"],[13,15,8,76],[13,17,8,78,"fetch"],[14,6,8,84],[14,7,8,85],[14,12,8,90,"fetch"],[14,17,8,95],[14,18,8,96],[14,21,8,99,"args"],[14,25,8,103],[14,26,8,104],[14,27,8,105],[15,4,9,4],[15,5,9,5],[15,11,10,9],[16,6,11,8,"_fetch"],[16,12,11,14],[16,15,11,17,"fetch"],[16,20,11,22],[17,4,12,4],[18,4,13,4],[18,11,13,11],[18,12,13,12],[18,15,13,15,"args"],[18,19,13,19],[18,24,13,24,"_fetch"],[18,30,13,30],[18,31,13,31],[18,34,13,34,"args"],[18,38,13,38],[18,39,13,39],[19,2,14,0],[19,3,14,1],[20,2,14,2,"exports"],[20,9,14,2],[20,10,14,2,"resolveFetch"],[20,22,14,2],[20,25,14,2,"resolveFetch"],[20,37,14,2],[21,2,15,7],[21,8,15,13,"resolveResponse"],[21,23,15,28],[21,26,15,31,"resolveResponse"],[21,27,15,31],[21,32,15,37],[21,36,15,37,"__awaiter"],[21,52,15,46],[21,54,15,47],[21,59,15,52],[21,60,15,53],[21,62,15,55],[21,67,15,60],[21,68,15,61],[21,70,15,63],[21,75,15,68],[21,76,15,69],[21,78,15,71],[21,91,15,84],[22,4,16,4],[22,8,16,8],[22,15,16,15,"Response"],[22,23,16,23],[22,28,16,28],[22,39,16,39],[22,41,16,41],[23,6,17,8],[24,6,18,8],[24,13,18,15],[24,14,18,16],[24,20,18,16,"require"],[24,27,18,16],[24,28,18,16,"_dependencyMap"],[24,42,18,16],[24,121,18,16,"_dependencyMap"],[24,135,18,16],[24,140,18,16,"_dependencyMap"],[24,154,18,16],[24,155,18,16,"paths"],[24,160,18,16],[24,185,18,52],[24,187,18,54,"Response"],[24,195,18,62],[25,4,19,4],[26,4,20,4],[26,11,20,11,"Response"],[26,19,20,19],[27,2,21,0],[27,3,21,1],[27,4,21,2],[28,2,21,3,"exports"],[28,9,21,3],[28,10,21,3,"resolveResponse"],[28,25,21,3],[28,28,21,3,"resolveResponse"],[28,43,21,3],[29,2,22,7],[29,8,22,13,"recursiveToCamel"],[29,24,22,29],[29,27,22,33,"item"],[29,31,22,37],[29,35,22,42],[30,4,23,4],[30,8,23,8,"Array"],[30,13,23,13],[30,14,23,14,"isArray"],[30,21,23,21],[30,22,23,22,"item"],[30,26,23,26],[30,27,23,27],[30,29,23,29],[31,6,24,8],[31,13,24,15,"item"],[31,17,24,19],[31,18,24,20,"map"],[31,21,24,23],[31,22,24,25,"el"],[31,24,24,27],[31,28,24,32,"recursiveToCamel"],[31,44,24,48],[31,45,24,49,"el"],[31,47,24,51],[31,48,24,52],[31,49,24,53],[32,4,25,4],[32,5,25,5],[32,11,26,9],[32,15,26,13],[32,22,26,20,"item"],[32,26,26,24],[32,31,26,29],[32,41,26,39],[32,45,26,43,"item"],[32,49,26,47],[32,54,26,52,"Object"],[32,60,26,58],[32,61,26,59,"item"],[32,65,26,63],[32,66,26,64],[32,68,26,66],[33,6,27,8],[33,13,27,15,"item"],[33,17,27,19],[34,4,28,4],[35,4,29,4],[35,10,29,10,"result"],[35,16,29,16],[35,19,29,19],[35,20,29,20],[35,21,29,21],[36,4,30,4,"Object"],[36,10,30,10],[36,11,30,11,"entries"],[36,18,30,18],[36,19,30,19,"item"],[36,23,30,23],[36,24,30,24],[36,25,30,25,"forEach"],[36,32,30,32],[36,33,30,33],[36,34,30,34],[36,35,30,35,"key"],[36,38,30,38],[36,40,30,40,"value"],[36,45,30,45],[36,46,30,46],[36,51,30,51],[37,6,31,8],[37,12,31,14,"newKey"],[37,18,31,20],[37,21,31,23,"key"],[37,24,31,26],[37,25,31,27,"replace"],[37,32,31,34],[37,33,31,35],[37,48,31,50],[37,50,31,53,"c"],[37,51,31,54],[37,55,31,59,"c"],[37,56,31,60],[37,57,31,61,"toUpperCase"],[37,68,31,72],[37,69,31,73],[37,70,31,74],[37,71,31,75,"replace"],[37,78,31,82],[37,79,31,83],[37,86,31,90],[37,88,31,92],[37,90,31,94],[37,91,31,95],[37,92,31,96],[38,6,32,8,"result"],[38,12,32,14],[38,13,32,15,"newKey"],[38,19,32,21],[38,20,32,22],[38,23,32,25,"recursiveToCamel"],[38,39,32,41],[38,40,32,42,"value"],[38,45,32,47],[38,46,32,48],[39,4,33,4],[39,5,33,5],[39,6,33,6],[40,4,34,4],[40,11,34,11,"result"],[40,17,34,17],[41,2,35,0],[41,3,35,1],[42,2,36,0],[43,0,37,0],[44,0,38,0],[45,0,39,0],[46,0,40,0],[47,2,36,0,"exports"],[47,9,36,0],[47,10,36,0,"recursiveToCamel"],[47,26,36,0],[47,29,36,0,"recursiveToCamel"],[47,45,36,0],[48,2,41,7],[48,8,41,13,"isPlainObject"],[48,21,41,26],[48,24,41,30,"value"],[48,29,41,35],[48,33,41,40],[49,4,42,4],[49,8,42,8],[49,15,42,15,"value"],[49,20,42,20],[49,25,42,25],[49,33,42,33],[49,37,42,37,"value"],[49,42,42,42],[49,47,42,47],[49,51,42,51],[49,53,42,53],[50,6,43,8],[50,13,43,15],[50,18,43,20],[51,4,44,4],[52,4,45,4],[52,10,45,10,"prototype"],[52,19,45,19],[52,22,45,22,"Object"],[52,28,45,28],[52,29,45,29,"getPrototypeOf"],[52,43,45,43],[52,44,45,44,"value"],[52,49,45,49],[52,50,45,50],[53,4,46,4],[53,11,46,12],[53,12,46,13,"prototype"],[53,21,46,22],[53,26,46,27],[53,30,46,31],[53,34,47,8,"prototype"],[53,43,47,17],[53,48,47,22,"Object"],[53,54,47,28],[53,55,47,29,"prototype"],[53,64,47,38],[53,68,48,8,"Object"],[53,74,48,14],[53,75,48,15,"getPrototypeOf"],[53,89,48,29],[53,90,48,30,"prototype"],[53,99,48,39],[53,100,48,40],[53,105,48,45],[53,109,48,49],[53,114,49,8],[53,116,49,10,"Symbol"],[53,122,49,16],[53,123,49,17,"toStringTag"],[53,134,49,28],[53,138,49,32,"value"],[53,143,49,37],[53,144,49,38],[53,148,50,8],[53,150,50,10,"Symbol"],[53,156,50,16],[53,157,50,17,"iterator"],[53,165,50,25],[53,169,50,29,"value"],[53,174,50,34],[53,175,50,35],[54,2,51,0],[54,3,51,1],[55,2,51,2,"exports"],[55,9,51,2],[55,10,51,2,"isPlainObject"],[55,23,51,2],[55,26,51,2,"isPlainObject"],[55,39,51,2],[56,0,51,2],[56,3]],"functionMap":{"names":["<global>","resolveFetch","_fetch","import.then$argument_0","<anonymous>","resolveResponse","__awaiter$argument_3","recursiveToCamel","item.map$argument_0","Object.entries.forEach$argument_0","key.replace$argument_1","isPlainObject"],"mappings":"AAA;4BCC;iBCM,iDC,sCD,CD;WGK,4BH;CDC;+BKC,wCC;CDM,CL;gCOC;wBCE,4BD;iCEM;oDCC,2CD;KFE;CPE;6BWM;CXU"}},"type":"js/module"}]}