{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":71,"index":71}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":72},"end":{"line":2,"column":47,"index":119}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}},{"name":"./base64url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":120},"end":{"line":3,"column":73,"index":193}}],"key":"dhv0KPIkoHN6QWLEoiPQ8fdmrOg=","exportNames":["*"]}},{"name":"@supabase/node-fetch","data":{"asyncType":"async","isESMImport":true,"locs":[{"start":{"line":82,"column":30,"index":2753},"end":{"line":82,"column":60,"index":2783}}],"key":"7Fx+cnrTZuhuI1XE65tJyFLDBO8=","exportNames":["*"]}},{"name":"D:\\saheli\\node_modules\\@expo\\metro-config\\build\\async-require.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":82,"column":30,"index":2753},"end":{"line":82,"column":65,"index":2788}}],"key":"ceUA4bex0gIPOoI+n74Lh3S2Bb8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Deferred = void 0;\n  exports.decodeJWT = decodeJWT;\n  exports.deepClone = deepClone;\n  exports.expiresAt = expiresAt;\n  exports.generatePKCEChallenge = generatePKCEChallenge;\n  exports.generatePKCEVerifier = generatePKCEVerifier;\n  exports.getAlgorithm = getAlgorithm;\n  exports.getCodeChallengeAndMethod = getCodeChallengeAndMethod;\n  exports.looksLikeFetchResponse = exports.isBrowser = exports.getItemAsync = void 0;\n  exports.parseParametersFromURL = parseParametersFromURL;\n  exports.parseResponseAPIVersion = parseResponseAPIVersion;\n  exports.resolveFetch = exports.removeItemAsync = void 0;\n  exports.retryable = retryable;\n  exports.setItemAsync = void 0;\n  exports.sleep = sleep;\n  exports.supportsLocalStorage = void 0;\n  exports.userNotAvailableProxy = userNotAvailableProxy;\n  exports.uuid = uuid;\n  exports.validateExp = validateExp;\n  exports.validateUUID = validateUUID;\n  var _constants = require(_dependencyMap[0], \"./constants\");\n  var _errors = require(_dependencyMap[1], \"./errors\");\n  var _base64url = require(_dependencyMap[2], \"./base64url\");\n  function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n  }\n  function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n  const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\n  exports.isBrowser = isBrowser;\n  const localStorageWriteTests = {\n    tested: false,\n    writable: false\n  };\n  /**\n   * Checks whether localStorage is supported on this browser.\n   */\n  const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n      return false;\n    }\n    try {\n      if (typeof globalThis.localStorage !== 'object') {\n        return false;\n      }\n    } catch (e) {\n      // DOM exception when accessing `localStorage`\n      return false;\n    }\n    if (localStorageWriteTests.tested) {\n      return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n      globalThis.localStorage.setItem(randomKey, randomKey);\n      globalThis.localStorage.removeItem(randomKey);\n      localStorageWriteTests.tested = true;\n      localStorageWriteTests.writable = true;\n    } catch (e) {\n      // localStorage can't be written to\n      // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n      localStorageWriteTests.tested = true;\n      localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n  };\n  /**\n   * Extracts parameters encoded in the URL both in the query and fragment.\n   */\n  exports.supportsLocalStorage = supportsLocalStorage;\n  function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n      try {\n        const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n        hashSearchParams.forEach((value, key) => {\n          result[key] = value;\n        });\n      } catch (e) {\n        // hash is not a query string\n      }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n      result[key] = value;\n    });\n    return result;\n  }\n  const resolveFetch = customFetch => {\n    let _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = (...args) => require(_dependencyMap[4], \"D:\\\\saheli\\\\node_modules\\\\@expo\\\\metro-config\\\\build\\\\async-require.js\")(_dependencyMap[3], _dependencyMap.paths, \"@supabase/node-fetch\").then(({\n        default: fetch\n      }) => fetch(...args));\n    } else {\n      _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n  };\n  exports.resolveFetch = resolveFetch;\n  const looksLikeFetchResponse = maybeResponse => {\n    return typeof maybeResponse === 'object' && maybeResponse !== null && 'status' in maybeResponse && 'ok' in maybeResponse && 'json' in maybeResponse && typeof maybeResponse.json === 'function';\n  };\n  // Storage helpers\n  exports.looksLikeFetchResponse = looksLikeFetchResponse;\n  const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n  };\n  exports.setItemAsync = setItemAsync;\n  const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n      return null;\n    }\n    try {\n      return JSON.parse(value);\n    } catch (_a) {\n      return value;\n    }\n  };\n  exports.getItemAsync = getItemAsync;\n  const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n  };\n  /**\n   * A deferred represents some asynchronous work that is not yet finished, which\n   * may or may not culminate in a value.\n   * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n   */\n  exports.removeItemAsync = removeItemAsync;\n  class Deferred {\n    constructor() {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      this.promise = new Deferred.promiseConstructor((res, rej) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.resolve = res;\n        this.reject = rej;\n      });\n    }\n  }\n  exports.Deferred = Deferred;\n  Deferred.promiseConstructor = Promise;\n  function decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      throw new _errors.AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n      if (!_constants.BASE64URL_REGEX.test(parts[i])) {\n        throw new _errors.AuthInvalidJwtError('JWT not in base64url format');\n      }\n    }\n    const data = {\n      // using base64url lib\n      header: JSON.parse((0, _base64url.stringFromBase64URL)(parts[0])),\n      payload: JSON.parse((0, _base64url.stringFromBase64URL)(parts[1])),\n      signature: (0, _base64url.base64UrlToUint8Array)(parts[2]),\n      raw: {\n        header: parts[0],\n        payload: parts[1]\n      }\n    };\n    return data;\n  }\n  /**\n   * Creates a promise that resolves to null after some time.\n   */\n  async function sleep(time) {\n    return await new Promise(accept => {\n      setTimeout(() => accept(null), time);\n    });\n  }\n  /**\n   * Converts the provided async function into a retryable function. Each result\n   * or thrown error is sent to the isRetryable function which should return true\n   * if the function should run again.\n   */\n  function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      (async () => {\n        for (let attempt = 0; attempt < Infinity; attempt++) {\n          try {\n            const result = await fn(attempt);\n            if (!isRetryable(attempt, null, result)) {\n              accept(result);\n              return;\n            }\n          } catch (e) {\n            if (!isRetryable(attempt, e)) {\n              reject(e);\n              return;\n            }\n          }\n        }\n      })();\n    });\n    return promise;\n  }\n  function dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n  }\n  // Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\n  function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n      const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n      const charSetLen = charSet.length;\n      let verifier = '';\n      for (let i = 0; i < verifierLength; i++) {\n        verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n      }\n      return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n  }\n  async function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes).map(c => String.fromCharCode(c)).join('');\n  }\n  async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined' && typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n      console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n      return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n      storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n  }\n  /** Parses the API version which is 2YYY-MM-DD. */\n  const API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\n  function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(_constants.API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n      return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n      return null;\n    }\n    try {\n      const date = new Date(`${apiVersion}T00:00:00.0Z`);\n      return date;\n    } catch (e) {\n      return null;\n    }\n  }\n  function validateExp(exp) {\n    if (!exp) {\n      throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n      throw new Error('JWT has expired');\n    }\n  }\n  function getAlgorithm(alg) {\n    switch (alg) {\n      case 'RS256':\n        return {\n          name: 'RSASSA-PKCS1-v1_5',\n          hash: {\n            name: 'SHA-256'\n          }\n        };\n      case 'ES256':\n        return {\n          name: 'ECDSA',\n          namedCurve: 'P-256',\n          hash: {\n            name: 'SHA-256'\n          }\n        };\n      default:\n        throw new Error('Invalid alg claim');\n    }\n  }\n  const UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n  function validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n      throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n  }\n  function userNotAvailableProxy() {\n    const proxyTarget = {};\n    return new Proxy(proxyTarget, {\n      get: (target, prop) => {\n        if (prop === '__isUserNotAvailableProxy') {\n          return true;\n        }\n        // Preventative check for common problematic symbols during cloning/inspection\n        // These symbols might be accessed by structuredClone or other internal mechanisms.\n        if (typeof prop === 'symbol') {\n          const sProp = prop.toString();\n          if (sProp === 'Symbol(Symbol.toPrimitive)' || sProp === 'Symbol(Symbol.toStringTag)' || sProp === 'Symbol(util.inspect.custom)') {\n            // Node.js util.inspect\n            return undefined;\n          }\n        }\n        throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n      },\n      set: (_target, prop) => {\n        throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n      },\n      deleteProperty: (_target, prop) => {\n        throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n      }\n    });\n  }\n  /**\n   * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n   * Note: Only works for JSON-safe data.\n   */\n  function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n});","lineCount":349,"map":[[25,2,1,0],[25,6,1,0,"_constants"],[25,16,1,0],[25,19,1,0,"require"],[25,26,1,0],[25,27,1,0,"_dependencyMap"],[25,41,1,0],[26,2,2,0],[26,6,2,0,"_errors"],[26,13,2,0],[26,16,2,0,"require"],[26,23,2,0],[26,24,2,0,"_dependencyMap"],[26,38,2,0],[27,2,3,0],[27,6,3,0,"_base64url"],[27,16,3,0],[27,19,3,0,"require"],[27,26,3,0],[27,27,3,0,"_dependencyMap"],[27,41,3,0],[28,2,4,7],[28,11,4,16,"expiresAt"],[28,20,4,25,"expiresAt"],[28,21,4,26,"expiresIn"],[28,30,4,35],[28,32,4,37],[29,4,5,4],[29,10,5,10,"timeNow"],[29,17,5,17],[29,20,5,20,"Math"],[29,24,5,24],[29,25,5,25,"round"],[29,30,5,30],[29,31,5,31,"Date"],[29,35,5,35],[29,36,5,36,"now"],[29,39,5,39],[29,40,5,40],[29,41,5,41],[29,44,5,44],[29,48,5,48],[29,49,5,49],[30,4,6,4],[30,11,6,11,"timeNow"],[30,18,6,18],[30,21,6,21,"expiresIn"],[30,30,6,30],[31,2,7,0],[32,2,8,7],[32,11,8,16,"uuid"],[32,15,8,20,"uuid"],[32,16,8,20],[32,18,8,23],[33,4,9,4],[33,11,9,11],[33,49,9,49],[33,50,9,50,"replace"],[33,57,9,57],[33,58,9,58],[33,65,9,65],[33,67,9,67],[33,77,9,77,"c"],[33,78,9,78],[33,80,9,80],[34,6,10,8],[34,12,10,14,"r"],[34,13,10,15],[34,16,10,19,"Math"],[34,20,10,23],[34,21,10,24,"random"],[34,27,10,30],[34,28,10,31],[34,29,10,32],[34,32,10,35],[34,34,10,37],[34,37,10,41],[34,38,10,42],[35,8,10,44,"v"],[35,9,10,45],[35,12,10,48,"c"],[35,13,10,49],[35,17,10,53],[35,20,10,56],[35,23,10,59,"r"],[35,24,10,60],[35,27,10,64,"r"],[35,28,10,65],[35,31,10,68],[35,34,10,71],[35,37,10,75],[35,40,10,78],[36,6,11,8],[36,13,11,15,"v"],[36,14,11,16],[36,15,11,17,"toString"],[36,23,11,25],[36,24,11,26],[36,26,11,28],[36,27,11,29],[37,4,12,4],[37,5,12,5],[37,6,12,6],[38,2,13,0],[39,2,14,7],[39,8,14,13,"isBrowser"],[39,17,14,22],[39,20,14,25,"isBrowser"],[39,21,14,25],[39,26,14,31],[39,33,14,38,"window"],[39,39,14,44],[39,44,14,49],[39,55,14,60],[39,59,14,64],[39,66,14,71,"document"],[39,74,14,79],[39,79,14,84],[39,90,14,95],[40,2,14,96,"exports"],[40,9,14,96],[40,10,14,96,"isBrowser"],[40,19,14,96],[40,22,14,96,"isBrowser"],[40,31,14,96],[41,2,15,0],[41,8,15,6,"localStorageWriteTests"],[41,30,15,28],[41,33,15,31],[42,4,16,4,"tested"],[42,10,16,10],[42,12,16,12],[42,17,16,17],[43,4,17,4,"writable"],[43,12,17,12],[43,14,17,14],[44,2,18,0],[44,3,18,1],[45,2,19,0],[46,0,20,0],[47,0,21,0],[48,2,22,7],[48,8,22,13,"supportsLocalStorage"],[48,28,22,33],[48,31,22,36,"supportsLocalStorage"],[48,32,22,36],[48,37,22,42],[49,4,23,4],[49,8,23,8],[49,9,23,9,"isBrowser"],[49,18,23,18],[49,19,23,19],[49,20,23,20],[49,22,23,22],[50,6,24,8],[50,13,24,15],[50,18,24,20],[51,4,25,4],[52,4,26,4],[52,8,26,8],[53,6,27,8],[53,10,27,12],[53,17,27,19,"globalThis"],[53,27,27,29],[53,28,27,30,"localStorage"],[53,40,27,42],[53,45,27,47],[53,53,27,55],[53,55,27,57],[54,8,28,12],[54,15,28,19],[54,20,28,24],[55,6,29,8],[56,4,30,4],[56,5,30,5],[56,6,31,4],[56,13,31,11,"e"],[56,14,31,12],[56,16,31,14],[57,6,32,8],[58,6,33,8],[58,13,33,15],[58,18,33,20],[59,4,34,4],[60,4,35,4],[60,8,35,8,"localStorageWriteTests"],[60,30,35,30],[60,31,35,31,"tested"],[60,37,35,37],[60,39,35,39],[61,6,36,8],[61,13,36,15,"localStorageWriteTests"],[61,35,36,37],[61,36,36,38,"writable"],[61,44,36,46],[62,4,37,4],[63,4,38,4],[63,10,38,10,"randomKey"],[63,19,38,19],[63,22,38,22],[63,30,38,30,"Math"],[63,34,38,34],[63,35,38,35,"random"],[63,41,38,41],[63,42,38,42],[63,43,38,43],[63,46,38,46,"Math"],[63,50,38,50],[63,51,38,51,"random"],[63,57,38,57],[63,58,38,58],[63,59,38,59],[63,61,38,61],[64,4,39,4],[64,8,39,8],[65,6,40,8,"globalThis"],[65,16,40,18],[65,17,40,19,"localStorage"],[65,29,40,31],[65,30,40,32,"setItem"],[65,37,40,39],[65,38,40,40,"randomKey"],[65,47,40,49],[65,49,40,51,"randomKey"],[65,58,40,60],[65,59,40,61],[66,6,41,8,"globalThis"],[66,16,41,18],[66,17,41,19,"localStorage"],[66,29,41,31],[66,30,41,32,"removeItem"],[66,40,41,42],[66,41,41,43,"randomKey"],[66,50,41,52],[66,51,41,53],[67,6,42,8,"localStorageWriteTests"],[67,28,42,30],[67,29,42,31,"tested"],[67,35,42,37],[67,38,42,40],[67,42,42,44],[68,6,43,8,"localStorageWriteTests"],[68,28,43,30],[68,29,43,31,"writable"],[68,37,43,39],[68,40,43,42],[68,44,43,46],[69,4,44,4],[69,5,44,5],[69,6,45,4],[69,13,45,11,"e"],[69,14,45,12],[69,16,45,14],[70,6,46,8],[71,6,47,8],[72,6,48,8,"localStorageWriteTests"],[72,28,48,30],[72,29,48,31,"tested"],[72,35,48,37],[72,38,48,40],[72,42,48,44],[73,6,49,8,"localStorageWriteTests"],[73,28,49,30],[73,29,49,31,"writable"],[73,37,49,39],[73,40,49,42],[73,45,49,47],[74,4,50,4],[75,4,51,4],[75,11,51,11,"localStorageWriteTests"],[75,33,51,33],[75,34,51,34,"writable"],[75,42,51,42],[76,2,52,0],[76,3,52,1],[77,2,53,0],[78,0,54,0],[79,0,55,0],[80,2,53,0,"exports"],[80,9,53,0],[80,10,53,0,"supportsLocalStorage"],[80,30,53,0],[80,33,53,0,"supportsLocalStorage"],[80,53,53,0],[81,2,56,7],[81,11,56,16,"parseParametersFromURL"],[81,33,56,38,"parseParametersFromURL"],[81,34,56,39,"href"],[81,38,56,43],[81,40,56,45],[82,4,57,4],[82,10,57,10,"result"],[82,16,57,16],[82,19,57,19],[82,20,57,20],[82,21,57,21],[83,4,58,4],[83,10,58,10,"url"],[83,13,58,13],[83,16,58,16],[83,20,58,20,"URL"],[83,23,58,23],[83,24,58,24,"href"],[83,28,58,28],[83,29,58,29],[84,4,59,4],[84,8,59,8,"url"],[84,11,59,11],[84,12,59,12,"hash"],[84,16,59,16],[84,20,59,20,"url"],[84,23,59,23],[84,24,59,24,"hash"],[84,28,59,28],[84,29,59,29],[84,30,59,30],[84,31,59,31],[84,36,59,36],[84,39,59,39],[84,41,59,41],[85,6,60,8],[85,10,60,12],[86,8,61,12],[86,14,61,18,"hashSearchParams"],[86,30,61,34],[86,33,61,37],[86,37,61,41,"URLSearchParams"],[86,52,61,56],[86,53,61,57,"url"],[86,56,61,60],[86,57,61,61,"hash"],[86,61,61,65],[86,62,61,66,"substring"],[86,71,61,75],[86,72,61,76],[86,73,61,77],[86,74,61,78],[86,75,61,79],[87,8,62,12,"hashSearchParams"],[87,24,62,28],[87,25,62,29,"forEach"],[87,32,62,36],[87,33,62,37],[87,34,62,38,"value"],[87,39,62,43],[87,41,62,45,"key"],[87,44,62,48],[87,49,62,53],[88,10,63,16,"result"],[88,16,63,22],[88,17,63,23,"key"],[88,20,63,26],[88,21,63,27],[88,24,63,30,"value"],[88,29,63,35],[89,8,64,12],[89,9,64,13],[89,10,64,14],[90,6,65,8],[90,7,65,9],[90,8,66,8],[90,15,66,15,"e"],[90,16,66,16],[90,18,66,18],[91,8,67,12],[92,6,67,12],[93,4,69,4],[94,4,70,4],[95,4,71,4,"url"],[95,7,71,7],[95,8,71,8,"searchParams"],[95,20,71,20],[95,21,71,21,"forEach"],[95,28,71,28],[95,29,71,29],[95,30,71,30,"value"],[95,35,71,35],[95,37,71,37,"key"],[95,40,71,40],[95,45,71,45],[96,6,72,8,"result"],[96,12,72,14],[96,13,72,15,"key"],[96,16,72,18],[96,17,72,19],[96,20,72,22,"value"],[96,25,72,27],[97,4,73,4],[97,5,73,5],[97,6,73,6],[98,4,74,4],[98,11,74,11,"result"],[98,17,74,17],[99,2,75,0],[100,2,76,7],[100,8,76,13,"resolveFetch"],[100,20,76,25],[100,23,76,29,"customFetch"],[100,34,76,40],[100,38,76,45],[101,4,77,4],[101,8,77,8,"_fetch"],[101,14,77,14],[102,4,78,4],[102,8,78,8,"customFetch"],[102,19,78,19],[102,21,78,21],[103,6,79,8,"_fetch"],[103,12,79,14],[103,15,79,17,"customFetch"],[103,26,79,28],[104,4,80,4],[104,5,80,5],[104,11,81,9],[104,15,81,13],[104,22,81,20,"fetch"],[104,27,81,25],[104,32,81,30],[104,43,81,41],[104,45,81,43],[105,6,82,8,"_fetch"],[105,12,82,14],[105,15,82,17,"_fetch"],[105,16,82,18],[105,19,82,21,"args"],[105,23,82,25],[105,28,82,30,"require"],[105,35,82,30],[105,36,82,30,"_dependencyMap"],[105,50,82,30],[105,129,82,30,"_dependencyMap"],[105,143,82,30],[105,148,82,30,"_dependencyMap"],[105,162,82,30],[105,163,82,30,"paths"],[105,168,82,30],[105,194,82,61,"then"],[105,198,82,65],[105,199,82,66],[105,200,82,67],[106,8,82,69,"default"],[106,15,82,76],[106,17,82,78,"fetch"],[107,6,82,84],[107,7,82,85],[107,12,82,90,"fetch"],[107,17,82,95],[107,18,82,96],[107,21,82,99,"args"],[107,25,82,103],[107,26,82,104],[107,27,82,105],[108,4,83,4],[108,5,83,5],[108,11,84,9],[109,6,85,8,"_fetch"],[109,12,85,14],[109,15,85,17,"fetch"],[109,20,85,22],[110,4,86,4],[111,4,87,4],[111,11,87,11],[111,12,87,12],[111,15,87,15,"args"],[111,19,87,19],[111,24,87,24,"_fetch"],[111,30,87,30],[111,31,87,31],[111,34,87,34,"args"],[111,38,87,38],[111,39,87,39],[112,2,88,0],[112,3,88,1],[113,2,88,2,"exports"],[113,9,88,2],[113,10,88,2,"resolveFetch"],[113,22,88,2],[113,25,88,2,"resolveFetch"],[113,37,88,2],[114,2,89,7],[114,8,89,13,"looksLikeFetchResponse"],[114,30,89,35],[114,33,89,39,"maybeResponse"],[114,46,89,52],[114,50,89,57],[115,4,90,4],[115,11,90,12],[115,18,90,19,"maybeResponse"],[115,31,90,32],[115,36,90,37],[115,44,90,45],[115,48,91,8,"maybeResponse"],[115,61,91,21],[115,66,91,26],[115,70,91,30],[115,74,92,8],[115,82,92,16],[115,86,92,20,"maybeResponse"],[115,99,92,33],[115,103,93,8],[115,107,93,12],[115,111,93,16,"maybeResponse"],[115,124,93,29],[115,128,94,8],[115,134,94,14],[115,138,94,18,"maybeResponse"],[115,151,94,31],[115,155,95,8],[115,162,95,15,"maybeResponse"],[115,175,95,28],[115,176,95,29,"json"],[115,180,95,33],[115,185,95,38],[115,195,95,48],[116,2,96,0],[116,3,96,1],[117,2,97,0],[118,2,97,0,"exports"],[118,9,97,0],[118,10,97,0,"looksLikeFetchResponse"],[118,32,97,0],[118,35,97,0,"looksLikeFetchResponse"],[118,57,97,0],[119,2,98,7],[119,8,98,13,"setItemAsync"],[119,20,98,25],[119,23,98,28],[119,29,98,28,"setItemAsync"],[119,30,98,35,"storage"],[119,37,98,42],[119,39,98,44,"key"],[119,42,98,47],[119,44,98,49,"data"],[119,48,98,53],[119,53,98,58],[120,4,99,4],[120,10,99,10,"storage"],[120,17,99,17],[120,18,99,18,"setItem"],[120,25,99,25],[120,26,99,26,"key"],[120,29,99,29],[120,31,99,31,"JSON"],[120,35,99,35],[120,36,99,36,"stringify"],[120,45,99,45],[120,46,99,46,"data"],[120,50,99,50],[120,51,99,51],[120,52,99,52],[121,2,100,0],[121,3,100,1],[122,2,100,2,"exports"],[122,9,100,2],[122,10,100,2,"setItemAsync"],[122,22,100,2],[122,25,100,2,"setItemAsync"],[122,37,100,2],[123,2,101,7],[123,8,101,13,"getItemAsync"],[123,20,101,25],[123,23,101,28],[123,29,101,28,"getItemAsync"],[123,30,101,35,"storage"],[123,37,101,42],[123,39,101,44,"key"],[123,42,101,47],[123,47,101,52],[124,4,102,4],[124,10,102,10,"value"],[124,15,102,15],[124,18,102,18],[124,24,102,24,"storage"],[124,31,102,31],[124,32,102,32,"getItem"],[124,39,102,39],[124,40,102,40,"key"],[124,43,102,43],[124,44,102,44],[125,4,103,4],[125,8,103,8],[125,9,103,9,"value"],[125,14,103,14],[125,16,103,16],[126,6,104,8],[126,13,104,15],[126,17,104,19],[127,4,105,4],[128,4,106,4],[128,8,106,8],[129,6,107,8],[129,13,107,15,"JSON"],[129,17,107,19],[129,18,107,20,"parse"],[129,23,107,25],[129,24,107,26,"value"],[129,29,107,31],[129,30,107,32],[130,4,108,4],[130,5,108,5],[130,6,109,4],[130,13,109,11,"_a"],[130,15,109,13],[130,17,109,15],[131,6,110,8],[131,13,110,15,"value"],[131,18,110,20],[132,4,111,4],[133,2,112,0],[133,3,112,1],[134,2,112,2,"exports"],[134,9,112,2],[134,10,112,2,"getItemAsync"],[134,22,112,2],[134,25,112,2,"getItemAsync"],[134,37,112,2],[135,2,113,7],[135,8,113,13,"removeItemAsync"],[135,23,113,28],[135,26,113,31],[135,32,113,31,"removeItemAsync"],[135,33,113,38,"storage"],[135,40,113,45],[135,42,113,47,"key"],[135,45,113,50],[135,50,113,55],[136,4,114,4],[136,10,114,10,"storage"],[136,17,114,17],[136,18,114,18,"removeItem"],[136,28,114,28],[136,29,114,29,"key"],[136,32,114,32],[136,33,114,33],[137,2,115,0],[137,3,115,1],[138,2,116,0],[139,0,117,0],[140,0,118,0],[141,0,119,0],[142,0,120,0],[143,2,116,0,"exports"],[143,9,116,0],[143,10,116,0,"removeItemAsync"],[143,25,116,0],[143,28,116,0,"removeItemAsync"],[143,43,116,0],[144,2,121,7],[144,8,121,13,"Deferred"],[144,16,121,21],[144,17,121,22],[145,4,122,4,"constructor"],[145,15,122,15,"constructor"],[145,16,122,15],[145,18,122,18],[146,6,123,8],[147,6,124,8],[148,6,125,8],[148,10,125,12],[148,11,125,13,"promise"],[148,18,125,20],[148,21,125,23],[148,25,125,27,"Deferred"],[148,33,125,35],[148,34,125,36,"promiseConstructor"],[148,52,125,54],[148,53,125,55],[148,54,125,56,"res"],[148,57,125,59],[148,59,125,61,"rej"],[148,62,125,64],[148,67,125,69],[149,8,126,12],[150,8,127,12],[151,8,128,12],[151,12,128,16],[151,13,128,17,"resolve"],[151,20,128,24],[151,23,128,27,"res"],[151,26,128,30],[152,8,129,12],[152,12,129,16],[152,13,129,17,"reject"],[152,19,129,23],[152,22,129,26,"rej"],[152,25,129,29],[153,6,130,8],[153,7,130,9],[153,8,130,10],[154,4,131,4],[155,2,132,0],[156,2,132,1,"exports"],[156,9,132,1],[156,10,132,1,"Deferred"],[156,18,132,1],[156,21,132,1,"Deferred"],[156,29,132,1],[157,2,133,0,"Deferred"],[157,10,133,8],[157,11,133,9,"promiseConstructor"],[157,29,133,27],[157,32,133,30,"Promise"],[157,39,133,37],[158,2,134,7],[158,11,134,16,"decodeJWT"],[158,20,134,25,"decodeJWT"],[158,21,134,26,"token"],[158,26,134,31],[158,28,134,33],[159,4,135,4],[159,10,135,10,"parts"],[159,15,135,15],[159,18,135,18,"token"],[159,23,135,23],[159,24,135,24,"split"],[159,29,135,29],[159,30,135,30],[159,33,135,33],[159,34,135,34],[160,4,136,4],[160,8,136,8,"parts"],[160,13,136,13],[160,14,136,14,"length"],[160,20,136,20],[160,25,136,25],[160,26,136,26],[160,28,136,28],[161,6,137,8],[161,12,137,14],[161,16,137,18,"AuthInvalidJwtError"],[161,43,137,37],[161,44,137,38],[161,67,137,61],[161,68,137,62],[162,4,138,4],[163,4,139,4],[164,4,140,4],[164,9,140,9],[164,13,140,13,"i"],[164,14,140,14],[164,17,140,17],[164,18,140,18],[164,20,140,20,"i"],[164,21,140,21],[164,24,140,24,"parts"],[164,29,140,29],[164,30,140,30,"length"],[164,36,140,36],[164,38,140,38,"i"],[164,39,140,39],[164,41,140,41],[164,43,140,43],[165,6,141,8],[165,10,141,12],[165,11,141,13,"BASE64URL_REGEX"],[165,37,141,28],[165,38,141,29,"test"],[165,42,141,33],[165,43,141,34,"parts"],[165,48,141,39],[165,49,141,40,"i"],[165,50,141,41],[165,51,141,42],[165,52,141,43],[165,54,141,45],[166,8,142,12],[166,14,142,18],[166,18,142,22,"AuthInvalidJwtError"],[166,45,142,41],[166,46,142,42],[166,75,142,71],[166,76,142,72],[167,6,143,8],[168,4,144,4],[169,4,145,4],[169,10,145,10,"data"],[169,14,145,14],[169,17,145,17],[170,6,146,8],[171,6,147,8,"header"],[171,12,147,14],[171,14,147,16,"JSON"],[171,18,147,20],[171,19,147,21,"parse"],[171,24,147,26],[171,25,147,27],[171,29,147,27,"stringFromBase64URL"],[171,59,147,46],[171,61,147,47,"parts"],[171,66,147,52],[171,67,147,53],[171,68,147,54],[171,69,147,55],[171,70,147,56],[171,71,147,57],[172,6,148,8,"payload"],[172,13,148,15],[172,15,148,17,"JSON"],[172,19,148,21],[172,20,148,22,"parse"],[172,25,148,27],[172,26,148,28],[172,30,148,28,"stringFromBase64URL"],[172,60,148,47],[172,62,148,48,"parts"],[172,67,148,53],[172,68,148,54],[172,69,148,55],[172,70,148,56],[172,71,148,57],[172,72,148,58],[173,6,149,8,"signature"],[173,15,149,17],[173,17,149,19],[173,21,149,19,"base64UrlToUint8Array"],[173,53,149,40],[173,55,149,41,"parts"],[173,60,149,46],[173,61,149,47],[173,62,149,48],[173,63,149,49],[173,64,149,50],[174,6,150,8,"raw"],[174,9,150,11],[174,11,150,13],[175,8,151,12,"header"],[175,14,151,18],[175,16,151,20,"parts"],[175,21,151,25],[175,22,151,26],[175,23,151,27],[175,24,151,28],[176,8,152,12,"payload"],[176,15,152,19],[176,17,152,21,"parts"],[176,22,152,26],[176,23,152,27],[176,24,152,28],[177,6,153,8],[178,4,154,4],[178,5,154,5],[179,4,155,4],[179,11,155,11,"data"],[179,15,155,15],[180,2,156,0],[181,2,157,0],[182,0,158,0],[183,0,159,0],[184,2,160,7],[184,17,160,22,"sleep"],[184,22,160,27,"sleep"],[184,23,160,28,"time"],[184,27,160,32],[184,29,160,34],[185,4,161,4],[185,11,161,11],[185,17,161,17],[185,21,161,21,"Promise"],[185,28,161,28],[185,29,161,30,"accept"],[185,35,161,36],[185,39,161,41],[186,6,162,8,"setTimeout"],[186,16,162,18],[186,17,162,19],[186,23,162,25,"accept"],[186,29,162,31],[186,30,162,32],[186,34,162,36],[186,35,162,37],[186,37,162,39,"time"],[186,41,162,43],[186,42,162,44],[187,4,163,4],[187,5,163,5],[187,6,163,6],[188,2,164,0],[189,2,165,0],[190,0,166,0],[191,0,167,0],[192,0,168,0],[193,0,169,0],[194,2,170,7],[194,11,170,16,"retryable"],[194,20,170,25,"retryable"],[194,21,170,26,"fn"],[194,23,170,28],[194,25,170,30,"isRetryable"],[194,36,170,41],[194,38,170,43],[195,4,171,4],[195,10,171,10,"promise"],[195,17,171,17],[195,20,171,20],[195,24,171,24,"Promise"],[195,31,171,31],[195,32,171,32],[195,33,171,33,"accept"],[195,39,171,39],[195,41,171,41,"reject"],[195,47,171,47],[195,52,171,52],[196,6,172,8],[197,6,173,8],[198,6,174,8],[198,7,174,9],[198,19,174,21],[199,8,175,12],[199,13,175,17],[199,17,175,21,"attempt"],[199,24,175,28],[199,27,175,31],[199,28,175,32],[199,30,175,34,"attempt"],[199,37,175,41],[199,40,175,44,"Infinity"],[199,48,175,52],[199,50,175,54,"attempt"],[199,57,175,61],[199,59,175,63],[199,61,175,65],[200,10,176,16],[200,14,176,20],[201,12,177,20],[201,18,177,26,"result"],[201,24,177,32],[201,27,177,35],[201,33,177,41,"fn"],[201,35,177,43],[201,36,177,44,"attempt"],[201,43,177,51],[201,44,177,52],[202,12,178,20],[202,16,178,24],[202,17,178,25,"isRetryable"],[202,28,178,36],[202,29,178,37,"attempt"],[202,36,178,44],[202,38,178,46],[202,42,178,50],[202,44,178,52,"result"],[202,50,178,58],[202,51,178,59],[202,53,178,61],[203,14,179,24,"accept"],[203,20,179,30],[203,21,179,31,"result"],[203,27,179,37],[203,28,179,38],[204,14,180,24],[205,12,181,20],[206,10,182,16],[206,11,182,17],[206,12,183,16],[206,19,183,23,"e"],[206,20,183,24],[206,22,183,26],[207,12,184,20],[207,16,184,24],[207,17,184,25,"isRetryable"],[207,28,184,36],[207,29,184,37,"attempt"],[207,36,184,44],[207,38,184,46,"e"],[207,39,184,47],[207,40,184,48],[207,42,184,50],[208,14,185,24,"reject"],[208,20,185,30],[208,21,185,31,"e"],[208,22,185,32],[208,23,185,33],[209,14,186,24],[210,12,187,20],[211,10,188,16],[212,8,189,12],[213,6,190,8],[213,7,190,9],[213,9,190,11],[213,10,190,12],[214,4,191,4],[214,5,191,5],[214,6,191,6],[215,4,192,4],[215,11,192,11,"promise"],[215,18,192,18],[216,2,193,0],[217,2,194,0],[217,11,194,9,"dec2hex"],[217,18,194,16,"dec2hex"],[217,19,194,17,"dec"],[217,22,194,20],[217,24,194,22],[218,4,195,4],[218,11,195,11],[218,12,195,12],[218,15,195,15],[218,18,195,18,"dec"],[218,21,195,21],[218,22,195,22,"toString"],[218,30,195,30],[218,31,195,31],[218,33,195,33],[218,34,195,34],[218,36,195,36,"substr"],[218,42,195,42],[218,43,195,43],[218,44,195,44],[218,45,195,45],[218,46,195,46],[219,2,196,0],[220,2,197,0],[221,2,198,7],[221,11,198,16,"generatePKCEVerifier"],[221,31,198,36,"generatePKCEVerifier"],[221,32,198,36],[221,34,198,39],[222,4,199,4],[222,10,199,10,"verifierLength"],[222,24,199,24],[222,27,199,27],[222,29,199,29],[223,4,200,4],[223,10,200,10,"array"],[223,15,200,15],[223,18,200,18],[223,22,200,22,"Uint32Array"],[223,33,200,33],[223,34,200,34,"verifierLength"],[223,48,200,48],[223,49,200,49],[224,4,201,4],[224,8,201,8],[224,15,201,15,"crypto"],[224,21,201,21],[224,26,201,26],[224,37,201,37],[224,39,201,39],[225,6,202,8],[225,12,202,14,"charSet"],[225,19,202,21],[225,22,202,24],[225,90,202,92],[226,6,203,8],[226,12,203,14,"charSetLen"],[226,22,203,24],[226,25,203,27,"charSet"],[226,32,203,34],[226,33,203,35,"length"],[226,39,203,41],[227,6,204,8],[227,10,204,12,"verifier"],[227,18,204,20],[227,21,204,23],[227,23,204,25],[228,6,205,8],[228,11,205,13],[228,15,205,17,"i"],[228,16,205,18],[228,19,205,21],[228,20,205,22],[228,22,205,24,"i"],[228,23,205,25],[228,26,205,28,"verifierLength"],[228,40,205,42],[228,42,205,44,"i"],[228,43,205,45],[228,45,205,47],[228,47,205,49],[229,8,206,12,"verifier"],[229,16,206,20],[229,20,206,24,"charSet"],[229,27,206,31],[229,28,206,32,"charAt"],[229,34,206,38],[229,35,206,39,"Math"],[229,39,206,43],[229,40,206,44,"floor"],[229,45,206,49],[229,46,206,50,"Math"],[229,50,206,54],[229,51,206,55,"random"],[229,57,206,61],[229,58,206,62],[229,59,206,63],[229,62,206,66,"charSetLen"],[229,72,206,76],[229,73,206,77],[229,74,206,78],[230,6,207,8],[231,6,208,8],[231,13,208,15,"verifier"],[231,21,208,23],[232,4,209,4],[233,4,210,4,"crypto"],[233,10,210,10],[233,11,210,11,"getRandomValues"],[233,26,210,26],[233,27,210,27,"array"],[233,32,210,32],[233,33,210,33],[234,4,211,4],[234,11,211,11,"Array"],[234,16,211,16],[234,17,211,17,"from"],[234,21,211,21],[234,22,211,22,"array"],[234,27,211,27],[234,29,211,29,"dec2hex"],[234,36,211,36],[234,37,211,37],[234,38,211,38,"join"],[234,42,211,42],[234,43,211,43],[234,45,211,45],[234,46,211,46],[235,2,212,0],[236,2,213,0],[236,17,213,15,"sha256"],[236,23,213,21,"sha256"],[236,24,213,22,"randomString"],[236,36,213,34],[236,38,213,36],[237,4,214,4],[237,10,214,10,"encoder"],[237,17,214,17],[237,20,214,20],[237,24,214,24,"TextEncoder"],[237,35,214,35],[237,36,214,36],[237,37,214,37],[238,4,215,4],[238,10,215,10,"encodedData"],[238,21,215,21],[238,24,215,24,"encoder"],[238,31,215,31],[238,32,215,32,"encode"],[238,38,215,38],[238,39,215,39,"randomString"],[238,51,215,51],[238,52,215,52],[239,4,216,4],[239,10,216,10,"hash"],[239,14,216,14],[239,17,216,17],[239,23,216,23,"crypto"],[239,29,216,29],[239,30,216,30,"subtle"],[239,36,216,36],[239,37,216,37,"digest"],[239,43,216,43],[239,44,216,44],[239,53,216,53],[239,55,216,55,"encodedData"],[239,66,216,66],[239,67,216,67],[240,4,217,4],[240,10,217,10,"bytes"],[240,15,217,15],[240,18,217,18],[240,22,217,22,"Uint8Array"],[240,32,217,32],[240,33,217,33,"hash"],[240,37,217,37],[240,38,217,38],[241,4,218,4],[241,11,218,11,"Array"],[241,16,218,16],[241,17,218,17,"from"],[241,21,218,21],[241,22,218,22,"bytes"],[241,27,218,27],[241,28,218,28],[241,29,219,9,"map"],[241,32,219,12],[241,33,219,14,"c"],[241,34,219,15],[241,38,219,20,"String"],[241,44,219,26],[241,45,219,27,"fromCharCode"],[241,57,219,39],[241,58,219,40,"c"],[241,59,219,41],[241,60,219,42],[241,61,219,43],[241,62,220,9,"join"],[241,66,220,13],[241,67,220,14],[241,69,220,16],[241,70,220,17],[242,2,221,0],[243,2,222,7],[243,17,222,22,"generatePKCEChallenge"],[243,38,222,43,"generatePKCEChallenge"],[243,39,222,44,"verifier"],[243,47,222,52],[243,49,222,54],[244,4,223,4],[244,10,223,10,"hasCryptoSupport"],[244,26,223,26],[244,29,223,29],[244,36,223,36,"crypto"],[244,42,223,42],[244,47,223,47],[244,58,223,58],[244,62,224,8],[244,69,224,15,"crypto"],[244,75,224,21],[244,76,224,22,"subtle"],[244,82,224,28],[244,87,224,33],[244,98,224,44],[244,102,225,8],[244,109,225,15,"TextEncoder"],[244,120,225,26],[244,125,225,31],[244,136,225,42],[245,4,226,4],[245,8,226,8],[245,9,226,9,"hasCryptoSupport"],[245,25,226,25],[245,27,226,27],[246,6,227,8,"console"],[246,13,227,15],[246,14,227,16,"warn"],[246,18,227,20],[246,19,227,21],[246,119,227,121],[246,120,227,122],[247,6,228,8],[247,13,228,15,"verifier"],[247,21,228,23],[248,4,229,4],[249,4,230,4],[249,10,230,10,"hashed"],[249,16,230,16],[249,19,230,19],[249,25,230,25,"sha256"],[249,31,230,31],[249,32,230,32,"verifier"],[249,40,230,40],[249,41,230,41],[250,4,231,4],[250,11,231,11,"btoa"],[250,15,231,15],[250,16,231,16,"hashed"],[250,22,231,22],[250,23,231,23],[250,24,231,24,"replace"],[250,31,231,31],[250,32,231,32],[250,37,231,37],[250,39,231,39],[250,42,231,42],[250,43,231,43],[250,44,231,44,"replace"],[250,51,231,51],[250,52,231,52],[250,57,231,57],[250,59,231,59],[250,62,231,62],[250,63,231,63],[250,64,231,64,"replace"],[250,71,231,71],[250,72,231,72],[250,77,231,77],[250,79,231,79],[250,81,231,81],[250,82,231,82],[251,2,232,0],[252,2,233,7],[252,17,233,22,"getCodeChallengeAndMethod"],[252,42,233,47,"getCodeChallengeAndMethod"],[252,43,233,48,"storage"],[252,50,233,55],[252,52,233,57,"storageKey"],[252,62,233,67],[252,64,233,69,"isPasswordRecovery"],[252,82,233,87],[252,85,233,90],[252,90,233,95],[252,92,233,97],[253,4,234,4],[253,10,234,10,"codeVerifier"],[253,22,234,22],[253,25,234,25,"generatePKCEVerifier"],[253,45,234,45],[253,46,234,46],[253,47,234,47],[254,4,235,4],[254,8,235,8,"storedCodeVerifier"],[254,26,235,26],[254,29,235,29,"codeVerifier"],[254,41,235,41],[255,4,236,4],[255,8,236,8,"isPasswordRecovery"],[255,26,236,26],[255,28,236,28],[256,6,237,8,"storedCodeVerifier"],[256,24,237,26],[256,28,237,30],[256,48,237,50],[257,4,238,4],[258,4,239,4],[258,10,239,10,"setItemAsync"],[258,22,239,22],[258,23,239,23,"storage"],[258,30,239,30],[258,32,239,32],[258,35,239,35,"storageKey"],[258,45,239,45],[258,61,239,61],[258,63,239,63,"storedCodeVerifier"],[258,81,239,81],[258,82,239,82],[259,4,240,4],[259,10,240,10,"codeChallenge"],[259,23,240,23],[259,26,240,26],[259,32,240,32,"generatePKCEChallenge"],[259,53,240,53],[259,54,240,54,"codeVerifier"],[259,66,240,66],[259,67,240,67],[260,4,241,4],[260,10,241,10,"codeChallengeMethod"],[260,29,241,29],[260,32,241,32,"codeVerifier"],[260,44,241,44],[260,49,241,49,"codeChallenge"],[260,62,241,62],[260,65,241,65],[260,72,241,72],[260,75,241,75],[260,81,241,81],[261,4,242,4],[261,11,242,11],[261,12,242,12,"codeChallenge"],[261,25,242,25],[261,27,242,27,"codeChallengeMethod"],[261,46,242,46],[261,47,242,47],[262,2,243,0],[263,2,244,0],[264,2,245,0],[264,8,245,6,"API_VERSION_REGEX"],[264,25,245,23],[264,28,245,26],[264,88,245,86],[265,2,246,7],[265,11,246,16,"parseResponseAPIVersion"],[265,34,246,39,"parseResponseAPIVersion"],[265,35,246,40,"response"],[265,43,246,48],[265,45,246,50],[266,4,247,4],[266,10,247,10,"apiVersion"],[266,20,247,20],[266,23,247,23,"response"],[266,31,247,31],[266,32,247,32,"headers"],[266,39,247,39],[266,40,247,40,"get"],[266,43,247,43],[266,44,247,44,"API_VERSION_HEADER_NAME"],[266,78,247,67],[266,79,247,68],[267,4,248,4],[267,8,248,8],[267,9,248,9,"apiVersion"],[267,19,248,19],[267,21,248,21],[268,6,249,8],[268,13,249,15],[268,17,249,19],[269,4,250,4],[270,4,251,4],[270,8,251,8],[270,9,251,9,"apiVersion"],[270,19,251,19],[270,20,251,20,"match"],[270,25,251,25],[270,26,251,26,"API_VERSION_REGEX"],[270,43,251,43],[270,44,251,44],[270,46,251,46],[271,6,252,8],[271,13,252,15],[271,17,252,19],[272,4,253,4],[273,4,254,4],[273,8,254,8],[274,6,255,8],[274,12,255,14,"date"],[274,16,255,18],[274,19,255,21],[274,23,255,25,"Date"],[274,27,255,29],[274,28,255,30],[274,31,255,33,"apiVersion"],[274,41,255,43],[274,55,255,57],[274,56,255,58],[275,6,256,8],[275,13,256,15,"date"],[275,17,256,19],[276,4,257,4],[276,5,257,5],[276,6,258,4],[276,13,258,11,"e"],[276,14,258,12],[276,16,258,14],[277,6,259,8],[277,13,259,15],[277,17,259,19],[278,4,260,4],[279,2,261,0],[280,2,262,7],[280,11,262,16,"validateExp"],[280,22,262,27,"validateExp"],[280,23,262,28,"exp"],[280,26,262,31],[280,28,262,33],[281,4,263,4],[281,8,263,8],[281,9,263,9,"exp"],[281,12,263,12],[281,14,263,14],[282,6,264,8],[282,12,264,14],[282,16,264,18,"Error"],[282,21,264,23],[282,22,264,24],[282,41,264,43],[282,42,264,44],[283,4,265,4],[284,4,266,4],[284,10,266,10,"timeNow"],[284,17,266,17],[284,20,266,20,"Math"],[284,24,266,24],[284,25,266,25,"floor"],[284,30,266,30],[284,31,266,31,"Date"],[284,35,266,35],[284,36,266,36,"now"],[284,39,266,39],[284,40,266,40],[284,41,266,41],[284,44,266,44],[284,48,266,48],[284,49,266,49],[285,4,267,4],[285,8,267,8,"exp"],[285,11,267,11],[285,15,267,15,"timeNow"],[285,22,267,22],[285,24,267,24],[286,6,268,8],[286,12,268,14],[286,16,268,18,"Error"],[286,21,268,23],[286,22,268,24],[286,39,268,41],[286,40,268,42],[287,4,269,4],[288,2,270,0],[289,2,271,7],[289,11,271,16,"getAlgorithm"],[289,23,271,28,"getAlgorithm"],[289,24,271,29,"alg"],[289,27,271,32],[289,29,271,34],[290,4,272,4],[290,12,272,12,"alg"],[290,15,272,15],[291,6,273,8],[291,11,273,13],[291,18,273,20],[292,8,274,12],[292,15,274,19],[293,10,275,16,"name"],[293,14,275,20],[293,16,275,22],[293,35,275,41],[294,10,276,16,"hash"],[294,14,276,20],[294,16,276,22],[295,12,276,24,"name"],[295,16,276,28],[295,18,276,30],[296,10,276,40],[297,8,277,12],[297,9,277,13],[298,6,278,8],[298,11,278,13],[298,18,278,20],[299,8,279,12],[299,15,279,19],[300,10,280,16,"name"],[300,14,280,20],[300,16,280,22],[300,23,280,29],[301,10,281,16,"namedCurve"],[301,20,281,26],[301,22,281,28],[301,29,281,35],[302,10,282,16,"hash"],[302,14,282,20],[302,16,282,22],[303,12,282,24,"name"],[303,16,282,28],[303,18,282,30],[304,10,282,40],[305,8,283,12],[305,9,283,13],[306,6,284,8],[307,8,285,12],[307,14,285,18],[307,18,285,22,"Error"],[307,23,285,27],[307,24,285,28],[307,43,285,47],[307,44,285,48],[308,4,286,4],[309,2,287,0],[310,2,288,0],[310,8,288,6,"UUID_REGEX"],[310,18,288,16],[310,21,288,19],[310,85,288,83],[311,2,289,7],[311,11,289,16,"validateUUID"],[311,23,289,28,"validateUUID"],[311,24,289,29,"str"],[311,27,289,32],[311,29,289,34],[312,4,290,4],[312,8,290,8],[312,9,290,9,"UUID_REGEX"],[312,19,290,19],[312,20,290,20,"test"],[312,24,290,24],[312,25,290,25,"str"],[312,28,290,28],[312,29,290,29],[312,31,290,31],[313,6,291,8],[313,12,291,14],[313,16,291,18,"Error"],[313,21,291,23],[313,22,291,24],[313,83,291,85],[313,84,291,86],[314,4,292,4],[315,2,293,0],[316,2,294,7],[316,11,294,16,"userNotAvailableProxy"],[316,32,294,37,"userNotAvailableProxy"],[316,33,294,37],[316,35,294,40],[317,4,295,4],[317,10,295,10,"proxyTarget"],[317,21,295,21],[317,24,295,24],[317,25,295,25],[317,26,295,26],[318,4,296,4],[318,11,296,11],[318,15,296,15,"Proxy"],[318,20,296,20],[318,21,296,21,"proxyTarget"],[318,32,296,32],[318,34,296,34],[319,6,297,8,"get"],[319,9,297,11],[319,11,297,13,"get"],[319,12,297,14,"target"],[319,18,297,20],[319,20,297,22,"prop"],[319,24,297,26],[319,29,297,31],[320,8,298,12],[320,12,298,16,"prop"],[320,16,298,20],[320,21,298,25],[320,48,298,52],[320,50,298,54],[321,10,299,16],[321,17,299,23],[321,21,299,27],[322,8,300,12],[323,8,301,12],[324,8,302,12],[325,8,303,12],[325,12,303,16],[325,19,303,23,"prop"],[325,23,303,27],[325,28,303,32],[325,36,303,40],[325,38,303,42],[326,10,304,16],[326,16,304,22,"sProp"],[326,21,304,27],[326,24,304,30,"prop"],[326,28,304,34],[326,29,304,35,"toString"],[326,37,304,43],[326,38,304,44],[326,39,304,45],[327,10,305,16],[327,14,305,20,"sProp"],[327,19,305,25],[327,24,305,30],[327,52,305,58],[327,56,306,20,"sProp"],[327,61,306,25],[327,66,306,30],[327,94,306,58],[327,98,307,20,"sProp"],[327,103,307,25],[327,108,307,30],[327,137,307,59],[327,139,307,61],[328,12,308,20],[329,12,309,20],[329,19,309,27,"undefined"],[329,28,309,36],[330,10,310,16],[331,8,311,12],[332,8,312,12],[332,14,312,18],[332,18,312,22,"Error"],[332,23,312,27],[332,24,312,28],[332,154,312,158,"prop"],[332,158,312,162],[332,240,312,244],[332,241,312,245],[333,6,313,8],[333,7,313,9],[334,6,314,8,"set"],[334,9,314,11],[334,11,314,13,"set"],[334,12,314,14,"_target"],[334,19,314,21],[334,21,314,23,"prop"],[334,25,314,27],[334,30,314,32],[335,8,315,12],[335,14,315,18],[335,18,315,22,"Error"],[335,23,315,27],[335,24,315,28],[335,152,315,156,"prop"],[335,156,315,160],[335,272,315,276],[335,273,315,277],[336,6,316,8],[336,7,316,9],[337,6,317,8,"deleteProperty"],[337,20,317,22],[337,22,317,24,"deleteProperty"],[337,23,317,25,"_target"],[337,30,317,32],[337,32,317,34,"prop"],[337,36,317,38],[337,41,317,43],[338,8,318,12],[338,14,318,18],[338,18,318,22,"Error"],[338,23,318,27],[338,24,318,28],[338,153,318,157,"prop"],[338,157,318,161],[338,273,318,277],[338,274,318,278],[339,6,319,8],[340,4,320,4],[340,5,320,5],[340,6,320,6],[341,2,321,0],[342,2,322,0],[343,0,323,0],[344,0,324,0],[345,0,325,0],[346,2,326,7],[346,11,326,16,"deepClone"],[346,20,326,25,"deepClone"],[346,21,326,26,"obj"],[346,24,326,29],[346,26,326,31],[347,4,327,4],[347,11,327,11,"JSON"],[347,15,327,15],[347,16,327,16,"parse"],[347,21,327,21],[347,22,327,22,"JSON"],[347,26,327,26],[347,27,327,27,"stringify"],[347,36,327,36],[347,37,327,37,"obj"],[347,40,327,40],[347,41,327,41],[347,42,327,42],[348,2,328,0],[349,0,328,1],[349,3]],"functionMap":{"names":["<global>","expiresAt","uuid","xxxxxxxxXxxx4xxxYxxxXxxxxxxxxxxx.replace$argument_1","isBrowser","supportsLocalStorage","parseParametersFromURL","hashSearchParams.forEach$argument_0","url.searchParams.forEach$argument_0","resolveFetch","_fetch","import.then$argument_0","<anonymous>","looksLikeFetchResponse","setItemAsync","getItemAsync","removeItemAsync","Deferred","Deferred#constructor","Deferred.promiseConstructor$argument_0","decodeJWT","sleep","Promise$argument_0","setTimeout$argument_0","retryable","dec2hex","generatePKCEVerifier","sha256","Array.from.map$argument_0","generatePKCEChallenge","getCodeChallengeAndMethod","parseResponseAPIVersion","validateExp","getAlgorithm","validateUUID","userNotAvailableProxy","Proxy$argument_1.get","Proxy$argument_1.set","Proxy$argument_1.deleteProperty","deepClone"],"mappings":"AAA;OCG;CDG;OEC;mECC;KDG;CFC;yBIC,sEJ;oCKQ;CL8B;OMI;qCCM;aDE;6BEO;KFE;CNE;4BSC;iBCM,iDC,sCD,CD;WGK,4BH;CTC;sCaC;CbO;4BcE;CdE;4BeC;CfW;+BgBC;ChBE;OiBM;ICC;uDCG;SDK;KDC;CjBC;OoBE;CpBsB;OqBI;6BCC;mBCC,kBD;KDC;CrBC;OwBM;gCFC;SVG;SUgB;KEC;CxBE;AyBC;CzBE;O0BE;C1Bc;A2BC;aCM,6BD;C3BE;O6BC;C7BU;O8BC;C9BU;O+BG;C/Be;OgCC;ChCQ;OiCC;CjCgB;OkCE;ClCI;OmCC;aCG;SDgB;aEC;SFE;wBGC;SHE;CnCE;OuCK;CvCE"}},"type":"js/module"}]}