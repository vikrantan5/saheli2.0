{"dependencies":[{"name":"@supabase/functions-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"bFF9i9v9PHzg4reSkp9Ix2vEb4A=","exportNames":["*"]}},{"name":"@supabase/postgrest-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":58,"index":116}}],"key":"9r31ILQlZN/EOl6yvuI3h2t2+dQ=","exportNames":["*"]}},{"name":"@supabase/realtime-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":56,"index":173}}],"key":"kdH69C/RlxmAE/977A+Mvf+TYX0=","exportNames":["*"]}},{"name":"@supabase/storage-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":174},"end":{"line":4,"column":78,"index":252}}],"key":"a4VMVj+nnYNe9AEBUb88ORxNJj8=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":253},"end":{"line":5,"column":126,"index":379}}],"key":"heoF0ph3MRKcRke4Rxium863E4Y=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":380},"end":{"line":6,"column":44,"index":424}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":425},"end":{"line":7,"column":74,"index":499}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"]}},{"name":"./lib/SupabaseAuthClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":500},"end":{"line":8,"column":62,"index":562}}],"key":"NO3M1VFczHHXVBxRcQ04Co3jeTA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _functionsJs = require(_dependencyMap[0], \"@supabase/functions-js\");\n  var _postgrestJs = require(_dependencyMap[1], \"@supabase/postgrest-js\");\n  var _realtimeJs = require(_dependencyMap[2], \"@supabase/realtime-js\");\n  var _storageJs = require(_dependencyMap[3], \"@supabase/storage-js\");\n  var _constants = require(_dependencyMap[4], \"./lib/constants\");\n  var _fetch = require(_dependencyMap[5], \"./lib/fetch\");\n  var _helpers = require(_dependencyMap[6], \"./lib/helpers\");\n  var _SupabaseAuthClient = require(_dependencyMap[7], \"./lib/SupabaseAuthClient\");\n  /**\n   * Supabase Client.\n   *\n   * An isomorphic Javascript client for interacting with Postgres.\n   */\n  class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n      var _a, _b, _c;\n      this.supabaseUrl = supabaseUrl;\n      this.supabaseKey = supabaseKey;\n      const baseUrl = (0, _helpers.validateSupabaseUrl)(supabaseUrl);\n      if (!supabaseKey) throw new Error('supabaseKey is required.');\n      this.realtimeUrl = new URL('realtime/v1', baseUrl);\n      this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n      this.authUrl = new URL('auth/v1', baseUrl);\n      this.storageUrl = new URL('storage/v1', baseUrl);\n      this.functionsUrl = new URL('functions/v1', baseUrl);\n      // default storage key uses the supabase project ref as a namespace\n      const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n      const DEFAULTS = {\n        db: _constants.DEFAULT_DB_OPTIONS,\n        realtime: _constants.DEFAULT_REALTIME_OPTIONS,\n        auth: Object.assign(Object.assign({}, _constants.DEFAULT_AUTH_OPTIONS), {\n          storageKey: defaultStorageKey\n        }),\n        global: _constants.DEFAULT_GLOBAL_OPTIONS\n      };\n      const settings = (0, _helpers.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n      if (!settings.accessToken) {\n        this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n      } else {\n        this.accessToken = settings.accessToken;\n        this.auth = new Proxy({}, {\n          get: (_, prop) => {\n            throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n          }\n        });\n      }\n      this.fetch = (0, _fetch.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n      this.realtime = this._initRealtimeClient(Object.assign({\n        headers: this.headers,\n        accessToken: this._getAccessToken.bind(this)\n      }, settings.realtime));\n      this.rest = new _postgrestJs.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n        headers: this.headers,\n        schema: settings.db.schema,\n        fetch: this.fetch\n      });\n      this.storage = new _storageJs.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n      if (!settings.accessToken) {\n        this._listenForAuthEvents();\n      }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n      return new _functionsJs.FunctionsClient(this.functionsUrl.href, {\n        headers: this.headers,\n        customFetch: this.fetch\n      });\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n      return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n      return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {\n      head: false,\n      get: false,\n      count: undefined\n    }) {\n      return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = {\n      config: {}\n    }) {\n      return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n      return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n      return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n      return this.realtime.removeAllChannels();\n    }\n    async _getAccessToken() {\n      var _a, _b;\n      if (this.accessToken) {\n        return await this.accessToken();\n      }\n      const {\n        data\n      } = await this.auth.getSession();\n      return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n    }\n    _initSupabaseAuthClient({\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      storageKey,\n      flowType,\n      lock,\n      debug\n    }, headers, fetch) {\n      const authHeaders = {\n        Authorization: `Bearer ${this.supabaseKey}`,\n        apikey: `${this.supabaseKey}`\n      };\n      return new _SupabaseAuthClient.SupabaseAuthClient({\n        url: this.authUrl.href,\n        headers: Object.assign(Object.assign({}, authHeaders), headers),\n        storageKey: storageKey,\n        autoRefreshToken,\n        persistSession,\n        detectSessionInUrl,\n        storage,\n        userStorage,\n        flowType,\n        lock,\n        debug,\n        fetch,\n        // auth checks if there is a custom authorizaiton header using this flag\n        // so it knows whether to return an error when getUser is called with no session\n        hasCustomAuthorizationHeader: Object.keys(this.headers).some(key => key.toLowerCase() === 'authorization')\n      });\n    }\n    _initRealtimeClient(options) {\n      return new _realtimeJs.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), {\n        params: Object.assign({\n          apikey: this.supabaseKey\n        }, options === null || options === void 0 ? void 0 : options.params)\n      }));\n    }\n    _listenForAuthEvents() {\n      const data = this.auth.onAuthStateChange((event, session) => {\n        this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n      });\n      return data;\n    }\n    _handleTokenChanged(event, source, token) {\n      if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n        this.changedAccessToken = token;\n        this.realtime.setAuth(token);\n      } else if (event === 'SIGNED_OUT') {\n        this.realtime.setAuth();\n        if (source == 'STORAGE') this.auth.signOut();\n        this.changedAccessToken = undefined;\n      }\n    }\n  }\n  exports.default = SupabaseClient;\n});","lineCount":242,"map":[[6,2,1,0],[6,6,1,0,"_functionsJs"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,2,0],[7,6,2,0,"_postgrestJs"],[7,18,2,0],[7,21,2,0,"require"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,3,0],[8,6,3,0,"_realtimeJs"],[8,17,3,0],[8,20,3,0,"require"],[8,27,3,0],[8,28,3,0,"_dependencyMap"],[8,42,3,0],[9,2,4,0],[9,6,4,0,"_storageJs"],[9,16,4,0],[9,19,4,0,"require"],[9,26,4,0],[9,27,4,0,"_dependencyMap"],[9,41,4,0],[10,2,5,0],[10,6,5,0,"_constants"],[10,16,5,0],[10,19,5,0,"require"],[10,26,5,0],[10,27,5,0,"_dependencyMap"],[10,41,5,0],[11,2,6,0],[11,6,6,0,"_fetch"],[11,12,6,0],[11,15,6,0,"require"],[11,22,6,0],[11,23,6,0,"_dependencyMap"],[11,37,6,0],[12,2,7,0],[12,6,7,0,"_helpers"],[12,14,7,0],[12,17,7,0,"require"],[12,24,7,0],[12,25,7,0,"_dependencyMap"],[12,39,7,0],[13,2,8,0],[13,6,8,0,"_SupabaseAuthClient"],[13,25,8,0],[13,28,8,0,"require"],[13,35,8,0],[13,36,8,0,"_dependencyMap"],[13,50,8,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,2,14,15],[19,8,14,21,"SupabaseClient"],[19,22,14,35],[19,23,14,36],[20,4,15,4],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,4,28,4,"constructor"],[33,15,28,15,"constructor"],[33,16,28,16,"supabaseUrl"],[33,27,28,27],[33,29,28,29,"supabaseKey"],[33,40,28,40],[33,42,28,42,"options"],[33,49,28,49],[33,51,28,51],[34,6,29,8],[34,10,29,12,"_a"],[34,12,29,14],[34,14,29,16,"_b"],[34,16,29,18],[34,18,29,20,"_c"],[34,20,29,22],[35,6,30,8],[35,10,30,12],[35,11,30,13,"supabaseUrl"],[35,22,30,24],[35,25,30,27,"supabaseUrl"],[35,36,30,38],[36,6,31,8],[36,10,31,12],[36,11,31,13,"supabaseKey"],[36,22,31,24],[36,25,31,27,"supabaseKey"],[36,36,31,38],[37,6,32,8],[37,12,32,14,"baseUrl"],[37,19,32,21],[37,22,32,24],[37,26,32,24,"validateSupabaseUrl"],[37,54,32,43],[37,56,32,44,"supabaseUrl"],[37,67,32,55],[37,68,32,56],[38,6,33,8],[38,10,33,12],[38,11,33,13,"supabaseKey"],[38,22,33,24],[38,24,34,12],[38,30,34,18],[38,34,34,22,"Error"],[38,39,34,27],[38,40,34,28],[38,66,34,54],[38,67,34,55],[39,6,35,8],[39,10,35,12],[39,11,35,13,"realtimeUrl"],[39,22,35,24],[39,25,35,27],[39,29,35,31,"URL"],[39,32,35,34],[39,33,35,35],[39,46,35,48],[39,48,35,50,"baseUrl"],[39,55,35,57],[39,56,35,58],[40,6,36,8],[40,10,36,12],[40,11,36,13,"realtimeUrl"],[40,22,36,24],[40,23,36,25,"protocol"],[40,31,36,33],[40,34,36,36],[40,38,36,40],[40,39,36,41,"realtimeUrl"],[40,50,36,52],[40,51,36,53,"protocol"],[40,59,36,61],[40,60,36,62,"replace"],[40,67,36,69],[40,68,36,70],[40,74,36,76],[40,76,36,78],[40,80,36,82],[40,81,36,83],[41,6,37,8],[41,10,37,12],[41,11,37,13,"authUrl"],[41,18,37,20],[41,21,37,23],[41,25,37,27,"URL"],[41,28,37,30],[41,29,37,31],[41,38,37,40],[41,40,37,42,"baseUrl"],[41,47,37,49],[41,48,37,50],[42,6,38,8],[42,10,38,12],[42,11,38,13,"storageUrl"],[42,21,38,23],[42,24,38,26],[42,28,38,30,"URL"],[42,31,38,33],[42,32,38,34],[42,44,38,46],[42,46,38,48,"baseUrl"],[42,53,38,55],[42,54,38,56],[43,6,39,8],[43,10,39,12],[43,11,39,13,"functionsUrl"],[43,23,39,25],[43,26,39,28],[43,30,39,32,"URL"],[43,33,39,35],[43,34,39,36],[43,48,39,50],[43,50,39,52,"baseUrl"],[43,57,39,59],[43,58,39,60],[44,6,40,8],[45,6,41,8],[45,12,41,14,"defaultStorageKey"],[45,29,41,31],[45,32,41,34],[45,38,41,40,"baseUrl"],[45,45,41,47],[45,46,41,48,"hostname"],[45,54,41,56],[45,55,41,57,"split"],[45,60,41,62],[45,61,41,63],[45,64,41,66],[45,65,41,67],[45,66,41,68],[45,67,41,69],[45,68,41,70],[45,81,41,83],[46,6,42,8],[46,12,42,14,"DEFAULTS"],[46,20,42,22],[46,23,42,25],[47,8,43,12,"db"],[47,10,43,14],[47,12,43,16,"DEFAULT_DB_OPTIONS"],[47,41,43,34],[48,8,44,12,"realtime"],[48,16,44,20],[48,18,44,22,"DEFAULT_REALTIME_OPTIONS"],[48,53,44,46],[49,8,45,12,"auth"],[49,12,45,16],[49,14,45,18,"Object"],[49,20,45,24],[49,21,45,25,"assign"],[49,27,45,31],[49,28,45,32,"Object"],[49,34,45,38],[49,35,45,39,"assign"],[49,41,45,45],[49,42,45,46],[49,43,45,47],[49,44,45,48],[49,46,45,50,"DEFAULT_AUTH_OPTIONS"],[49,77,45,70],[49,78,45,71],[49,80,45,73],[50,10,45,75,"storageKey"],[50,20,45,85],[50,22,45,87,"defaultStorageKey"],[51,8,45,105],[51,9,45,106],[51,10,45,107],[52,8,46,12,"global"],[52,14,46,18],[52,16,46,20,"DEFAULT_GLOBAL_OPTIONS"],[53,6,47,8],[53,7,47,9],[54,6,48,8],[54,12,48,14,"settings"],[54,20,48,22],[54,23,48,25],[54,27,48,25,"applySettingDefaults"],[54,56,48,45],[54,58,48,46,"options"],[54,65,48,53],[54,70,48,58],[54,74,48,62],[54,78,48,66,"options"],[54,85,48,73],[54,90,48,78],[54,95,48,83],[54,96,48,84],[54,99,48,87,"options"],[54,106,48,94],[54,109,48,97],[54,110,48,98],[54,111,48,99],[54,113,48,101,"DEFAULTS"],[54,121,48,109],[54,122,48,110],[55,6,49,8],[55,10,49,12],[55,11,49,13,"storageKey"],[55,21,49,23],[55,24,49,26],[55,25,49,27,"_a"],[55,27,49,29],[55,30,49,32,"settings"],[55,38,49,40],[55,39,49,41,"auth"],[55,43,49,45],[55,44,49,46,"storageKey"],[55,54,49,56],[55,60,49,62],[55,64,49,66],[55,68,49,70,"_a"],[55,70,49,72],[55,75,49,77],[55,80,49,82],[55,81,49,83],[55,84,49,86,"_a"],[55,86,49,88],[55,89,49,91],[55,91,49,93],[56,6,50,8],[56,10,50,12],[56,11,50,13,"headers"],[56,18,50,20],[56,21,50,23],[56,22,50,24,"_b"],[56,24,50,26],[56,27,50,29,"settings"],[56,35,50,37],[56,36,50,38,"global"],[56,42,50,44],[56,43,50,45,"headers"],[56,50,50,52],[56,56,50,58],[56,60,50,62],[56,64,50,66,"_b"],[56,66,50,68],[56,71,50,73],[56,76,50,78],[56,77,50,79],[56,80,50,82,"_b"],[56,82,50,84],[56,85,50,87],[56,86,50,88],[56,87,50,89],[57,6,51,8],[57,10,51,12],[57,11,51,13,"settings"],[57,19,51,21],[57,20,51,22,"accessToken"],[57,31,51,33],[57,33,51,35],[58,8,52,12],[58,12,52,16],[58,13,52,17,"auth"],[58,17,52,21],[58,20,52,24],[58,24,52,28],[58,25,52,29,"_initSupabaseAuthClient"],[58,48,52,52],[58,49,52,53],[58,50,52,54,"_c"],[58,52,52,56],[58,55,52,59,"settings"],[58,63,52,67],[58,64,52,68,"auth"],[58,68,52,72],[58,74,52,78],[58,78,52,82],[58,82,52,86,"_c"],[58,84,52,88],[58,89,52,93],[58,94,52,98],[58,95,52,99],[58,98,52,102,"_c"],[58,100,52,104],[58,103,52,107],[58,104,52,108],[58,105,52,109],[58,107,52,111],[58,111,52,115],[58,112,52,116,"headers"],[58,119,52,123],[58,121,52,125,"settings"],[58,129,52,133],[58,130,52,134,"global"],[58,136,52,140],[58,137,52,141,"fetch"],[58,142,52,146],[58,143,52,147],[59,6,53,8],[59,7,53,9],[59,13,54,13],[60,8,55,12],[60,12,55,16],[60,13,55,17,"accessToken"],[60,24,55,28],[60,27,55,31,"settings"],[60,35,55,39],[60,36,55,40,"accessToken"],[60,47,55,51],[61,8,56,12],[61,12,56,16],[61,13,56,17,"auth"],[61,17,56,21],[61,20,56,24],[61,24,56,28,"Proxy"],[61,29,56,33],[61,30,56,34],[61,31,56,35],[61,32,56,36],[61,34,56,38],[62,10,57,16,"get"],[62,13,57,19],[62,15,57,21,"get"],[62,16,57,22,"_"],[62,17,57,23],[62,19,57,25,"prop"],[62,23,57,29],[62,28,57,34],[63,12,58,20],[63,18,58,26],[63,22,58,30,"Error"],[63,27,58,35],[63,28,58,36],[63,137,58,145,"String"],[63,143,58,151],[63,144,58,152,"prop"],[63,148,58,156],[63,149,58,157],[63,167,58,175],[63,168,58,176],[64,10,59,16],[65,8,60,12],[65,9,60,13],[65,10,60,14],[66,6,61,8],[67,6,62,8],[67,10,62,12],[67,11,62,13,"fetch"],[67,16,62,18],[67,19,62,21],[67,23,62,21,"fetchWithAuth"],[67,43,62,34],[67,45,62,35,"supabaseKey"],[67,56,62,46],[67,58,62,48],[67,62,62,52],[67,63,62,53,"_getAccessToken"],[67,78,62,68],[67,79,62,69,"bind"],[67,83,62,73],[67,84,62,74],[67,88,62,78],[67,89,62,79],[67,91,62,81,"settings"],[67,99,62,89],[67,100,62,90,"global"],[67,106,62,96],[67,107,62,97,"fetch"],[67,112,62,102],[67,113,62,103],[68,6,63,8],[68,10,63,12],[68,11,63,13,"realtime"],[68,19,63,21],[68,22,63,24],[68,26,63,28],[68,27,63,29,"_initRealtimeClient"],[68,46,63,48],[68,47,63,49,"Object"],[68,53,63,55],[68,54,63,56,"assign"],[68,60,63,62],[68,61,63,63],[69,8,63,65,"headers"],[69,15,63,72],[69,17,63,74],[69,21,63,78],[69,22,63,79,"headers"],[69,29,63,86],[70,8,63,88,"accessToken"],[70,19,63,99],[70,21,63,101],[70,25,63,105],[70,26,63,106,"_getAccessToken"],[70,41,63,121],[70,42,63,122,"bind"],[70,46,63,126],[70,47,63,127],[70,51,63,131],[71,6,63,133],[71,7,63,134],[71,9,63,136,"settings"],[71,17,63,144],[71,18,63,145,"realtime"],[71,26,63,153],[71,27,63,154],[71,28,63,155],[72,6,64,8],[72,10,64,12],[72,11,64,13,"rest"],[72,15,64,17],[72,18,64,20],[72,22,64,24,"PostgrestClient"],[72,50,64,39],[72,51,64,40],[72,55,64,44,"URL"],[72,58,64,47],[72,59,64,48],[72,68,64,57],[72,70,64,59,"baseUrl"],[72,77,64,66],[72,78,64,67],[72,79,64,68,"href"],[72,83,64,72],[72,85,64,74],[73,8,65,12,"headers"],[73,15,65,19],[73,17,65,21],[73,21,65,25],[73,22,65,26,"headers"],[73,29,65,33],[74,8,66,12,"schema"],[74,14,66,18],[74,16,66,20,"settings"],[74,24,66,28],[74,25,66,29,"db"],[74,27,66,31],[74,28,66,32,"schema"],[74,34,66,38],[75,8,67,12,"fetch"],[75,13,67,17],[75,15,67,19],[75,19,67,23],[75,20,67,24,"fetch"],[76,6,68,8],[76,7,68,9],[76,8,68,10],[77,6,69,8],[77,10,69,12],[77,11,69,13,"storage"],[77,18,69,20],[77,21,69,23],[77,25,69,27,"SupabaseStorageClient"],[77,49,69,48],[77,50,69,49],[77,54,69,53],[77,55,69,54,"storageUrl"],[77,65,69,64],[77,66,69,65,"href"],[77,70,69,69],[77,72,69,71],[77,76,69,75],[77,77,69,76,"headers"],[77,84,69,83],[77,86,69,85],[77,90,69,89],[77,91,69,90,"fetch"],[77,96,69,95],[77,98,69,97,"options"],[77,105,69,104],[77,110,69,109],[77,114,69,113],[77,118,69,117,"options"],[77,125,69,124],[77,130,69,129],[77,135,69,134],[77,136,69,135],[77,139,69,138],[77,144,69,143],[77,145,69,144],[77,148,69,147,"options"],[77,155,69,154],[77,156,69,155,"storage"],[77,163,69,162],[77,164,69,163],[78,6,70,8],[78,10,70,12],[78,11,70,13,"settings"],[78,19,70,21],[78,20,70,22,"accessToken"],[78,31,70,33],[78,33,70,35],[79,8,71,12],[79,12,71,16],[79,13,71,17,"_listenForAuthEvents"],[79,33,71,37],[79,34,71,38],[79,35,71,39],[80,6,72,8],[81,4,73,4],[82,4,74,4],[83,0,75,0],[84,0,76,0],[85,4,77,4],[85,8,77,8,"functions"],[85,17,77,17,"functions"],[85,18,77,17],[85,20,77,20],[86,6,78,8],[86,13,78,15],[86,17,78,19,"FunctionsClient"],[86,45,78,34],[86,46,78,35],[86,50,78,39],[86,51,78,40,"functionsUrl"],[86,63,78,52],[86,64,78,53,"href"],[86,68,78,57],[86,70,78,59],[87,8,79,12,"headers"],[87,15,79,19],[87,17,79,21],[87,21,79,25],[87,22,79,26,"headers"],[87,29,79,33],[88,8,80,12,"customFetch"],[88,19,80,23],[88,21,80,25],[88,25,80,29],[88,26,80,30,"fetch"],[89,6,81,8],[89,7,81,9],[89,8,81,10],[90,4,82,4],[91,4,83,4],[92,0,84,0],[93,0,85,0],[94,0,86,0],[95,0,87,0],[96,4,88,4,"from"],[96,8,88,8,"from"],[96,9,88,9,"relation"],[96,17,88,17],[96,19,88,19],[97,6,89,8],[97,13,89,15],[97,17,89,19],[97,18,89,20,"rest"],[97,22,89,24],[97,23,89,25,"from"],[97,27,89,29],[97,28,89,30,"relation"],[97,36,89,38],[97,37,89,39],[98,4,90,4],[99,4,91,4],[100,4,92,4],[101,0,93,0],[102,0,94,0],[103,0,95,0],[104,0,96,0],[105,0,97,0],[106,0,98,0],[107,4,99,4,"schema"],[107,10,99,10,"schema"],[107,11,99,11,"schema"],[107,17,99,17],[107,19,99,19],[108,6,100,8],[108,13,100,15],[108,17,100,19],[108,18,100,20,"rest"],[108,22,100,24],[108,23,100,25,"schema"],[108,29,100,31],[108,30,100,32,"schema"],[108,36,100,38],[108,37,100,39],[109,4,101,4],[110,4,102,4],[111,4,103,4],[112,0,104,0],[113,0,105,0],[114,0,106,0],[115,0,107,0],[116,0,108,0],[117,0,109,0],[118,0,110,0],[119,0,111,0],[120,0,112,0],[121,0,113,0],[122,0,114,0],[123,0,115,0],[124,0,116,0],[125,0,117,0],[126,0,118,0],[127,0,119,0],[128,0,120,0],[129,0,121,0],[130,0,122,0],[131,0,123,0],[132,0,124,0],[133,0,125,0],[134,4,126,4,"rpc"],[134,7,126,7,"rpc"],[134,8,126,8,"fn"],[134,10,126,10],[134,12,126,12,"args"],[134,16,126,16],[134,19,126,19],[134,20,126,20],[134,21,126,21],[134,23,126,23,"options"],[134,30,126,30],[134,33,126,33],[135,6,127,8,"head"],[135,10,127,12],[135,12,127,14],[135,17,127,19],[136,6,128,8,"get"],[136,9,128,11],[136,11,128,13],[136,16,128,18],[137,6,129,8,"count"],[137,11,129,13],[137,13,129,15,"undefined"],[138,4,130,4],[138,5,130,5],[138,7,130,7],[139,6,131,8],[139,13,131,15],[139,17,131,19],[139,18,131,20,"rest"],[139,22,131,24],[139,23,131,25,"rpc"],[139,26,131,28],[139,27,131,29,"fn"],[139,29,131,31],[139,31,131,33,"args"],[139,35,131,37],[139,37,131,39,"options"],[139,44,131,46],[139,45,131,47],[140,4,132,4],[141,4,133,4],[142,0,134,0],[143,0,135,0],[144,0,136,0],[145,0,137,0],[146,0,138,0],[147,0,139,0],[148,4,140,4,"channel"],[148,11,140,11,"channel"],[148,12,140,12,"name"],[148,16,140,16],[148,18,140,18,"opts"],[148,22,140,22],[148,25,140,25],[149,6,140,27,"config"],[149,12,140,33],[149,14,140,35],[149,15,140,36],[150,4,140,38],[150,5,140,39],[150,7,140,41],[151,6,141,8],[151,13,141,15],[151,17,141,19],[151,18,141,20,"realtime"],[151,26,141,28],[151,27,141,29,"channel"],[151,34,141,36],[151,35,141,37,"name"],[151,39,141,41],[151,41,141,43,"opts"],[151,45,141,47],[151,46,141,48],[152,4,142,4],[153,4,143,4],[154,0,144,0],[155,0,145,0],[156,4,146,4,"getChannels"],[156,15,146,15,"getChannels"],[156,16,146,15],[156,18,146,18],[157,6,147,8],[157,13,147,15],[157,17,147,19],[157,18,147,20,"realtime"],[157,26,147,28],[157,27,147,29,"getChannels"],[157,38,147,40],[157,39,147,41],[157,40,147,42],[158,4,148,4],[159,4,149,4],[160,0,150,0],[161,0,151,0],[162,0,152,0],[163,0,153,0],[164,0,154,0],[165,4,155,4,"removeChannel"],[165,17,155,17,"removeChannel"],[165,18,155,18,"channel"],[165,25,155,25],[165,27,155,27],[166,6,156,8],[166,13,156,15],[166,17,156,19],[166,18,156,20,"realtime"],[166,26,156,28],[166,27,156,29,"removeChannel"],[166,40,156,42],[166,41,156,43,"channel"],[166,48,156,50],[166,49,156,51],[167,4,157,4],[168,4,158,4],[169,0,159,0],[170,0,160,0],[171,4,161,4,"removeAllChannels"],[171,21,161,21,"removeAllChannels"],[171,22,161,21],[171,24,161,24],[172,6,162,8],[172,13,162,15],[172,17,162,19],[172,18,162,20,"realtime"],[172,26,162,28],[172,27,162,29,"removeAllChannels"],[172,44,162,46],[172,45,162,47],[172,46,162,48],[173,4,163,4],[174,4,164,4],[174,10,164,10,"_getAccessToken"],[174,25,164,25,"_getAccessToken"],[174,26,164,25],[174,28,164,28],[175,6,165,8],[175,10,165,12,"_a"],[175,12,165,14],[175,14,165,16,"_b"],[175,16,165,18],[176,6,166,8],[176,10,166,12],[176,14,166,16],[176,15,166,17,"accessToken"],[176,26,166,28],[176,28,166,30],[177,8,167,12],[177,15,167,19],[177,21,167,25],[177,25,167,29],[177,26,167,30,"accessToken"],[177,37,167,41],[177,38,167,42],[177,39,167,43],[178,6,168,8],[179,6,169,8],[179,12,169,14],[180,8,169,16,"data"],[181,6,169,21],[181,7,169,22],[181,10,169,25],[181,16,169,31],[181,20,169,35],[181,21,169,36,"auth"],[181,25,169,40],[181,26,169,41,"getSession"],[181,36,169,51],[181,37,169,52],[181,38,169,53],[182,6,170,8],[182,13,170,15],[182,14,170,16,"_b"],[182,16,170,18],[182,19,170,21],[182,20,170,22,"_a"],[182,22,170,24],[182,25,170,27,"data"],[182,29,170,31],[182,30,170,32,"session"],[182,37,170,39],[182,43,170,45],[182,47,170,49],[182,51,170,53,"_a"],[182,53,170,55],[182,58,170,60],[182,63,170,65],[182,64,170,66],[182,67,170,69],[182,72,170,74],[182,73,170,75],[182,76,170,78,"_a"],[182,78,170,80],[182,79,170,81,"access_token"],[182,91,170,93],[182,97,170,99],[182,101,170,103],[182,105,170,107,"_b"],[182,107,170,109],[182,112,170,114],[182,117,170,119],[182,118,170,120],[182,121,170,123,"_b"],[182,123,170,125],[182,126,170,128],[182,130,170,132],[182,131,170,133,"supabaseKey"],[182,142,170,144],[183,4,171,4],[184,4,172,4,"_initSupabaseAuthClient"],[184,27,172,27,"_initSupabaseAuthClient"],[184,28,172,28],[185,6,172,30,"autoRefreshToken"],[185,22,172,46],[186,6,172,48,"persistSession"],[186,20,172,62],[187,6,172,64,"detectSessionInUrl"],[187,24,172,82],[188,6,172,84,"storage"],[188,13,172,91],[189,6,172,93,"userStorage"],[189,17,172,104],[190,6,172,106,"storageKey"],[190,16,172,116],[191,6,172,118,"flowType"],[191,14,172,126],[192,6,172,128,"lock"],[192,10,172,132],[193,6,172,134,"debug"],[194,4,172,141],[194,5,172,142],[194,7,172,144,"headers"],[194,14,172,151],[194,16,172,153,"fetch"],[194,21,172,158],[194,23,172,160],[195,6,173,8],[195,12,173,14,"authHeaders"],[195,23,173,25],[195,26,173,28],[196,8,174,12,"Authorization"],[196,21,174,25],[196,23,174,27],[196,33,174,37],[196,37,174,41],[196,38,174,42,"supabaseKey"],[196,49,174,53],[196,51,174,55],[197,8,175,12,"apikey"],[197,14,175,18],[197,16,175,20],[197,19,175,23],[197,23,175,27],[197,24,175,28,"supabaseKey"],[197,35,175,39],[198,6,176,8],[198,7,176,9],[199,6,177,8],[199,13,177,15],[199,17,177,19,"SupabaseAuthClient"],[199,55,177,37],[199,56,177,38],[200,8,178,12,"url"],[200,11,178,15],[200,13,178,17],[200,17,178,21],[200,18,178,22,"authUrl"],[200,25,178,29],[200,26,178,30,"href"],[200,30,178,34],[201,8,179,12,"headers"],[201,15,179,19],[201,17,179,21,"Object"],[201,23,179,27],[201,24,179,28,"assign"],[201,30,179,34],[201,31,179,35,"Object"],[201,37,179,41],[201,38,179,42,"assign"],[201,44,179,48],[201,45,179,49],[201,46,179,50],[201,47,179,51],[201,49,179,53,"authHeaders"],[201,60,179,64],[201,61,179,65],[201,63,179,67,"headers"],[201,70,179,74],[201,71,179,75],[202,8,180,12,"storageKey"],[202,18,180,22],[202,20,180,24,"storageKey"],[202,30,180,34],[203,8,181,12,"autoRefreshToken"],[203,24,181,28],[204,8,182,12,"persistSession"],[204,22,182,26],[205,8,183,12,"detectSessionInUrl"],[205,26,183,30],[206,8,184,12,"storage"],[206,15,184,19],[207,8,185,12,"userStorage"],[207,19,185,23],[208,8,186,12,"flowType"],[208,16,186,20],[209,8,187,12,"lock"],[209,12,187,16],[210,8,188,12,"debug"],[210,13,188,17],[211,8,189,12,"fetch"],[211,13,189,17],[212,8,190,12],[213,8,191,12],[214,8,192,12,"hasCustomAuthorizationHeader"],[214,36,192,40],[214,38,192,42,"Object"],[214,44,192,48],[214,45,192,49,"keys"],[214,49,192,53],[214,50,192,54],[214,54,192,58],[214,55,192,59,"headers"],[214,62,192,66],[214,63,192,67],[214,64,192,68,"some"],[214,68,192,72],[214,69,192,74,"key"],[214,72,192,77],[214,76,192,82,"key"],[214,79,192,85],[214,80,192,86,"toLowerCase"],[214,91,192,97],[214,92,192,98],[214,93,192,99],[214,98,192,104],[214,113,192,119],[215,6,193,8],[215,7,193,9],[215,8,193,10],[216,4,194,4],[217,4,195,4,"_initRealtimeClient"],[217,23,195,23,"_initRealtimeClient"],[217,24,195,24,"options"],[217,31,195,31],[217,33,195,33],[218,6,196,8],[218,13,196,15],[218,17,196,19,"RealtimeClient"],[218,43,196,33],[218,44,196,34],[218,48,196,38],[218,49,196,39,"realtimeUrl"],[218,60,196,50],[218,61,196,51,"href"],[218,65,196,55],[218,67,196,57,"Object"],[218,73,196,63],[218,74,196,64,"assign"],[218,80,196,70],[218,81,196,71,"Object"],[218,87,196,77],[218,88,196,78,"assign"],[218,94,196,84],[218,95,196,85],[218,96,196,86],[218,97,196,87],[218,99,196,89,"options"],[218,106,196,96],[218,107,196,97],[218,109,196,99],[219,8,196,101,"params"],[219,14,196,107],[219,16,196,109,"Object"],[219,22,196,115],[219,23,196,116,"assign"],[219,29,196,122],[219,30,196,123],[220,10,196,125,"apikey"],[220,16,196,131],[220,18,196,133],[220,22,196,137],[220,23,196,138,"supabaseKey"],[221,8,196,150],[221,9,196,151],[221,11,196,153,"options"],[221,18,196,160],[221,23,196,165],[221,27,196,169],[221,31,196,173,"options"],[221,38,196,180],[221,43,196,185],[221,48,196,190],[221,49,196,191],[221,52,196,194],[221,57,196,199],[221,58,196,200],[221,61,196,203,"options"],[221,68,196,210],[221,69,196,211,"params"],[221,75,196,217],[222,6,196,219],[222,7,196,220],[222,8,196,221],[222,9,196,222],[223,4,197,4],[224,4,198,4,"_listenForAuthEvents"],[224,24,198,24,"_listenForAuthEvents"],[224,25,198,24],[224,27,198,27],[225,6,199,8],[225,12,199,14,"data"],[225,16,199,18],[225,19,199,21],[225,23,199,25],[225,24,199,26,"auth"],[225,28,199,30],[225,29,199,31,"onAuthStateChange"],[225,46,199,48],[225,47,199,49],[225,48,199,50,"event"],[225,53,199,55],[225,55,199,57,"session"],[225,62,199,64],[225,67,199,69],[226,8,200,12],[226,12,200,16],[226,13,200,17,"_handleTokenChanged"],[226,32,200,36],[226,33,200,37,"event"],[226,38,200,42],[226,40,200,44],[226,48,200,52],[226,50,200,54,"session"],[226,57,200,61],[226,62,200,66],[226,66,200,70],[226,70,200,74,"session"],[226,77,200,81],[226,82,200,86],[226,87,200,91],[226,88,200,92],[226,91,200,95],[226,96,200,100],[226,97,200,101],[226,100,200,104,"session"],[226,107,200,111],[226,108,200,112,"access_token"],[226,120,200,124],[226,121,200,125],[227,6,201,8],[227,7,201,9],[227,8,201,10],[228,6,202,8],[228,13,202,15,"data"],[228,17,202,19],[229,4,203,4],[230,4,204,4,"_handleTokenChanged"],[230,23,204,23,"_handleTokenChanged"],[230,24,204,24,"event"],[230,29,204,29],[230,31,204,31,"source"],[230,37,204,37],[230,39,204,39,"token"],[230,44,204,44],[230,46,204,46],[231,6,205,8],[231,10,205,12],[231,11,205,13,"event"],[231,16,205,18],[231,21,205,23],[231,38,205,40],[231,42,205,44,"event"],[231,47,205,49],[231,52,205,54],[231,63,205,65],[231,68,206,12],[231,72,206,16],[231,73,206,17,"changedAccessToken"],[231,91,206,35],[231,96,206,40,"token"],[231,101,206,45],[231,103,206,47],[232,8,207,12],[232,12,207,16],[232,13,207,17,"changedAccessToken"],[232,31,207,35],[232,34,207,38,"token"],[232,39,207,43],[233,8,208,12],[233,12,208,16],[233,13,208,17,"realtime"],[233,21,208,25],[233,22,208,26,"setAuth"],[233,29,208,33],[233,30,208,34,"token"],[233,35,208,39],[233,36,208,40],[234,6,209,8],[234,7,209,9],[234,13,210,13],[234,17,210,17,"event"],[234,22,210,22],[234,27,210,27],[234,39,210,39],[234,41,210,41],[235,8,211,12],[235,12,211,16],[235,13,211,17,"realtime"],[235,21,211,25],[235,22,211,26,"setAuth"],[235,29,211,33],[235,30,211,34],[235,31,211,35],[236,8,212,12],[236,12,212,16,"source"],[236,18,212,22],[236,22,212,26],[236,31,212,35],[236,33,213,16],[236,37,213,20],[236,38,213,21,"auth"],[236,42,213,25],[236,43,213,26,"signOut"],[236,50,213,33],[236,51,213,34],[236,52,213,35],[237,8,214,12],[237,12,214,16],[237,13,214,17,"changedAccessToken"],[237,31,214,35],[237,34,214,38,"undefined"],[237,43,214,47],[238,6,215,8],[239,4,216,4],[240,2,217,0],[241,2,217,1,"exports"],[241,9,217,1],[241,10,217,1,"default"],[241,17,217,1],[241,20,217,1,"SupabaseClient"],[241,34,217,1],[242,0,217,1],[242,3]],"functionMap":{"names":["<global>","SupabaseClient","constructor","Proxy$argument_1.get","get__functions","from","schema","rpc","channel","getChannels","removeChannel","removeAllChannels","_getAccessToken","_initSupabaseAuthClient","Object.keys.some$argument_0","_initRealtimeClient","_listenForAuthEvents","auth.onAuthStateChange$argument_0","_handleTokenChanged"],"mappings":"AAA;eCa;ICc;qBC6B;iBDE;KDc;IGI;KHK;IIM;KJE;IKS;KLE;IMyB;KNM;IOQ;KPE;IQI;KRE;ISO;KTE;IUI;KVE;IWC;KXO;IYC;yECoB,8CD;KZE;IcC;KdE;IeC;iDCC;SDE;KfE;IiBC;KjBY;CDC"}},"type":"js/module"}]}