{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseBase","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"jktBven9cFmiXr10q2uuMiBaNBg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseKey","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YYsVumDWjUPySlBONhl8so2wff4=","exportNames":["*"]}},{"name":"./notifyManager.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":51,"index":75}}],"key":"sE8Jk2BSATSKXEwal1fu77sfV3E=","exportNames":["*"]}},{"name":"./mutation.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":41,"index":117}}],"key":"DEeb5DG8JiSOn+k43YR2tCf/fEk=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":118},"end":{"line":4,"column":49,"index":167}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}},{"name":"./subscribable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":168},"end":{"line":5,"column":49,"index":217}}],"key":"f0fxTGZggQRtb//cHMvH9AHIWOw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MutationCache = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _classPrivateFieldLooseBase2 = _interopRequireDefault(require(_dependencyMap[6], \"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n  var _classPrivateFieldLooseKey2 = _interopRequireDefault(require(_dependencyMap[7], \"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n  var _notifyManager = require(_dependencyMap[8], \"./notifyManager.js\");\n  var _mutation = require(_dependencyMap[9], \"./mutation.js\");\n  var _utils = require(_dependencyMap[10], \"./utils.js\");\n  var _subscribable = require(_dependencyMap[11], \"./subscribable.js\");\n  var _mutations, _scopes, _mutationId; // src/mutationCache.ts\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var MutationCache = exports.MutationCache = (_mutations = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"mutations\"), _scopes = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"scopes\"), _mutationId = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"mutationId\"), /*#__PURE__*/function (_Subscribable) {\n    function MutationCache() {\n      var _this;\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      (0, _classCallCheck2.default)(this, MutationCache);\n      _this = _callSuper(this, MutationCache);\n      Object.defineProperty(_this, _mutations, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(_this, _scopes, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(_this, _mutationId, {\n        writable: true,\n        value: void 0\n      });\n      _this.config = config;\n      (0, _classPrivateFieldLooseBase2.default)(_this, _mutations)[_mutations] = /* @__PURE__ */new Set();\n      (0, _classPrivateFieldLooseBase2.default)(_this, _scopes)[_scopes] = /* @__PURE__ */new Map();\n      (0, _classPrivateFieldLooseBase2.default)(_this, _mutationId)[_mutationId] = 0;\n      return _this;\n    }\n    (0, _inherits2.default)(MutationCache, _Subscribable);\n    return (0, _createClass2.default)(MutationCache, [{\n      key: \"build\",\n      value: function build(client, options, state) {\n        var mutation = new _mutation.Mutation({\n          mutationCache: this,\n          mutationId: ++(0, _classPrivateFieldLooseBase2.default)(this, _mutationId)[_mutationId],\n          options: client.defaultMutationOptions(options),\n          state\n        });\n        this.add(mutation);\n        return mutation;\n      }\n    }, {\n      key: \"add\",\n      value: function add(mutation) {\n        (0, _classPrivateFieldLooseBase2.default)(this, _mutations)[_mutations].add(mutation);\n        var scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          var scopedMutations = (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].get(scope);\n          if (scopedMutations) {\n            scopedMutations.push(mutation);\n          } else {\n            (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].set(scope, [mutation]);\n          }\n        }\n        this.notify({\n          type: \"added\",\n          mutation\n        });\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(mutation) {\n        if ((0, _classPrivateFieldLooseBase2.default)(this, _mutations)[_mutations].delete(mutation)) {\n          var scope = scopeFor(mutation);\n          if (typeof scope === \"string\") {\n            var scopedMutations = (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].get(scope);\n            if (scopedMutations) {\n              if (scopedMutations.length > 1) {\n                var index = scopedMutations.indexOf(mutation);\n                if (index !== -1) {\n                  scopedMutations.splice(index, 1);\n                }\n              } else if (scopedMutations[0] === mutation) {\n                (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].delete(scope);\n              }\n            }\n          }\n        }\n        this.notify({\n          type: \"removed\",\n          mutation\n        });\n      }\n    }, {\n      key: \"canRun\",\n      value: function canRun(mutation) {\n        var scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          var mutationsWithSameScope = (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].get(scope);\n          var firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n          return !firstPendingMutation || firstPendingMutation === mutation;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      key: \"runNext\",\n      value: function runNext(mutation) {\n        var scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          var foundMutation = (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].get(scope)?.find(m => m !== mutation && m.state.isPaused);\n          return foundMutation?.continue() ?? Promise.resolve();\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        _notifyManager.notifyManager.batch(() => {\n          (0, _classPrivateFieldLooseBase2.default)(this, _mutations)[_mutations].forEach(mutation => {\n            this.notify({\n              type: \"removed\",\n              mutation\n            });\n          });\n          (0, _classPrivateFieldLooseBase2.default)(this, _mutations)[_mutations].clear();\n          (0, _classPrivateFieldLooseBase2.default)(this, _scopes)[_scopes].clear();\n        });\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll() {\n        return Array.from((0, _classPrivateFieldLooseBase2.default)(this, _mutations)[_mutations]);\n      }\n    }, {\n      key: \"find\",\n      value: function find(filters) {\n        var defaultedFilters = {\n          exact: true,\n          ...filters\n        };\n        return this.getAll().find(mutation => (0, _utils.matchMutation)(defaultedFilters, mutation));\n      }\n    }, {\n      key: \"findAll\",\n      value: function findAll() {\n        var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return this.getAll().filter(mutation => (0, _utils.matchMutation)(filters, mutation));\n      }\n    }, {\n      key: \"notify\",\n      value: function notify(event) {\n        _notifyManager.notifyManager.batch(() => {\n          this.listeners.forEach(listener => {\n            listener(event);\n          });\n        });\n      }\n    }, {\n      key: \"resumePausedMutations\",\n      value: function resumePausedMutations() {\n        var pausedMutations = this.getAll().filter(x => x.state.isPaused);\n        return _notifyManager.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utils.noop))));\n      }\n    }]);\n  }(_subscribable.Subscribable));\n  function scopeFor(mutation) {\n    return mutation.options.scope?.id;\n  }\n});","lineCount":177,"map":[[14,2,2,0],[14,6,2,0,"_notifyManager"],[14,20,2,0],[14,23,2,0,"require"],[14,30,2,0],[14,31,2,0,"_dependencyMap"],[14,45,2,0],[15,2,3,0],[15,6,3,0,"_mutation"],[15,15,3,0],[15,18,3,0,"require"],[15,25,3,0],[15,26,3,0,"_dependencyMap"],[15,40,3,0],[16,2,4,0],[16,6,4,0,"_utils"],[16,12,4,0],[16,15,4,0,"require"],[16,22,4,0],[16,23,4,0,"_dependencyMap"],[16,37,4,0],[17,2,5,0],[17,6,5,0,"_subscribable"],[17,19,5,0],[17,22,5,0,"require"],[17,29,5,0],[17,30,5,0,"_dependencyMap"],[17,44,5,0],[18,2,5,49],[18,6,5,49,"_mutations"],[18,16,5,49],[18,18,5,49,"_scopes"],[18,25,5,49],[18,27,5,49,"_mutationId"],[18,38,5,49],[18,40,1,0],[19,2,1,0],[19,11,1,0,"_callSuper"],[19,22,1,0,"t"],[19,23,1,0],[19,25,1,0,"o"],[19,26,1,0],[19,28,1,0,"e"],[19,29,1,0],[19,40,1,0,"o"],[19,41,1,0],[19,48,1,0,"_getPrototypeOf2"],[19,64,1,0],[19,65,1,0,"default"],[19,72,1,0],[19,74,1,0,"o"],[19,75,1,0],[19,82,1,0,"_possibleConstructorReturn2"],[19,109,1,0],[19,110,1,0,"default"],[19,117,1,0],[19,119,1,0,"t"],[19,120,1,0],[19,122,1,0,"_isNativeReflectConstruct"],[19,147,1,0],[19,152,1,0,"Reflect"],[19,159,1,0],[19,160,1,0,"construct"],[19,169,1,0],[19,170,1,0,"o"],[19,171,1,0],[19,173,1,0,"e"],[19,174,1,0],[19,186,1,0,"_getPrototypeOf2"],[19,202,1,0],[19,203,1,0,"default"],[19,210,1,0],[19,212,1,0,"t"],[19,213,1,0],[19,215,1,0,"constructor"],[19,226,1,0],[19,230,1,0,"o"],[19,231,1,0],[19,232,1,0,"apply"],[19,237,1,0],[19,238,1,0,"t"],[19,239,1,0],[19,241,1,0,"e"],[19,242,1,0],[20,2,1,0],[20,11,1,0,"_isNativeReflectConstruct"],[20,37,1,0],[20,51,1,0,"t"],[20,52,1,0],[20,56,1,0,"Boolean"],[20,63,1,0],[20,64,1,0,"prototype"],[20,73,1,0],[20,74,1,0,"valueOf"],[20,81,1,0],[20,82,1,0,"call"],[20,86,1,0],[20,87,1,0,"Reflect"],[20,94,1,0],[20,95,1,0,"construct"],[20,104,1,0],[20,105,1,0,"Boolean"],[20,112,1,0],[20,145,1,0,"t"],[20,146,1,0],[20,159,1,0,"_isNativeReflectConstruct"],[20,184,1,0],[20,196,1,0,"_isNativeReflectConstruct"],[20,197,1,0],[20,210,1,0,"t"],[20,211,1,0],[21,2,6,0],[21,6,6,4,"MutationCache"],[21,19,6,17],[21,22,6,17,"exports"],[21,29,6,17],[21,30,6,17,"MutationCache"],[21,43,6,17],[21,47,6,17,"_mutations"],[21,57,6,17],[21,77,6,17,"_classPrivateFieldLooseKey2"],[21,104,6,17],[21,105,6,17,"default"],[21,112,6,17],[21,128,6,17,"_scopes"],[21,135,6,17],[21,155,6,17,"_classPrivateFieldLooseKey2"],[21,182,6,17],[21,183,6,17,"default"],[21,190,6,17],[21,203,6,17,"_mutationId"],[21,214,6,17],[21,234,6,17,"_classPrivateFieldLooseKey2"],[21,261,6,17],[21,262,6,17,"default"],[21,269,6,17],[21,309,6,17,"_Subscribable"],[21,322,6,17],[22,4,7,2],[22,13,7,2,"MutationCache"],[22,27,7,2],[22,29,7,27],[23,6,7,27],[23,10,7,27,"_this"],[23,15,7,27],[24,6,7,27],[24,10,7,14,"config"],[24,16,7,20],[24,19,7,20,"arguments"],[24,28,7,20],[24,29,7,20,"length"],[24,35,7,20],[24,43,7,20,"arguments"],[24,52,7,20],[24,60,7,20,"undefined"],[24,69,7,20],[24,72,7,20,"arguments"],[24,81,7,20],[24,87,7,23],[24,88,7,24],[24,89,7,25],[25,6,7,25],[25,10,7,25,"_classCallCheck2"],[25,26,7,25],[25,27,7,25,"default"],[25,34,7,25],[25,42,7,25,"MutationCache"],[25,55,7,25],[26,6,8,4,"_this"],[26,11,8,4],[26,14,8,4,"_callSuper"],[26,24,8,4],[26,31,8,4,"MutationCache"],[26,44,8,4],[27,6,8,12,"Object"],[27,12,8,12],[27,13,8,12,"defineProperty"],[27,27,8,12],[27,28,8,12,"_this"],[27,33,8,12],[27,35,8,12,"_mutations"],[27,45,8,12],[28,8,8,12,"writable"],[28,16,8,12],[29,8,8,12,"value"],[29,13,8,12],[30,6,8,12],[31,6,8,12,"Object"],[31,12,8,12],[31,13,8,12,"defineProperty"],[31,27,8,12],[31,28,8,12,"_this"],[31,33,8,12],[31,35,8,12,"_scopes"],[31,42,8,12],[32,8,8,12,"writable"],[32,16,8,12],[33,8,8,12,"value"],[33,13,8,12],[34,6,8,12],[35,6,8,12,"Object"],[35,12,8,12],[35,13,8,12,"defineProperty"],[35,27,8,12],[35,28,8,12,"_this"],[35,33,8,12],[35,35,8,12,"_mutationId"],[35,46,8,12],[36,8,8,12,"writable"],[36,16,8,12],[37,8,8,12,"value"],[37,13,8,12],[38,6,8,12],[39,6,9,4,"_this"],[39,11,9,4],[39,12,9,9,"config"],[39,18,9,15],[39,21,9,18,"config"],[39,27,9,24],[40,6,10,4],[40,10,10,4,"_classPrivateFieldLooseBase2"],[40,38,10,4],[40,39,10,4,"default"],[40,46,10,4],[40,48,10,4,"_this"],[40,53,10,4],[40,55,10,4,"_mutations"],[40,65,10,4],[40,67,10,4,"_mutations"],[40,77,10,4],[40,81,10,22],[40,96,10,38],[40,100,10,42,"Set"],[40,103,10,45],[40,104,10,46],[40,105,10,47],[41,6,11,4],[41,10,11,4,"_classPrivateFieldLooseBase2"],[41,38,11,4],[41,39,11,4,"default"],[41,46,11,4],[41,48,11,4,"_this"],[41,53,11,4],[41,55,11,4,"_scopes"],[41,62,11,4],[41,64,11,4,"_scopes"],[41,71,11,4],[41,75,11,19],[41,90,11,35],[41,94,11,39,"Map"],[41,97,11,42],[41,98,11,43],[41,99,11,44],[42,6,12,4],[42,10,12,4,"_classPrivateFieldLooseBase2"],[42,38,12,4],[42,39,12,4,"default"],[42,46,12,4],[42,48,12,4,"_this"],[42,53,12,4],[42,55,12,4,"_mutationId"],[42,66,12,4],[42,68,12,4,"_mutationId"],[42,79,12,4],[42,83,12,23],[42,84,12,24],[43,6,12,25],[43,13,12,25,"_this"],[43,18,12,25],[44,4,13,2],[45,4,13,3],[45,8,13,3,"_inherits2"],[45,18,13,3],[45,19,13,3,"default"],[45,26,13,3],[45,28,13,3,"MutationCache"],[45,41,13,3],[45,43,13,3,"_Subscribable"],[45,56,13,3],[46,4,13,3],[46,15,13,3,"_createClass2"],[46,28,13,3],[46,29,13,3,"default"],[46,36,13,3],[46,38,13,3,"MutationCache"],[46,51,13,3],[47,6,13,3,"key"],[47,9,13,3],[48,6,13,3,"value"],[48,11,13,3],[48,13,17,2],[48,22,17,2,"build"],[48,27,17,7,"build"],[48,28,17,8,"client"],[48,34,17,14],[48,36,17,16,"options"],[48,43,17,23],[48,45,17,25,"state"],[48,50,17,30],[48,52,17,32],[49,8,18,4],[49,12,18,10,"mutation"],[49,20,18,18],[49,23,18,21],[49,27,18,25,"Mutation"],[49,45,18,33],[49,46,18,34],[50,10,19,6,"mutationCache"],[50,23,19,19],[50,25,19,21],[50,29,19,25],[51,10,20,6,"mutationId"],[51,20,20,16],[51,22,20,18],[51,28,20,18,"_classPrivateFieldLooseBase2"],[51,56,20,18],[51,57,20,18,"default"],[51,64,20,18],[51,66,20,20],[51,70,20,24],[51,72,20,24,"_mutationId"],[51,83,20,24],[51,85,20,24,"_mutationId"],[51,96,20,24],[51,97,20,36],[52,10,21,6,"options"],[52,17,21,13],[52,19,21,15,"client"],[52,25,21,21],[52,26,21,22,"defaultMutationOptions"],[52,48,21,44],[52,49,21,45,"options"],[52,56,21,52],[52,57,21,53],[53,10,22,6,"state"],[54,8,23,4],[54,9,23,5],[54,10,23,6],[55,8,24,4],[55,12,24,8],[55,13,24,9,"add"],[55,16,24,12],[55,17,24,13,"mutation"],[55,25,24,21],[55,26,24,22],[56,8,25,4],[56,15,25,11,"mutation"],[56,23,25,19],[57,6,26,2],[58,4,26,3],[59,6,26,3,"key"],[59,9,26,3],[60,6,26,3,"value"],[60,11,26,3],[60,13,27,2],[60,22,27,2,"add"],[60,25,27,5,"add"],[60,26,27,6,"mutation"],[60,34,27,14],[60,36,27,16],[61,8,28,4],[61,12,28,4,"_classPrivateFieldLooseBase2"],[61,40,28,4],[61,41,28,4,"default"],[61,48,28,4],[61,54,28,8],[61,56,28,8,"_mutations"],[61,66,28,8],[61,68,28,8,"_mutations"],[61,78,28,8],[61,80,28,20,"add"],[61,83,28,23],[61,84,28,24,"mutation"],[61,92,28,32],[61,93,28,33],[62,8,29,4],[62,12,29,10,"scope"],[62,17,29,15],[62,20,29,18,"scopeFor"],[62,28,29,26],[62,29,29,27,"mutation"],[62,37,29,35],[62,38,29,36],[63,8,30,4],[63,12,30,8],[63,19,30,15,"scope"],[63,24,30,20],[63,29,30,25],[63,37,30,33],[63,39,30,35],[64,10,31,6],[64,14,31,12,"scopedMutations"],[64,29,31,27],[64,32,31,30],[64,36,31,30,"_classPrivateFieldLooseBase2"],[64,64,31,30],[64,65,31,30,"default"],[64,72,31,30],[64,78,31,34],[64,80,31,34,"_scopes"],[64,87,31,34],[64,89,31,34,"_scopes"],[64,96,31,34],[64,98,31,43,"get"],[64,101,31,46],[64,102,31,47,"scope"],[64,107,31,52],[64,108,31,53],[65,10,32,6],[65,14,32,10,"scopedMutations"],[65,29,32,25],[65,31,32,27],[66,12,33,8,"scopedMutations"],[66,27,33,23],[66,28,33,24,"push"],[66,32,33,28],[66,33,33,29,"mutation"],[66,41,33,37],[66,42,33,38],[67,10,34,6],[67,11,34,7],[67,17,34,13],[68,12,35,8],[68,16,35,8,"_classPrivateFieldLooseBase2"],[68,44,35,8],[68,45,35,8,"default"],[68,52,35,8],[68,58,35,12],[68,60,35,12,"_scopes"],[68,67,35,12],[68,69,35,12,"_scopes"],[68,76,35,12],[68,78,35,21,"set"],[68,81,35,24],[68,82,35,25,"scope"],[68,87,35,30],[68,89,35,32],[68,90,35,33,"mutation"],[68,98,35,41],[68,99,35,42],[68,100,35,43],[69,10,36,6],[70,8,37,4],[71,8,38,4],[71,12,38,8],[71,13,38,9,"notify"],[71,19,38,15],[71,20,38,16],[72,10,38,18,"type"],[72,14,38,22],[72,16,38,24],[72,23,38,31],[73,10,38,33,"mutation"],[74,8,38,42],[74,9,38,43],[74,10,38,44],[75,6,39,2],[76,4,39,3],[77,6,39,3,"key"],[77,9,39,3],[78,6,39,3,"value"],[78,11,39,3],[78,13,40,2],[78,22,40,2,"remove"],[78,28,40,8,"remove"],[78,29,40,9,"mutation"],[78,37,40,17],[78,39,40,19],[79,8,41,4],[79,12,41,8],[79,16,41,8,"_classPrivateFieldLooseBase2"],[79,44,41,8],[79,45,41,8,"default"],[79,52,41,8],[79,58,41,12],[79,60,41,12,"_mutations"],[79,70,41,12],[79,72,41,12,"_mutations"],[79,82,41,12],[79,84,41,24,"delete"],[79,90,41,30],[79,91,41,31,"mutation"],[79,99,41,39],[79,100,41,40],[79,102,41,42],[80,10,42,6],[80,14,42,12,"scope"],[80,19,42,17],[80,22,42,20,"scopeFor"],[80,30,42,28],[80,31,42,29,"mutation"],[80,39,42,37],[80,40,42,38],[81,10,43,6],[81,14,43,10],[81,21,43,17,"scope"],[81,26,43,22],[81,31,43,27],[81,39,43,35],[81,41,43,37],[82,12,44,8],[82,16,44,14,"scopedMutations"],[82,31,44,29],[82,34,44,32],[82,38,44,32,"_classPrivateFieldLooseBase2"],[82,66,44,32],[82,67,44,32,"default"],[82,74,44,32],[82,80,44,36],[82,82,44,36,"_scopes"],[82,89,44,36],[82,91,44,36,"_scopes"],[82,98,44,36],[82,100,44,45,"get"],[82,103,44,48],[82,104,44,49,"scope"],[82,109,44,54],[82,110,44,55],[83,12,45,8],[83,16,45,12,"scopedMutations"],[83,31,45,27],[83,33,45,29],[84,14,46,10],[84,18,46,14,"scopedMutations"],[84,33,46,29],[84,34,46,30,"length"],[84,40,46,36],[84,43,46,39],[84,44,46,40],[84,46,46,42],[85,16,47,12],[85,20,47,18,"index"],[85,25,47,23],[85,28,47,26,"scopedMutations"],[85,43,47,41],[85,44,47,42,"indexOf"],[85,51,47,49],[85,52,47,50,"mutation"],[85,60,47,58],[85,61,47,59],[86,16,48,12],[86,20,48,16,"index"],[86,25,48,21],[86,30,48,26],[86,31,48,27],[86,32,48,28],[86,34,48,30],[87,18,49,14,"scopedMutations"],[87,33,49,29],[87,34,49,30,"splice"],[87,40,49,36],[87,41,49,37,"index"],[87,46,49,42],[87,48,49,44],[87,49,49,45],[87,50,49,46],[88,16,50,12],[89,14,51,10],[89,15,51,11],[89,21,51,17],[89,25,51,21,"scopedMutations"],[89,40,51,36],[89,41,51,37],[89,42,51,38],[89,43,51,39],[89,48,51,44,"mutation"],[89,56,51,52],[89,58,51,54],[90,16,52,12],[90,20,52,12,"_classPrivateFieldLooseBase2"],[90,48,52,12],[90,49,52,12,"default"],[90,56,52,12],[90,62,52,16],[90,64,52,16,"_scopes"],[90,71,52,16],[90,73,52,16,"_scopes"],[90,80,52,16],[90,82,52,25,"delete"],[90,88,52,31],[90,89,52,32,"scope"],[90,94,52,37],[90,95,52,38],[91,14,53,10],[92,12,54,8],[93,10,55,6],[94,8,56,4],[95,8,57,4],[95,12,57,8],[95,13,57,9,"notify"],[95,19,57,15],[95,20,57,16],[96,10,57,18,"type"],[96,14,57,22],[96,16,57,24],[96,25,57,33],[97,10,57,35,"mutation"],[98,8,57,44],[98,9,57,45],[98,10,57,46],[99,6,58,2],[100,4,58,3],[101,6,58,3,"key"],[101,9,58,3],[102,6,58,3,"value"],[102,11,58,3],[102,13,59,2],[102,22,59,2,"canRun"],[102,28,59,8,"canRun"],[102,29,59,9,"mutation"],[102,37,59,17],[102,39,59,19],[103,8,60,4],[103,12,60,10,"scope"],[103,17,60,15],[103,20,60,18,"scopeFor"],[103,28,60,26],[103,29,60,27,"mutation"],[103,37,60,35],[103,38,60,36],[104,8,61,4],[104,12,61,8],[104,19,61,15,"scope"],[104,24,61,20],[104,29,61,25],[104,37,61,33],[104,39,61,35],[105,10,62,6],[105,14,62,12,"mutationsWithSameScope"],[105,36,62,34],[105,39,62,37],[105,43,62,37,"_classPrivateFieldLooseBase2"],[105,71,62,37],[105,72,62,37,"default"],[105,79,62,37],[105,85,62,41],[105,87,62,41,"_scopes"],[105,94,62,41],[105,96,62,41,"_scopes"],[105,103,62,41],[105,105,62,50,"get"],[105,108,62,53],[105,109,62,54,"scope"],[105,114,62,59],[105,115,62,60],[106,10,63,6],[106,14,63,12,"firstPendingMutation"],[106,34,63,32],[106,37,63,35,"mutationsWithSameScope"],[106,59,63,57],[106,61,63,59,"find"],[106,65,63,63],[106,66,64,9,"m"],[106,67,64,10],[106,71,64,15,"m"],[106,72,64,16],[106,73,64,17,"state"],[106,78,64,22],[106,79,64,23,"status"],[106,85,64,29],[106,90,64,34],[106,99,65,6],[106,100,65,7],[107,10,66,6],[107,17,66,13],[107,18,66,14,"firstPendingMutation"],[107,38,66,34],[107,42,66,38,"firstPendingMutation"],[107,62,66,58],[107,67,66,63,"mutation"],[107,75,66,71],[108,8,67,4],[108,9,67,5],[108,15,67,11],[109,10,68,6],[109,17,68,13],[109,21,68,17],[110,8,69,4],[111,6,70,2],[112,4,70,3],[113,6,70,3,"key"],[113,9,70,3],[114,6,70,3,"value"],[114,11,70,3],[114,13,71,2],[114,22,71,2,"runNext"],[114,29,71,9,"runNext"],[114,30,71,10,"mutation"],[114,38,71,18],[114,40,71,20],[115,8,72,4],[115,12,72,10,"scope"],[115,17,72,15],[115,20,72,18,"scopeFor"],[115,28,72,26],[115,29,72,27,"mutation"],[115,37,72,35],[115,38,72,36],[116,8,73,4],[116,12,73,8],[116,19,73,15,"scope"],[116,24,73,20],[116,29,73,25],[116,37,73,33],[116,39,73,35],[117,10,74,6],[117,14,74,12,"foundMutation"],[117,27,74,25],[117,30,74,28],[117,34,74,28,"_classPrivateFieldLooseBase2"],[117,62,74,28],[117,63,74,28,"default"],[117,70,74,28],[117,76,74,32],[117,78,74,32,"_scopes"],[117,85,74,32],[117,87,74,32,"_scopes"],[117,94,74,32],[117,96,74,41,"get"],[117,99,74,44],[117,100,74,45,"scope"],[117,105,74,50],[117,106,74,51],[117,108,74,53,"find"],[117,112,74,57],[117,113,74,59,"m"],[117,114,74,60],[117,118,74,65,"m"],[117,119,74,66],[117,124,74,71,"mutation"],[117,132,74,79],[117,136,74,83,"m"],[117,137,74,84],[117,138,74,85,"state"],[117,143,74,90],[117,144,74,91,"isPaused"],[117,152,74,99],[117,153,74,100],[118,10,75,6],[118,17,75,13,"foundMutation"],[118,30,75,26],[118,32,75,28,"continue"],[118,40,75,36],[118,41,75,37],[118,42,75,38],[118,46,75,42,"Promise"],[118,53,75,49],[118,54,75,50,"resolve"],[118,61,75,57],[118,62,75,58],[118,63,75,59],[119,8,76,4],[119,9,76,5],[119,15,76,11],[120,10,77,6],[120,17,77,13,"Promise"],[120,24,77,20],[120,25,77,21,"resolve"],[120,32,77,28],[120,33,77,29],[120,34,77,30],[121,8,78,4],[122,6,79,2],[123,4,79,3],[124,6,79,3,"key"],[124,9,79,3],[125,6,79,3,"value"],[125,11,79,3],[125,13,80,2],[125,22,80,2,"clear"],[125,27,80,7,"clear"],[125,28,80,7],[125,30,80,10],[126,8,81,4,"notifyManager"],[126,36,81,17],[126,37,81,18,"batch"],[126,42,81,23],[126,43,81,24],[126,49,81,30],[127,10,82,6],[127,14,82,6,"_classPrivateFieldLooseBase2"],[127,42,82,6],[127,43,82,6,"default"],[127,50,82,6],[127,56,82,10],[127,58,82,10,"_mutations"],[127,68,82,10],[127,70,82,10,"_mutations"],[127,80,82,10],[127,82,82,22,"forEach"],[127,89,82,29],[127,90,82,31,"mutation"],[127,98,82,39],[127,102,82,44],[128,12,83,8],[128,16,83,12],[128,17,83,13,"notify"],[128,23,83,19],[128,24,83,20],[129,14,83,22,"type"],[129,18,83,26],[129,20,83,28],[129,29,83,37],[130,14,83,39,"mutation"],[131,12,83,48],[131,13,83,49],[131,14,83,50],[132,10,84,6],[132,11,84,7],[132,12,84,8],[133,10,85,6],[133,14,85,6,"_classPrivateFieldLooseBase2"],[133,42,85,6],[133,43,85,6,"default"],[133,50,85,6],[133,56,85,10],[133,58,85,10,"_mutations"],[133,68,85,10],[133,70,85,10,"_mutations"],[133,80,85,10],[133,82,85,22,"clear"],[133,87,85,27],[133,88,85,28],[133,89,85,29],[134,10,86,6],[134,14,86,6,"_classPrivateFieldLooseBase2"],[134,42,86,6],[134,43,86,6,"default"],[134,50,86,6],[134,56,86,10],[134,58,86,10,"_scopes"],[134,65,86,10],[134,67,86,10,"_scopes"],[134,74,86,10],[134,76,86,19,"clear"],[134,81,86,24],[134,82,86,25],[134,83,86,26],[135,8,87,4],[135,9,87,5],[135,10,87,6],[136,6,88,2],[137,4,88,3],[138,6,88,3,"key"],[138,9,88,3],[139,6,88,3,"value"],[139,11,88,3],[139,13,89,2],[139,22,89,2,"getAll"],[139,28,89,8,"getAll"],[139,29,89,8],[139,31,89,11],[140,8,90,4],[140,15,90,11,"Array"],[140,20,90,16],[140,21,90,17,"from"],[140,25,90,21],[140,30,90,21,"_classPrivateFieldLooseBase2"],[140,58,90,21],[140,59,90,21,"default"],[140,66,90,21],[140,68,90,22],[140,72,90,26],[140,74,90,26,"_mutations"],[140,84,90,26],[140,86,90,26,"_mutations"],[140,96,90,26],[140,97,90,37],[140,98,90,38],[141,6,91,2],[142,4,91,3],[143,6,91,3,"key"],[143,9,91,3],[144,6,91,3,"value"],[144,11,91,3],[144,13,92,2],[144,22,92,2,"find"],[144,26,92,6,"find"],[144,27,92,7,"filters"],[144,34,92,14],[144,36,92,16],[145,8,93,4],[145,12,93,10,"defaultedFilters"],[145,28,93,26],[145,31,93,29],[146,10,93,31,"exact"],[146,15,93,36],[146,17,93,38],[146,21,93,42],[147,10,93,44],[147,13,93,47,"filters"],[148,8,93,55],[148,9,93,56],[149,8,94,4],[149,15,94,11],[149,19,94,15],[149,20,94,16,"getAll"],[149,26,94,22],[149,27,94,23],[149,28,94,24],[149,29,94,25,"find"],[149,33,94,29],[149,34,95,7,"mutation"],[149,42,95,15],[149,46,95,20],[149,50,95,20,"matchMutation"],[149,70,95,33],[149,72,95,34,"defaultedFilters"],[149,88,95,50],[149,90,95,52,"mutation"],[149,98,95,60],[149,99,96,4],[149,100,96,5],[150,6,97,2],[151,4,97,3],[152,6,97,3,"key"],[152,9,97,3],[153,6,97,3,"value"],[153,11,97,3],[153,13,98,2],[153,22,98,2,"findAll"],[153,29,98,9,"findAll"],[153,30,98,9],[153,32,98,24],[154,8,98,24],[154,12,98,10,"filters"],[154,19,98,17],[154,22,98,17,"arguments"],[154,31,98,17],[154,32,98,17,"length"],[154,38,98,17],[154,46,98,17,"arguments"],[154,55,98,17],[154,63,98,17,"undefined"],[154,72,98,17],[154,75,98,17,"arguments"],[154,84,98,17],[154,90,98,20],[154,91,98,21],[154,92,98,22],[155,8,99,4],[155,15,99,11],[155,19,99,15],[155,20,99,16,"getAll"],[155,26,99,22],[155,27,99,23],[155,28,99,24],[155,29,99,25,"filter"],[155,35,99,31],[155,36,99,33,"mutation"],[155,44,99,41],[155,48,99,46],[155,52,99,46,"matchMutation"],[155,72,99,59],[155,74,99,60,"filters"],[155,81,99,67],[155,83,99,69,"mutation"],[155,91,99,77],[155,92,99,78],[155,93,99,79],[156,6,100,2],[157,4,100,3],[158,6,100,3,"key"],[158,9,100,3],[159,6,100,3,"value"],[159,11,100,3],[159,13,101,2],[159,22,101,2,"notify"],[159,28,101,8,"notify"],[159,29,101,9,"event"],[159,34,101,14],[159,36,101,16],[160,8,102,4,"notifyManager"],[160,36,102,17],[160,37,102,18,"batch"],[160,42,102,23],[160,43,102,24],[160,49,102,30],[161,10,103,6],[161,14,103,10],[161,15,103,11,"listeners"],[161,24,103,20],[161,25,103,21,"forEach"],[161,32,103,28],[161,33,103,30,"listener"],[161,41,103,38],[161,45,103,43],[162,12,104,8,"listener"],[162,20,104,16],[162,21,104,17,"event"],[162,26,104,22],[162,27,104,23],[163,10,105,6],[163,11,105,7],[163,12,105,8],[164,8,106,4],[164,9,106,5],[164,10,106,6],[165,6,107,2],[166,4,107,3],[167,6,107,3,"key"],[167,9,107,3],[168,6,107,3,"value"],[168,11,107,3],[168,13,108,2],[168,22,108,2,"resumePausedMutations"],[168,43,108,23,"resumePausedMutations"],[168,44,108,23],[168,46,108,26],[169,8,109,4],[169,12,109,10,"pausedMutations"],[169,27,109,25],[169,30,109,28],[169,34,109,32],[169,35,109,33,"getAll"],[169,41,109,39],[169,42,109,40],[169,43,109,41],[169,44,109,42,"filter"],[169,50,109,48],[169,51,109,50,"x"],[169,52,109,51],[169,56,109,56,"x"],[169,57,109,57],[169,58,109,58,"state"],[169,63,109,63],[169,64,109,64,"isPaused"],[169,72,109,72],[169,73,109,73],[170,8,110,4],[170,15,110,11,"notifyManager"],[170,43,110,24],[170,44,110,25,"batch"],[170,49,110,30],[170,50,111,6],[170,56,111,12,"Promise"],[170,63,111,19],[170,64,111,20,"all"],[170,67,111,23],[170,68,112,8,"pausedMutations"],[170,83,112,23],[170,84,112,24,"map"],[170,87,112,27],[170,88,112,29,"mutation"],[170,96,112,37],[170,100,112,42,"mutation"],[170,108,112,50],[170,109,112,51,"continue"],[170,117,112,59],[170,118,112,60],[170,119,112,61],[170,120,112,62,"catch"],[170,125,112,67],[170,126,112,68,"noop"],[170,137,112,72],[170,138,112,73],[170,139,113,6],[170,140,114,4],[170,141,114,5],[171,6,115,2],[172,4,115,3],[173,2,115,3],[173,4,6,34,"Subscribable"],[173,30,6,46],[173,32,116,1],[174,2,117,0],[174,11,117,9,"scopeFor"],[174,19,117,17,"scopeFor"],[174,20,117,18,"mutation"],[174,28,117,26],[174,30,117,28],[175,4,118,2],[175,11,118,9,"mutation"],[175,19,118,17],[175,20,118,18,"options"],[175,27,118,25],[175,28,118,26,"scope"],[175,33,118,31],[175,35,118,33,"id"],[175,37,118,35],[176,2,119,0],[177,0,119,1],[177,3]],"functionMap":{"names":["<global>","MutationCache","MutationCache#constructor","MutationCache#build","MutationCache#add","MutationCache#remove","MutationCache#canRun","mutationsWithSameScope.find$argument_0","MutationCache#runNext","get.find$argument_0","MutationCache#clear","notifyManager.batch$argument_0","forEach$argument_0","MutationCache#getAll","MutationCache#find","getAll.find$argument_0","MutationCache#findAll","getAll.filter$argument_0","MutationCache#notify","listeners.forEach$argument_0","MutationCache#resumePausedMutations","pausedMutations.map$argument_0","scopeFor"],"mappings":"AAA;oBCK;ECC;GDM;EEI;GFS;EGC;GHY;EIC;GJkB;EKC;QCK,mCD;GLM;EOC;0DCG,yCD;GPK;ESC;wBCC;8BCC;ODE;KDG;GTC;EYC;GZE;EaC;MCG,uDD;GbE;EeC;gCCC,8CD;GfC;EiBC;wBPC;6BQC;ORE;KOC;GjBC;EmBC;iDHC,uBG;MTE;4BUC,6CV;OSC;GnBE;CDC;AsBC;CtBE"}},"type":"js/module"}]}