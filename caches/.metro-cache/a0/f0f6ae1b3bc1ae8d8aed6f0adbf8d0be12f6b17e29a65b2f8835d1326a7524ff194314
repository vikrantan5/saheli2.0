{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.convertPercentageColor = exports.RGB_RGBA_PATTERN = void 0;\n  var RGB_RGBA_PATTERN = exports.RGB_RGBA_PATTERN = /^rgba?\\(\\s*(100%|\\d{1,2}(\\.\\d+)?%)\\s*,\\s*(100%|\\d{1,2}(\\.\\d+)?%)\\s*,\\s*(100%|\\d{1,2}(\\.\\d+)?%)\\s*(?:,\\s*(1|0(\\.\\d+)?|100%|\\d{1,2}(\\.\\d+)?%)\\s*)?\\)$/;\n  var percentTo255 = percent => Math.round(parseFloat(percent) * 2.55);\n  var parseAlpha = alpha => alpha.endsWith('%') ? parseFloat(alpha) / 100 : parseFloat(alpha);\n  function parsePercentageRGBColor(color) {\n    var currentMatch = RGB_RGBA_PATTERN.exec(color);\n    if (!currentMatch) {\n      console.warn(`\"${color}\" is not a valid percentage rgb/rgba color`);\n      return color;\n    }\n    var red = currentMatch[1];\n    var green = currentMatch[3];\n    var blue = currentMatch[5];\n    var alpha = currentMatch[7];\n    var rgb = `${percentTo255(red)}, ${percentTo255(green)}, ${percentTo255(blue)}`;\n    return alpha ? `rgba(${rgb}, ${parseAlpha(alpha)})` : `rgb(${rgb})`;\n  }\n  var convertPercentageColor = color => {\n    if (typeof color !== 'string') {\n      return color;\n    }\n    var rgbColorWithoutSpaces = color.replace(/\\s/g, '');\n    var isPercentageRgb = RGB_RGBA_PATTERN.test(rgbColorWithoutSpaces);\n    return isPercentageRgb ? parsePercentageRGBColor(rgbColorWithoutSpaces) : color;\n  };\n  exports.convertPercentageColor = convertPercentageColor;\n});","lineCount":31,"map":[[6,2,3,7],[6,6,3,13,"RGB_RGBA_PATTERN"],[6,22,3,29],[6,25,3,29,"exports"],[6,32,3,29],[6,33,3,29,"RGB_RGBA_PATTERN"],[6,49,3,29],[6,52,4,2],[6,201,4,151],[7,2,6,0],[7,6,6,6,"percentTo255"],[7,18,6,18],[7,21,6,22,"percent"],[7,28,6,37],[7,32,7,2,"Math"],[7,36,7,6],[7,37,7,7,"round"],[7,42,7,12],[7,43,7,13,"parseFloat"],[7,53,7,23],[7,54,7,24,"percent"],[7,61,7,31],[7,62,7,32],[7,65,7,35],[7,69,7,39],[7,70,7,40],[8,2,9,0],[8,6,9,6,"parseAlpha"],[8,16,9,16],[8,19,9,20,"alpha"],[8,24,9,33],[8,28,10,2,"alpha"],[8,33,10,7],[8,34,10,8,"endsWith"],[8,42,10,16],[8,43,10,17],[8,46,10,20],[8,47,10,21],[8,50,10,24,"parseFloat"],[8,60,10,34],[8,61,10,35,"alpha"],[8,66,10,40],[8,67,10,41],[8,70,10,44],[8,73,10,47],[8,76,10,50,"parseFloat"],[8,86,10,60],[8,87,10,61,"alpha"],[8,92,10,66],[8,93,10,67],[9,2,12,0],[9,11,12,9,"parsePercentageRGBColor"],[9,34,12,32,"parsePercentageRGBColor"],[9,35,12,33,"color"],[9,40,12,46],[9,42,12,56],[10,4,13,2],[10,8,13,8,"currentMatch"],[10,20,13,20],[10,23,13,23,"RGB_RGBA_PATTERN"],[10,39,13,39],[10,40,13,40,"exec"],[10,44,13,44],[10,45,13,45,"color"],[10,50,13,50],[10,51,13,51],[11,4,15,2],[11,8,15,6],[11,9,15,7,"currentMatch"],[11,21,15,19],[11,23,15,21],[12,6,16,4,"console"],[12,13,16,11],[12,14,16,12,"warn"],[12,18,16,16],[12,19,16,17],[12,23,16,21,"color"],[12,28,16,26],[12,72,16,70],[12,73,16,71],[13,6,17,4],[13,13,17,11,"color"],[13,18,17,16],[14,4,18,2],[15,4,20,2],[15,8,20,8,"red"],[15,11,20,11],[15,14,20,14,"currentMatch"],[15,26,20,26],[15,27,20,27],[15,28,20,28],[15,29,20,29],[16,4,21,2],[16,8,21,8,"green"],[16,13,21,13],[16,16,21,16,"currentMatch"],[16,28,21,28],[16,29,21,29],[16,30,21,30],[16,31,21,31],[17,4,22,2],[17,8,22,8,"blue"],[17,12,22,12],[17,15,22,15,"currentMatch"],[17,27,22,27],[17,28,22,28],[17,29,22,29],[17,30,22,30],[18,4,23,2],[18,8,23,8,"alpha"],[18,13,23,13],[18,16,23,16,"currentMatch"],[18,28,23,28],[18,29,23,29],[18,30,23,30],[18,31,23,31],[19,4,25,2],[19,8,25,8,"rgb"],[19,11,25,11],[19,14,25,14],[19,17,25,17,"percentTo255"],[19,29,25,29],[19,30,25,30,"red"],[19,33,25,33],[19,34,25,34],[19,39,25,39,"percentTo255"],[19,51,25,51],[19,52,25,52,"green"],[19,57,25,57],[19,58,25,58],[19,63,25,63,"percentTo255"],[19,75,25,75],[19,76,26,4,"blue"],[19,80,27,2],[19,81,27,3],[19,83,27,5],[20,4,29,2],[20,11,29,9,"alpha"],[20,16,29,14],[20,19,29,17],[20,27,29,25,"rgb"],[20,30,29,28],[20,35,29,33,"parseAlpha"],[20,45,29,43],[20,46,29,44,"alpha"],[20,51,29,49],[20,52,29,50],[20,55,29,53],[20,58,29,56],[20,65,29,63,"rgb"],[20,68,29,66],[20,71,29,69],[21,2,30,0],[22,2,32,7],[22,6,32,13,"convertPercentageColor"],[22,28,32,35],[22,31,32,39,"color"],[22,36,32,56],[22,40,32,61],[23,4,33,2],[23,8,33,6],[23,15,33,13,"color"],[23,20,33,18],[23,25,33,23],[23,33,33,31],[23,35,33,33],[24,6,34,4],[24,13,34,11,"color"],[24,18,34,16],[25,4,35,2],[26,4,36,2],[26,8,36,8,"rgbColorWithoutSpaces"],[26,29,36,29],[26,32,36,32,"color"],[26,37,36,37],[26,38,36,38,"replace"],[26,45,36,45],[26,46,36,46],[26,51,36,51],[26,53,36,53],[26,55,36,55],[26,56,36,56],[27,4,37,2],[27,8,37,8,"isPercentageRgb"],[27,23,37,23],[27,26,37,26,"RGB_RGBA_PATTERN"],[27,42,37,42],[27,43,37,43,"test"],[27,47,37,47],[27,48,37,48,"rgbColorWithoutSpaces"],[27,69,37,69],[27,70,37,70],[28,4,38,2],[28,11,38,9,"isPercentageRgb"],[28,26,38,24],[28,29,39,6,"parsePercentageRGBColor"],[28,52,39,29],[28,53,39,30,"rgbColorWithoutSpaces"],[28,74,39,51],[28,75,39,52],[28,78,40,6,"color"],[28,83,40,11],[29,2,41,0],[29,3,41,1],[30,2,41,2,"exports"],[30,9,41,2],[30,10,41,2,"convertPercentageColor"],[30,32,41,2],[30,35,41,2,"convertPercentageColor"],[30,57,41,2],[31,0,41,2],[31,3]],"functionMap":{"names":["<global>","percentTo255","parseAlpha","parsePercentageRGBColor","convertPercentageColor"],"mappings":"AAA;qBCK;wCDC;mBEE;mEFC;AGE;CHkB;sCIE;CJS"}},"type":"js/module"}]}