{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":201},"end":{"line":4,"column":32,"index":217}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isPlainObject = exports.recursiveToCamel = exports.resolveResponse = exports.resolveFetch = void 0;\n  var tslib_1 = require(_dependencyMap[1], \"tslib\");\n  var resolveFetch = customFetch => {\n    var _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return Promise.resolve(`${'@supabase/node-fetch'}`).then(s => tslib_1.__importStar(function (line) {\n          throw new Error('Dynamic require defined at line ' + line + '; not supported by Metro');\n        }(11))).then(_ref => {\n          var fetch = _ref.default;\n          return fetch(...args);\n        });\n      };\n    } else {\n      _fetch = fetch;\n    }\n    return function () {\n      return _fetch(...arguments);\n    };\n  };\n  exports.resolveFetch = resolveFetch;\n  var resolveResponse = () => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n      // @ts-ignore\n      return (yield Promise.resolve(`${'@supabase/node-fetch'}`).then(s => tslib_1.__importStar(function (line) {\n        throw new Error('Dynamic require defined at line ' + line + '; not supported by Metro');\n      }(22)))).Response;\n    }\n    return Response;\n  });\n  exports.resolveResponse = resolveResponse;\n  var recursiveToCamel = item => {\n    if (Array.isArray(item)) {\n      return item.map(el => (0, exports.recursiveToCamel)(el));\n    } else if (typeof item === 'function' || item !== Object(item)) {\n      return item;\n    }\n    var result = {};\n    Object.entries(item).forEach(_ref2 => {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n      var newKey = key.replace(/([-_][a-z])/gi, c => c.toUpperCase().replace(/[-_]/g, ''));\n      result[newKey] = (0, exports.recursiveToCamel)(value);\n    });\n    return result;\n  };\n  exports.recursiveToCamel = recursiveToCamel;\n  /**\n   * Determine if input is a plain object\n   * An object is plain if it's created by either {}, new Object(), or Object.create(null)\n   * source: https://github.com/sindresorhus/is-plain-obj\n   */\n  var isPlainObject = value => {\n    if (typeof value !== 'object' || value === null) {\n      return false;\n    }\n    var prototype = Object.getPrototypeOf(value);\n    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n  };\n  exports.isPlainObject = isPlainObject;\n});","lineCount":74,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"isPlainObject"],[8,23,3,21],[8,26,3,24,"exports"],[8,33,3,31],[8,34,3,32,"recursiveToCamel"],[8,50,3,48],[8,53,3,51,"exports"],[8,60,3,58],[8,61,3,59,"resolveResponse"],[8,76,3,74],[8,79,3,77,"exports"],[8,86,3,84],[8,87,3,85,"resolveFetch"],[8,99,3,97],[8,102,3,100],[8,107,3,105],[8,108,3,106],[9,2,4,0],[9,6,4,6,"tslib_1"],[9,13,4,13],[9,16,4,16,"require"],[9,23,4,23],[9,24,4,23,"_dependencyMap"],[9,38,4,23],[9,50,4,31],[9,51,4,32],[10,2,5,0],[10,6,5,6,"resolveFetch"],[10,18,5,18],[10,21,5,22,"customFetch"],[10,32,5,33],[10,36,5,38],[11,4,6,4],[11,8,6,8,"_fetch"],[11,14,6,14],[12,4,7,4],[12,8,7,8,"customFetch"],[12,19,7,19],[12,21,7,21],[13,6,8,8,"_fetch"],[13,12,8,14],[13,15,8,17,"customFetch"],[13,26,8,28],[14,4,9,4],[14,5,9,5],[14,11,10,9],[14,15,10,13],[14,22,10,20,"fetch"],[14,27,10,25],[14,32,10,30],[14,43,10,41],[14,45,10,43],[15,6,11,8,"_fetch"],[15,12,11,14],[15,15,11,17],[15,24,11,17,"_fetch"],[15,25,11,17],[16,8,11,17],[16,17,11,17,"_len"],[16,21,11,17],[16,24,11,17,"arguments"],[16,33,11,17],[16,34,11,17,"length"],[16,40,11,17],[16,42,11,21,"args"],[16,46,11,25],[16,53,11,25,"Array"],[16,58,11,25],[16,59,11,25,"_len"],[16,63,11,25],[16,66,11,25,"_key"],[16,70,11,25],[16,76,11,25,"_key"],[16,80,11,25],[16,83,11,25,"_len"],[16,87,11,25],[16,89,11,25,"_key"],[16,93,11,25],[17,10,11,21,"args"],[17,14,11,25],[17,15,11,25,"_key"],[17,19,11,25],[17,23,11,25,"arguments"],[17,32,11,25],[17,33,11,25,"_key"],[17,37,11,25],[18,8,11,25],[19,8,11,25],[19,15,11,30,"Promise"],[19,22,11,37],[19,23,11,38,"resolve"],[19,30,11,45],[19,31,11,46],[19,34,11,49],[19,56,11,71],[19,58,11,73],[19,59,11,74],[19,60,11,75,"then"],[19,64,11,79],[19,65,11,80,"s"],[19,66,11,81],[19,70,11,85,"tslib_1"],[19,77,11,92],[19,78,11,93,"__importStar"],[19,90,11,105],[19,101,11,105,"line"],[19,105,11,105],[20,10,11,105],[20,20,11,105,"Error"],[20,25,11,105],[20,63,11,105,"line"],[20,67,11,105],[21,8,11,105],[21,13,11,116],[21,14,11,117],[21,15,11,118],[21,16,11,119,"then"],[21,20,11,123],[21,21,11,124,"_ref"],[21,25,11,124],[22,10,11,124],[22,14,11,136,"fetch"],[22,19,11,141],[22,22,11,141,"_ref"],[22,26,11,141],[22,27,11,127,"default"],[22,34,11,134],[23,10,11,134],[23,17,11,148,"fetch"],[23,22,11,153],[23,23,11,154],[23,26,11,157,"args"],[23,30,11,161],[23,31,11,162],[24,8,11,162],[24,10,11,163],[25,6,11,163],[26,4,12,4],[26,5,12,5],[26,11,13,9],[27,6,14,8,"_fetch"],[27,12,14,14],[27,15,14,17,"fetch"],[27,20,14,22],[28,4,15,4],[29,4,16,4],[29,11,16,11],[30,6,16,11],[30,13,16,24,"_fetch"],[30,19,16,30],[30,20,16,31],[30,23,16,31,"arguments"],[30,32,16,38],[30,33,16,39],[31,4,16,39],[32,2,17,0],[32,3,17,1],[33,2,18,0,"exports"],[33,9,18,7],[33,10,18,8,"resolveFetch"],[33,22,18,20],[33,25,18,23,"resolveFetch"],[33,37,18,35],[34,2,19,0],[34,6,19,6,"resolveResponse"],[34,21,19,21],[34,24,19,24,"resolveResponse"],[34,25,19,24],[34,30,19,30,"tslib_1"],[34,37,19,37],[34,38,19,38,"__awaiter"],[34,47,19,47],[34,48,19,48],[34,53,19,53],[34,54,19,54],[34,56,19,56],[34,61,19,61],[34,62,19,62],[34,64,19,64],[34,69,19,69],[34,70,19,70],[34,72,19,72],[34,85,19,85],[35,4,20,4],[35,8,20,8],[35,15,20,15,"Response"],[35,23,20,23],[35,28,20,28],[35,39,20,39],[35,41,20,41],[36,6,21,8],[37,6,22,8],[37,13,22,15],[37,14,22,16],[37,20,22,22,"Promise"],[37,27,22,29],[37,28,22,30,"resolve"],[37,35,22,37],[37,36,22,38],[37,39,22,41],[37,61,22,63],[37,63,22,65],[37,64,22,66],[37,65,22,67,"then"],[37,69,22,71],[37,70,22,72,"s"],[37,71,22,73],[37,75,22,77,"tslib_1"],[37,82,22,84],[37,83,22,85,"__importStar"],[37,95,22,97],[37,106,22,97,"line"],[37,110,22,97],[38,8,22,97],[38,18,22,97,"Error"],[38,23,22,97],[38,61,22,97,"line"],[38,65,22,97],[39,6,22,97],[39,11,22,108],[39,12,22,109],[39,13,22,110],[39,15,22,112,"Response"],[39,23,22,120],[40,4,23,4],[41,4,24,4],[41,11,24,11,"Response"],[41,19,24,19],[42,2,25,0],[42,3,25,1],[42,4,25,2],[43,2,26,0,"exports"],[43,9,26,7],[43,10,26,8,"resolveResponse"],[43,25,26,23],[43,28,26,26,"resolveResponse"],[43,43,26,41],[44,2,27,0],[44,6,27,6,"recursiveToCamel"],[44,22,27,22],[44,25,27,26,"item"],[44,29,27,30],[44,33,27,35],[45,4,28,4],[45,8,28,8,"Array"],[45,13,28,13],[45,14,28,14,"isArray"],[45,21,28,21],[45,22,28,22,"item"],[45,26,28,26],[45,27,28,27],[45,29,28,29],[46,6,29,8],[46,13,29,15,"item"],[46,17,29,19],[46,18,29,20,"map"],[46,21,29,23],[46,22,29,25,"el"],[46,24,29,27],[46,28,29,32],[46,29,29,33],[46,30,29,34],[46,32,29,36,"exports"],[46,39,29,43],[46,40,29,44,"recursiveToCamel"],[46,56,29,60],[46,58,29,62,"el"],[46,60,29,64],[46,61,29,65],[46,62,29,66],[47,4,30,4],[47,5,30,5],[47,11,31,9],[47,15,31,13],[47,22,31,20,"item"],[47,26,31,24],[47,31,31,29],[47,41,31,39],[47,45,31,43,"item"],[47,49,31,47],[47,54,31,52,"Object"],[47,60,31,58],[47,61,31,59,"item"],[47,65,31,63],[47,66,31,64],[47,68,31,66],[48,6,32,8],[48,13,32,15,"item"],[48,17,32,19],[49,4,33,4],[50,4,34,4],[50,8,34,10,"result"],[50,14,34,16],[50,17,34,19],[50,18,34,20],[50,19,34,21],[51,4,35,4,"Object"],[51,10,35,10],[51,11,35,11,"entries"],[51,18,35,18],[51,19,35,19,"item"],[51,23,35,23],[51,24,35,24],[51,25,35,25,"forEach"],[51,32,35,32],[51,33,35,33,"_ref2"],[51,38,35,33],[51,42,35,51],[52,6,35,51],[52,10,35,51,"_ref3"],[52,15,35,51],[52,18,35,51,"_slicedToArray"],[52,32,35,51],[52,33,35,51,"_ref2"],[52,38,35,51],[53,8,35,35,"key"],[53,11,35,38],[53,14,35,38,"_ref3"],[53,19,35,38],[54,8,35,40,"value"],[54,13,35,45],[54,16,35,45,"_ref3"],[54,21,35,45],[55,6,36,8],[55,10,36,14,"newKey"],[55,16,36,20],[55,19,36,23,"key"],[55,22,36,26],[55,23,36,27,"replace"],[55,30,36,34],[55,31,36,35],[55,46,36,50],[55,48,36,53,"c"],[55,49,36,54],[55,53,36,59,"c"],[55,54,36,60],[55,55,36,61,"toUpperCase"],[55,66,36,72],[55,67,36,73],[55,68,36,74],[55,69,36,75,"replace"],[55,76,36,82],[55,77,36,83],[55,84,36,90],[55,86,36,92],[55,88,36,94],[55,89,36,95],[55,90,36,96],[56,6,37,8,"result"],[56,12,37,14],[56,13,37,15,"newKey"],[56,19,37,21],[56,20,37,22],[56,23,37,25],[56,24,37,26],[56,25,37,27],[56,27,37,29,"exports"],[56,34,37,36],[56,35,37,37,"recursiveToCamel"],[56,51,37,53],[56,53,37,55,"value"],[56,58,37,60],[56,59,37,61],[57,4,38,4],[57,5,38,5],[57,6,38,6],[58,4,39,4],[58,11,39,11,"result"],[58,17,39,17],[59,2,40,0],[59,3,40,1],[60,2,41,0,"exports"],[60,9,41,7],[60,10,41,8,"recursiveToCamel"],[60,26,41,24],[60,29,41,27,"recursiveToCamel"],[60,45,41,43],[61,2,42,0],[62,0,43,0],[63,0,44,0],[64,0,45,0],[65,0,46,0],[66,2,47,0],[66,6,47,6,"isPlainObject"],[66,19,47,19],[66,22,47,23,"value"],[66,27,47,28],[66,31,47,33],[67,4,48,4],[67,8,48,8],[67,15,48,15,"value"],[67,20,48,20],[67,25,48,25],[67,33,48,33],[67,37,48,37,"value"],[67,42,48,42],[67,47,48,47],[67,51,48,51],[67,53,48,53],[68,6,49,8],[68,13,49,15],[68,18,49,20],[69,4,50,4],[70,4,51,4],[70,8,51,10,"prototype"],[70,17,51,19],[70,20,51,22,"Object"],[70,26,51,28],[70,27,51,29,"getPrototypeOf"],[70,41,51,43],[70,42,51,44,"value"],[70,47,51,49],[70,48,51,50],[71,4,52,4],[71,11,52,12],[71,12,52,13,"prototype"],[71,21,52,22],[71,26,52,27],[71,30,52,31],[71,34,53,8,"prototype"],[71,43,53,17],[71,48,53,22,"Object"],[71,54,53,28],[71,55,53,29,"prototype"],[71,64,53,38],[71,68,54,8,"Object"],[71,74,54,14],[71,75,54,15,"getPrototypeOf"],[71,89,54,29],[71,90,54,30,"prototype"],[71,99,54,39],[71,100,54,40],[71,105,54,45],[71,109,54,49],[71,114,55,8],[71,116,55,10,"Symbol"],[71,122,55,16],[71,123,55,17,"toStringTag"],[71,134,55,28],[71,138,55,32,"value"],[71,143,55,37],[71,144,55,38],[71,148,56,8],[71,150,56,10,"Symbol"],[71,156,56,16],[71,157,56,17,"iterator"],[71,165,56,25],[71,169,56,29,"value"],[71,174,56,34],[71,175,56,35],[72,2,57,0],[72,3,57,1],[73,2,58,0,"exports"],[73,9,58,7],[73,10,58,8,"isPlainObject"],[73,23,58,21],[73,26,58,24,"isPlainObject"],[73,39,58,37],[74,0,58,38],[74,3]],"functionMap":{"names":["<global>","resolveFetch","_fetch","Promise.resolve.then$argument_0","Promise.resolve.then.then$argument_0","<anonymous>","resolveResponse","tslib_1.__awaiter$argument_3","recursiveToCamel","item.map$argument_0","Object.entries.forEach$argument_0","key.replace$argument_1","isPlainObject"],"mappings":"AAA;qBCI;iBCM,+DC,qCD,OE,sCF,CD;WIK,4BJ;CDC;wBME,gDC;wEJG,qCI;CDG,CN;yBQE;wBCE,yCD;iCEM;oDCC,2CD;KFE;CRE;sBYO;CZU"}},"type":"js/module"}]}