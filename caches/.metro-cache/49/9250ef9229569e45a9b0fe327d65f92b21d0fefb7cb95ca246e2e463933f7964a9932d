{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Logger = exports.LogLevel = void 0;\n  exports.setLogLevel = setLogLevel;\n  exports.setUserLogHandler = setUserLogHandler;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  /**\n   * @license\n   * Copyright 2017 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * A container for all of the Logger instances\n   */\n  var instances = [];\n  /**\n   * The JS SDK supports 5 log levels and also allows a user the ability to\n   * silence the logs altogether.\n   *\n   * The order is a follows:\n   * DEBUG < VERBOSE < INFO < WARN < ERROR\n   *\n   * All of the log types above the current log level will be captured (i.e. if\n   * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n   * `VERBOSE` logs will not)\n   */\n  var LogLevel;\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n  })(LogLevel || (exports.LogLevel = LogLevel = {}));\n  var levelStringToEnum = {\n    'debug': LogLevel.DEBUG,\n    'verbose': LogLevel.VERBOSE,\n    'info': LogLevel.INFO,\n    'warn': LogLevel.WARN,\n    'error': LogLevel.ERROR,\n    'silent': LogLevel.SILENT\n  };\n  /**\n   * The default log level\n   */\n  var defaultLogLevel = LogLevel.INFO;\n  /**\n   * By default, `console.debug` is not displayed in the developer console (in\n   * chrome). To avoid forcing users to have to opt-in to these logs twice\n   * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n   * logs to the `console.log` function.\n   */\n  var ConsoleMethod = {\n    [LogLevel.DEBUG]: 'log',\n    [LogLevel.VERBOSE]: 'log',\n    [LogLevel.INFO]: 'info',\n    [LogLevel.WARN]: 'warn',\n    [LogLevel.ERROR]: 'error'\n  };\n  /**\n   * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n   * messages on to their corresponding console counterparts (if the log method\n   * is supported by the current log level)\n   */\n  var defaultLogHandler = function (instance, logType) {\n    if (logType < instance.logLevel) {\n      return;\n    }\n    var now = new Date().toISOString();\n    var method = ConsoleMethod[logType];\n    if (method) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      console[method](`[${now}]  ${instance.name}:`, ...args);\n    } else {\n      throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n    }\n  };\n  var Logger = exports.Logger = /*#__PURE__*/function () {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    function Logger(name) {\n      (0, _classCallCheck2.default)(this, Logger);\n      this.name = name;\n      /**\n       * The log level of the given Logger instance.\n       */\n      this._logLevel = defaultLogLevel;\n      /**\n       * The main (internal) log handler for the Logger instance.\n       * Can be set to a new function in internal package code but not by user.\n       */\n      this._logHandler = defaultLogHandler;\n      /**\n       * The optional, additional, user-defined log handler for the Logger instance.\n       */\n      this._userLogHandler = null;\n      /**\n       * Capture the current instance for later use\n       */\n      instances.push(this);\n    }\n    return (0, _createClass2.default)(Logger, [{\n      key: \"logLevel\",\n      get: function () {\n        return this._logLevel;\n      },\n      set: function (val) {\n        if (!(val in LogLevel)) {\n          throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n        }\n        this._logLevel = val;\n      }\n      // Workaround for setter/getter having to be the same type.\n    }, {\n      key: \"setLogLevel\",\n      value: function setLogLevel(val) {\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n      }\n    }, {\n      key: \"logHandler\",\n      get: function () {\n        return this._logHandler;\n      },\n      set: function (val) {\n        if (typeof val !== 'function') {\n          throw new TypeError('Value assigned to `logHandler` must be a function');\n        }\n        this._logHandler = val;\n      }\n    }, {\n      key: \"userLogHandler\",\n      get: function () {\n        return this._userLogHandler;\n      },\n      set: function (val) {\n        this._userLogHandler = val;\n      }\n      /**\n       * The functions below are all based on the `console` interface\n       */\n    }, {\n      key: \"debug\",\n      value: function debug() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n        this._logHandler(this, LogLevel.DEBUG, ...args);\n      }\n    }, {\n      key: \"log\",\n      value: function log() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\n      }\n    }, {\n      key: \"info\",\n      value: function info() {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n        this._logHandler(this, LogLevel.INFO, ...args);\n      }\n    }, {\n      key: \"warn\",\n      value: function warn() {\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n        this._logHandler(this, LogLevel.WARN, ...args);\n      }\n    }, {\n      key: \"error\",\n      value: function error() {\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n        this._logHandler(this, LogLevel.ERROR, ...args);\n      }\n    }]);\n  }();\n  function setLogLevel(level) {\n    instances.forEach(inst => {\n      inst.setLogLevel(level);\n    });\n  }\n  function setUserLogHandler(logCallback, options) {\n    var _loop = function () {\n      var customLogLevel = null;\n      if (options && options.level) {\n        customLogLevel = levelStringToEnum[options.level];\n      }\n      if (logCallback === null) {\n        instance.userLogHandler = null;\n      } else {\n        instance.userLogHandler = function (instance, level) {\n          for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n            args[_key7 - 2] = arguments[_key7];\n          }\n          var message = args.map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          }).filter(arg => arg).join(' ');\n          if (level >= (customLogLevel ?? instance.logLevel)) {\n            logCallback({\n              level: LogLevel[level].toLowerCase(),\n              message,\n              args,\n              type: instance.name\n            });\n          }\n        };\n      }\n    };\n    for (var instance of instances) {\n      _loop();\n    }\n  }\n});","lineCount":260,"map":[[11,2,1,0],[12,0,2,0],[13,0,3,0],[14,0,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[20,0,10,0],[21,0,11,0],[22,0,12,0],[23,0,13,0],[24,0,14,0],[25,0,15,0],[26,0,16,0],[27,2,17,0],[28,0,18,0],[29,0,19,0],[30,2,20,0],[30,6,20,6,"instances"],[30,15,20,15],[30,18,20,18],[30,20,20,20],[31,2,21,0],[32,0,22,0],[33,0,23,0],[34,0,24,0],[35,0,25,0],[36,0,26,0],[37,0,27,0],[38,0,28,0],[39,0,29,0],[40,0,30,0],[41,0,31,0],[42,2,32,0],[42,6,32,4,"LogLevel"],[42,14,32,12],[43,2,33,0],[43,3,33,1],[43,13,33,11,"LogLevel"],[43,21,33,19],[43,23,33,21],[44,4,34,4,"LogLevel"],[44,12,34,12],[44,13,34,13,"LogLevel"],[44,21,34,21],[44,22,34,22],[44,29,34,29],[44,30,34,30],[44,33,34,33],[44,34,34,34],[44,35,34,35],[44,38,34,38],[44,45,34,45],[45,4,35,4,"LogLevel"],[45,12,35,12],[45,13,35,13,"LogLevel"],[45,21,35,21],[45,22,35,22],[45,31,35,31],[45,32,35,32],[45,35,35,35],[45,36,35,36],[45,37,35,37],[45,40,35,40],[45,49,35,49],[46,4,36,4,"LogLevel"],[46,12,36,12],[46,13,36,13,"LogLevel"],[46,21,36,21],[46,22,36,22],[46,28,36,28],[46,29,36,29],[46,32,36,32],[46,33,36,33],[46,34,36,34],[46,37,36,37],[46,43,36,43],[47,4,37,4,"LogLevel"],[47,12,37,12],[47,13,37,13,"LogLevel"],[47,21,37,21],[47,22,37,22],[47,28,37,28],[47,29,37,29],[47,32,37,32],[47,33,37,33],[47,34,37,34],[47,37,37,37],[47,43,37,43],[48,4,38,4,"LogLevel"],[48,12,38,12],[48,13,38,13,"LogLevel"],[48,21,38,21],[48,22,38,22],[48,29,38,29],[48,30,38,30],[48,33,38,33],[48,34,38,34],[48,35,38,35],[48,38,38,38],[48,45,38,45],[49,4,39,4,"LogLevel"],[49,12,39,12],[49,13,39,13,"LogLevel"],[49,21,39,21],[49,22,39,22],[49,30,39,30],[49,31,39,31],[49,34,39,34],[49,35,39,35],[49,36,39,36],[49,39,39,39],[49,47,39,47],[50,2,40,0],[50,3,40,1],[50,5,40,3,"LogLevel"],[50,13,40,11],[50,18,40,11,"exports"],[50,25,40,11],[50,26,40,11,"LogLevel"],[50,34,40,11],[50,37,40,16,"LogLevel"],[50,45,40,24],[50,48,40,27],[50,49,40,28],[50,50,40,29],[50,51,40,30],[50,52,40,31],[51,2,41,0],[51,6,41,6,"levelStringToEnum"],[51,23,41,23],[51,26,41,26],[52,4,42,4],[52,11,42,11],[52,13,42,13,"LogLevel"],[52,21,42,21],[52,22,42,22,"DEBUG"],[52,27,42,27],[53,4,43,4],[53,13,43,13],[53,15,43,15,"LogLevel"],[53,23,43,23],[53,24,43,24,"VERBOSE"],[53,31,43,31],[54,4,44,4],[54,10,44,10],[54,12,44,12,"LogLevel"],[54,20,44,20],[54,21,44,21,"INFO"],[54,25,44,25],[55,4,45,4],[55,10,45,10],[55,12,45,12,"LogLevel"],[55,20,45,20],[55,21,45,21,"WARN"],[55,25,45,25],[56,4,46,4],[56,11,46,11],[56,13,46,13,"LogLevel"],[56,21,46,21],[56,22,46,22,"ERROR"],[56,27,46,27],[57,4,47,4],[57,12,47,12],[57,14,47,14,"LogLevel"],[57,22,47,22],[57,23,47,23,"SILENT"],[58,2,48,0],[58,3,48,1],[59,2,49,0],[60,0,50,0],[61,0,51,0],[62,2,52,0],[62,6,52,6,"defaultLogLevel"],[62,21,52,21],[62,24,52,24,"LogLevel"],[62,32,52,32],[62,33,52,33,"INFO"],[62,37,52,37],[63,2,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,0,57,0],[68,0,58,0],[69,2,59,0],[69,6,59,6,"ConsoleMethod"],[69,19,59,19],[69,22,59,22],[70,4,60,4],[70,5,60,5,"LogLevel"],[70,13,60,13],[70,14,60,14,"DEBUG"],[70,19,60,19],[70,22,60,22],[70,27,60,27],[71,4,61,4],[71,5,61,5,"LogLevel"],[71,13,61,13],[71,14,61,14,"VERBOSE"],[71,21,61,21],[71,24,61,24],[71,29,61,29],[72,4,62,4],[72,5,62,5,"LogLevel"],[72,13,62,13],[72,14,62,14,"INFO"],[72,18,62,18],[72,21,62,21],[72,27,62,27],[73,4,63,4],[73,5,63,5,"LogLevel"],[73,13,63,13],[73,14,63,14,"WARN"],[73,18,63,18],[73,21,63,21],[73,27,63,27],[74,4,64,4],[74,5,64,5,"LogLevel"],[74,13,64,13],[74,14,64,14,"ERROR"],[74,19,64,19],[74,22,64,22],[75,2,65,0],[75,3,65,1],[76,2,66,0],[77,0,67,0],[78,0,68,0],[79,0,69,0],[80,0,70,0],[81,2,71,0],[81,6,71,6,"defaultLogHandler"],[81,23,71,23],[81,26,71,26],[81,35,71,26,"defaultLogHandler"],[81,36,71,27,"instance"],[81,44,71,35],[81,46,71,37,"logType"],[81,53,71,44],[81,55,71,58],[82,4,72,4],[82,8,72,8,"logType"],[82,15,72,15],[82,18,72,18,"instance"],[82,26,72,26],[82,27,72,27,"logLevel"],[82,35,72,35],[82,37,72,37],[83,6,73,8],[84,4,74,4],[85,4,75,4],[85,8,75,10,"now"],[85,11,75,13],[85,14,75,16],[85,18,75,20,"Date"],[85,22,75,24],[85,23,75,25],[85,24,75,26],[85,25,75,27,"toISOString"],[85,36,75,38],[85,37,75,39],[85,38,75,40],[86,4,76,4],[86,8,76,10,"method"],[86,14,76,16],[86,17,76,19,"ConsoleMethod"],[86,30,76,32],[86,31,76,33,"logType"],[86,38,76,40],[86,39,76,41],[87,4,77,4],[87,8,77,8,"method"],[87,14,77,14],[87,16,77,16],[88,6,77,16],[88,15,77,16,"_len"],[88,19,77,16],[88,22,77,16,"arguments"],[88,31,77,16],[88,32,77,16,"length"],[88,38,77,16],[88,40,71,49,"args"],[88,44,71,53],[88,51,71,53,"Array"],[88,56,71,53],[88,57,71,53,"_len"],[88,61,71,53],[88,68,71,53,"_len"],[88,72,71,53],[88,83,71,53,"_key"],[88,87,71,53],[88,93,71,53,"_key"],[88,97,71,53],[88,100,71,53,"_len"],[88,104,71,53],[88,106,71,53,"_key"],[88,110,71,53],[89,8,71,49,"args"],[89,12,71,53],[89,13,71,53,"_key"],[89,17,71,53],[89,25,71,53,"arguments"],[89,34,71,53],[89,35,71,53,"_key"],[89,39,71,53],[90,6,71,53],[91,6,78,8,"console"],[91,13,78,15],[91,14,78,16,"method"],[91,20,78,22],[91,21,78,23],[91,22,78,24],[91,26,78,28,"now"],[91,29,78,31],[91,35,78,37,"instance"],[91,43,78,45],[91,44,78,46,"name"],[91,48,78,50],[91,51,78,53],[91,53,78,55],[91,56,78,58,"args"],[91,60,78,62],[91,61,78,63],[92,4,79,4],[92,5,79,5],[92,11,80,9],[93,6,81,8],[93,12,81,14],[93,16,81,18,"Error"],[93,21,81,23],[93,22,81,24],[93,84,81,86,"logType"],[93,91,81,93],[93,94,81,96],[93,95,81,97],[94,4,82,4],[95,2,83,0],[95,3,83,1],[96,2,83,2],[96,6,84,6,"Logger"],[96,12,84,12],[96,15,84,12,"exports"],[96,22,84,12],[96,23,84,12,"Logger"],[96,29,84,12],[97,4,85,4],[98,0,86,0],[99,0,87,0],[100,0,88,0],[101,0,89,0],[102,0,90,0],[103,4,91,4],[103,13,91,4,"Logger"],[103,20,91,16,"name"],[103,24,91,20],[103,26,91,22],[104,6,91,22],[104,10,91,22,"_classCallCheck2"],[104,26,91,22],[104,27,91,22,"default"],[104,34,91,22],[104,42,91,22,"Logger"],[104,48,91,22],[105,6,92,8],[105,10,92,12],[105,11,92,13,"name"],[105,15,92,17],[105,18,92,20,"name"],[105,22,92,24],[106,6,93,8],[107,0,94,0],[108,0,95,0],[109,6,96,8],[109,10,96,12],[109,11,96,13,"_logLevel"],[109,20,96,22],[109,23,96,25,"defaultLogLevel"],[109,38,96,40],[110,6,97,8],[111,0,98,0],[112,0,99,0],[113,0,100,0],[114,6,101,8],[114,10,101,12],[114,11,101,13,"_logHandler"],[114,22,101,24],[114,25,101,27,"defaultLogHandler"],[114,42,101,44],[115,6,102,8],[116,0,103,0],[117,0,104,0],[118,6,105,8],[118,10,105,12],[118,11,105,13,"_userLogHandler"],[118,26,105,28],[118,29,105,31],[118,33,105,35],[119,6,106,8],[120,0,107,0],[121,0,108,0],[122,6,109,8,"instances"],[122,15,109,17],[122,16,109,18,"push"],[122,20,109,22],[122,21,109,23],[122,25,109,27],[122,26,109,28],[123,4,110,4],[124,4,110,5],[124,15,110,5,"_createClass2"],[124,28,110,5],[124,29,110,5,"default"],[124,36,110,5],[124,38,110,5,"Logger"],[124,44,110,5],[125,6,110,5,"key"],[125,9,110,5],[126,6,110,5,"get"],[126,9,110,5],[126,11,111,4],[126,20,111,4,"get"],[126,21,111,4],[126,23,111,19],[127,8,112,8],[127,15,112,15],[127,19,112,19],[127,20,112,20,"_logLevel"],[127,29,112,29],[128,6,113,4],[128,7,113,5],[129,6,113,5,"set"],[129,9,113,5],[129,11,114,4],[129,20,114,4,"set"],[129,21,114,17,"val"],[129,24,114,20],[129,26,114,22],[130,8,115,8],[130,12,115,12],[130,14,115,14,"val"],[130,17,115,17],[130,21,115,21,"LogLevel"],[130,29,115,29],[130,30,115,30],[130,32,115,32],[131,10,116,12],[131,16,116,18],[131,20,116,22,"TypeError"],[131,29,116,31],[131,30,116,32],[131,48,116,50,"val"],[131,51,116,53],[131,79,116,81],[131,80,116,82],[132,8,117,8],[133,8,118,8],[133,12,118,12],[133,13,118,13,"_logLevel"],[133,22,118,22],[133,25,118,25,"val"],[133,28,118,28],[134,6,119,4],[135,6,120,4],[136,4,120,4],[137,6,120,4,"key"],[137,9,120,4],[138,6,120,4,"value"],[138,11,120,4],[138,13,121,4],[138,22,121,4,"setLogLevel"],[138,33,121,15,"setLogLevel"],[138,34,121,16,"val"],[138,37,121,19],[138,39,121,21],[139,8,122,8],[139,12,122,12],[139,13,122,13,"_logLevel"],[139,22,122,22],[139,25,122,25],[139,32,122,32,"val"],[139,35,122,35],[139,40,122,40],[139,48,122,48],[139,51,122,51,"levelStringToEnum"],[139,68,122,68],[139,69,122,69,"val"],[139,72,122,72],[139,73,122,73],[139,76,122,76,"val"],[139,79,122,79],[140,6,123,4],[141,4,123,5],[142,6,123,5,"key"],[142,9,123,5],[143,6,123,5,"get"],[143,9,123,5],[143,11,124,4],[143,20,124,4,"get"],[143,21,124,4],[143,23,124,21],[144,8,125,8],[144,15,125,15],[144,19,125,19],[144,20,125,20,"_logHandler"],[144,31,125,31],[145,6,126,4],[145,7,126,5],[146,6,126,5,"set"],[146,9,126,5],[146,11,127,4],[146,20,127,4,"set"],[146,21,127,19,"val"],[146,24,127,22],[146,26,127,24],[147,8,128,8],[147,12,128,12],[147,19,128,19,"val"],[147,22,128,22],[147,27,128,27],[147,37,128,37],[147,39,128,39],[148,10,129,12],[148,16,129,18],[148,20,129,22,"TypeError"],[148,29,129,31],[148,30,129,32],[148,81,129,83],[148,82,129,84],[149,8,130,8],[150,8,131,8],[150,12,131,12],[150,13,131,13,"_logHandler"],[150,24,131,24],[150,27,131,27,"val"],[150,30,131,30],[151,6,132,4],[152,4,132,5],[153,6,132,5,"key"],[153,9,132,5],[154,6,132,5,"get"],[154,9,132,5],[154,11,133,4],[154,20,133,4,"get"],[154,21,133,4],[154,23,133,25],[155,8,134,8],[155,15,134,15],[155,19,134,19],[155,20,134,20,"_userLogHandler"],[155,35,134,35],[156,6,135,4],[156,7,135,5],[157,6,135,5,"set"],[157,9,135,5],[157,11,136,4],[157,20,136,4,"set"],[157,21,136,23,"val"],[157,24,136,26],[157,26,136,28],[158,8,137,8],[158,12,137,12],[158,13,137,13,"_userLogHandler"],[158,28,137,28],[158,31,137,31,"val"],[158,34,137,34],[159,6,138,4],[160,6,139,4],[161,0,140,0],[162,0,141,0],[163,4,139,4],[164,6,139,4,"key"],[164,9,139,4],[165,6,139,4,"value"],[165,11,139,4],[165,13,142,4],[165,22,142,4,"debug"],[165,27,142,9,"debug"],[165,28,142,9],[165,30,142,19],[166,8,142,19],[166,17,142,19,"_len2"],[166,22,142,19],[166,25,142,19,"arguments"],[166,34,142,19],[166,35,142,19,"length"],[166,41,142,19],[166,43,142,13,"args"],[166,47,142,17],[166,54,142,17,"Array"],[166,59,142,17],[166,60,142,17,"_len2"],[166,65,142,17],[166,68,142,17,"_key2"],[166,73,142,17],[166,79,142,17,"_key2"],[166,84,142,17],[166,87,142,17,"_len2"],[166,92,142,17],[166,94,142,17,"_key2"],[166,99,142,17],[167,10,142,13,"args"],[167,14,142,17],[167,15,142,17,"_key2"],[167,20,142,17],[167,24,142,17,"arguments"],[167,33,142,17],[167,34,142,17,"_key2"],[167,39,142,17],[168,8,142,17],[169,8,143,8],[169,12,143,12],[169,13,143,13,"_userLogHandler"],[169,28,143,28],[169,32,143,32],[169,36,143,36],[169,37,143,37,"_userLogHandler"],[169,52,143,52],[169,53,143,53],[169,57,143,57],[169,59,143,59,"LogLevel"],[169,67,143,67],[169,68,143,68,"DEBUG"],[169,73,143,73],[169,75,143,75],[169,78,143,78,"args"],[169,82,143,82],[169,83,143,83],[170,8,144,8],[170,12,144,12],[170,13,144,13,"_logHandler"],[170,24,144,24],[170,25,144,25],[170,29,144,29],[170,31,144,31,"LogLevel"],[170,39,144,39],[170,40,144,40,"DEBUG"],[170,45,144,45],[170,47,144,47],[170,50,144,50,"args"],[170,54,144,54],[170,55,144,55],[171,6,145,4],[172,4,145,5],[173,6,145,5,"key"],[173,9,145,5],[174,6,145,5,"value"],[174,11,145,5],[174,13,146,4],[174,22,146,4,"log"],[174,25,146,7,"log"],[174,26,146,7],[174,28,146,17],[175,8,146,17],[175,17,146,17,"_len3"],[175,22,146,17],[175,25,146,17,"arguments"],[175,34,146,17],[175,35,146,17,"length"],[175,41,146,17],[175,43,146,11,"args"],[175,47,146,15],[175,54,146,15,"Array"],[175,59,146,15],[175,60,146,15,"_len3"],[175,65,146,15],[175,68,146,15,"_key3"],[175,73,146,15],[175,79,146,15,"_key3"],[175,84,146,15],[175,87,146,15,"_len3"],[175,92,146,15],[175,94,146,15,"_key3"],[175,99,146,15],[176,10,146,11,"args"],[176,14,146,15],[176,15,146,15,"_key3"],[176,20,146,15],[176,24,146,15,"arguments"],[176,33,146,15],[176,34,146,15,"_key3"],[176,39,146,15],[177,8,146,15],[178,8,147,8],[178,12,147,12],[178,13,147,13,"_userLogHandler"],[178,28,147,28],[178,32,148,12],[178,36,148,16],[178,37,148,17,"_userLogHandler"],[178,52,148,32],[178,53,148,33],[178,57,148,37],[178,59,148,39,"LogLevel"],[178,67,148,47],[178,68,148,48,"VERBOSE"],[178,75,148,55],[178,77,148,57],[178,80,148,60,"args"],[178,84,148,64],[178,85,148,65],[179,8,149,8],[179,12,149,12],[179,13,149,13,"_logHandler"],[179,24,149,24],[179,25,149,25],[179,29,149,29],[179,31,149,31,"LogLevel"],[179,39,149,39],[179,40,149,40,"VERBOSE"],[179,47,149,47],[179,49,149,49],[179,52,149,52,"args"],[179,56,149,56],[179,57,149,57],[180,6,150,4],[181,4,150,5],[182,6,150,5,"key"],[182,9,150,5],[183,6,150,5,"value"],[183,11,150,5],[183,13,151,4],[183,22,151,4,"info"],[183,26,151,8,"info"],[183,27,151,8],[183,29,151,18],[184,8,151,18],[184,17,151,18,"_len4"],[184,22,151,18],[184,25,151,18,"arguments"],[184,34,151,18],[184,35,151,18,"length"],[184,41,151,18],[184,43,151,12,"args"],[184,47,151,16],[184,54,151,16,"Array"],[184,59,151,16],[184,60,151,16,"_len4"],[184,65,151,16],[184,68,151,16,"_key4"],[184,73,151,16],[184,79,151,16,"_key4"],[184,84,151,16],[184,87,151,16,"_len4"],[184,92,151,16],[184,94,151,16,"_key4"],[184,99,151,16],[185,10,151,12,"args"],[185,14,151,16],[185,15,151,16,"_key4"],[185,20,151,16],[185,24,151,16,"arguments"],[185,33,151,16],[185,34,151,16,"_key4"],[185,39,151,16],[186,8,151,16],[187,8,152,8],[187,12,152,12],[187,13,152,13,"_userLogHandler"],[187,28,152,28],[187,32,152,32],[187,36,152,36],[187,37,152,37,"_userLogHandler"],[187,52,152,52],[187,53,152,53],[187,57,152,57],[187,59,152,59,"LogLevel"],[187,67,152,67],[187,68,152,68,"INFO"],[187,72,152,72],[187,74,152,74],[187,77,152,77,"args"],[187,81,152,81],[187,82,152,82],[188,8,153,8],[188,12,153,12],[188,13,153,13,"_logHandler"],[188,24,153,24],[188,25,153,25],[188,29,153,29],[188,31,153,31,"LogLevel"],[188,39,153,39],[188,40,153,40,"INFO"],[188,44,153,44],[188,46,153,46],[188,49,153,49,"args"],[188,53,153,53],[188,54,153,54],[189,6,154,4],[190,4,154,5],[191,6,154,5,"key"],[191,9,154,5],[192,6,154,5,"value"],[192,11,154,5],[192,13,155,4],[192,22,155,4,"warn"],[192,26,155,8,"warn"],[192,27,155,8],[192,29,155,18],[193,8,155,18],[193,17,155,18,"_len5"],[193,22,155,18],[193,25,155,18,"arguments"],[193,34,155,18],[193,35,155,18,"length"],[193,41,155,18],[193,43,155,12,"args"],[193,47,155,16],[193,54,155,16,"Array"],[193,59,155,16],[193,60,155,16,"_len5"],[193,65,155,16],[193,68,155,16,"_key5"],[193,73,155,16],[193,79,155,16,"_key5"],[193,84,155,16],[193,87,155,16,"_len5"],[193,92,155,16],[193,94,155,16,"_key5"],[193,99,155,16],[194,10,155,12,"args"],[194,14,155,16],[194,15,155,16,"_key5"],[194,20,155,16],[194,24,155,16,"arguments"],[194,33,155,16],[194,34,155,16,"_key5"],[194,39,155,16],[195,8,155,16],[196,8,156,8],[196,12,156,12],[196,13,156,13,"_userLogHandler"],[196,28,156,28],[196,32,156,32],[196,36,156,36],[196,37,156,37,"_userLogHandler"],[196,52,156,52],[196,53,156,53],[196,57,156,57],[196,59,156,59,"LogLevel"],[196,67,156,67],[196,68,156,68,"WARN"],[196,72,156,72],[196,74,156,74],[196,77,156,77,"args"],[196,81,156,81],[196,82,156,82],[197,8,157,8],[197,12,157,12],[197,13,157,13,"_logHandler"],[197,24,157,24],[197,25,157,25],[197,29,157,29],[197,31,157,31,"LogLevel"],[197,39,157,39],[197,40,157,40,"WARN"],[197,44,157,44],[197,46,157,46],[197,49,157,49,"args"],[197,53,157,53],[197,54,157,54],[198,6,158,4],[199,4,158,5],[200,6,158,5,"key"],[200,9,158,5],[201,6,158,5,"value"],[201,11,158,5],[201,13,159,4],[201,22,159,4,"error"],[201,27,159,9,"error"],[201,28,159,9],[201,30,159,19],[202,8,159,19],[202,17,159,19,"_len6"],[202,22,159,19],[202,25,159,19,"arguments"],[202,34,159,19],[202,35,159,19,"length"],[202,41,159,19],[202,43,159,13,"args"],[202,47,159,17],[202,54,159,17,"Array"],[202,59,159,17],[202,60,159,17,"_len6"],[202,65,159,17],[202,68,159,17,"_key6"],[202,73,159,17],[202,79,159,17,"_key6"],[202,84,159,17],[202,87,159,17,"_len6"],[202,92,159,17],[202,94,159,17,"_key6"],[202,99,159,17],[203,10,159,13,"args"],[203,14,159,17],[203,15,159,17,"_key6"],[203,20,159,17],[203,24,159,17,"arguments"],[203,33,159,17],[203,34,159,17,"_key6"],[203,39,159,17],[204,8,159,17],[205,8,160,8],[205,12,160,12],[205,13,160,13,"_userLogHandler"],[205,28,160,28],[205,32,160,32],[205,36,160,36],[205,37,160,37,"_userLogHandler"],[205,52,160,52],[205,53,160,53],[205,57,160,57],[205,59,160,59,"LogLevel"],[205,67,160,67],[205,68,160,68,"ERROR"],[205,73,160,73],[205,75,160,75],[205,78,160,78,"args"],[205,82,160,82],[205,83,160,83],[206,8,161,8],[206,12,161,12],[206,13,161,13,"_logHandler"],[206,24,161,24],[206,25,161,25],[206,29,161,29],[206,31,161,31,"LogLevel"],[206,39,161,39],[206,40,161,40,"ERROR"],[206,45,161,45],[206,47,161,47],[206,50,161,50,"args"],[206,54,161,54],[206,55,161,55],[207,6,162,4],[208,4,162,5],[209,2,162,5],[210,2,164,0],[210,11,164,9,"setLogLevel"],[210,22,164,20,"setLogLevel"],[210,23,164,21,"level"],[210,28,164,26],[210,30,164,28],[211,4,165,4,"instances"],[211,13,165,13],[211,14,165,14,"forEach"],[211,21,165,21],[211,22,165,22,"inst"],[211,26,165,26],[211,30,165,30],[212,6,166,8,"inst"],[212,10,166,12],[212,11,166,13,"setLogLevel"],[212,22,166,24],[212,23,166,25,"level"],[212,28,166,30],[212,29,166,31],[213,4,167,4],[213,5,167,5],[213,6,167,6],[214,2,168,0],[215,2,169,0],[215,11,169,9,"setUserLogHandler"],[215,28,169,26,"setUserLogHandler"],[215,29,169,27,"logCallback"],[215,40,169,38],[215,42,169,40,"options"],[215,49,169,47],[215,51,169,49],[216,4,169,49],[216,8,169,49,"_loop"],[216,13,169,49],[216,25,169,49,"_loop"],[216,26,169,49],[216,28,170,38],[217,6,171,8],[217,10,171,12,"customLogLevel"],[217,24,171,26],[217,27,171,29],[217,31,171,33],[218,6,172,8],[218,10,172,12,"options"],[218,17,172,19],[218,21,172,23,"options"],[218,28,172,30],[218,29,172,31,"level"],[218,34,172,36],[218,36,172,38],[219,8,173,12,"customLogLevel"],[219,22,173,26],[219,25,173,29,"levelStringToEnum"],[219,42,173,46],[219,43,173,47,"options"],[219,50,173,54],[219,51,173,55,"level"],[219,56,173,60],[219,57,173,61],[220,6,174,8],[221,6,175,8],[221,10,175,12,"logCallback"],[221,21,175,23],[221,26,175,28],[221,30,175,32],[221,32,175,34],[222,8,176,12,"instance"],[222,16,176,20],[222,17,176,21,"userLogHandler"],[222,31,176,35],[222,34,176,38],[222,38,176,42],[223,6,177,8],[223,7,177,9],[223,13,178,13],[224,8,179,12,"instance"],[224,16,179,20],[224,17,179,21,"userLogHandler"],[224,31,179,35],[224,34,179,38],[224,44,179,39,"instance"],[224,52,179,47],[224,54,179,49,"level"],[224,59,179,54],[224,61,179,68],[225,10,179,68],[225,19,179,68,"_len7"],[225,24,179,68],[225,27,179,68,"arguments"],[225,36,179,68],[225,37,179,68,"length"],[225,43,179,68],[225,45,179,59,"args"],[225,49,179,63],[225,56,179,63,"Array"],[225,61,179,63],[225,62,179,63,"_len7"],[225,67,179,63],[225,74,179,63,"_len7"],[225,79,179,63],[225,90,179,63,"_key7"],[225,95,179,63],[225,101,179,63,"_key7"],[225,106,179,63],[225,109,179,63,"_len7"],[225,114,179,63],[225,116,179,63,"_key7"],[225,121,179,63],[226,12,179,59,"args"],[226,16,179,63],[226,17,179,63,"_key7"],[226,22,179,63],[226,30,179,63,"arguments"],[226,39,179,63],[226,40,179,63,"_key7"],[226,45,179,63],[227,10,179,63],[228,10,180,16],[228,14,180,22,"message"],[228,21,180,29],[228,24,180,32,"args"],[228,28,180,36],[228,29,181,21,"map"],[228,32,181,24],[228,33,181,25,"arg"],[228,36,181,28],[228,40,181,32],[229,12,182,20],[229,16,182,24,"arg"],[229,19,182,27],[229,23,182,31],[229,27,182,35],[229,29,182,37],[230,14,183,24],[230,21,183,31],[230,25,183,35],[231,12,184,20],[231,13,184,21],[231,19,185,25],[231,23,185,29],[231,30,185,36,"arg"],[231,33,185,39],[231,38,185,44],[231,46,185,52],[231,48,185,54],[232,14,186,24],[232,21,186,31,"arg"],[232,24,186,34],[233,12,187,20],[233,13,187,21],[233,19,188,25],[233,23,188,29],[233,30,188,36,"arg"],[233,33,188,39],[233,38,188,44],[233,46,188,52],[233,50,188,56],[233,57,188,63,"arg"],[233,60,188,66],[233,65,188,71],[233,74,188,80],[233,76,188,82],[234,14,189,24],[234,21,189,31,"arg"],[234,24,189,34],[234,25,189,35,"toString"],[234,33,189,43],[234,34,189,44],[234,35,189,45],[235,12,190,20],[235,13,190,21],[235,19,191,25],[235,23,191,29,"arg"],[235,26,191,32],[235,38,191,44,"Error"],[235,43,191,49],[235,45,191,51],[236,14,192,24],[236,21,192,31,"arg"],[236,24,192,34],[236,25,192,35,"message"],[236,32,192,42],[237,12,193,20],[237,13,193,21],[237,19,194,25],[238,14,195,24],[238,18,195,28],[239,16,196,28],[239,23,196,35,"JSON"],[239,27,196,39],[239,28,196,40,"stringify"],[239,37,196,49],[239,38,196,50,"arg"],[239,41,196,53],[239,42,196,54],[240,14,197,24],[240,15,197,25],[240,16,198,24],[240,23,198,31,"ignored"],[240,30,198,38],[240,32,198,40],[241,16,199,28],[241,23,199,35],[241,27,199,39],[242,14,200,24],[243,12,201,20],[244,10,202,16],[244,11,202,17],[244,12,202,18],[244,13,203,21,"filter"],[244,19,203,27],[244,20,203,28,"arg"],[244,23,203,31],[244,27,203,35,"arg"],[244,30,203,38],[244,31,203,39],[244,32,204,21,"join"],[244,36,204,25],[244,37,204,26],[244,40,204,29],[244,41,204,30],[245,10,205,16],[245,14,205,20,"level"],[245,19,205,25],[245,24,205,30,"customLogLevel"],[245,38,205,44],[245,42,205,48,"instance"],[245,50,205,56],[245,51,205,57,"logLevel"],[245,59,205,65],[245,60,205,66],[245,62,205,68],[246,12,206,20,"logCallback"],[246,23,206,31],[246,24,206,32],[247,14,207,24,"level"],[247,19,207,29],[247,21,207,31,"LogLevel"],[247,29,207,39],[247,30,207,40,"level"],[247,35,207,45],[247,36,207,46],[247,37,207,47,"toLowerCase"],[247,48,207,58],[247,49,207,59],[247,50,207,60],[248,14,208,24,"message"],[248,21,208,31],[249,14,209,24,"args"],[249,18,209,28],[250,14,210,24,"type"],[250,18,210,28],[250,20,210,30,"instance"],[250,28,210,38],[250,29,210,39,"name"],[251,12,211,20],[251,13,211,21],[251,14,211,22],[252,10,212,16],[253,8,213,12],[253,9,213,13],[254,6,214,8],[255,4,215,4],[255,5,215,5],[256,4,170,4],[256,9,170,9],[256,13,170,15,"instance"],[256,21,170,23],[256,25,170,27,"instances"],[256,34,170,36],[257,6,170,36,"_loop"],[257,11,170,36],[258,4,170,36],[259,2,216,0],[260,0,216,1],[260,3]],"functionMap":{"names":["<global>","<anonymous>","defaultLogHandler","Logger","Logger#constructor","Logger#get__logLevel","Logger#set__logLevel","Logger#setLogLevel","Logger#get__logHandler","Logger#set__logHandler","Logger#get__userLogHandler","Logger#set__userLogHandler","Logger#debug","Logger#log","Logger#info","Logger#warn","Logger#error","setLogLevel","instances.forEach$argument_0","setUserLogHandler","instance.userLogHandler","args.map$argument_0","args.map.filter$argument_0"],"mappings":"AAA;CCgC;CDO;0BE+B;CFY;AGC;ICO;KDmB;IEC;KFE;IGC;KHK;IIE;KJE;IKC;KLE;IMC;KNK;IOC;KPE;IQC;KRE;ISI;KTG;IUC;KVI;IWC;KXG;IYC;KZG;IaC;KbG;CHC;AiBC;sBCC;KDE;CjBC;AmBC;sCCU;yBCE;iBDqB;4BEC,UF;aDU;CnBG"}},"type":"js/module"}]}