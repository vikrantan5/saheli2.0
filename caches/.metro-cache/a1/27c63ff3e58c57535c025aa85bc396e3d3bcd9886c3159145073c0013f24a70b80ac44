{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"BkBYK9w6fHruAfQL7S4qWsYds2s=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Provider = exports.ComponentContainer = exports.Component = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _util = require(_dependencyMap[5], \"@firebase/util\");\n  /**\n   * Component for service name T, e.g. `auth`, `auth-internal`\n   */\n  var Component = exports.Component = /*#__PURE__*/function () {\n    /**\n     *\n     * @param name The public service name, e.g. app, auth, firestore, database\n     * @param instanceFactory Service factory responsible for creating the public interface\n     * @param type whether the service provided by the component is public or private\n     */\n    function Component(name, instanceFactory, type) {\n      (0, _classCallCheck2.default)(this, Component);\n      this.name = name;\n      this.instanceFactory = instanceFactory;\n      this.type = type;\n      this.multipleInstances = false;\n      /**\n       * Properties to be added to the service namespace\n       */\n      this.serviceProps = {};\n      this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\n      this.onInstanceCreated = null;\n    }\n    return (0, _createClass2.default)(Component, [{\n      key: \"setInstantiationMode\",\n      value: function setInstantiationMode(mode) {\n        this.instantiationMode = mode;\n        return this;\n      }\n    }, {\n      key: \"setMultipleInstances\",\n      value: function setMultipleInstances(multipleInstances) {\n        this.multipleInstances = multipleInstances;\n        return this;\n      }\n    }, {\n      key: \"setServiceProps\",\n      value: function setServiceProps(props) {\n        this.serviceProps = props;\n        return this;\n      }\n    }, {\n      key: \"setInstanceCreatedCallback\",\n      value: function setInstanceCreatedCallback(callback) {\n        this.onInstanceCreated = callback;\n        return this;\n      }\n    }]);\n  }();\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n   * NameServiceMapping[T] is an alias for the type of the instance\n   */\n  var Provider = exports.Provider = /*#__PURE__*/function () {\n    function Provider(name, container) {\n      (0, _classCallCheck2.default)(this, Provider);\n      this.name = name;\n      this.container = container;\n      this.component = null;\n      this.instances = new Map();\n      this.instancesDeferred = new Map();\n      this.instancesOptions = new Map();\n      this.onInitCallbacks = new Map();\n    }\n    /**\n     * @param identifier A provider can provide multiple instances of a service\n     * if this.component.multipleInstances is true.\n     */\n    return (0, _createClass2.default)(Provider, [{\n      key: \"get\",\n      value: function get(identifier) {\n        // if multipleInstances is not supported, use the default name\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\n          var deferred = new _util.Deferred();\n          this.instancesDeferred.set(normalizedIdentifier, deferred);\n          if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n            // initialize the service if it can be auto-initialized\n            try {\n              var instance = this.getOrInitializeService({\n                instanceIdentifier: normalizedIdentifier\n              });\n              if (instance) {\n                deferred.resolve(instance);\n              }\n            } catch (e) {\n              // when the instance factory throws an exception during get(), it should not cause\n              // a fatal error. We just return the unresolved promise in this case.\n            }\n          }\n        }\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\n      }\n    }, {\n      key: \"getImmediate\",\n      value: function getImmediate(options) {\n        // if multipleInstances is not supported, use the default name\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(options?.identifier);\n        var optional = options?.optional ?? false;\n        if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n          try {\n            return this.getOrInitializeService({\n              instanceIdentifier: normalizedIdentifier\n            });\n          } catch (e) {\n            if (optional) {\n              return null;\n            } else {\n              throw e;\n            }\n          }\n        } else {\n          // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n          if (optional) {\n            return null;\n          } else {\n            throw Error(`Service ${this.name} is not available`);\n          }\n        }\n      }\n    }, {\n      key: \"getComponent\",\n      value: function getComponent() {\n        return this.component;\n      }\n    }, {\n      key: \"setComponent\",\n      value: function setComponent(component) {\n        if (component.name !== this.name) {\n          throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\n        }\n        if (this.component) {\n          throw Error(`Component for ${this.name} has already been provided`);\n        }\n        this.component = component;\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n        if (!this.shouldAutoInitialize()) {\n          return;\n        }\n        // if the service is eager, initialize the default instance\n        if (isComponentEager(component)) {\n          try {\n            this.getOrInitializeService({\n              instanceIdentifier: DEFAULT_ENTRY_NAME\n            });\n          } catch (e) {\n            // when the instance factory for an eager Component throws an exception during the eager\n            // initialization, it should not cause a fatal error.\n            // TODO: Investigate if we need to make it configurable, because some component may want to cause\n            // a fatal error in this case?\n          }\n        }\n        // Create service instances for the pending promises and resolve them\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\n        // and all promises with resolve with it regardless of the identifier.\n        for (var _ref of this.instancesDeferred.entries()) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n          var instanceIdentifier = _ref2[0];\n          var instanceDeferred = _ref2[1];\n          var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n          try {\n            // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n            var instance = this.getOrInitializeService({\n              instanceIdentifier: normalizedIdentifier\n            });\n            instanceDeferred.resolve(instance);\n          } catch (e) {\n            // when the instance factory throws an exception, it should not cause\n            // a fatal error. We just leave the promise unresolved.\n          }\n        }\n      }\n    }, {\n      key: \"clearInstance\",\n      value: function clearInstance() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        this.instancesDeferred.delete(identifier);\n        this.instancesOptions.delete(identifier);\n        this.instances.delete(identifier);\n      }\n      // app.delete() will call this method on every provider to delete the services\n      // TODO: should we mark the provider as deleted?\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = (0, _asyncToGenerator2.default)(function* () {\n          var services = Array.from(this.instances.values());\n          yield Promise.all([...services.filter(service => 'INTERNAL' in service) // legacy services\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .map(service => service.INTERNAL.delete()), ...services.filter(service => '_delete' in service) // modularized services\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .map(service => service._delete())]);\n        });\n        function _delete() {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"isComponentSet\",\n      value: function isComponentSet() {\n        return this.component != null;\n      }\n    }, {\n      key: \"isInitialized\",\n      value: function isInitialized() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        return this.instances.has(identifier);\n      }\n    }, {\n      key: \"getOptions\",\n      value: function getOptions() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        return this.instancesOptions.get(identifier) || {};\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var _opts$options = opts.options,\n          options = _opts$options === void 0 ? {} : _opts$options;\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n        if (this.isInitialized(normalizedIdentifier)) {\n          throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\n        }\n        if (!this.isComponentSet()) {\n          throw Error(`Component ${this.name} has not been registered yet`);\n        }\n        var instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier,\n          options\n        });\n        // resolve any pending promise waiting for the service instance\n        for (var _ref3 of this.instancesDeferred.entries()) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n          var instanceIdentifier = _ref4[0];\n          var instanceDeferred = _ref4[1];\n          var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n          if (normalizedIdentifier === normalizedDeferredIdentifier) {\n            instanceDeferred.resolve(instance);\n          }\n        }\n        return instance;\n      }\n      /**\n       *\n       * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n       * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n       *\n       * @param identifier An optional instance identifier\n       * @returns a function to unregister the callback\n       */\n    }, {\n      key: \"onInit\",\n      value: function onInit(callback, identifier) {\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        var existingCallbacks = this.onInitCallbacks.get(normalizedIdentifier) ?? new Set();\n        existingCallbacks.add(callback);\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n        var existingInstance = this.instances.get(normalizedIdentifier);\n        if (existingInstance) {\n          callback(existingInstance, normalizedIdentifier);\n        }\n        return () => {\n          existingCallbacks.delete(callback);\n        };\n      }\n      /**\n       * Invoke onInit callbacks synchronously\n       * @param instance the service instance`\n       */\n    }, {\n      key: \"invokeOnInitCallbacks\",\n      value: function invokeOnInitCallbacks(instance, identifier) {\n        var callbacks = this.onInitCallbacks.get(identifier);\n        if (!callbacks) {\n          return;\n        }\n        for (var callback of callbacks) {\n          try {\n            callback(instance, identifier);\n          } catch {\n            // ignore errors in the onInit callback\n          }\n        }\n      }\n    }, {\n      key: \"getOrInitializeService\",\n      value: function getOrInitializeService(_ref5) {\n        var instanceIdentifier = _ref5.instanceIdentifier,\n          _ref5$options = _ref5.options,\n          options = _ref5$options === void 0 ? {} : _ref5$options;\n        var instance = this.instances.get(instanceIdentifier);\n        if (!instance && this.component) {\n          instance = this.component.instanceFactory(this.container, {\n            instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n            options\n          });\n          this.instances.set(instanceIdentifier, instance);\n          this.instancesOptions.set(instanceIdentifier, options);\n          /**\n           * Invoke onInit listeners.\n           * Note this.component.onInstanceCreated is different, which is used by the component creator,\n           * while onInit listeners are registered by consumers of the provider.\n           */\n          this.invokeOnInitCallbacks(instance, instanceIdentifier);\n          /**\n           * Order is important\n           * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n           * makes `isInitialized()` return true.\n           */\n          if (this.component.onInstanceCreated) {\n            try {\n              this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n            } catch {\n              // ignore errors in the onInstanceCreatedCallback\n            }\n          }\n        }\n        return instance || null;\n      }\n    }, {\n      key: \"normalizeInstanceIdentifier\",\n      value: function normalizeInstanceIdentifier() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        if (this.component) {\n          return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n        } else {\n          return identifier; // assume multiple instances are supported before the component is provided.\n        }\n      }\n    }, {\n      key: \"shouldAutoInitialize\",\n      value: function shouldAutoInitialize() {\n        return !!this.component && this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */;\n      }\n    }]);\n  }(); // undefined should be passed to the service factory for the default instance\n  function normalizeIdentifierForFactory(identifier) {\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n  }\n  function isComponentEager(component) {\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n   */\n  var ComponentContainer = exports.ComponentContainer = /*#__PURE__*/function () {\n    function ComponentContainer(name) {\n      (0, _classCallCheck2.default)(this, ComponentContainer);\n      this.name = name;\n      this.providers = new Map();\n    }\n    /**\n     *\n     * @param component Component being added\n     * @param overwrite When a component with the same name has already been registered,\n     * if overwrite is true: overwrite the existing component with the new component and create a new\n     * provider with the new component. It can be useful in tests where you want to use different mocks\n     * for different tests.\n     * if overwrite is false: throw an exception\n     */\n    return (0, _createClass2.default)(ComponentContainer, [{\n      key: \"addComponent\",\n      value: function addComponent(component) {\n        var provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n          throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\n        }\n        provider.setComponent(component);\n      }\n    }, {\n      key: \"addOrOverwriteComponent\",\n      value: function addOrOverwriteComponent(component) {\n        var provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n          // delete the existing provider from the container, so we can register the new component\n          this.providers.delete(component.name);\n        }\n        this.addComponent(component);\n      }\n      /**\n       * getProvider provides a type safe interface where it can only be called with a field name\n       * present in NameServiceMapping interface.\n       *\n       * Firebase SDKs providing services should extend NameServiceMapping interface to register\n       * themselves.\n       */\n    }, {\n      key: \"getProvider\",\n      value: function getProvider(name) {\n        if (this.providers.has(name)) {\n          return this.providers.get(name);\n        }\n        // create a Provider for a service that hasn't registered with Firebase\n        var provider = new Provider(name, this);\n        this.providers.set(name, provider);\n        return provider;\n      }\n    }, {\n      key: \"getProviders\",\n      value: function getProviders() {\n        return Array.from(this.providers.values());\n      }\n    }]);\n  }();\n});","lineCount":469,"map":[[11,2,1,0],[11,6,1,0,"_util"],[11,11,1,0],[11,14,1,0,"require"],[11,21,1,0],[11,22,1,0,"_dependencyMap"],[11,36,1,0],[12,2,3,0],[13,0,4,0],[14,0,5,0],[15,2,3,0],[15,6,6,6,"Component"],[15,15,6,15],[15,18,6,15,"exports"],[15,25,6,15],[15,26,6,15,"Component"],[15,35,6,15],[16,4,7,4],[17,0,8,0],[18,0,9,0],[19,0,10,0],[20,0,11,0],[21,0,12,0],[22,4,13,4],[22,13,13,4,"Component"],[22,23,13,16,"name"],[22,27,13,20],[22,29,13,22,"instanceFactory"],[22,44,13,37],[22,46,13,39,"type"],[22,50,13,43],[22,52,13,45],[23,6,13,45],[23,10,13,45,"_classCallCheck2"],[23,26,13,45],[23,27,13,45,"default"],[23,34,13,45],[23,42,13,45,"Component"],[23,51,13,45],[24,6,14,8],[24,10,14,12],[24,11,14,13,"name"],[24,15,14,17],[24,18,14,20,"name"],[24,22,14,24],[25,6,15,8],[25,10,15,12],[25,11,15,13,"instanceFactory"],[25,26,15,28],[25,29,15,31,"instanceFactory"],[25,44,15,46],[26,6,16,8],[26,10,16,12],[26,11,16,13,"type"],[26,15,16,17],[26,18,16,20,"type"],[26,22,16,24],[27,6,17,8],[27,10,17,12],[27,11,17,13,"multipleInstances"],[27,28,17,30],[27,31,17,33],[27,36,17,38],[28,6,18,8],[29,0,19,0],[30,0,20,0],[31,6,21,8],[31,10,21,12],[31,11,21,13,"serviceProps"],[31,23,21,25],[31,26,21,28],[31,27,21,29],[31,28,21,30],[32,6,22,8],[32,10,22,12],[32,11,22,13,"instantiationMode"],[32,28,22,30],[32,31,22,33],[32,37,22,39],[32,38,22,40],[33,6,23,8],[33,10,23,12],[33,11,23,13,"onInstanceCreated"],[33,28,23,30],[33,31,23,33],[33,35,23,37],[34,4,24,4],[35,4,24,5],[35,15,24,5,"_createClass2"],[35,28,24,5],[35,29,24,5,"default"],[35,36,24,5],[35,38,24,5,"Component"],[35,47,24,5],[36,6,24,5,"key"],[36,9,24,5],[37,6,24,5,"value"],[37,11,24,5],[37,13,25,4],[37,22,25,4,"setInstantiationMode"],[37,42,25,24,"setInstantiationMode"],[37,43,25,25,"mode"],[37,47,25,29],[37,49,25,31],[38,8,26,8],[38,12,26,12],[38,13,26,13,"instantiationMode"],[38,30,26,30],[38,33,26,33,"mode"],[38,37,26,37],[39,8,27,8],[39,15,27,15],[39,19,27,19],[40,6,28,4],[41,4,28,5],[42,6,28,5,"key"],[42,9,28,5],[43,6,28,5,"value"],[43,11,28,5],[43,13,29,4],[43,22,29,4,"setMultipleInstances"],[43,42,29,24,"setMultipleInstances"],[43,43,29,25,"multipleInstances"],[43,60,29,42],[43,62,29,44],[44,8,30,8],[44,12,30,12],[44,13,30,13,"multipleInstances"],[44,30,30,30],[44,33,30,33,"multipleInstances"],[44,50,30,50],[45,8,31,8],[45,15,31,15],[45,19,31,19],[46,6,32,4],[47,4,32,5],[48,6,32,5,"key"],[48,9,32,5],[49,6,32,5,"value"],[49,11,32,5],[49,13,33,4],[49,22,33,4,"setServiceProps"],[49,37,33,19,"setServiceProps"],[49,38,33,20,"props"],[49,43,33,25],[49,45,33,27],[50,8,34,8],[50,12,34,12],[50,13,34,13,"serviceProps"],[50,25,34,25],[50,28,34,28,"props"],[50,33,34,33],[51,8,35,8],[51,15,35,15],[51,19,35,19],[52,6,36,4],[53,4,36,5],[54,6,36,5,"key"],[54,9,36,5],[55,6,36,5,"value"],[55,11,36,5],[55,13,37,4],[55,22,37,4,"setInstanceCreatedCallback"],[55,48,37,30,"setInstanceCreatedCallback"],[55,49,37,31,"callback"],[55,57,37,39],[55,59,37,41],[56,8,38,8],[56,12,38,12],[56,13,38,13,"onInstanceCreated"],[56,30,38,30],[56,33,38,33,"callback"],[56,41,38,41],[57,8,39,8],[57,15,39,15],[57,19,39,19],[58,6,40,4],[59,4,40,5],[60,2,40,5],[61,2,43,0],[62,0,44,0],[63,0,45,0],[64,0,46,0],[65,0,47,0],[66,0,48,0],[67,0,49,0],[68,0,50,0],[69,0,51,0],[70,0,52,0],[71,0,53,0],[72,0,54,0],[73,0,55,0],[74,0,56,0],[75,0,57,0],[76,0,58,0],[77,2,59,0],[77,6,59,6,"DEFAULT_ENTRY_NAME"],[77,24,59,24],[77,27,59,27],[77,38,59,38],[79,2,61,0],[80,0,62,0],[81,0,63,0],[82,0,64,0],[83,0,65,0],[84,0,66,0],[85,0,67,0],[86,0,68,0],[87,0,69,0],[88,0,70,0],[89,0,71,0],[90,0,72,0],[91,0,73,0],[92,0,74,0],[93,0,75,0],[94,0,76,0],[95,2,77,0],[96,0,78,0],[97,0,79,0],[98,0,80,0],[99,2,77,0],[99,6,81,6,"Provider"],[99,14,81,14],[99,17,81,14,"exports"],[99,24,81,14],[99,25,81,14,"Provider"],[99,33,81,14],[100,4,82,4],[100,13,82,4,"Provider"],[100,22,82,16,"name"],[100,26,82,20],[100,28,82,22,"container"],[100,37,82,31],[100,39,82,33],[101,6,82,33],[101,10,82,33,"_classCallCheck2"],[101,26,82,33],[101,27,82,33,"default"],[101,34,82,33],[101,42,82,33,"Provider"],[101,50,82,33],[102,6,83,8],[102,10,83,12],[102,11,83,13,"name"],[102,15,83,17],[102,18,83,20,"name"],[102,22,83,24],[103,6,84,8],[103,10,84,12],[103,11,84,13,"container"],[103,20,84,22],[103,23,84,25,"container"],[103,32,84,34],[104,6,85,8],[104,10,85,12],[104,11,85,13,"component"],[104,20,85,22],[104,23,85,25],[104,27,85,29],[105,6,86,8],[105,10,86,12],[105,11,86,13,"instances"],[105,20,86,22],[105,23,86,25],[105,27,86,29,"Map"],[105,30,86,32],[105,31,86,33],[105,32,86,34],[106,6,87,8],[106,10,87,12],[106,11,87,13,"instancesDeferred"],[106,28,87,30],[106,31,87,33],[106,35,87,37,"Map"],[106,38,87,40],[106,39,87,41],[106,40,87,42],[107,6,88,8],[107,10,88,12],[107,11,88,13,"instancesOptions"],[107,27,88,29],[107,30,88,32],[107,34,88,36,"Map"],[107,37,88,39],[107,38,88,40],[107,39,88,41],[108,6,89,8],[108,10,89,12],[108,11,89,13,"onInitCallbacks"],[108,26,89,28],[108,29,89,31],[108,33,89,35,"Map"],[108,36,89,38],[108,37,89,39],[108,38,89,40],[109,4,90,4],[110,4,91,4],[111,0,92,0],[112,0,93,0],[113,0,94,0],[114,4,91,4],[114,15,91,4,"_createClass2"],[114,28,91,4],[114,29,91,4,"default"],[114,36,91,4],[114,38,91,4,"Provider"],[114,46,91,4],[115,6,91,4,"key"],[115,9,91,4],[116,6,91,4,"value"],[116,11,91,4],[116,13,95,4],[116,22,95,4,"get"],[116,25,95,7,"get"],[116,26,95,8,"identifier"],[116,36,95,18],[116,38,95,20],[117,8,96,8],[118,8,97,8],[118,12,97,14,"normalizedIdentifier"],[118,32,97,34],[118,35,97,37],[118,39,97,41],[118,40,97,42,"normalizeInstanceIdentifier"],[118,67,97,69],[118,68,97,70,"identifier"],[118,78,97,80],[118,79,97,81],[119,8,98,8],[119,12,98,12],[119,13,98,13],[119,17,98,17],[119,18,98,18,"instancesDeferred"],[119,35,98,35],[119,36,98,36,"has"],[119,39,98,39],[119,40,98,40,"normalizedIdentifier"],[119,60,98,60],[119,61,98,61],[119,63,98,63],[120,10,99,12],[120,14,99,18,"deferred"],[120,22,99,26],[120,25,99,29],[120,29,99,33,"Deferred"],[120,43,99,41],[120,44,99,42],[120,45,99,43],[121,10,100,12],[121,14,100,16],[121,15,100,17,"instancesDeferred"],[121,32,100,34],[121,33,100,35,"set"],[121,36,100,38],[121,37,100,39,"normalizedIdentifier"],[121,57,100,59],[121,59,100,61,"deferred"],[121,67,100,69],[121,68,100,70],[122,10,101,12],[122,14,101,16],[122,18,101,20],[122,19,101,21,"isInitialized"],[122,32,101,34],[122,33,101,35,"normalizedIdentifier"],[122,53,101,55],[122,54,101,56],[122,58,102,16],[122,62,102,20],[122,63,102,21,"shouldAutoInitialize"],[122,83,102,41],[122,84,102,42],[122,85,102,43],[122,87,102,45],[123,12,103,16],[124,12,104,16],[124,16,104,20],[125,14,105,20],[125,18,105,26,"instance"],[125,26,105,34],[125,29,105,37],[125,33,105,41],[125,34,105,42,"getOrInitializeService"],[125,56,105,64],[125,57,105,65],[126,16,106,24,"instanceIdentifier"],[126,34,106,42],[126,36,106,44,"normalizedIdentifier"],[127,14,107,20],[127,15,107,21],[127,16,107,22],[128,14,108,20],[128,18,108,24,"instance"],[128,26,108,32],[128,28,108,34],[129,16,109,24,"deferred"],[129,24,109,32],[129,25,109,33,"resolve"],[129,32,109,40],[129,33,109,41,"instance"],[129,41,109,49],[129,42,109,50],[130,14,110,20],[131,12,111,16],[131,13,111,17],[131,14,112,16],[131,21,112,23,"e"],[131,22,112,24],[131,24,112,26],[132,14,113,20],[133,14,114,20],[134,12,114,20],[135,10,116,12],[136,8,117,8],[137,8,118,8],[137,15,118,15],[137,19,118,19],[137,20,118,20,"instancesDeferred"],[137,37,118,37],[137,38,118,38,"get"],[137,41,118,41],[137,42,118,42,"normalizedIdentifier"],[137,62,118,62],[137,63,118,63],[137,64,118,64,"promise"],[137,71,118,71],[138,6,119,4],[139,4,119,5],[140,6,119,5,"key"],[140,9,119,5],[141,6,119,5,"value"],[141,11,119,5],[141,13,120,4],[141,22,120,4,"getImmediate"],[141,34,120,16,"getImmediate"],[141,35,120,17,"options"],[141,42,120,24],[141,44,120,26],[142,8,121,8],[143,8,122,8],[143,12,122,14,"normalizedIdentifier"],[143,32,122,34],[143,35,122,37],[143,39,122,41],[143,40,122,42,"normalizeInstanceIdentifier"],[143,67,122,69],[143,68,122,70,"options"],[143,75,122,77],[143,77,122,79,"identifier"],[143,87,122,89],[143,88,122,90],[144,8,123,8],[144,12,123,14,"optional"],[144,20,123,22],[144,23,123,25,"options"],[144,30,123,32],[144,32,123,34,"optional"],[144,40,123,42],[144,44,123,46],[144,49,123,51],[145,8,124,8],[145,12,124,12],[145,16,124,16],[145,17,124,17,"isInitialized"],[145,30,124,30],[145,31,124,31,"normalizedIdentifier"],[145,51,124,51],[145,52,124,52],[145,56,125,12],[145,60,125,16],[145,61,125,17,"shouldAutoInitialize"],[145,81,125,37],[145,82,125,38],[145,83,125,39],[145,85,125,41],[146,10,126,12],[146,14,126,16],[147,12,127,16],[147,19,127,23],[147,23,127,27],[147,24,127,28,"getOrInitializeService"],[147,46,127,50],[147,47,127,51],[148,14,128,20,"instanceIdentifier"],[148,32,128,38],[148,34,128,40,"normalizedIdentifier"],[149,12,129,16],[149,13,129,17],[149,14,129,18],[150,10,130,12],[150,11,130,13],[150,12,131,12],[150,19,131,19,"e"],[150,20,131,20],[150,22,131,22],[151,12,132,16],[151,16,132,20,"optional"],[151,24,132,28],[151,26,132,30],[152,14,133,20],[152,21,133,27],[152,25,133,31],[153,12,134,16],[153,13,134,17],[153,19,135,21],[154,14,136,20],[154,20,136,26,"e"],[154,21,136,27],[155,12,137,16],[156,10,138,12],[157,8,139,8],[157,9,139,9],[157,15,140,13],[158,10,141,12],[159,10,142,12],[159,14,142,16,"optional"],[159,22,142,24],[159,24,142,26],[160,12,143,16],[160,19,143,23],[160,23,143,27],[161,10,144,12],[161,11,144,13],[161,17,145,17],[162,12,146,16],[162,18,146,22,"Error"],[162,23,146,27],[162,24,146,28],[162,35,146,39],[162,39,146,43],[162,40,146,44,"name"],[162,44,146,48],[162,63,146,67],[162,64,146,68],[163,10,147,12],[164,8,148,8],[165,6,149,4],[166,4,149,5],[167,6,149,5,"key"],[167,9,149,5],[168,6,149,5,"value"],[168,11,149,5],[168,13,150,4],[168,22,150,4,"getComponent"],[168,34,150,16,"getComponent"],[168,35,150,16],[168,37,150,19],[169,8,151,8],[169,15,151,15],[169,19,151,19],[169,20,151,20,"component"],[169,29,151,29],[170,6,152,4],[171,4,152,5],[172,6,152,5,"key"],[172,9,152,5],[173,6,152,5,"value"],[173,11,152,5],[173,13,153,4],[173,22,153,4,"setComponent"],[173,34,153,16,"setComponent"],[173,35,153,17,"component"],[173,44,153,26],[173,46,153,28],[174,8,154,8],[174,12,154,12,"component"],[174,21,154,21],[174,22,154,22,"name"],[174,26,154,26],[174,31,154,31],[174,35,154,35],[174,36,154,36,"name"],[174,40,154,40],[174,42,154,42],[175,10,155,12],[175,16,155,18,"Error"],[175,21,155,23],[175,22,155,24],[175,47,155,49,"component"],[175,56,155,58],[175,57,155,59,"name"],[175,61,155,63],[175,78,155,80],[175,82,155,84],[175,83,155,85,"name"],[175,87,155,89],[175,90,155,92],[175,91,155,93],[176,8,156,8],[177,8,157,8],[177,12,157,12],[177,16,157,16],[177,17,157,17,"component"],[177,26,157,26],[177,28,157,28],[178,10,158,12],[178,16,158,18,"Error"],[178,21,158,23],[178,22,158,24],[178,39,158,41],[178,43,158,45],[178,44,158,46,"name"],[178,48,158,50],[178,76,158,78],[178,77,158,79],[179,8,159,8],[180,8,160,8],[180,12,160,12],[180,13,160,13,"component"],[180,22,160,22],[180,25,160,25,"component"],[180,34,160,34],[181,8,161,8],[182,8,162,8],[182,12,162,12],[182,13,162,13],[182,17,162,17],[182,18,162,18,"shouldAutoInitialize"],[182,38,162,38],[182,39,162,39],[182,40,162,40],[182,42,162,42],[183,10,163,12],[184,8,164,8],[185,8,165,8],[186,8,166,8],[186,12,166,12,"isComponentEager"],[186,28,166,28],[186,29,166,29,"component"],[186,38,166,38],[186,39,166,39],[186,41,166,41],[187,10,167,12],[187,14,167,16],[188,12,168,16],[188,16,168,20],[188,17,168,21,"getOrInitializeService"],[188,39,168,43],[188,40,168,44],[189,14,168,46,"instanceIdentifier"],[189,32,168,64],[189,34,168,66,"DEFAULT_ENTRY_NAME"],[190,12,168,85],[190,13,168,86],[190,14,168,87],[191,10,169,12],[191,11,169,13],[191,12,170,12],[191,19,170,19,"e"],[191,20,170,20],[191,22,170,22],[192,12,171,16],[193,12,172,16],[194,12,173,16],[195,12,174,16],[196,10,174,16],[197,8,176,8],[198,8,177,8],[199,8,178,8],[200,8,179,8],[201,8,180,8],[201,17,180,8,"_ref"],[201,21,180,8],[201,25,180,61],[201,29,180,65],[201,30,180,66,"instancesDeferred"],[201,47,180,83],[201,48,180,84,"entries"],[201,55,180,91],[201,56,180,92],[201,57,180,93],[201,59,180,95],[202,10,180,95],[202,14,180,95,"_ref2"],[202,19,180,95],[202,26,180,95,"_slicedToArray2"],[202,41,180,95],[202,42,180,95,"default"],[202,49,180,95],[202,51,180,95,"_ref"],[202,55,180,95],[203,10,180,95],[203,14,180,20,"instanceIdentifier"],[203,32,180,38],[203,35,180,38,"_ref2"],[203,40,180,38],[204,10,180,38],[204,14,180,40,"instanceDeferred"],[204,30,180,56],[204,33,180,56,"_ref2"],[204,38,180,56],[205,10,181,12],[205,14,181,18,"normalizedIdentifier"],[205,34,181,38],[205,37,181,41],[205,41,181,45],[205,42,181,46,"normalizeInstanceIdentifier"],[205,69,181,73],[205,70,181,74,"instanceIdentifier"],[205,88,181,92],[205,89,181,93],[206,10,182,12],[206,14,182,16],[207,12,183,16],[208,12,184,16],[208,16,184,22,"instance"],[208,24,184,30],[208,27,184,33],[208,31,184,37],[208,32,184,38,"getOrInitializeService"],[208,54,184,60],[208,55,184,61],[209,14,185,20,"instanceIdentifier"],[209,32,185,38],[209,34,185,40,"normalizedIdentifier"],[210,12,186,16],[210,13,186,17],[210,14,186,18],[211,12,187,16,"instanceDeferred"],[211,28,187,32],[211,29,187,33,"resolve"],[211,36,187,40],[211,37,187,41,"instance"],[211,45,187,49],[211,46,187,50],[212,10,188,12],[212,11,188,13],[212,12,189,12],[212,19,189,19,"e"],[212,20,189,20],[212,22,189,22],[213,12,190,16],[214,12,191,16],[215,10,191,16],[216,8,193,8],[217,6,194,4],[218,4,194,5],[219,6,194,5,"key"],[219,9,194,5],[220,6,194,5,"value"],[220,11,194,5],[220,13,195,4],[220,22,195,4,"clearInstance"],[220,35,195,17,"clearInstance"],[220,36,195,17],[220,38,195,51],[221,8,195,51],[221,12,195,18,"identifier"],[221,22,195,28],[221,25,195,28,"arguments"],[221,34,195,28],[221,35,195,28,"length"],[221,41,195,28],[221,49,195,28,"arguments"],[221,58,195,28],[221,66,195,28,"undefined"],[221,75,195,28],[221,78,195,28,"arguments"],[221,87,195,28],[221,93,195,31,"DEFAULT_ENTRY_NAME"],[221,111,195,49],[222,8,196,8],[222,12,196,12],[222,13,196,13,"instancesDeferred"],[222,30,196,30],[222,31,196,31,"delete"],[222,37,196,37],[222,38,196,38,"identifier"],[222,48,196,48],[222,49,196,49],[223,8,197,8],[223,12,197,12],[223,13,197,13,"instancesOptions"],[223,29,197,29],[223,30,197,30,"delete"],[223,36,197,36],[223,37,197,37,"identifier"],[223,47,197,47],[223,48,197,48],[224,8,198,8],[224,12,198,12],[224,13,198,13,"instances"],[224,22,198,22],[224,23,198,23,"delete"],[224,29,198,29],[224,30,198,30,"identifier"],[224,40,198,40],[224,41,198,41],[225,6,199,4],[226,6,200,4],[227,6,201,4],[228,4,201,4],[229,6,201,4,"key"],[229,9,201,4],[230,6,201,4,"value"],[230,11,201,4],[231,8,201,4],[231,12,201,4,"_delete2"],[231,20,201,4],[231,27,201,4,"_asyncToGenerator2"],[231,45,201,4],[231,46,201,4,"default"],[231,53,201,4],[231,55,202,4],[231,68,202,19],[232,10,203,8],[232,14,203,14,"services"],[232,22,203,22],[232,25,203,25,"Array"],[232,30,203,30],[232,31,203,31,"from"],[232,35,203,35],[232,36,203,36],[232,40,203,40],[232,41,203,41,"instances"],[232,50,203,50],[232,51,203,51,"values"],[232,57,203,57],[232,58,203,58],[232,59,203,59],[232,60,203,60],[233,10,204,8],[233,16,204,14,"Promise"],[233,23,204,21],[233,24,204,22,"all"],[233,27,204,25],[233,28,204,26],[233,29,205,12],[233,32,205,15,"services"],[233,40,205,23],[233,41,206,17,"filter"],[233,47,206,23],[233,48,206,24,"service"],[233,55,206,31],[233,59,206,35],[233,69,206,45],[233,73,206,49,"service"],[233,80,206,56],[233,81,206,57],[233,82,206,58],[234,10,207,16],[235,10,207,16],[235,11,208,17,"map"],[235,14,208,20],[235,15,208,21,"service"],[235,22,208,28],[235,26,208,32,"service"],[235,33,208,39],[235,34,208,40,"INTERNAL"],[235,42,208,48],[235,43,208,49,"delete"],[235,49,208,55],[235,50,208,56],[235,51,208,57],[235,52,208,58],[235,54,209,12],[235,57,209,15,"services"],[235,65,209,23],[235,66,210,17,"filter"],[235,72,210,23],[235,73,210,24,"service"],[235,80,210,31],[235,84,210,35],[235,93,210,44],[235,97,210,48,"service"],[235,104,210,55],[235,105,210,56],[235,106,210,57],[236,10,211,16],[237,10,211,16],[237,11,212,17,"map"],[237,14,212,20],[237,15,212,21,"service"],[237,22,212,28],[237,26,212,32,"service"],[237,33,212,39],[237,34,212,40,"_delete"],[237,41,212,47],[237,42,212,48],[237,43,212,49],[237,44,212,50],[237,45,213,9],[237,46,213,10],[238,8,214,4],[238,9,214,5],[239,8,214,5],[239,17,202,10,"delete"],[239,24,202,16,"delete"],[239,25,202,16],[240,10,202,16],[240,17,202,16,"_delete2"],[240,25,202,16],[240,26,202,16,"apply"],[240,31,202,16],[240,38,202,16,"arguments"],[240,47,202,16],[241,8,202,16],[242,8,202,16],[242,15,202,10,"delete"],[242,22,202,16],[243,6,202,16],[244,4,202,16],[245,6,202,16,"key"],[245,9,202,16],[246,6,202,16,"value"],[246,11,202,16],[246,13,215,4],[246,22,215,4,"isComponentSet"],[246,36,215,18,"isComponentSet"],[246,37,215,18],[246,39,215,21],[247,8,216,8],[247,15,216,15],[247,19,216,19],[247,20,216,20,"component"],[247,29,216,29],[247,33,216,33],[247,37,216,37],[248,6,217,4],[249,4,217,5],[250,6,217,5,"key"],[250,9,217,5],[251,6,217,5,"value"],[251,11,217,5],[251,13,218,4],[251,22,218,4,"isInitialized"],[251,35,218,17,"isInitialized"],[251,36,218,17],[251,38,218,51],[252,8,218,51],[252,12,218,18,"identifier"],[252,22,218,28],[252,25,218,28,"arguments"],[252,34,218,28],[252,35,218,28,"length"],[252,41,218,28],[252,49,218,28,"arguments"],[252,58,218,28],[252,66,218,28,"undefined"],[252,75,218,28],[252,78,218,28,"arguments"],[252,87,218,28],[252,93,218,31,"DEFAULT_ENTRY_NAME"],[252,111,218,49],[253,8,219,8],[253,15,219,15],[253,19,219,19],[253,20,219,20,"instances"],[253,29,219,29],[253,30,219,30,"has"],[253,33,219,33],[253,34,219,34,"identifier"],[253,44,219,44],[253,45,219,45],[254,6,220,4],[255,4,220,5],[256,6,220,5,"key"],[256,9,220,5],[257,6,220,5,"value"],[257,11,220,5],[257,13,221,4],[257,22,221,4,"getOptions"],[257,32,221,14,"getOptions"],[257,33,221,14],[257,35,221,48],[258,8,221,48],[258,12,221,15,"identifier"],[258,22,221,25],[258,25,221,25,"arguments"],[258,34,221,25],[258,35,221,25,"length"],[258,41,221,25],[258,49,221,25,"arguments"],[258,58,221,25],[258,66,221,25,"undefined"],[258,75,221,25],[258,78,221,25,"arguments"],[258,87,221,25],[258,93,221,28,"DEFAULT_ENTRY_NAME"],[258,111,221,46],[259,8,222,8],[259,15,222,15],[259,19,222,19],[259,20,222,20,"instancesOptions"],[259,36,222,36],[259,37,222,37,"get"],[259,40,222,40],[259,41,222,41,"identifier"],[259,51,222,51],[259,52,222,52],[259,56,222,56],[259,57,222,57],[259,58,222,58],[260,6,223,4],[261,4,223,5],[262,6,223,5,"key"],[262,9,223,5],[263,6,223,5,"value"],[263,11,223,5],[263,13,224,4],[263,22,224,4,"initialize"],[263,32,224,14,"initialize"],[263,33,224,14],[263,35,224,26],[264,8,224,26],[264,12,224,15,"opts"],[264,16,224,19],[264,19,224,19,"arguments"],[264,28,224,19],[264,29,224,19,"length"],[264,35,224,19],[264,43,224,19,"arguments"],[264,52,224,19],[264,60,224,19,"undefined"],[264,69,224,19],[264,72,224,19,"arguments"],[264,81,224,19],[264,87,224,22],[264,88,224,23],[264,89,224,24],[265,8,225,8],[265,12,225,8,"_opts$options"],[265,25,225,8],[265,28,225,33,"opts"],[265,32,225,37],[265,33,225,16,"options"],[265,40,225,23],[266,10,225,16,"options"],[266,17,225,23],[266,20,225,23,"_opts$options"],[266,33,225,23],[266,47,225,26],[266,48,225,27],[266,49,225,28],[266,52,225,28,"_opts$options"],[266,65,225,28],[267,8,226,8],[267,12,226,14,"normalizedIdentifier"],[267,32,226,34],[267,35,226,37],[267,39,226,41],[267,40,226,42,"normalizeInstanceIdentifier"],[267,67,226,69],[267,68,226,70,"opts"],[267,72,226,74],[267,73,226,75,"instanceIdentifier"],[267,91,226,93],[267,92,226,94],[268,8,227,8],[268,12,227,12],[268,16,227,16],[268,17,227,17,"isInitialized"],[268,30,227,30],[268,31,227,31,"normalizedIdentifier"],[268,51,227,51],[268,52,227,52],[268,54,227,54],[269,10,228,12],[269,16,228,18,"Error"],[269,21,228,23],[269,22,228,24],[269,25,228,27],[269,29,228,31],[269,30,228,32,"name"],[269,34,228,36],[269,38,228,40,"normalizedIdentifier"],[269,58,228,60],[269,90,228,92],[269,91,228,93],[270,8,229,8],[271,8,230,8],[271,12,230,12],[271,13,230,13],[271,17,230,17],[271,18,230,18,"isComponentSet"],[271,32,230,32],[271,33,230,33],[271,34,230,34],[271,36,230,36],[272,10,231,12],[272,16,231,18,"Error"],[272,21,231,23],[272,22,231,24],[272,35,231,37],[272,39,231,41],[272,40,231,42,"name"],[272,44,231,46],[272,74,231,76],[272,75,231,77],[273,8,232,8],[274,8,233,8],[274,12,233,14,"instance"],[274,20,233,22],[274,23,233,25],[274,27,233,29],[274,28,233,30,"getOrInitializeService"],[274,50,233,52],[274,51,233,53],[275,10,234,12,"instanceIdentifier"],[275,28,234,30],[275,30,234,32,"normalizedIdentifier"],[275,50,234,52],[276,10,235,12,"options"],[277,8,236,8],[277,9,236,9],[277,10,236,10],[278,8,237,8],[279,8,238,8],[279,17,238,8,"_ref3"],[279,22,238,8],[279,26,238,61],[279,30,238,65],[279,31,238,66,"instancesDeferred"],[279,48,238,83],[279,49,238,84,"entries"],[279,56,238,91],[279,57,238,92],[279,58,238,93],[279,60,238,95],[280,10,238,95],[280,14,238,95,"_ref4"],[280,19,238,95],[280,26,238,95,"_slicedToArray2"],[280,41,238,95],[280,42,238,95,"default"],[280,49,238,95],[280,51,238,95,"_ref3"],[280,56,238,95],[281,10,238,95],[281,14,238,20,"instanceIdentifier"],[281,32,238,38],[281,35,238,38,"_ref4"],[281,40,238,38],[282,10,238,38],[282,14,238,40,"instanceDeferred"],[282,30,238,56],[282,33,238,56,"_ref4"],[282,38,238,56],[283,10,239,12],[283,14,239,18,"normalizedDeferredIdentifier"],[283,42,239,46],[283,45,239,49],[283,49,239,53],[283,50,239,54,"normalizeInstanceIdentifier"],[283,77,239,81],[283,78,239,82,"instanceIdentifier"],[283,96,239,100],[283,97,239,101],[284,10,240,12],[284,14,240,16,"normalizedIdentifier"],[284,34,240,36],[284,39,240,41,"normalizedDeferredIdentifier"],[284,67,240,69],[284,69,240,71],[285,12,241,16,"instanceDeferred"],[285,28,241,32],[285,29,241,33,"resolve"],[285,36,241,40],[285,37,241,41,"instance"],[285,45,241,49],[285,46,241,50],[286,10,242,12],[287,8,243,8],[288,8,244,8],[288,15,244,15,"instance"],[288,23,244,23],[289,6,245,4],[290,6,246,4],[291,0,247,0],[292,0,248,0],[293,0,249,0],[294,0,250,0],[295,0,251,0],[296,0,252,0],[297,0,253,0],[298,4,246,4],[299,6,246,4,"key"],[299,9,246,4],[300,6,246,4,"value"],[300,11,246,4],[300,13,254,4],[300,22,254,4,"onInit"],[300,28,254,10,"onInit"],[300,29,254,11,"callback"],[300,37,254,19],[300,39,254,21,"identifier"],[300,49,254,31],[300,51,254,33],[301,8,255,8],[301,12,255,14,"normalizedIdentifier"],[301,32,255,34],[301,35,255,37],[301,39,255,41],[301,40,255,42,"normalizeInstanceIdentifier"],[301,67,255,69],[301,68,255,70,"identifier"],[301,78,255,80],[301,79,255,81],[302,8,256,8],[302,12,256,14,"existingCallbacks"],[302,29,256,31],[302,32,256,34],[302,36,256,38],[302,37,256,39,"onInitCallbacks"],[302,52,256,54],[302,53,256,55,"get"],[302,56,256,58],[302,57,256,59,"normalizedIdentifier"],[302,77,256,79],[302,78,256,80],[302,82,257,12],[302,86,257,16,"Set"],[302,89,257,19],[302,90,257,20],[302,91,257,21],[303,8,258,8,"existingCallbacks"],[303,25,258,25],[303,26,258,26,"add"],[303,29,258,29],[303,30,258,30,"callback"],[303,38,258,38],[303,39,258,39],[304,8,259,8],[304,12,259,12],[304,13,259,13,"onInitCallbacks"],[304,28,259,28],[304,29,259,29,"set"],[304,32,259,32],[304,33,259,33,"normalizedIdentifier"],[304,53,259,53],[304,55,259,55,"existingCallbacks"],[304,72,259,72],[304,73,259,73],[305,8,260,8],[305,12,260,14,"existingInstance"],[305,28,260,30],[305,31,260,33],[305,35,260,37],[305,36,260,38,"instances"],[305,45,260,47],[305,46,260,48,"get"],[305,49,260,51],[305,50,260,52,"normalizedIdentifier"],[305,70,260,72],[305,71,260,73],[306,8,261,8],[306,12,261,12,"existingInstance"],[306,28,261,28],[306,30,261,30],[307,10,262,12,"callback"],[307,18,262,20],[307,19,262,21,"existingInstance"],[307,35,262,37],[307,37,262,39,"normalizedIdentifier"],[307,57,262,59],[307,58,262,60],[308,8,263,8],[309,8,264,8],[309,15,264,15],[309,21,264,21],[310,10,265,12,"existingCallbacks"],[310,27,265,29],[310,28,265,30,"delete"],[310,34,265,36],[310,35,265,37,"callback"],[310,43,265,45],[310,44,265,46],[311,8,266,8],[311,9,266,9],[312,6,267,4],[313,6,268,4],[314,0,269,0],[315,0,270,0],[316,0,271,0],[317,4,268,4],[318,6,268,4,"key"],[318,9,268,4],[319,6,268,4,"value"],[319,11,268,4],[319,13,272,4],[319,22,272,4,"invokeOnInitCallbacks"],[319,43,272,25,"invokeOnInitCallbacks"],[319,44,272,26,"instance"],[319,52,272,34],[319,54,272,36,"identifier"],[319,64,272,46],[319,66,272,48],[320,8,273,8],[320,12,273,14,"callbacks"],[320,21,273,23],[320,24,273,26],[320,28,273,30],[320,29,273,31,"onInitCallbacks"],[320,44,273,46],[320,45,273,47,"get"],[320,48,273,50],[320,49,273,51,"identifier"],[320,59,273,61],[320,60,273,62],[321,8,274,8],[321,12,274,12],[321,13,274,13,"callbacks"],[321,22,274,22],[321,24,274,24],[322,10,275,12],[323,8,276,8],[324,8,277,8],[324,13,277,13],[324,17,277,19,"callback"],[324,25,277,27],[324,29,277,31,"callbacks"],[324,38,277,40],[324,40,277,42],[325,10,278,12],[325,14,278,16],[326,12,279,16,"callback"],[326,20,279,24],[326,21,279,25,"instance"],[326,29,279,33],[326,31,279,35,"identifier"],[326,41,279,45],[326,42,279,46],[327,10,280,12],[327,11,280,13],[327,12,281,12],[327,18,281,18],[328,12,282,16],[329,10,282,16],[330,8,284,8],[331,6,285,4],[332,4,285,5],[333,6,285,5,"key"],[333,9,285,5],[334,6,285,5,"value"],[334,11,285,5],[334,13,286,4],[334,22,286,4,"getOrInitializeService"],[334,44,286,26,"getOrInitializeService"],[334,45,286,26,"_ref5"],[334,50,286,26],[334,52,286,65],[335,8,286,65],[335,12,286,29,"instanceIdentifier"],[335,30,286,47],[335,33,286,47,"_ref5"],[335,38,286,47],[335,39,286,29,"instanceIdentifier"],[335,57,286,47],[336,10,286,47,"_ref5$options"],[336,23,286,47],[336,26,286,47,"_ref5"],[336,31,286,47],[336,32,286,49,"options"],[336,39,286,56],[337,10,286,49,"options"],[337,17,286,56],[337,20,286,56,"_ref5$options"],[337,33,286,56],[337,47,286,59],[337,48,286,60],[337,49,286,61],[337,52,286,61,"_ref5$options"],[337,65,286,61],[338,8,287,8],[338,12,287,12,"instance"],[338,20,287,20],[338,23,287,23],[338,27,287,27],[338,28,287,28,"instances"],[338,37,287,37],[338,38,287,38,"get"],[338,41,287,41],[338,42,287,42,"instanceIdentifier"],[338,60,287,60],[338,61,287,61],[339,8,288,8],[339,12,288,12],[339,13,288,13,"instance"],[339,21,288,21],[339,25,288,25],[339,29,288,29],[339,30,288,30,"component"],[339,39,288,39],[339,41,288,41],[340,10,289,12,"instance"],[340,18,289,20],[340,21,289,23],[340,25,289,27],[340,26,289,28,"component"],[340,35,289,37],[340,36,289,38,"instanceFactory"],[340,51,289,53],[340,52,289,54],[340,56,289,58],[340,57,289,59,"container"],[340,66,289,68],[340,68,289,70],[341,12,290,16,"instanceIdentifier"],[341,30,290,34],[341,32,290,36,"normalizeIdentifierForFactory"],[341,61,290,65],[341,62,290,66,"instanceIdentifier"],[341,80,290,84],[341,81,290,85],[342,12,291,16,"options"],[343,10,292,12],[343,11,292,13],[343,12,292,14],[344,10,293,12],[344,14,293,16],[344,15,293,17,"instances"],[344,24,293,26],[344,25,293,27,"set"],[344,28,293,30],[344,29,293,31,"instanceIdentifier"],[344,47,293,49],[344,49,293,51,"instance"],[344,57,293,59],[344,58,293,60],[345,10,294,12],[345,14,294,16],[345,15,294,17,"instancesOptions"],[345,31,294,33],[345,32,294,34,"set"],[345,35,294,37],[345,36,294,38,"instanceIdentifier"],[345,54,294,56],[345,56,294,58,"options"],[345,63,294,65],[345,64,294,66],[346,10,295,12],[347,0,296,0],[348,0,297,0],[349,0,298,0],[350,0,299,0],[351,10,300,12],[351,14,300,16],[351,15,300,17,"invokeOnInitCallbacks"],[351,36,300,38],[351,37,300,39,"instance"],[351,45,300,47],[351,47,300,49,"instanceIdentifier"],[351,65,300,67],[351,66,300,68],[352,10,301,12],[353,0,302,0],[354,0,303,0],[355,0,304,0],[356,0,305,0],[357,10,306,12],[357,14,306,16],[357,18,306,20],[357,19,306,21,"component"],[357,28,306,30],[357,29,306,31,"onInstanceCreated"],[357,46,306,48],[357,48,306,50],[358,12,307,16],[358,16,307,20],[359,14,308,20],[359,18,308,24],[359,19,308,25,"component"],[359,28,308,34],[359,29,308,35,"onInstanceCreated"],[359,46,308,52],[359,47,308,53],[359,51,308,57],[359,52,308,58,"container"],[359,61,308,67],[359,63,308,69,"instanceIdentifier"],[359,81,308,87],[359,83,308,89,"instance"],[359,91,308,97],[359,92,308,98],[360,12,309,16],[360,13,309,17],[360,14,310,16],[360,20,310,22],[361,14,311,20],[362,12,311,20],[363,10,313,12],[364,8,314,8],[365,8,315,8],[365,15,315,15,"instance"],[365,23,315,23],[365,27,315,27],[365,31,315,31],[366,6,316,4],[367,4,316,5],[368,6,316,5,"key"],[368,9,316,5],[369,6,316,5,"value"],[369,11,316,5],[369,13,317,4],[369,22,317,4,"normalizeInstanceIdentifier"],[369,49,317,31,"normalizeInstanceIdentifier"],[369,50,317,31],[369,52,317,65],[370,8,317,65],[370,12,317,32,"identifier"],[370,22,317,42],[370,25,317,42,"arguments"],[370,34,317,42],[370,35,317,42,"length"],[370,41,317,42],[370,49,317,42,"arguments"],[370,58,317,42],[370,66,317,42,"undefined"],[370,75,317,42],[370,78,317,42,"arguments"],[370,87,317,42],[370,93,317,45,"DEFAULT_ENTRY_NAME"],[370,111,317,63],[371,8,318,8],[371,12,318,12],[371,16,318,16],[371,17,318,17,"component"],[371,26,318,26],[371,28,318,28],[372,10,319,12],[372,17,319,19],[372,21,319,23],[372,22,319,24,"component"],[372,31,319,33],[372,32,319,34,"multipleInstances"],[372,49,319,51],[372,52,319,54,"identifier"],[372,62,319,64],[372,65,319,67,"DEFAULT_ENTRY_NAME"],[372,83,319,85],[373,8,320,8],[373,9,320,9],[373,15,321,13],[374,10,322,12],[374,17,322,19,"identifier"],[374,27,322,29],[374,28,322,30],[374,29,322,31],[375,8,323,8],[376,6,324,4],[377,4,324,5],[378,6,324,5,"key"],[378,9,324,5],[379,6,324,5,"value"],[379,11,324,5],[379,13,325,4],[379,22,325,4,"shouldAutoInitialize"],[379,42,325,24,"shouldAutoInitialize"],[379,43,325,24],[379,45,325,27],[380,8,326,8],[380,15,326,16],[380,16,326,17],[380,17,326,18],[380,21,326,22],[380,22,326,23,"component"],[380,31,326,32],[380,35,327,12],[380,39,327,16],[380,40,327,17,"component"],[380,49,327,26],[380,50,327,27,"instantiationMode"],[380,67,327,44],[380,72,327,49],[380,82,327,59],[380,83,327,60],[381,6,328,4],[382,4,328,5],[383,2,328,5],[383,7,330,0],[384,2,331,0],[384,11,331,9,"normalizeIdentifierForFactory"],[384,40,331,38,"normalizeIdentifierForFactory"],[384,41,331,39,"identifier"],[384,51,331,49],[384,53,331,51],[385,4,332,4],[385,11,332,11,"identifier"],[385,21,332,21],[385,26,332,26,"DEFAULT_ENTRY_NAME"],[385,44,332,44],[385,47,332,47,"undefined"],[385,56,332,56],[385,59,332,59,"identifier"],[385,69,332,69],[386,2,333,0],[387,2,334,0],[387,11,334,9,"isComponentEager"],[387,27,334,25,"isComponentEager"],[387,28,334,26,"component"],[387,37,334,35],[387,39,334,37],[388,4,335,4],[388,11,335,11,"component"],[388,20,335,20],[388,21,335,21,"instantiationMode"],[388,38,335,38],[388,43,335,43],[388,50,335,50],[388,51,335,51],[389,2,336,0],[391,2,338,0],[392,0,339,0],[393,0,340,0],[394,0,341,0],[395,0,342,0],[396,0,343,0],[397,0,344,0],[398,0,345,0],[399,0,346,0],[400,0,347,0],[401,0,348,0],[402,0,349,0],[403,0,350,0],[404,0,351,0],[405,0,352,0],[406,0,353,0],[407,2,354,0],[408,0,355,0],[409,0,356,0],[410,2,354,0],[410,6,357,6,"ComponentContainer"],[410,24,357,24],[410,27,357,24,"exports"],[410,34,357,24],[410,35,357,24,"ComponentContainer"],[410,53,357,24],[411,4,358,4],[411,13,358,4,"ComponentContainer"],[411,32,358,16,"name"],[411,36,358,20],[411,38,358,22],[412,6,358,22],[412,10,358,22,"_classCallCheck2"],[412,26,358,22],[412,27,358,22,"default"],[412,34,358,22],[412,42,358,22,"ComponentContainer"],[412,60,358,22],[413,6,359,8],[413,10,359,12],[413,11,359,13,"name"],[413,15,359,17],[413,18,359,20,"name"],[413,22,359,24],[414,6,360,8],[414,10,360,12],[414,11,360,13,"providers"],[414,20,360,22],[414,23,360,25],[414,27,360,29,"Map"],[414,30,360,32],[414,31,360,33],[414,32,360,34],[415,4,361,4],[416,4,362,4],[417,0,363,0],[418,0,364,0],[419,0,365,0],[420,0,366,0],[421,0,367,0],[422,0,368,0],[423,0,369,0],[424,0,370,0],[425,4,362,4],[425,15,362,4,"_createClass2"],[425,28,362,4],[425,29,362,4,"default"],[425,36,362,4],[425,38,362,4,"ComponentContainer"],[425,56,362,4],[426,6,362,4,"key"],[426,9,362,4],[427,6,362,4,"value"],[427,11,362,4],[427,13,371,4],[427,22,371,4,"addComponent"],[427,34,371,16,"addComponent"],[427,35,371,17,"component"],[427,44,371,26],[427,46,371,28],[428,8,372,8],[428,12,372,14,"provider"],[428,20,372,22],[428,23,372,25],[428,27,372,29],[428,28,372,30,"getProvider"],[428,39,372,41],[428,40,372,42,"component"],[428,49,372,51],[428,50,372,52,"name"],[428,54,372,56],[428,55,372,57],[429,8,373,8],[429,12,373,12,"provider"],[429,20,373,20],[429,21,373,21,"isComponentSet"],[429,35,373,35],[429,36,373,36],[429,37,373,37],[429,39,373,39],[430,10,374,12],[430,16,374,18],[430,20,374,22,"Error"],[430,25,374,27],[430,26,374,28],[430,39,374,41,"component"],[430,48,374,50],[430,49,374,51,"name"],[430,53,374,55],[430,90,374,92],[430,94,374,96],[430,95,374,97,"name"],[430,99,374,101],[430,101,374,103],[430,102,374,104],[431,8,375,8],[432,8,376,8,"provider"],[432,16,376,16],[432,17,376,17,"setComponent"],[432,29,376,29],[432,30,376,30,"component"],[432,39,376,39],[432,40,376,40],[433,6,377,4],[434,4,377,5],[435,6,377,5,"key"],[435,9,377,5],[436,6,377,5,"value"],[436,11,377,5],[436,13,378,4],[436,22,378,4,"addOrOverwriteComponent"],[436,45,378,27,"addOrOverwriteComponent"],[436,46,378,28,"component"],[436,55,378,37],[436,57,378,39],[437,8,379,8],[437,12,379,14,"provider"],[437,20,379,22],[437,23,379,25],[437,27,379,29],[437,28,379,30,"getProvider"],[437,39,379,41],[437,40,379,42,"component"],[437,49,379,51],[437,50,379,52,"name"],[437,54,379,56],[437,55,379,57],[438,8,380,8],[438,12,380,12,"provider"],[438,20,380,20],[438,21,380,21,"isComponentSet"],[438,35,380,35],[438,36,380,36],[438,37,380,37],[438,39,380,39],[439,10,381,12],[440,10,382,12],[440,14,382,16],[440,15,382,17,"providers"],[440,24,382,26],[440,25,382,27,"delete"],[440,31,382,33],[440,32,382,34,"component"],[440,41,382,43],[440,42,382,44,"name"],[440,46,382,48],[440,47,382,49],[441,8,383,8],[442,8,384,8],[442,12,384,12],[442,13,384,13,"addComponent"],[442,25,384,25],[442,26,384,26,"component"],[442,35,384,35],[442,36,384,36],[443,6,385,4],[444,6,386,4],[445,0,387,0],[446,0,388,0],[447,0,389,0],[448,0,390,0],[449,0,391,0],[450,0,392,0],[451,4,386,4],[452,6,386,4,"key"],[452,9,386,4],[453,6,386,4,"value"],[453,11,386,4],[453,13,393,4],[453,22,393,4,"getProvider"],[453,33,393,15,"getProvider"],[453,34,393,16,"name"],[453,38,393,20],[453,40,393,22],[454,8,394,8],[454,12,394,12],[454,16,394,16],[454,17,394,17,"providers"],[454,26,394,26],[454,27,394,27,"has"],[454,30,394,30],[454,31,394,31,"name"],[454,35,394,35],[454,36,394,36],[454,38,394,38],[455,10,395,12],[455,17,395,19],[455,21,395,23],[455,22,395,24,"providers"],[455,31,395,33],[455,32,395,34,"get"],[455,35,395,37],[455,36,395,38,"name"],[455,40,395,42],[455,41,395,43],[456,8,396,8],[457,8,397,8],[458,8,398,8],[458,12,398,14,"provider"],[458,20,398,22],[458,23,398,25],[458,27,398,29,"Provider"],[458,35,398,37],[458,36,398,38,"name"],[458,40,398,42],[458,42,398,44],[458,46,398,48],[458,47,398,49],[459,8,399,8],[459,12,399,12],[459,13,399,13,"providers"],[459,22,399,22],[459,23,399,23,"set"],[459,26,399,26],[459,27,399,27,"name"],[459,31,399,31],[459,33,399,33,"provider"],[459,41,399,41],[459,42,399,42],[460,8,400,8],[460,15,400,15,"provider"],[460,23,400,23],[461,6,401,4],[462,4,401,5],[463,6,401,5,"key"],[463,9,401,5],[464,6,401,5,"value"],[464,11,401,5],[464,13,402,4],[464,22,402,4,"getProviders"],[464,34,402,16,"getProviders"],[464,35,402,16],[464,37,402,19],[465,8,403,8],[465,15,403,15,"Array"],[465,20,403,20],[465,21,403,21,"from"],[465,25,403,25],[465,26,403,26],[465,30,403,30],[465,31,403,31,"providers"],[465,40,403,40],[465,41,403,41,"values"],[465,47,403,47],[465,48,403,48],[465,49,403,49],[465,50,403,50],[466,6,404,4],[467,4,404,5],[468,2,404,5],[469,0,404,5],[469,3]],"functionMap":{"names":["<global>","Component","Component#constructor","Component#setInstantiationMode","Component#setMultipleInstances","Component#setServiceProps","Component#setInstanceCreatedCallback","Provider","Provider#constructor","Provider#get","Provider#getImmediate","Provider#getComponent","Provider#setComponent","Provider#clearInstance","Provider#_delete","services.filter$argument_0","services.filter.map$argument_0","Provider#isComponentSet","Provider#isInitialized","Provider#getOptions","Provider#initialize","Provider#onInit","<anonymous>","Provider#invokeOnInitCallbacks","Provider#getOrInitializeService","Provider#normalizeInstanceIdentifier","Provider#shouldAutoInitialize","normalizeIdentifierForFactory","isComponentEager","ComponentContainer","ComponentContainer#constructor","ComponentContainer#addComponent","ComponentContainer#addOrOverwriteComponent","ComponentContainer#getProvider","ComponentContainer#getProviders"],"mappings":"AAA;ACK;ICO;KDW;IEC;KFG;IGC;KHG;IIC;KJG;IKC;KLG;CDC;AOwC;ICC;KDQ;IEK;KFwB;IGC;KH6B;IIC;KJE;IKC;KLyC;IMC;KNI;IOG;wBCI,gCD;qBEE,oCF;wBCE,+BD;qBEE,4BF;KPE;IUC;KVE;IWC;KXE;IYC;KZE;IaC;KbqB;IcS;eCU;SDE;KdC;IgBK;KhBa;IiBC;KjB8B;IkBC;KlBO;ImBC;KnBG;CPC;A2BE;C3BE;A4BC;C5BE;A6BqB;ICC;KDG;IEU;KFM;IGC;KHO;IIQ;KJQ;IKC;KLE;C7BC"}},"type":"js/module"}]}