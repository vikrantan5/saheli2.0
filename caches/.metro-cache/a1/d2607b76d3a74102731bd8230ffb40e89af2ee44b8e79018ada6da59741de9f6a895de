{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"PWvtvXU7MaET6Yd1Gn8oQOXJQ8A=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":67,"index":109}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoLocation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":42,"index":152}}],"key":"n9eQB3huKj/lRnIsgaXRKPJKjaY=","exportNames":["*"]}},{"name":"./Location.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":153},"end":{"line":4,"column":53,"index":206}}],"key":"QoIrjHWCWA2K0AZhEI/d0eITBhA=","exportNames":["*"]}},{"name":"./LocationSubscribers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":207},"end":{"line":5,"column":104,"index":311}}],"key":"ECD2ecHoQ4d6PxMbJzhCjCmKfZg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.enableNetworkProviderAsync = enableNetworkProviderAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.getBackgroundPermissionsAsync = getBackgroundPermissionsAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getForegroundPermissionsAsync = getForegroundPermissionsAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.getLastKnownPositionAsync = getLastKnownPositionAsync;\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.isBackgroundLocationAvailableAsync = isBackgroundLocationAvailableAsync;\n  exports.requestBackgroundPermissionsAsync = requestBackgroundPermissionsAsync;\n  exports.requestForegroundPermissionsAsync = requestForegroundPermissionsAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.useForegroundPermissions = exports.useBackgroundPermissions = void 0;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.watchPositionAsync = watchPositionAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expo = require(_dependencyMap[2], \"expo\");\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _ExpoLocation = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoLocation\"));\n  var _Location = require(_dependencyMap[5], \"./Location.types\");\n  var _LocationSubscribers = require(_dependencyMap[6], \"./LocationSubscribers\");\n  // Flag for warning about background services not being available in Expo Go\n  var warnAboutExpoGoDisplayed = false;\n  // @needsAudit\n  /**\n   * Check status of location providers.\n   * @return A promise which fulfills with an object of type [`LocationProviderStatus`](#locationproviderstatus).\n   */\n  function getProviderStatusAsync() {\n    return _getProviderStatusAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to turn on high accuracy location mode which enables network provider that uses\n   * Google Play services to improve location accuracy and location-based services.\n   * @return A promise resolving as soon as the user accepts the dialog. Rejects if denied.\n   *\n   * @platform android\n   */\n  function _getProviderStatusAsync() {\n    _getProviderStatusAsync = (0, _asyncToGenerator2.default)(function* () {\n      return _ExpoLocation.default.getProviderStatusAsync();\n    });\n    return _getProviderStatusAsync.apply(this, arguments);\n  }\n  function enableNetworkProviderAsync() {\n    return _enableNetworkProviderAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Requests for one-time delivery of the user's current location.\n   * Depending on given `accuracy` option it may take some time to resolve,\n   * especially when you're inside a building.\n   * > __Note:__ Calling it causes the location manager to obtain a location fix which may take several\n   * > seconds. Consider using [`getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\n   * > if you expect to get a quick response and high accuracy is not required.\n   * @param options\n   * @return A promise which fulfills with an object of type [`LocationObject`](#locationobject).\n   */\n  function _enableNetworkProviderAsync() {\n    _enableNetworkProviderAsync = (0, _asyncToGenerator2.default)(function* () {\n      // If network provider is disabled (user's location mode is set to \"Device only\"),\n      // Android's location provider may not give you any results. Use this method in order to ask the user\n      // to change the location mode to \"High accuracy\" which uses Google Play services and enables network provider.\n      // `getCurrentPositionAsync` and `watchPositionAsync` are doing it automatically anyway.\n      if (_expoModulesCore.Platform.OS === 'android') {\n        return _ExpoLocation.default.enableNetworkProviderAsync();\n      }\n    });\n    return _enableNetworkProviderAsync.apply(this, arguments);\n  }\n  function getCurrentPositionAsync() {\n    return _getCurrentPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Gets the last known position of the device or `null` if it's not available or doesn't match given\n   * requirements such as maximum age or required accuracy.\n   * It's considered to be faster than `getCurrentPositionAsync` as it doesn't request for the current\n   * location, but keep in mind the returned location may not be up-to-date.\n   * @param options\n   * @return A promise which fulfills with an object of type [`LocationObject`](#locationobject) or\n   * `null` if it's not available or doesn't match given requirements such as maximum age or required\n   * accuracy.\n   */\n  function _getCurrentPositionAsync() {\n    _getCurrentPositionAsync = (0, _asyncToGenerator2.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _ExpoLocation.default.getCurrentPositionAsync(options);\n    });\n    return _getCurrentPositionAsync.apply(this, arguments);\n  }\n  function getLastKnownPositionAsync() {\n    return _getLastKnownPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribe to location updates from the device. Updates will only occur while the application is in\n   * the foreground. To get location updates while in background you'll need to use\n   * [`startLocationUpdatesAsync`](#locationstartlocationupdatesasynctaskname-options).\n   * @param options\n   * @param callback This function is called on each location update. It receives an object of type\n   * [`LocationObject`](#locationobject) as the first argument.\n   * @param errorHandler This function is called when an error occurs. It receives a string with the\n   * error message as the first argument.\n   * @return A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n   */\n  function _getLastKnownPositionAsync() {\n    _getLastKnownPositionAsync = (0, _asyncToGenerator2.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _ExpoLocation.default.getLastKnownPositionAsync(options);\n    });\n    return _getLastKnownPositionAsync.apply(this, arguments);\n  }\n  function watchPositionAsync(_x, _x2, _x3) {\n    return _watchPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\n   * and waits for a couple of updates, and then returns the one that is accurate enough.\n   * @return A promise which fulfills with an object of type [`LocationHeadingObject`](#locationheadingobject).\n   */\n  function _watchPositionAsync() {\n    _watchPositionAsync = (0, _asyncToGenerator2.default)(function* (options, callback, errorHandler) {\n      var watchId = _LocationSubscribers.LocationSubscriber.registerCallback(callback);\n      errorHandler && _LocationSubscribers.LocationErrorSubscriber.registerCallbackForId(watchId, errorHandler);\n      yield _ExpoLocation.default.watchPositionImplAsync(watchId, options);\n      return {\n        remove() {\n          _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n          errorHandler && _LocationSubscribers.LocationErrorSubscriber.unregisterCallback(watchId);\n        }\n      };\n    });\n    return _watchPositionAsync.apply(this, arguments);\n  }\n  function getHeadingAsync() {\n    return _getHeadingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribe to compass updates from the device.\n   *\n   * @param callback This function is called on each compass update. It receives an object of type\n   * [LocationHeadingObject](#locationheadingobject) as the first argument.\n   * @param errorHandler This function is called when an error occurs. It receives a string with the\n   * error message as the first argument.\n   * @return A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _getHeadingAsync() {\n    _getHeadingAsync = (0, _asyncToGenerator2.default)(function* () {\n      return new Promise(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)(function* (resolve, reject) {\n          var tries = 0;\n          var subscriber = undefined;\n          try {\n            subscriber = yield watchHeadingAsync(heading => {\n              if (heading.accuracy > 1 || tries > 5) {\n                subscriber?.remove();\n                resolve(heading);\n              } else {\n                tries += 1;\n              }\n            }, reason => {\n              subscriber?.remove();\n              reject(reason);\n            });\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x12, _x13) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n    return _getHeadingAsync.apply(this, arguments);\n  }\n  function watchHeadingAsync(_x4, _x5) {\n    return _watchHeadingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Geocode an address string to latitude-longitude location.\n   *\n   * On Android, you must request location permissions with [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync)\n   * before geocoding can be used.\n   *\n   * > **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n   * > requests at a time can result in an error, so they have to be managed properly.\n   * > It's also discouraged to use geocoding while the app is in the background and its results won't\n   * > be shown to the user immediately.\n   *\n   * @param address A string representing address, eg. `\"Baker Street London\"`.\n   * @return A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation)\n   * objects.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _watchHeadingAsync() {\n    _watchHeadingAsync = (0, _asyncToGenerator2.default)(function* (callback, errorHandler) {\n      var watchId = _LocationSubscribers.HeadingSubscriber.registerCallback(callback);\n      errorHandler && _LocationSubscribers.LocationErrorSubscriber.registerCallbackForId(watchId, errorHandler);\n      yield _ExpoLocation.default.watchDeviceHeading(watchId);\n      return {\n        remove() {\n          _LocationSubscribers.HeadingSubscriber.unregisterCallback(watchId);\n          errorHandler && _LocationSubscribers.LocationErrorSubscriber.unregisterCallback(watchId);\n        }\n      };\n    });\n    return _watchHeadingAsync.apply(this, arguments);\n  }\n  function geocodeAsync(_x6) {\n    return _geocodeAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Reverse geocode a location to postal address.\n   *\n   * On Android, you must request location permissions with [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync)\n   * before geocoding can be used.\n   *\n   * > **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n   * > requests at a time can result in an error, so they have to be managed properly.\n   * > It's also discouraged to use geocoding while the app is in the background and its results won't\n   * > be shown to the user immediately.\n   *\n   * @param location An object representing a location.\n   * @return A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _geocodeAsync() {\n    _geocodeAsync = (0, _asyncToGenerator2.default)(function* (address) {\n      if (typeof address !== 'string') {\n        throw new TypeError(`Address to geocode must be a string. Got ${address} instead.`);\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (__DEV__) {\n          console.warn('The Geocoding API has been removed in SDK 49, use Place Autocomplete service instead' + '(https://developers.google.com/maps/documentation/places/web-service/autocomplete)');\n        }\n        return [];\n      }\n      return yield _ExpoLocation.default.geocodeAsync(address);\n    });\n    return _geocodeAsync.apply(this, arguments);\n  }\n  function reverseGeocodeAsync(_x7) {\n    return _reverseGeocodeAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Checks user's permissions for accessing location while the app is in the foreground.\n   * @return A promise that fulfills with an object of type [`LocationPermissionResponse`](#locationpermissionresponse).\n   */\n  function _reverseGeocodeAsync() {\n    _reverseGeocodeAsync = (0, _asyncToGenerator2.default)(function* (location) {\n      if (typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n        throw new TypeError('Location to reverse-geocode must be an object with number properties `latitude` and `longitude`.');\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (__DEV__) {\n          console.warn('The Geocoding API has been removed in SDK 49, use Place Autocomplete service instead' + '(https://developers.google.com/maps/documentation/places/web-service/autocomplete)');\n        }\n        return [];\n      }\n      return yield _ExpoLocation.default.reverseGeocodeAsync(location);\n    });\n    return _reverseGeocodeAsync.apply(this, arguments);\n  }\n  function getForegroundPermissionsAsync() {\n    return _getForegroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to grant permissions for location while the app is in the foreground.\n   * @return A promise that fulfills with an object of type [`LocationPermissionResponse`](#locationpermissionresponse).\n   */\n  function _getForegroundPermissionsAsync() {\n    _getForegroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.getForegroundPermissionsAsync();\n    });\n    return _getForegroundPermissionsAsync.apply(this, arguments);\n  }\n  function requestForegroundPermissionsAsync() {\n    return _requestForegroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions for the foreground location.\n   * This uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Location.useForegroundPermissions();\n   * ```\n   */\n  function _requestForegroundPermissionsAsync() {\n    _requestForegroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.requestForegroundPermissionsAsync();\n    });\n    return _requestForegroundPermissionsAsync.apply(this, arguments);\n  }\n  var useForegroundPermissions = exports.useForegroundPermissions = (0, _expoModulesCore.createPermissionHook)({\n    getMethod: getForegroundPermissionsAsync,\n    requestMethod: requestForegroundPermissionsAsync\n  });\n  // @needsAudit\n  /**\n   * Checks user's permissions for accessing location while the app is in the background.\n   * @return A promise that fulfills with an object of type [`PermissionResponse`](#permissionresponse).\n   */\n  function getBackgroundPermissionsAsync() {\n    return _getBackgroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to grant permissions for location while the app is in the background.\n   * On __Android 11 or higher__: this method will open the system settings page - before that happens\n   * you should explain to the user why your application needs background location permission.\n   * For example, you can use `Modal` component from `react-native` to do that.\n   * > __Note__: Foreground permissions should be granted before asking for the background permissions\n   * (your app can't obtain background permission without foreground permission).\n   * @return A promise that fulfills with an object of type [`PermissionResponse`](#permissionresponse).\n   */\n  function _getBackgroundPermissionsAsync() {\n    _getBackgroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.getBackgroundPermissionsAsync();\n    });\n    return _getBackgroundPermissionsAsync.apply(this, arguments);\n  }\n  function requestBackgroundPermissionsAsync() {\n    return _requestBackgroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions for the background location.\n   * This uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\n   * interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Location.useBackgroundPermissions();\n   * ```\n   */\n  function _requestBackgroundPermissionsAsync() {\n    _requestBackgroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.requestBackgroundPermissionsAsync();\n    });\n    return _requestBackgroundPermissionsAsync.apply(this, arguments);\n  }\n  var useBackgroundPermissions = exports.useBackgroundPermissions = (0, _expoModulesCore.createPermissionHook)({\n    getMethod: getBackgroundPermissionsAsync,\n    requestMethod: requestBackgroundPermissionsAsync\n  });\n  // --- Location service\n  // @needsAudit\n  /**\n   * Checks whether location services are enabled by the user.\n   * @return A promise which fulfills to `true` if location services are enabled on the device,\n   * or `false` if not.\n   */\n  function hasServicesEnabledAsync() {\n    return _hasServicesEnabledAsync.apply(this, arguments);\n  } // --- Background location updates\n  function _hasServicesEnabledAsync() {\n    _hasServicesEnabledAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.hasServicesEnabledAsync();\n    });\n    return _hasServicesEnabledAsync.apply(this, arguments);\n  }\n  function _validate(taskName) {\n    if (!taskName || typeof taskName !== 'string') {\n      throw new Error(`\\`taskName\\` must be a non-empty string. Got ${taskName} instead.`);\n    }\n    if ((0, _expo.isRunningInExpoGo)()) {\n      if (!warnAboutExpoGoDisplayed) {\n        var message = 'Background location is limited in Expo Go:\\n' + 'On Android, it is not available at all.\\n' + 'On iOS, it works when running in the Simulator.\\n' + 'You can use this API, and all others, in a development build. Learn more: https://expo.fyi/dev-client.';\n        console.warn(message);\n        warnAboutExpoGoDisplayed = true;\n      }\n    }\n  }\n  // @docsMissing\n  function isBackgroundLocationAvailableAsync() {\n    return _isBackgroundLocationAvailableAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Registers for receiving location updates that can also come when the app is in the background.\n   *\n   * # Task parameters\n   *\n   * Background location task will be receiving following data:\n   * - `locations` - An array of the new locations.\n   *\n   * @example\n   * ```ts\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   * TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\n   *  if (error) {\n   *    // check `error.message` for more details.\n   *    return;\n   *  }\n   *  console.log('Received new locations', locations);\n   * });\n   * ```\n   *\n   * @param taskName Name of the task receiving location updates.\n   * @param options An object of options passed to the location manager.\n   *\n   * @return A promise resolving once the task with location updates is registered.\n   */\n  function _isBackgroundLocationAvailableAsync() {\n    _isBackgroundLocationAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      var providerStatus = yield getProviderStatusAsync();\n      return providerStatus.backgroundModeEnabled;\n    });\n    return _isBackgroundLocationAvailableAsync.apply(this, arguments);\n  }\n  function startLocationUpdatesAsync(_x8) {\n    return _startLocationUpdatesAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Stops location updates for specified task.\n   * @param taskName Name of the background location task to stop.\n   * @return A promise resolving as soon as the task is unregistered.\n   */\n  function _startLocationUpdatesAsync() {\n    _startLocationUpdatesAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        accuracy: _Location.LocationAccuracy.Balanced\n      };\n      _validate(taskName);\n      yield _ExpoLocation.default.startLocationUpdatesAsync(taskName, options);\n    });\n    return _startLocationUpdatesAsync.apply(this, arguments);\n  }\n  function stopLocationUpdatesAsync(_x9) {\n    return _stopLocationUpdatesAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param taskName Name of the location task to check.\n   * @return A promise which fulfills with boolean value indicating whether the location task is\n   * started or not.\n   */\n  function _stopLocationUpdatesAsync() {\n    _stopLocationUpdatesAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      yield _ExpoLocation.default.stopLocationUpdatesAsync(taskName);\n    });\n    return _stopLocationUpdatesAsync.apply(this, arguments);\n  }\n  function hasStartedLocationUpdatesAsync(_x0) {\n    return _hasStartedLocationUpdatesAsync.apply(this, arguments);\n  } // --- Geofencing\n  function _hasStartedLocationUpdatesAsync() {\n    _hasStartedLocationUpdatesAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      return _ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName);\n    });\n    return _hasStartedLocationUpdatesAsync.apply(this, arguments);\n  }\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n    for (var region of regions) {\n      if (typeof region.latitude !== 'number') {\n        throw new TypeError(`Region's latitude must be a number. Got '${region.latitude}' instead.`);\n      }\n      if (typeof region.longitude !== 'number') {\n        throw new TypeError(`Region's longitude must be a number. Got '${region.longitude}' instead.`);\n      }\n      if (typeof region.radius !== 'number') {\n        throw new TypeError(`Region's radius must be a number. Got '${region.radius}' instead.`);\n      }\n    }\n  }\n  // @needsAudit\n  /**\n   * Starts geofencing for given regions. When the new event comes, the task with specified name will\n   * be called with the region that the device enter to or exit from.\n   * If you want to add or remove regions from already running geofencing task, you can just call\n   * `startGeofencingAsync` again with the new array of regions.\n   *\n   * # Task parameters\n   *\n   * Geofencing task will be receiving following data:\n   *  - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\n   *    See [`GeofencingEventType`](#geofencingeventtype).\n   *  - `region` - Object containing details about updated region. See [`LocationRegion`](#locationregion) for more details.\n   *\n   * @param taskName Name of the task that will be called when the device enters or exits from specified regions.\n   * @param regions Array of region objects to be geofenced.\n   *\n   * @return A promise resolving as soon as the task is registered.\n   *\n   * @example\n   * ```ts\n   * import { GeofencingEventType } from 'expo-location';\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   *  TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\n   *   if (error) {\n   *     // check `error.message` for more details.\n   *     return;\n   *   }\n   *   if (eventType === GeofencingEventType.Enter) {\n   *     console.log(\"You've entered region:\", region);\n   *   } else if (eventType === GeofencingEventType.Exit) {\n   *     console.log(\"You've left region:\", region);\n   *   }\n   * });\n   * ```\n   */\n  function startGeofencingAsync(_x1) {\n    return _startGeofencingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Stops geofencing for specified task. It unregisters the background task so the app will not be\n   * receiving any updates, especially in the background.\n   * @param taskName Name of the task to unregister.\n   * @return A promise resolving as soon as the task is unregistered.\n   */\n  function _startGeofencingAsync() {\n    _startGeofencingAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      _validate(taskName);\n      _validateRegions(regions);\n      yield _ExpoLocation.default.startGeofencingAsync(taskName, {\n        regions\n      });\n    });\n    return _startGeofencingAsync.apply(this, arguments);\n  }\n  function stopGeofencingAsync(_x10) {\n    return _stopGeofencingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param taskName Name of the geofencing task to check.\n   * @return A promise which fulfills with boolean value indicating whether the geofencing task is\n   * started or not.\n   */\n  function _stopGeofencingAsync() {\n    _stopGeofencingAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      yield _ExpoLocation.default.stopGeofencingAsync(taskName);\n    });\n    return _stopGeofencingAsync.apply(this, arguments);\n  }\n  function hasStartedGeofencingAsync(_x11) {\n    return _hasStartedGeofencingAsync.apply(this, arguments);\n  }\n  function _hasStartedGeofencingAsync() {\n    _hasStartedGeofencingAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      return _ExpoLocation.default.hasStartedGeofencingAsync(taskName);\n    });\n    return _hasStartedGeofencingAsync.apply(this, arguments);\n  }\n});","lineCount":568,"map":[[29,2,1,0],[29,6,1,0,"_expo"],[29,11,1,0],[29,14,1,0,"require"],[29,21,1,0],[29,22,1,0,"_dependencyMap"],[29,36,1,0],[30,2,2,0],[30,6,2,0,"_expoModulesCore"],[30,22,2,0],[30,25,2,0,"require"],[30,32,2,0],[30,33,2,0,"_dependencyMap"],[30,47,2,0],[31,2,3,0],[31,6,3,0,"_ExpoLocation"],[31,19,3,0],[31,22,3,0,"_interopRequireDefault"],[31,44,3,0],[31,45,3,0,"require"],[31,52,3,0],[31,53,3,0,"_dependencyMap"],[31,67,3,0],[32,2,4,0],[32,6,4,0,"_Location"],[32,15,4,0],[32,18,4,0,"require"],[32,25,4,0],[32,26,4,0,"_dependencyMap"],[32,40,4,0],[33,2,5,0],[33,6,5,0,"_LocationSubscribers"],[33,26,5,0],[33,29,5,0,"require"],[33,36,5,0],[33,37,5,0,"_dependencyMap"],[33,51,5,0],[34,2,6,0],[35,2,7,0],[35,6,7,4,"warnAboutExpoGoDisplayed"],[35,30,7,28],[35,33,7,31],[35,38,7,36],[36,2,8,0],[37,2,9,0],[38,0,10,0],[39,0,11,0],[40,0,12,0],[41,2,9,0],[41,11,13,22,"getProviderStatusAsync"],[41,33,13,44,"getProviderStatusAsync"],[41,34,13,44],[42,4,13,44],[42,11,13,44,"_getProviderStatusAsync"],[42,34,13,44],[42,35,13,44,"apply"],[42,40,13,44],[42,47,13,44,"arguments"],[42,56,13,44],[43,2,13,44],[43,4,16,0],[44,2,17,0],[45,0,18,0],[46,0,19,0],[47,0,20,0],[48,0,21,0],[49,0,22,0],[50,0,23,0],[51,2,17,0],[51,11,17,0,"_getProviderStatusAsync"],[51,35,17,0],[52,4,17,0,"_getProviderStatusAsync"],[52,27,17,0],[52,34,17,0,"_asyncToGenerator2"],[52,52,17,0],[52,53,17,0,"default"],[52,60,17,0],[52,62,13,7],[52,75,13,47],[53,6,14,4],[53,13,14,11,"ExpoLocation"],[53,34,14,23],[53,35,14,24,"getProviderStatusAsync"],[53,57,14,46],[53,58,14,47],[53,59,14,48],[54,4,15,0],[54,5,15,1],[55,4,15,1],[55,11,15,1,"_getProviderStatusAsync"],[55,34,15,1],[55,35,15,1,"apply"],[55,40,15,1],[55,47,15,1,"arguments"],[55,56,15,1],[56,2,15,1],[57,2,15,1],[57,11,24,22,"enableNetworkProviderAsync"],[57,37,24,48,"enableNetworkProviderAsync"],[57,38,24,48],[58,4,24,48],[58,11,24,48,"_enableNetworkProviderAsync"],[58,38,24,48],[58,39,24,48,"apply"],[58,44,24,48],[58,51,24,48,"arguments"],[58,60,24,48],[59,2,24,48],[59,4,33,0],[60,2,34,0],[61,0,35,0],[62,0,36,0],[63,0,37,0],[64,0,38,0],[65,0,39,0],[66,0,40,0],[67,0,41,0],[68,0,42,0],[69,0,43,0],[70,2,34,0],[70,11,34,0,"_enableNetworkProviderAsync"],[70,39,34,0],[71,4,34,0,"_enableNetworkProviderAsync"],[71,31,34,0],[71,38,34,0,"_asyncToGenerator2"],[71,56,34,0],[71,57,34,0,"default"],[71,64,34,0],[71,66,24,7],[71,79,24,51],[72,6,25,4],[73,6,26,4],[74,6,27,4],[75,6,28,4],[76,6,29,4],[76,10,29,8,"Platform"],[76,35,29,16],[76,36,29,17,"OS"],[76,38,29,19],[76,43,29,24],[76,52,29,33],[76,54,29,35],[77,8,30,8],[77,15,30,15,"ExpoLocation"],[77,36,30,27],[77,37,30,28,"enableNetworkProviderAsync"],[77,63,30,54],[77,64,30,55],[77,65,30,56],[78,6,31,4],[79,4,32,0],[79,5,32,1],[80,4,32,1],[80,11,32,1,"_enableNetworkProviderAsync"],[80,38,32,1],[80,39,32,1,"apply"],[80,44,32,1],[80,51,32,1,"arguments"],[80,60,32,1],[81,2,32,1],[82,2,32,1],[82,11,44,22,"getCurrentPositionAsync"],[82,34,44,45,"getCurrentPositionAsync"],[82,35,44,45],[83,4,44,45],[83,11,44,45,"_getCurrentPositionAsync"],[83,35,44,45],[83,36,44,45,"apply"],[83,41,44,45],[83,48,44,45,"arguments"],[83,57,44,45],[84,2,44,45],[84,4,47,0],[85,2,48,0],[86,0,49,0],[87,0,50,0],[88,0,51,0],[89,0,52,0],[90,0,53,0],[91,0,54,0],[92,0,55,0],[93,0,56,0],[94,0,57,0],[95,2,48,0],[95,11,48,0,"_getCurrentPositionAsync"],[95,36,48,0],[96,4,48,0,"_getCurrentPositionAsync"],[96,28,48,0],[96,35,48,0,"_asyncToGenerator2"],[96,53,48,0],[96,54,48,0,"default"],[96,61,48,0],[96,63,44,7],[96,76,44,60],[97,6,44,60],[97,10,44,46,"options"],[97,17,44,53],[97,20,44,53,"arguments"],[97,29,44,53],[97,30,44,53,"length"],[97,36,44,53],[97,44,44,53,"arguments"],[97,53,44,53],[97,61,44,53,"undefined"],[97,70,44,53],[97,73,44,53,"arguments"],[97,82,44,53],[97,88,44,56],[97,89,44,57],[97,90,44,58],[98,6,45,4],[98,13,45,11,"ExpoLocation"],[98,34,45,23],[98,35,45,24,"getCurrentPositionAsync"],[98,58,45,47],[98,59,45,48,"options"],[98,66,45,55],[98,67,45,56],[99,4,46,0],[99,5,46,1],[100,4,46,1],[100,11,46,1,"_getCurrentPositionAsync"],[100,35,46,1],[100,36,46,1,"apply"],[100,41,46,1],[100,48,46,1,"arguments"],[100,57,46,1],[101,2,46,1],[102,2,46,1],[102,11,58,22,"getLastKnownPositionAsync"],[102,36,58,47,"getLastKnownPositionAsync"],[102,37,58,47],[103,4,58,47],[103,11,58,47,"_getLastKnownPositionAsync"],[103,37,58,47],[103,38,58,47,"apply"],[103,43,58,47],[103,50,58,47,"arguments"],[103,59,58,47],[104,2,58,47],[104,4,61,0],[105,2,62,0],[106,0,63,0],[107,0,64,0],[108,0,65,0],[109,0,66,0],[110,0,67,0],[111,0,68,0],[112,0,69,0],[113,0,70,0],[114,0,71,0],[115,0,72,0],[116,2,62,0],[116,11,62,0,"_getLastKnownPositionAsync"],[116,38,62,0],[117,4,62,0,"_getLastKnownPositionAsync"],[117,30,62,0],[117,37,62,0,"_asyncToGenerator2"],[117,55,62,0],[117,56,62,0,"default"],[117,63,62,0],[117,65,58,7],[117,78,58,62],[118,6,58,62],[118,10,58,48,"options"],[118,17,58,55],[118,20,58,55,"arguments"],[118,29,58,55],[118,30,58,55,"length"],[118,36,58,55],[118,44,58,55,"arguments"],[118,53,58,55],[118,61,58,55,"undefined"],[118,70,58,55],[118,73,58,55,"arguments"],[118,82,58,55],[118,88,58,58],[118,89,58,59],[118,90,58,60],[119,6,59,4],[119,13,59,11,"ExpoLocation"],[119,34,59,23],[119,35,59,24,"getLastKnownPositionAsync"],[119,60,59,49],[119,61,59,50,"options"],[119,68,59,57],[119,69,59,58],[120,4,60,0],[120,5,60,1],[121,4,60,1],[121,11,60,1,"_getLastKnownPositionAsync"],[121,37,60,1],[121,38,60,1,"apply"],[121,43,60,1],[121,50,60,1,"arguments"],[121,59,60,1],[122,2,60,1],[123,2,60,1],[123,11,73,22,"watchPositionAsync"],[123,29,73,40,"watchPositionAsync"],[123,30,73,40,"_x"],[123,32,73,40],[123,34,73,40,"_x2"],[123,37,73,40],[123,39,73,40,"_x3"],[123,42,73,40],[124,4,73,40],[124,11,73,40,"_watchPositionAsync"],[124,30,73,40],[124,31,73,40,"apply"],[124,36,73,40],[124,43,73,40,"arguments"],[124,52,73,40],[125,2,73,40],[125,4,84,0],[126,2,85,0],[127,0,86,0],[128,0,87,0],[129,0,88,0],[130,0,89,0],[131,2,85,0],[131,11,85,0,"_watchPositionAsync"],[131,31,85,0],[132,4,85,0,"_watchPositionAsync"],[132,23,85,0],[132,30,85,0,"_asyncToGenerator2"],[132,48,85,0],[132,49,85,0,"default"],[132,56,85,0],[132,58,73,7],[132,69,73,41,"options"],[132,76,73,48],[132,78,73,50,"callback"],[132,86,73,58],[132,88,73,60,"errorHandler"],[132,100,73,72],[132,102,73,74],[133,6,74,4],[133,10,74,10,"watchId"],[133,17,74,17],[133,20,74,20,"LocationSubscriber"],[133,59,74,38],[133,60,74,39,"registerCallback"],[133,76,74,55],[133,77,74,56,"callback"],[133,85,74,64],[133,86,74,65],[134,6,75,4,"errorHandler"],[134,18,75,16],[134,22,75,20,"LocationErrorSubscriber"],[134,66,75,43],[134,67,75,44,"registerCallbackForId"],[134,88,75,65],[134,89,75,66,"watchId"],[134,96,75,73],[134,98,75,75,"errorHandler"],[134,110,75,87],[134,111,75,88],[135,6,76,4],[135,12,76,10,"ExpoLocation"],[135,33,76,22],[135,34,76,23,"watchPositionImplAsync"],[135,56,76,45],[135,57,76,46,"watchId"],[135,64,76,53],[135,66,76,55,"options"],[135,73,76,62],[135,74,76,63],[136,6,77,4],[136,13,77,11],[137,8,78,8,"remove"],[137,14,78,14,"remove"],[137,15,78,14],[137,17,78,17],[138,10,79,12,"LocationSubscriber"],[138,49,79,30],[138,50,79,31,"unregisterCallback"],[138,68,79,49],[138,69,79,50,"watchId"],[138,76,79,57],[138,77,79,58],[139,10,80,12,"errorHandler"],[139,22,80,24],[139,26,80,28,"LocationErrorSubscriber"],[139,70,80,51],[139,71,80,52,"unregisterCallback"],[139,89,80,70],[139,90,80,71,"watchId"],[139,97,80,78],[139,98,80,79],[140,8,81,8],[141,6,82,4],[141,7,82,5],[142,4,83,0],[142,5,83,1],[143,4,83,1],[143,11,83,1,"_watchPositionAsync"],[143,30,83,1],[143,31,83,1,"apply"],[143,36,83,1],[143,43,83,1,"arguments"],[143,52,83,1],[144,2,83,1],[145,2,83,1],[145,11,90,22,"getHeadingAsync"],[145,26,90,37,"getHeadingAsync"],[145,27,90,37],[146,4,90,37],[146,11,90,37,"_getHeadingAsync"],[146,27,90,37],[146,28,90,37,"apply"],[146,33,90,37],[146,40,90,37,"arguments"],[146,49,90,37],[147,2,90,37],[147,4,113,0],[148,2,114,0],[149,0,115,0],[150,0,116,0],[151,0,117,0],[152,0,118,0],[153,0,119,0],[154,0,120,0],[155,0,121,0],[156,0,122,0],[157,0,123,0],[158,0,124,0],[159,0,125,0],[160,2,114,0],[160,11,114,0,"_getHeadingAsync"],[160,28,114,0],[161,4,114,0,"_getHeadingAsync"],[161,20,114,0],[161,27,114,0,"_asyncToGenerator2"],[161,45,114,0],[161,46,114,0,"default"],[161,53,114,0],[161,55,90,7],[161,68,90,40],[162,6,91,4],[162,13,91,11],[162,17,91,15,"Promise"],[162,24,91,22],[163,8,91,22],[163,12,91,22,"_ref"],[163,16,91,22],[163,23,91,22,"_asyncToGenerator2"],[163,41,91,22],[163,42,91,22,"default"],[163,49,91,22],[163,51,91,23],[163,62,91,30,"resolve"],[163,69,91,37],[163,71,91,39,"reject"],[163,77,91,45],[163,79,91,50],[164,10,92,8],[164,14,92,12,"tries"],[164,19,92,17],[164,22,92,20],[164,23,92,21],[165,10,93,8],[165,14,93,12,"subscriber"],[165,24,93,22],[165,27,93,25,"undefined"],[165,36,93,34],[166,10,94,8],[166,14,94,12],[167,12,95,12,"subscriber"],[167,22,95,22],[167,31,95,31,"watchHeadingAsync"],[167,48,95,48],[167,49,95,50,"heading"],[167,56,95,57],[167,60,95,62],[168,14,96,16],[168,18,96,20,"heading"],[168,25,96,27],[168,26,96,28,"accuracy"],[168,34,96,36],[168,37,96,39],[168,38,96,40],[168,42,96,44,"tries"],[168,47,96,49],[168,50,96,52],[168,51,96,53],[168,53,96,55],[169,16,97,20,"subscriber"],[169,26,97,30],[169,28,97,32,"remove"],[169,34,97,38],[169,35,97,39],[169,36,97,40],[170,16,98,20,"resolve"],[170,23,98,27],[170,24,98,28,"heading"],[170,31,98,35],[170,32,98,36],[171,14,99,16],[171,15,99,17],[171,21,100,21],[172,16,101,20,"tries"],[172,21,101,25],[172,25,101,29],[172,26,101,30],[173,14,102,16],[174,12,103,12],[174,13,103,13],[174,15,103,16,"reason"],[174,21,103,22],[174,25,103,27],[175,14,104,16,"subscriber"],[175,24,104,26],[175,26,104,28,"remove"],[175,32,104,34],[175,33,104,35],[175,34,104,36],[176,14,105,16,"reject"],[176,20,105,22],[176,21,105,23,"reason"],[176,27,105,29],[176,28,105,30],[177,12,106,12],[177,13,106,13],[177,14,106,14],[178,10,107,8],[178,11,107,9],[178,12,108,8],[178,19,108,15,"e"],[178,20,108,16],[178,22,108,18],[179,12,109,12,"reject"],[179,18,109,18],[179,19,109,19,"e"],[179,20,109,20],[179,21,109,21],[180,10,110,8],[181,8,111,4],[181,9,111,5],[182,8,111,5],[182,25,111,5,"_x12"],[182,29,111,5],[182,31,111,5,"_x13"],[182,35,111,5],[183,10,111,5],[183,17,111,5,"_ref"],[183,21,111,5],[183,22,111,5,"apply"],[183,27,111,5],[183,34,111,5,"arguments"],[183,43,111,5],[184,8,111,5],[185,6,111,5],[185,10,111,6],[186,4,112,0],[186,5,112,1],[187,4,112,1],[187,11,112,1,"_getHeadingAsync"],[187,27,112,1],[187,28,112,1,"apply"],[187,33,112,1],[187,40,112,1,"arguments"],[187,49,112,1],[188,2,112,1],[189,2,112,1],[189,11,126,22,"watchHeadingAsync"],[189,28,126,39,"watchHeadingAsync"],[189,29,126,39,"_x4"],[189,32,126,39],[189,34,126,39,"_x5"],[189,37,126,39],[190,4,126,39],[190,11,126,39,"_watchHeadingAsync"],[190,29,126,39],[190,30,126,39,"apply"],[190,35,126,39],[190,42,126,39,"arguments"],[190,51,126,39],[191,2,126,39],[191,4,137,0],[192,2,138,0],[193,0,139,0],[194,0,140,0],[195,0,141,0],[196,0,142,0],[197,0,143,0],[198,0,144,0],[199,0,145,0],[200,0,146,0],[201,0,147,0],[202,0,148,0],[203,0,149,0],[204,0,150,0],[205,0,151,0],[206,0,152,0],[207,0,153,0],[208,0,154,0],[209,0,155,0],[210,2,138,0],[210,11,138,0,"_watchHeadingAsync"],[210,30,138,0],[211,4,138,0,"_watchHeadingAsync"],[211,22,138,0],[211,29,138,0,"_asyncToGenerator2"],[211,47,138,0],[211,48,138,0,"default"],[211,55,138,0],[211,57,126,7],[211,68,126,40,"callback"],[211,76,126,48],[211,78,126,50,"errorHandler"],[211,90,126,62],[211,92,126,64],[212,6,127,4],[212,10,127,10,"watchId"],[212,17,127,17],[212,20,127,20,"HeadingSubscriber"],[212,58,127,37],[212,59,127,38,"registerCallback"],[212,75,127,54],[212,76,127,55,"callback"],[212,84,127,63],[212,85,127,64],[213,6,128,4,"errorHandler"],[213,18,128,16],[213,22,128,20,"LocationErrorSubscriber"],[213,66,128,43],[213,67,128,44,"registerCallbackForId"],[213,88,128,65],[213,89,128,66,"watchId"],[213,96,128,73],[213,98,128,75,"errorHandler"],[213,110,128,87],[213,111,128,88],[214,6,129,4],[214,12,129,10,"ExpoLocation"],[214,33,129,22],[214,34,129,23,"watchDeviceHeading"],[214,52,129,41],[214,53,129,42,"watchId"],[214,60,129,49],[214,61,129,50],[215,6,130,4],[215,13,130,11],[216,8,131,8,"remove"],[216,14,131,14,"remove"],[216,15,131,14],[216,17,131,17],[217,10,132,12,"HeadingSubscriber"],[217,48,132,29],[217,49,132,30,"unregisterCallback"],[217,67,132,48],[217,68,132,49,"watchId"],[217,75,132,56],[217,76,132,57],[218,10,133,12,"errorHandler"],[218,22,133,24],[218,26,133,28,"LocationErrorSubscriber"],[218,70,133,51],[218,71,133,52,"unregisterCallback"],[218,89,133,70],[218,90,133,71,"watchId"],[218,97,133,78],[218,98,133,79],[219,8,134,8],[220,6,135,4],[220,7,135,5],[221,4,136,0],[221,5,136,1],[222,4,136,1],[222,11,136,1,"_watchHeadingAsync"],[222,29,136,1],[222,30,136,1,"apply"],[222,35,136,1],[222,42,136,1,"arguments"],[222,51,136,1],[223,2,136,1],[224,2,136,1],[224,11,156,22,"geocodeAsync"],[224,23,156,34,"geocodeAsync"],[224,24,156,34,"_x6"],[224,27,156,34],[225,4,156,34],[225,11,156,34,"_geocodeAsync"],[225,24,156,34],[225,25,156,34,"apply"],[225,30,156,34],[225,37,156,34,"arguments"],[225,46,156,34],[226,2,156,34],[226,4,169,0],[227,2,170,0],[228,0,171,0],[229,0,172,0],[230,0,173,0],[231,0,174,0],[232,0,175,0],[233,0,176,0],[234,0,177,0],[235,0,178,0],[236,0,179,0],[237,0,180,0],[238,0,181,0],[239,0,182,0],[240,0,183,0],[241,0,184,0],[242,0,185,0],[243,0,186,0],[244,2,170,0],[244,11,170,0,"_geocodeAsync"],[244,25,170,0],[245,4,170,0,"_geocodeAsync"],[245,17,170,0],[245,24,170,0,"_asyncToGenerator2"],[245,42,170,0],[245,43,170,0,"default"],[245,50,170,0],[245,52,156,7],[245,63,156,35,"address"],[245,70,156,42],[245,72,156,44],[246,6,157,4],[246,10,157,8],[246,17,157,15,"address"],[246,24,157,22],[246,29,157,27],[246,37,157,35],[246,39,157,37],[247,8,158,8],[247,14,158,14],[247,18,158,18,"TypeError"],[247,27,158,27],[247,28,158,28],[247,72,158,72,"address"],[247,79,158,79],[247,90,158,90],[247,91,158,91],[248,6,159,4],[249,6,160,4],[249,10,160,8,"Platform"],[249,35,160,16],[249,36,160,17,"OS"],[249,38,160,19],[249,43,160,24],[249,48,160,29],[249,50,160,31],[250,8,161,8],[250,12,161,12,"__DEV__"],[250,19,161,19],[250,21,161,21],[251,10,162,12,"console"],[251,17,162,19],[251,18,162,20,"warn"],[251,22,162,24],[251,23,162,25],[251,109,162,111],[251,112,163,16],[251,196,163,100],[251,197,163,101],[252,8,164,8],[253,8,165,8],[253,15,165,15],[253,17,165,17],[254,6,166,4],[255,6,167,4],[255,19,167,17,"ExpoLocation"],[255,40,167,29],[255,41,167,30,"geocodeAsync"],[255,53,167,42],[255,54,167,43,"address"],[255,61,167,50],[255,62,167,51],[256,4,168,0],[256,5,168,1],[257,4,168,1],[257,11,168,1,"_geocodeAsync"],[257,24,168,1],[257,25,168,1,"apply"],[257,30,168,1],[257,37,168,1,"arguments"],[257,46,168,1],[258,2,168,1],[259,2,168,1],[259,11,187,22,"reverseGeocodeAsync"],[259,30,187,41,"reverseGeocodeAsync"],[259,31,187,41,"_x7"],[259,34,187,41],[260,4,187,41],[260,11,187,41,"_reverseGeocodeAsync"],[260,31,187,41],[260,32,187,41,"apply"],[260,37,187,41],[260,44,187,41,"arguments"],[260,53,187,41],[261,2,187,41],[261,4,200,0],[262,2,201,0],[263,0,202,0],[264,0,203,0],[265,0,204,0],[266,2,201,0],[266,11,201,0,"_reverseGeocodeAsync"],[266,32,201,0],[267,4,201,0,"_reverseGeocodeAsync"],[267,24,201,0],[267,31,201,0,"_asyncToGenerator2"],[267,49,201,0],[267,50,201,0,"default"],[267,57,201,0],[267,59,187,7],[267,70,187,42,"location"],[267,78,187,50],[267,80,187,52],[268,6,188,4],[268,10,188,8],[268,17,188,15,"location"],[268,25,188,23],[268,26,188,24,"latitude"],[268,34,188,32],[268,39,188,37],[268,47,188,45],[268,51,188,49],[268,58,188,56,"location"],[268,66,188,64],[268,67,188,65,"longitude"],[268,76,188,74],[268,81,188,79],[268,89,188,87],[268,91,188,89],[269,8,189,8],[269,14,189,14],[269,18,189,18,"TypeError"],[269,27,189,27],[269,28,189,28],[269,126,189,126],[269,127,189,127],[270,6,190,4],[271,6,191,4],[271,10,191,8,"Platform"],[271,35,191,16],[271,36,191,17,"OS"],[271,38,191,19],[271,43,191,24],[271,48,191,29],[271,50,191,31],[272,8,192,8],[272,12,192,12,"__DEV__"],[272,19,192,19],[272,21,192,21],[273,10,193,12,"console"],[273,17,193,19],[273,18,193,20,"warn"],[273,22,193,24],[273,23,193,25],[273,109,193,111],[273,112,194,16],[273,196,194,100],[273,197,194,101],[274,8,195,8],[275,8,196,8],[275,15,196,15],[275,17,196,17],[276,6,197,4],[277,6,198,4],[277,19,198,17,"ExpoLocation"],[277,40,198,29],[277,41,198,30,"reverseGeocodeAsync"],[277,60,198,49],[277,61,198,50,"location"],[277,69,198,58],[277,70,198,59],[278,4,199,0],[278,5,199,1],[279,4,199,1],[279,11,199,1,"_reverseGeocodeAsync"],[279,31,199,1],[279,32,199,1,"apply"],[279,37,199,1],[279,44,199,1,"arguments"],[279,53,199,1],[280,2,199,1],[281,2,199,1],[281,11,205,22,"getForegroundPermissionsAsync"],[281,40,205,51,"getForegroundPermissionsAsync"],[281,41,205,51],[282,4,205,51],[282,11,205,51,"_getForegroundPermissionsAsync"],[282,41,205,51],[282,42,205,51,"apply"],[282,47,205,51],[282,54,205,51,"arguments"],[282,63,205,51],[283,2,205,51],[283,4,208,0],[284,2,209,0],[285,0,210,0],[286,0,211,0],[287,0,212,0],[288,2,209,0],[288,11,209,0,"_getForegroundPermissionsAsync"],[288,42,209,0],[289,4,209,0,"_getForegroundPermissionsAsync"],[289,34,209,0],[289,41,209,0,"_asyncToGenerator2"],[289,59,209,0],[289,60,209,0,"default"],[289,67,209,0],[289,69,205,7],[289,82,205,54],[290,6,206,4],[290,19,206,17,"ExpoLocation"],[290,40,206,29],[290,41,206,30,"getForegroundPermissionsAsync"],[290,70,206,59],[290,71,206,60],[290,72,206,61],[291,4,207,0],[291,5,207,1],[292,4,207,1],[292,11,207,1,"_getForegroundPermissionsAsync"],[292,41,207,1],[292,42,207,1,"apply"],[292,47,207,1],[292,54,207,1,"arguments"],[292,63,207,1],[293,2,207,1],[294,2,207,1],[294,11,213,22,"requestForegroundPermissionsAsync"],[294,44,213,55,"requestForegroundPermissionsAsync"],[294,45,213,55],[295,4,213,55],[295,11,213,55,"_requestForegroundPermissionsAsync"],[295,45,213,55],[295,46,213,55,"apply"],[295,51,213,55],[295,58,213,55,"arguments"],[295,67,213,55],[296,2,213,55],[296,4,216,0],[297,2,217,0],[298,0,218,0],[299,0,219,0],[300,0,220,0],[301,0,221,0],[302,0,222,0],[303,0,223,0],[304,0,224,0],[305,0,225,0],[306,2,217,0],[306,11,217,0,"_requestForegroundPermissionsAsync"],[306,46,217,0],[307,4,217,0,"_requestForegroundPermissionsAsync"],[307,38,217,0],[307,45,217,0,"_asyncToGenerator2"],[307,63,217,0],[307,64,217,0,"default"],[307,71,217,0],[307,73,213,7],[307,86,213,58],[308,6,214,4],[308,19,214,17,"ExpoLocation"],[308,40,214,29],[308,41,214,30,"requestForegroundPermissionsAsync"],[308,74,214,63],[308,75,214,64],[308,76,214,65],[309,4,215,0],[309,5,215,1],[310,4,215,1],[310,11,215,1,"_requestForegroundPermissionsAsync"],[310,45,215,1],[310,46,215,1,"apply"],[310,51,215,1],[310,58,215,1,"arguments"],[310,67,215,1],[311,2,215,1],[312,2,226,7],[312,6,226,13,"useForegroundPermissions"],[312,30,226,37],[312,33,226,37,"exports"],[312,40,226,37],[312,41,226,37,"useForegroundPermissions"],[312,65,226,37],[312,68,226,40],[312,72,226,40,"createPermissionHook"],[312,109,226,60],[312,111,226,61],[313,4,227,4,"getMethod"],[313,13,227,13],[313,15,227,15,"getForegroundPermissionsAsync"],[313,44,227,44],[314,4,228,4,"requestMethod"],[314,17,228,17],[314,19,228,19,"requestForegroundPermissionsAsync"],[315,2,229,0],[315,3,229,1],[315,4,229,2],[316,2,230,0],[317,2,231,0],[318,0,232,0],[319,0,233,0],[320,0,234,0],[321,2,231,0],[321,11,235,22,"getBackgroundPermissionsAsync"],[321,40,235,51,"getBackgroundPermissionsAsync"],[321,41,235,51],[322,4,235,51],[322,11,235,51,"_getBackgroundPermissionsAsync"],[322,41,235,51],[322,42,235,51,"apply"],[322,47,235,51],[322,54,235,51,"arguments"],[322,63,235,51],[323,2,235,51],[323,4,238,0],[324,2,239,0],[325,0,240,0],[326,0,241,0],[327,0,242,0],[328,0,243,0],[329,0,244,0],[330,0,245,0],[331,0,246,0],[332,0,247,0],[333,2,239,0],[333,11,239,0,"_getBackgroundPermissionsAsync"],[333,42,239,0],[334,4,239,0,"_getBackgroundPermissionsAsync"],[334,34,239,0],[334,41,239,0,"_asyncToGenerator2"],[334,59,239,0],[334,60,239,0,"default"],[334,67,239,0],[334,69,235,7],[334,82,235,54],[335,6,236,4],[335,19,236,17,"ExpoLocation"],[335,40,236,29],[335,41,236,30,"getBackgroundPermissionsAsync"],[335,70,236,59],[335,71,236,60],[335,72,236,61],[336,4,237,0],[336,5,237,1],[337,4,237,1],[337,11,237,1,"_getBackgroundPermissionsAsync"],[337,41,237,1],[337,42,237,1,"apply"],[337,47,237,1],[337,54,237,1,"arguments"],[337,63,237,1],[338,2,237,1],[339,2,237,1],[339,11,248,22,"requestBackgroundPermissionsAsync"],[339,44,248,55,"requestBackgroundPermissionsAsync"],[339,45,248,55],[340,4,248,55],[340,11,248,55,"_requestBackgroundPermissionsAsync"],[340,45,248,55],[340,46,248,55,"apply"],[340,51,248,55],[340,58,248,55,"arguments"],[340,67,248,55],[341,2,248,55],[341,4,251,0],[342,2,252,0],[343,0,253,0],[344,0,254,0],[345,0,255,0],[346,0,256,0],[347,0,257,0],[348,0,258,0],[349,0,259,0],[350,0,260,0],[351,0,261,0],[352,2,252,0],[352,11,252,0,"_requestBackgroundPermissionsAsync"],[352,46,252,0],[353,4,252,0,"_requestBackgroundPermissionsAsync"],[353,38,252,0],[353,45,252,0,"_asyncToGenerator2"],[353,63,252,0],[353,64,252,0,"default"],[353,71,252,0],[353,73,248,7],[353,86,248,58],[354,6,249,4],[354,19,249,17,"ExpoLocation"],[354,40,249,29],[354,41,249,30,"requestBackgroundPermissionsAsync"],[354,74,249,63],[354,75,249,64],[354,76,249,65],[355,4,250,0],[355,5,250,1],[356,4,250,1],[356,11,250,1,"_requestBackgroundPermissionsAsync"],[356,45,250,1],[356,46,250,1,"apply"],[356,51,250,1],[356,58,250,1,"arguments"],[356,67,250,1],[357,2,250,1],[358,2,262,7],[358,6,262,13,"useBackgroundPermissions"],[358,30,262,37],[358,33,262,37,"exports"],[358,40,262,37],[358,41,262,37,"useBackgroundPermissions"],[358,65,262,37],[358,68,262,40],[358,72,262,40,"createPermissionHook"],[358,109,262,60],[358,111,262,61],[359,4,263,4,"getMethod"],[359,13,263,13],[359,15,263,15,"getBackgroundPermissionsAsync"],[359,44,263,44],[360,4,264,4,"requestMethod"],[360,17,264,17],[360,19,264,19,"requestBackgroundPermissionsAsync"],[361,2,265,0],[361,3,265,1],[361,4,265,2],[362,2,266,0],[363,2,267,0],[364,2,268,0],[365,0,269,0],[366,0,270,0],[367,0,271,0],[368,0,272,0],[369,2,268,0],[369,11,273,22,"hasServicesEnabledAsync"],[369,34,273,45,"hasServicesEnabledAsync"],[369,35,273,45],[370,4,273,45],[370,11,273,45,"_hasServicesEnabledAsync"],[370,35,273,45],[370,36,273,45,"apply"],[370,41,273,45],[370,48,273,45,"arguments"],[370,57,273,45],[371,2,273,45],[371,4,276,0],[372,2,276,0],[372,11,276,0,"_hasServicesEnabledAsync"],[372,36,276,0],[373,4,276,0,"_hasServicesEnabledAsync"],[373,28,276,0],[373,35,276,0,"_asyncToGenerator2"],[373,53,276,0],[373,54,276,0,"default"],[373,61,276,0],[373,63,273,7],[373,76,273,48],[374,6,274,4],[374,19,274,17,"ExpoLocation"],[374,40,274,29],[374,41,274,30,"hasServicesEnabledAsync"],[374,64,274,53],[374,65,274,54],[374,66,274,55],[375,4,275,0],[375,5,275,1],[376,4,275,1],[376,11,275,1,"_hasServicesEnabledAsync"],[376,35,275,1],[376,36,275,1,"apply"],[376,41,275,1],[376,48,275,1,"arguments"],[376,57,275,1],[377,2,275,1],[378,2,277,0],[378,11,277,9,"_validate"],[378,20,277,18,"_validate"],[378,21,277,19,"taskName"],[378,29,277,27],[378,31,277,29],[379,4,278,4],[379,8,278,8],[379,9,278,9,"taskName"],[379,17,278,17],[379,21,278,21],[379,28,278,28,"taskName"],[379,36,278,36],[379,41,278,41],[379,49,278,49],[379,51,278,51],[380,6,279,8],[380,12,279,14],[380,16,279,18,"Error"],[380,21,279,23],[380,22,279,24],[380,70,279,72,"taskName"],[380,78,279,80],[380,89,279,91],[380,90,279,92],[381,4,280,4],[382,4,281,4],[382,8,281,8],[382,12,281,8,"isRunningInExpoGo"],[382,35,281,25],[382,37,281,26],[382,38,281,27],[382,40,281,29],[383,6,282,8],[383,10,282,12],[383,11,282,13,"warnAboutExpoGoDisplayed"],[383,35,282,37],[383,37,282,39],[384,8,283,12],[384,12,283,18,"message"],[384,19,283,25],[384,22,283,28],[384,68,283,74],[384,71,284,16],[384,114,284,59],[384,117,285,16],[384,168,285,67],[384,171,286,16],[384,275,286,120],[385,8,287,12,"console"],[385,15,287,19],[385,16,287,20,"warn"],[385,20,287,24],[385,21,287,25,"message"],[385,28,287,32],[385,29,287,33],[386,8,288,12,"warnAboutExpoGoDisplayed"],[386,32,288,36],[386,35,288,39],[386,39,288,43],[387,6,289,8],[388,4,290,4],[389,2,291,0],[390,2,292,0],[391,2,292,0],[391,11,293,22,"isBackgroundLocationAvailableAsync"],[391,45,293,56,"isBackgroundLocationAvailableAsync"],[391,46,293,56],[392,4,293,56],[392,11,293,56,"_isBackgroundLocationAvailableAsync"],[392,46,293,56],[392,47,293,56,"apply"],[392,52,293,56],[392,59,293,56,"arguments"],[392,68,293,56],[393,2,293,56],[393,4,297,0],[394,2,298,0],[395,0,299,0],[396,0,300,0],[397,0,301,0],[398,0,302,0],[399,0,303,0],[400,0,304,0],[401,0,305,0],[402,0,306,0],[403,0,307,0],[404,0,308,0],[405,0,309,0],[406,0,310,0],[407,0,311,0],[408,0,312,0],[409,0,313,0],[410,0,314,0],[411,0,315,0],[412,0,316,0],[413,0,317,0],[414,0,318,0],[415,0,319,0],[416,0,320,0],[417,0,321,0],[418,0,322,0],[419,0,323,0],[420,2,298,0],[420,11,298,0,"_isBackgroundLocationAvailableAsync"],[420,47,298,0],[421,4,298,0,"_isBackgroundLocationAvailableAsync"],[421,39,298,0],[421,46,298,0,"_asyncToGenerator2"],[421,64,298,0],[421,65,298,0,"default"],[421,72,298,0],[421,74,293,7],[421,87,293,59],[422,6,294,4],[422,10,294,10,"providerStatus"],[422,24,294,24],[422,33,294,33,"getProviderStatusAsync"],[422,55,294,55],[422,56,294,56],[422,57,294,57],[423,6,295,4],[423,13,295,11,"providerStatus"],[423,27,295,25],[423,28,295,26,"backgroundModeEnabled"],[423,49,295,47],[424,4,296,0],[424,5,296,1],[425,4,296,1],[425,11,296,1,"_isBackgroundLocationAvailableAsync"],[425,46,296,1],[425,47,296,1,"apply"],[425,52,296,1],[425,59,296,1,"arguments"],[425,68,296,1],[426,2,296,1],[427,2,296,1],[427,11,324,22,"startLocationUpdatesAsync"],[427,36,324,47,"startLocationUpdatesAsync"],[427,37,324,47,"_x8"],[427,40,324,47],[428,4,324,47],[428,11,324,47,"_startLocationUpdatesAsync"],[428,37,324,47],[428,38,324,47,"apply"],[428,43,324,47],[428,50,324,47,"arguments"],[428,59,324,47],[429,2,324,47],[429,4,328,0],[430,2,329,0],[431,0,330,0],[432,0,331,0],[433,0,332,0],[434,0,333,0],[435,2,329,0],[435,11,329,0,"_startLocationUpdatesAsync"],[435,38,329,0],[436,4,329,0,"_startLocationUpdatesAsync"],[436,30,329,0],[436,37,329,0,"_asyncToGenerator2"],[436,55,329,0],[436,56,329,0,"default"],[436,63,329,0],[436,65,324,7],[436,76,324,48,"taskName"],[436,84,324,56],[436,86,324,109],[437,6,324,109],[437,10,324,58,"options"],[437,17,324,65],[437,20,324,65,"arguments"],[437,29,324,65],[437,30,324,65,"length"],[437,36,324,65],[437,44,324,65,"arguments"],[437,53,324,65],[437,61,324,65,"undefined"],[437,70,324,65],[437,73,324,65,"arguments"],[437,82,324,65],[437,88,324,68],[438,8,324,70,"accuracy"],[438,16,324,78],[438,18,324,80,"LocationAccuracy"],[438,44,324,96],[438,45,324,97,"Balanced"],[439,6,324,106],[439,7,324,107],[440,6,325,4,"_validate"],[440,15,325,13],[440,16,325,14,"taskName"],[440,24,325,22],[440,25,325,23],[441,6,326,4],[441,12,326,10,"ExpoLocation"],[441,33,326,22],[441,34,326,23,"startLocationUpdatesAsync"],[441,59,326,48],[441,60,326,49,"taskName"],[441,68,326,57],[441,70,326,59,"options"],[441,77,326,66],[441,78,326,67],[442,4,327,0],[442,5,327,1],[443,4,327,1],[443,11,327,1,"_startLocationUpdatesAsync"],[443,37,327,1],[443,38,327,1,"apply"],[443,43,327,1],[443,50,327,1,"arguments"],[443,59,327,1],[444,2,327,1],[445,2,327,1],[445,11,334,22,"stopLocationUpdatesAsync"],[445,35,334,46,"stopLocationUpdatesAsync"],[445,36,334,46,"_x9"],[445,39,334,46],[446,4,334,46],[446,11,334,46,"_stopLocationUpdatesAsync"],[446,36,334,46],[446,37,334,46,"apply"],[446,42,334,46],[446,49,334,46,"arguments"],[446,58,334,46],[447,2,334,46],[447,4,338,0],[448,2,339,0],[449,0,340,0],[450,0,341,0],[451,0,342,0],[452,0,343,0],[453,2,339,0],[453,11,339,0,"_stopLocationUpdatesAsync"],[453,37,339,0],[454,4,339,0,"_stopLocationUpdatesAsync"],[454,29,339,0],[454,36,339,0,"_asyncToGenerator2"],[454,54,339,0],[454,55,339,0,"default"],[454,62,339,0],[454,64,334,7],[454,75,334,47,"taskName"],[454,83,334,55],[454,85,334,57],[455,6,335,4,"_validate"],[455,15,335,13],[455,16,335,14,"taskName"],[455,24,335,22],[455,25,335,23],[456,6,336,4],[456,12,336,10,"ExpoLocation"],[456,33,336,22],[456,34,336,23,"stopLocationUpdatesAsync"],[456,58,336,47],[456,59,336,48,"taskName"],[456,67,336,56],[456,68,336,57],[457,4,337,0],[457,5,337,1],[458,4,337,1],[458,11,337,1,"_stopLocationUpdatesAsync"],[458,36,337,1],[458,37,337,1,"apply"],[458,42,337,1],[458,49,337,1,"arguments"],[458,58,337,1],[459,2,337,1],[460,2,337,1],[460,11,344,22,"hasStartedLocationUpdatesAsync"],[460,41,344,52,"hasStartedLocationUpdatesAsync"],[460,42,344,52,"_x0"],[460,45,344,52],[461,4,344,52],[461,11,344,52,"_hasStartedLocationUpdatesAsync"],[461,42,344,52],[461,43,344,52,"apply"],[461,48,344,52],[461,55,344,52,"arguments"],[461,64,344,52],[462,2,344,52],[462,4,348,0],[463,2,348,0],[463,11,348,0,"_hasStartedLocationUpdatesAsync"],[463,43,348,0],[464,4,348,0,"_hasStartedLocationUpdatesAsync"],[464,35,348,0],[464,42,348,0,"_asyncToGenerator2"],[464,60,348,0],[464,61,348,0,"default"],[464,68,348,0],[464,70,344,7],[464,81,344,53,"taskName"],[464,89,344,61],[464,91,344,63],[465,6,345,4,"_validate"],[465,15,345,13],[465,16,345,14,"taskName"],[465,24,345,22],[465,25,345,23],[466,6,346,4],[466,13,346,11,"ExpoLocation"],[466,34,346,23],[466,35,346,24,"hasStartedLocationUpdatesAsync"],[466,65,346,54],[466,66,346,55,"taskName"],[466,74,346,63],[466,75,346,64],[467,4,347,0],[467,5,347,1],[468,4,347,1],[468,11,347,1,"_hasStartedLocationUpdatesAsync"],[468,42,347,1],[468,43,347,1,"apply"],[468,48,347,1],[468,55,347,1,"arguments"],[468,64,347,1],[469,2,347,1],[470,2,349,0],[470,11,349,9,"_validateRegions"],[470,27,349,25,"_validateRegions"],[470,28,349,26,"regions"],[470,35,349,33],[470,37,349,35],[471,4,350,4],[471,8,350,8],[471,9,350,9,"regions"],[471,16,350,16],[471,20,350,20,"regions"],[471,27,350,27],[471,28,350,28,"length"],[471,34,350,34],[471,39,350,39],[471,40,350,40],[471,42,350,42],[472,6,351,8],[472,12,351,14],[472,16,351,18,"Error"],[472,21,351,23],[472,22,351,24],[472,123,351,125],[472,124,351,126],[473,4,352,4],[474,4,353,4],[474,9,353,9],[474,13,353,15,"region"],[474,19,353,21],[474,23,353,25,"regions"],[474,30,353,32],[474,32,353,34],[475,6,354,8],[475,10,354,12],[475,17,354,19,"region"],[475,23,354,25],[475,24,354,26,"latitude"],[475,32,354,34],[475,37,354,39],[475,45,354,47],[475,47,354,49],[476,8,355,12],[476,14,355,18],[476,18,355,22,"TypeError"],[476,27,355,31],[476,28,355,32],[476,72,355,76,"region"],[476,78,355,82],[476,79,355,83,"latitude"],[476,87,355,91],[476,99,355,103],[476,100,355,104],[477,6,356,8],[478,6,357,8],[478,10,357,12],[478,17,357,19,"region"],[478,23,357,25],[478,24,357,26,"longitude"],[478,33,357,35],[478,38,357,40],[478,46,357,48],[478,48,357,50],[479,8,358,12],[479,14,358,18],[479,18,358,22,"TypeError"],[479,27,358,31],[479,28,358,32],[479,73,358,77,"region"],[479,79,358,83],[479,80,358,84,"longitude"],[479,89,358,93],[479,101,358,105],[479,102,358,106],[480,6,359,8],[481,6,360,8],[481,10,360,12],[481,17,360,19,"region"],[481,23,360,25],[481,24,360,26,"radius"],[481,30,360,32],[481,35,360,37],[481,43,360,45],[481,45,360,47],[482,8,361,12],[482,14,361,18],[482,18,361,22,"TypeError"],[482,27,361,31],[482,28,361,32],[482,70,361,74,"region"],[482,76,361,80],[482,77,361,81,"radius"],[482,83,361,87],[482,95,361,99],[482,96,361,100],[483,6,362,8],[484,4,363,4],[485,2,364,0],[486,2,365,0],[487,2,366,0],[488,0,367,0],[489,0,368,0],[490,0,369,0],[491,0,370,0],[492,0,371,0],[493,0,372,0],[494,0,373,0],[495,0,374,0],[496,0,375,0],[497,0,376,0],[498,0,377,0],[499,0,378,0],[500,0,379,0],[501,0,380,0],[502,0,381,0],[503,0,382,0],[504,0,383,0],[505,0,384,0],[506,0,385,0],[507,0,386,0],[508,0,387,0],[509,0,388,0],[510,0,389,0],[511,0,390,0],[512,0,391,0],[513,0,392,0],[514,0,393,0],[515,0,394,0],[516,0,395,0],[517,0,396,0],[518,0,397,0],[519,0,398,0],[520,0,399,0],[521,0,400,0],[522,0,401,0],[523,2,366,0],[523,11,402,22,"startGeofencingAsync"],[523,31,402,42,"startGeofencingAsync"],[523,32,402,42,"_x1"],[523,35,402,42],[524,4,402,42],[524,11,402,42,"_startGeofencingAsync"],[524,32,402,42],[524,33,402,42,"apply"],[524,38,402,42],[524,45,402,42,"arguments"],[524,54,402,42],[525,2,402,42],[525,4,407,0],[526,2,408,0],[527,0,409,0],[528,0,410,0],[529,0,411,0],[530,0,412,0],[531,0,413,0],[532,2,408,0],[532,11,408,0,"_startGeofencingAsync"],[532,33,408,0],[533,4,408,0,"_startGeofencingAsync"],[533,25,408,0],[533,32,408,0,"_asyncToGenerator2"],[533,50,408,0],[533,51,408,0,"default"],[533,58,408,0],[533,60,402,7],[533,71,402,43,"taskName"],[533,79,402,51],[533,81,402,67],[534,6,402,67],[534,10,402,53,"regions"],[534,17,402,60],[534,20,402,60,"arguments"],[534,29,402,60],[534,30,402,60,"length"],[534,36,402,60],[534,44,402,60,"arguments"],[534,53,402,60],[534,61,402,60,"undefined"],[534,70,402,60],[534,73,402,60,"arguments"],[534,82,402,60],[534,88,402,63],[534,90,402,65],[535,6,403,4,"_validate"],[535,15,403,13],[535,16,403,14,"taskName"],[535,24,403,22],[535,25,403,23],[536,6,404,4,"_validateRegions"],[536,22,404,20],[536,23,404,21,"regions"],[536,30,404,28],[536,31,404,29],[537,6,405,4],[537,12,405,10,"ExpoLocation"],[537,33,405,22],[537,34,405,23,"startGeofencingAsync"],[537,54,405,43],[537,55,405,44,"taskName"],[537,63,405,52],[537,65,405,54],[538,8,405,56,"regions"],[539,6,405,64],[539,7,405,65],[539,8,405,66],[540,4,406,0],[540,5,406,1],[541,4,406,1],[541,11,406,1,"_startGeofencingAsync"],[541,32,406,1],[541,33,406,1,"apply"],[541,38,406,1],[541,45,406,1,"arguments"],[541,54,406,1],[542,2,406,1],[543,2,406,1],[543,11,414,22,"stopGeofencingAsync"],[543,30,414,41,"stopGeofencingAsync"],[543,31,414,41,"_x10"],[543,35,414,41],[544,4,414,41],[544,11,414,41,"_stopGeofencingAsync"],[544,31,414,41],[544,32,414,41,"apply"],[544,37,414,41],[544,44,414,41,"arguments"],[544,53,414,41],[545,2,414,41],[545,4,418,0],[546,2,419,0],[547,0,420,0],[548,0,421,0],[549,0,422,0],[550,0,423,0],[551,2,419,0],[551,11,419,0,"_stopGeofencingAsync"],[551,32,419,0],[552,4,419,0,"_stopGeofencingAsync"],[552,24,419,0],[552,31,419,0,"_asyncToGenerator2"],[552,49,419,0],[552,50,419,0,"default"],[552,57,419,0],[552,59,414,7],[552,70,414,42,"taskName"],[552,78,414,50],[552,80,414,52],[553,6,415,4,"_validate"],[553,15,415,13],[553,16,415,14,"taskName"],[553,24,415,22],[553,25,415,23],[554,6,416,4],[554,12,416,10,"ExpoLocation"],[554,33,416,22],[554,34,416,23,"stopGeofencingAsync"],[554,53,416,42],[554,54,416,43,"taskName"],[554,62,416,51],[554,63,416,52],[555,4,417,0],[555,5,417,1],[556,4,417,1],[556,11,417,1,"_stopGeofencingAsync"],[556,31,417,1],[556,32,417,1,"apply"],[556,37,417,1],[556,44,417,1,"arguments"],[556,53,417,1],[557,2,417,1],[558,2,417,1],[558,11,424,22,"hasStartedGeofencingAsync"],[558,36,424,47,"hasStartedGeofencingAsync"],[558,37,424,47,"_x11"],[558,41,424,47],[559,4,424,47],[559,11,424,47,"_hasStartedGeofencingAsync"],[559,37,424,47],[559,38,424,47,"apply"],[559,43,424,47],[559,50,424,47,"arguments"],[559,59,424,47],[560,2,424,47],[561,2,424,47],[561,11,424,47,"_hasStartedGeofencingAsync"],[561,38,424,47],[562,4,424,47,"_hasStartedGeofencingAsync"],[562,30,424,47],[562,37,424,47,"_asyncToGenerator2"],[562,55,424,47],[562,56,424,47,"default"],[562,63,424,47],[562,65,424,7],[562,76,424,48,"taskName"],[562,84,424,56],[562,86,424,58],[563,6,425,4,"_validate"],[563,15,425,13],[563,16,425,14,"taskName"],[563,24,425,22],[563,25,425,23],[564,6,426,4],[564,13,426,11,"ExpoLocation"],[564,34,426,23],[564,35,426,24,"hasStartedGeofencingAsync"],[564,60,426,49],[564,61,426,50,"taskName"],[564,69,426,58],[564,70,426,59],[565,4,427,0],[565,5,427,1],[566,4,427,1],[566,11,427,1,"_hasStartedGeofencingAsync"],[566,37,427,1],[566,38,427,1,"apply"],[566,43,427,1],[566,50,427,1,"arguments"],[566,59,427,1],[567,2,427,1],[568,0,427,1],[568,3]],"functionMap":{"names":["<global>","getProviderStatusAsync","enableNetworkProviderAsync","getCurrentPositionAsync","getLastKnownPositionAsync","watchPositionAsync","remove","getHeadingAsync","Promise$argument_0","watchHeadingAsync$argument_0","watchHeadingAsync$argument_1","watchHeadingAsync","geocodeAsync","reverseGeocodeAsync","getForegroundPermissionsAsync","requestForegroundPermissionsAsync","getBackgroundPermissionsAsync","requestBackgroundPermissionsAsync","hasServicesEnabledAsync","_validate","isBackgroundLocationAvailableAsync","startLocationUpdatesAsync","stopLocationUpdatesAsync","hasStartedLocationUpdatesAsync","_validateRegions","startGeofencingAsync","stopGeofencingAsync","hasStartedGeofencingAsync"],"mappings":"AAA;OCY;CDE;OES;CFQ;OGY;CHE;OIY;CJE;OKa;QCK;SDG;CLE;OOO;uBCC;iDCI;aDQ,EE;aFG;KDK;CPC;OWc;QLK;SKG;CXE;OYoB;CZY;OamB;CbY;OcM;CdE;OeM;CfE;OgBoB;ChBE;OiBW;CjBE;OkBuB;ClBE;AmBE;CnBc;OoBE;CpBG;OqB4B;CrBG;OsBO;CtBG;OuBO;CvBG;AwBE;CxBe;OyBsC;CzBI;O0BQ;C1BG;O2BO;C3BG"}},"type":"js/module"}]}