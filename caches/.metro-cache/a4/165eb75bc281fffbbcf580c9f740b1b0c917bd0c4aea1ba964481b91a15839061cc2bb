{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":32,"index":109}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}},{"name":"../lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":20,"index":131},"end":{"line":4,"column":47,"index":158}}],"key":"5SaJjHUOpKrE3J3aWh2RTsVAt6s=","exportNames":["*"]}},{"name":"../lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":177},"end":{"line":5,"column":41,"index":201}}],"key":"+GSAvg/CWfG2ifOQrWLkai/D9hY=","exportNames":["*"]}},{"name":"../lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":16,"index":219},"end":{"line":6,"column":39,"index":242}}],"key":"m5IduDkD0DmXIm44QxetlLAeo0E=","exportNames":["*"]}},{"name":"../lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":262},"end":{"line":7,"column":43,"index":287}}],"key":"g7hF4pHwnWO84hRO36vjqsLwW80=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var tslib_1 = require(_dependencyMap[2], \"tslib\");\n  var constants_1 = require(_dependencyMap[3], \"../lib/constants\");\n  var errors_1 = require(_dependencyMap[4], \"../lib/errors\");\n  var fetch_1 = require(_dependencyMap[5], \"../lib/fetch\");\n  var helpers_1 = require(_dependencyMap[6], \"../lib/helpers\");\n  /**\n   * API class for managing Analytics Buckets using Iceberg tables\n   * Provides methods for creating, listing, and deleting analytics buckets\n   */\n  var StorageAnalyticsApi = /*#__PURE__*/function () {\n    /**\n     * Creates a new StorageAnalyticsApi instance\n     * @param url - The base URL for the storage API\n     * @param headers - HTTP headers to include in requests\n     * @param fetch - Optional custom fetch implementation\n     */\n    function StorageAnalyticsApi(url) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fetch = arguments.length > 2 ? arguments[2] : undefined;\n      _classCallCheck(this, StorageAnalyticsApi);\n      this.shouldThrowOnError = false;\n      this.url = url.replace(/\\/$/, '');\n      this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them in the response\n     * When enabled, failed operations will throw instead of returning { data: null, error }\n     *\n     * @returns This instance for method chaining\n     */\n    return _createClass(StorageAnalyticsApi, [{\n      key: \"throwOnError\",\n      value: function throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n      }\n      /**\n       * Creates a new analytics bucket using Iceberg tables\n       * Analytics buckets are optimized for analytical queries and data processing\n       *\n       * @param name A unique name for the bucket you are creating\n       * @returns Promise with newly created bucket name or error\n       *\n       * @example\n       * ```typescript\n       * const { data, error } = await storage.analytics.createBucket('analytics-data')\n       * if (error) {\n       *   console.error('Failed to create analytics bucket:', error.message)\n       * } else {\n       *   console.log('Created bucket:', data.name)\n       * }\n       * ```\n       */\n    }, {\n      key: \"createBucket\",\n      value: function createBucket(name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket`, {\n              name\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Retrieves the details of all Analytics Storage buckets within an existing project\n       * Only returns buckets of type 'ANALYTICS'\n       *\n       * @param options Query parameters for listing buckets\n       * @param options.limit Maximum number of buckets to return\n       * @param options.offset Number of buckets to skip\n       * @param options.sortColumn Column to sort by ('id', 'name', 'created_at', 'updated_at')\n       * @param options.sortOrder Sort order ('asc' or 'desc')\n       * @param options.search Search term to filter bucket names\n       * @returns Promise with list of analytics buckets or error\n       *\n       * @example\n       * ```typescript\n       * const { data, error } = await storage.analytics.listBuckets({\n       *   limit: 10,\n       *   offset: 0,\n       *   sortColumn: 'created_at',\n       *   sortOrder: 'desc',\n       *   search: 'analytics'\n       * })\n       * if (data) {\n       *   console.log('Found analytics buckets:', data.length)\n       *   data.forEach(bucket => console.log(`- ${bucket.name}`))\n       * }\n       * ```\n       */\n    }, {\n      key: \"listBuckets\",\n      value: function listBuckets(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            // Build query string from options\n            var queryParams = new URLSearchParams();\n            if ((options === null || options === void 0 ? void 0 : options.limit) !== undefined) queryParams.set('limit', options.limit.toString());\n            if ((options === null || options === void 0 ? void 0 : options.offset) !== undefined) queryParams.set('offset', options.offset.toString());\n            if (options === null || options === void 0 ? void 0 : options.sortColumn) queryParams.set('sortColumn', options.sortColumn);\n            if (options === null || options === void 0 ? void 0 : options.sortOrder) queryParams.set('sortOrder', options.sortOrder);\n            if (options === null || options === void 0 ? void 0 : options.search) queryParams.set('search', options.search);\n            var queryString = queryParams.toString();\n            var url = queryString ? `${this.url}/bucket?${queryString}` : `${this.url}/bucket`;\n            var data = yield (0, fetch_1.get)(this.fetch, url, {\n              headers: this.headers\n            });\n            // Filter to only return analytics buckets\n            var analyticsBuckets = Array.isArray(data) ? data.filter(bucket => bucket.type === 'ANALYTICS') : [];\n            return {\n              data: analyticsBuckets,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Deletes an existing analytics bucket\n       * A bucket can't be deleted with existing objects inside it\n       * You must first empty the bucket before deletion\n       *\n       * @param bucketId The unique identifier of the bucket you would like to delete\n       * @returns Promise with success message or error\n       *\n       * @example\n       * ```typescript\n       * const { data, error } = await analyticsApi.deleteBucket('old-analytics-bucket')\n       * if (error) {\n       *   console.error('Failed to delete bucket:', error.message)\n       * } else {\n       *   console.log('Bucket deleted successfully:', data.message)\n       * }\n       * ```\n       */\n    }, {\n      key: \"deleteBucket\",\n      value: function deleteBucket(bucketId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${bucketId}`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n    }]);\n  }();\n  exports.default = StorageAnalyticsApi;\n});","lineCount":202,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0],[9,6,3,6,"tslib_1"],[9,13,3,13],[9,16,3,16,"require"],[9,23,3,23],[9,24,3,23,"_dependencyMap"],[9,38,3,23],[9,50,3,31],[9,51,3,32],[10,2,4,0],[10,6,4,6,"constants_1"],[10,17,4,17],[10,20,4,20,"require"],[10,27,4,27],[10,28,4,27,"_dependencyMap"],[10,42,4,27],[10,65,4,46],[10,66,4,47],[11,2,5,0],[11,6,5,6,"errors_1"],[11,14,5,14],[11,17,5,17,"require"],[11,24,5,24],[11,25,5,24,"_dependencyMap"],[11,39,5,24],[11,59,5,40],[11,60,5,41],[12,2,6,0],[12,6,6,6,"fetch_1"],[12,13,6,13],[12,16,6,16,"require"],[12,23,6,23],[12,24,6,23,"_dependencyMap"],[12,38,6,23],[12,57,6,38],[12,58,6,39],[13,2,7,0],[13,6,7,6,"helpers_1"],[13,15,7,15],[13,18,7,18,"require"],[13,25,7,25],[13,26,7,25,"_dependencyMap"],[13,40,7,25],[13,61,7,42],[13,62,7,43],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,2,8,0],[18,6,12,6,"StorageAnalyticsApi"],[18,25,12,25],[19,4,13,4],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,4,19,4],[25,13,19,4,"StorageAnalyticsApi"],[25,33,19,16,"url"],[25,36,19,19],[25,38,19,42],[26,6,19,42],[26,10,19,21,"headers"],[26,17,19,28],[26,20,19,28,"arguments"],[26,29,19,28],[26,30,19,28,"length"],[26,36,19,28],[26,44,19,28,"arguments"],[26,53,19,28],[26,61,19,28,"undefined"],[26,70,19,28],[26,73,19,28,"arguments"],[26,82,19,28],[26,88,19,31],[26,89,19,32],[26,90,19,33],[27,6,19,33],[27,10,19,35,"fetch"],[27,15,19,40],[27,18,19,40,"arguments"],[27,27,19,40],[27,28,19,40,"length"],[27,34,19,40],[27,41,19,40,"arguments"],[27,50,19,40],[27,56,19,40,"undefined"],[27,65,19,40],[28,6,19,40,"_classCallCheck"],[28,21,19,40],[28,28,19,40,"StorageAnalyticsApi"],[28,47,19,40],[29,6,20,8],[29,10,20,12],[29,11,20,13,"shouldThrowOnError"],[29,29,20,31],[29,32,20,34],[29,37,20,39],[30,6,21,8],[30,10,21,12],[30,11,21,13,"url"],[30,14,21,16],[30,17,21,19,"url"],[30,20,21,22],[30,21,21,23,"replace"],[30,28,21,30],[30,29,21,31],[30,34,21,36],[30,36,21,38],[30,38,21,40],[30,39,21,41],[31,6,22,8],[31,10,22,12],[31,11,22,13,"headers"],[31,18,22,20],[31,21,22,23,"Object"],[31,27,22,29],[31,28,22,30,"assign"],[31,34,22,36],[31,35,22,37,"Object"],[31,41,22,43],[31,42,22,44,"assign"],[31,48,22,50],[31,49,22,51],[31,50,22,52],[31,51,22,53],[31,53,22,55,"constants_1"],[31,64,22,66],[31,65,22,67,"DEFAULT_HEADERS"],[31,80,22,82],[31,81,22,83],[31,83,22,85,"headers"],[31,90,22,92],[31,91,22,93],[32,6,23,8],[32,10,23,12],[32,11,23,13,"fetch"],[32,16,23,18],[32,19,23,21],[32,20,23,22],[32,21,23,23],[32,23,23,25,"helpers_1"],[32,32,23,34],[32,33,23,35,"resolveFetch"],[32,45,23,47],[32,47,23,49,"fetch"],[32,52,23,54],[32,53,23,55],[33,4,24,4],[34,4,25,4],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,4,25,4],[40,11,25,4,"_createClass"],[40,23,25,4],[40,24,25,4,"StorageAnalyticsApi"],[40,43,25,4],[41,6,25,4,"key"],[41,9,25,4],[42,6,25,4,"value"],[42,11,25,4],[42,13,31,4],[42,22,31,4,"throwOnError"],[42,34,31,16,"throwOnError"],[42,35,31,16],[42,37,31,19],[43,8,32,8],[43,12,32,12],[43,13,32,13,"shouldThrowOnError"],[43,31,32,31],[43,34,32,34],[43,38,32,38],[44,8,33,8],[44,15,33,15],[44,19,33,19],[45,6,34,4],[46,6,35,4],[47,0,36,0],[48,0,37,0],[49,0,38,0],[50,0,39,0],[51,0,40,0],[52,0,41,0],[53,0,42,0],[54,0,43,0],[55,0,44,0],[56,0,45,0],[57,0,46,0],[58,0,47,0],[59,0,48,0],[60,0,49,0],[61,0,50,0],[62,0,51,0],[63,4,35,4],[64,6,35,4,"key"],[64,9,35,4],[65,6,35,4,"value"],[65,11,35,4],[65,13,52,4],[65,22,52,4,"createBucket"],[65,34,52,16,"createBucket"],[65,35,52,17,"name"],[65,39,52,21],[65,41,52,23],[66,8,53,8],[66,15,53,15,"tslib_1"],[66,22,53,22],[66,23,53,23,"__awaiter"],[66,32,53,32],[66,33,53,33],[66,37,53,37],[66,39,53,39],[66,44,53,44],[66,45,53,45],[66,47,53,47],[66,52,53,52],[66,53,53,53],[66,55,53,55],[66,68,53,68],[67,10,54,12],[67,14,54,16],[68,12,55,16],[68,16,55,22,"data"],[68,20,55,26],[68,23,55,29],[68,29,55,35],[68,30,55,36],[68,31,55,37],[68,33,55,39,"fetch_1"],[68,40,55,46],[68,41,55,47,"post"],[68,45,55,51],[68,47,55,53],[68,51,55,57],[68,52,55,58,"fetch"],[68,57,55,63],[68,59,55,65],[68,62,55,68],[68,66,55,72],[68,67,55,73,"url"],[68,70,55,76],[68,79,55,85],[68,81,55,87],[69,14,55,89,"name"],[70,12,55,94],[70,13,55,95],[70,15,55,97],[71,14,55,99,"headers"],[71,21,55,106],[71,23,55,108],[71,27,55,112],[71,28,55,113,"headers"],[72,12,55,121],[72,13,55,122],[72,14,55,123],[73,12,56,16],[73,19,56,23],[74,14,56,25,"data"],[74,18,56,29],[75,14,56,31,"error"],[75,19,56,36],[75,21,56,38],[76,12,56,43],[76,13,56,44],[77,10,57,12],[77,11,57,13],[77,12,58,12],[77,19,58,19,"error"],[77,24,58,24],[77,26,58,26],[78,12,59,16],[78,16,59,20],[78,20,59,24],[78,21,59,25,"shouldThrowOnError"],[78,39,59,43],[78,41,59,45],[79,14,60,20],[79,20,60,26,"error"],[79,25,60,31],[80,12,61,16],[81,12,62,16],[81,16,62,20],[81,17,62,21],[81,18,62,22],[81,20,62,24,"errors_1"],[81,28,62,32],[81,29,62,33,"isStorageError"],[81,43,62,47],[81,45,62,49,"error"],[81,50,62,54],[81,51,62,55],[81,53,62,57],[82,14,63,20],[82,21,63,27],[83,16,63,29,"data"],[83,20,63,33],[83,22,63,35],[83,26,63,39],[84,16,63,41,"error"],[85,14,63,47],[85,15,63,48],[86,12,64,16],[87,12,65,16],[87,18,65,22,"error"],[87,23,65,27],[88,10,66,12],[89,8,67,8],[89,9,67,9],[89,10,67,10],[90,6,68,4],[91,6,69,4],[92,0,70,0],[93,0,71,0],[94,0,72,0],[95,0,73,0],[96,0,74,0],[97,0,75,0],[98,0,76,0],[99,0,77,0],[100,0,78,0],[101,0,79,0],[102,0,80,0],[103,0,81,0],[104,0,82,0],[105,0,83,0],[106,0,84,0],[107,0,85,0],[108,0,86,0],[109,0,87,0],[110,0,88,0],[111,0,89,0],[112,0,90,0],[113,0,91,0],[114,0,92,0],[115,0,93,0],[116,0,94,0],[117,0,95,0],[118,4,69,4],[119,6,69,4,"key"],[119,9,69,4],[120,6,69,4,"value"],[120,11,69,4],[120,13,96,4],[120,22,96,4,"listBuckets"],[120,33,96,15,"listBuckets"],[120,34,96,16,"options"],[120,41,96,23],[120,43,96,25],[121,8,97,8],[121,15,97,15,"tslib_1"],[121,22,97,22],[121,23,97,23,"__awaiter"],[121,32,97,32],[121,33,97,33],[121,37,97,37],[121,39,97,39],[121,44,97,44],[121,45,97,45],[121,47,97,47],[121,52,97,52],[121,53,97,53],[121,55,97,55],[121,68,97,68],[122,10,98,12],[122,14,98,16],[123,12,99,16],[124,12,100,16],[124,16,100,22,"queryParams"],[124,27,100,33],[124,30,100,36],[124,34,100,40,"URLSearchParams"],[124,49,100,55],[124,50,100,56],[124,51,100,57],[125,12,101,16],[125,16,101,20],[125,17,101,21,"options"],[125,24,101,28],[125,29,101,33],[125,33,101,37],[125,37,101,41,"options"],[125,44,101,48],[125,49,101,53],[125,54,101,58],[125,55,101,59],[125,58,101,62],[125,63,101,67],[125,64,101,68],[125,67,101,71,"options"],[125,74,101,78],[125,75,101,79,"limit"],[125,80,101,84],[125,86,101,90,"undefined"],[125,95,101,99],[125,97,102,20,"queryParams"],[125,108,102,31],[125,109,102,32,"set"],[125,112,102,35],[125,113,102,36],[125,120,102,43],[125,122,102,45,"options"],[125,129,102,52],[125,130,102,53,"limit"],[125,135,102,58],[125,136,102,59,"toString"],[125,144,102,67],[125,145,102,68],[125,146,102,69],[125,147,102,70],[126,12,103,16],[126,16,103,20],[126,17,103,21,"options"],[126,24,103,28],[126,29,103,33],[126,33,103,37],[126,37,103,41,"options"],[126,44,103,48],[126,49,103,53],[126,54,103,58],[126,55,103,59],[126,58,103,62],[126,63,103,67],[126,64,103,68],[126,67,103,71,"options"],[126,74,103,78],[126,75,103,79,"offset"],[126,81,103,85],[126,87,103,91,"undefined"],[126,96,103,100],[126,98,104,20,"queryParams"],[126,109,104,31],[126,110,104,32,"set"],[126,113,104,35],[126,114,104,36],[126,122,104,44],[126,124,104,46,"options"],[126,131,104,53],[126,132,104,54,"offset"],[126,138,104,60],[126,139,104,61,"toString"],[126,147,104,69],[126,148,104,70],[126,149,104,71],[126,150,104,72],[127,12,105,16],[127,16,105,20,"options"],[127,23,105,27],[127,28,105,32],[127,32,105,36],[127,36,105,40,"options"],[127,43,105,47],[127,48,105,52],[127,53,105,57],[127,54,105,58],[127,57,105,61],[127,62,105,66],[127,63,105,67],[127,66,105,70,"options"],[127,73,105,77],[127,74,105,78,"sortColumn"],[127,84,105,88],[127,86,106,20,"queryParams"],[127,97,106,31],[127,98,106,32,"set"],[127,101,106,35],[127,102,106,36],[127,114,106,48],[127,116,106,50,"options"],[127,123,106,57],[127,124,106,58,"sortColumn"],[127,134,106,68],[127,135,106,69],[128,12,107,16],[128,16,107,20,"options"],[128,23,107,27],[128,28,107,32],[128,32,107,36],[128,36,107,40,"options"],[128,43,107,47],[128,48,107,52],[128,53,107,57],[128,54,107,58],[128,57,107,61],[128,62,107,66],[128,63,107,67],[128,66,107,70,"options"],[128,73,107,77],[128,74,107,78,"sortOrder"],[128,83,107,87],[128,85,108,20,"queryParams"],[128,96,108,31],[128,97,108,32,"set"],[128,100,108,35],[128,101,108,36],[128,112,108,47],[128,114,108,49,"options"],[128,121,108,56],[128,122,108,57,"sortOrder"],[128,131,108,66],[128,132,108,67],[129,12,109,16],[129,16,109,20,"options"],[129,23,109,27],[129,28,109,32],[129,32,109,36],[129,36,109,40,"options"],[129,43,109,47],[129,48,109,52],[129,53,109,57],[129,54,109,58],[129,57,109,61],[129,62,109,66],[129,63,109,67],[129,66,109,70,"options"],[129,73,109,77],[129,74,109,78,"search"],[129,80,109,84],[129,82,110,20,"queryParams"],[129,93,110,31],[129,94,110,32,"set"],[129,97,110,35],[129,98,110,36],[129,106,110,44],[129,108,110,46,"options"],[129,115,110,53],[129,116,110,54,"search"],[129,122,110,60],[129,123,110,61],[130,12,111,16],[130,16,111,22,"queryString"],[130,27,111,33],[130,30,111,36,"queryParams"],[130,41,111,47],[130,42,111,48,"toString"],[130,50,111,56],[130,51,111,57],[130,52,111,58],[131,12,112,16],[131,16,112,22,"url"],[131,19,112,25],[131,22,112,28,"queryString"],[131,33,112,39],[131,36,112,42],[131,39,112,45],[131,43,112,49],[131,44,112,50,"url"],[131,47,112,53],[131,58,112,64,"queryString"],[131,69,112,75],[131,71,112,77],[131,74,112,80],[131,77,112,83],[131,81,112,87],[131,82,112,88,"url"],[131,85,112,91],[131,94,112,100],[132,12,113,16],[132,16,113,22,"data"],[132,20,113,26],[132,23,113,29],[132,29,113,35],[132,30,113,36],[132,31,113,37],[132,33,113,39,"fetch_1"],[132,40,113,46],[132,41,113,47,"get"],[132,44,113,50],[132,46,113,52],[132,50,113,56],[132,51,113,57,"fetch"],[132,56,113,62],[132,58,113,64,"url"],[132,61,113,67],[132,63,113,69],[133,14,113,71,"headers"],[133,21,113,78],[133,23,113,80],[133,27,113,84],[133,28,113,85,"headers"],[134,12,113,93],[134,13,113,94],[134,14,113,95],[135,12,114,16],[136,12,115,16],[136,16,115,22,"analyticsBuckets"],[136,32,115,38],[136,35,115,41,"Array"],[136,40,115,46],[136,41,115,47,"isArray"],[136,48,115,54],[136,49,115,55,"data"],[136,53,115,59],[136,54,115,60],[136,57,116,22,"data"],[136,61,116,26],[136,62,116,27,"filter"],[136,68,116,33],[136,69,116,35,"bucket"],[136,75,116,41],[136,79,116,46,"bucket"],[136,85,116,52],[136,86,116,53,"type"],[136,90,116,57],[136,95,116,62],[136,106,116,73],[136,107,116,74],[136,110,117,22],[136,112,117,24],[137,12,118,16],[137,19,118,23],[138,14,118,25,"data"],[138,18,118,29],[138,20,118,31,"analyticsBuckets"],[138,36,118,47],[139,14,118,49,"error"],[139,19,118,54],[139,21,118,56],[140,12,118,61],[140,13,118,62],[141,10,119,12],[141,11,119,13],[141,12,120,12],[141,19,120,19,"error"],[141,24,120,24],[141,26,120,26],[142,12,121,16],[142,16,121,20],[142,20,121,24],[142,21,121,25,"shouldThrowOnError"],[142,39,121,43],[142,41,121,45],[143,14,122,20],[143,20,122,26,"error"],[143,25,122,31],[144,12,123,16],[145,12,124,16],[145,16,124,20],[145,17,124,21],[145,18,124,22],[145,20,124,24,"errors_1"],[145,28,124,32],[145,29,124,33,"isStorageError"],[145,43,124,47],[145,45,124,49,"error"],[145,50,124,54],[145,51,124,55],[145,53,124,57],[146,14,125,20],[146,21,125,27],[147,16,125,29,"data"],[147,20,125,33],[147,22,125,35],[147,26,125,39],[148,16,125,41,"error"],[149,14,125,47],[149,15,125,48],[150,12,126,16],[151,12,127,16],[151,18,127,22,"error"],[151,23,127,27],[152,10,128,12],[153,8,129,8],[153,9,129,9],[153,10,129,10],[154,6,130,4],[155,6,131,4],[156,0,132,0],[157,0,133,0],[158,0,134,0],[159,0,135,0],[160,0,136,0],[161,0,137,0],[162,0,138,0],[163,0,139,0],[164,0,140,0],[165,0,141,0],[166,0,142,0],[167,0,143,0],[168,0,144,0],[169,0,145,0],[170,0,146,0],[171,0,147,0],[172,0,148,0],[173,4,131,4],[174,6,131,4,"key"],[174,9,131,4],[175,6,131,4,"value"],[175,11,131,4],[175,13,149,4],[175,22,149,4,"deleteBucket"],[175,34,149,16,"deleteBucket"],[175,35,149,17,"bucketId"],[175,43,149,25],[175,45,149,27],[176,8,150,8],[176,15,150,15,"tslib_1"],[176,22,150,22],[176,23,150,23,"__awaiter"],[176,32,150,32],[176,33,150,33],[176,37,150,37],[176,39,150,39],[176,44,150,44],[176,45,150,45],[176,47,150,47],[176,52,150,52],[176,53,150,53],[176,55,150,55],[176,68,150,68],[177,10,151,12],[177,14,151,16],[178,12,152,16],[178,16,152,22,"data"],[178,20,152,26],[178,23,152,29],[178,29,152,35],[178,30,152,36],[178,31,152,37],[178,33,152,39,"fetch_1"],[178,40,152,46],[178,41,152,47,"remove"],[178,47,152,53],[178,49,152,55],[178,53,152,59],[178,54,152,60,"fetch"],[178,59,152,65],[178,61,152,67],[178,64,152,70],[178,68,152,74],[178,69,152,75,"url"],[178,72,152,78],[178,83,152,89,"bucketId"],[178,91,152,97],[178,93,152,99],[178,95,152,101],[178,96,152,102],[178,97,152,103],[178,99,152,105],[179,14,152,107,"headers"],[179,21,152,114],[179,23,152,116],[179,27,152,120],[179,28,152,121,"headers"],[180,12,152,129],[180,13,152,130],[180,14,152,131],[181,12,153,16],[181,19,153,23],[182,14,153,25,"data"],[182,18,153,29],[183,14,153,31,"error"],[183,19,153,36],[183,21,153,38],[184,12,153,43],[184,13,153,44],[185,10,154,12],[185,11,154,13],[185,12,155,12],[185,19,155,19,"error"],[185,24,155,24],[185,26,155,26],[186,12,156,16],[186,16,156,20],[186,20,156,24],[186,21,156,25,"shouldThrowOnError"],[186,39,156,43],[186,41,156,45],[187,14,157,20],[187,20,157,26,"error"],[187,25,157,31],[188,12,158,16],[189,12,159,16],[189,16,159,20],[189,17,159,21],[189,18,159,22],[189,20,159,24,"errors_1"],[189,28,159,32],[189,29,159,33,"isStorageError"],[189,43,159,47],[189,45,159,49,"error"],[189,50,159,54],[189,51,159,55],[189,53,159,57],[190,14,160,20],[190,21,160,27],[191,16,160,29,"data"],[191,20,160,33],[191,22,160,35],[191,26,160,39],[192,16,160,41,"error"],[193,14,160,47],[193,15,160,48],[194,12,161,16],[195,12,162,16],[195,18,162,22,"error"],[195,23,162,27],[196,10,163,12],[197,8,164,8],[197,9,164,9],[197,10,164,10],[198,6,165,4],[199,4,165,5],[200,2,165,5],[201,2,167,0,"exports"],[201,9,167,7],[201,10,167,8,"default"],[201,17,167,15],[201,20,167,18,"StorageAnalyticsApi"],[201,39,167,37],[202,0,167,38],[202,3]],"functionMap":{"names":["<global>","StorageAnalyticsApi","constructor","throwOnError","createBucket","tslib_1.__awaiter$argument_3","listBuckets","data.filter$argument_0","deleteBucket"],"mappings":"AAA;ACW;ICO;KDK;IEO;KFG;IGkB;uDCC;SDc;KHC;IK4B;uDDC;kCEmB,uCF;SCa;KLC;IOmB;uDHC;SGc;KPC;CDC"}},"type":"js/module"}]}