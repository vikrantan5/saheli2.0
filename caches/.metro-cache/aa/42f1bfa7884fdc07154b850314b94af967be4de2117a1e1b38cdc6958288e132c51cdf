{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":36},"end":{"line":4,"column":31,"index":67}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":68},"end":{"line":10,"column":30,"index":167}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"]}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":168},"end":{"line":11,"column":58,"index":226}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"]}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":227},"end":{"line":12,"column":58,"index":285}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"]}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":286},"end":{"line":13,"column":74,"index":360}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"]}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":361},"end":{"line":18,"column":33,"index":482}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"]}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":483},"end":{"line":24,"column":23,"index":587}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useQueries.ts\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useQueries = useQueries;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _queryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProvider = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _IsRestoringProvider = require(_dependencyMap[3], \"./IsRestoringProvider.js\");\n  var _QueryErrorResetBoundary = require(_dependencyMap[4], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtils = require(_dependencyMap[5], \"./errorBoundaryUtils.js\");\n  var _suspense = require(_dependencyMap[6], \"./suspense.js\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function useQueries({\n    queries,\n    ...options\n  }, queryClient) {\n    const client = (0, _QueryClientProvider.useQueryClient)(queryClient);\n    const isRestoring = (0, _IsRestoringProvider.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundary.useQueryErrorResetBoundary)();\n    const defaultedQueries = React.useMemo(() => queries.map(opts => {\n      const defaultedOptions = client.defaultQueryOptions(opts);\n      defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n      return defaultedOptions;\n    }), [queries, client, isRestoring]);\n    defaultedQueries.forEach(query => {\n      (0, _suspense.ensureSuspenseTimers)(query);\n      (0, _errorBoundaryUtils.ensurePreventErrorBoundaryRetry)(query, errorResetBoundary);\n    });\n    (0, _errorBoundaryUtils.useClearResetErrorBoundary)(errorResetBoundary);\n    const [observer] = React.useState(() => new _queryCore.QueriesObserver(client, defaultedQueries, options));\n    const [optimisticResult, getCombinedResult, trackResult] = observer.getOptimisticResult(defaultedQueries, options.combine);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => shouldSubscribe ? observer.subscribe(_queryCore.notifyManager.batchCalls(onStoreChange)) : _queryCore.noop, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setQueries(defaultedQueries, options);\n    }, [defaultedQueries, options, observer]);\n    const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => (0, _suspense.shouldSuspend)(defaultedQueries[index], result));\n    const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n      const opts = defaultedQueries[index];\n      if (opts) {\n        const queryObserver = new _queryCore.QueryObserver(client, opts);\n        if ((0, _suspense.shouldSuspend)(opts, result)) {\n          return (0, _suspense.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        } else if ((0, _suspense.willFetch)(result, isRestoring)) {\n          void (0, _suspense.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        }\n      }\n      return [];\n    }) : [];\n    if (suspensePromises.length > 0) {\n      throw Promise.all(suspensePromises);\n    }\n    const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n      const query = defaultedQueries[index];\n      return query && (0, _errorBoundaryUtils.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: query.throwOnError,\n        query: client.getQueryCache().get(query.queryHash),\n        suspense: query.suspense\n      });\n    });\n    if (firstSingleResultWhichShouldThrow?.error) {\n      throw firstSingleResultWhichShouldThrow.error;\n    }\n    return getCombinedResult(trackResult());\n  }\n});","lineCount":72,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,3,0,"exports"],[8,9,3,0],[8,10,3,0,"useQueries"],[8,20,3,0],[8,23,3,0,"useQueries"],[8,33,3,0],[9,2,4,0],[9,6,4,0,"React"],[9,11,4,0],[9,14,4,0,"_interopRequireWildcard"],[9,37,4,0],[9,38,4,0,"require"],[9,45,4,0],[9,46,4,0,"_dependencyMap"],[9,60,4,0],[10,2,5,0],[10,6,5,0,"_queryCore"],[10,16,5,0],[10,19,5,0,"require"],[10,26,5,0],[10,27,5,0,"_dependencyMap"],[10,41,5,0],[11,2,11,0],[11,6,11,0,"_QueryClientProvider"],[11,26,11,0],[11,29,11,0,"require"],[11,36,11,0],[11,37,11,0,"_dependencyMap"],[11,51,11,0],[12,2,12,0],[12,6,12,0,"_IsRestoringProvider"],[12,26,12,0],[12,29,12,0,"require"],[12,36,12,0],[12,37,12,0,"_dependencyMap"],[12,51,12,0],[13,2,13,0],[13,6,13,0,"_QueryErrorResetBoundary"],[13,30,13,0],[13,33,13,0,"require"],[13,40,13,0],[13,41,13,0,"_dependencyMap"],[13,55,13,0],[14,2,14,0],[14,6,14,0,"_errorBoundaryUtils"],[14,25,14,0],[14,28,14,0,"require"],[14,35,14,0],[14,36,14,0,"_dependencyMap"],[14,50,14,0],[15,2,19,0],[15,6,19,0,"_suspense"],[15,15,19,0],[15,18,19,0,"require"],[15,25,19,0],[15,26,19,0,"_dependencyMap"],[15,40,19,0],[16,2,24,23],[16,11,24,23,"_interopRequireWildcard"],[16,35,24,23,"e"],[16,36,24,23],[16,38,24,23,"t"],[16,39,24,23],[16,68,24,23,"WeakMap"],[16,75,24,23],[16,81,24,23,"r"],[16,82,24,23],[16,89,24,23,"WeakMap"],[16,96,24,23],[16,100,24,23,"n"],[16,101,24,23],[16,108,24,23,"WeakMap"],[16,115,24,23],[16,127,24,23,"_interopRequireWildcard"],[16,150,24,23],[16,162,24,23,"_interopRequireWildcard"],[16,163,24,23,"e"],[16,164,24,23],[16,166,24,23,"t"],[16,167,24,23],[16,176,24,23,"t"],[16,177,24,23],[16,181,24,23,"e"],[16,182,24,23],[16,186,24,23,"e"],[16,187,24,23],[16,188,24,23,"__esModule"],[16,198,24,23],[16,207,24,23,"e"],[16,208,24,23],[16,214,24,23,"o"],[16,215,24,23],[16,217,24,23,"i"],[16,218,24,23],[16,220,24,23,"f"],[16,221,24,23],[16,226,24,23,"__proto__"],[16,235,24,23],[16,243,24,23,"default"],[16,250,24,23],[16,252,24,23,"e"],[16,253,24,23],[16,270,24,23,"e"],[16,271,24,23],[16,294,24,23,"e"],[16,295,24,23],[16,320,24,23,"e"],[16,321,24,23],[16,330,24,23,"f"],[16,331,24,23],[16,337,24,23,"o"],[16,338,24,23],[16,341,24,23,"t"],[16,342,24,23],[16,345,24,23,"n"],[16,346,24,23],[16,349,24,23,"r"],[16,350,24,23],[16,358,24,23,"o"],[16,359,24,23],[16,360,24,23,"has"],[16,363,24,23],[16,364,24,23,"e"],[16,365,24,23],[16,375,24,23,"o"],[16,376,24,23],[16,377,24,23,"get"],[16,380,24,23],[16,381,24,23,"e"],[16,382,24,23],[16,385,24,23,"o"],[16,386,24,23],[16,387,24,23,"set"],[16,390,24,23],[16,391,24,23,"e"],[16,392,24,23],[16,394,24,23,"f"],[16,395,24,23],[16,411,24,23,"t"],[16,412,24,23],[16,416,24,23,"e"],[16,417,24,23],[16,433,24,23,"t"],[16,434,24,23],[16,441,24,23,"hasOwnProperty"],[16,455,24,23],[16,456,24,23,"call"],[16,460,24,23],[16,461,24,23,"e"],[16,462,24,23],[16,464,24,23,"t"],[16,465,24,23],[16,472,24,23,"i"],[16,473,24,23],[16,477,24,23,"o"],[16,478,24,23],[16,481,24,23,"Object"],[16,487,24,23],[16,488,24,23,"defineProperty"],[16,502,24,23],[16,507,24,23,"Object"],[16,513,24,23],[16,514,24,23,"getOwnPropertyDescriptor"],[16,538,24,23],[16,539,24,23,"e"],[16,540,24,23],[16,542,24,23,"t"],[16,543,24,23],[16,550,24,23,"i"],[16,551,24,23],[16,552,24,23,"get"],[16,555,24,23],[16,559,24,23,"i"],[16,560,24,23],[16,561,24,23,"set"],[16,564,24,23],[16,568,24,23,"o"],[16,569,24,23],[16,570,24,23,"f"],[16,571,24,23],[16,573,24,23,"t"],[16,574,24,23],[16,576,24,23,"i"],[16,577,24,23],[16,581,24,23,"f"],[16,582,24,23],[16,583,24,23,"t"],[16,584,24,23],[16,588,24,23,"e"],[16,589,24,23],[16,590,24,23,"t"],[16,591,24,23],[16,602,24,23,"f"],[16,603,24,23],[16,608,24,23,"e"],[16,609,24,23],[16,611,24,23,"t"],[16,612,24,23],[17,2,25,0],[17,11,25,9,"useQueries"],[17,21,25,19,"useQueries"],[17,22,25,20],[18,4,26,2,"queries"],[18,11,26,9],[19,4,27,2],[19,7,27,5,"options"],[20,2,28,0],[20,3,28,1],[20,5,28,3,"queryClient"],[20,16,28,14],[20,18,28,16],[21,4,29,2],[21,10,29,8,"client"],[21,16,29,14],[21,19,29,17],[21,23,29,17,"useQueryClient"],[21,58,29,31],[21,60,29,32,"queryClient"],[21,71,29,43],[21,72,29,44],[22,4,30,2],[22,10,30,8,"isRestoring"],[22,21,30,19],[22,24,30,22],[22,28,30,22,"useIsRestoring"],[22,63,30,36],[22,65,30,37],[22,66,30,38],[23,4,31,2],[23,10,31,8,"errorResetBoundary"],[23,28,31,26],[23,31,31,29],[23,35,31,29,"useQueryErrorResetBoundary"],[23,86,31,55],[23,88,31,56],[23,89,31,57],[24,4,32,2],[24,10,32,8,"defaultedQueries"],[24,26,32,24],[24,29,32,27,"React"],[24,34,32,32],[24,35,32,33,"useMemo"],[24,42,32,40],[24,43,33,4],[24,49,33,10,"queries"],[24,56,33,17],[24,57,33,18,"map"],[24,60,33,21],[24,61,33,23,"opts"],[24,65,33,27],[24,69,33,32],[25,6,34,6],[25,12,34,12,"defaultedOptions"],[25,28,34,28],[25,31,34,31,"client"],[25,37,34,37],[25,38,34,38,"defaultQueryOptions"],[25,57,34,57],[25,58,35,8,"opts"],[25,62,36,6],[25,63,36,7],[26,6,37,6,"defaultedOptions"],[26,22,37,22],[26,23,37,23,"_optimisticResults"],[26,41,37,41],[26,44,37,44,"isRestoring"],[26,55,37,55],[26,58,37,58],[26,71,37,71],[26,74,37,74],[26,86,37,86],[27,6,38,6],[27,13,38,13,"defaultedOptions"],[27,29,38,29],[28,4,39,4],[28,5,39,5],[28,6,39,6],[28,8,40,4],[28,9,40,5,"queries"],[28,16,40,12],[28,18,40,14,"client"],[28,24,40,20],[28,26,40,22,"isRestoring"],[28,37,40,33],[28,38,41,2],[28,39,41,3],[29,4,42,2,"defaultedQueries"],[29,20,42,18],[29,21,42,19,"forEach"],[29,28,42,26],[29,29,42,28,"query"],[29,34,42,33],[29,38,42,38],[30,6,43,4],[30,10,43,4,"ensureSuspenseTimers"],[30,40,43,24],[30,42,43,25,"query"],[30,47,43,30],[30,48,43,31],[31,6,44,4],[31,10,44,4,"ensurePreventErrorBoundaryRetry"],[31,61,44,35],[31,63,44,36,"query"],[31,68,44,41],[31,70,44,43,"errorResetBoundary"],[31,88,44,61],[31,89,44,62],[32,4,45,2],[32,5,45,3],[32,6,45,4],[33,4,46,2],[33,8,46,2,"useClearResetErrorBoundary"],[33,54,46,28],[33,56,46,29,"errorResetBoundary"],[33,74,46,47],[33,75,46,48],[34,4,47,2],[34,10,47,8],[34,11,47,9,"observer"],[34,19,47,17],[34,20,47,18],[34,23,47,21,"React"],[34,28,47,26],[34,29,47,27,"useState"],[34,37,47,35],[34,38,48,4],[34,44,48,10],[34,48,48,14,"QueriesObserver"],[34,74,48,29],[34,75,49,6,"client"],[34,81,49,12],[34,83,50,6,"defaultedQueries"],[34,99,50,22],[34,101,51,6,"options"],[34,108,52,4],[34,109,53,2],[34,110,53,3],[35,4,54,2],[35,10,54,8],[35,11,54,9,"optimisticResult"],[35,27,54,25],[35,29,54,27,"getCombinedResult"],[35,46,54,44],[35,48,54,46,"trackResult"],[35,59,54,57],[35,60,54,58],[35,63,54,61,"observer"],[35,71,54,69],[35,72,54,70,"getOptimisticResult"],[35,91,54,89],[35,92,55,4,"defaultedQueries"],[35,108,55,20],[35,110,56,4,"options"],[35,117,56,11],[35,118,56,12,"combine"],[35,125,57,2],[35,126,57,3],[36,4,58,2],[36,10,58,8,"shouldSubscribe"],[36,25,58,23],[36,28,58,26],[36,29,58,27,"isRestoring"],[36,40,58,38],[36,44,58,42,"options"],[36,51,58,49],[36,52,58,50,"subscribed"],[36,62,58,60],[36,67,58,65],[36,72,58,70],[37,4,59,2,"React"],[37,9,59,7],[37,10,59,8,"useSyncExternalStore"],[37,30,59,28],[37,31,60,4,"React"],[37,36,60,9],[37,37,60,10,"useCallback"],[37,48,60,21],[37,49,61,7,"onStoreChange"],[37,62,61,20],[37,66,61,25,"shouldSubscribe"],[37,81,61,40],[37,84,61,43,"observer"],[37,92,61,51],[37,93,61,52,"subscribe"],[37,102,61,61],[37,103,61,62,"notifyManager"],[37,127,61,75],[37,128,61,76,"batchCalls"],[37,138,61,86],[37,139,61,87,"onStoreChange"],[37,152,61,100],[37,153,61,101],[37,154,61,102],[37,157,61,105,"noop"],[37,172,61,109],[37,174,62,6],[37,175,62,7,"observer"],[37,183,62,15],[37,185,62,17,"shouldSubscribe"],[37,200,62,32],[37,201,63,4],[37,202,63,5],[37,204,64,4],[37,210,64,10,"observer"],[37,218,64,18],[37,219,64,19,"getCurrentResult"],[37,235,64,35],[37,236,64,36],[37,237,64,37],[37,239,65,4],[37,245,65,10,"observer"],[37,253,65,18],[37,254,65,19,"getCurrentResult"],[37,270,65,35],[37,271,65,36],[37,272,66,2],[37,273,66,3],[38,4,67,2,"React"],[38,9,67,7],[38,10,67,8,"useEffect"],[38,19,67,17],[38,20,67,18],[38,26,67,24],[39,6,68,4,"observer"],[39,14,68,12],[39,15,68,13,"setQueries"],[39,25,68,23],[39,26,69,6,"defaultedQueries"],[39,42,69,22],[39,44,70,6,"options"],[39,51,71,4],[39,52,71,5],[40,4,72,2],[40,5,72,3],[40,7,72,5],[40,8,72,6,"defaultedQueries"],[40,24,72,22],[40,26,72,24,"options"],[40,33,72,31],[40,35,72,33,"observer"],[40,43,72,41],[40,44,72,42],[40,45,72,43],[41,4,73,2],[41,10,73,8,"shouldAtLeastOneSuspend"],[41,33,73,31],[41,36,73,34,"optimisticResult"],[41,52,73,50],[41,53,73,51,"some"],[41,57,73,55],[41,58,74,4],[41,59,74,5,"result"],[41,65,74,11],[41,67,74,13,"index"],[41,72,74,18],[41,77,74,23],[41,81,74,23,"shouldSuspend"],[41,104,74,36],[41,106,74,37,"defaultedQueries"],[41,122,74,53],[41,123,74,54,"index"],[41,128,74,59],[41,129,74,60],[41,131,74,62,"result"],[41,137,74,68],[41,138,75,2],[41,139,75,3],[42,4,76,2],[42,10,76,8,"suspensePromises"],[42,26,76,24],[42,29,76,27,"shouldAtLeastOneSuspend"],[42,52,76,50],[42,55,76,53,"optimisticResult"],[42,71,76,69],[42,72,76,70,"flatMap"],[42,79,76,77],[42,80,76,78],[42,81,76,79,"result"],[42,87,76,85],[42,89,76,87,"index"],[42,94,76,92],[42,99,76,97],[43,6,77,4],[43,12,77,10,"opts"],[43,16,77,14],[43,19,77,17,"defaultedQueries"],[43,35,77,33],[43,36,77,34,"index"],[43,41,77,39],[43,42,77,40],[44,6,78,4],[44,10,78,8,"opts"],[44,14,78,12],[44,16,78,14],[45,8,79,6],[45,14,79,12,"queryObserver"],[45,27,79,25],[45,30,79,28],[45,34,79,32,"QueryObserver"],[45,58,79,45],[45,59,79,46,"client"],[45,65,79,52],[45,67,79,54,"opts"],[45,71,79,58],[45,72,79,59],[46,8,80,6],[46,12,80,10],[46,16,80,10,"shouldSuspend"],[46,39,80,23],[46,41,80,24,"opts"],[46,45,80,28],[46,47,80,30,"result"],[46,53,80,36],[46,54,80,37],[46,56,80,39],[47,10,81,8],[47,17,81,15],[47,21,81,15,"fetchOptimistic"],[47,46,81,30],[47,48,81,31,"opts"],[47,52,81,35],[47,54,81,37,"queryObserver"],[47,67,81,50],[47,69,81,52,"errorResetBoundary"],[47,87,81,70],[47,88,81,71],[48,8,82,6],[48,9,82,7],[48,15,82,13],[48,19,82,17],[48,23,82,17,"willFetch"],[48,42,82,26],[48,44,82,27,"result"],[48,50,82,33],[48,52,82,35,"isRestoring"],[48,63,82,46],[48,64,82,47],[48,66,82,49],[49,10,83,8],[49,15,83,13],[49,19,83,13,"fetchOptimistic"],[49,44,83,28],[49,46,83,29,"opts"],[49,50,83,33],[49,52,83,35,"queryObserver"],[49,65,83,48],[49,67,83,50,"errorResetBoundary"],[49,85,83,68],[49,86,83,69],[50,8,84,6],[51,6,85,4],[52,6,86,4],[52,13,86,11],[52,15,86,13],[53,4,87,2],[53,5,87,3],[53,6,87,4],[53,9,87,7],[53,11,87,9],[54,4,88,2],[54,8,88,6,"suspensePromises"],[54,24,88,22],[54,25,88,23,"length"],[54,31,88,29],[54,34,88,32],[54,35,88,33],[54,37,88,35],[55,6,89,4],[55,12,89,10,"Promise"],[55,19,89,17],[55,20,89,18,"all"],[55,23,89,21],[55,24,89,22,"suspensePromises"],[55,40,89,38],[55,41,89,39],[56,4,90,2],[57,4,91,2],[57,10,91,8,"firstSingleResultWhichShouldThrow"],[57,43,91,41],[57,46,91,44,"optimisticResult"],[57,62,91,60],[57,63,91,61,"find"],[57,67,91,65],[57,68,92,4],[57,69,92,5,"result"],[57,75,92,11],[57,77,92,13,"index"],[57,82,92,18],[57,87,92,23],[58,6,93,6],[58,12,93,12,"query"],[58,17,93,17],[58,20,93,20,"defaultedQueries"],[58,36,93,36],[58,37,93,37,"index"],[58,42,93,42],[58,43,93,43],[59,6,94,6],[59,13,94,13,"query"],[59,18,94,18],[59,22,94,22],[59,26,94,22,"getHasError"],[59,57,94,33],[59,59,94,34],[60,8,95,8,"result"],[60,14,95,14],[61,8,96,8,"errorResetBoundary"],[61,26,96,26],[62,8,97,8,"throwOnError"],[62,20,97,20],[62,22,97,22,"query"],[62,27,97,27],[62,28,97,28,"throwOnError"],[62,40,97,40],[63,8,98,8,"query"],[63,13,98,13],[63,15,98,15,"client"],[63,21,98,21],[63,22,98,22,"getQueryCache"],[63,35,98,35],[63,36,98,36],[63,37,98,37],[63,38,98,38,"get"],[63,41,98,41],[63,42,98,42,"query"],[63,47,98,47],[63,48,98,48,"queryHash"],[63,57,98,57],[63,58,98,58],[64,8,99,8,"suspense"],[64,16,99,16],[64,18,99,18,"query"],[64,23,99,23],[64,24,99,24,"suspense"],[65,6,100,6],[65,7,100,7],[65,8,100,8],[66,4,101,4],[66,5,102,2],[66,6,102,3],[67,4,103,2],[67,8,103,6,"firstSingleResultWhichShouldThrow"],[67,41,103,39],[67,43,103,41,"error"],[67,48,103,46],[67,50,103,48],[68,6,104,4],[68,12,104,10,"firstSingleResultWhichShouldThrow"],[68,45,104,43],[68,46,104,44,"error"],[68,51,104,49],[69,4,105,2],[70,4,106,2],[70,11,106,9,"getCombinedResult"],[70,28,106,26],[70,29,106,27,"trackResult"],[70,40,106,38],[70,41,106,39],[70,42,106,40],[70,43,106,41],[71,2,107,0],[72,0,107,1],[72,3]],"functionMap":{"names":["<global>","useQueries","React.useMemo$argument_0","queries.map$argument_0","defaultedQueries.forEach$argument_0","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","optimisticResult.some$argument_0","optimisticResult.flatMap$argument_0","optimisticResult.find$argument_0"],"mappings":"AAA;ACwB;ICQ,kBC;KDM,CD;2BGG;GHG;IIG;KJI;MKS,uGL;IMG,iCN;IOC,iCP;kBQE;GRK;ISE,iET;8EUE;GVW;IWK;KXS;CDM"}},"type":"js/module"}]}