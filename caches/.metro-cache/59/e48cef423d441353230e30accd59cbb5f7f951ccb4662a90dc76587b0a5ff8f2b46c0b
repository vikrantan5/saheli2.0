{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n  var idbProxyableTypes;\n  var cursorAdvanceMethods;\n  // This is a function to prevent it throwing up in node environments.\n  function getIdbProxyableTypes() {\n    return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\n  }\n  // This is a function to prevent it throwing up in node environments.\n  function getCursorAdvanceMethods() {\n    return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);\n  }\n  var cursorRequestMap = new WeakMap();\n  var transactionDoneMap = new WeakMap();\n  var transactionStoreNamesMap = new WeakMap();\n  var transformCache = new WeakMap();\n  var reverseTransformCache = new WeakMap();\n  function promisifyRequest(request) {\n    var promise = new Promise((resolve, reject) => {\n      var unlisten = () => {\n        request.removeEventListener('success', success);\n        request.removeEventListener('error', error);\n      };\n      var success = () => {\n        resolve(wrap(request.result));\n        unlisten();\n      };\n      var error = () => {\n        reject(request.error);\n        unlisten();\n      };\n      request.addEventListener('success', success);\n      request.addEventListener('error', error);\n    });\n    promise.then(value => {\n      // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n      // (see wrapFunction).\n      if (value instanceof IDBCursor) {\n        cursorRequestMap.set(value, request);\n      }\n      // Catching to avoid \"Uncaught Promise exceptions\"\n    }).catch(() => {});\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n  }\n  function cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx)) return;\n    var done = new Promise((resolve, reject) => {\n      var unlisten = () => {\n        tx.removeEventListener('complete', complete);\n        tx.removeEventListener('error', error);\n        tx.removeEventListener('abort', error);\n      };\n      var complete = () => {\n        resolve();\n        unlisten();\n      };\n      var error = () => {\n        reject(tx.error || new DOMException('AbortError', 'AbortError'));\n        unlisten();\n      };\n      tx.addEventListener('complete', complete);\n      tx.addEventListener('error', error);\n      tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n  }\n  var idbProxyTraps = {\n    get(target, prop, receiver) {\n      if (target instanceof IDBTransaction) {\n        // Special handling for transaction.done.\n        if (prop === 'done') return transactionDoneMap.get(target);\n        // Polyfill for objectStoreNames because of Edge.\n        if (prop === 'objectStoreNames') {\n          return target.objectStoreNames || transactionStoreNamesMap.get(target);\n        }\n        // Make tx.store return the only store in the transaction, or undefined if there are many.\n        if (prop === 'store') {\n          return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n        }\n      }\n      // Else transform whatever we get back.\n      return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n      target[prop] = value;\n      return true;\n    },\n    has(target, prop) {\n      if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {\n        return true;\n      }\n      return prop in target;\n    }\n  };\n  function replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n  }\n  function wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {\n      return function (storeNames) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        var tx = func.call(unwrap(this), storeNames, ...args);\n        transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n        return wrap(tx);\n      };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n      return function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        func.apply(unwrap(this), args);\n        return wrap(cursorRequestMap.get(this));\n      };\n    }\n    return function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n      // the original object.\n      return wrap(func.apply(unwrap(this), args));\n    };\n  }\n  function transformCachableValue(value) {\n    if (typeof value === 'function') return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n  }\n  function wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest) return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value)) return transformCache.get(value);\n    var newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n      transformCache.set(value, newValue);\n      reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n  }\n  var unwrap = value => reverseTransformCache.get(value);\n  exports.instanceOfAny = instanceOfAny;\n  exports.replaceTraps = replaceTraps;\n  exports.reverseTransformCache = reverseTransformCache;\n  exports.unwrap = unwrap;\n  exports.wrap = wrap;\n});","lineCount":175,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,6,"instanceOfAny"],[4,19,3,19],[4,22,3,22,"instanceOfAny"],[4,23,3,23,"object"],[4,29,3,29],[4,31,3,31,"constructors"],[4,43,3,43],[4,48,3,48,"constructors"],[4,60,3,60],[4,61,3,61,"some"],[4,65,3,65],[4,66,3,67,"c"],[4,67,3,68],[4,71,3,73,"object"],[4,77,3,79],[4,89,3,91,"c"],[4,90,3,92],[4,91,3,93],[5,2,5,0],[5,6,5,4,"idbProxyableTypes"],[5,23,5,21],[6,2,6,0],[6,6,6,4,"cursorAdvanceMethods"],[6,26,6,24],[7,2,7,0],[8,2,8,0],[8,11,8,9,"getIdbProxyableTypes"],[8,31,8,29,"getIdbProxyableTypes"],[8,32,8,29],[8,34,8,32],[9,4,9,4],[9,11,9,12,"idbProxyableTypes"],[9,28,9,29],[9,33,10,9,"idbProxyableTypes"],[9,50,10,26],[9,53,10,29],[9,54,11,12,"IDBDatabase"],[9,65,11,23],[9,67,12,12,"IDBObjectStore"],[9,81,12,26],[9,83,13,12,"IDBIndex"],[9,91,13,20],[9,93,14,12,"IDBCursor"],[9,102,14,21],[9,104,15,12,"IDBTransaction"],[9,118,15,26],[9,119,16,9],[9,120,16,10],[10,2,17,0],[11,2,18,0],[12,2,19,0],[12,11,19,9,"getCursorAdvanceMethods"],[12,34,19,32,"getCursorAdvanceMethods"],[12,35,19,32],[12,37,19,35],[13,4,20,4],[13,11,20,12,"cursorAdvanceMethods"],[13,31,20,32],[13,36,21,9,"cursorAdvanceMethods"],[13,56,21,29],[13,59,21,32],[13,60,22,12,"IDBCursor"],[13,69,22,21],[13,70,22,22,"prototype"],[13,79,22,31],[13,80,22,32,"advance"],[13,87,22,39],[13,89,23,12,"IDBCursor"],[13,98,23,21],[13,99,23,22,"prototype"],[13,108,23,31],[13,109,23,32,"continue"],[13,117,23,40],[13,119,24,12,"IDBCursor"],[13,128,24,21],[13,129,24,22,"prototype"],[13,138,24,31],[13,139,24,32,"continuePrimaryKey"],[13,157,24,50],[13,158,25,9],[13,159,25,10],[14,2,26,0],[15,2,27,0],[15,6,27,6,"cursorRequestMap"],[15,22,27,22],[15,25,27,25],[15,29,27,29,"WeakMap"],[15,36,27,36],[15,37,27,37],[15,38,27,38],[16,2,28,0],[16,6,28,6,"transactionDoneMap"],[16,24,28,24],[16,27,28,27],[16,31,28,31,"WeakMap"],[16,38,28,38],[16,39,28,39],[16,40,28,40],[17,2,29,0],[17,6,29,6,"transactionStoreNamesMap"],[17,30,29,30],[17,33,29,33],[17,37,29,37,"WeakMap"],[17,44,29,44],[17,45,29,45],[17,46,29,46],[18,2,30,0],[18,6,30,6,"transformCache"],[18,20,30,20],[18,23,30,23],[18,27,30,27,"WeakMap"],[18,34,30,34],[18,35,30,35],[18,36,30,36],[19,2,31,0],[19,6,31,6,"reverseTransformCache"],[19,27,31,27],[19,30,31,30],[19,34,31,34,"WeakMap"],[19,41,31,41],[19,42,31,42],[19,43,31,43],[20,2,32,0],[20,11,32,9,"promisifyRequest"],[20,27,32,25,"promisifyRequest"],[20,28,32,26,"request"],[20,35,32,33],[20,37,32,35],[21,4,33,4],[21,8,33,10,"promise"],[21,15,33,17],[21,18,33,20],[21,22,33,24,"Promise"],[21,29,33,31],[21,30,33,32],[21,31,33,33,"resolve"],[21,38,33,40],[21,40,33,42,"reject"],[21,46,33,48],[21,51,33,53],[22,6,34,8],[22,10,34,14,"unlisten"],[22,18,34,22],[22,21,34,25,"unlisten"],[22,22,34,25],[22,27,34,31],[23,8,35,12,"request"],[23,15,35,19],[23,16,35,20,"removeEventListener"],[23,35,35,39],[23,36,35,40],[23,45,35,49],[23,47,35,51,"success"],[23,54,35,58],[23,55,35,59],[24,8,36,12,"request"],[24,15,36,19],[24,16,36,20,"removeEventListener"],[24,35,36,39],[24,36,36,40],[24,43,36,47],[24,45,36,49,"error"],[24,50,36,54],[24,51,36,55],[25,6,37,8],[25,7,37,9],[26,6,38,8],[26,10,38,14,"success"],[26,17,38,21],[26,20,38,24,"success"],[26,21,38,24],[26,26,38,30],[27,8,39,12,"resolve"],[27,15,39,19],[27,16,39,20,"wrap"],[27,20,39,24],[27,21,39,25,"request"],[27,28,39,32],[27,29,39,33,"result"],[27,35,39,39],[27,36,39,40],[27,37,39,41],[28,8,40,12,"unlisten"],[28,16,40,20],[28,17,40,21],[28,18,40,22],[29,6,41,8],[29,7,41,9],[30,6,42,8],[30,10,42,14,"error"],[30,15,42,19],[30,18,42,22,"error"],[30,19,42,22],[30,24,42,28],[31,8,43,12,"reject"],[31,14,43,18],[31,15,43,19,"request"],[31,22,43,26],[31,23,43,27,"error"],[31,28,43,32],[31,29,43,33],[32,8,44,12,"unlisten"],[32,16,44,20],[32,17,44,21],[32,18,44,22],[33,6,45,8],[33,7,45,9],[34,6,46,8,"request"],[34,13,46,15],[34,14,46,16,"addEventListener"],[34,30,46,32],[34,31,46,33],[34,40,46,42],[34,42,46,44,"success"],[34,49,46,51],[34,50,46,52],[35,6,47,8,"request"],[35,13,47,15],[35,14,47,16,"addEventListener"],[35,30,47,32],[35,31,47,33],[35,38,47,40],[35,40,47,42,"error"],[35,45,47,47],[35,46,47,48],[36,4,48,4],[36,5,48,5],[36,6,48,6],[37,4,49,4,"promise"],[37,11,49,11],[37,12,50,9,"then"],[37,16,50,13],[37,17,50,15,"value"],[37,22,50,20],[37,26,50,25],[38,6,51,8],[39,6,52,8],[40,6,53,8],[40,10,53,12,"value"],[40,15,53,17],[40,27,53,29,"IDBCursor"],[40,36,53,38],[40,38,53,40],[41,8,54,12,"cursorRequestMap"],[41,24,54,28],[41,25,54,29,"set"],[41,28,54,32],[41,29,54,33,"value"],[41,34,54,38],[41,36,54,40,"request"],[41,43,54,47],[41,44,54,48],[42,6,55,8],[43,6,56,8],[44,4,57,4],[44,5,57,5],[44,6,57,6],[44,7,58,9,"catch"],[44,12,58,14],[44,13,58,15],[44,19,58,21],[44,20,58,23],[44,21,58,24],[44,22,58,25],[45,4,59,4],[46,4,60,4],[47,4,61,4,"reverseTransformCache"],[47,25,61,25],[47,26,61,26,"set"],[47,29,61,29],[47,30,61,30,"promise"],[47,37,61,37],[47,39,61,39,"request"],[47,46,61,46],[47,47,61,47],[48,4,62,4],[48,11,62,11,"promise"],[48,18,62,18],[49,2,63,0],[50,2,64,0],[50,11,64,9,"cacheDonePromiseForTransaction"],[50,41,64,39,"cacheDonePromiseForTransaction"],[50,42,64,40,"tx"],[50,44,64,42],[50,46,64,44],[51,4,65,4],[52,4,66,4],[52,8,66,8,"transactionDoneMap"],[52,26,66,26],[52,27,66,27,"has"],[52,30,66,30],[52,31,66,31,"tx"],[52,33,66,33],[52,34,66,34],[52,36,67,8],[53,4,68,4],[53,8,68,10,"done"],[53,12,68,14],[53,15,68,17],[53,19,68,21,"Promise"],[53,26,68,28],[53,27,68,29],[53,28,68,30,"resolve"],[53,35,68,37],[53,37,68,39,"reject"],[53,43,68,45],[53,48,68,50],[54,6,69,8],[54,10,69,14,"unlisten"],[54,18,69,22],[54,21,69,25,"unlisten"],[54,22,69,25],[54,27,69,31],[55,8,70,12,"tx"],[55,10,70,14],[55,11,70,15,"removeEventListener"],[55,30,70,34],[55,31,70,35],[55,41,70,45],[55,43,70,47,"complete"],[55,51,70,55],[55,52,70,56],[56,8,71,12,"tx"],[56,10,71,14],[56,11,71,15,"removeEventListener"],[56,30,71,34],[56,31,71,35],[56,38,71,42],[56,40,71,44,"error"],[56,45,71,49],[56,46,71,50],[57,8,72,12,"tx"],[57,10,72,14],[57,11,72,15,"removeEventListener"],[57,30,72,34],[57,31,72,35],[57,38,72,42],[57,40,72,44,"error"],[57,45,72,49],[57,46,72,50],[58,6,73,8],[58,7,73,9],[59,6,74,8],[59,10,74,14,"complete"],[59,18,74,22],[59,21,74,25,"complete"],[59,22,74,25],[59,27,74,31],[60,8,75,12,"resolve"],[60,15,75,19],[60,16,75,20],[60,17,75,21],[61,8,76,12,"unlisten"],[61,16,76,20],[61,17,76,21],[61,18,76,22],[62,6,77,8],[62,7,77,9],[63,6,78,8],[63,10,78,14,"error"],[63,15,78,19],[63,18,78,22,"error"],[63,19,78,22],[63,24,78,28],[64,8,79,12,"reject"],[64,14,79,18],[64,15,79,19,"tx"],[64,17,79,21],[64,18,79,22,"error"],[64,23,79,27],[64,27,79,31],[64,31,79,35,"DOMException"],[64,43,79,47],[64,44,79,48],[64,56,79,60],[64,58,79,62],[64,70,79,74],[64,71,79,75],[64,72,79,76],[65,8,80,12,"unlisten"],[65,16,80,20],[65,17,80,21],[65,18,80,22],[66,6,81,8],[66,7,81,9],[67,6,82,8,"tx"],[67,8,82,10],[67,9,82,11,"addEventListener"],[67,25,82,27],[67,26,82,28],[67,36,82,38],[67,38,82,40,"complete"],[67,46,82,48],[67,47,82,49],[68,6,83,8,"tx"],[68,8,83,10],[68,9,83,11,"addEventListener"],[68,25,83,27],[68,26,83,28],[68,33,83,35],[68,35,83,37,"error"],[68,40,83,42],[68,41,83,43],[69,6,84,8,"tx"],[69,8,84,10],[69,9,84,11,"addEventListener"],[69,25,84,27],[69,26,84,28],[69,33,84,35],[69,35,84,37,"error"],[69,40,84,42],[69,41,84,43],[70,4,85,4],[70,5,85,5],[70,6,85,6],[71,4,86,4],[72,4,87,4,"transactionDoneMap"],[72,22,87,22],[72,23,87,23,"set"],[72,26,87,26],[72,27,87,27,"tx"],[72,29,87,29],[72,31,87,31,"done"],[72,35,87,35],[72,36,87,36],[73,2,88,0],[74,2,89,0],[74,6,89,4,"idbProxyTraps"],[74,19,89,17],[74,22,89,20],[75,4,90,4,"get"],[75,7,90,7,"get"],[75,8,90,8,"target"],[75,14,90,14],[75,16,90,16,"prop"],[75,20,90,20],[75,22,90,22,"receiver"],[75,30,90,30],[75,32,90,32],[76,6,91,8],[76,10,91,12,"target"],[76,16,91,18],[76,28,91,30,"IDBTransaction"],[76,42,91,44],[76,44,91,46],[77,8,92,12],[78,8,93,12],[78,12,93,16,"prop"],[78,16,93,20],[78,21,93,25],[78,27,93,31],[78,29,94,16],[78,36,94,23,"transactionDoneMap"],[78,54,94,41],[78,55,94,42,"get"],[78,58,94,45],[78,59,94,46,"target"],[78,65,94,52],[78,66,94,53],[79,8,95,12],[80,8,96,12],[80,12,96,16,"prop"],[80,16,96,20],[80,21,96,25],[80,39,96,43],[80,41,96,45],[81,10,97,16],[81,17,97,23,"target"],[81,23,97,29],[81,24,97,30,"objectStoreNames"],[81,40,97,46],[81,44,97,50,"transactionStoreNamesMap"],[81,68,97,74],[81,69,97,75,"get"],[81,72,97,78],[81,73,97,79,"target"],[81,79,97,85],[81,80,97,86],[82,8,98,12],[83,8,99,12],[84,8,100,12],[84,12,100,16,"prop"],[84,16,100,20],[84,21,100,25],[84,28,100,32],[84,30,100,34],[85,10,101,16],[85,17,101,23,"receiver"],[85,25,101,31],[85,26,101,32,"objectStoreNames"],[85,42,101,48],[85,43,101,49],[85,44,101,50],[85,45,101,51],[85,48,102,22,"undefined"],[85,57,102,31],[85,60,103,22,"receiver"],[85,68,103,30],[85,69,103,31,"objectStore"],[85,80,103,42],[85,81,103,43,"receiver"],[85,89,103,51],[85,90,103,52,"objectStoreNames"],[85,106,103,68],[85,107,103,69],[85,108,103,70],[85,109,103,71],[85,110,103,72],[86,8,104,12],[87,6,105,8],[88,6,106,8],[89,6,107,8],[89,13,107,15,"wrap"],[89,17,107,19],[89,18,107,20,"target"],[89,24,107,26],[89,25,107,27,"prop"],[89,29,107,31],[89,30,107,32],[89,31,107,33],[90,4,108,4],[90,5,108,5],[91,4,109,4,"set"],[91,7,109,7,"set"],[91,8,109,8,"target"],[91,14,109,14],[91,16,109,16,"prop"],[91,20,109,20],[91,22,109,22,"value"],[91,27,109,27],[91,29,109,29],[92,6,110,8,"target"],[92,12,110,14],[92,13,110,15,"prop"],[92,17,110,19],[92,18,110,20],[92,21,110,23,"value"],[92,26,110,28],[93,6,111,8],[93,13,111,15],[93,17,111,19],[94,4,112,4],[94,5,112,5],[95,4,113,4,"has"],[95,7,113,7,"has"],[95,8,113,8,"target"],[95,14,113,14],[95,16,113,16,"prop"],[95,20,113,20],[95,22,113,22],[96,6,114,8],[96,10,114,12,"target"],[96,16,114,18],[96,28,114,30,"IDBTransaction"],[96,42,114,44],[96,47,115,13,"prop"],[96,51,115,17],[96,56,115,22],[96,62,115,28],[96,66,115,32,"prop"],[96,70,115,36],[96,75,115,41],[96,82,115,48],[96,83,115,49],[96,85,115,51],[97,8,116,12],[97,15,116,19],[97,19,116,23],[98,6,117,8],[99,6,118,8],[99,13,118,15,"prop"],[99,17,118,19],[99,21,118,23,"target"],[99,27,118,29],[100,4,119,4],[101,2,120,0],[101,3,120,1],[102,2,121,0],[102,11,121,9,"replaceTraps"],[102,23,121,21,"replaceTraps"],[102,24,121,22,"callback"],[102,32,121,30],[102,34,121,32],[103,4,122,4,"idbProxyTraps"],[103,17,122,17],[103,20,122,20,"callback"],[103,28,122,28],[103,29,122,29,"idbProxyTraps"],[103,42,122,42],[103,43,122,43],[104,2,123,0],[105,2,124,0],[105,11,124,9,"wrapFunction"],[105,23,124,21,"wrapFunction"],[105,24,124,22,"func"],[105,28,124,26],[105,30,124,28],[106,4,125,4],[107,4,126,4],[108,4,127,4],[109,4,128,4],[109,8,128,8,"func"],[109,12,128,12],[109,17,128,17,"IDBDatabase"],[109,28,128,28],[109,29,128,29,"prototype"],[109,38,128,38],[109,39,128,39,"transaction"],[109,50,128,50],[109,54,129,8],[109,56,129,10],[109,74,129,28],[109,78,129,32,"IDBTransaction"],[109,92,129,46],[109,93,129,47,"prototype"],[109,102,129,56],[109,103,129,57],[109,105,129,59],[110,6,130,8],[110,13,130,15],[110,23,130,25,"storeNames"],[110,33,130,35],[110,35,130,46],[111,8,130,46],[111,17,130,46,"_len"],[111,21,130,46],[111,24,130,46,"arguments"],[111,33,130,46],[111,34,130,46,"length"],[111,40,130,46],[111,42,130,40,"args"],[111,46,130,44],[111,53,130,44,"Array"],[111,58,130,44],[111,59,130,44,"_len"],[111,63,130,44],[111,70,130,44,"_len"],[111,74,130,44],[111,85,130,44,"_key"],[111,89,130,44],[111,95,130,44,"_key"],[111,99,130,44],[111,102,130,44,"_len"],[111,106,130,44],[111,108,130,44,"_key"],[111,112,130,44],[112,10,130,40,"args"],[112,14,130,44],[112,15,130,44,"_key"],[112,19,130,44],[112,27,130,44,"arguments"],[112,36,130,44],[112,37,130,44,"_key"],[112,41,130,44],[113,8,130,44],[114,8,131,12],[114,12,131,18,"tx"],[114,14,131,20],[114,17,131,23,"func"],[114,21,131,27],[114,22,131,28,"call"],[114,26,131,32],[114,27,131,33,"unwrap"],[114,33,131,39],[114,34,131,40],[114,38,131,44],[114,39,131,45],[114,41,131,47,"storeNames"],[114,51,131,57],[114,53,131,59],[114,56,131,62,"args"],[114,60,131,66],[114,61,131,67],[115,8,132,12,"transactionStoreNamesMap"],[115,32,132,36],[115,33,132,37,"set"],[115,36,132,40],[115,37,132,41,"tx"],[115,39,132,43],[115,41,132,45,"storeNames"],[115,51,132,55],[115,52,132,56,"sort"],[115,56,132,60],[115,59,132,63,"storeNames"],[115,69,132,73],[115,70,132,74,"sort"],[115,74,132,78],[115,75,132,79],[115,76,132,80],[115,79,132,83],[115,80,132,84,"storeNames"],[115,90,132,94],[115,91,132,95],[115,92,132,96],[116,8,133,12],[116,15,133,19,"wrap"],[116,19,133,23],[116,20,133,24,"tx"],[116,22,133,26],[116,23,133,27],[117,6,134,8],[117,7,134,9],[118,4,135,4],[119,4,136,4],[120,4,137,4],[121,4,138,4],[122,4,139,4],[123,4,140,4],[124,4,141,4],[124,8,141,8,"getCursorAdvanceMethods"],[124,31,141,31],[124,32,141,32],[124,33,141,33],[124,34,141,34,"includes"],[124,42,141,42],[124,43,141,43,"func"],[124,47,141,47],[124,48,141,48],[124,50,141,50],[125,6,142,8],[125,13,142,15],[125,25,142,34],[126,8,142,34],[126,17,142,34,"_len2"],[126,22,142,34],[126,25,142,34,"arguments"],[126,34,142,34],[126,35,142,34,"length"],[126,41,142,34],[126,43,142,28,"args"],[126,47,142,32],[126,54,142,32,"Array"],[126,59,142,32],[126,60,142,32,"_len2"],[126,65,142,32],[126,68,142,32,"_key2"],[126,73,142,32],[126,79,142,32,"_key2"],[126,84,142,32],[126,87,142,32,"_len2"],[126,92,142,32],[126,94,142,32,"_key2"],[126,99,142,32],[127,10,142,28,"args"],[127,14,142,32],[127,15,142,32,"_key2"],[127,20,142,32],[127,24,142,32,"arguments"],[127,33,142,32],[127,34,142,32,"_key2"],[127,39,142,32],[128,8,142,32],[129,8,143,12],[130,8,144,12],[131,8,145,12,"func"],[131,12,145,16],[131,13,145,17,"apply"],[131,18,145,22],[131,19,145,23,"unwrap"],[131,25,145,29],[131,26,145,30],[131,30,145,34],[131,31,145,35],[131,33,145,37,"args"],[131,37,145,41],[131,38,145,42],[132,8,146,12],[132,15,146,19,"wrap"],[132,19,146,23],[132,20,146,24,"cursorRequestMap"],[132,36,146,40],[132,37,146,41,"get"],[132,40,146,44],[132,41,146,45],[132,45,146,49],[132,46,146,50],[132,47,146,51],[133,6,147,8],[133,7,147,9],[134,4,148,4],[135,4,149,4],[135,11,149,11],[135,23,149,30],[136,6,149,30],[136,15,149,30,"_len3"],[136,20,149,30],[136,23,149,30,"arguments"],[136,32,149,30],[136,33,149,30,"length"],[136,39,149,30],[136,41,149,24,"args"],[136,45,149,28],[136,52,149,28,"Array"],[136,57,149,28],[136,58,149,28,"_len3"],[136,63,149,28],[136,66,149,28,"_key3"],[136,71,149,28],[136,77,149,28,"_key3"],[136,82,149,28],[136,85,149,28,"_len3"],[136,90,149,28],[136,92,149,28,"_key3"],[136,97,149,28],[137,8,149,24,"args"],[137,12,149,28],[137,13,149,28,"_key3"],[137,18,149,28],[137,22,149,28,"arguments"],[137,31,149,28],[137,32,149,28,"_key3"],[137,37,149,28],[138,6,149,28],[139,6,150,8],[140,6,151,8],[141,6,152,8],[141,13,152,15,"wrap"],[141,17,152,19],[141,18,152,20,"func"],[141,22,152,24],[141,23,152,25,"apply"],[141,28,152,30],[141,29,152,31,"unwrap"],[141,35,152,37],[141,36,152,38],[141,40,152,42],[141,41,152,43],[141,43,152,45,"args"],[141,47,152,49],[141,48,152,50],[141,49,152,51],[142,4,153,4],[142,5,153,5],[143,2,154,0],[144,2,155,0],[144,11,155,9,"transformCachableValue"],[144,33,155,31,"transformCachableValue"],[144,34,155,32,"value"],[144,39,155,37],[144,41,155,39],[145,4,156,4],[145,8,156,8],[145,15,156,15,"value"],[145,20,156,20],[145,25,156,25],[145,35,156,35],[145,37,157,8],[145,44,157,15,"wrapFunction"],[145,56,157,27],[145,57,157,28,"value"],[145,62,157,33],[145,63,157,34],[146,4,158,4],[147,4,159,4],[148,4,160,4],[148,8,160,8,"value"],[148,13,160,13],[148,25,160,25,"IDBTransaction"],[148,39,160,39],[148,41,161,8,"cacheDonePromiseForTransaction"],[148,71,161,38],[148,72,161,39,"value"],[148,77,161,44],[148,78,161,45],[149,4,162,4],[149,8,162,8,"instanceOfAny"],[149,21,162,21],[149,22,162,22,"value"],[149,27,162,27],[149,29,162,29,"getIdbProxyableTypes"],[149,49,162,49],[149,50,162,50],[149,51,162,51],[149,52,162,52],[149,54,163,8],[149,61,163,15],[149,65,163,19,"Proxy"],[149,70,163,24],[149,71,163,25,"value"],[149,76,163,30],[149,78,163,32,"idbProxyTraps"],[149,91,163,45],[149,92,163,46],[150,4,164,4],[151,4,165,4],[151,11,165,11,"value"],[151,16,165,16],[152,2,166,0],[153,2,167,0],[153,11,167,9,"wrap"],[153,15,167,13,"wrap"],[153,16,167,14,"value"],[153,21,167,19],[153,23,167,21],[154,4,168,4],[155,4,169,4],[156,4,170,4],[156,8,170,8,"value"],[156,13,170,13],[156,25,170,25,"IDBRequest"],[156,35,170,35],[156,37,171,8],[156,44,171,15,"promisifyRequest"],[156,60,171,31],[156,61,171,32,"value"],[156,66,171,37],[156,67,171,38],[157,4,172,4],[158,4,173,4],[159,4,174,4],[159,8,174,8,"transformCache"],[159,22,174,22],[159,23,174,23,"has"],[159,26,174,26],[159,27,174,27,"value"],[159,32,174,32],[159,33,174,33],[159,35,175,8],[159,42,175,15,"transformCache"],[159,56,175,29],[159,57,175,30,"get"],[159,60,175,33],[159,61,175,34,"value"],[159,66,175,39],[159,67,175,40],[160,4,176,4],[160,8,176,10,"newValue"],[160,16,176,18],[160,19,176,21,"transformCachableValue"],[160,41,176,43],[160,42,176,44,"value"],[160,47,176,49],[160,48,176,50],[161,4,177,4],[162,4,178,4],[163,4,179,4],[163,8,179,8,"newValue"],[163,16,179,16],[163,21,179,21,"value"],[163,26,179,26],[163,28,179,28],[164,6,180,8,"transformCache"],[164,20,180,22],[164,21,180,23,"set"],[164,24,180,26],[164,25,180,27,"value"],[164,30,180,32],[164,32,180,34,"newValue"],[164,40,180,42],[164,41,180,43],[165,6,181,8,"reverseTransformCache"],[165,27,181,29],[165,28,181,30,"set"],[165,31,181,33],[165,32,181,34,"newValue"],[165,40,181,42],[165,42,181,44,"value"],[165,47,181,49],[165,48,181,50],[166,4,182,4],[167,4,183,4],[167,11,183,11,"newValue"],[167,19,183,19],[168,2,184,0],[169,2,185,0],[169,6,185,6,"unwrap"],[169,12,185,12],[169,15,185,16,"value"],[169,20,185,21],[169,24,185,26,"reverseTransformCache"],[169,45,185,47],[169,46,185,48,"get"],[169,49,185,51],[169,50,185,52,"value"],[169,55,185,57],[169,56,185,58],[170,2,187,0,"exports"],[170,9,187,7],[170,10,187,8,"instanceOfAny"],[170,23,187,21],[170,26,187,24,"instanceOfAny"],[170,39,187,37],[171,2,188,0,"exports"],[171,9,188,7],[171,10,188,8,"replaceTraps"],[171,22,188,20],[171,25,188,23,"replaceTraps"],[171,37,188,35],[172,2,189,0,"exports"],[172,9,189,7],[172,10,189,8,"reverseTransformCache"],[172,31,189,29],[172,34,189,32,"reverseTransformCache"],[172,55,189,53],[173,2,190,0,"exports"],[173,9,190,7],[173,10,190,8,"unwrap"],[173,16,190,14],[173,19,190,17,"unwrap"],[173,25,190,23],[174,2,191,0,"exports"],[174,9,191,7],[174,10,191,8,"wrap"],[174,14,191,12],[174,17,191,15,"wrap"],[174,21,191,19],[175,0,191,20],[175,3]],"functionMap":{"names":["<global>","instanceOfAny","constructors.some$argument_0","getIdbProxyableTypes","getCursorAdvanceMethods","promisifyRequest","Promise$argument_0","unlisten","success","error","promise.then$argument_0","promise.then._catch$argument_0","cacheDonePromiseForTransaction","complete","idbProxyTraps.get","idbProxyTraps.set","idbProxyTraps.has","replaceTraps","wrapFunction","<anonymous>","transformCachableValue","wrap","unwrap"],"mappings":"AAA;sBCE,4CC,0BD,CD;AGK;CHS;AIE;CJO;AKM;gCCC;yBCC;SDG;wBEC;SFG;sBGC;SHG;KDG;cKE;KLO;eMC,SN;CLK;AYC;6BNI;yBCC;SDI;yBOC;SPG;sBGC;SHG;KMI;CZG;IcE;KdkB;IeC;KfG;IgBC;KhBM;AiBE;CjBE;AkBC;eCM;SDI;eCQ;SDK;WCE;KDI;ClBC;AoBC;CpBW;AqBC;CrBiB;esBC,2CtB"}},"type":"js/module"}]}