{"dependencies":[{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7RhWyTq5i/X0UNOgMT1VkjxHPX0=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":187},"end":{"line":4,"column":32,"index":203}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"]}},{"name":"./VectorIndexApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":49,"index":254},"end":{"line":5,"column":76,"index":281}}],"key":"NO9YDRFikYnwzaUe86U+498tJPo=","exportNames":["*"]}},{"name":"./VectorDataApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":48,"index":332},"end":{"line":6,"column":74,"index":358}}],"key":"vfbKy24bYW1o5siixIbRiXbiKKU=","exportNames":["*"]}},{"name":"./VectorBucketApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":50,"index":411},"end":{"line":7,"column":78,"index":439}}],"key":"tHqFXvsY68SjBQ7NLDfv6dqR+ys=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _get = require(_dependencyMap[0], \"@babel/runtime/helpers/get\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _possibleConstructorReturn = require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\");\n  function _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.VectorIndexScope = exports.VectorBucketScope = exports.StorageVectorsClient = void 0;\n  var tslib_1 = require(_dependencyMap[6], \"tslib\");\n  var VectorIndexApi_1 = tslib_1.__importDefault(require(_dependencyMap[7], \"./VectorIndexApi\"));\n  var VectorDataApi_1 = tslib_1.__importDefault(require(_dependencyMap[8], \"./VectorDataApi\"));\n  var VectorBucketApi_1 = tslib_1.__importDefault(require(_dependencyMap[9], \"./VectorBucketApi\"));\n  /**\n   * Main client for interacting with S3 Vectors API\n   * Provides access to bucket, index, and vector data operations\n   *\n   * **Usage Patterns:**\n   *\n   * 1. **Via StorageClient (recommended for most use cases):**\n   * ```typescript\n   * import { StorageClient } from '@supabase/storage-js'\n   *\n   * const storageClient = new StorageClient(url, headers)\n   * const vectors = storageClient.vectors\n   *\n   * // Use vector operations\n   * await vectors.createBucket('embeddings-prod')\n   * const bucket = vectors.from('embeddings-prod')\n   * await bucket.createIndex({ ... })\n   * ```\n   *\n   * 2. **Standalone (for vector-only applications):**\n   * ```typescript\n   * import { StorageVectorsClient } from '@supabase/storage-js'\n   *\n   * const vectorsClient = new StorageVectorsClient('https://api.example.com', {\n   *   headers: { 'Authorization': 'Bearer token' }\n   * })\n   *\n   * // Access bucket operations\n   * await vectorsClient.createBucket('embeddings-prod')\n   *\n   * // Access index operations via buckets\n   * const bucket = vectorsClient.from('embeddings-prod')\n   * await bucket.createIndex({\n   *   indexName: 'documents',\n   *   dataType: 'float32',\n   *   dimension: 1536,\n   *   distanceMetric: 'cosine'\n   * })\n   *\n   * // Access vector operations via index\n   * const index = bucket.index('documents')\n   * await index.putVectors({\n   *   vectors: [\n   *     { key: 'doc-1', data: { float32: [...] }, metadata: { title: 'Intro' } }\n   *   ]\n   * })\n   *\n   * // Query similar vectors\n   * const { data } = await index.queryVectors({\n   *   queryVector: { float32: [...] },\n   *   topK: 5,\n   *   returnDistance: true\n   * })\n   * ```\n   */\n  var StorageVectorsClient = /*#__PURE__*/function (_VectorBucketApi_1$de) {\n    function StorageVectorsClient(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, StorageVectorsClient);\n      return _callSuper(this, StorageVectorsClient, [url, options.headers || {}, options.fetch]);\n    }\n    /**\n     * Access operations for a specific vector bucket\n     * Returns a scoped client for index and vector operations within the bucket\n     *\n     * @param vectorBucketName - Name of the vector bucket\n     * @returns Bucket-scoped client with index and vector operations\n     *\n     * @example\n     * ```typescript\n     * const bucket = client.bucket('embeddings-prod')\n     *\n     * // Create an index in this bucket\n     * await bucket.createIndex({\n     *   indexName: 'documents-openai',\n     *   dataType: 'float32',\n     *   dimension: 1536,\n     *   distanceMetric: 'cosine'\n     * })\n     *\n     * // List indexes in this bucket\n     * const { data } = await bucket.listIndexes()\n     * ```\n     */\n    _inherits(StorageVectorsClient, _VectorBucketApi_1$de);\n    return _createClass(StorageVectorsClient, [{\n      key: \"from\",\n      value: function from(vectorBucketName) {\n        return new VectorBucketScope(this.url, this.headers, vectorBucketName, this.fetch);\n      }\n    }]);\n  }(VectorBucketApi_1.default);\n  exports.StorageVectorsClient = StorageVectorsClient;\n  /**\n   * Scoped client for operations within a specific vector bucket\n   * Provides index management and access to vector operations\n   */\n  var VectorBucketScope = /*#__PURE__*/function (_VectorIndexApi_1$def) {\n    function VectorBucketScope(url, headers, vectorBucketName, fetch) {\n      var _this;\n      _classCallCheck(this, VectorBucketScope);\n      _this = _callSuper(this, VectorBucketScope, [url, headers, fetch]);\n      _this.vectorBucketName = vectorBucketName;\n      return _this;\n    }\n    /**\n     * Creates a new vector index in this bucket\n     * Convenience method that automatically includes the bucket name\n     *\n     * @param options - Index configuration (vectorBucketName is automatically set)\n     * @returns Promise with empty response on success or error\n     *\n     * @example\n     * ```typescript\n     * const bucket = client.bucket('embeddings-prod')\n     * await bucket.createIndex({\n     *   indexName: 'documents-openai',\n     *   dataType: 'float32',\n     *   dimension: 1536,\n     *   distanceMetric: 'cosine',\n     *   metadataConfiguration: {\n     *     nonFilterableMetadataKeys: ['raw_text']\n     *   }\n     * })\n     * ```\n     */\n    _inherits(VectorBucketScope, _VectorIndexApi_1$def);\n    return _createClass(VectorBucketScope, [{\n      key: \"createIndex\",\n      value: function createIndex(options) {\n        var _super = Object.create(null, {\n          createIndex: {\n            get: () => _superPropGet(VectorBucketScope, \"createIndex\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.createIndex.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName\n          }));\n        });\n      }\n      /**\n       * Lists indexes in this bucket\n       * Convenience method that automatically includes the bucket name\n       *\n       * @param options - Listing options (vectorBucketName is automatically set)\n       * @returns Promise with list of indexes or error\n       *\n       * @example\n       * ```typescript\n       * const bucket = client.bucket('embeddings-prod')\n       * const { data } = await bucket.listIndexes({ prefix: 'documents-' })\n       * ```\n       */\n    }, {\n      key: \"listIndexes\",\n      value: function listIndexes() {\n        var _super = Object.create(null, {\n          listIndexes: {\n            get: () => _superPropGet(VectorBucketScope, \"listIndexes\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, arguments, void 0, function () {\n          var _this2 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return function* () {\n            return _super.listIndexes.call(_this2, Object.assign(Object.assign({}, options), {\n              vectorBucketName: _this2.vectorBucketName\n            }));\n          }();\n        });\n      }\n      /**\n       * Retrieves metadata for a specific index in this bucket\n       * Convenience method that automatically includes the bucket name\n       *\n       * @param indexName - Name of the index to retrieve\n       * @returns Promise with index metadata or error\n       *\n       * @example\n       * ```typescript\n       * const bucket = client.bucket('embeddings-prod')\n       * const { data } = await bucket.getIndex('documents-openai')\n       * console.log('Dimension:', data?.index.dimension)\n       * ```\n       */\n    }, {\n      key: \"getIndex\",\n      value: function getIndex(indexName) {\n        var _super = Object.create(null, {\n          getIndex: {\n            get: () => _superPropGet(VectorBucketScope, \"getIndex\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.getIndex.call(this, this.vectorBucketName, indexName);\n        });\n      }\n      /**\n       * Deletes an index from this bucket\n       * Convenience method that automatically includes the bucket name\n       *\n       * @param indexName - Name of the index to delete\n       * @returns Promise with empty response on success or error\n       *\n       * @example\n       * ```typescript\n       * const bucket = client.bucket('embeddings-prod')\n       * await bucket.deleteIndex('old-index')\n       * ```\n       */\n    }, {\n      key: \"deleteIndex\",\n      value: function deleteIndex(indexName) {\n        var _super = Object.create(null, {\n          deleteIndex: {\n            get: () => _superPropGet(VectorBucketScope, \"deleteIndex\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.deleteIndex.call(this, this.vectorBucketName, indexName);\n        });\n      }\n      /**\n       * Access operations for a specific index within this bucket\n       * Returns a scoped client for vector data operations\n       *\n       * @param indexName - Name of the index\n       * @returns Index-scoped client with vector data operations\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       *\n       * // Insert vectors\n       * await index.putVectors({\n       *   vectors: [\n       *     { key: 'doc-1', data: { float32: [...] }, metadata: { title: 'Intro' } }\n       *   ]\n       * })\n       *\n       * // Query similar vectors\n       * const { data } = await index.queryVectors({\n       *   queryVector: { float32: [...] },\n       *   topK: 5\n       * })\n       * ```\n       */\n    }, {\n      key: \"index\",\n      value: function index(indexName) {\n        return new VectorIndexScope(this.url, this.headers, this.vectorBucketName, indexName, this.fetch);\n      }\n    }]);\n  }(VectorIndexApi_1.default);\n  exports.VectorBucketScope = VectorBucketScope;\n  /**\n   * Scoped client for operations within a specific vector index\n   * Provides vector data operations (put, get, list, query, delete)\n   */\n  var VectorIndexScope = /*#__PURE__*/function (_VectorDataApi_1$defa) {\n    function VectorIndexScope(url, headers, vectorBucketName, indexName, fetch) {\n      var _this3;\n      _classCallCheck(this, VectorIndexScope);\n      _this3 = _callSuper(this, VectorIndexScope, [url, headers, fetch]);\n      _this3.vectorBucketName = vectorBucketName;\n      _this3.indexName = indexName;\n      return _this3;\n    }\n    /**\n     * Inserts or updates vectors in this index\n     * Convenience method that automatically includes bucket and index names\n     *\n     * @param options - Vector insertion options (bucket and index names automatically set)\n     * @returns Promise with empty response on success or error\n     *\n     * @example\n     * ```typescript\n     * const index = client.bucket('embeddings-prod').index('documents-openai')\n     * await index.putVectors({\n     *   vectors: [\n     *     {\n     *       key: 'doc-1',\n     *       data: { float32: [0.1, 0.2, ...] },\n     *       metadata: { title: 'Introduction', page: 1 }\n     *     }\n     *   ]\n     * })\n     * ```\n     */\n    _inherits(VectorIndexScope, _VectorDataApi_1$defa);\n    return _createClass(VectorIndexScope, [{\n      key: \"putVectors\",\n      value: function putVectors(options) {\n        var _super = Object.create(null, {\n          putVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"putVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.putVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n      /**\n       * Retrieves vectors by keys from this index\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Vector retrieval options (bucket and index names automatically set)\n       * @returns Promise with array of vectors or error\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * const { data } = await index.getVectors({\n       *   keys: ['doc-1', 'doc-2'],\n       *   returnMetadata: true\n       * })\n       * ```\n       */\n    }, {\n      key: \"getVectors\",\n      value: function getVectors(options) {\n        var _super = Object.create(null, {\n          getVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"getVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.getVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n      /**\n       * Lists vectors in this index with pagination\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Listing options (bucket and index names automatically set)\n       * @returns Promise with array of vectors and pagination token\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * const { data } = await index.listVectors({\n       *   maxResults: 500,\n       *   returnMetadata: true\n       * })\n       * ```\n       */\n    }, {\n      key: \"listVectors\",\n      value: function listVectors() {\n        var _super = Object.create(null, {\n          listVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"listVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, arguments, void 0, function () {\n          var _this4 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return function* () {\n            return _super.listVectors.call(_this4, Object.assign(Object.assign({}, options), {\n              vectorBucketName: _this4.vectorBucketName,\n              indexName: _this4.indexName\n            }));\n          }();\n        });\n      }\n      /**\n       * Queries for similar vectors in this index\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Query options (bucket and index names automatically set)\n       * @returns Promise with array of similar vectors ordered by distance\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * const { data } = await index.queryVectors({\n       *   queryVector: { float32: [0.1, 0.2, ...] },\n       *   topK: 5,\n       *   filter: { category: 'technical' },\n       *   returnDistance: true,\n       *   returnMetadata: true\n       * })\n       * ```\n       */\n    }, {\n      key: \"queryVectors\",\n      value: function queryVectors(options) {\n        var _super = Object.create(null, {\n          queryVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"queryVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.queryVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n      /**\n       * Deletes vectors by keys from this index\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Deletion options (bucket and index names automatically set)\n       * @returns Promise with empty response on success or error\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * await index.deleteVectors({\n       *   keys: ['doc-1', 'doc-2', 'doc-3']\n       * })\n       * ```\n       */\n    }, {\n      key: \"deleteVectors\",\n      value: function deleteVectors(options) {\n        var _super = Object.create(null, {\n          deleteVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"deleteVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.deleteVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n    }]);\n  }(VectorDataApi_1.default);\n  exports.VectorIndexScope = VectorIndexScope;\n});","lineCount":460,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_get"],[4,10,1,13],[4,13,1,13,"require"],[4,20,1,13],[4,21,1,13,"_dependencyMap"],[4,35,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[7,2,1,13],[7,6,1,13,"_possibleConstructorReturn"],[7,32,1,13],[7,35,1,13,"require"],[7,42,1,13],[7,43,1,13,"_dependencyMap"],[7,57,1,13],[8,2,1,13],[8,6,1,13,"_getPrototypeOf"],[8,21,1,13],[8,24,1,13,"require"],[8,31,1,13],[8,32,1,13,"_dependencyMap"],[8,46,1,13],[9,2,1,13],[9,6,1,13,"_inherits"],[9,15,1,13],[9,18,1,13,"require"],[9,25,1,13],[9,26,1,13,"_dependencyMap"],[9,40,1,13],[10,2,1,13],[10,11,1,13,"_superPropGet"],[10,25,1,13,"t"],[10,26,1,13],[10,28,1,13,"o"],[10,29,1,13],[10,31,1,13,"e"],[10,32,1,13],[10,34,1,13,"r"],[10,35,1,13],[10,43,1,13,"p"],[10,44,1,13],[10,47,1,13,"_get"],[10,51,1,13],[10,52,1,13,"_getPrototypeOf"],[10,67,1,13],[10,72,1,13,"r"],[10,73,1,13],[10,76,1,13,"t"],[10,77,1,13],[10,78,1,13,"prototype"],[10,87,1,13],[10,90,1,13,"t"],[10,91,1,13],[10,94,1,13,"o"],[10,95,1,13],[10,97,1,13,"e"],[10,98,1,13],[10,112,1,13,"r"],[10,113,1,13],[10,138,1,13,"p"],[10,139,1,13],[10,152,1,13,"t"],[10,153,1,13],[10,164,1,13,"p"],[10,165,1,13],[10,166,1,13,"apply"],[10,171,1,13],[10,172,1,13,"e"],[10,173,1,13],[10,175,1,13,"t"],[10,176,1,13],[10,183,1,13,"p"],[10,184,1,13],[11,2,1,13],[11,11,1,13,"_callSuper"],[11,22,1,13,"t"],[11,23,1,13],[11,25,1,13,"o"],[11,26,1,13],[11,28,1,13,"e"],[11,29,1,13],[11,40,1,13,"o"],[11,41,1,13],[11,44,1,13,"_getPrototypeOf"],[11,59,1,13],[11,60,1,13,"o"],[11,61,1,13],[11,64,1,13,"_possibleConstructorReturn"],[11,90,1,13],[11,91,1,13,"t"],[11,92,1,13],[11,94,1,13,"_isNativeReflectConstruct"],[11,119,1,13],[11,124,1,13,"Reflect"],[11,131,1,13],[11,132,1,13,"construct"],[11,141,1,13],[11,142,1,13,"o"],[11,143,1,13],[11,145,1,13,"e"],[11,146,1,13],[11,154,1,13,"_getPrototypeOf"],[11,169,1,13],[11,170,1,13,"t"],[11,171,1,13],[11,173,1,13,"constructor"],[11,184,1,13],[11,188,1,13,"o"],[11,189,1,13],[11,190,1,13,"apply"],[11,195,1,13],[11,196,1,13,"t"],[11,197,1,13],[11,199,1,13,"e"],[11,200,1,13],[12,2,1,13],[12,11,1,13,"_isNativeReflectConstruct"],[12,37,1,13],[12,51,1,13,"t"],[12,52,1,13],[12,56,1,13,"Boolean"],[12,63,1,13],[12,64,1,13,"prototype"],[12,73,1,13],[12,74,1,13,"valueOf"],[12,81,1,13],[12,82,1,13,"call"],[12,86,1,13],[12,87,1,13,"Reflect"],[12,94,1,13],[12,95,1,13,"construct"],[12,104,1,13],[12,105,1,13,"Boolean"],[12,112,1,13],[12,145,1,13,"t"],[12,146,1,13],[12,159,1,13,"_isNativeReflectConstruct"],[12,184,1,13],[12,196,1,13,"_isNativeReflectConstruct"],[12,197,1,13],[12,210,1,13,"t"],[12,211,1,13],[13,2,2,0,"Object"],[13,8,2,6],[13,9,2,7,"defineProperty"],[13,23,2,21],[13,24,2,22,"exports"],[13,31,2,29],[13,33,2,31],[13,45,2,43],[13,47,2,45],[14,4,2,47,"value"],[14,9,2,52],[14,11,2,54],[15,2,2,59],[15,3,2,60],[15,4,2,61],[16,2,3,0,"exports"],[16,9,3,7],[16,10,3,8,"VectorIndexScope"],[16,26,3,24],[16,29,3,27,"exports"],[16,36,3,34],[16,37,3,35,"VectorBucketScope"],[16,54,3,52],[16,57,3,55,"exports"],[16,64,3,62],[16,65,3,63,"StorageVectorsClient"],[16,85,3,83],[16,88,3,86],[16,93,3,91],[16,94,3,92],[17,2,4,0],[17,6,4,6,"tslib_1"],[17,13,4,13],[17,16,4,16,"require"],[17,23,4,23],[17,24,4,23,"_dependencyMap"],[17,38,4,23],[17,50,4,31],[17,51,4,32],[18,2,5,0],[18,6,5,6,"VectorIndexApi_1"],[18,22,5,22],[18,25,5,25,"tslib_1"],[18,32,5,32],[18,33,5,33,"__importDefault"],[18,48,5,48],[18,49,5,49,"require"],[18,56,5,56],[18,57,5,56,"_dependencyMap"],[18,71,5,56],[18,94,5,75],[18,95,5,76],[18,96,5,77],[19,2,6,0],[19,6,6,6,"VectorDataApi_1"],[19,21,6,21],[19,24,6,24,"tslib_1"],[19,31,6,31],[19,32,6,32,"__importDefault"],[19,47,6,47],[19,48,6,48,"require"],[19,55,6,55],[19,56,6,55,"_dependencyMap"],[19,70,6,55],[19,92,6,73],[19,93,6,74],[19,94,6,75],[20,2,7,0],[20,6,7,6,"VectorBucketApi_1"],[20,23,7,23],[20,26,7,26,"tslib_1"],[20,33,7,33],[20,34,7,34,"__importDefault"],[20,49,7,49],[20,50,7,50,"require"],[20,57,7,57],[20,58,7,57,"_dependencyMap"],[20,72,7,57],[20,96,7,77],[20,97,7,78],[20,98,7,79],[21,2,8,0],[22,0,9,0],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,0,13,0],[27,0,14,0],[28,0,15,0],[29,0,16,0],[30,0,17,0],[31,0,18,0],[32,0,19,0],[33,0,20,0],[34,0,21,0],[35,0,22,0],[36,0,23,0],[37,0,24,0],[38,0,25,0],[39,0,26,0],[40,0,27,0],[41,0,28,0],[42,0,29,0],[43,0,30,0],[44,0,31,0],[45,0,32,0],[46,0,33,0],[47,0,34,0],[48,0,35,0],[49,0,36,0],[50,0,37,0],[51,0,38,0],[52,0,39,0],[53,0,40,0],[54,0,41,0],[55,0,42,0],[56,0,43,0],[57,0,44,0],[58,0,45,0],[59,0,46,0],[60,0,47,0],[61,0,48,0],[62,0,49,0],[63,0,50,0],[64,0,51,0],[65,0,52,0],[66,0,53,0],[67,0,54,0],[68,0,55,0],[69,0,56,0],[70,0,57,0],[71,0,58,0],[72,0,59,0],[73,0,60,0],[74,0,61,0],[75,0,62,0],[76,2,8,0],[76,6,63,6,"StorageVectorsClient"],[76,26,63,26],[76,52,63,26,"_VectorBucketApi_1$de"],[76,73,63,26],[77,4,64,4],[77,13,64,4,"StorageVectorsClient"],[77,34,64,16,"url"],[77,37,64,19],[77,39,64,35],[78,6,64,35],[78,10,64,21,"options"],[78,17,64,28],[78,20,64,28,"arguments"],[78,29,64,28],[78,30,64,28,"length"],[78,36,64,28],[78,44,64,28,"arguments"],[78,53,64,28],[78,61,64,28,"undefined"],[78,70,64,28],[78,73,64,28,"arguments"],[78,82,64,28],[78,88,64,31],[78,89,64,32],[78,90,64,33],[79,6,64,33,"_classCallCheck"],[79,21,64,33],[79,28,64,33,"StorageVectorsClient"],[79,48,64,33],[80,6,64,33],[80,13,64,33,"_callSuper"],[80,23,64,33],[80,30,64,33,"StorageVectorsClient"],[80,50,64,33],[80,53,65,14,"url"],[80,56,65,17],[80,58,65,19,"options"],[80,65,65,26],[80,66,65,27,"headers"],[80,73,65,34],[80,77,65,38],[80,78,65,39],[80,79,65,40],[80,81,65,42,"options"],[80,88,65,49],[80,89,65,50,"fetch"],[80,94,65,55],[81,4,66,4],[82,4,67,4],[83,0,68,0],[84,0,69,0],[85,0,70,0],[86,0,71,0],[87,0,72,0],[88,0,73,0],[89,0,74,0],[90,0,75,0],[91,0,76,0],[92,0,77,0],[93,0,78,0],[94,0,79,0],[95,0,80,0],[96,0,81,0],[97,0,82,0],[98,0,83,0],[99,0,84,0],[100,0,85,0],[101,0,86,0],[102,0,87,0],[103,0,88,0],[104,0,89,0],[105,4,67,4,"_inherits"],[105,13,67,4],[105,14,67,4,"StorageVectorsClient"],[105,34,67,4],[105,36,67,4,"_VectorBucketApi_1$de"],[105,57,67,4],[106,4,67,4],[106,11,67,4,"_createClass"],[106,23,67,4],[106,24,67,4,"StorageVectorsClient"],[106,44,67,4],[107,6,67,4,"key"],[107,9,67,4],[108,6,67,4,"value"],[108,11,67,4],[108,13,90,4],[108,22,90,4,"from"],[108,26,90,8,"from"],[108,27,90,9,"vectorBucketName"],[108,43,90,25],[108,45,90,27],[109,8,91,8],[109,15,91,15],[109,19,91,19,"VectorBucketScope"],[109,36,91,36],[109,37,91,37],[109,41,91,41],[109,42,91,42,"url"],[109,45,91,45],[109,47,91,47],[109,51,91,51],[109,52,91,52,"headers"],[109,59,91,59],[109,61,91,61,"vectorBucketName"],[109,77,91,77],[109,79,91,79],[109,83,91,83],[109,84,91,84,"fetch"],[109,89,91,89],[109,90,91,90],[110,6,92,4],[111,4,92,5],[112,2,92,5],[112,4,63,35,"VectorBucketApi_1"],[112,21,63,52],[112,22,63,53,"default"],[112,29,63,60],[113,2,94,0,"exports"],[113,9,94,7],[113,10,94,8,"StorageVectorsClient"],[113,30,94,28],[113,33,94,31,"StorageVectorsClient"],[113,53,94,51],[114,2,95,0],[115,0,96,0],[116,0,97,0],[117,0,98,0],[118,2,95,0],[118,6,99,6,"VectorBucketScope"],[118,23,99,23],[118,49,99,23,"_VectorIndexApi_1$def"],[118,70,99,23],[119,4,100,4],[119,13,100,4,"VectorBucketScope"],[119,31,100,16,"url"],[119,34,100,19],[119,36,100,21,"headers"],[119,43,100,28],[119,45,100,30,"vectorBucketName"],[119,61,100,46],[119,63,100,48,"fetch"],[119,68,100,53],[119,70,100,55],[120,6,100,55],[120,10,100,55,"_this"],[120,15,100,55],[121,6,100,55,"_classCallCheck"],[121,21,100,55],[121,28,100,55,"VectorBucketScope"],[121,45,100,55],[122,6,101,8,"_this"],[122,11,101,8],[122,14,101,8,"_callSuper"],[122,24,101,8],[122,31,101,8,"VectorBucketScope"],[122,48,101,8],[122,51,101,14,"url"],[122,54,101,17],[122,56,101,19,"headers"],[122,63,101,26],[122,65,101,28,"fetch"],[122,70,101,33],[123,6,102,8,"_this"],[123,11,102,8],[123,12,102,13,"vectorBucketName"],[123,28,102,29],[123,31,102,32,"vectorBucketName"],[123,47,102,48],[124,6,102,49],[124,13,102,49,"_this"],[124,18,102,49],[125,4,103,4],[126,4,104,4],[127,0,105,0],[128,0,106,0],[129,0,107,0],[130,0,108,0],[131,0,109,0],[132,0,110,0],[133,0,111,0],[134,0,112,0],[135,0,113,0],[136,0,114,0],[137,0,115,0],[138,0,116,0],[139,0,117,0],[140,0,118,0],[141,0,119,0],[142,0,120,0],[143,0,121,0],[144,0,122,0],[145,0,123,0],[146,0,124,0],[147,4,104,4,"_inherits"],[147,13,104,4],[147,14,104,4,"VectorBucketScope"],[147,31,104,4],[147,33,104,4,"_VectorIndexApi_1$def"],[147,54,104,4],[148,4,104,4],[148,11,104,4,"_createClass"],[148,23,104,4],[148,24,104,4,"VectorBucketScope"],[148,41,104,4],[149,6,104,4,"key"],[149,9,104,4],[150,6,104,4,"value"],[150,11,104,4],[150,13,125,4],[150,22,125,4,"createIndex"],[150,33,125,15,"createIndex"],[150,34,125,16,"options"],[150,41,125,23],[150,43,125,25],[151,8,126,8],[151,12,126,14,"_super"],[151,18,126,20],[151,21,126,23,"Object"],[151,27,126,29],[151,28,126,30,"create"],[151,34,126,36],[151,35,126,37],[151,39,126,41],[151,41,126,43],[152,10,127,12,"createIndex"],[152,21,127,23],[152,23,127,25],[153,12,127,27,"get"],[153,15,127,30],[153,17,127,32,"get"],[153,18,127,32],[153,23,127,32,"_superPropGet"],[153,36,127,32],[153,37,127,32,"VectorBucketScope"],[153,54,127,32],[154,10,127,56],[155,8,128,8],[155,9,128,9],[155,10,128,10],[156,8,129,8],[156,15,129,15,"tslib_1"],[156,22,129,22],[156,23,129,23,"__awaiter"],[156,32,129,32],[156,33,129,33],[156,37,129,37],[156,39,129,39],[156,44,129,44],[156,45,129,45],[156,47,129,47],[156,52,129,52],[156,53,129,53],[156,55,129,55],[156,68,129,68],[157,10,130,12],[157,17,130,19,"_super"],[157,23,130,25],[157,24,130,26,"createIndex"],[157,35,130,37],[157,36,130,38,"call"],[157,40,130,42],[157,41,130,43],[157,45,130,47],[157,47,130,49,"Object"],[157,53,130,55],[157,54,130,56,"assign"],[157,60,130,62],[157,61,130,63,"Object"],[157,67,130,69],[157,68,130,70,"assign"],[157,74,130,76],[157,75,130,77],[157,76,130,78],[157,77,130,79],[157,79,130,81,"options"],[157,86,130,88],[157,87,130,89],[157,89,130,91],[158,12,130,93,"vectorBucketName"],[158,28,130,109],[158,30,130,111],[158,34,130,115],[158,35,130,116,"vectorBucketName"],[159,10,130,133],[159,11,130,134],[159,12,130,135],[159,13,130,136],[160,8,131,8],[160,9,131,9],[160,10,131,10],[161,6,132,4],[162,6,133,4],[163,0,134,0],[164,0,135,0],[165,0,136,0],[166,0,137,0],[167,0,138,0],[168,0,139,0],[169,0,140,0],[170,0,141,0],[171,0,142,0],[172,0,143,0],[173,0,144,0],[174,0,145,0],[175,4,133,4],[176,6,133,4,"key"],[176,9,133,4],[177,6,133,4,"value"],[177,11,133,4],[177,13,146,4],[177,22,146,4,"listIndexes"],[177,33,146,15,"listIndexes"],[177,34,146,15],[177,36,146,18],[178,8,147,8],[178,12,147,14,"_super"],[178,18,147,20],[178,21,147,23,"Object"],[178,27,147,29],[178,28,147,30,"create"],[178,34,147,36],[178,35,147,37],[178,39,147,41],[178,41,147,43],[179,10,148,12,"listIndexes"],[179,21,148,23],[179,23,148,25],[180,12,148,27,"get"],[180,15,148,30],[180,17,148,32,"get"],[180,18,148,32],[180,23,148,32,"_superPropGet"],[180,36,148,32],[180,37,148,32,"VectorBucketScope"],[180,54,148,32],[181,10,148,56],[182,8,149,8],[182,9,149,9],[182,10,149,10],[183,8,150,8],[183,15,150,15,"tslib_1"],[183,22,150,22],[183,23,150,23,"__awaiter"],[183,32,150,32],[183,33,150,33],[183,37,150,37],[183,39,150,39,"arguments"],[183,48,150,48],[183,50,150,50],[183,55,150,55],[183,56,150,56],[183,58,150,58],[184,10,150,58],[184,14,150,58,"_this2"],[184,20,150,58],[185,10,150,58],[185,14,150,69,"options"],[185,21,150,76],[185,24,150,76,"arguments"],[185,33,150,76],[185,34,150,76,"length"],[185,40,150,76],[185,48,150,76,"arguments"],[185,57,150,76],[185,65,150,76,"undefined"],[185,74,150,76],[185,77,150,76,"arguments"],[185,86,150,76],[185,92,150,79],[185,93,150,80],[185,94,150,81],[186,10,150,81],[186,30,150,83],[187,12,151,12],[187,19,151,19,"_super"],[187,25,151,25],[187,26,151,26,"listIndexes"],[187,37,151,37],[187,38,151,38,"call"],[187,42,151,42],[187,43,151,43,"_this2"],[187,49,151,47],[187,51,151,49,"Object"],[187,57,151,55],[187,58,151,56,"assign"],[187,64,151,62],[187,65,151,63,"Object"],[187,71,151,69],[187,72,151,70,"assign"],[187,78,151,76],[187,79,151,77],[187,80,151,78],[187,81,151,79],[187,83,151,81,"options"],[187,90,151,88],[187,91,151,89],[187,93,151,91],[188,14,151,93,"vectorBucketName"],[188,30,151,109],[188,32,151,111,"_this2"],[188,38,151,115],[188,39,151,116,"vectorBucketName"],[189,12,151,133],[189,13,151,134],[189,14,151,135],[189,15,151,136],[190,10,152,8],[190,11,152,9],[191,8,152,9],[191,10,152,10],[192,6,153,4],[193,6,154,4],[194,0,155,0],[195,0,156,0],[196,0,157,0],[197,0,158,0],[198,0,159,0],[199,0,160,0],[200,0,161,0],[201,0,162,0],[202,0,163,0],[203,0,164,0],[204,0,165,0],[205,0,166,0],[206,0,167,0],[207,4,154,4],[208,6,154,4,"key"],[208,9,154,4],[209,6,154,4,"value"],[209,11,154,4],[209,13,168,4],[209,22,168,4,"getIndex"],[209,30,168,12,"getIndex"],[209,31,168,13,"indexName"],[209,40,168,22],[209,42,168,24],[210,8,169,8],[210,12,169,14,"_super"],[210,18,169,20],[210,21,169,23,"Object"],[210,27,169,29],[210,28,169,30,"create"],[210,34,169,36],[210,35,169,37],[210,39,169,41],[210,41,169,43],[211,10,170,12,"getIndex"],[211,18,170,20],[211,20,170,22],[212,12,170,24,"get"],[212,15,170,27],[212,17,170,29,"get"],[212,18,170,29],[212,23,170,29,"_superPropGet"],[212,36,170,29],[212,37,170,29,"VectorBucketScope"],[212,54,170,29],[213,10,170,50],[214,8,171,8],[214,9,171,9],[214,10,171,10],[215,8,172,8],[215,15,172,15,"tslib_1"],[215,22,172,22],[215,23,172,23,"__awaiter"],[215,32,172,32],[215,33,172,33],[215,37,172,37],[215,39,172,39],[215,44,172,44],[215,45,172,45],[215,47,172,47],[215,52,172,52],[215,53,172,53],[215,55,172,55],[215,68,172,68],[216,10,173,12],[216,17,173,19,"_super"],[216,23,173,25],[216,24,173,26,"getIndex"],[216,32,173,34],[216,33,173,35,"call"],[216,37,173,39],[216,38,173,40],[216,42,173,44],[216,44,173,46],[216,48,173,50],[216,49,173,51,"vectorBucketName"],[216,65,173,67],[216,67,173,69,"indexName"],[216,76,173,78],[216,77,173,79],[217,8,174,8],[217,9,174,9],[217,10,174,10],[218,6,175,4],[219,6,176,4],[220,0,177,0],[221,0,178,0],[222,0,179,0],[223,0,180,0],[224,0,181,0],[225,0,182,0],[226,0,183,0],[227,0,184,0],[228,0,185,0],[229,0,186,0],[230,0,187,0],[231,0,188,0],[232,4,176,4],[233,6,176,4,"key"],[233,9,176,4],[234,6,176,4,"value"],[234,11,176,4],[234,13,189,4],[234,22,189,4,"deleteIndex"],[234,33,189,15,"deleteIndex"],[234,34,189,16,"indexName"],[234,43,189,25],[234,45,189,27],[235,8,190,8],[235,12,190,14,"_super"],[235,18,190,20],[235,21,190,23,"Object"],[235,27,190,29],[235,28,190,30,"create"],[235,34,190,36],[235,35,190,37],[235,39,190,41],[235,41,190,43],[236,10,191,12,"deleteIndex"],[236,21,191,23],[236,23,191,25],[237,12,191,27,"get"],[237,15,191,30],[237,17,191,32,"get"],[237,18,191,32],[237,23,191,32,"_superPropGet"],[237,36,191,32],[237,37,191,32,"VectorBucketScope"],[237,54,191,32],[238,10,191,56],[239,8,192,8],[239,9,192,9],[239,10,192,10],[240,8,193,8],[240,15,193,15,"tslib_1"],[240,22,193,22],[240,23,193,23,"__awaiter"],[240,32,193,32],[240,33,193,33],[240,37,193,37],[240,39,193,39],[240,44,193,44],[240,45,193,45],[240,47,193,47],[240,52,193,52],[240,53,193,53],[240,55,193,55],[240,68,193,68],[241,10,194,12],[241,17,194,19,"_super"],[241,23,194,25],[241,24,194,26,"deleteIndex"],[241,35,194,37],[241,36,194,38,"call"],[241,40,194,42],[241,41,194,43],[241,45,194,47],[241,47,194,49],[241,51,194,53],[241,52,194,54,"vectorBucketName"],[241,68,194,70],[241,70,194,72,"indexName"],[241,79,194,81],[241,80,194,82],[242,8,195,8],[242,9,195,9],[242,10,195,10],[243,6,196,4],[244,6,197,4],[245,0,198,0],[246,0,199,0],[247,0,200,0],[248,0,201,0],[249,0,202,0],[250,0,203,0],[251,0,204,0],[252,0,205,0],[253,0,206,0],[254,0,207,0],[255,0,208,0],[256,0,209,0],[257,0,210,0],[258,0,211,0],[259,0,212,0],[260,0,213,0],[261,0,214,0],[262,0,215,0],[263,0,216,0],[264,0,217,0],[265,0,218,0],[266,0,219,0],[267,0,220,0],[268,0,221,0],[269,4,197,4],[270,6,197,4,"key"],[270,9,197,4],[271,6,197,4,"value"],[271,11,197,4],[271,13,222,4],[271,22,222,4,"index"],[271,27,222,9,"index"],[271,28,222,10,"indexName"],[271,37,222,19],[271,39,222,21],[272,8,223,8],[272,15,223,15],[272,19,223,19,"VectorIndexScope"],[272,35,223,35],[272,36,223,36],[272,40,223,40],[272,41,223,41,"url"],[272,44,223,44],[272,46,223,46],[272,50,223,50],[272,51,223,51,"headers"],[272,58,223,58],[272,60,223,60],[272,64,223,64],[272,65,223,65,"vectorBucketName"],[272,81,223,81],[272,83,223,83,"indexName"],[272,92,223,92],[272,94,223,94],[272,98,223,98],[272,99,223,99,"fetch"],[272,104,223,104],[272,105,223,105],[273,6,224,4],[274,4,224,5],[275,2,224,5],[275,4,99,32,"VectorIndexApi_1"],[275,20,99,48],[275,21,99,49,"default"],[275,28,99,56],[276,2,226,0,"exports"],[276,9,226,7],[276,10,226,8,"VectorBucketScope"],[276,27,226,25],[276,30,226,28,"VectorBucketScope"],[276,47,226,45],[277,2,227,0],[278,0,228,0],[279,0,229,0],[280,0,230,0],[281,2,227,0],[281,6,231,6,"VectorIndexScope"],[281,22,231,22],[281,48,231,22,"_VectorDataApi_1$defa"],[281,69,231,22],[282,4,232,4],[282,13,232,4,"VectorIndexScope"],[282,30,232,16,"url"],[282,33,232,19],[282,35,232,21,"headers"],[282,42,232,28],[282,44,232,30,"vectorBucketName"],[282,60,232,46],[282,62,232,48,"indexName"],[282,71,232,57],[282,73,232,59,"fetch"],[282,78,232,64],[282,80,232,66],[283,6,232,66],[283,10,232,66,"_this3"],[283,16,232,66],[284,6,232,66,"_classCallCheck"],[284,21,232,66],[284,28,232,66,"VectorIndexScope"],[284,44,232,66],[285,6,233,8,"_this3"],[285,12,233,8],[285,15,233,8,"_callSuper"],[285,25,233,8],[285,32,233,8,"VectorIndexScope"],[285,48,233,8],[285,51,233,14,"url"],[285,54,233,17],[285,56,233,19,"headers"],[285,63,233,26],[285,65,233,28,"fetch"],[285,70,233,33],[286,6,234,8,"_this3"],[286,12,234,8],[286,13,234,13,"vectorBucketName"],[286,29,234,29],[286,32,234,32,"vectorBucketName"],[286,48,234,48],[287,6,235,8,"_this3"],[287,12,235,8],[287,13,235,13,"indexName"],[287,22,235,22],[287,25,235,25,"indexName"],[287,34,235,34],[288,6,235,35],[288,13,235,35,"_this3"],[288,19,235,35],[289,4,236,4],[290,4,237,4],[291,0,238,0],[292,0,239,0],[293,0,240,0],[294,0,241,0],[295,0,242,0],[296,0,243,0],[297,0,244,0],[298,0,245,0],[299,0,246,0],[300,0,247,0],[301,0,248,0],[302,0,249,0],[303,0,250,0],[304,0,251,0],[305,0,252,0],[306,0,253,0],[307,0,254,0],[308,0,255,0],[309,0,256,0],[310,0,257,0],[311,4,237,4,"_inherits"],[311,13,237,4],[311,14,237,4,"VectorIndexScope"],[311,30,237,4],[311,32,237,4,"_VectorDataApi_1$defa"],[311,53,237,4],[312,4,237,4],[312,11,237,4,"_createClass"],[312,23,237,4],[312,24,237,4,"VectorIndexScope"],[312,40,237,4],[313,6,237,4,"key"],[313,9,237,4],[314,6,237,4,"value"],[314,11,237,4],[314,13,258,4],[314,22,258,4,"putVectors"],[314,32,258,14,"putVectors"],[314,33,258,15,"options"],[314,40,258,22],[314,42,258,24],[315,8,259,8],[315,12,259,14,"_super"],[315,18,259,20],[315,21,259,23,"Object"],[315,27,259,29],[315,28,259,30,"create"],[315,34,259,36],[315,35,259,37],[315,39,259,41],[315,41,259,43],[316,10,260,12,"putVectors"],[316,20,260,22],[316,22,260,24],[317,12,260,26,"get"],[317,15,260,29],[317,17,260,31,"get"],[317,18,260,31],[317,23,260,31,"_superPropGet"],[317,36,260,31],[317,37,260,31,"VectorIndexScope"],[317,53,260,31],[318,10,260,54],[319,8,261,8],[319,9,261,9],[319,10,261,10],[320,8,262,8],[320,15,262,15,"tslib_1"],[320,22,262,22],[320,23,262,23,"__awaiter"],[320,32,262,32],[320,33,262,33],[320,37,262,37],[320,39,262,39],[320,44,262,44],[320,45,262,45],[320,47,262,47],[320,52,262,52],[320,53,262,53],[320,55,262,55],[320,68,262,68],[321,10,263,12],[321,17,263,19,"_super"],[321,23,263,25],[321,24,263,26,"putVectors"],[321,34,263,36],[321,35,263,37,"call"],[321,39,263,41],[321,40,263,42],[321,44,263,46],[321,46,263,48,"Object"],[321,52,263,54],[321,53,263,55,"assign"],[321,59,263,61],[321,60,263,62,"Object"],[321,66,263,68],[321,67,263,69,"assign"],[321,73,263,75],[321,74,263,76],[321,75,263,77],[321,76,263,78],[321,78,263,80,"options"],[321,85,263,87],[321,86,263,88],[321,88,263,90],[322,12,263,92,"vectorBucketName"],[322,28,263,108],[322,30,263,110],[322,34,263,114],[322,35,263,115,"vectorBucketName"],[322,51,263,131],[323,12,263,133,"indexName"],[323,21,263,142],[323,23,263,144],[323,27,263,148],[323,28,263,149,"indexName"],[324,10,263,159],[324,11,263,160],[324,12,263,161],[324,13,263,162],[325,8,264,8],[325,9,264,9],[325,10,264,10],[326,6,265,4],[327,6,266,4],[328,0,267,0],[329,0,268,0],[330,0,269,0],[331,0,270,0],[332,0,271,0],[333,0,272,0],[334,0,273,0],[335,0,274,0],[336,0,275,0],[337,0,276,0],[338,0,277,0],[339,0,278,0],[340,0,279,0],[341,0,280,0],[342,0,281,0],[343,4,266,4],[344,6,266,4,"key"],[344,9,266,4],[345,6,266,4,"value"],[345,11,266,4],[345,13,282,4],[345,22,282,4,"getVectors"],[345,32,282,14,"getVectors"],[345,33,282,15,"options"],[345,40,282,22],[345,42,282,24],[346,8,283,8],[346,12,283,14,"_super"],[346,18,283,20],[346,21,283,23,"Object"],[346,27,283,29],[346,28,283,30,"create"],[346,34,283,36],[346,35,283,37],[346,39,283,41],[346,41,283,43],[347,10,284,12,"getVectors"],[347,20,284,22],[347,22,284,24],[348,12,284,26,"get"],[348,15,284,29],[348,17,284,31,"get"],[348,18,284,31],[348,23,284,31,"_superPropGet"],[348,36,284,31],[348,37,284,31,"VectorIndexScope"],[348,53,284,31],[349,10,284,54],[350,8,285,8],[350,9,285,9],[350,10,285,10],[351,8,286,8],[351,15,286,15,"tslib_1"],[351,22,286,22],[351,23,286,23,"__awaiter"],[351,32,286,32],[351,33,286,33],[351,37,286,37],[351,39,286,39],[351,44,286,44],[351,45,286,45],[351,47,286,47],[351,52,286,52],[351,53,286,53],[351,55,286,55],[351,68,286,68],[352,10,287,12],[352,17,287,19,"_super"],[352,23,287,25],[352,24,287,26,"getVectors"],[352,34,287,36],[352,35,287,37,"call"],[352,39,287,41],[352,40,287,42],[352,44,287,46],[352,46,287,48,"Object"],[352,52,287,54],[352,53,287,55,"assign"],[352,59,287,61],[352,60,287,62,"Object"],[352,66,287,68],[352,67,287,69,"assign"],[352,73,287,75],[352,74,287,76],[352,75,287,77],[352,76,287,78],[352,78,287,80,"options"],[352,85,287,87],[352,86,287,88],[352,88,287,90],[353,12,287,92,"vectorBucketName"],[353,28,287,108],[353,30,287,110],[353,34,287,114],[353,35,287,115,"vectorBucketName"],[353,51,287,131],[354,12,287,133,"indexName"],[354,21,287,142],[354,23,287,144],[354,27,287,148],[354,28,287,149,"indexName"],[355,10,287,159],[355,11,287,160],[355,12,287,161],[355,13,287,162],[356,8,288,8],[356,9,288,9],[356,10,288,10],[357,6,289,4],[358,6,290,4],[359,0,291,0],[360,0,292,0],[361,0,293,0],[362,0,294,0],[363,0,295,0],[364,0,296,0],[365,0,297,0],[366,0,298,0],[367,0,299,0],[368,0,300,0],[369,0,301,0],[370,0,302,0],[371,0,303,0],[372,0,304,0],[373,0,305,0],[374,4,290,4],[375,6,290,4,"key"],[375,9,290,4],[376,6,290,4,"value"],[376,11,290,4],[376,13,306,4],[376,22,306,4,"listVectors"],[376,33,306,15,"listVectors"],[376,34,306,15],[376,36,306,18],[377,8,307,8],[377,12,307,14,"_super"],[377,18,307,20],[377,21,307,23,"Object"],[377,27,307,29],[377,28,307,30,"create"],[377,34,307,36],[377,35,307,37],[377,39,307,41],[377,41,307,43],[378,10,308,12,"listVectors"],[378,21,308,23],[378,23,308,25],[379,12,308,27,"get"],[379,15,308,30],[379,17,308,32,"get"],[379,18,308,32],[379,23,308,32,"_superPropGet"],[379,36,308,32],[379,37,308,32,"VectorIndexScope"],[379,53,308,32],[380,10,308,56],[381,8,309,8],[381,9,309,9],[381,10,309,10],[382,8,310,8],[382,15,310,15,"tslib_1"],[382,22,310,22],[382,23,310,23,"__awaiter"],[382,32,310,32],[382,33,310,33],[382,37,310,37],[382,39,310,39,"arguments"],[382,48,310,48],[382,50,310,50],[382,55,310,55],[382,56,310,56],[382,58,310,58],[383,10,310,58],[383,14,310,58,"_this4"],[383,20,310,58],[384,10,310,58],[384,14,310,69,"options"],[384,21,310,76],[384,24,310,76,"arguments"],[384,33,310,76],[384,34,310,76,"length"],[384,40,310,76],[384,48,310,76,"arguments"],[384,57,310,76],[384,65,310,76,"undefined"],[384,74,310,76],[384,77,310,76,"arguments"],[384,86,310,76],[384,92,310,79],[384,93,310,80],[384,94,310,81],[385,10,310,81],[385,30,310,83],[386,12,311,12],[386,19,311,19,"_super"],[386,25,311,25],[386,26,311,26,"listVectors"],[386,37,311,37],[386,38,311,38,"call"],[386,42,311,42],[386,43,311,43,"_this4"],[386,49,311,47],[386,51,311,49,"Object"],[386,57,311,55],[386,58,311,56,"assign"],[386,64,311,62],[386,65,311,63,"Object"],[386,71,311,69],[386,72,311,70,"assign"],[386,78,311,76],[386,79,311,77],[386,80,311,78],[386,81,311,79],[386,83,311,81,"options"],[386,90,311,88],[386,91,311,89],[386,93,311,91],[387,14,311,93,"vectorBucketName"],[387,30,311,109],[387,32,311,111,"_this4"],[387,38,311,115],[387,39,311,116,"vectorBucketName"],[387,55,311,132],[388,14,311,134,"indexName"],[388,23,311,143],[388,25,311,145,"_this4"],[388,31,311,149],[388,32,311,150,"indexName"],[389,12,311,160],[389,13,311,161],[389,14,311,162],[389,15,311,163],[390,10,312,8],[390,11,312,9],[391,8,312,9],[391,10,312,10],[392,6,313,4],[393,6,314,4],[394,0,315,0],[395,0,316,0],[396,0,317,0],[397,0,318,0],[398,0,319,0],[399,0,320,0],[400,0,321,0],[401,0,322,0],[402,0,323,0],[403,0,324,0],[404,0,325,0],[405,0,326,0],[406,0,327,0],[407,0,328,0],[408,0,329,0],[409,0,330,0],[410,0,331,0],[411,0,332,0],[412,4,314,4],[413,6,314,4,"key"],[413,9,314,4],[414,6,314,4,"value"],[414,11,314,4],[414,13,333,4],[414,22,333,4,"queryVectors"],[414,34,333,16,"queryVectors"],[414,35,333,17,"options"],[414,42,333,24],[414,44,333,26],[415,8,334,8],[415,12,334,14,"_super"],[415,18,334,20],[415,21,334,23,"Object"],[415,27,334,29],[415,28,334,30,"create"],[415,34,334,36],[415,35,334,37],[415,39,334,41],[415,41,334,43],[416,10,335,12,"queryVectors"],[416,22,335,24],[416,24,335,26],[417,12,335,28,"get"],[417,15,335,31],[417,17,335,33,"get"],[417,18,335,33],[417,23,335,33,"_superPropGet"],[417,36,335,33],[417,37,335,33,"VectorIndexScope"],[417,53,335,33],[418,10,335,58],[419,8,336,8],[419,9,336,9],[419,10,336,10],[420,8,337,8],[420,15,337,15,"tslib_1"],[420,22,337,22],[420,23,337,23,"__awaiter"],[420,32,337,32],[420,33,337,33],[420,37,337,37],[420,39,337,39],[420,44,337,44],[420,45,337,45],[420,47,337,47],[420,52,337,52],[420,53,337,53],[420,55,337,55],[420,68,337,68],[421,10,338,12],[421,17,338,19,"_super"],[421,23,338,25],[421,24,338,26,"queryVectors"],[421,36,338,38],[421,37,338,39,"call"],[421,41,338,43],[421,42,338,44],[421,46,338,48],[421,48,338,50,"Object"],[421,54,338,56],[421,55,338,57,"assign"],[421,61,338,63],[421,62,338,64,"Object"],[421,68,338,70],[421,69,338,71,"assign"],[421,75,338,77],[421,76,338,78],[421,77,338,79],[421,78,338,80],[421,80,338,82,"options"],[421,87,338,89],[421,88,338,90],[421,90,338,92],[422,12,338,94,"vectorBucketName"],[422,28,338,110],[422,30,338,112],[422,34,338,116],[422,35,338,117,"vectorBucketName"],[422,51,338,133],[423,12,338,135,"indexName"],[423,21,338,144],[423,23,338,146],[423,27,338,150],[423,28,338,151,"indexName"],[424,10,338,161],[424,11,338,162],[424,12,338,163],[424,13,338,164],[425,8,339,8],[425,9,339,9],[425,10,339,10],[426,6,340,4],[427,6,341,4],[428,0,342,0],[429,0,343,0],[430,0,344,0],[431,0,345,0],[432,0,346,0],[433,0,347,0],[434,0,348,0],[435,0,349,0],[436,0,350,0],[437,0,351,0],[438,0,352,0],[439,0,353,0],[440,0,354,0],[441,0,355,0],[442,4,341,4],[443,6,341,4,"key"],[443,9,341,4],[444,6,341,4,"value"],[444,11,341,4],[444,13,356,4],[444,22,356,4,"deleteVectors"],[444,35,356,17,"deleteVectors"],[444,36,356,18,"options"],[444,43,356,25],[444,45,356,27],[445,8,357,8],[445,12,357,14,"_super"],[445,18,357,20],[445,21,357,23,"Object"],[445,27,357,29],[445,28,357,30,"create"],[445,34,357,36],[445,35,357,37],[445,39,357,41],[445,41,357,43],[446,10,358,12,"deleteVectors"],[446,23,358,25],[446,25,358,27],[447,12,358,29,"get"],[447,15,358,32],[447,17,358,34,"get"],[447,18,358,34],[447,23,358,34,"_superPropGet"],[447,36,358,34],[447,37,358,34,"VectorIndexScope"],[447,53,358,34],[448,10,358,60],[449,8,359,8],[449,9,359,9],[449,10,359,10],[450,8,360,8],[450,15,360,15,"tslib_1"],[450,22,360,22],[450,23,360,23,"__awaiter"],[450,32,360,32],[450,33,360,33],[450,37,360,37],[450,39,360,39],[450,44,360,44],[450,45,360,45],[450,47,360,47],[450,52,360,52],[450,53,360,53],[450,55,360,55],[450,68,360,68],[451,10,361,12],[451,17,361,19,"_super"],[451,23,361,25],[451,24,361,26,"deleteVectors"],[451,37,361,39],[451,38,361,40,"call"],[451,42,361,44],[451,43,361,45],[451,47,361,49],[451,49,361,51,"Object"],[451,55,361,57],[451,56,361,58,"assign"],[451,62,361,64],[451,63,361,65,"Object"],[451,69,361,71],[451,70,361,72,"assign"],[451,76,361,78],[451,77,361,79],[451,78,361,80],[451,79,361,81],[451,81,361,83,"options"],[451,88,361,90],[451,89,361,91],[451,91,361,93],[452,12,361,95,"vectorBucketName"],[452,28,361,111],[452,30,361,113],[452,34,361,117],[452,35,361,118,"vectorBucketName"],[452,51,361,134],[453,12,361,136,"indexName"],[453,21,361,145],[453,23,361,147],[453,27,361,151],[453,28,361,152,"indexName"],[454,10,361,162],[454,11,361,163],[454,12,361,164],[454,13,361,165],[455,8,362,8],[455,9,362,9],[455,10,362,10],[456,6,363,4],[457,4,363,5],[458,2,363,5],[458,4,231,31,"VectorDataApi_1"],[458,19,231,46],[458,20,231,47,"default"],[458,27,231,54],[459,2,365,0,"exports"],[459,9,365,7],[459,10,365,8,"VectorIndexScope"],[459,26,365,24],[459,29,365,27,"VectorIndexScope"],[459,45,365,43],[460,0,365,44],[460,3]],"functionMap":{"names":["<global>","StorageVectorsClient","constructor","from","VectorBucketScope","VectorBucketScope#constructor","VectorBucketScope#createIndex","Object.create$argument_1.createIndex.get","tslib_1.__awaiter$argument_3","VectorBucketScope#listIndexes","Object.create$argument_1.listIndexes.get","VectorBucketScope#getIndex","Object.create$argument_1.getIndex.get","VectorBucketScope#deleteIndex","Object.create$argument_1.deleteIndex.get","VectorBucketScope#index","VectorIndexScope","VectorIndexScope#constructor","VectorIndexScope#putVectors","Object.create$argument_1.putVectors.get","VectorIndexScope#getVectors","Object.create$argument_1.getVectors.get","VectorIndexScope#listVectors","Object.create$argument_1.listVectors.get","VectorIndexScope#queryVectors","Object.create$argument_1.queryVectors.get","VectorIndexScope#deleteVectors","Object.create$argument_1.deleteVectors.get"],"mappings":"AAA;AC8D;ICC;KDE;IEwB;KFE;CDC;AIM;ICC;KDG;IEsB;gCCE,uBD;uDEE;SFE;KFC;IKc;gCCE,uBD;0DDE;SCE;KLC;IOe;6BCE,oBD;uDHE;SGE;KPC;ISc;gCCE,uBD;uDLE;SKE;KTC;IW0B;KXE;CJC;AgBM;ICC;KDI;IEsB;+BCE,sBD;uDVE;SUE;KFC;IIiB;+BCE,sBD;uDZE;SYE;KJC;IMiB;gCCE,uBD;0DdE;ScE;KNC;IQoB;iCCE,wBD;uDhBE;SgBE;KRC;IUgB;kCCE,yBD;uDlBE;SkBE;KVC;ChBC"}},"type":"js/module"}]}